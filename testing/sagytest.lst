     1                                  %define T_void 				0
     2                                  %define T_nil 				1
     3                                  %define T_char 				2
     4                                  %define T_string 			3
     5                                  %define T_symbol 			4
     6                                  %define T_closure 			5
     7                                  %define T_boolean 			8
     8                                  %define T_boolean_false 		(T_boolean | 1)
     9                                  %define T_boolean_true 			(T_boolean | 2)
    10                                  %define T_number 			16
    11                                  %define T_rational 			(T_number | 1)
    12                                  %define T_real 				(T_number | 2)
    13                                  %define T_collection 			32
    14                                  %define T_pair 				(T_collection | 1)
    15                                  %define T_vector 			(T_collection | 2)
    16                                  
    17                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    18                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    19                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    20                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    21                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    22                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    23                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    24                                  
    25                                  %define OLD_RDP 			qword [rbp]
    26                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    27                                  %define ENV 				qword [rbp + 8 * 2]
    28                                  %define COUNT 				qword [rbp + 8 * 3]
    29                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    30                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    31                                  
    32                                  %macro ENTER 0
    33                                  	enter 0, 0
    34                                  	and rsp, ~15
    35                                  %endmacro
    36                                  
    37                                  %macro LEAVE 0
    38                                  	leave
    39                                  %endmacro
    40                                  
    41                                  %macro assert_type 2
    42                                          cmp byte [%1], %2
    43                                          jne L_error_incorrect_type
    44                                  %endmacro
    45                                  
    46                                  %macro assert_type_integer 1
    47                                          assert_rational(%1)
    48                                          cmp qword [%1 + 1 + 8], 1
    49                                          jne L_error_incorrect_type
    50                                  %endmacro
    51                                  
    52                                  %define assert_void(reg)		assert_type reg, T_void
    53                                  %define assert_nil(reg)			assert_type reg, T_nil
    54                                  %define assert_char(reg)		assert_type reg, T_char
    55                                  %define assert_string(reg)		assert_type reg, T_string
    56                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    57                                  %define assert_closure(reg)		assert_type reg, T_closure
    58                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    59                                  %define assert_rational(reg)		assert_type reg, T_rational
    60                                  %define assert_integer(reg)		assert_type_integer reg
    61                                  %define assert_real(reg)		assert_type reg, T_real
    62                                  %define assert_pair(reg)		assert_type reg, T_pair
    63                                  %define assert_vector(reg)		assert_type reg, T_vector
    64                                  
    65                                  %define sob_void			(L_constants + 0)
    66                                  %define sob_nil				(L_constants + 1)
    67                                  %define sob_boolean_false		(L_constants + 2)
    68                                  %define sob_boolean_true		(L_constants + 3)
    69                                  %define sob_char_nul			(L_constants + 4)
    70                                  
    71                                  %define bytes(n)			(n)
    72                                  %define kbytes(n) 			(bytes(n) << 10)
    73                                  %define mbytes(n) 			(kbytes(n) << 10)
    74                                  %define gbytes(n) 			(mbytes(n) << 10)
    75                                  
    76                                  section .data
    77                                  L_constants:
    78 00000000 00                      	db T_void
    79 00000001 01                      	db T_nil
    80 00000002 09                      	db T_boolean_false
    81 00000003 0A                      	db T_boolean_true
    82 00000004 0200                    	db T_char, 0x00	; #\x0
    83 00000006 03                      	db T_string	; "ranover"
    84 00000007 0700000000000000        	dq 7
    85 0000000F 72616E6F766572          	db 0x72, 0x61, 0x6E, 0x6F, 0x76, 0x65, 0x72
    86 00000016 04                      	db T_symbol	; ranover
    87 00000017 [0600000000000000]      	dq L_constants + 6
    88 0000001F 11                      	db T_rational	; 0
    89 00000020 000000000000000001-     	dq 0, 1
    89 00000029 00000000000000     
    90 00000030 03                      	db T_string	; "+"
    91 00000031 0100000000000000        	dq 1
    92 00000039 2B                      	db 0x2B
    93 0000003A 04                      	db T_symbol	; +
    94 0000003B [3000000000000000]      	dq L_constants + 48
    95 00000043 03                      	db T_string	; "all arguments need ...
    96 00000044 2000000000000000        	dq 32
    97 0000004C 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
    98 00000054 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
    99 0000005C 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   100 00000064 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   101 0000006C 03                      	db T_string	; "-"
   102 0000006D 0100000000000000        	dq 1
   103 00000075 2D                      	db 0x2D
   104 00000076 04                      	db T_symbol	; -
   105 00000077 [6C00000000000000]      	dq L_constants + 108
   106 0000007F 11                      	db T_rational	; 1
   107 00000080 010000000000000001-     	dq 1, 1
   107 00000089 00000000000000     
   108 00000090 03                      	db T_string	; "*"
   109 00000091 0100000000000000        	dq 1
   110 00000099 2A                      	db 0x2A
   111 0000009A 04                      	db T_symbol	; *
   112 0000009B [9000000000000000]      	dq L_constants + 144
   113 000000A3 03                      	db T_string	; "/"
   114 000000A4 0100000000000000        	dq 1
   115 000000AC 2F                      	db 0x2F
   116 000000AD 04                      	db T_symbol	; /
   117 000000AE [A300000000000000]      	dq L_constants + 163
   118 000000B6 03                      	db T_string	; "generic-comparator"
   119 000000B7 1200000000000000        	dq 18
   120 000000BF 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   121 000000C7 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   122 000000CF 6F72                    	db 0x6F, 0x72
   123 000000D1 04                      	db T_symbol	; generic-comparator
   124 000000D2 [B600000000000000]      	dq L_constants + 182
   125 000000DA 03                      	db T_string	; "all the arguments m...
   126 000000DB 2100000000000000        	dq 33
   127 000000E3 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   128 000000EB 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   129 000000F3 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   130 000000FB 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   131 00000103 73                      	db 0x73
   132 00000104 03                      	db T_string	; "make-list"
   133 00000105 0900000000000000        	dq 9
   134 0000010D 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   135 00000115 74                      	db 0x74
   136 00000116 04                      	db T_symbol	; make-list
   137 00000117 [0401000000000000]      	dq L_constants + 260
   138 0000011F 03                      	db T_string	; "Usage: (make-list l...
   139 00000120 2D00000000000000        	dq 45
   140 00000128 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   141 00000130 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   142 00000138 74206C656E677468        	db 0x74, 0x20, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   143 00000140 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   144 00000148 616C2D696E69742D        	db 0x61, 0x6C, 0x2D, 0x69, 0x6E, 0x69, 0x74, 0x2D
   145 00000150 6368617229              	db 0x63, 0x68, 0x61, 0x72, 0x29
   146 00000155 0241                    	db T_char, 0x41	; #\A
   147 00000157 025A                    	db T_char, 0x5A	; #\Z
   148 00000159 0261                    	db T_char, 0x61	; #\a
   149 0000015B 027A                    	db T_char, 0x7A	; #\z
   150 0000015D 03                      	db T_string	; "make-vector"
   151 0000015E 0B00000000000000        	dq 11
   152 00000166 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   153 0000016E 746F72                  	db 0x74, 0x6F, 0x72
   154 00000171 04                      	db T_symbol	; make-vector
   155 00000172 [5D01000000000000]      	dq L_constants + 349
   156 0000017A 03                      	db T_string	; "Usage: (make-vector...
   157 0000017B 2B00000000000000        	dq 43
   158 00000183 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   159 0000018B 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   160 00000193 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   161 0000019B 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   162 000001A3 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   163 000001AB 6C7429                  	db 0x6C, 0x74, 0x29
   164 000001AE 03                      	db T_string	; "make-string"
   165 000001AF 0B00000000000000        	dq 11
   166 000001B7 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   167 000001BF 696E67                  	db 0x69, 0x6E, 0x67
   168 000001C2 04                      	db T_symbol	; make-string
   169 000001C3 [AE01000000000000]      	dq L_constants + 430
   170 000001CB 03                      	db T_string	; "Usage: (make-string...
   171 000001CC 2B00000000000000        	dq 43
   172 000001D4 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   173 000001DC 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   174 000001E4 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   175 000001EC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   176 000001F4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   177 000001FC 6C7429                  	db 0x6C, 0x74, 0x29
   178 000001FF 11                      	db T_rational	; 2
   179 00000200 020000000000000001-     	dq 2, 1
   179 00000209 00000000000000     
   180 00000210 11                      	db T_rational	; 3
   181 00000211 030000000000000001-     	dq 3, 1
   181 0000021A 00000000000000     
   182 00000221 11                      	db T_rational	; 4
   183 00000222 040000000000000001-     	dq 4, 1
   183 0000022B 00000000000000     
   184 00000232 11                      	db T_rational	; 5
   185 00000233 050000000000000001-     	dq 5, 1
   185 0000023C 00000000000000     
   186 00000243 21                      	db T_pair	; (5)
   187 00000244 [3202000000000000]-     	dq L_constants + 562, L_constants + 1
   187 0000024C [0100000000000000] 
   188 00000254 21                      	db T_pair	; (4 5)
   189 00000255 [2102000000000000]-     	dq L_constants + 545, L_constants + 579
   189 0000025D [4302000000000000] 
   190 00000265 21                      	db T_pair	; (3 4 5)
   191 00000266 [1002000000000000]-     	dq L_constants + 528, L_constants + 596
   191 0000026E [5402000000000000] 
   192 00000276 21                      	db T_pair	; (2 3 4 5)
   193 00000277 [FF01000000000000]-     	dq L_constants + 511, L_constants + 613
   193 0000027F [6502000000000000] 
   194 00000287 21                      	db T_pair	; (1 2 3 4 5)
   195 00000288 [7F00000000000000]-     	dq L_constants + 127, L_constants + 630
   195 00000290 [7602000000000000] 
   196                                  
   197                                  section .bss
   198                                  free_var_0:	; location of null?
   199 00000000 <res 00000008>          	resq 1
   200                                  free_var_1:	; location of pair?
   201 00000008 <res 00000008>          	resq 1
   202                                  free_var_2:	; location of void?
   203 00000010 <res 00000008>          	resq 1
   204                                  free_var_3:	; location of char?
   205 00000018 <res 00000008>          	resq 1
   206                                  free_var_4:	; location of string?
   207 00000020 <res 00000008>          	resq 1
   208                                  free_var_5:	; location of symbol?
   209 00000028 <res 00000008>          	resq 1
   210                                  free_var_6:	; location of vector?
   211 00000030 <res 00000008>          	resq 1
   212                                  free_var_7:	; location of procedure?
   213 00000038 <res 00000008>          	resq 1
   214                                  free_var_8:	; location of real?
   215 00000040 <res 00000008>          	resq 1
   216                                  free_var_9:	; location of rational?
   217 00000048 <res 00000008>          	resq 1
   218                                  free_var_10:	; location of boolean?
   219 00000050 <res 00000008>          	resq 1
   220                                  free_var_11:	; location of number?
   221 00000058 <res 00000008>          	resq 1
   222                                  free_var_12:	; location of collection?
   223 00000060 <res 00000008>          	resq 1
   224                                  free_var_13:	; location of cons
   225 00000068 <res 00000008>          	resq 1
   226                                  free_var_14:	; location of display-sexpr
   227 00000070 <res 00000008>          	resq 1
   228                                  free_var_15:	; location of write-char
   229 00000078 <res 00000008>          	resq 1
   230                                  free_var_16:	; location of car
   231 00000080 <res 00000008>          	resq 1
   232                                  free_var_17:	; location of cdr
   233 00000088 <res 00000008>          	resq 1
   234                                  free_var_18:	; location of string-length
   235 00000090 <res 00000008>          	resq 1
   236                                  free_var_19:	; location of vector-length
   237 00000098 <res 00000008>          	resq 1
   238                                  free_var_20:	; location of real->integer
   239 000000A0 <res 00000008>          	resq 1
   240                                  free_var_21:	; location of exit
   241 000000A8 <res 00000008>          	resq 1
   242                                  free_var_22:	; location of integer->real
   243 000000B0 <res 00000008>          	resq 1
   244                                  free_var_23:	; location of rational->real
   245 000000B8 <res 00000008>          	resq 1
   246                                  free_var_24:	; location of char->integer
   247 000000C0 <res 00000008>          	resq 1
   248                                  free_var_25:	; location of integer->char
   249 000000C8 <res 00000008>          	resq 1
   250                                  free_var_26:	; location of trng
   251 000000D0 <res 00000008>          	resq 1
   252                                  free_var_27:	; location of zero?
   253 000000D8 <res 00000008>          	resq 1
   254                                  free_var_28:	; location of integer?
   255 000000E0 <res 00000008>          	resq 1
   256                                  free_var_29:	; location of __bin-apply
   257 000000E8 <res 00000008>          	resq 1
   258                                  free_var_30:	; location of __bin-add-rr
   259 000000F0 <res 00000008>          	resq 1
   260                                  free_var_31:	; location of __bin-sub-rr
   261 000000F8 <res 00000008>          	resq 1
   262                                  free_var_32:	; location of __bin-mul-rr
   263 00000100 <res 00000008>          	resq 1
   264                                  free_var_33:	; location of __bin-div-rr
   265 00000108 <res 00000008>          	resq 1
   266                                  free_var_34:	; location of __bin-add-qq
   267 00000110 <res 00000008>          	resq 1
   268                                  free_var_35:	; location of __bin-sub-qq
   269 00000118 <res 00000008>          	resq 1
   270                                  free_var_36:	; location of __bin-mul-qq
   271 00000120 <res 00000008>          	resq 1
   272                                  free_var_37:	; location of __bin-div-qq
   273 00000128 <res 00000008>          	resq 1
   274                                  free_var_38:	; location of error
   275 00000130 <res 00000008>          	resq 1
   276                                  free_var_39:	; location of __bin-less-than-rr
   277 00000138 <res 00000008>          	resq 1
   278                                  free_var_40:	; location of __bin-less-than-qq
   279 00000140 <res 00000008>          	resq 1
   280                                  free_var_41:	; location of __bin-equal-rr
   281 00000148 <res 00000008>          	resq 1
   282                                  free_var_42:	; location of __bin-equal-qq
   283 00000150 <res 00000008>          	resq 1
   284                                  free_var_43:	; location of quotient
   285 00000158 <res 00000008>          	resq 1
   286                                  free_var_44:	; location of remainder
   287 00000160 <res 00000008>          	resq 1
   288                                  free_var_45:	; location of set-car!
   289 00000168 <res 00000008>          	resq 1
   290                                  free_var_46:	; location of set-cdr!
   291 00000170 <res 00000008>          	resq 1
   292                                  free_var_47:	; location of string-ref
   293 00000178 <res 00000008>          	resq 1
   294                                  free_var_48:	; location of vector-ref
   295 00000180 <res 00000008>          	resq 1
   296                                  free_var_49:	; location of vector-set!
   297 00000188 <res 00000008>          	resq 1
   298                                  free_var_50:	; location of string-set!
   299 00000190 <res 00000008>          	resq 1
   300                                  free_var_51:	; location of make-vector
   301 00000198 <res 00000008>          	resq 1
   302                                  free_var_52:	; location of make-string
   303 000001A0 <res 00000008>          	resq 1
   304                                  free_var_53:	; location of numerator
   305 000001A8 <res 00000008>          	resq 1
   306                                  free_var_54:	; location of denominator
   307 000001B0 <res 00000008>          	resq 1
   308                                  free_var_55:	; location of eq?
   309 000001B8 <res 00000008>          	resq 1
   310                                  free_var_56:	; location of caar
   311 000001C0 <res 00000008>          	resq 1
   312                                  free_var_57:	; location of cadr
   313 000001C8 <res 00000008>          	resq 1
   314                                  free_var_58:	; location of cdar
   315 000001D0 <res 00000008>          	resq 1
   316                                  free_var_59:	; location of cddr
   317 000001D8 <res 00000008>          	resq 1
   318                                  free_var_60:	; location of caaar
   319 000001E0 <res 00000008>          	resq 1
   320                                  free_var_61:	; location of caadr
   321 000001E8 <res 00000008>          	resq 1
   322                                  free_var_62:	; location of cadar
   323 000001F0 <res 00000008>          	resq 1
   324                                  free_var_63:	; location of caddr
   325 000001F8 <res 00000008>          	resq 1
   326                                  free_var_64:	; location of cdaar
   327 00000200 <res 00000008>          	resq 1
   328                                  free_var_65:	; location of cdadr
   329 00000208 <res 00000008>          	resq 1
   330                                  free_var_66:	; location of cddar
   331 00000210 <res 00000008>          	resq 1
   332                                  free_var_67:	; location of cdddr
   333 00000218 <res 00000008>          	resq 1
   334                                  free_var_68:	; location of caaaar
   335 00000220 <res 00000008>          	resq 1
   336                                  free_var_69:	; location of caaadr
   337 00000228 <res 00000008>          	resq 1
   338                                  free_var_70:	; location of caadar
   339 00000230 <res 00000008>          	resq 1
   340                                  free_var_71:	; location of caaddr
   341 00000238 <res 00000008>          	resq 1
   342                                  free_var_72:	; location of cadaar
   343 00000240 <res 00000008>          	resq 1
   344                                  free_var_73:	; location of cadadr
   345 00000248 <res 00000008>          	resq 1
   346                                  free_var_74:	; location of caddar
   347 00000250 <res 00000008>          	resq 1
   348                                  free_var_75:	; location of cadddr
   349 00000258 <res 00000008>          	resq 1
   350                                  free_var_76:	; location of cdaaar
   351 00000260 <res 00000008>          	resq 1
   352                                  free_var_77:	; location of cdaadr
   353 00000268 <res 00000008>          	resq 1
   354                                  free_var_78:	; location of cdadar
   355 00000270 <res 00000008>          	resq 1
   356                                  free_var_79:	; location of cdaddr
   357 00000278 <res 00000008>          	resq 1
   358                                  free_var_80:	; location of cddaar
   359 00000280 <res 00000008>          	resq 1
   360                                  free_var_81:	; location of cddadr
   361 00000288 <res 00000008>          	resq 1
   362                                  free_var_82:	; location of cdddar
   363 00000290 <res 00000008>          	resq 1
   364                                  free_var_83:	; location of cddddr
   365 00000298 <res 00000008>          	resq 1
   366                                  free_var_84:	; location of list?
   367 000002A0 <res 00000008>          	resq 1
   368                                  free_var_85:	; location of list
   369 000002A8 <res 00000008>          	resq 1
   370                                  free_var_86:	; location of not
   371 000002B0 <res 00000008>          	resq 1
   372                                  free_var_87:	; location of fraction?
   373 000002B8 <res 00000008>          	resq 1
   374                                  free_var_88:	; location of list*
   375 000002C0 <res 00000008>          	resq 1
   376                                  free_var_89:	; location of apply
   377 000002C8 <res 00000008>          	resq 1
   378                                  free_var_90:	; location of ormap
   379 000002D0 <res 00000008>          	resq 1
   380                                  free_var_91:	; location of map
   381 000002D8 <res 00000008>          	resq 1
   382                                  free_var_92:	; location of andmap
   383 000002E0 <res 00000008>          	resq 1
   384                                  free_var_93:	; location of reverse
   385 000002E8 <res 00000008>          	resq 1
   386                                  free_var_94:	; location of append
   387 000002F0 <res 00000008>          	resq 1
   388                                  free_var_95:	; location of fold-left
   389 000002F8 <res 00000008>          	resq 1
   390                                  free_var_96:	; location of fold-right
   391 00000300 <res 00000008>          	resq 1
   392                                  free_var_97:	; location of +
   393 00000308 <res 00000008>          	resq 1
   394                                  free_var_98:	; location of -
   395 00000310 <res 00000008>          	resq 1
   396                                  free_var_99:	; location of *
   397 00000318 <res 00000008>          	resq 1
   398                                  free_var_100:	; location of /
   399 00000320 <res 00000008>          	resq 1
   400                                  free_var_101:	; location of fact
   401 00000328 <res 00000008>          	resq 1
   402                                  free_var_102:	; location of <
   403 00000330 <res 00000008>          	resq 1
   404                                  free_var_103:	; location of <=
   405 00000338 <res 00000008>          	resq 1
   406                                  free_var_104:	; location of >
   407 00000340 <res 00000008>          	resq 1
   408                                  free_var_105:	; location of >=
   409 00000348 <res 00000008>          	resq 1
   410                                  free_var_106:	; location of =
   411 00000350 <res 00000008>          	resq 1
   412                                  free_var_107:	; location of make-list
   413 00000358 <res 00000008>          	resq 1
   414                                  free_var_108:	; location of char<?
   415 00000360 <res 00000008>          	resq 1
   416                                  free_var_109:	; location of char<=?
   417 00000368 <res 00000008>          	resq 1
   418                                  free_var_110:	; location of char=?
   419 00000370 <res 00000008>          	resq 1
   420                                  free_var_111:	; location of char>?
   421 00000378 <res 00000008>          	resq 1
   422                                  free_var_112:	; location of char>=?
   423 00000380 <res 00000008>          	resq 1
   424                                  free_var_113:	; location of char-downcase
   425 00000388 <res 00000008>          	resq 1
   426                                  free_var_114:	; location of char-upcase
   427 00000390 <res 00000008>          	resq 1
   428                                  free_var_115:	; location of char-ci<?
   429 00000398 <res 00000008>          	resq 1
   430                                  free_var_116:	; location of char-ci<=?
   431 000003A0 <res 00000008>          	resq 1
   432                                  free_var_117:	; location of char-ci=?
   433 000003A8 <res 00000008>          	resq 1
   434                                  free_var_118:	; location of char-ci>?
   435 000003B0 <res 00000008>          	resq 1
   436                                  free_var_119:	; location of char-ci>=?
   437 000003B8 <res 00000008>          	resq 1
   438                                  free_var_120:	; location of string-downcase
   439 000003C0 <res 00000008>          	resq 1
   440                                  free_var_121:	; location of string-upcase
   441 000003C8 <res 00000008>          	resq 1
   442                                  free_var_122:	; location of list->string
   443 000003D0 <res 00000008>          	resq 1
   444                                  free_var_123:	; location of string->list
   445 000003D8 <res 00000008>          	resq 1
   446                                  free_var_124:	; location of string<?
   447 000003E0 <res 00000008>          	resq 1
   448                                  free_var_125:	; location of string<=?
   449 000003E8 <res 00000008>          	resq 1
   450                                  free_var_126:	; location of string=?
   451 000003F0 <res 00000008>          	resq 1
   452                                  free_var_127:	; location of string>=?
   453 000003F8 <res 00000008>          	resq 1
   454                                  free_var_128:	; location of string>?
   455 00000400 <res 00000008>          	resq 1
   456                                  free_var_129:	; location of string-ci<?
   457 00000408 <res 00000008>          	resq 1
   458                                  free_var_130:	; location of string-ci<=?
   459 00000410 <res 00000008>          	resq 1
   460                                  free_var_131:	; location of string-ci=?
   461 00000418 <res 00000008>          	resq 1
   462                                  free_var_132:	; location of string-ci>=?
   463 00000420 <res 00000008>          	resq 1
   464                                  free_var_133:	; location of string-ci>?
   465 00000428 <res 00000008>          	resq 1
   466                                  free_var_134:	; location of length
   467 00000430 <res 00000008>          	resq 1
   468                                  free_var_135:	; location of list->vector
   469 00000438 <res 00000008>          	resq 1
   470                                  free_var_136:	; location of vector
   471 00000440 <res 00000008>          	resq 1
   472                                  free_var_137:	; location of vector->list
   473 00000448 <res 00000008>          	resq 1
   474                                  free_var_138:	; location of random
   475 00000450 <res 00000008>          	resq 1
   476                                  free_var_139:	; location of positive?
   477 00000458 <res 00000008>          	resq 1
   478                                  free_var_140:	; location of negative?
   479 00000460 <res 00000008>          	resq 1
   480                                  free_var_141:	; location of even?
   481 00000468 <res 00000008>          	resq 1
   482                                  free_var_142:	; location of odd?
   483 00000470 <res 00000008>          	resq 1
   484                                  free_var_143:	; location of abs
   485 00000478 <res 00000008>          	resq 1
   486                                  free_var_144:	; location of equal?
   487 00000480 <res 00000008>          	resq 1
   488                                  free_var_145:	; location of assoc
   489 00000488 <res 00000008>          	resq 1
   490                                  
   491                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar
   492                                  global main
   493                                  section .text
   494                                  main:
   495 00000000 C8000000                        enter 0, 0
   496                                          
   497                                  	; building closure for null?
   498 00000004 48BF-                   	mov rdi, free_var_0
   498 00000006 [0000000000000000] 
   499 0000000E 48BE-                   	mov rsi, L_code_ptr_is_null
   499 00000010 [B52E010000000000] 
   500 00000018 E8BB2D0100              	call bind_primitive
   501                                  
   502                                  	; building closure for pair?
   503 0000001D 48BF-                   	mov rdi, free_var_1
   503 0000001F [0800000000000000] 
   504 00000027 48BE-                   	mov rsi, L_code_ptr_is_pair
   504 00000029 [EB2E010000000000] 
   505 00000031 E8A22D0100              	call bind_primitive
   506                                  
   507                                  	; building closure for void?
   508 00000036 48BF-                   	mov rdi, free_var_2
   508 00000038 [1000000000000000] 
   509 00000040 48BE-                   	mov rsi, L_code_ptr_is_void
   509 00000042 [212F010000000000] 
   510 0000004A E8892D0100              	call bind_primitive
   511                                  
   512                                  	; building closure for char?
   513 0000004F 48BF-                   	mov rdi, free_var_3
   513 00000051 [1800000000000000] 
   514 00000059 48BE-                   	mov rsi, L_code_ptr_is_char
   514 0000005B [572F010000000000] 
   515 00000063 E8702D0100              	call bind_primitive
   516                                  
   517                                  	; building closure for string?
   518 00000068 48BF-                   	mov rdi, free_var_4
   518 0000006A [2000000000000000] 
   519 00000072 48BE-                   	mov rsi, L_code_ptr_is_string
   519 00000074 [8D2F010000000000] 
   520 0000007C E8572D0100              	call bind_primitive
   521                                  
   522                                  	; building closure for symbol?
   523 00000081 48BF-                   	mov rdi, free_var_5
   523 00000083 [2800000000000000] 
   524 0000008B 48BE-                   	mov rsi, L_code_ptr_is_symbol
   524 0000008D [C32F010000000000] 
   525 00000095 E83E2D0100              	call bind_primitive
   526                                  
   527                                  	; building closure for vector?
   528 0000009A 48BF-                   	mov rdi, free_var_6
   528 0000009C [3000000000000000] 
   529 000000A4 48BE-                   	mov rsi, L_code_ptr_is_vector
   529 000000A6 [F92F010000000000] 
   530 000000AE E8252D0100              	call bind_primitive
   531                                  
   532                                  	; building closure for procedure?
   533 000000B3 48BF-                   	mov rdi, free_var_7
   533 000000B5 [3800000000000000] 
   534 000000BD 48BE-                   	mov rsi, L_code_ptr_is_closure
   534 000000BF [2F30010000000000] 
   535 000000C7 E80C2D0100              	call bind_primitive
   536                                  
   537                                  	; building closure for real?
   538 000000CC 48BF-                   	mov rdi, free_var_8
   538 000000CE [4000000000000000] 
   539 000000D6 48BE-                   	mov rsi, L_code_ptr_is_real
   539 000000D8 [6530010000000000] 
   540 000000E0 E8F32C0100              	call bind_primitive
   541                                  
   542                                  	; building closure for rational?
   543 000000E5 48BF-                   	mov rdi, free_var_9
   543 000000E7 [4800000000000000] 
   544 000000EF 48BE-                   	mov rsi, L_code_ptr_is_rational
   544 000000F1 [9B30010000000000] 
   545 000000F9 E8DA2C0100              	call bind_primitive
   546                                  
   547                                  	; building closure for boolean?
   548 000000FE 48BF-                   	mov rdi, free_var_10
   548 00000100 [5000000000000000] 
   549 00000108 48BE-                   	mov rsi, L_code_ptr_is_boolean
   549 0000010A [D130010000000000] 
   550 00000112 E8C12C0100              	call bind_primitive
   551                                  
   552                                  	; building closure for number?
   553 00000117 48BF-                   	mov rdi, free_var_11
   553 00000119 [5800000000000000] 
   554 00000121 48BE-                   	mov rsi, L_code_ptr_is_number
   554 00000123 [0931010000000000] 
   555 0000012B E8A82C0100              	call bind_primitive
   556                                  
   557                                  	; building closure for collection?
   558 00000130 48BF-                   	mov rdi, free_var_12
   558 00000132 [6000000000000000] 
   559 0000013A 48BE-                   	mov rsi, L_code_ptr_is_collection
   559 0000013C [4131010000000000] 
   560 00000144 E88F2C0100              	call bind_primitive
   561                                  
   562                                  	; building closure for cons
   563 00000149 48BF-                   	mov rdi, free_var_13
   563 0000014B [6800000000000000] 
   564 00000153 48BE-                   	mov rsi, L_code_ptr_cons
   564 00000155 [7931010000000000] 
   565 0000015D E8762C0100              	call bind_primitive
   566                                  
   567                                  	; building closure for display-sexpr
   568 00000162 48BF-                   	mov rdi, free_var_14
   568 00000164 [7000000000000000] 
   569 0000016C 48BE-                   	mov rsi, L_code_ptr_display_sexpr
   569 0000016E [AD31010000000000] 
   570 00000176 E85D2C0100              	call bind_primitive
   571                                  
   572                                  	; building closure for write-char
   573 0000017B 48BF-                   	mov rdi, free_var_15
   573 0000017D [7800000000000000] 
   574 00000185 48BE-                   	mov rsi, L_code_ptr_write_char
   574 00000187 [D731010000000000] 
   575 0000018F E8442C0100              	call bind_primitive
   576                                  
   577                                  	; building closure for car
   578 00000194 48BF-                   	mov rdi, free_var_16
   578 00000196 [8000000000000000] 
   579 0000019E 48BE-                   	mov rsi, L_code_ptr_car
   579 000001A0 [2E32010000000000] 
   580 000001A8 E82B2C0100              	call bind_primitive
   581                                  
   582                                  	; building closure for cdr
   583 000001AD 48BF-                   	mov rdi, free_var_17
   583 000001AF [8800000000000000] 
   584 000001B7 48BE-                   	mov rsi, L_code_ptr_cdr
   584 000001B9 [5632010000000000] 
   585 000001C1 E8122C0100              	call bind_primitive
   586                                  
   587                                  	; building closure for string-length
   588 000001C6 48BF-                   	mov rdi, free_var_18
   588 000001C8 [9000000000000000] 
   589 000001D0 48BE-                   	mov rsi, L_code_ptr_string_length
   589 000001D2 [7E32010000000000] 
   590 000001DA E8F92B0100              	call bind_primitive
   591                                  
   592                                  	; building closure for vector-length
   593 000001DF 48BF-                   	mov rdi, free_var_19
   593 000001E1 [9800000000000000] 
   594 000001E9 48BE-                   	mov rsi, L_code_ptr_vector_length
   594 000001EB [AB32010000000000] 
   595 000001F3 E8E02B0100              	call bind_primitive
   596                                  
   597                                  	; building closure for real->integer
   598 000001F8 48BF-                   	mov rdi, free_var_20
   598 000001FA [A000000000000000] 
   599 00000202 48BE-                   	mov rsi, L_code_ptr_real_to_integer
   599 00000204 [D832010000000000] 
   600 0000020C E8C72B0100              	call bind_primitive
   601                                  
   602                                  	; building closure for exit
   603 00000211 48BF-                   	mov rdi, free_var_21
   603 00000213 [A800000000000000] 
   604 0000021B 48BE-                   	mov rsi, L_code_ptr_exit
   604 0000021D [0B33010000000000] 
   605 00000225 E8AE2B0100              	call bind_primitive
   606                                  
   607                                  	; building closure for integer->real
   608 0000022A 48BF-                   	mov rdi, free_var_22
   608 0000022C [B000000000000000] 
   609 00000234 48BE-                   	mov rsi, L_code_ptr_integer_to_real
   609 00000236 [2833010000000000] 
   610 0000023E E8952B0100              	call bind_primitive
   611                                  
   612                                  	; building closure for rational->real
   613 00000243 48BF-                   	mov rdi, free_var_23
   613 00000245 [B800000000000000] 
   614 0000024D 48BE-                   	mov rsi, L_code_ptr_rational_to_real
   614 0000024F [6533010000000000] 
   615 00000257 E87C2B0100              	call bind_primitive
   616                                  
   617                                  	; building closure for char->integer
   618 0000025C 48BF-                   	mov rdi, free_var_24
   618 0000025E [C000000000000000] 
   619 00000266 48BE-                   	mov rsi, L_code_ptr_char_to_integer
   619 00000268 [A433010000000000] 
   620 00000270 E8632B0100              	call bind_primitive
   621                                  
   622                                  	; building closure for integer->char
   623 00000275 48BF-                   	mov rdi, free_var_25
   623 00000277 [C800000000000000] 
   624 0000027F 48BE-                   	mov rsi, L_code_ptr_integer_to_char
   624 00000281 [D933010000000000] 
   625 00000289 E84A2B0100              	call bind_primitive
   626                                  
   627                                  	; building closure for trng
   628 0000028E 48BF-                   	mov rdi, free_var_26
   628 00000290 [D000000000000000] 
   629 00000298 48BE-                   	mov rsi, L_code_ptr_trng
   629 0000029A [3334010000000000] 
   630 000002A2 E8312B0100              	call bind_primitive
   631                                  
   632                                  	; building closure for zero?
   633 000002A7 48BF-                   	mov rdi, free_var_27
   633 000002A9 [D800000000000000] 
   634 000002B1 48BE-                   	mov rsi, L_code_ptr_is_zero
   634 000002B3 [5634010000000000] 
   635 000002BB E8182B0100              	call bind_primitive
   636                                  
   637                                  	; building closure for integer?
   638 000002C0 48BF-                   	mov rdi, free_var_28
   638 000002C2 [E000000000000000] 
   639 000002CA 48BE-                   	mov rsi, L_code_ptr_is_integer
   639 000002CC [B134010000000000] 
   640 000002D4 E8FF2A0100              	call bind_primitive
   641                                  
   642                                  	; building closure for __bin-apply
   643 000002D9 48BF-                   	mov rdi, free_var_29
   643 000002DB [E800000000000000] 
   644 000002E3 48BE-                   	mov rsi, L_code_ptr_bin_apply
   644 000002E5 [002E010000000000] 
   645 000002ED E8E62A0100              	call bind_primitive
   646                                  
   647                                  	; building closure for __bin-add-rr
   648 000002F2 48BF-                   	mov rdi, free_var_30
   648 000002F4 [F000000000000000] 
   649 000002FC 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
   649 000002FE [EE34010000000000] 
   650 00000306 E8CD2A0100              	call bind_primitive
   651                                  
   652                                  	; building closure for __bin-sub-rr
   653 0000030B 48BF-                   	mov rdi, free_var_31
   653 0000030D [F800000000000000] 
   654 00000315 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
   654 00000317 [3235010000000000] 
   655 0000031F E8B42A0100              	call bind_primitive
   656                                  
   657                                  	; building closure for __bin-mul-rr
   658 00000324 48BF-                   	mov rdi, free_var_32
   658 00000326 [0001000000000000] 
   659 0000032E 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
   659 00000330 [7635010000000000] 
   660 00000338 E89B2A0100              	call bind_primitive
   661                                  
   662                                  	; building closure for __bin-div-rr
   663 0000033D 48BF-                   	mov rdi, free_var_33
   663 0000033F [0801000000000000] 
   664 00000347 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
   664 00000349 [BA35010000000000] 
   665 00000351 E8822A0100              	call bind_primitive
   666                                  
   667                                  	; building closure for __bin-add-qq
   668 00000356 48BF-                   	mov rdi, free_var_34
   668 00000358 [1001000000000000] 
   669 00000360 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
   669 00000362 [0C36010000000000] 
   670 0000036A E8692A0100              	call bind_primitive
   671                                  
   672                                  	; building closure for __bin-sub-qq
   673 0000036F 48BF-                   	mov rdi, free_var_35
   673 00000371 [1801000000000000] 
   674 00000379 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
   674 0000037B [7436010000000000] 
   675 00000383 E8502A0100              	call bind_primitive
   676                                  
   677                                  	; building closure for __bin-mul-qq
   678 00000388 48BF-                   	mov rdi, free_var_36
   678 0000038A [2001000000000000] 
   679 00000392 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
   679 00000394 [DC36010000000000] 
   680 0000039C E8372A0100              	call bind_primitive
   681                                  
   682                                  	; building closure for __bin-div-qq
   683 000003A1 48BF-                   	mov rdi, free_var_37
   683 000003A3 [2801000000000000] 
   684 000003AB 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
   684 000003AD [3437010000000000] 
   685 000003B5 E81E2A0100              	call bind_primitive
   686                                  
   687                                  	; building closure for error
   688 000003BA 48BF-                   	mov rdi, free_var_38
   688 000003BC [3001000000000000] 
   689 000003C4 48BE-                   	mov rsi, L_code_ptr_error
   689 000003C6 [0238010000000000] 
   690 000003CE E8052A0100              	call bind_primitive
   691                                  
   692                                  	; building closure for __bin-less-than-rr
   693 000003D3 48BF-                   	mov rdi, free_var_39
   693 000003D5 [3801000000000000] 
   694 000003DD 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
   694 000003DF [B938010000000000] 
   695 000003E7 E8EC290100              	call bind_primitive
   696                                  
   697                                  	; building closure for __bin-less-than-qq
   698 000003EC 48BF-                   	mov rdi, free_var_40
   698 000003EE [4001000000000000] 
   699 000003F6 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
   699 000003F8 [1039010000000000] 
   700 00000400 E8D3290100              	call bind_primitive
   701                                  
   702                                  	; building closure for __bin-equal-rr
   703 00000405 48BF-                   	mov rdi, free_var_41
   703 00000407 [4801000000000000] 
   704 0000040F 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
   704 00000411 [7339010000000000] 
   705 00000419 E8BA290100              	call bind_primitive
   706                                  
   707                                  	; building closure for __bin-equal-qq
   708 0000041E 48BF-                   	mov rdi, free_var_42
   708 00000420 [5001000000000000] 
   709 00000428 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
   709 0000042A [CA39010000000000] 
   710 00000432 E8A1290100              	call bind_primitive
   711                                  
   712                                  	; building closure for quotient
   713 00000437 48BF-                   	mov rdi, free_var_43
   713 00000439 [5801000000000000] 
   714 00000441 48BE-                   	mov rsi, L_code_ptr_quotient
   714 00000443 [2D3A010000000000] 
   715 0000044B E888290100              	call bind_primitive
   716                                  
   717                                  	; building closure for remainder
   718 00000450 48BF-                   	mov rdi, free_var_44
   718 00000452 [6001000000000000] 
   719 0000045A 48BE-                   	mov rsi, L_code_ptr_remainder
   719 0000045C [933A010000000000] 
   720 00000464 E86F290100              	call bind_primitive
   721                                  
   722                                  	; building closure for set-car!
   723 00000469 48BF-                   	mov rdi, free_var_45
   723 0000046B [6801000000000000] 
   724 00000473 48BE-                   	mov rsi, L_code_ptr_set_car
   724 00000475 [F93A010000000000] 
   725 0000047D E856290100              	call bind_primitive
   726                                  
   727                                  	; building closure for set-cdr!
   728 00000482 48BF-                   	mov rdi, free_var_46
   728 00000484 [7001000000000000] 
   729 0000048C 48BE-                   	mov rsi, L_code_ptr_set_cdr
   729 0000048E [2F3B010000000000] 
   730 00000496 E83D290100              	call bind_primitive
   731                                  
   732                                  	; building closure for string-ref
   733 0000049B 48BF-                   	mov rdi, free_var_47
   733 0000049D [7801000000000000] 
   734 000004A5 48BE-                   	mov rsi, L_code_ptr_string_ref
   734 000004A7 [653B010000000000] 
   735 000004AF E824290100              	call bind_primitive
   736                                  
   737                                  	; building closure for vector-ref
   738 000004B4 48BF-                   	mov rdi, free_var_48
   738 000004B6 [8001000000000000] 
   739 000004BE 48BE-                   	mov rsi, L_code_ptr_vector_ref
   739 000004C0 [D03B010000000000] 
   740 000004C8 E80B290100              	call bind_primitive
   741                                  
   742                                  	; building closure for vector-set!
   743 000004CD 48BF-                   	mov rdi, free_var_49
   743 000004CF [8801000000000000] 
   744 000004D7 48BE-                   	mov rsi, L_code_ptr_vector_set
   744 000004D9 [2C3C010000000000] 
   745 000004E1 E8F2280100              	call bind_primitive
   746                                  
   747                                  	; building closure for string-set!
   748 000004E6 48BF-                   	mov rdi, free_var_50
   748 000004E8 [9001000000000000] 
   749 000004F0 48BE-                   	mov rsi, L_code_ptr_string_set
   749 000004F2 [963C010000000000] 
   750 000004FA E8D9280100              	call bind_primitive
   751                                  
   752                                  	; building closure for make-vector
   753 000004FF 48BF-                   	mov rdi, free_var_51
   753 00000501 [9801000000000000] 
   754 00000509 48BE-                   	mov rsi, L_code_ptr_make_vector
   754 0000050B [0B3D010000000000] 
   755 00000513 E8C0280100              	call bind_primitive
   756                                  
   757                                  	; building closure for make-string
   758 00000518 48BF-                   	mov rdi, free_var_52
   758 0000051A [A001000000000000] 
   759 00000522 48BE-                   	mov rsi, L_code_ptr_make_string
   759 00000524 [753D010000000000] 
   760 0000052C E8A7280100              	call bind_primitive
   761                                  
   762                                  	; building closure for numerator
   763 00000531 48BF-                   	mov rdi, free_var_53
   763 00000533 [A801000000000000] 
   764 0000053B 48BE-                   	mov rsi, L_code_ptr_numerator
   764 0000053D [E73D010000000000] 
   765 00000545 E88E280100              	call bind_primitive
   766                                  
   767                                  	; building closure for denominator
   768 0000054A 48BF-                   	mov rdi, free_var_54
   768 0000054C [B001000000000000] 
   769 00000554 48BE-                   	mov rsi, L_code_ptr_denominator
   769 00000556 [143E010000000000] 
   770 0000055E E875280100              	call bind_primitive
   771                                  
   772                                  	; building closure for eq?
   773 00000563 48BF-                   	mov rdi, free_var_55
   773 00000565 [B801000000000000] 
   774 0000056D 48BE-                   	mov rsi, L_code_ptr_eq
   774 0000056F [413E010000000000] 
   775 00000577 E85C280100              	call bind_primitive
   776                                  
   777 0000057C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   778 00000581 E8C1220100              	call malloc
   779 00000586 50                      	push rax
   780 00000587 BF00000000              	mov rdi, 8 * 0	; new rib
   781 0000058C E8B6220100              	call malloc
   782 00000591 50                      	push rax
   783 00000592 BF08000000              	mov rdi, 8 * 1	; extended env
   784 00000597 E8AB220100              	call malloc
   785 0000059C 488B7D10                	mov rdi, ENV
   786 000005A0 BE00000000              	mov rsi, 0
   787 000005A5 BA01000000              	mov rdx, 1
   788                                  .L_lambda_simple_env_loop_03ab:	; ext_env[i + 1] <-- env[i]
   789 000005AA 4883FE00                	cmp rsi, 0
   790 000005AE 7410                    	je .L_lambda_simple_env_end_03ab
   791 000005B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   792 000005B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
   793 000005B8 48FFC6                  	inc rsi
   794 000005BB 48FFC2                  	inc rdx
   795 000005BE EBEA                    	jmp .L_lambda_simple_env_loop_03ab
   796                                  .L_lambda_simple_env_end_03ab:
   797 000005C0 5B                      	pop rbx
   798 000005C1 BE00000000              	mov rsi, 0
   799                                  .L_lambda_simple_params_loop_03ab:	; copy params
   800 000005C6 4883FE00                	cmp rsi, 0
   801 000005CA 740E                    	je .L_lambda_simple_params_end_03ab
   802 000005CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   803 000005D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
   804 000005D5 48FFC6                  	inc rsi
   805 000005D8 EBEC                    	jmp .L_lambda_simple_params_loop_03ab
   806                                  .L_lambda_simple_params_end_03ab:
   807 000005DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   808 000005DD 4889C3                  	mov rbx, rax
   809 000005E0 58                      	pop rax
   810 000005E1 C60005                  	mov byte [rax], T_closure
   811 000005E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   812 000005E8 48C74009[F5050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ab
   813 000005F0 E9BC000000              	jmp .L_lambda_simple_end_03ab
   814                                  .L_lambda_simple_code_03ab:	; lambda-simple body
   815 000005F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
   816 000005FB 740B                    	je .L_lambda_simple_arity_check_ok_07f0
   817 000005FD FF742410                	push qword [rsp + 8 * 2]
   818 00000601 6A01                    	push 1
   819 00000603 E9F8210100              	jmp L_error_incorrect_arity_simple
   820                                  .L_lambda_simple_arity_check_ok_07f0:
   821 00000608 C8000000                	enter 0, 0
   822 0000060C 488B4520                mov rax, qword [rbp + 32]
   823 00000610 50                      	push rax
   824 00000611 6A01                    	push 1
   825 00000613 488B0425[80000000]      	mov rax, qword [free_var_16]
   826 0000061B 803805                  	cmp byte [rax], T_closure 
   827 0000061E 0F85DE310100                    jne L_code_ptr_error
   828                                  
   829 00000624 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
   830                                  
   831 00000628 53                              push rbx
   832                                  
   833 00000629 FF5009                          call SOB_CLOSURE_CODE(rax)
   834                                  
   835 0000062C 50                              	push rax
   836 0000062D 6A01                    	push 1
   837 0000062F 488B0425[80000000]      	mov rax, qword [free_var_16]
   838                                  .L_lambda_simple_arity_check_ok_07f1:
   839 00000637 803805                  	cmp byte [rax], T_closure
   840                                  
   841 0000063A 0F85C2310100                    jne L_code_ptr_error                      ; rax <- proc
   842                                  
   843                                  
   844 00000640 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
   845                                  
   846 00000644 53                              push rbx                                  ; env pushed
   847                                  
   848 00000645 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
   849                                  
   850                                          ; sagydebug
   851                                  
   852 00000648 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
   853                                  
   854                                          
   855                                          
   856 0000064B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
   857                                  
   858 0000064F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
   859                                  
   860                                  
   861 00000654 4D89CA                          mov r10, r9
   862 00000657 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
   863                                          
   864 0000065B 4D89D7                          mov r15, r10
   865 0000065E 4983C7FF                        add r15, -1
   866                                                                                         
   867 00000662 4D89C4                          mov r12, r8                               ; r12 <- index in new code
   868 00000665 4983C404                        add r12, 4
   869 00000669 4983C4FF                        add r12, -1
   870                                  
   871 0000066D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
   872                                  .L_tc_recycle_frame_loop_0446:
   873 00000673 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
   874                                  
   875 00000677 4E8974E500                      mov [rbp + (r12 * 8)], r14
   876                                  
   877                                  
   878                                  
   879 0000067C 41BE00000000                    mov r14, 0                                ; clean box
   880                                  
   881                                  
   882 00000682 4983C7FF                        add r15, -1           
   883 00000686 4983C2FF                        add r10, -1                               ; args_copied_counter--
   884                                  
   885 0000068A 4983C4FF                        add r12, -1 
   886                                  
   887 0000068E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
   888 00000692 75DF                    	jne .L_tc_recycle_frame_loop_0446
   889                                  .L_tc_recycle_frame_done_0446:
   890                                  ;this pop rbp in sot to the right place
   891 00000694 4D89C7                  mov r15, r8
   892                                  
   893 00000697 4983C704                        add r15, 4
   894                                  
   895 0000069B 49C1E703                        shl r15, 3
   896                                  
   897 0000069F 4C01FC                          add rsp, r15
   898 000006A2 5D                      	pop rbp                                  ; restore the old rbp
   899                                  
   900 000006A3 488B4D00                        mov rcx, qword [rbp]
   901 000006A7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
   902                                            ; rbx <- code(proc)
   903                                  
   904 000006AB FFE3                            jmp rbx
   905 000006AD C9                      	leave
   906 000006AE C21800                  	ret 8 * (2 + 1)
   907                                  .L_lambda_simple_end_03ab:	; new closure is in rax
   908 000006B1 48890425[C0010000]      	mov qword [free_var_56], rax
   909 000006B9 48B8-                   	mov rax, sob_void
   909 000006BB [0000000000000000] 
   910                                  
   911 000006C3 4889C7                  	mov rdi, rax
   912 000006C6 E88D210100              	call print_sexpr_if_not_void
   913                                  
   914 000006CB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   915 000006D0 E872210100              	call malloc
   916 000006D5 50                      	push rax
   917 000006D6 BF00000000              	mov rdi, 8 * 0	; new rib
   918 000006DB E867210100              	call malloc
   919 000006E0 50                      	push rax
   920 000006E1 BF08000000              	mov rdi, 8 * 1	; extended env
   921 000006E6 E85C210100              	call malloc
   922 000006EB 488B7D10                	mov rdi, ENV
   923 000006EF BE00000000              	mov rsi, 0
   924 000006F4 BA01000000              	mov rdx, 1
   925                                  .L_lambda_simple_env_loop_03ac:	; ext_env[i + 1] <-- env[i]
   926 000006F9 4883FE00                	cmp rsi, 0
   927 000006FD 7410                    	je .L_lambda_simple_env_end_03ac
   928 000006FF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   929 00000703 48890CD0                	mov qword [rax + 8 * rdx], rcx
   930 00000707 48FFC6                  	inc rsi
   931 0000070A 48FFC2                  	inc rdx
   932 0000070D EBEA                    	jmp .L_lambda_simple_env_loop_03ac
   933                                  .L_lambda_simple_env_end_03ac:
   934 0000070F 5B                      	pop rbx
   935 00000710 BE00000000              	mov rsi, 0
   936                                  .L_lambda_simple_params_loop_03ac:	; copy params
   937 00000715 4883FE00                	cmp rsi, 0
   938 00000719 740E                    	je .L_lambda_simple_params_end_03ac
   939 0000071B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   940 00000720 488914F3                	mov qword [rbx + 8 * rsi], rdx
   941 00000724 48FFC6                  	inc rsi
   942 00000727 EBEC                    	jmp .L_lambda_simple_params_loop_03ac
   943                                  .L_lambda_simple_params_end_03ac:
   944 00000729 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   945 0000072C 4889C3                  	mov rbx, rax
   946 0000072F 58                      	pop rax
   947 00000730 C60005                  	mov byte [rax], T_closure
   948 00000733 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   949 00000737 48C74009[44070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ac
   950 0000073F E9BC000000              	jmp .L_lambda_simple_end_03ac
   951                                  .L_lambda_simple_code_03ac:	; lambda-simple body
   952 00000744 48837C241001            	cmp qword [rsp + 8 * 2], 1
   953 0000074A 740B                    	je .L_lambda_simple_arity_check_ok_07f2
   954 0000074C FF742410                	push qword [rsp + 8 * 2]
   955 00000750 6A01                    	push 1
   956 00000752 E9A9200100              	jmp L_error_incorrect_arity_simple
   957                                  .L_lambda_simple_arity_check_ok_07f2:
   958 00000757 C8000000                	enter 0, 0
   959 0000075B 488B4520                mov rax, qword [rbp + 32]
   960 0000075F 50                      	push rax
   961 00000760 6A01                    	push 1
   962 00000762 488B0425[88000000]      	mov rax, qword [free_var_17]
   963 0000076A 803805                  	cmp byte [rax], T_closure 
   964 0000076D 0F858F300100                    jne L_code_ptr_error
   965                                  
   966 00000773 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
   967                                  
   968 00000777 53                              push rbx
   969                                  
   970 00000778 FF5009                          call SOB_CLOSURE_CODE(rax)
   971                                  
   972 0000077B 50                              	push rax
   973 0000077C 6A01                    	push 1
   974 0000077E 488B0425[80000000]      	mov rax, qword [free_var_16]
   975                                  .L_lambda_simple_arity_check_ok_07f3:
   976 00000786 803805                  	cmp byte [rax], T_closure
   977                                  
   978 00000789 0F8573300100                    jne L_code_ptr_error                      ; rax <- proc
   979                                  
   980                                  
   981 0000078F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
   982                                  
   983 00000793 53                              push rbx                                  ; env pushed
   984                                  
   985 00000794 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
   986                                  
   987                                          ; sagydebug
   988                                  
   989 00000797 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
   990                                  
   991                                          
   992                                          
   993 0000079A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
   994                                  
   995 0000079E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
   996                                  
   997                                  
   998 000007A3 4D89CA                          mov r10, r9
   999 000007A6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  1000                                          
  1001 000007AA 4D89D7                          mov r15, r10
  1002 000007AD 4983C7FF                        add r15, -1
  1003                                                                                         
  1004 000007B1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1005 000007B4 4983C404                        add r12, 4
  1006 000007B8 4983C4FF                        add r12, -1
  1007                                  
  1008 000007BC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1009                                  .L_tc_recycle_frame_loop_0447:
  1010 000007C2 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  1011                                  
  1012 000007C6 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1013                                  
  1014                                  
  1015                                  
  1016 000007CB 41BE00000000                    mov r14, 0                                ; clean box
  1017                                  
  1018                                  
  1019 000007D1 4983C7FF                        add r15, -1           
  1020 000007D5 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1021                                  
  1022 000007D9 4983C4FF                        add r12, -1 
  1023                                  
  1024 000007DD 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1025 000007E1 75DF                    	jne .L_tc_recycle_frame_loop_0447
  1026                                  .L_tc_recycle_frame_done_0447:
  1027                                  ;this pop rbp in sot to the right place
  1028 000007E3 4D89C7                  mov r15, r8
  1029                                  
  1030 000007E6 4983C704                        add r15, 4
  1031                                  
  1032 000007EA 49C1E703                        shl r15, 3
  1033                                  
  1034 000007EE 4C01FC                          add rsp, r15
  1035 000007F1 5D                      	pop rbp                                  ; restore the old rbp
  1036                                  
  1037 000007F2 488B4D00                        mov rcx, qword [rbp]
  1038 000007F6 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1039                                            ; rbx <- code(proc)
  1040                                  
  1041 000007FA FFE3                            jmp rbx
  1042 000007FC C9                      	leave
  1043 000007FD C21800                  	ret 8 * (2 + 1)
  1044                                  .L_lambda_simple_end_03ac:	; new closure is in rax
  1045 00000800 48890425[C8010000]      	mov qword [free_var_57], rax
  1046 00000808 48B8-                   	mov rax, sob_void
  1046 0000080A [0000000000000000] 
  1047                                  
  1048 00000812 4889C7                  	mov rdi, rax
  1049 00000815 E83E200100              	call print_sexpr_if_not_void
  1050                                  
  1051 0000081A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1052 0000081F E823200100              	call malloc
  1053 00000824 50                      	push rax
  1054 00000825 BF00000000              	mov rdi, 8 * 0	; new rib
  1055 0000082A E818200100              	call malloc
  1056 0000082F 50                      	push rax
  1057 00000830 BF08000000              	mov rdi, 8 * 1	; extended env
  1058 00000835 E80D200100              	call malloc
  1059 0000083A 488B7D10                	mov rdi, ENV
  1060 0000083E BE00000000              	mov rsi, 0
  1061 00000843 BA01000000              	mov rdx, 1
  1062                                  .L_lambda_simple_env_loop_03ad:	; ext_env[i + 1] <-- env[i]
  1063 00000848 4883FE00                	cmp rsi, 0
  1064 0000084C 7410                    	je .L_lambda_simple_env_end_03ad
  1065 0000084E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1066 00000852 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1067 00000856 48FFC6                  	inc rsi
  1068 00000859 48FFC2                  	inc rdx
  1069 0000085C EBEA                    	jmp .L_lambda_simple_env_loop_03ad
  1070                                  .L_lambda_simple_env_end_03ad:
  1071 0000085E 5B                      	pop rbx
  1072 0000085F BE00000000              	mov rsi, 0
  1073                                  .L_lambda_simple_params_loop_03ad:	; copy params
  1074 00000864 4883FE00                	cmp rsi, 0
  1075 00000868 740E                    	je .L_lambda_simple_params_end_03ad
  1076 0000086A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1077 0000086F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1078 00000873 48FFC6                  	inc rsi
  1079 00000876 EBEC                    	jmp .L_lambda_simple_params_loop_03ad
  1080                                  .L_lambda_simple_params_end_03ad:
  1081 00000878 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1082 0000087B 4889C3                  	mov rbx, rax
  1083 0000087E 58                      	pop rax
  1084 0000087F C60005                  	mov byte [rax], T_closure
  1085 00000882 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1086 00000886 48C74009[93080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ad
  1087 0000088E E9BC000000              	jmp .L_lambda_simple_end_03ad
  1088                                  .L_lambda_simple_code_03ad:	; lambda-simple body
  1089 00000893 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1090 00000899 740B                    	je .L_lambda_simple_arity_check_ok_07f4
  1091 0000089B FF742410                	push qword [rsp + 8 * 2]
  1092 0000089F 6A01                    	push 1
  1093 000008A1 E95A1F0100              	jmp L_error_incorrect_arity_simple
  1094                                  .L_lambda_simple_arity_check_ok_07f4:
  1095 000008A6 C8000000                	enter 0, 0
  1096 000008AA 488B4520                mov rax, qword [rbp + 32]
  1097 000008AE 50                      	push rax
  1098 000008AF 6A01                    	push 1
  1099 000008B1 488B0425[80000000]      	mov rax, qword [free_var_16]
  1100 000008B9 803805                  	cmp byte [rax], T_closure 
  1101 000008BC 0F85402F0100                    jne L_code_ptr_error
  1102                                  
  1103 000008C2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1104                                  
  1105 000008C6 53                              push rbx
  1106                                  
  1107 000008C7 FF5009                          call SOB_CLOSURE_CODE(rax)
  1108                                  
  1109 000008CA 50                              	push rax
  1110 000008CB 6A01                    	push 1
  1111 000008CD 488B0425[88000000]      	mov rax, qword [free_var_17]
  1112                                  .L_lambda_simple_arity_check_ok_07f5:
  1113 000008D5 803805                  	cmp byte [rax], T_closure
  1114                                  
  1115 000008D8 0F85242F0100                    jne L_code_ptr_error                      ; rax <- proc
  1116                                  
  1117                                  
  1118 000008DE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1119                                  
  1120 000008E2 53                              push rbx                                  ; env pushed
  1121                                  
  1122 000008E3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1123                                  
  1124                                          ; sagydebug
  1125                                  
  1126 000008E6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1127                                  
  1128                                          
  1129                                          
  1130 000008E9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1131                                  
  1132 000008ED 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1133                                  
  1134                                  
  1135 000008F2 4D89CA                          mov r10, r9
  1136 000008F5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  1137                                          
  1138 000008F9 4D89D7                          mov r15, r10
  1139 000008FC 4983C7FF                        add r15, -1
  1140                                                                                         
  1141 00000900 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1142 00000903 4983C404                        add r12, 4
  1143 00000907 4983C4FF                        add r12, -1
  1144                                  
  1145 0000090B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1146                                  .L_tc_recycle_frame_loop_0448:
  1147 00000911 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  1148                                  
  1149 00000915 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1150                                  
  1151                                  
  1152                                  
  1153 0000091A 41BE00000000                    mov r14, 0                                ; clean box
  1154                                  
  1155                                  
  1156 00000920 4983C7FF                        add r15, -1           
  1157 00000924 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1158                                  
  1159 00000928 4983C4FF                        add r12, -1 
  1160                                  
  1161 0000092C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1162 00000930 75DF                    	jne .L_tc_recycle_frame_loop_0448
  1163                                  .L_tc_recycle_frame_done_0448:
  1164                                  ;this pop rbp in sot to the right place
  1165 00000932 4D89C7                  mov r15, r8
  1166                                  
  1167 00000935 4983C704                        add r15, 4
  1168                                  
  1169 00000939 49C1E703                        shl r15, 3
  1170                                  
  1171 0000093D 4C01FC                          add rsp, r15
  1172 00000940 5D                      	pop rbp                                  ; restore the old rbp
  1173                                  
  1174 00000941 488B4D00                        mov rcx, qword [rbp]
  1175 00000945 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1176                                            ; rbx <- code(proc)
  1177                                  
  1178 00000949 FFE3                            jmp rbx
  1179 0000094B C9                      	leave
  1180 0000094C C21800                  	ret 8 * (2 + 1)
  1181                                  .L_lambda_simple_end_03ad:	; new closure is in rax
  1182 0000094F 48890425[D0010000]      	mov qword [free_var_58], rax
  1183 00000957 48B8-                   	mov rax, sob_void
  1183 00000959 [0000000000000000] 
  1184                                  
  1185 00000961 4889C7                  	mov rdi, rax
  1186 00000964 E8EF1E0100              	call print_sexpr_if_not_void
  1187                                  
  1188 00000969 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1189 0000096E E8D41E0100              	call malloc
  1190 00000973 50                      	push rax
  1191 00000974 BF00000000              	mov rdi, 8 * 0	; new rib
  1192 00000979 E8C91E0100              	call malloc
  1193 0000097E 50                      	push rax
  1194 0000097F BF08000000              	mov rdi, 8 * 1	; extended env
  1195 00000984 E8BE1E0100              	call malloc
  1196 00000989 488B7D10                	mov rdi, ENV
  1197 0000098D BE00000000              	mov rsi, 0
  1198 00000992 BA01000000              	mov rdx, 1
  1199                                  .L_lambda_simple_env_loop_03ae:	; ext_env[i + 1] <-- env[i]
  1200 00000997 4883FE00                	cmp rsi, 0
  1201 0000099B 7410                    	je .L_lambda_simple_env_end_03ae
  1202 0000099D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1203 000009A1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1204 000009A5 48FFC6                  	inc rsi
  1205 000009A8 48FFC2                  	inc rdx
  1206 000009AB EBEA                    	jmp .L_lambda_simple_env_loop_03ae
  1207                                  .L_lambda_simple_env_end_03ae:
  1208 000009AD 5B                      	pop rbx
  1209 000009AE BE00000000              	mov rsi, 0
  1210                                  .L_lambda_simple_params_loop_03ae:	; copy params
  1211 000009B3 4883FE00                	cmp rsi, 0
  1212 000009B7 740E                    	je .L_lambda_simple_params_end_03ae
  1213 000009B9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1214 000009BE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1215 000009C2 48FFC6                  	inc rsi
  1216 000009C5 EBEC                    	jmp .L_lambda_simple_params_loop_03ae
  1217                                  .L_lambda_simple_params_end_03ae:
  1218 000009C7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1219 000009CA 4889C3                  	mov rbx, rax
  1220 000009CD 58                      	pop rax
  1221 000009CE C60005                  	mov byte [rax], T_closure
  1222 000009D1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1223 000009D5 48C74009[E2090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ae
  1224 000009DD E9BC000000              	jmp .L_lambda_simple_end_03ae
  1225                                  .L_lambda_simple_code_03ae:	; lambda-simple body
  1226 000009E2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1227 000009E8 740B                    	je .L_lambda_simple_arity_check_ok_07f6
  1228 000009EA FF742410                	push qword [rsp + 8 * 2]
  1229 000009EE 6A01                    	push 1
  1230 000009F0 E90B1E0100              	jmp L_error_incorrect_arity_simple
  1231                                  .L_lambda_simple_arity_check_ok_07f6:
  1232 000009F5 C8000000                	enter 0, 0
  1233 000009F9 488B4520                mov rax, qword [rbp + 32]
  1234 000009FD 50                      	push rax
  1235 000009FE 6A01                    	push 1
  1236 00000A00 488B0425[88000000]      	mov rax, qword [free_var_17]
  1237 00000A08 803805                  	cmp byte [rax], T_closure 
  1238 00000A0B 0F85F12D0100                    jne L_code_ptr_error
  1239                                  
  1240 00000A11 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1241                                  
  1242 00000A15 53                              push rbx
  1243                                  
  1244 00000A16 FF5009                          call SOB_CLOSURE_CODE(rax)
  1245                                  
  1246 00000A19 50                              	push rax
  1247 00000A1A 6A01                    	push 1
  1248 00000A1C 488B0425[88000000]      	mov rax, qword [free_var_17]
  1249                                  .L_lambda_simple_arity_check_ok_07f7:
  1250 00000A24 803805                  	cmp byte [rax], T_closure
  1251                                  
  1252 00000A27 0F85D52D0100                    jne L_code_ptr_error                      ; rax <- proc
  1253                                  
  1254                                  
  1255 00000A2D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1256                                  
  1257 00000A31 53                              push rbx                                  ; env pushed
  1258                                  
  1259 00000A32 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1260                                  
  1261                                          ; sagydebug
  1262                                  
  1263 00000A35 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1264                                  
  1265                                          
  1266                                          
  1267 00000A38 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1268                                  
  1269 00000A3C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1270                                  
  1271                                  
  1272 00000A41 4D89CA                          mov r10, r9
  1273 00000A44 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  1274                                          
  1275 00000A48 4D89D7                          mov r15, r10
  1276 00000A4B 4983C7FF                        add r15, -1
  1277                                                                                         
  1278 00000A4F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1279 00000A52 4983C404                        add r12, 4
  1280 00000A56 4983C4FF                        add r12, -1
  1281                                  
  1282 00000A5A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1283                                  .L_tc_recycle_frame_loop_0449:
  1284 00000A60 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  1285                                  
  1286 00000A64 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1287                                  
  1288                                  
  1289                                  
  1290 00000A69 41BE00000000                    mov r14, 0                                ; clean box
  1291                                  
  1292                                  
  1293 00000A6F 4983C7FF                        add r15, -1           
  1294 00000A73 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1295                                  
  1296 00000A77 4983C4FF                        add r12, -1 
  1297                                  
  1298 00000A7B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1299 00000A7F 75DF                    	jne .L_tc_recycle_frame_loop_0449
  1300                                  .L_tc_recycle_frame_done_0449:
  1301                                  ;this pop rbp in sot to the right place
  1302 00000A81 4D89C7                  mov r15, r8
  1303                                  
  1304 00000A84 4983C704                        add r15, 4
  1305                                  
  1306 00000A88 49C1E703                        shl r15, 3
  1307                                  
  1308 00000A8C 4C01FC                          add rsp, r15
  1309 00000A8F 5D                      	pop rbp                                  ; restore the old rbp
  1310                                  
  1311 00000A90 488B4D00                        mov rcx, qword [rbp]
  1312 00000A94 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1313                                            ; rbx <- code(proc)
  1314                                  
  1315 00000A98 FFE3                            jmp rbx
  1316 00000A9A C9                      	leave
  1317 00000A9B C21800                  	ret 8 * (2 + 1)
  1318                                  .L_lambda_simple_end_03ae:	; new closure is in rax
  1319 00000A9E 48890425[D8010000]      	mov qword [free_var_59], rax
  1320 00000AA6 48B8-                   	mov rax, sob_void
  1320 00000AA8 [0000000000000000] 
  1321                                  
  1322 00000AB0 4889C7                  	mov rdi, rax
  1323 00000AB3 E8A01D0100              	call print_sexpr_if_not_void
  1324                                  
  1325 00000AB8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1326 00000ABD E8851D0100              	call malloc
  1327 00000AC2 50                      	push rax
  1328 00000AC3 BF00000000              	mov rdi, 8 * 0	; new rib
  1329 00000AC8 E87A1D0100              	call malloc
  1330 00000ACD 50                      	push rax
  1331 00000ACE BF08000000              	mov rdi, 8 * 1	; extended env
  1332 00000AD3 E86F1D0100              	call malloc
  1333 00000AD8 488B7D10                	mov rdi, ENV
  1334 00000ADC BE00000000              	mov rsi, 0
  1335 00000AE1 BA01000000              	mov rdx, 1
  1336                                  .L_lambda_simple_env_loop_03af:	; ext_env[i + 1] <-- env[i]
  1337 00000AE6 4883FE00                	cmp rsi, 0
  1338 00000AEA 7410                    	je .L_lambda_simple_env_end_03af
  1339 00000AEC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1340 00000AF0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1341 00000AF4 48FFC6                  	inc rsi
  1342 00000AF7 48FFC2                  	inc rdx
  1343 00000AFA EBEA                    	jmp .L_lambda_simple_env_loop_03af
  1344                                  .L_lambda_simple_env_end_03af:
  1345 00000AFC 5B                      	pop rbx
  1346 00000AFD BE00000000              	mov rsi, 0
  1347                                  .L_lambda_simple_params_loop_03af:	; copy params
  1348 00000B02 4883FE00                	cmp rsi, 0
  1349 00000B06 740E                    	je .L_lambda_simple_params_end_03af
  1350 00000B08 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1351 00000B0D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1352 00000B11 48FFC6                  	inc rsi
  1353 00000B14 EBEC                    	jmp .L_lambda_simple_params_loop_03af
  1354                                  .L_lambda_simple_params_end_03af:
  1355 00000B16 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1356 00000B19 4889C3                  	mov rbx, rax
  1357 00000B1C 58                      	pop rax
  1358 00000B1D C60005                  	mov byte [rax], T_closure
  1359 00000B20 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1360 00000B24 48C74009[310B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03af
  1361 00000B2C E9BC000000              	jmp .L_lambda_simple_end_03af
  1362                                  .L_lambda_simple_code_03af:	; lambda-simple body
  1363 00000B31 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1364 00000B37 740B                    	je .L_lambda_simple_arity_check_ok_07f8
  1365 00000B39 FF742410                	push qword [rsp + 8 * 2]
  1366 00000B3D 6A01                    	push 1
  1367 00000B3F E9BC1C0100              	jmp L_error_incorrect_arity_simple
  1368                                  .L_lambda_simple_arity_check_ok_07f8:
  1369 00000B44 C8000000                	enter 0, 0
  1370 00000B48 488B4520                mov rax, qword [rbp + 32]
  1371 00000B4C 50                      	push rax
  1372 00000B4D 6A01                    	push 1
  1373 00000B4F 488B0425[C0010000]      	mov rax, qword [free_var_56]
  1374 00000B57 803805                  	cmp byte [rax], T_closure 
  1375 00000B5A 0F85A22C0100                    jne L_code_ptr_error
  1376                                  
  1377 00000B60 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1378                                  
  1379 00000B64 53                              push rbx
  1380                                  
  1381 00000B65 FF5009                          call SOB_CLOSURE_CODE(rax)
  1382                                  
  1383 00000B68 50                              	push rax
  1384 00000B69 6A01                    	push 1
  1385 00000B6B 488B0425[80000000]      	mov rax, qword [free_var_16]
  1386                                  .L_lambda_simple_arity_check_ok_07f9:
  1387 00000B73 803805                  	cmp byte [rax], T_closure
  1388                                  
  1389 00000B76 0F85862C0100                    jne L_code_ptr_error                      ; rax <- proc
  1390                                  
  1391                                  
  1392 00000B7C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1393                                  
  1394 00000B80 53                              push rbx                                  ; env pushed
  1395                                  
  1396 00000B81 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1397                                  
  1398                                          ; sagydebug
  1399                                  
  1400 00000B84 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1401                                  
  1402                                          
  1403                                          
  1404 00000B87 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1405                                  
  1406 00000B8B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1407                                  
  1408                                  
  1409 00000B90 4D89CA                          mov r10, r9
  1410 00000B93 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  1411                                          
  1412 00000B97 4D89D7                          mov r15, r10
  1413 00000B9A 4983C7FF                        add r15, -1
  1414                                                                                         
  1415 00000B9E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1416 00000BA1 4983C404                        add r12, 4
  1417 00000BA5 4983C4FF                        add r12, -1
  1418                                  
  1419 00000BA9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1420                                  .L_tc_recycle_frame_loop_044a:
  1421 00000BAF 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  1422                                  
  1423 00000BB3 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1424                                  
  1425                                  
  1426                                  
  1427 00000BB8 41BE00000000                    mov r14, 0                                ; clean box
  1428                                  
  1429                                  
  1430 00000BBE 4983C7FF                        add r15, -1           
  1431 00000BC2 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1432                                  
  1433 00000BC6 4983C4FF                        add r12, -1 
  1434                                  
  1435 00000BCA 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1436 00000BCE 75DF                    	jne .L_tc_recycle_frame_loop_044a
  1437                                  .L_tc_recycle_frame_done_044a:
  1438                                  ;this pop rbp in sot to the right place
  1439 00000BD0 4D89C7                  mov r15, r8
  1440                                  
  1441 00000BD3 4983C704                        add r15, 4
  1442                                  
  1443 00000BD7 49C1E703                        shl r15, 3
  1444                                  
  1445 00000BDB 4C01FC                          add rsp, r15
  1446 00000BDE 5D                      	pop rbp                                  ; restore the old rbp
  1447                                  
  1448 00000BDF 488B4D00                        mov rcx, qword [rbp]
  1449 00000BE3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1450                                            ; rbx <- code(proc)
  1451                                  
  1452 00000BE7 FFE3                            jmp rbx
  1453 00000BE9 C9                      	leave
  1454 00000BEA C21800                  	ret 8 * (2 + 1)
  1455                                  .L_lambda_simple_end_03af:	; new closure is in rax
  1456 00000BED 48890425[E0010000]      	mov qword [free_var_60], rax
  1457 00000BF5 48B8-                   	mov rax, sob_void
  1457 00000BF7 [0000000000000000] 
  1458                                  
  1459 00000BFF 4889C7                  	mov rdi, rax
  1460 00000C02 E8511C0100              	call print_sexpr_if_not_void
  1461                                  
  1462 00000C07 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1463 00000C0C E8361C0100              	call malloc
  1464 00000C11 50                      	push rax
  1465 00000C12 BF00000000              	mov rdi, 8 * 0	; new rib
  1466 00000C17 E82B1C0100              	call malloc
  1467 00000C1C 50                      	push rax
  1468 00000C1D BF08000000              	mov rdi, 8 * 1	; extended env
  1469 00000C22 E8201C0100              	call malloc
  1470 00000C27 488B7D10                	mov rdi, ENV
  1471 00000C2B BE00000000              	mov rsi, 0
  1472 00000C30 BA01000000              	mov rdx, 1
  1473                                  .L_lambda_simple_env_loop_03b0:	; ext_env[i + 1] <-- env[i]
  1474 00000C35 4883FE00                	cmp rsi, 0
  1475 00000C39 7410                    	je .L_lambda_simple_env_end_03b0
  1476 00000C3B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1477 00000C3F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1478 00000C43 48FFC6                  	inc rsi
  1479 00000C46 48FFC2                  	inc rdx
  1480 00000C49 EBEA                    	jmp .L_lambda_simple_env_loop_03b0
  1481                                  .L_lambda_simple_env_end_03b0:
  1482 00000C4B 5B                      	pop rbx
  1483 00000C4C BE00000000              	mov rsi, 0
  1484                                  .L_lambda_simple_params_loop_03b0:	; copy params
  1485 00000C51 4883FE00                	cmp rsi, 0
  1486 00000C55 740E                    	je .L_lambda_simple_params_end_03b0
  1487 00000C57 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1488 00000C5C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1489 00000C60 48FFC6                  	inc rsi
  1490 00000C63 EBEC                    	jmp .L_lambda_simple_params_loop_03b0
  1491                                  .L_lambda_simple_params_end_03b0:
  1492 00000C65 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1493 00000C68 4889C3                  	mov rbx, rax
  1494 00000C6B 58                      	pop rax
  1495 00000C6C C60005                  	mov byte [rax], T_closure
  1496 00000C6F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1497 00000C73 48C74009[800C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b0
  1498 00000C7B E9BC000000              	jmp .L_lambda_simple_end_03b0
  1499                                  .L_lambda_simple_code_03b0:	; lambda-simple body
  1500 00000C80 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1501 00000C86 740B                    	je .L_lambda_simple_arity_check_ok_07fa
  1502 00000C88 FF742410                	push qword [rsp + 8 * 2]
  1503 00000C8C 6A01                    	push 1
  1504 00000C8E E96D1B0100              	jmp L_error_incorrect_arity_simple
  1505                                  .L_lambda_simple_arity_check_ok_07fa:
  1506 00000C93 C8000000                	enter 0, 0
  1507 00000C97 488B4520                mov rax, qword [rbp + 32]
  1508 00000C9B 50                      	push rax
  1509 00000C9C 6A01                    	push 1
  1510 00000C9E 488B0425[C8010000]      	mov rax, qword [free_var_57]
  1511 00000CA6 803805                  	cmp byte [rax], T_closure 
  1512 00000CA9 0F85532B0100                    jne L_code_ptr_error
  1513                                  
  1514 00000CAF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1515                                  
  1516 00000CB3 53                              push rbx
  1517                                  
  1518 00000CB4 FF5009                          call SOB_CLOSURE_CODE(rax)
  1519                                  
  1520 00000CB7 50                              	push rax
  1521 00000CB8 6A01                    	push 1
  1522 00000CBA 488B0425[80000000]      	mov rax, qword [free_var_16]
  1523                                  .L_lambda_simple_arity_check_ok_07fb:
  1524 00000CC2 803805                  	cmp byte [rax], T_closure
  1525                                  
  1526 00000CC5 0F85372B0100                    jne L_code_ptr_error                      ; rax <- proc
  1527                                  
  1528                                  
  1529 00000CCB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1530                                  
  1531 00000CCF 53                              push rbx                                  ; env pushed
  1532                                  
  1533 00000CD0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1534                                  
  1535                                          ; sagydebug
  1536                                  
  1537 00000CD3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1538                                  
  1539                                          
  1540                                          
  1541 00000CD6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1542                                  
  1543 00000CDA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1544                                  
  1545                                  
  1546 00000CDF 4D89CA                          mov r10, r9
  1547 00000CE2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  1548                                          
  1549 00000CE6 4D89D7                          mov r15, r10
  1550 00000CE9 4983C7FF                        add r15, -1
  1551                                                                                         
  1552 00000CED 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1553 00000CF0 4983C404                        add r12, 4
  1554 00000CF4 4983C4FF                        add r12, -1
  1555                                  
  1556 00000CF8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1557                                  .L_tc_recycle_frame_loop_044b:
  1558 00000CFE 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  1559                                  
  1560 00000D02 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1561                                  
  1562                                  
  1563                                  
  1564 00000D07 41BE00000000                    mov r14, 0                                ; clean box
  1565                                  
  1566                                  
  1567 00000D0D 4983C7FF                        add r15, -1           
  1568 00000D11 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1569                                  
  1570 00000D15 4983C4FF                        add r12, -1 
  1571                                  
  1572 00000D19 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1573 00000D1D 75DF                    	jne .L_tc_recycle_frame_loop_044b
  1574                                  .L_tc_recycle_frame_done_044b:
  1575                                  ;this pop rbp in sot to the right place
  1576 00000D1F 4D89C7                  mov r15, r8
  1577                                  
  1578 00000D22 4983C704                        add r15, 4
  1579                                  
  1580 00000D26 49C1E703                        shl r15, 3
  1581                                  
  1582 00000D2A 4C01FC                          add rsp, r15
  1583 00000D2D 5D                      	pop rbp                                  ; restore the old rbp
  1584                                  
  1585 00000D2E 488B4D00                        mov rcx, qword [rbp]
  1586 00000D32 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1587                                            ; rbx <- code(proc)
  1588                                  
  1589 00000D36 FFE3                            jmp rbx
  1590 00000D38 C9                      	leave
  1591 00000D39 C21800                  	ret 8 * (2 + 1)
  1592                                  .L_lambda_simple_end_03b0:	; new closure is in rax
  1593 00000D3C 48890425[E8010000]      	mov qword [free_var_61], rax
  1594 00000D44 48B8-                   	mov rax, sob_void
  1594 00000D46 [0000000000000000] 
  1595                                  
  1596 00000D4E 4889C7                  	mov rdi, rax
  1597 00000D51 E8021B0100              	call print_sexpr_if_not_void
  1598                                  
  1599 00000D56 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1600 00000D5B E8E71A0100              	call malloc
  1601 00000D60 50                      	push rax
  1602 00000D61 BF00000000              	mov rdi, 8 * 0	; new rib
  1603 00000D66 E8DC1A0100              	call malloc
  1604 00000D6B 50                      	push rax
  1605 00000D6C BF08000000              	mov rdi, 8 * 1	; extended env
  1606 00000D71 E8D11A0100              	call malloc
  1607 00000D76 488B7D10                	mov rdi, ENV
  1608 00000D7A BE00000000              	mov rsi, 0
  1609 00000D7F BA01000000              	mov rdx, 1
  1610                                  .L_lambda_simple_env_loop_03b1:	; ext_env[i + 1] <-- env[i]
  1611 00000D84 4883FE00                	cmp rsi, 0
  1612 00000D88 7410                    	je .L_lambda_simple_env_end_03b1
  1613 00000D8A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1614 00000D8E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1615 00000D92 48FFC6                  	inc rsi
  1616 00000D95 48FFC2                  	inc rdx
  1617 00000D98 EBEA                    	jmp .L_lambda_simple_env_loop_03b1
  1618                                  .L_lambda_simple_env_end_03b1:
  1619 00000D9A 5B                      	pop rbx
  1620 00000D9B BE00000000              	mov rsi, 0
  1621                                  .L_lambda_simple_params_loop_03b1:	; copy params
  1622 00000DA0 4883FE00                	cmp rsi, 0
  1623 00000DA4 740E                    	je .L_lambda_simple_params_end_03b1
  1624 00000DA6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1625 00000DAB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1626 00000DAF 48FFC6                  	inc rsi
  1627 00000DB2 EBEC                    	jmp .L_lambda_simple_params_loop_03b1
  1628                                  .L_lambda_simple_params_end_03b1:
  1629 00000DB4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1630 00000DB7 4889C3                  	mov rbx, rax
  1631 00000DBA 58                      	pop rax
  1632 00000DBB C60005                  	mov byte [rax], T_closure
  1633 00000DBE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1634 00000DC2 48C74009[CF0D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b1
  1635 00000DCA E9BC000000              	jmp .L_lambda_simple_end_03b1
  1636                                  .L_lambda_simple_code_03b1:	; lambda-simple body
  1637 00000DCF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1638 00000DD5 740B                    	je .L_lambda_simple_arity_check_ok_07fc
  1639 00000DD7 FF742410                	push qword [rsp + 8 * 2]
  1640 00000DDB 6A01                    	push 1
  1641 00000DDD E91E1A0100              	jmp L_error_incorrect_arity_simple
  1642                                  .L_lambda_simple_arity_check_ok_07fc:
  1643 00000DE2 C8000000                	enter 0, 0
  1644 00000DE6 488B4520                mov rax, qword [rbp + 32]
  1645 00000DEA 50                      	push rax
  1646 00000DEB 6A01                    	push 1
  1647 00000DED 488B0425[D0010000]      	mov rax, qword [free_var_58]
  1648 00000DF5 803805                  	cmp byte [rax], T_closure 
  1649 00000DF8 0F85042A0100                    jne L_code_ptr_error
  1650                                  
  1651 00000DFE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1652                                  
  1653 00000E02 53                              push rbx
  1654                                  
  1655 00000E03 FF5009                          call SOB_CLOSURE_CODE(rax)
  1656                                  
  1657 00000E06 50                              	push rax
  1658 00000E07 6A01                    	push 1
  1659 00000E09 488B0425[80000000]      	mov rax, qword [free_var_16]
  1660                                  .L_lambda_simple_arity_check_ok_07fd:
  1661 00000E11 803805                  	cmp byte [rax], T_closure
  1662                                  
  1663 00000E14 0F85E8290100                    jne L_code_ptr_error                      ; rax <- proc
  1664                                  
  1665                                  
  1666 00000E1A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1667                                  
  1668 00000E1E 53                              push rbx                                  ; env pushed
  1669                                  
  1670 00000E1F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1671                                  
  1672                                          ; sagydebug
  1673                                  
  1674 00000E22 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1675                                  
  1676                                          
  1677                                          
  1678 00000E25 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1679                                  
  1680 00000E29 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1681                                  
  1682                                  
  1683 00000E2E 4D89CA                          mov r10, r9
  1684 00000E31 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  1685                                          
  1686 00000E35 4D89D7                          mov r15, r10
  1687 00000E38 4983C7FF                        add r15, -1
  1688                                                                                         
  1689 00000E3C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1690 00000E3F 4983C404                        add r12, 4
  1691 00000E43 4983C4FF                        add r12, -1
  1692                                  
  1693 00000E47 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1694                                  .L_tc_recycle_frame_loop_044c:
  1695 00000E4D 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  1696                                  
  1697 00000E51 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1698                                  
  1699                                  
  1700                                  
  1701 00000E56 41BE00000000                    mov r14, 0                                ; clean box
  1702                                  
  1703                                  
  1704 00000E5C 4983C7FF                        add r15, -1           
  1705 00000E60 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1706                                  
  1707 00000E64 4983C4FF                        add r12, -1 
  1708                                  
  1709 00000E68 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1710 00000E6C 75DF                    	jne .L_tc_recycle_frame_loop_044c
  1711                                  .L_tc_recycle_frame_done_044c:
  1712                                  ;this pop rbp in sot to the right place
  1713 00000E6E 4D89C7                  mov r15, r8
  1714                                  
  1715 00000E71 4983C704                        add r15, 4
  1716                                  
  1717 00000E75 49C1E703                        shl r15, 3
  1718                                  
  1719 00000E79 4C01FC                          add rsp, r15
  1720 00000E7C 5D                      	pop rbp                                  ; restore the old rbp
  1721                                  
  1722 00000E7D 488B4D00                        mov rcx, qword [rbp]
  1723 00000E81 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1724                                            ; rbx <- code(proc)
  1725                                  
  1726 00000E85 FFE3                            jmp rbx
  1727 00000E87 C9                      	leave
  1728 00000E88 C21800                  	ret 8 * (2 + 1)
  1729                                  .L_lambda_simple_end_03b1:	; new closure is in rax
  1730 00000E8B 48890425[F0010000]      	mov qword [free_var_62], rax
  1731 00000E93 48B8-                   	mov rax, sob_void
  1731 00000E95 [0000000000000000] 
  1732                                  
  1733 00000E9D 4889C7                  	mov rdi, rax
  1734 00000EA0 E8B3190100              	call print_sexpr_if_not_void
  1735                                  
  1736 00000EA5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1737 00000EAA E898190100              	call malloc
  1738 00000EAF 50                      	push rax
  1739 00000EB0 BF00000000              	mov rdi, 8 * 0	; new rib
  1740 00000EB5 E88D190100              	call malloc
  1741 00000EBA 50                      	push rax
  1742 00000EBB BF08000000              	mov rdi, 8 * 1	; extended env
  1743 00000EC0 E882190100              	call malloc
  1744 00000EC5 488B7D10                	mov rdi, ENV
  1745 00000EC9 BE00000000              	mov rsi, 0
  1746 00000ECE BA01000000              	mov rdx, 1
  1747                                  .L_lambda_simple_env_loop_03b2:	; ext_env[i + 1] <-- env[i]
  1748 00000ED3 4883FE00                	cmp rsi, 0
  1749 00000ED7 7410                    	je .L_lambda_simple_env_end_03b2
  1750 00000ED9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1751 00000EDD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1752 00000EE1 48FFC6                  	inc rsi
  1753 00000EE4 48FFC2                  	inc rdx
  1754 00000EE7 EBEA                    	jmp .L_lambda_simple_env_loop_03b2
  1755                                  .L_lambda_simple_env_end_03b2:
  1756 00000EE9 5B                      	pop rbx
  1757 00000EEA BE00000000              	mov rsi, 0
  1758                                  .L_lambda_simple_params_loop_03b2:	; copy params
  1759 00000EEF 4883FE00                	cmp rsi, 0
  1760 00000EF3 740E                    	je .L_lambda_simple_params_end_03b2
  1761 00000EF5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1762 00000EFA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1763 00000EFE 48FFC6                  	inc rsi
  1764 00000F01 EBEC                    	jmp .L_lambda_simple_params_loop_03b2
  1765                                  .L_lambda_simple_params_end_03b2:
  1766 00000F03 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1767 00000F06 4889C3                  	mov rbx, rax
  1768 00000F09 58                      	pop rax
  1769 00000F0A C60005                  	mov byte [rax], T_closure
  1770 00000F0D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1771 00000F11 48C74009[1E0F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b2
  1772 00000F19 E9BC000000              	jmp .L_lambda_simple_end_03b2
  1773                                  .L_lambda_simple_code_03b2:	; lambda-simple body
  1774 00000F1E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1775 00000F24 740B                    	je .L_lambda_simple_arity_check_ok_07fe
  1776 00000F26 FF742410                	push qword [rsp + 8 * 2]
  1777 00000F2A 6A01                    	push 1
  1778 00000F2C E9CF180100              	jmp L_error_incorrect_arity_simple
  1779                                  .L_lambda_simple_arity_check_ok_07fe:
  1780 00000F31 C8000000                	enter 0, 0
  1781 00000F35 488B4520                mov rax, qword [rbp + 32]
  1782 00000F39 50                      	push rax
  1783 00000F3A 6A01                    	push 1
  1784 00000F3C 488B0425[D8010000]      	mov rax, qword [free_var_59]
  1785 00000F44 803805                  	cmp byte [rax], T_closure 
  1786 00000F47 0F85B5280100                    jne L_code_ptr_error
  1787                                  
  1788 00000F4D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1789                                  
  1790 00000F51 53                              push rbx
  1791                                  
  1792 00000F52 FF5009                          call SOB_CLOSURE_CODE(rax)
  1793                                  
  1794 00000F55 50                              	push rax
  1795 00000F56 6A01                    	push 1
  1796 00000F58 488B0425[80000000]      	mov rax, qword [free_var_16]
  1797                                  .L_lambda_simple_arity_check_ok_07ff:
  1798 00000F60 803805                  	cmp byte [rax], T_closure
  1799                                  
  1800 00000F63 0F8599280100                    jne L_code_ptr_error                      ; rax <- proc
  1801                                  
  1802                                  
  1803 00000F69 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1804                                  
  1805 00000F6D 53                              push rbx                                  ; env pushed
  1806                                  
  1807 00000F6E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1808                                  
  1809                                          ; sagydebug
  1810                                  
  1811 00000F71 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1812                                  
  1813                                          
  1814                                          
  1815 00000F74 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1816                                  
  1817 00000F78 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1818                                  
  1819                                  
  1820 00000F7D 4D89CA                          mov r10, r9
  1821 00000F80 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  1822                                          
  1823 00000F84 4D89D7                          mov r15, r10
  1824 00000F87 4983C7FF                        add r15, -1
  1825                                                                                         
  1826 00000F8B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1827 00000F8E 4983C404                        add r12, 4
  1828 00000F92 4983C4FF                        add r12, -1
  1829                                  
  1830 00000F96 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1831                                  .L_tc_recycle_frame_loop_044d:
  1832 00000F9C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  1833                                  
  1834 00000FA0 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1835                                  
  1836                                  
  1837                                  
  1838 00000FA5 41BE00000000                    mov r14, 0                                ; clean box
  1839                                  
  1840                                  
  1841 00000FAB 4983C7FF                        add r15, -1           
  1842 00000FAF 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1843                                  
  1844 00000FB3 4983C4FF                        add r12, -1 
  1845                                  
  1846 00000FB7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1847 00000FBB 75DF                    	jne .L_tc_recycle_frame_loop_044d
  1848                                  .L_tc_recycle_frame_done_044d:
  1849                                  ;this pop rbp in sot to the right place
  1850 00000FBD 4D89C7                  mov r15, r8
  1851                                  
  1852 00000FC0 4983C704                        add r15, 4
  1853                                  
  1854 00000FC4 49C1E703                        shl r15, 3
  1855                                  
  1856 00000FC8 4C01FC                          add rsp, r15
  1857 00000FCB 5D                      	pop rbp                                  ; restore the old rbp
  1858                                  
  1859 00000FCC 488B4D00                        mov rcx, qword [rbp]
  1860 00000FD0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1861                                            ; rbx <- code(proc)
  1862                                  
  1863 00000FD4 FFE3                            jmp rbx
  1864 00000FD6 C9                      	leave
  1865 00000FD7 C21800                  	ret 8 * (2 + 1)
  1866                                  .L_lambda_simple_end_03b2:	; new closure is in rax
  1867 00000FDA 48890425[F8010000]      	mov qword [free_var_63], rax
  1868 00000FE2 48B8-                   	mov rax, sob_void
  1868 00000FE4 [0000000000000000] 
  1869                                  
  1870 00000FEC 4889C7                  	mov rdi, rax
  1871 00000FEF E864180100              	call print_sexpr_if_not_void
  1872                                  
  1873 00000FF4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1874 00000FF9 E849180100              	call malloc
  1875 00000FFE 50                      	push rax
  1876 00000FFF BF00000000              	mov rdi, 8 * 0	; new rib
  1877 00001004 E83E180100              	call malloc
  1878 00001009 50                      	push rax
  1879 0000100A BF08000000              	mov rdi, 8 * 1	; extended env
  1880 0000100F E833180100              	call malloc
  1881 00001014 488B7D10                	mov rdi, ENV
  1882 00001018 BE00000000              	mov rsi, 0
  1883 0000101D BA01000000              	mov rdx, 1
  1884                                  .L_lambda_simple_env_loop_03b3:	; ext_env[i + 1] <-- env[i]
  1885 00001022 4883FE00                	cmp rsi, 0
  1886 00001026 7410                    	je .L_lambda_simple_env_end_03b3
  1887 00001028 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1888 0000102C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1889 00001030 48FFC6                  	inc rsi
  1890 00001033 48FFC2                  	inc rdx
  1891 00001036 EBEA                    	jmp .L_lambda_simple_env_loop_03b3
  1892                                  .L_lambda_simple_env_end_03b3:
  1893 00001038 5B                      	pop rbx
  1894 00001039 BE00000000              	mov rsi, 0
  1895                                  .L_lambda_simple_params_loop_03b3:	; copy params
  1896 0000103E 4883FE00                	cmp rsi, 0
  1897 00001042 740E                    	je .L_lambda_simple_params_end_03b3
  1898 00001044 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1899 00001049 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1900 0000104D 48FFC6                  	inc rsi
  1901 00001050 EBEC                    	jmp .L_lambda_simple_params_loop_03b3
  1902                                  .L_lambda_simple_params_end_03b3:
  1903 00001052 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1904 00001055 4889C3                  	mov rbx, rax
  1905 00001058 58                      	pop rax
  1906 00001059 C60005                  	mov byte [rax], T_closure
  1907 0000105C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1908 00001060 48C74009[6D100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b3
  1909 00001068 E9BC000000              	jmp .L_lambda_simple_end_03b3
  1910                                  .L_lambda_simple_code_03b3:	; lambda-simple body
  1911 0000106D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1912 00001073 740B                    	je .L_lambda_simple_arity_check_ok_0800
  1913 00001075 FF742410                	push qword [rsp + 8 * 2]
  1914 00001079 6A01                    	push 1
  1915 0000107B E980170100              	jmp L_error_incorrect_arity_simple
  1916                                  .L_lambda_simple_arity_check_ok_0800:
  1917 00001080 C8000000                	enter 0, 0
  1918 00001084 488B4520                mov rax, qword [rbp + 32]
  1919 00001088 50                      	push rax
  1920 00001089 6A01                    	push 1
  1921 0000108B 488B0425[C0010000]      	mov rax, qword [free_var_56]
  1922 00001093 803805                  	cmp byte [rax], T_closure 
  1923 00001096 0F8566270100                    jne L_code_ptr_error
  1924                                  
  1925 0000109C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1926                                  
  1927 000010A0 53                              push rbx
  1928                                  
  1929 000010A1 FF5009                          call SOB_CLOSURE_CODE(rax)
  1930                                  
  1931 000010A4 50                              	push rax
  1932 000010A5 6A01                    	push 1
  1933 000010A7 488B0425[88000000]      	mov rax, qword [free_var_17]
  1934                                  .L_lambda_simple_arity_check_ok_0801:
  1935 000010AF 803805                  	cmp byte [rax], T_closure
  1936                                  
  1937 000010B2 0F854A270100                    jne L_code_ptr_error                      ; rax <- proc
  1938                                  
  1939                                  
  1940 000010B8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1941                                  
  1942 000010BC 53                              push rbx                                  ; env pushed
  1943                                  
  1944 000010BD FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1945                                  
  1946                                          ; sagydebug
  1947                                  
  1948 000010C0 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1949                                  
  1950                                          
  1951                                          
  1952 000010C3 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1953                                  
  1954 000010C7 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1955                                  
  1956                                  
  1957 000010CC 4D89CA                          mov r10, r9
  1958 000010CF 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  1959                                          
  1960 000010D3 4D89D7                          mov r15, r10
  1961 000010D6 4983C7FF                        add r15, -1
  1962                                                                                         
  1963 000010DA 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1964 000010DD 4983C404                        add r12, 4
  1965 000010E1 4983C4FF                        add r12, -1
  1966                                  
  1967 000010E5 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1968                                  .L_tc_recycle_frame_loop_044e:
  1969 000010EB 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  1970                                  
  1971 000010EF 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1972                                  
  1973                                  
  1974                                  
  1975 000010F4 41BE00000000                    mov r14, 0                                ; clean box
  1976                                  
  1977                                  
  1978 000010FA 4983C7FF                        add r15, -1           
  1979 000010FE 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1980                                  
  1981 00001102 4983C4FF                        add r12, -1 
  1982                                  
  1983 00001106 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1984 0000110A 75DF                    	jne .L_tc_recycle_frame_loop_044e
  1985                                  .L_tc_recycle_frame_done_044e:
  1986                                  ;this pop rbp in sot to the right place
  1987 0000110C 4D89C7                  mov r15, r8
  1988                                  
  1989 0000110F 4983C704                        add r15, 4
  1990                                  
  1991 00001113 49C1E703                        shl r15, 3
  1992                                  
  1993 00001117 4C01FC                          add rsp, r15
  1994 0000111A 5D                      	pop rbp                                  ; restore the old rbp
  1995                                  
  1996 0000111B 488B4D00                        mov rcx, qword [rbp]
  1997 0000111F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1998                                            ; rbx <- code(proc)
  1999                                  
  2000 00001123 FFE3                            jmp rbx
  2001 00001125 C9                      	leave
  2002 00001126 C21800                  	ret 8 * (2 + 1)
  2003                                  .L_lambda_simple_end_03b3:	; new closure is in rax
  2004 00001129 48890425[00020000]      	mov qword [free_var_64], rax
  2005 00001131 48B8-                   	mov rax, sob_void
  2005 00001133 [0000000000000000] 
  2006                                  
  2007 0000113B 4889C7                  	mov rdi, rax
  2008 0000113E E815170100              	call print_sexpr_if_not_void
  2009                                  
  2010 00001143 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2011 00001148 E8FA160100              	call malloc
  2012 0000114D 50                      	push rax
  2013 0000114E BF00000000              	mov rdi, 8 * 0	; new rib
  2014 00001153 E8EF160100              	call malloc
  2015 00001158 50                      	push rax
  2016 00001159 BF08000000              	mov rdi, 8 * 1	; extended env
  2017 0000115E E8E4160100              	call malloc
  2018 00001163 488B7D10                	mov rdi, ENV
  2019 00001167 BE00000000              	mov rsi, 0
  2020 0000116C BA01000000              	mov rdx, 1
  2021                                  .L_lambda_simple_env_loop_03b4:	; ext_env[i + 1] <-- env[i]
  2022 00001171 4883FE00                	cmp rsi, 0
  2023 00001175 7410                    	je .L_lambda_simple_env_end_03b4
  2024 00001177 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2025 0000117B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2026 0000117F 48FFC6                  	inc rsi
  2027 00001182 48FFC2                  	inc rdx
  2028 00001185 EBEA                    	jmp .L_lambda_simple_env_loop_03b4
  2029                                  .L_lambda_simple_env_end_03b4:
  2030 00001187 5B                      	pop rbx
  2031 00001188 BE00000000              	mov rsi, 0
  2032                                  .L_lambda_simple_params_loop_03b4:	; copy params
  2033 0000118D 4883FE00                	cmp rsi, 0
  2034 00001191 740E                    	je .L_lambda_simple_params_end_03b4
  2035 00001193 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2036 00001198 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2037 0000119C 48FFC6                  	inc rsi
  2038 0000119F EBEC                    	jmp .L_lambda_simple_params_loop_03b4
  2039                                  .L_lambda_simple_params_end_03b4:
  2040 000011A1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2041 000011A4 4889C3                  	mov rbx, rax
  2042 000011A7 58                      	pop rax
  2043 000011A8 C60005                  	mov byte [rax], T_closure
  2044 000011AB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2045 000011AF 48C74009[BC110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b4
  2046 000011B7 E9BC000000              	jmp .L_lambda_simple_end_03b4
  2047                                  .L_lambda_simple_code_03b4:	; lambda-simple body
  2048 000011BC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2049 000011C2 740B                    	je .L_lambda_simple_arity_check_ok_0802
  2050 000011C4 FF742410                	push qword [rsp + 8 * 2]
  2051 000011C8 6A01                    	push 1
  2052 000011CA E931160100              	jmp L_error_incorrect_arity_simple
  2053                                  .L_lambda_simple_arity_check_ok_0802:
  2054 000011CF C8000000                	enter 0, 0
  2055 000011D3 488B4520                mov rax, qword [rbp + 32]
  2056 000011D7 50                      	push rax
  2057 000011D8 6A01                    	push 1
  2058 000011DA 488B0425[C8010000]      	mov rax, qword [free_var_57]
  2059 000011E2 803805                  	cmp byte [rax], T_closure 
  2060 000011E5 0F8517260100                    jne L_code_ptr_error
  2061                                  
  2062 000011EB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2063                                  
  2064 000011EF 53                              push rbx
  2065                                  
  2066 000011F0 FF5009                          call SOB_CLOSURE_CODE(rax)
  2067                                  
  2068 000011F3 50                              	push rax
  2069 000011F4 6A01                    	push 1
  2070 000011F6 488B0425[88000000]      	mov rax, qword [free_var_17]
  2071                                  .L_lambda_simple_arity_check_ok_0803:
  2072 000011FE 803805                  	cmp byte [rax], T_closure
  2073                                  
  2074 00001201 0F85FB250100                    jne L_code_ptr_error                      ; rax <- proc
  2075                                  
  2076                                  
  2077 00001207 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2078                                  
  2079 0000120B 53                              push rbx                                  ; env pushed
  2080                                  
  2081 0000120C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2082                                  
  2083                                          ; sagydebug
  2084                                  
  2085 0000120F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2086                                  
  2087                                          
  2088                                          
  2089 00001212 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2090                                  
  2091 00001216 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2092                                  
  2093                                  
  2094 0000121B 4D89CA                          mov r10, r9
  2095 0000121E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  2096                                          
  2097 00001222 4D89D7                          mov r15, r10
  2098 00001225 4983C7FF                        add r15, -1
  2099                                                                                         
  2100 00001229 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2101 0000122C 4983C404                        add r12, 4
  2102 00001230 4983C4FF                        add r12, -1
  2103                                  
  2104 00001234 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2105                                  .L_tc_recycle_frame_loop_044f:
  2106 0000123A 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  2107                                  
  2108 0000123E 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2109                                  
  2110                                  
  2111                                  
  2112 00001243 41BE00000000                    mov r14, 0                                ; clean box
  2113                                  
  2114                                  
  2115 00001249 4983C7FF                        add r15, -1           
  2116 0000124D 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2117                                  
  2118 00001251 4983C4FF                        add r12, -1 
  2119                                  
  2120 00001255 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2121 00001259 75DF                    	jne .L_tc_recycle_frame_loop_044f
  2122                                  .L_tc_recycle_frame_done_044f:
  2123                                  ;this pop rbp in sot to the right place
  2124 0000125B 4D89C7                  mov r15, r8
  2125                                  
  2126 0000125E 4983C704                        add r15, 4
  2127                                  
  2128 00001262 49C1E703                        shl r15, 3
  2129                                  
  2130 00001266 4C01FC                          add rsp, r15
  2131 00001269 5D                      	pop rbp                                  ; restore the old rbp
  2132                                  
  2133 0000126A 488B4D00                        mov rcx, qword [rbp]
  2134 0000126E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2135                                            ; rbx <- code(proc)
  2136                                  
  2137 00001272 FFE3                            jmp rbx
  2138 00001274 C9                      	leave
  2139 00001275 C21800                  	ret 8 * (2 + 1)
  2140                                  .L_lambda_simple_end_03b4:	; new closure is in rax
  2141 00001278 48890425[08020000]      	mov qword [free_var_65], rax
  2142 00001280 48B8-                   	mov rax, sob_void
  2142 00001282 [0000000000000000] 
  2143                                  
  2144 0000128A 4889C7                  	mov rdi, rax
  2145 0000128D E8C6150100              	call print_sexpr_if_not_void
  2146                                  
  2147 00001292 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2148 00001297 E8AB150100              	call malloc
  2149 0000129C 50                      	push rax
  2150 0000129D BF00000000              	mov rdi, 8 * 0	; new rib
  2151 000012A2 E8A0150100              	call malloc
  2152 000012A7 50                      	push rax
  2153 000012A8 BF08000000              	mov rdi, 8 * 1	; extended env
  2154 000012AD E895150100              	call malloc
  2155 000012B2 488B7D10                	mov rdi, ENV
  2156 000012B6 BE00000000              	mov rsi, 0
  2157 000012BB BA01000000              	mov rdx, 1
  2158                                  .L_lambda_simple_env_loop_03b5:	; ext_env[i + 1] <-- env[i]
  2159 000012C0 4883FE00                	cmp rsi, 0
  2160 000012C4 7410                    	je .L_lambda_simple_env_end_03b5
  2161 000012C6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2162 000012CA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2163 000012CE 48FFC6                  	inc rsi
  2164 000012D1 48FFC2                  	inc rdx
  2165 000012D4 EBEA                    	jmp .L_lambda_simple_env_loop_03b5
  2166                                  .L_lambda_simple_env_end_03b5:
  2167 000012D6 5B                      	pop rbx
  2168 000012D7 BE00000000              	mov rsi, 0
  2169                                  .L_lambda_simple_params_loop_03b5:	; copy params
  2170 000012DC 4883FE00                	cmp rsi, 0
  2171 000012E0 740E                    	je .L_lambda_simple_params_end_03b5
  2172 000012E2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2173 000012E7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2174 000012EB 48FFC6                  	inc rsi
  2175 000012EE EBEC                    	jmp .L_lambda_simple_params_loop_03b5
  2176                                  .L_lambda_simple_params_end_03b5:
  2177 000012F0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2178 000012F3 4889C3                  	mov rbx, rax
  2179 000012F6 58                      	pop rax
  2180 000012F7 C60005                  	mov byte [rax], T_closure
  2181 000012FA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2182 000012FE 48C74009[0B130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b5
  2183 00001306 E9BC000000              	jmp .L_lambda_simple_end_03b5
  2184                                  .L_lambda_simple_code_03b5:	; lambda-simple body
  2185 0000130B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2186 00001311 740B                    	je .L_lambda_simple_arity_check_ok_0804
  2187 00001313 FF742410                	push qword [rsp + 8 * 2]
  2188 00001317 6A01                    	push 1
  2189 00001319 E9E2140100              	jmp L_error_incorrect_arity_simple
  2190                                  .L_lambda_simple_arity_check_ok_0804:
  2191 0000131E C8000000                	enter 0, 0
  2192 00001322 488B4520                mov rax, qword [rbp + 32]
  2193 00001326 50                      	push rax
  2194 00001327 6A01                    	push 1
  2195 00001329 488B0425[D0010000]      	mov rax, qword [free_var_58]
  2196 00001331 803805                  	cmp byte [rax], T_closure 
  2197 00001334 0F85C8240100                    jne L_code_ptr_error
  2198                                  
  2199 0000133A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2200                                  
  2201 0000133E 53                              push rbx
  2202                                  
  2203 0000133F FF5009                          call SOB_CLOSURE_CODE(rax)
  2204                                  
  2205 00001342 50                              	push rax
  2206 00001343 6A01                    	push 1
  2207 00001345 488B0425[88000000]      	mov rax, qword [free_var_17]
  2208                                  .L_lambda_simple_arity_check_ok_0805:
  2209 0000134D 803805                  	cmp byte [rax], T_closure
  2210                                  
  2211 00001350 0F85AC240100                    jne L_code_ptr_error                      ; rax <- proc
  2212                                  
  2213                                  
  2214 00001356 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2215                                  
  2216 0000135A 53                              push rbx                                  ; env pushed
  2217                                  
  2218 0000135B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2219                                  
  2220                                          ; sagydebug
  2221                                  
  2222 0000135E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2223                                  
  2224                                          
  2225                                          
  2226 00001361 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2227                                  
  2228 00001365 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2229                                  
  2230                                  
  2231 0000136A 4D89CA                          mov r10, r9
  2232 0000136D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  2233                                          
  2234 00001371 4D89D7                          mov r15, r10
  2235 00001374 4983C7FF                        add r15, -1
  2236                                                                                         
  2237 00001378 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2238 0000137B 4983C404                        add r12, 4
  2239 0000137F 4983C4FF                        add r12, -1
  2240                                  
  2241 00001383 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2242                                  .L_tc_recycle_frame_loop_0450:
  2243 00001389 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  2244                                  
  2245 0000138D 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2246                                  
  2247                                  
  2248                                  
  2249 00001392 41BE00000000                    mov r14, 0                                ; clean box
  2250                                  
  2251                                  
  2252 00001398 4983C7FF                        add r15, -1           
  2253 0000139C 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2254                                  
  2255 000013A0 4983C4FF                        add r12, -1 
  2256                                  
  2257 000013A4 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2258 000013A8 75DF                    	jne .L_tc_recycle_frame_loop_0450
  2259                                  .L_tc_recycle_frame_done_0450:
  2260                                  ;this pop rbp in sot to the right place
  2261 000013AA 4D89C7                  mov r15, r8
  2262                                  
  2263 000013AD 4983C704                        add r15, 4
  2264                                  
  2265 000013B1 49C1E703                        shl r15, 3
  2266                                  
  2267 000013B5 4C01FC                          add rsp, r15
  2268 000013B8 5D                      	pop rbp                                  ; restore the old rbp
  2269                                  
  2270 000013B9 488B4D00                        mov rcx, qword [rbp]
  2271 000013BD 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2272                                            ; rbx <- code(proc)
  2273                                  
  2274 000013C1 FFE3                            jmp rbx
  2275 000013C3 C9                      	leave
  2276 000013C4 C21800                  	ret 8 * (2 + 1)
  2277                                  .L_lambda_simple_end_03b5:	; new closure is in rax
  2278 000013C7 48890425[10020000]      	mov qword [free_var_66], rax
  2279 000013CF 48B8-                   	mov rax, sob_void
  2279 000013D1 [0000000000000000] 
  2280                                  
  2281 000013D9 4889C7                  	mov rdi, rax
  2282 000013DC E877140100              	call print_sexpr_if_not_void
  2283                                  
  2284 000013E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2285 000013E6 E85C140100              	call malloc
  2286 000013EB 50                      	push rax
  2287 000013EC BF00000000              	mov rdi, 8 * 0	; new rib
  2288 000013F1 E851140100              	call malloc
  2289 000013F6 50                      	push rax
  2290 000013F7 BF08000000              	mov rdi, 8 * 1	; extended env
  2291 000013FC E846140100              	call malloc
  2292 00001401 488B7D10                	mov rdi, ENV
  2293 00001405 BE00000000              	mov rsi, 0
  2294 0000140A BA01000000              	mov rdx, 1
  2295                                  .L_lambda_simple_env_loop_03b6:	; ext_env[i + 1] <-- env[i]
  2296 0000140F 4883FE00                	cmp rsi, 0
  2297 00001413 7410                    	je .L_lambda_simple_env_end_03b6
  2298 00001415 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2299 00001419 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2300 0000141D 48FFC6                  	inc rsi
  2301 00001420 48FFC2                  	inc rdx
  2302 00001423 EBEA                    	jmp .L_lambda_simple_env_loop_03b6
  2303                                  .L_lambda_simple_env_end_03b6:
  2304 00001425 5B                      	pop rbx
  2305 00001426 BE00000000              	mov rsi, 0
  2306                                  .L_lambda_simple_params_loop_03b6:	; copy params
  2307 0000142B 4883FE00                	cmp rsi, 0
  2308 0000142F 740E                    	je .L_lambda_simple_params_end_03b6
  2309 00001431 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2310 00001436 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2311 0000143A 48FFC6                  	inc rsi
  2312 0000143D EBEC                    	jmp .L_lambda_simple_params_loop_03b6
  2313                                  .L_lambda_simple_params_end_03b6:
  2314 0000143F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2315 00001442 4889C3                  	mov rbx, rax
  2316 00001445 58                      	pop rax
  2317 00001446 C60005                  	mov byte [rax], T_closure
  2318 00001449 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2319 0000144D 48C74009[5A140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b6
  2320 00001455 E9BC000000              	jmp .L_lambda_simple_end_03b6
  2321                                  .L_lambda_simple_code_03b6:	; lambda-simple body
  2322 0000145A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2323 00001460 740B                    	je .L_lambda_simple_arity_check_ok_0806
  2324 00001462 FF742410                	push qword [rsp + 8 * 2]
  2325 00001466 6A01                    	push 1
  2326 00001468 E993130100              	jmp L_error_incorrect_arity_simple
  2327                                  .L_lambda_simple_arity_check_ok_0806:
  2328 0000146D C8000000                	enter 0, 0
  2329 00001471 488B4520                mov rax, qword [rbp + 32]
  2330 00001475 50                      	push rax
  2331 00001476 6A01                    	push 1
  2332 00001478 488B0425[D8010000]      	mov rax, qword [free_var_59]
  2333 00001480 803805                  	cmp byte [rax], T_closure 
  2334 00001483 0F8579230100                    jne L_code_ptr_error
  2335                                  
  2336 00001489 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2337                                  
  2338 0000148D 53                              push rbx
  2339                                  
  2340 0000148E FF5009                          call SOB_CLOSURE_CODE(rax)
  2341                                  
  2342 00001491 50                              	push rax
  2343 00001492 6A01                    	push 1
  2344 00001494 488B0425[88000000]      	mov rax, qword [free_var_17]
  2345                                  .L_lambda_simple_arity_check_ok_0807:
  2346 0000149C 803805                  	cmp byte [rax], T_closure
  2347                                  
  2348 0000149F 0F855D230100                    jne L_code_ptr_error                      ; rax <- proc
  2349                                  
  2350                                  
  2351 000014A5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2352                                  
  2353 000014A9 53                              push rbx                                  ; env pushed
  2354                                  
  2355 000014AA FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2356                                  
  2357                                          ; sagydebug
  2358                                  
  2359 000014AD FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2360                                  
  2361                                          
  2362                                          
  2363 000014B0 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2364                                  
  2365 000014B4 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2366                                  
  2367                                  
  2368 000014B9 4D89CA                          mov r10, r9
  2369 000014BC 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  2370                                          
  2371 000014C0 4D89D7                          mov r15, r10
  2372 000014C3 4983C7FF                        add r15, -1
  2373                                                                                         
  2374 000014C7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2375 000014CA 4983C404                        add r12, 4
  2376 000014CE 4983C4FF                        add r12, -1
  2377                                  
  2378 000014D2 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2379                                  .L_tc_recycle_frame_loop_0451:
  2380 000014D8 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  2381                                  
  2382 000014DC 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2383                                  
  2384                                  
  2385                                  
  2386 000014E1 41BE00000000                    mov r14, 0                                ; clean box
  2387                                  
  2388                                  
  2389 000014E7 4983C7FF                        add r15, -1           
  2390 000014EB 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2391                                  
  2392 000014EF 4983C4FF                        add r12, -1 
  2393                                  
  2394 000014F3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2395 000014F7 75DF                    	jne .L_tc_recycle_frame_loop_0451
  2396                                  .L_tc_recycle_frame_done_0451:
  2397                                  ;this pop rbp in sot to the right place
  2398 000014F9 4D89C7                  mov r15, r8
  2399                                  
  2400 000014FC 4983C704                        add r15, 4
  2401                                  
  2402 00001500 49C1E703                        shl r15, 3
  2403                                  
  2404 00001504 4C01FC                          add rsp, r15
  2405 00001507 5D                      	pop rbp                                  ; restore the old rbp
  2406                                  
  2407 00001508 488B4D00                        mov rcx, qword [rbp]
  2408 0000150C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2409                                            ; rbx <- code(proc)
  2410                                  
  2411 00001510 FFE3                            jmp rbx
  2412 00001512 C9                      	leave
  2413 00001513 C21800                  	ret 8 * (2 + 1)
  2414                                  .L_lambda_simple_end_03b6:	; new closure is in rax
  2415 00001516 48890425[18020000]      	mov qword [free_var_67], rax
  2416 0000151E 48B8-                   	mov rax, sob_void
  2416 00001520 [0000000000000000] 
  2417                                  
  2418 00001528 4889C7                  	mov rdi, rax
  2419 0000152B E828130100              	call print_sexpr_if_not_void
  2420                                  
  2421 00001530 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2422 00001535 E80D130100              	call malloc
  2423 0000153A 50                      	push rax
  2424 0000153B BF00000000              	mov rdi, 8 * 0	; new rib
  2425 00001540 E802130100              	call malloc
  2426 00001545 50                      	push rax
  2427 00001546 BF08000000              	mov rdi, 8 * 1	; extended env
  2428 0000154B E8F7120100              	call malloc
  2429 00001550 488B7D10                	mov rdi, ENV
  2430 00001554 BE00000000              	mov rsi, 0
  2431 00001559 BA01000000              	mov rdx, 1
  2432                                  .L_lambda_simple_env_loop_03b7:	; ext_env[i + 1] <-- env[i]
  2433 0000155E 4883FE00                	cmp rsi, 0
  2434 00001562 7410                    	je .L_lambda_simple_env_end_03b7
  2435 00001564 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2436 00001568 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2437 0000156C 48FFC6                  	inc rsi
  2438 0000156F 48FFC2                  	inc rdx
  2439 00001572 EBEA                    	jmp .L_lambda_simple_env_loop_03b7
  2440                                  .L_lambda_simple_env_end_03b7:
  2441 00001574 5B                      	pop rbx
  2442 00001575 BE00000000              	mov rsi, 0
  2443                                  .L_lambda_simple_params_loop_03b7:	; copy params
  2444 0000157A 4883FE00                	cmp rsi, 0
  2445 0000157E 740E                    	je .L_lambda_simple_params_end_03b7
  2446 00001580 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2447 00001585 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2448 00001589 48FFC6                  	inc rsi
  2449 0000158C EBEC                    	jmp .L_lambda_simple_params_loop_03b7
  2450                                  .L_lambda_simple_params_end_03b7:
  2451 0000158E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2452 00001591 4889C3                  	mov rbx, rax
  2453 00001594 58                      	pop rax
  2454 00001595 C60005                  	mov byte [rax], T_closure
  2455 00001598 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2456 0000159C 48C74009[A9150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b7
  2457 000015A4 E9BC000000              	jmp .L_lambda_simple_end_03b7
  2458                                  .L_lambda_simple_code_03b7:	; lambda-simple body
  2459 000015A9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2460 000015AF 740B                    	je .L_lambda_simple_arity_check_ok_0808
  2461 000015B1 FF742410                	push qword [rsp + 8 * 2]
  2462 000015B5 6A01                    	push 1
  2463 000015B7 E944120100              	jmp L_error_incorrect_arity_simple
  2464                                  .L_lambda_simple_arity_check_ok_0808:
  2465 000015BC C8000000                	enter 0, 0
  2466 000015C0 488B4520                mov rax, qword [rbp + 32]
  2467 000015C4 50                      	push rax
  2468 000015C5 6A01                    	push 1
  2469 000015C7 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2470 000015CF 803805                  	cmp byte [rax], T_closure 
  2471 000015D2 0F852A220100                    jne L_code_ptr_error
  2472                                  
  2473 000015D8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2474                                  
  2475 000015DC 53                              push rbx
  2476                                  
  2477 000015DD FF5009                          call SOB_CLOSURE_CODE(rax)
  2478                                  
  2479 000015E0 50                              	push rax
  2480 000015E1 6A01                    	push 1
  2481 000015E3 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2482                                  .L_lambda_simple_arity_check_ok_0809:
  2483 000015EB 803805                  	cmp byte [rax], T_closure
  2484                                  
  2485 000015EE 0F850E220100                    jne L_code_ptr_error                      ; rax <- proc
  2486                                  
  2487                                  
  2488 000015F4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2489                                  
  2490 000015F8 53                              push rbx                                  ; env pushed
  2491                                  
  2492 000015F9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2493                                  
  2494                                          ; sagydebug
  2495                                  
  2496 000015FC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2497                                  
  2498                                          
  2499                                          
  2500 000015FF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2501                                  
  2502 00001603 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2503                                  
  2504                                  
  2505 00001608 4D89CA                          mov r10, r9
  2506 0000160B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  2507                                          
  2508 0000160F 4D89D7                          mov r15, r10
  2509 00001612 4983C7FF                        add r15, -1
  2510                                                                                         
  2511 00001616 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2512 00001619 4983C404                        add r12, 4
  2513 0000161D 4983C4FF                        add r12, -1
  2514                                  
  2515 00001621 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2516                                  .L_tc_recycle_frame_loop_0452:
  2517 00001627 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  2518                                  
  2519 0000162B 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2520                                  
  2521                                  
  2522                                  
  2523 00001630 41BE00000000                    mov r14, 0                                ; clean box
  2524                                  
  2525                                  
  2526 00001636 4983C7FF                        add r15, -1           
  2527 0000163A 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2528                                  
  2529 0000163E 4983C4FF                        add r12, -1 
  2530                                  
  2531 00001642 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2532 00001646 75DF                    	jne .L_tc_recycle_frame_loop_0452
  2533                                  .L_tc_recycle_frame_done_0452:
  2534                                  ;this pop rbp in sot to the right place
  2535 00001648 4D89C7                  mov r15, r8
  2536                                  
  2537 0000164B 4983C704                        add r15, 4
  2538                                  
  2539 0000164F 49C1E703                        shl r15, 3
  2540                                  
  2541 00001653 4C01FC                          add rsp, r15
  2542 00001656 5D                      	pop rbp                                  ; restore the old rbp
  2543                                  
  2544 00001657 488B4D00                        mov rcx, qword [rbp]
  2545 0000165B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2546                                            ; rbx <- code(proc)
  2547                                  
  2548 0000165F FFE3                            jmp rbx
  2549 00001661 C9                      	leave
  2550 00001662 C21800                  	ret 8 * (2 + 1)
  2551                                  .L_lambda_simple_end_03b7:	; new closure is in rax
  2552 00001665 48890425[20020000]      	mov qword [free_var_68], rax
  2553 0000166D 48B8-                   	mov rax, sob_void
  2553 0000166F [0000000000000000] 
  2554                                  
  2555 00001677 4889C7                  	mov rdi, rax
  2556 0000167A E8D9110100              	call print_sexpr_if_not_void
  2557                                  
  2558 0000167F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2559 00001684 E8BE110100              	call malloc
  2560 00001689 50                      	push rax
  2561 0000168A BF00000000              	mov rdi, 8 * 0	; new rib
  2562 0000168F E8B3110100              	call malloc
  2563 00001694 50                      	push rax
  2564 00001695 BF08000000              	mov rdi, 8 * 1	; extended env
  2565 0000169A E8A8110100              	call malloc
  2566 0000169F 488B7D10                	mov rdi, ENV
  2567 000016A3 BE00000000              	mov rsi, 0
  2568 000016A8 BA01000000              	mov rdx, 1
  2569                                  .L_lambda_simple_env_loop_03b8:	; ext_env[i + 1] <-- env[i]
  2570 000016AD 4883FE00                	cmp rsi, 0
  2571 000016B1 7410                    	je .L_lambda_simple_env_end_03b8
  2572 000016B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2573 000016B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2574 000016BB 48FFC6                  	inc rsi
  2575 000016BE 48FFC2                  	inc rdx
  2576 000016C1 EBEA                    	jmp .L_lambda_simple_env_loop_03b8
  2577                                  .L_lambda_simple_env_end_03b8:
  2578 000016C3 5B                      	pop rbx
  2579 000016C4 BE00000000              	mov rsi, 0
  2580                                  .L_lambda_simple_params_loop_03b8:	; copy params
  2581 000016C9 4883FE00                	cmp rsi, 0
  2582 000016CD 740E                    	je .L_lambda_simple_params_end_03b8
  2583 000016CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2584 000016D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2585 000016D8 48FFC6                  	inc rsi
  2586 000016DB EBEC                    	jmp .L_lambda_simple_params_loop_03b8
  2587                                  .L_lambda_simple_params_end_03b8:
  2588 000016DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2589 000016E0 4889C3                  	mov rbx, rax
  2590 000016E3 58                      	pop rax
  2591 000016E4 C60005                  	mov byte [rax], T_closure
  2592 000016E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2593 000016EB 48C74009[F8160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b8
  2594 000016F3 E9BC000000              	jmp .L_lambda_simple_end_03b8
  2595                                  .L_lambda_simple_code_03b8:	; lambda-simple body
  2596 000016F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2597 000016FE 740B                    	je .L_lambda_simple_arity_check_ok_080a
  2598 00001700 FF742410                	push qword [rsp + 8 * 2]
  2599 00001704 6A01                    	push 1
  2600 00001706 E9F5100100              	jmp L_error_incorrect_arity_simple
  2601                                  .L_lambda_simple_arity_check_ok_080a:
  2602 0000170B C8000000                	enter 0, 0
  2603 0000170F 488B4520                mov rax, qword [rbp + 32]
  2604 00001713 50                      	push rax
  2605 00001714 6A01                    	push 1
  2606 00001716 488B0425[C8010000]      	mov rax, qword [free_var_57]
  2607 0000171E 803805                  	cmp byte [rax], T_closure 
  2608 00001721 0F85DB200100                    jne L_code_ptr_error
  2609                                  
  2610 00001727 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2611                                  
  2612 0000172B 53                              push rbx
  2613                                  
  2614 0000172C FF5009                          call SOB_CLOSURE_CODE(rax)
  2615                                  
  2616 0000172F 50                              	push rax
  2617 00001730 6A01                    	push 1
  2618 00001732 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2619                                  .L_lambda_simple_arity_check_ok_080b:
  2620 0000173A 803805                  	cmp byte [rax], T_closure
  2621                                  
  2622 0000173D 0F85BF200100                    jne L_code_ptr_error                      ; rax <- proc
  2623                                  
  2624                                  
  2625 00001743 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2626                                  
  2627 00001747 53                              push rbx                                  ; env pushed
  2628                                  
  2629 00001748 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2630                                  
  2631                                          ; sagydebug
  2632                                  
  2633 0000174B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2634                                  
  2635                                          
  2636                                          
  2637 0000174E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2638                                  
  2639 00001752 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2640                                  
  2641                                  
  2642 00001757 4D89CA                          mov r10, r9
  2643 0000175A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  2644                                          
  2645 0000175E 4D89D7                          mov r15, r10
  2646 00001761 4983C7FF                        add r15, -1
  2647                                                                                         
  2648 00001765 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2649 00001768 4983C404                        add r12, 4
  2650 0000176C 4983C4FF                        add r12, -1
  2651                                  
  2652 00001770 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2653                                  .L_tc_recycle_frame_loop_0453:
  2654 00001776 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  2655                                  
  2656 0000177A 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2657                                  
  2658                                  
  2659                                  
  2660 0000177F 41BE00000000                    mov r14, 0                                ; clean box
  2661                                  
  2662                                  
  2663 00001785 4983C7FF                        add r15, -1           
  2664 00001789 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2665                                  
  2666 0000178D 4983C4FF                        add r12, -1 
  2667                                  
  2668 00001791 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2669 00001795 75DF                    	jne .L_tc_recycle_frame_loop_0453
  2670                                  .L_tc_recycle_frame_done_0453:
  2671                                  ;this pop rbp in sot to the right place
  2672 00001797 4D89C7                  mov r15, r8
  2673                                  
  2674 0000179A 4983C704                        add r15, 4
  2675                                  
  2676 0000179E 49C1E703                        shl r15, 3
  2677                                  
  2678 000017A2 4C01FC                          add rsp, r15
  2679 000017A5 5D                      	pop rbp                                  ; restore the old rbp
  2680                                  
  2681 000017A6 488B4D00                        mov rcx, qword [rbp]
  2682 000017AA 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2683                                            ; rbx <- code(proc)
  2684                                  
  2685 000017AE FFE3                            jmp rbx
  2686 000017B0 C9                      	leave
  2687 000017B1 C21800                  	ret 8 * (2 + 1)
  2688                                  .L_lambda_simple_end_03b8:	; new closure is in rax
  2689 000017B4 48890425[28020000]      	mov qword [free_var_69], rax
  2690 000017BC 48B8-                   	mov rax, sob_void
  2690 000017BE [0000000000000000] 
  2691                                  
  2692 000017C6 4889C7                  	mov rdi, rax
  2693 000017C9 E88A100100              	call print_sexpr_if_not_void
  2694                                  
  2695 000017CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2696 000017D3 E86F100100              	call malloc
  2697 000017D8 50                      	push rax
  2698 000017D9 BF00000000              	mov rdi, 8 * 0	; new rib
  2699 000017DE E864100100              	call malloc
  2700 000017E3 50                      	push rax
  2701 000017E4 BF08000000              	mov rdi, 8 * 1	; extended env
  2702 000017E9 E859100100              	call malloc
  2703 000017EE 488B7D10                	mov rdi, ENV
  2704 000017F2 BE00000000              	mov rsi, 0
  2705 000017F7 BA01000000              	mov rdx, 1
  2706                                  .L_lambda_simple_env_loop_03b9:	; ext_env[i + 1] <-- env[i]
  2707 000017FC 4883FE00                	cmp rsi, 0
  2708 00001800 7410                    	je .L_lambda_simple_env_end_03b9
  2709 00001802 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2710 00001806 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2711 0000180A 48FFC6                  	inc rsi
  2712 0000180D 48FFC2                  	inc rdx
  2713 00001810 EBEA                    	jmp .L_lambda_simple_env_loop_03b9
  2714                                  .L_lambda_simple_env_end_03b9:
  2715 00001812 5B                      	pop rbx
  2716 00001813 BE00000000              	mov rsi, 0
  2717                                  .L_lambda_simple_params_loop_03b9:	; copy params
  2718 00001818 4883FE00                	cmp rsi, 0
  2719 0000181C 740E                    	je .L_lambda_simple_params_end_03b9
  2720 0000181E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2721 00001823 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2722 00001827 48FFC6                  	inc rsi
  2723 0000182A EBEC                    	jmp .L_lambda_simple_params_loop_03b9
  2724                                  .L_lambda_simple_params_end_03b9:
  2725 0000182C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2726 0000182F 4889C3                  	mov rbx, rax
  2727 00001832 58                      	pop rax
  2728 00001833 C60005                  	mov byte [rax], T_closure
  2729 00001836 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2730 0000183A 48C74009[47180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03b9
  2731 00001842 E9BC000000              	jmp .L_lambda_simple_end_03b9
  2732                                  .L_lambda_simple_code_03b9:	; lambda-simple body
  2733 00001847 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2734 0000184D 740B                    	je .L_lambda_simple_arity_check_ok_080c
  2735 0000184F FF742410                	push qword [rsp + 8 * 2]
  2736 00001853 6A01                    	push 1
  2737 00001855 E9A60F0100              	jmp L_error_incorrect_arity_simple
  2738                                  .L_lambda_simple_arity_check_ok_080c:
  2739 0000185A C8000000                	enter 0, 0
  2740 0000185E 488B4520                mov rax, qword [rbp + 32]
  2741 00001862 50                      	push rax
  2742 00001863 6A01                    	push 1
  2743 00001865 488B0425[D0010000]      	mov rax, qword [free_var_58]
  2744 0000186D 803805                  	cmp byte [rax], T_closure 
  2745 00001870 0F858C1F0100                    jne L_code_ptr_error
  2746                                  
  2747 00001876 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2748                                  
  2749 0000187A 53                              push rbx
  2750                                  
  2751 0000187B FF5009                          call SOB_CLOSURE_CODE(rax)
  2752                                  
  2753 0000187E 50                              	push rax
  2754 0000187F 6A01                    	push 1
  2755 00001881 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2756                                  .L_lambda_simple_arity_check_ok_080d:
  2757 00001889 803805                  	cmp byte [rax], T_closure
  2758                                  
  2759 0000188C 0F85701F0100                    jne L_code_ptr_error                      ; rax <- proc
  2760                                  
  2761                                  
  2762 00001892 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2763                                  
  2764 00001896 53                              push rbx                                  ; env pushed
  2765                                  
  2766 00001897 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2767                                  
  2768                                          ; sagydebug
  2769                                  
  2770 0000189A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2771                                  
  2772                                          
  2773                                          
  2774 0000189D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2775                                  
  2776 000018A1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2777                                  
  2778                                  
  2779 000018A6 4D89CA                          mov r10, r9
  2780 000018A9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  2781                                          
  2782 000018AD 4D89D7                          mov r15, r10
  2783 000018B0 4983C7FF                        add r15, -1
  2784                                                                                         
  2785 000018B4 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2786 000018B7 4983C404                        add r12, 4
  2787 000018BB 4983C4FF                        add r12, -1
  2788                                  
  2789 000018BF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2790                                  .L_tc_recycle_frame_loop_0454:
  2791 000018C5 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  2792                                  
  2793 000018C9 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2794                                  
  2795                                  
  2796                                  
  2797 000018CE 41BE00000000                    mov r14, 0                                ; clean box
  2798                                  
  2799                                  
  2800 000018D4 4983C7FF                        add r15, -1           
  2801 000018D8 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2802                                  
  2803 000018DC 4983C4FF                        add r12, -1 
  2804                                  
  2805 000018E0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2806 000018E4 75DF                    	jne .L_tc_recycle_frame_loop_0454
  2807                                  .L_tc_recycle_frame_done_0454:
  2808                                  ;this pop rbp in sot to the right place
  2809 000018E6 4D89C7                  mov r15, r8
  2810                                  
  2811 000018E9 4983C704                        add r15, 4
  2812                                  
  2813 000018ED 49C1E703                        shl r15, 3
  2814                                  
  2815 000018F1 4C01FC                          add rsp, r15
  2816 000018F4 5D                      	pop rbp                                  ; restore the old rbp
  2817                                  
  2818 000018F5 488B4D00                        mov rcx, qword [rbp]
  2819 000018F9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2820                                            ; rbx <- code(proc)
  2821                                  
  2822 000018FD FFE3                            jmp rbx
  2823 000018FF C9                      	leave
  2824 00001900 C21800                  	ret 8 * (2 + 1)
  2825                                  .L_lambda_simple_end_03b9:	; new closure is in rax
  2826 00001903 48890425[30020000]      	mov qword [free_var_70], rax
  2827 0000190B 48B8-                   	mov rax, sob_void
  2827 0000190D [0000000000000000] 
  2828                                  
  2829 00001915 4889C7                  	mov rdi, rax
  2830 00001918 E83B0F0100              	call print_sexpr_if_not_void
  2831                                  
  2832 0000191D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2833 00001922 E8200F0100              	call malloc
  2834 00001927 50                      	push rax
  2835 00001928 BF00000000              	mov rdi, 8 * 0	; new rib
  2836 0000192D E8150F0100              	call malloc
  2837 00001932 50                      	push rax
  2838 00001933 BF08000000              	mov rdi, 8 * 1	; extended env
  2839 00001938 E80A0F0100              	call malloc
  2840 0000193D 488B7D10                	mov rdi, ENV
  2841 00001941 BE00000000              	mov rsi, 0
  2842 00001946 BA01000000              	mov rdx, 1
  2843                                  .L_lambda_simple_env_loop_03ba:	; ext_env[i + 1] <-- env[i]
  2844 0000194B 4883FE00                	cmp rsi, 0
  2845 0000194F 7410                    	je .L_lambda_simple_env_end_03ba
  2846 00001951 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2847 00001955 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2848 00001959 48FFC6                  	inc rsi
  2849 0000195C 48FFC2                  	inc rdx
  2850 0000195F EBEA                    	jmp .L_lambda_simple_env_loop_03ba
  2851                                  .L_lambda_simple_env_end_03ba:
  2852 00001961 5B                      	pop rbx
  2853 00001962 BE00000000              	mov rsi, 0
  2854                                  .L_lambda_simple_params_loop_03ba:	; copy params
  2855 00001967 4883FE00                	cmp rsi, 0
  2856 0000196B 740E                    	je .L_lambda_simple_params_end_03ba
  2857 0000196D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2858 00001972 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2859 00001976 48FFC6                  	inc rsi
  2860 00001979 EBEC                    	jmp .L_lambda_simple_params_loop_03ba
  2861                                  .L_lambda_simple_params_end_03ba:
  2862 0000197B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2863 0000197E 4889C3                  	mov rbx, rax
  2864 00001981 58                      	pop rax
  2865 00001982 C60005                  	mov byte [rax], T_closure
  2866 00001985 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2867 00001989 48C74009[96190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ba
  2868 00001991 E9BC000000              	jmp .L_lambda_simple_end_03ba
  2869                                  .L_lambda_simple_code_03ba:	; lambda-simple body
  2870 00001996 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2871 0000199C 740B                    	je .L_lambda_simple_arity_check_ok_080e
  2872 0000199E FF742410                	push qword [rsp + 8 * 2]
  2873 000019A2 6A01                    	push 1
  2874 000019A4 E9570E0100              	jmp L_error_incorrect_arity_simple
  2875                                  .L_lambda_simple_arity_check_ok_080e:
  2876 000019A9 C8000000                	enter 0, 0
  2877 000019AD 488B4520                mov rax, qword [rbp + 32]
  2878 000019B1 50                      	push rax
  2879 000019B2 6A01                    	push 1
  2880 000019B4 488B0425[D8010000]      	mov rax, qword [free_var_59]
  2881 000019BC 803805                  	cmp byte [rax], T_closure 
  2882 000019BF 0F853D1E0100                    jne L_code_ptr_error
  2883                                  
  2884 000019C5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2885                                  
  2886 000019C9 53                              push rbx
  2887                                  
  2888 000019CA FF5009                          call SOB_CLOSURE_CODE(rax)
  2889                                  
  2890 000019CD 50                              	push rax
  2891 000019CE 6A01                    	push 1
  2892 000019D0 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2893                                  .L_lambda_simple_arity_check_ok_080f:
  2894 000019D8 803805                  	cmp byte [rax], T_closure
  2895                                  
  2896 000019DB 0F85211E0100                    jne L_code_ptr_error                      ; rax <- proc
  2897                                  
  2898                                  
  2899 000019E1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2900                                  
  2901 000019E5 53                              push rbx                                  ; env pushed
  2902                                  
  2903 000019E6 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2904                                  
  2905                                          ; sagydebug
  2906                                  
  2907 000019E9 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2908                                  
  2909                                          
  2910                                          
  2911 000019EC 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2912                                  
  2913 000019F0 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2914                                  
  2915                                  
  2916 000019F5 4D89CA                          mov r10, r9
  2917 000019F8 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  2918                                          
  2919 000019FC 4D89D7                          mov r15, r10
  2920 000019FF 4983C7FF                        add r15, -1
  2921                                                                                         
  2922 00001A03 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2923 00001A06 4983C404                        add r12, 4
  2924 00001A0A 4983C4FF                        add r12, -1
  2925                                  
  2926 00001A0E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2927                                  .L_tc_recycle_frame_loop_0455:
  2928 00001A14 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  2929                                  
  2930 00001A18 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2931                                  
  2932                                  
  2933                                  
  2934 00001A1D 41BE00000000                    mov r14, 0                                ; clean box
  2935                                  
  2936                                  
  2937 00001A23 4983C7FF                        add r15, -1           
  2938 00001A27 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2939                                  
  2940 00001A2B 4983C4FF                        add r12, -1 
  2941                                  
  2942 00001A2F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2943 00001A33 75DF                    	jne .L_tc_recycle_frame_loop_0455
  2944                                  .L_tc_recycle_frame_done_0455:
  2945                                  ;this pop rbp in sot to the right place
  2946 00001A35 4D89C7                  mov r15, r8
  2947                                  
  2948 00001A38 4983C704                        add r15, 4
  2949                                  
  2950 00001A3C 49C1E703                        shl r15, 3
  2951                                  
  2952 00001A40 4C01FC                          add rsp, r15
  2953 00001A43 5D                      	pop rbp                                  ; restore the old rbp
  2954                                  
  2955 00001A44 488B4D00                        mov rcx, qword [rbp]
  2956 00001A48 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2957                                            ; rbx <- code(proc)
  2958                                  
  2959 00001A4C FFE3                            jmp rbx
  2960 00001A4E C9                      	leave
  2961 00001A4F C21800                  	ret 8 * (2 + 1)
  2962                                  .L_lambda_simple_end_03ba:	; new closure is in rax
  2963 00001A52 48890425[38020000]      	mov qword [free_var_71], rax
  2964 00001A5A 48B8-                   	mov rax, sob_void
  2964 00001A5C [0000000000000000] 
  2965                                  
  2966 00001A64 4889C7                  	mov rdi, rax
  2967 00001A67 E8EC0D0100              	call print_sexpr_if_not_void
  2968                                  
  2969 00001A6C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2970 00001A71 E8D10D0100              	call malloc
  2971 00001A76 50                      	push rax
  2972 00001A77 BF00000000              	mov rdi, 8 * 0	; new rib
  2973 00001A7C E8C60D0100              	call malloc
  2974 00001A81 50                      	push rax
  2975 00001A82 BF08000000              	mov rdi, 8 * 1	; extended env
  2976 00001A87 E8BB0D0100              	call malloc
  2977 00001A8C 488B7D10                	mov rdi, ENV
  2978 00001A90 BE00000000              	mov rsi, 0
  2979 00001A95 BA01000000              	mov rdx, 1
  2980                                  .L_lambda_simple_env_loop_03bb:	; ext_env[i + 1] <-- env[i]
  2981 00001A9A 4883FE00                	cmp rsi, 0
  2982 00001A9E 7410                    	je .L_lambda_simple_env_end_03bb
  2983 00001AA0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2984 00001AA4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2985 00001AA8 48FFC6                  	inc rsi
  2986 00001AAB 48FFC2                  	inc rdx
  2987 00001AAE EBEA                    	jmp .L_lambda_simple_env_loop_03bb
  2988                                  .L_lambda_simple_env_end_03bb:
  2989 00001AB0 5B                      	pop rbx
  2990 00001AB1 BE00000000              	mov rsi, 0
  2991                                  .L_lambda_simple_params_loop_03bb:	; copy params
  2992 00001AB6 4883FE00                	cmp rsi, 0
  2993 00001ABA 740E                    	je .L_lambda_simple_params_end_03bb
  2994 00001ABC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2995 00001AC1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2996 00001AC5 48FFC6                  	inc rsi
  2997 00001AC8 EBEC                    	jmp .L_lambda_simple_params_loop_03bb
  2998                                  .L_lambda_simple_params_end_03bb:
  2999 00001ACA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3000 00001ACD 4889C3                  	mov rbx, rax
  3001 00001AD0 58                      	pop rax
  3002 00001AD1 C60005                  	mov byte [rax], T_closure
  3003 00001AD4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3004 00001AD8 48C74009[E51A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03bb
  3005 00001AE0 E9BC000000              	jmp .L_lambda_simple_end_03bb
  3006                                  .L_lambda_simple_code_03bb:	; lambda-simple body
  3007 00001AE5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3008 00001AEB 740B                    	je .L_lambda_simple_arity_check_ok_0810
  3009 00001AED FF742410                	push qword [rsp + 8 * 2]
  3010 00001AF1 6A01                    	push 1
  3011 00001AF3 E9080D0100              	jmp L_error_incorrect_arity_simple
  3012                                  .L_lambda_simple_arity_check_ok_0810:
  3013 00001AF8 C8000000                	enter 0, 0
  3014 00001AFC 488B4520                mov rax, qword [rbp + 32]
  3015 00001B00 50                      	push rax
  3016 00001B01 6A01                    	push 1
  3017 00001B03 488B0425[C0010000]      	mov rax, qword [free_var_56]
  3018 00001B0B 803805                  	cmp byte [rax], T_closure 
  3019 00001B0E 0F85EE1C0100                    jne L_code_ptr_error
  3020                                  
  3021 00001B14 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3022                                  
  3023 00001B18 53                              push rbx
  3024                                  
  3025 00001B19 FF5009                          call SOB_CLOSURE_CODE(rax)
  3026                                  
  3027 00001B1C 50                              	push rax
  3028 00001B1D 6A01                    	push 1
  3029 00001B1F 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3030                                  .L_lambda_simple_arity_check_ok_0811:
  3031 00001B27 803805                  	cmp byte [rax], T_closure
  3032                                  
  3033 00001B2A 0F85D21C0100                    jne L_code_ptr_error                      ; rax <- proc
  3034                                  
  3035                                  
  3036 00001B30 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3037                                  
  3038 00001B34 53                              push rbx                                  ; env pushed
  3039                                  
  3040 00001B35 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3041                                  
  3042                                          ; sagydebug
  3043                                  
  3044 00001B38 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3045                                  
  3046                                          
  3047                                          
  3048 00001B3B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3049                                  
  3050 00001B3F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3051                                  
  3052                                  
  3053 00001B44 4D89CA                          mov r10, r9
  3054 00001B47 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  3055                                          
  3056 00001B4B 4D89D7                          mov r15, r10
  3057 00001B4E 4983C7FF                        add r15, -1
  3058                                                                                         
  3059 00001B52 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3060 00001B55 4983C404                        add r12, 4
  3061 00001B59 4983C4FF                        add r12, -1
  3062                                  
  3063 00001B5D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3064                                  .L_tc_recycle_frame_loop_0456:
  3065 00001B63 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  3066                                  
  3067 00001B67 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3068                                  
  3069                                  
  3070                                  
  3071 00001B6C 41BE00000000                    mov r14, 0                                ; clean box
  3072                                  
  3073                                  
  3074 00001B72 4983C7FF                        add r15, -1           
  3075 00001B76 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3076                                  
  3077 00001B7A 4983C4FF                        add r12, -1 
  3078                                  
  3079 00001B7E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3080 00001B82 75DF                    	jne .L_tc_recycle_frame_loop_0456
  3081                                  .L_tc_recycle_frame_done_0456:
  3082                                  ;this pop rbp in sot to the right place
  3083 00001B84 4D89C7                  mov r15, r8
  3084                                  
  3085 00001B87 4983C704                        add r15, 4
  3086                                  
  3087 00001B8B 49C1E703                        shl r15, 3
  3088                                  
  3089 00001B8F 4C01FC                          add rsp, r15
  3090 00001B92 5D                      	pop rbp                                  ; restore the old rbp
  3091                                  
  3092 00001B93 488B4D00                        mov rcx, qword [rbp]
  3093 00001B97 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3094                                            ; rbx <- code(proc)
  3095                                  
  3096 00001B9B FFE3                            jmp rbx
  3097 00001B9D C9                      	leave
  3098 00001B9E C21800                  	ret 8 * (2 + 1)
  3099                                  .L_lambda_simple_end_03bb:	; new closure is in rax
  3100 00001BA1 48890425[40020000]      	mov qword [free_var_72], rax
  3101 00001BA9 48B8-                   	mov rax, sob_void
  3101 00001BAB [0000000000000000] 
  3102                                  
  3103 00001BB3 4889C7                  	mov rdi, rax
  3104 00001BB6 E89D0C0100              	call print_sexpr_if_not_void
  3105                                  
  3106 00001BBB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3107 00001BC0 E8820C0100              	call malloc
  3108 00001BC5 50                      	push rax
  3109 00001BC6 BF00000000              	mov rdi, 8 * 0	; new rib
  3110 00001BCB E8770C0100              	call malloc
  3111 00001BD0 50                      	push rax
  3112 00001BD1 BF08000000              	mov rdi, 8 * 1	; extended env
  3113 00001BD6 E86C0C0100              	call malloc
  3114 00001BDB 488B7D10                	mov rdi, ENV
  3115 00001BDF BE00000000              	mov rsi, 0
  3116 00001BE4 BA01000000              	mov rdx, 1
  3117                                  .L_lambda_simple_env_loop_03bc:	; ext_env[i + 1] <-- env[i]
  3118 00001BE9 4883FE00                	cmp rsi, 0
  3119 00001BED 7410                    	je .L_lambda_simple_env_end_03bc
  3120 00001BEF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3121 00001BF3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3122 00001BF7 48FFC6                  	inc rsi
  3123 00001BFA 48FFC2                  	inc rdx
  3124 00001BFD EBEA                    	jmp .L_lambda_simple_env_loop_03bc
  3125                                  .L_lambda_simple_env_end_03bc:
  3126 00001BFF 5B                      	pop rbx
  3127 00001C00 BE00000000              	mov rsi, 0
  3128                                  .L_lambda_simple_params_loop_03bc:	; copy params
  3129 00001C05 4883FE00                	cmp rsi, 0
  3130 00001C09 740E                    	je .L_lambda_simple_params_end_03bc
  3131 00001C0B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3132 00001C10 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3133 00001C14 48FFC6                  	inc rsi
  3134 00001C17 EBEC                    	jmp .L_lambda_simple_params_loop_03bc
  3135                                  .L_lambda_simple_params_end_03bc:
  3136 00001C19 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3137 00001C1C 4889C3                  	mov rbx, rax
  3138 00001C1F 58                      	pop rax
  3139 00001C20 C60005                  	mov byte [rax], T_closure
  3140 00001C23 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3141 00001C27 48C74009[341C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03bc
  3142 00001C2F E9BC000000              	jmp .L_lambda_simple_end_03bc
  3143                                  .L_lambda_simple_code_03bc:	; lambda-simple body
  3144 00001C34 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3145 00001C3A 740B                    	je .L_lambda_simple_arity_check_ok_0812
  3146 00001C3C FF742410                	push qword [rsp + 8 * 2]
  3147 00001C40 6A01                    	push 1
  3148 00001C42 E9B90B0100              	jmp L_error_incorrect_arity_simple
  3149                                  .L_lambda_simple_arity_check_ok_0812:
  3150 00001C47 C8000000                	enter 0, 0
  3151 00001C4B 488B4520                mov rax, qword [rbp + 32]
  3152 00001C4F 50                      	push rax
  3153 00001C50 6A01                    	push 1
  3154 00001C52 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3155 00001C5A 803805                  	cmp byte [rax], T_closure 
  3156 00001C5D 0F859F1B0100                    jne L_code_ptr_error
  3157                                  
  3158 00001C63 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3159                                  
  3160 00001C67 53                              push rbx
  3161                                  
  3162 00001C68 FF5009                          call SOB_CLOSURE_CODE(rax)
  3163                                  
  3164 00001C6B 50                              	push rax
  3165 00001C6C 6A01                    	push 1
  3166 00001C6E 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3167                                  .L_lambda_simple_arity_check_ok_0813:
  3168 00001C76 803805                  	cmp byte [rax], T_closure
  3169                                  
  3170 00001C79 0F85831B0100                    jne L_code_ptr_error                      ; rax <- proc
  3171                                  
  3172                                  
  3173 00001C7F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3174                                  
  3175 00001C83 53                              push rbx                                  ; env pushed
  3176                                  
  3177 00001C84 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3178                                  
  3179                                          ; sagydebug
  3180                                  
  3181 00001C87 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3182                                  
  3183                                          
  3184                                          
  3185 00001C8A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3186                                  
  3187 00001C8E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3188                                  
  3189                                  
  3190 00001C93 4D89CA                          mov r10, r9
  3191 00001C96 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  3192                                          
  3193 00001C9A 4D89D7                          mov r15, r10
  3194 00001C9D 4983C7FF                        add r15, -1
  3195                                                                                         
  3196 00001CA1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3197 00001CA4 4983C404                        add r12, 4
  3198 00001CA8 4983C4FF                        add r12, -1
  3199                                  
  3200 00001CAC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3201                                  .L_tc_recycle_frame_loop_0457:
  3202 00001CB2 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  3203                                  
  3204 00001CB6 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3205                                  
  3206                                  
  3207                                  
  3208 00001CBB 41BE00000000                    mov r14, 0                                ; clean box
  3209                                  
  3210                                  
  3211 00001CC1 4983C7FF                        add r15, -1           
  3212 00001CC5 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3213                                  
  3214 00001CC9 4983C4FF                        add r12, -1 
  3215                                  
  3216 00001CCD 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3217 00001CD1 75DF                    	jne .L_tc_recycle_frame_loop_0457
  3218                                  .L_tc_recycle_frame_done_0457:
  3219                                  ;this pop rbp in sot to the right place
  3220 00001CD3 4D89C7                  mov r15, r8
  3221                                  
  3222 00001CD6 4983C704                        add r15, 4
  3223                                  
  3224 00001CDA 49C1E703                        shl r15, 3
  3225                                  
  3226 00001CDE 4C01FC                          add rsp, r15
  3227 00001CE1 5D                      	pop rbp                                  ; restore the old rbp
  3228                                  
  3229 00001CE2 488B4D00                        mov rcx, qword [rbp]
  3230 00001CE6 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3231                                            ; rbx <- code(proc)
  3232                                  
  3233 00001CEA FFE3                            jmp rbx
  3234 00001CEC C9                      	leave
  3235 00001CED C21800                  	ret 8 * (2 + 1)
  3236                                  .L_lambda_simple_end_03bc:	; new closure is in rax
  3237 00001CF0 48890425[48020000]      	mov qword [free_var_73], rax
  3238 00001CF8 48B8-                   	mov rax, sob_void
  3238 00001CFA [0000000000000000] 
  3239                                  
  3240 00001D02 4889C7                  	mov rdi, rax
  3241 00001D05 E84E0B0100              	call print_sexpr_if_not_void
  3242                                  
  3243 00001D0A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3244 00001D0F E8330B0100              	call malloc
  3245 00001D14 50                      	push rax
  3246 00001D15 BF00000000              	mov rdi, 8 * 0	; new rib
  3247 00001D1A E8280B0100              	call malloc
  3248 00001D1F 50                      	push rax
  3249 00001D20 BF08000000              	mov rdi, 8 * 1	; extended env
  3250 00001D25 E81D0B0100              	call malloc
  3251 00001D2A 488B7D10                	mov rdi, ENV
  3252 00001D2E BE00000000              	mov rsi, 0
  3253 00001D33 BA01000000              	mov rdx, 1
  3254                                  .L_lambda_simple_env_loop_03bd:	; ext_env[i + 1] <-- env[i]
  3255 00001D38 4883FE00                	cmp rsi, 0
  3256 00001D3C 7410                    	je .L_lambda_simple_env_end_03bd
  3257 00001D3E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3258 00001D42 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3259 00001D46 48FFC6                  	inc rsi
  3260 00001D49 48FFC2                  	inc rdx
  3261 00001D4C EBEA                    	jmp .L_lambda_simple_env_loop_03bd
  3262                                  .L_lambda_simple_env_end_03bd:
  3263 00001D4E 5B                      	pop rbx
  3264 00001D4F BE00000000              	mov rsi, 0
  3265                                  .L_lambda_simple_params_loop_03bd:	; copy params
  3266 00001D54 4883FE00                	cmp rsi, 0
  3267 00001D58 740E                    	je .L_lambda_simple_params_end_03bd
  3268 00001D5A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3269 00001D5F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3270 00001D63 48FFC6                  	inc rsi
  3271 00001D66 EBEC                    	jmp .L_lambda_simple_params_loop_03bd
  3272                                  .L_lambda_simple_params_end_03bd:
  3273 00001D68 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3274 00001D6B 4889C3                  	mov rbx, rax
  3275 00001D6E 58                      	pop rax
  3276 00001D6F C60005                  	mov byte [rax], T_closure
  3277 00001D72 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3278 00001D76 48C74009[831D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03bd
  3279 00001D7E E9BC000000              	jmp .L_lambda_simple_end_03bd
  3280                                  .L_lambda_simple_code_03bd:	; lambda-simple body
  3281 00001D83 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3282 00001D89 740B                    	je .L_lambda_simple_arity_check_ok_0814
  3283 00001D8B FF742410                	push qword [rsp + 8 * 2]
  3284 00001D8F 6A01                    	push 1
  3285 00001D91 E96A0A0100              	jmp L_error_incorrect_arity_simple
  3286                                  .L_lambda_simple_arity_check_ok_0814:
  3287 00001D96 C8000000                	enter 0, 0
  3288 00001D9A 488B4520                mov rax, qword [rbp + 32]
  3289 00001D9E 50                      	push rax
  3290 00001D9F 6A01                    	push 1
  3291 00001DA1 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3292 00001DA9 803805                  	cmp byte [rax], T_closure 
  3293 00001DAC 0F85501A0100                    jne L_code_ptr_error
  3294                                  
  3295 00001DB2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3296                                  
  3297 00001DB6 53                              push rbx
  3298                                  
  3299 00001DB7 FF5009                          call SOB_CLOSURE_CODE(rax)
  3300                                  
  3301 00001DBA 50                              	push rax
  3302 00001DBB 6A01                    	push 1
  3303 00001DBD 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3304                                  .L_lambda_simple_arity_check_ok_0815:
  3305 00001DC5 803805                  	cmp byte [rax], T_closure
  3306                                  
  3307 00001DC8 0F85341A0100                    jne L_code_ptr_error                      ; rax <- proc
  3308                                  
  3309                                  
  3310 00001DCE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3311                                  
  3312 00001DD2 53                              push rbx                                  ; env pushed
  3313                                  
  3314 00001DD3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3315                                  
  3316                                          ; sagydebug
  3317                                  
  3318 00001DD6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3319                                  
  3320                                          
  3321                                          
  3322 00001DD9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3323                                  
  3324 00001DDD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3325                                  
  3326                                  
  3327 00001DE2 4D89CA                          mov r10, r9
  3328 00001DE5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  3329                                          
  3330 00001DE9 4D89D7                          mov r15, r10
  3331 00001DEC 4983C7FF                        add r15, -1
  3332                                                                                         
  3333 00001DF0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3334 00001DF3 4983C404                        add r12, 4
  3335 00001DF7 4983C4FF                        add r12, -1
  3336                                  
  3337 00001DFB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3338                                  .L_tc_recycle_frame_loop_0458:
  3339 00001E01 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  3340                                  
  3341 00001E05 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3342                                  
  3343                                  
  3344                                  
  3345 00001E0A 41BE00000000                    mov r14, 0                                ; clean box
  3346                                  
  3347                                  
  3348 00001E10 4983C7FF                        add r15, -1           
  3349 00001E14 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3350                                  
  3351 00001E18 4983C4FF                        add r12, -1 
  3352                                  
  3353 00001E1C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3354 00001E20 75DF                    	jne .L_tc_recycle_frame_loop_0458
  3355                                  .L_tc_recycle_frame_done_0458:
  3356                                  ;this pop rbp in sot to the right place
  3357 00001E22 4D89C7                  mov r15, r8
  3358                                  
  3359 00001E25 4983C704                        add r15, 4
  3360                                  
  3361 00001E29 49C1E703                        shl r15, 3
  3362                                  
  3363 00001E2D 4C01FC                          add rsp, r15
  3364 00001E30 5D                      	pop rbp                                  ; restore the old rbp
  3365                                  
  3366 00001E31 488B4D00                        mov rcx, qword [rbp]
  3367 00001E35 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3368                                            ; rbx <- code(proc)
  3369                                  
  3370 00001E39 FFE3                            jmp rbx
  3371 00001E3B C9                      	leave
  3372 00001E3C C21800                  	ret 8 * (2 + 1)
  3373                                  .L_lambda_simple_end_03bd:	; new closure is in rax
  3374 00001E3F 48890425[50020000]      	mov qword [free_var_74], rax
  3375 00001E47 48B8-                   	mov rax, sob_void
  3375 00001E49 [0000000000000000] 
  3376                                  
  3377 00001E51 4889C7                  	mov rdi, rax
  3378 00001E54 E8FF090100              	call print_sexpr_if_not_void
  3379                                  
  3380 00001E59 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3381 00001E5E E8E4090100              	call malloc
  3382 00001E63 50                      	push rax
  3383 00001E64 BF00000000              	mov rdi, 8 * 0	; new rib
  3384 00001E69 E8D9090100              	call malloc
  3385 00001E6E 50                      	push rax
  3386 00001E6F BF08000000              	mov rdi, 8 * 1	; extended env
  3387 00001E74 E8CE090100              	call malloc
  3388 00001E79 488B7D10                	mov rdi, ENV
  3389 00001E7D BE00000000              	mov rsi, 0
  3390 00001E82 BA01000000              	mov rdx, 1
  3391                                  .L_lambda_simple_env_loop_03be:	; ext_env[i + 1] <-- env[i]
  3392 00001E87 4883FE00                	cmp rsi, 0
  3393 00001E8B 7410                    	je .L_lambda_simple_env_end_03be
  3394 00001E8D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3395 00001E91 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3396 00001E95 48FFC6                  	inc rsi
  3397 00001E98 48FFC2                  	inc rdx
  3398 00001E9B EBEA                    	jmp .L_lambda_simple_env_loop_03be
  3399                                  .L_lambda_simple_env_end_03be:
  3400 00001E9D 5B                      	pop rbx
  3401 00001E9E BE00000000              	mov rsi, 0
  3402                                  .L_lambda_simple_params_loop_03be:	; copy params
  3403 00001EA3 4883FE00                	cmp rsi, 0
  3404 00001EA7 740E                    	je .L_lambda_simple_params_end_03be
  3405 00001EA9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3406 00001EAE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3407 00001EB2 48FFC6                  	inc rsi
  3408 00001EB5 EBEC                    	jmp .L_lambda_simple_params_loop_03be
  3409                                  .L_lambda_simple_params_end_03be:
  3410 00001EB7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3411 00001EBA 4889C3                  	mov rbx, rax
  3412 00001EBD 58                      	pop rax
  3413 00001EBE C60005                  	mov byte [rax], T_closure
  3414 00001EC1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3415 00001EC5 48C74009[D21E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03be
  3416 00001ECD E9BC000000              	jmp .L_lambda_simple_end_03be
  3417                                  .L_lambda_simple_code_03be:	; lambda-simple body
  3418 00001ED2 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3419 00001ED8 740B                    	je .L_lambda_simple_arity_check_ok_0816
  3420 00001EDA FF742410                	push qword [rsp + 8 * 2]
  3421 00001EDE 6A01                    	push 1
  3422 00001EE0 E91B090100              	jmp L_error_incorrect_arity_simple
  3423                                  .L_lambda_simple_arity_check_ok_0816:
  3424 00001EE5 C8000000                	enter 0, 0
  3425 00001EE9 488B4520                mov rax, qword [rbp + 32]
  3426 00001EED 50                      	push rax
  3427 00001EEE 6A01                    	push 1
  3428 00001EF0 488B0425[D8010000]      	mov rax, qword [free_var_59]
  3429 00001EF8 803805                  	cmp byte [rax], T_closure 
  3430 00001EFB 0F8501190100                    jne L_code_ptr_error
  3431                                  
  3432 00001F01 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3433                                  
  3434 00001F05 53                              push rbx
  3435                                  
  3436 00001F06 FF5009                          call SOB_CLOSURE_CODE(rax)
  3437                                  
  3438 00001F09 50                              	push rax
  3439 00001F0A 6A01                    	push 1
  3440 00001F0C 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3441                                  .L_lambda_simple_arity_check_ok_0817:
  3442 00001F14 803805                  	cmp byte [rax], T_closure
  3443                                  
  3444 00001F17 0F85E5180100                    jne L_code_ptr_error                      ; rax <- proc
  3445                                  
  3446                                  
  3447 00001F1D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3448                                  
  3449 00001F21 53                              push rbx                                  ; env pushed
  3450                                  
  3451 00001F22 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3452                                  
  3453                                          ; sagydebug
  3454                                  
  3455 00001F25 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3456                                  
  3457                                          
  3458                                          
  3459 00001F28 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3460                                  
  3461 00001F2C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3462                                  
  3463                                  
  3464 00001F31 4D89CA                          mov r10, r9
  3465 00001F34 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  3466                                          
  3467 00001F38 4D89D7                          mov r15, r10
  3468 00001F3B 4983C7FF                        add r15, -1
  3469                                                                                         
  3470 00001F3F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3471 00001F42 4983C404                        add r12, 4
  3472 00001F46 4983C4FF                        add r12, -1
  3473                                  
  3474 00001F4A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3475                                  .L_tc_recycle_frame_loop_0459:
  3476 00001F50 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  3477                                  
  3478 00001F54 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3479                                  
  3480                                  
  3481                                  
  3482 00001F59 41BE00000000                    mov r14, 0                                ; clean box
  3483                                  
  3484                                  
  3485 00001F5F 4983C7FF                        add r15, -1           
  3486 00001F63 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3487                                  
  3488 00001F67 4983C4FF                        add r12, -1 
  3489                                  
  3490 00001F6B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3491 00001F6F 75DF                    	jne .L_tc_recycle_frame_loop_0459
  3492                                  .L_tc_recycle_frame_done_0459:
  3493                                  ;this pop rbp in sot to the right place
  3494 00001F71 4D89C7                  mov r15, r8
  3495                                  
  3496 00001F74 4983C704                        add r15, 4
  3497                                  
  3498 00001F78 49C1E703                        shl r15, 3
  3499                                  
  3500 00001F7C 4C01FC                          add rsp, r15
  3501 00001F7F 5D                      	pop rbp                                  ; restore the old rbp
  3502                                  
  3503 00001F80 488B4D00                        mov rcx, qword [rbp]
  3504 00001F84 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3505                                            ; rbx <- code(proc)
  3506                                  
  3507 00001F88 FFE3                            jmp rbx
  3508 00001F8A C9                      	leave
  3509 00001F8B C21800                  	ret 8 * (2 + 1)
  3510                                  .L_lambda_simple_end_03be:	; new closure is in rax
  3511 00001F8E 48890425[58020000]      	mov qword [free_var_75], rax
  3512 00001F96 48B8-                   	mov rax, sob_void
  3512 00001F98 [0000000000000000] 
  3513                                  
  3514 00001FA0 4889C7                  	mov rdi, rax
  3515 00001FA3 E8B0080100              	call print_sexpr_if_not_void
  3516                                  
  3517 00001FA8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3518 00001FAD E895080100              	call malloc
  3519 00001FB2 50                      	push rax
  3520 00001FB3 BF00000000              	mov rdi, 8 * 0	; new rib
  3521 00001FB8 E88A080100              	call malloc
  3522 00001FBD 50                      	push rax
  3523 00001FBE BF08000000              	mov rdi, 8 * 1	; extended env
  3524 00001FC3 E87F080100              	call malloc
  3525 00001FC8 488B7D10                	mov rdi, ENV
  3526 00001FCC BE00000000              	mov rsi, 0
  3527 00001FD1 BA01000000              	mov rdx, 1
  3528                                  .L_lambda_simple_env_loop_03bf:	; ext_env[i + 1] <-- env[i]
  3529 00001FD6 4883FE00                	cmp rsi, 0
  3530 00001FDA 7410                    	je .L_lambda_simple_env_end_03bf
  3531 00001FDC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3532 00001FE0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3533 00001FE4 48FFC6                  	inc rsi
  3534 00001FE7 48FFC2                  	inc rdx
  3535 00001FEA EBEA                    	jmp .L_lambda_simple_env_loop_03bf
  3536                                  .L_lambda_simple_env_end_03bf:
  3537 00001FEC 5B                      	pop rbx
  3538 00001FED BE00000000              	mov rsi, 0
  3539                                  .L_lambda_simple_params_loop_03bf:	; copy params
  3540 00001FF2 4883FE00                	cmp rsi, 0
  3541 00001FF6 740E                    	je .L_lambda_simple_params_end_03bf
  3542 00001FF8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3543 00001FFD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3544 00002001 48FFC6                  	inc rsi
  3545 00002004 EBEC                    	jmp .L_lambda_simple_params_loop_03bf
  3546                                  .L_lambda_simple_params_end_03bf:
  3547 00002006 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3548 00002009 4889C3                  	mov rbx, rax
  3549 0000200C 58                      	pop rax
  3550 0000200D C60005                  	mov byte [rax], T_closure
  3551 00002010 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3552 00002014 48C74009[21200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03bf
  3553 0000201C E9BC000000              	jmp .L_lambda_simple_end_03bf
  3554                                  .L_lambda_simple_code_03bf:	; lambda-simple body
  3555 00002021 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3556 00002027 740B                    	je .L_lambda_simple_arity_check_ok_0818
  3557 00002029 FF742410                	push qword [rsp + 8 * 2]
  3558 0000202D 6A01                    	push 1
  3559 0000202F E9CC070100              	jmp L_error_incorrect_arity_simple
  3560                                  .L_lambda_simple_arity_check_ok_0818:
  3561 00002034 C8000000                	enter 0, 0
  3562 00002038 488B4520                mov rax, qword [rbp + 32]
  3563 0000203C 50                      	push rax
  3564 0000203D 6A01                    	push 1
  3565 0000203F 488B0425[C0010000]      	mov rax, qword [free_var_56]
  3566 00002047 803805                  	cmp byte [rax], T_closure 
  3567 0000204A 0F85B2170100                    jne L_code_ptr_error
  3568                                  
  3569 00002050 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3570                                  
  3571 00002054 53                              push rbx
  3572                                  
  3573 00002055 FF5009                          call SOB_CLOSURE_CODE(rax)
  3574                                  
  3575 00002058 50                              	push rax
  3576 00002059 6A01                    	push 1
  3577 0000205B 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3578                                  .L_lambda_simple_arity_check_ok_0819:
  3579 00002063 803805                  	cmp byte [rax], T_closure
  3580                                  
  3581 00002066 0F8596170100                    jne L_code_ptr_error                      ; rax <- proc
  3582                                  
  3583                                  
  3584 0000206C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3585                                  
  3586 00002070 53                              push rbx                                  ; env pushed
  3587                                  
  3588 00002071 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3589                                  
  3590                                          ; sagydebug
  3591                                  
  3592 00002074 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3593                                  
  3594                                          
  3595                                          
  3596 00002077 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3597                                  
  3598 0000207B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3599                                  
  3600                                  
  3601 00002080 4D89CA                          mov r10, r9
  3602 00002083 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  3603                                          
  3604 00002087 4D89D7                          mov r15, r10
  3605 0000208A 4983C7FF                        add r15, -1
  3606                                                                                         
  3607 0000208E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3608 00002091 4983C404                        add r12, 4
  3609 00002095 4983C4FF                        add r12, -1
  3610                                  
  3611 00002099 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3612                                  .L_tc_recycle_frame_loop_045a:
  3613 0000209F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  3614                                  
  3615 000020A3 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3616                                  
  3617                                  
  3618                                  
  3619 000020A8 41BE00000000                    mov r14, 0                                ; clean box
  3620                                  
  3621                                  
  3622 000020AE 4983C7FF                        add r15, -1           
  3623 000020B2 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3624                                  
  3625 000020B6 4983C4FF                        add r12, -1 
  3626                                  
  3627 000020BA 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3628 000020BE 75DF                    	jne .L_tc_recycle_frame_loop_045a
  3629                                  .L_tc_recycle_frame_done_045a:
  3630                                  ;this pop rbp in sot to the right place
  3631 000020C0 4D89C7                  mov r15, r8
  3632                                  
  3633 000020C3 4983C704                        add r15, 4
  3634                                  
  3635 000020C7 49C1E703                        shl r15, 3
  3636                                  
  3637 000020CB 4C01FC                          add rsp, r15
  3638 000020CE 5D                      	pop rbp                                  ; restore the old rbp
  3639                                  
  3640 000020CF 488B4D00                        mov rcx, qword [rbp]
  3641 000020D3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3642                                            ; rbx <- code(proc)
  3643                                  
  3644 000020D7 FFE3                            jmp rbx
  3645 000020D9 C9                      	leave
  3646 000020DA C21800                  	ret 8 * (2 + 1)
  3647                                  .L_lambda_simple_end_03bf:	; new closure is in rax
  3648 000020DD 48890425[60020000]      	mov qword [free_var_76], rax
  3649 000020E5 48B8-                   	mov rax, sob_void
  3649 000020E7 [0000000000000000] 
  3650                                  
  3651 000020EF 4889C7                  	mov rdi, rax
  3652 000020F2 E861070100              	call print_sexpr_if_not_void
  3653                                  
  3654 000020F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3655 000020FC E846070100              	call malloc
  3656 00002101 50                      	push rax
  3657 00002102 BF00000000              	mov rdi, 8 * 0	; new rib
  3658 00002107 E83B070100              	call malloc
  3659 0000210C 50                      	push rax
  3660 0000210D BF08000000              	mov rdi, 8 * 1	; extended env
  3661 00002112 E830070100              	call malloc
  3662 00002117 488B7D10                	mov rdi, ENV
  3663 0000211B BE00000000              	mov rsi, 0
  3664 00002120 BA01000000              	mov rdx, 1
  3665                                  .L_lambda_simple_env_loop_03c0:	; ext_env[i + 1] <-- env[i]
  3666 00002125 4883FE00                	cmp rsi, 0
  3667 00002129 7410                    	je .L_lambda_simple_env_end_03c0
  3668 0000212B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3669 0000212F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3670 00002133 48FFC6                  	inc rsi
  3671 00002136 48FFC2                  	inc rdx
  3672 00002139 EBEA                    	jmp .L_lambda_simple_env_loop_03c0
  3673                                  .L_lambda_simple_env_end_03c0:
  3674 0000213B 5B                      	pop rbx
  3675 0000213C BE00000000              	mov rsi, 0
  3676                                  .L_lambda_simple_params_loop_03c0:	; copy params
  3677 00002141 4883FE00                	cmp rsi, 0
  3678 00002145 740E                    	je .L_lambda_simple_params_end_03c0
  3679 00002147 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3680 0000214C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3681 00002150 48FFC6                  	inc rsi
  3682 00002153 EBEC                    	jmp .L_lambda_simple_params_loop_03c0
  3683                                  .L_lambda_simple_params_end_03c0:
  3684 00002155 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3685 00002158 4889C3                  	mov rbx, rax
  3686 0000215B 58                      	pop rax
  3687 0000215C C60005                  	mov byte [rax], T_closure
  3688 0000215F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3689 00002163 48C74009[70210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c0
  3690 0000216B E9BC000000              	jmp .L_lambda_simple_end_03c0
  3691                                  .L_lambda_simple_code_03c0:	; lambda-simple body
  3692 00002170 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3693 00002176 740B                    	je .L_lambda_simple_arity_check_ok_081a
  3694 00002178 FF742410                	push qword [rsp + 8 * 2]
  3695 0000217C 6A01                    	push 1
  3696 0000217E E97D060100              	jmp L_error_incorrect_arity_simple
  3697                                  .L_lambda_simple_arity_check_ok_081a:
  3698 00002183 C8000000                	enter 0, 0
  3699 00002187 488B4520                mov rax, qword [rbp + 32]
  3700 0000218B 50                      	push rax
  3701 0000218C 6A01                    	push 1
  3702 0000218E 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3703 00002196 803805                  	cmp byte [rax], T_closure 
  3704 00002199 0F8563160100                    jne L_code_ptr_error
  3705                                  
  3706 0000219F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3707                                  
  3708 000021A3 53                              push rbx
  3709                                  
  3710 000021A4 FF5009                          call SOB_CLOSURE_CODE(rax)
  3711                                  
  3712 000021A7 50                              	push rax
  3713 000021A8 6A01                    	push 1
  3714 000021AA 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3715                                  .L_lambda_simple_arity_check_ok_081b:
  3716 000021B2 803805                  	cmp byte [rax], T_closure
  3717                                  
  3718 000021B5 0F8547160100                    jne L_code_ptr_error                      ; rax <- proc
  3719                                  
  3720                                  
  3721 000021BB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3722                                  
  3723 000021BF 53                              push rbx                                  ; env pushed
  3724                                  
  3725 000021C0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3726                                  
  3727                                          ; sagydebug
  3728                                  
  3729 000021C3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3730                                  
  3731                                          
  3732                                          
  3733 000021C6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3734                                  
  3735 000021CA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3736                                  
  3737                                  
  3738 000021CF 4D89CA                          mov r10, r9
  3739 000021D2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  3740                                          
  3741 000021D6 4D89D7                          mov r15, r10
  3742 000021D9 4983C7FF                        add r15, -1
  3743                                                                                         
  3744 000021DD 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3745 000021E0 4983C404                        add r12, 4
  3746 000021E4 4983C4FF                        add r12, -1
  3747                                  
  3748 000021E8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3749                                  .L_tc_recycle_frame_loop_045b:
  3750 000021EE 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  3751                                  
  3752 000021F2 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3753                                  
  3754                                  
  3755                                  
  3756 000021F7 41BE00000000                    mov r14, 0                                ; clean box
  3757                                  
  3758                                  
  3759 000021FD 4983C7FF                        add r15, -1           
  3760 00002201 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3761                                  
  3762 00002205 4983C4FF                        add r12, -1 
  3763                                  
  3764 00002209 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3765 0000220D 75DF                    	jne .L_tc_recycle_frame_loop_045b
  3766                                  .L_tc_recycle_frame_done_045b:
  3767                                  ;this pop rbp in sot to the right place
  3768 0000220F 4D89C7                  mov r15, r8
  3769                                  
  3770 00002212 4983C704                        add r15, 4
  3771                                  
  3772 00002216 49C1E703                        shl r15, 3
  3773                                  
  3774 0000221A 4C01FC                          add rsp, r15
  3775 0000221D 5D                      	pop rbp                                  ; restore the old rbp
  3776                                  
  3777 0000221E 488B4D00                        mov rcx, qword [rbp]
  3778 00002222 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3779                                            ; rbx <- code(proc)
  3780                                  
  3781 00002226 FFE3                            jmp rbx
  3782 00002228 C9                      	leave
  3783 00002229 C21800                  	ret 8 * (2 + 1)
  3784                                  .L_lambda_simple_end_03c0:	; new closure is in rax
  3785 0000222C 48890425[68020000]      	mov qword [free_var_77], rax
  3786 00002234 48B8-                   	mov rax, sob_void
  3786 00002236 [0000000000000000] 
  3787                                  
  3788 0000223E 4889C7                  	mov rdi, rax
  3789 00002241 E812060100              	call print_sexpr_if_not_void
  3790                                  
  3791 00002246 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3792 0000224B E8F7050100              	call malloc
  3793 00002250 50                      	push rax
  3794 00002251 BF00000000              	mov rdi, 8 * 0	; new rib
  3795 00002256 E8EC050100              	call malloc
  3796 0000225B 50                      	push rax
  3797 0000225C BF08000000              	mov rdi, 8 * 1	; extended env
  3798 00002261 E8E1050100              	call malloc
  3799 00002266 488B7D10                	mov rdi, ENV
  3800 0000226A BE00000000              	mov rsi, 0
  3801 0000226F BA01000000              	mov rdx, 1
  3802                                  .L_lambda_simple_env_loop_03c1:	; ext_env[i + 1] <-- env[i]
  3803 00002274 4883FE00                	cmp rsi, 0
  3804 00002278 7410                    	je .L_lambda_simple_env_end_03c1
  3805 0000227A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3806 0000227E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3807 00002282 48FFC6                  	inc rsi
  3808 00002285 48FFC2                  	inc rdx
  3809 00002288 EBEA                    	jmp .L_lambda_simple_env_loop_03c1
  3810                                  .L_lambda_simple_env_end_03c1:
  3811 0000228A 5B                      	pop rbx
  3812 0000228B BE00000000              	mov rsi, 0
  3813                                  .L_lambda_simple_params_loop_03c1:	; copy params
  3814 00002290 4883FE00                	cmp rsi, 0
  3815 00002294 740E                    	je .L_lambda_simple_params_end_03c1
  3816 00002296 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3817 0000229B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3818 0000229F 48FFC6                  	inc rsi
  3819 000022A2 EBEC                    	jmp .L_lambda_simple_params_loop_03c1
  3820                                  .L_lambda_simple_params_end_03c1:
  3821 000022A4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3822 000022A7 4889C3                  	mov rbx, rax
  3823 000022AA 58                      	pop rax
  3824 000022AB C60005                  	mov byte [rax], T_closure
  3825 000022AE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3826 000022B2 48C74009[BF220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c1
  3827 000022BA E9BC000000              	jmp .L_lambda_simple_end_03c1
  3828                                  .L_lambda_simple_code_03c1:	; lambda-simple body
  3829 000022BF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3830 000022C5 740B                    	je .L_lambda_simple_arity_check_ok_081c
  3831 000022C7 FF742410                	push qword [rsp + 8 * 2]
  3832 000022CB 6A01                    	push 1
  3833 000022CD E92E050100              	jmp L_error_incorrect_arity_simple
  3834                                  .L_lambda_simple_arity_check_ok_081c:
  3835 000022D2 C8000000                	enter 0, 0
  3836 000022D6 488B4520                mov rax, qword [rbp + 32]
  3837 000022DA 50                      	push rax
  3838 000022DB 6A01                    	push 1
  3839 000022DD 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3840 000022E5 803805                  	cmp byte [rax], T_closure 
  3841 000022E8 0F8514150100                    jne L_code_ptr_error
  3842                                  
  3843 000022EE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3844                                  
  3845 000022F2 53                              push rbx
  3846                                  
  3847 000022F3 FF5009                          call SOB_CLOSURE_CODE(rax)
  3848                                  
  3849 000022F6 50                              	push rax
  3850 000022F7 6A01                    	push 1
  3851 000022F9 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3852                                  .L_lambda_simple_arity_check_ok_081d:
  3853 00002301 803805                  	cmp byte [rax], T_closure
  3854                                  
  3855 00002304 0F85F8140100                    jne L_code_ptr_error                      ; rax <- proc
  3856                                  
  3857                                  
  3858 0000230A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3859                                  
  3860 0000230E 53                              push rbx                                  ; env pushed
  3861                                  
  3862 0000230F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3863                                  
  3864                                          ; sagydebug
  3865                                  
  3866 00002312 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3867                                  
  3868                                          
  3869                                          
  3870 00002315 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3871                                  
  3872 00002319 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3873                                  
  3874                                  
  3875 0000231E 4D89CA                          mov r10, r9
  3876 00002321 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  3877                                          
  3878 00002325 4D89D7                          mov r15, r10
  3879 00002328 4983C7FF                        add r15, -1
  3880                                                                                         
  3881 0000232C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3882 0000232F 4983C404                        add r12, 4
  3883 00002333 4983C4FF                        add r12, -1
  3884                                  
  3885 00002337 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3886                                  .L_tc_recycle_frame_loop_045c:
  3887 0000233D 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  3888                                  
  3889 00002341 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3890                                  
  3891                                  
  3892                                  
  3893 00002346 41BE00000000                    mov r14, 0                                ; clean box
  3894                                  
  3895                                  
  3896 0000234C 4983C7FF                        add r15, -1           
  3897 00002350 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3898                                  
  3899 00002354 4983C4FF                        add r12, -1 
  3900                                  
  3901 00002358 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3902 0000235C 75DF                    	jne .L_tc_recycle_frame_loop_045c
  3903                                  .L_tc_recycle_frame_done_045c:
  3904                                  ;this pop rbp in sot to the right place
  3905 0000235E 4D89C7                  mov r15, r8
  3906                                  
  3907 00002361 4983C704                        add r15, 4
  3908                                  
  3909 00002365 49C1E703                        shl r15, 3
  3910                                  
  3911 00002369 4C01FC                          add rsp, r15
  3912 0000236C 5D                      	pop rbp                                  ; restore the old rbp
  3913                                  
  3914 0000236D 488B4D00                        mov rcx, qword [rbp]
  3915 00002371 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3916                                            ; rbx <- code(proc)
  3917                                  
  3918 00002375 FFE3                            jmp rbx
  3919 00002377 C9                      	leave
  3920 00002378 C21800                  	ret 8 * (2 + 1)
  3921                                  .L_lambda_simple_end_03c1:	; new closure is in rax
  3922 0000237B 48890425[70020000]      	mov qword [free_var_78], rax
  3923 00002383 48B8-                   	mov rax, sob_void
  3923 00002385 [0000000000000000] 
  3924                                  
  3925 0000238D 4889C7                  	mov rdi, rax
  3926 00002390 E8C3040100              	call print_sexpr_if_not_void
  3927                                  
  3928 00002395 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3929 0000239A E8A8040100              	call malloc
  3930 0000239F 50                      	push rax
  3931 000023A0 BF00000000              	mov rdi, 8 * 0	; new rib
  3932 000023A5 E89D040100              	call malloc
  3933 000023AA 50                      	push rax
  3934 000023AB BF08000000              	mov rdi, 8 * 1	; extended env
  3935 000023B0 E892040100              	call malloc
  3936 000023B5 488B7D10                	mov rdi, ENV
  3937 000023B9 BE00000000              	mov rsi, 0
  3938 000023BE BA01000000              	mov rdx, 1
  3939                                  .L_lambda_simple_env_loop_03c2:	; ext_env[i + 1] <-- env[i]
  3940 000023C3 4883FE00                	cmp rsi, 0
  3941 000023C7 7410                    	je .L_lambda_simple_env_end_03c2
  3942 000023C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3943 000023CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3944 000023D1 48FFC6                  	inc rsi
  3945 000023D4 48FFC2                  	inc rdx
  3946 000023D7 EBEA                    	jmp .L_lambda_simple_env_loop_03c2
  3947                                  .L_lambda_simple_env_end_03c2:
  3948 000023D9 5B                      	pop rbx
  3949 000023DA BE00000000              	mov rsi, 0
  3950                                  .L_lambda_simple_params_loop_03c2:	; copy params
  3951 000023DF 4883FE00                	cmp rsi, 0
  3952 000023E3 740E                    	je .L_lambda_simple_params_end_03c2
  3953 000023E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3954 000023EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3955 000023EE 48FFC6                  	inc rsi
  3956 000023F1 EBEC                    	jmp .L_lambda_simple_params_loop_03c2
  3957                                  .L_lambda_simple_params_end_03c2:
  3958 000023F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3959 000023F6 4889C3                  	mov rbx, rax
  3960 000023F9 58                      	pop rax
  3961 000023FA C60005                  	mov byte [rax], T_closure
  3962 000023FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3963 00002401 48C74009[0E240000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c2
  3964 00002409 E9BC000000              	jmp .L_lambda_simple_end_03c2
  3965                                  .L_lambda_simple_code_03c2:	; lambda-simple body
  3966 0000240E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3967 00002414 740B                    	je .L_lambda_simple_arity_check_ok_081e
  3968 00002416 FF742410                	push qword [rsp + 8 * 2]
  3969 0000241A 6A01                    	push 1
  3970 0000241C E9DF030100              	jmp L_error_incorrect_arity_simple
  3971                                  .L_lambda_simple_arity_check_ok_081e:
  3972 00002421 C8000000                	enter 0, 0
  3973 00002425 488B4520                mov rax, qword [rbp + 32]
  3974 00002429 50                      	push rax
  3975 0000242A 6A01                    	push 1
  3976 0000242C 488B0425[D8010000]      	mov rax, qword [free_var_59]
  3977 00002434 803805                  	cmp byte [rax], T_closure 
  3978 00002437 0F85C5130100                    jne L_code_ptr_error
  3979                                  
  3980 0000243D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3981                                  
  3982 00002441 53                              push rbx
  3983                                  
  3984 00002442 FF5009                          call SOB_CLOSURE_CODE(rax)
  3985                                  
  3986 00002445 50                              	push rax
  3987 00002446 6A01                    	push 1
  3988 00002448 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3989                                  .L_lambda_simple_arity_check_ok_081f:
  3990 00002450 803805                  	cmp byte [rax], T_closure
  3991                                  
  3992 00002453 0F85A9130100                    jne L_code_ptr_error                      ; rax <- proc
  3993                                  
  3994                                  
  3995 00002459 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3996                                  
  3997 0000245D 53                              push rbx                                  ; env pushed
  3998                                  
  3999 0000245E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4000                                  
  4001                                          ; sagydebug
  4002                                  
  4003 00002461 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4004                                  
  4005                                          
  4006                                          
  4007 00002464 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4008                                  
  4009 00002468 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4010                                  
  4011                                  
  4012 0000246D 4D89CA                          mov r10, r9
  4013 00002470 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  4014                                          
  4015 00002474 4D89D7                          mov r15, r10
  4016 00002477 4983C7FF                        add r15, -1
  4017                                                                                         
  4018 0000247B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4019 0000247E 4983C404                        add r12, 4
  4020 00002482 4983C4FF                        add r12, -1
  4021                                  
  4022 00002486 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4023                                  .L_tc_recycle_frame_loop_045d:
  4024 0000248C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  4025                                  
  4026 00002490 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4027                                  
  4028                                  
  4029                                  
  4030 00002495 41BE00000000                    mov r14, 0                                ; clean box
  4031                                  
  4032                                  
  4033 0000249B 4983C7FF                        add r15, -1           
  4034 0000249F 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4035                                  
  4036 000024A3 4983C4FF                        add r12, -1 
  4037                                  
  4038 000024A7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4039 000024AB 75DF                    	jne .L_tc_recycle_frame_loop_045d
  4040                                  .L_tc_recycle_frame_done_045d:
  4041                                  ;this pop rbp in sot to the right place
  4042 000024AD 4D89C7                  mov r15, r8
  4043                                  
  4044 000024B0 4983C704                        add r15, 4
  4045                                  
  4046 000024B4 49C1E703                        shl r15, 3
  4047                                  
  4048 000024B8 4C01FC                          add rsp, r15
  4049 000024BB 5D                      	pop rbp                                  ; restore the old rbp
  4050                                  
  4051 000024BC 488B4D00                        mov rcx, qword [rbp]
  4052 000024C0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4053                                            ; rbx <- code(proc)
  4054                                  
  4055 000024C4 FFE3                            jmp rbx
  4056 000024C6 C9                      	leave
  4057 000024C7 C21800                  	ret 8 * (2 + 1)
  4058                                  .L_lambda_simple_end_03c2:	; new closure is in rax
  4059 000024CA 48890425[78020000]      	mov qword [free_var_79], rax
  4060 000024D2 48B8-                   	mov rax, sob_void
  4060 000024D4 [0000000000000000] 
  4061                                  
  4062 000024DC 4889C7                  	mov rdi, rax
  4063 000024DF E874030100              	call print_sexpr_if_not_void
  4064                                  
  4065 000024E4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4066 000024E9 E859030100              	call malloc
  4067 000024EE 50                      	push rax
  4068 000024EF BF00000000              	mov rdi, 8 * 0	; new rib
  4069 000024F4 E84E030100              	call malloc
  4070 000024F9 50                      	push rax
  4071 000024FA BF08000000              	mov rdi, 8 * 1	; extended env
  4072 000024FF E843030100              	call malloc
  4073 00002504 488B7D10                	mov rdi, ENV
  4074 00002508 BE00000000              	mov rsi, 0
  4075 0000250D BA01000000              	mov rdx, 1
  4076                                  .L_lambda_simple_env_loop_03c3:	; ext_env[i + 1] <-- env[i]
  4077 00002512 4883FE00                	cmp rsi, 0
  4078 00002516 7410                    	je .L_lambda_simple_env_end_03c3
  4079 00002518 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4080 0000251C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4081 00002520 48FFC6                  	inc rsi
  4082 00002523 48FFC2                  	inc rdx
  4083 00002526 EBEA                    	jmp .L_lambda_simple_env_loop_03c3
  4084                                  .L_lambda_simple_env_end_03c3:
  4085 00002528 5B                      	pop rbx
  4086 00002529 BE00000000              	mov rsi, 0
  4087                                  .L_lambda_simple_params_loop_03c3:	; copy params
  4088 0000252E 4883FE00                	cmp rsi, 0
  4089 00002532 740E                    	je .L_lambda_simple_params_end_03c3
  4090 00002534 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4091 00002539 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4092 0000253D 48FFC6                  	inc rsi
  4093 00002540 EBEC                    	jmp .L_lambda_simple_params_loop_03c3
  4094                                  .L_lambda_simple_params_end_03c3:
  4095 00002542 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4096 00002545 4889C3                  	mov rbx, rax
  4097 00002548 58                      	pop rax
  4098 00002549 C60005                  	mov byte [rax], T_closure
  4099 0000254C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4100 00002550 48C74009[5D250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c3
  4101 00002558 E9BC000000              	jmp .L_lambda_simple_end_03c3
  4102                                  .L_lambda_simple_code_03c3:	; lambda-simple body
  4103 0000255D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4104 00002563 740B                    	je .L_lambda_simple_arity_check_ok_0820
  4105 00002565 FF742410                	push qword [rsp + 8 * 2]
  4106 00002569 6A01                    	push 1
  4107 0000256B E990020100              	jmp L_error_incorrect_arity_simple
  4108                                  .L_lambda_simple_arity_check_ok_0820:
  4109 00002570 C8000000                	enter 0, 0
  4110 00002574 488B4520                mov rax, qword [rbp + 32]
  4111 00002578 50                      	push rax
  4112 00002579 6A01                    	push 1
  4113 0000257B 488B0425[C0010000]      	mov rax, qword [free_var_56]
  4114 00002583 803805                  	cmp byte [rax], T_closure 
  4115 00002586 0F8576120100                    jne L_code_ptr_error
  4116                                  
  4117 0000258C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4118                                  
  4119 00002590 53                              push rbx
  4120                                  
  4121 00002591 FF5009                          call SOB_CLOSURE_CODE(rax)
  4122                                  
  4123 00002594 50                              	push rax
  4124 00002595 6A01                    	push 1
  4125 00002597 488B0425[D8010000]      	mov rax, qword [free_var_59]
  4126                                  .L_lambda_simple_arity_check_ok_0821:
  4127 0000259F 803805                  	cmp byte [rax], T_closure
  4128                                  
  4129 000025A2 0F855A120100                    jne L_code_ptr_error                      ; rax <- proc
  4130                                  
  4131                                  
  4132 000025A8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4133                                  
  4134 000025AC 53                              push rbx                                  ; env pushed
  4135                                  
  4136 000025AD FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4137                                  
  4138                                          ; sagydebug
  4139                                  
  4140 000025B0 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4141                                  
  4142                                          
  4143                                          
  4144 000025B3 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4145                                  
  4146 000025B7 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4147                                  
  4148                                  
  4149 000025BC 4D89CA                          mov r10, r9
  4150 000025BF 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  4151                                          
  4152 000025C3 4D89D7                          mov r15, r10
  4153 000025C6 4983C7FF                        add r15, -1
  4154                                                                                         
  4155 000025CA 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4156 000025CD 4983C404                        add r12, 4
  4157 000025D1 4983C4FF                        add r12, -1
  4158                                  
  4159 000025D5 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4160                                  .L_tc_recycle_frame_loop_045e:
  4161 000025DB 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  4162                                  
  4163 000025DF 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4164                                  
  4165                                  
  4166                                  
  4167 000025E4 41BE00000000                    mov r14, 0                                ; clean box
  4168                                  
  4169                                  
  4170 000025EA 4983C7FF                        add r15, -1           
  4171 000025EE 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4172                                  
  4173 000025F2 4983C4FF                        add r12, -1 
  4174                                  
  4175 000025F6 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4176 000025FA 75DF                    	jne .L_tc_recycle_frame_loop_045e
  4177                                  .L_tc_recycle_frame_done_045e:
  4178                                  ;this pop rbp in sot to the right place
  4179 000025FC 4D89C7                  mov r15, r8
  4180                                  
  4181 000025FF 4983C704                        add r15, 4
  4182                                  
  4183 00002603 49C1E703                        shl r15, 3
  4184                                  
  4185 00002607 4C01FC                          add rsp, r15
  4186 0000260A 5D                      	pop rbp                                  ; restore the old rbp
  4187                                  
  4188 0000260B 488B4D00                        mov rcx, qword [rbp]
  4189 0000260F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4190                                            ; rbx <- code(proc)
  4191                                  
  4192 00002613 FFE3                            jmp rbx
  4193 00002615 C9                      	leave
  4194 00002616 C21800                  	ret 8 * (2 + 1)
  4195                                  .L_lambda_simple_end_03c3:	; new closure is in rax
  4196 00002619 48890425[80020000]      	mov qword [free_var_80], rax
  4197 00002621 48B8-                   	mov rax, sob_void
  4197 00002623 [0000000000000000] 
  4198                                  
  4199 0000262B 4889C7                  	mov rdi, rax
  4200 0000262E E825020100              	call print_sexpr_if_not_void
  4201                                  
  4202 00002633 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4203 00002638 E80A020100              	call malloc
  4204 0000263D 50                      	push rax
  4205 0000263E BF00000000              	mov rdi, 8 * 0	; new rib
  4206 00002643 E8FF010100              	call malloc
  4207 00002648 50                      	push rax
  4208 00002649 BF08000000              	mov rdi, 8 * 1	; extended env
  4209 0000264E E8F4010100              	call malloc
  4210 00002653 488B7D10                	mov rdi, ENV
  4211 00002657 BE00000000              	mov rsi, 0
  4212 0000265C BA01000000              	mov rdx, 1
  4213                                  .L_lambda_simple_env_loop_03c4:	; ext_env[i + 1] <-- env[i]
  4214 00002661 4883FE00                	cmp rsi, 0
  4215 00002665 7410                    	je .L_lambda_simple_env_end_03c4
  4216 00002667 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4217 0000266B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4218 0000266F 48FFC6                  	inc rsi
  4219 00002672 48FFC2                  	inc rdx
  4220 00002675 EBEA                    	jmp .L_lambda_simple_env_loop_03c4
  4221                                  .L_lambda_simple_env_end_03c4:
  4222 00002677 5B                      	pop rbx
  4223 00002678 BE00000000              	mov rsi, 0
  4224                                  .L_lambda_simple_params_loop_03c4:	; copy params
  4225 0000267D 4883FE00                	cmp rsi, 0
  4226 00002681 740E                    	je .L_lambda_simple_params_end_03c4
  4227 00002683 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4228 00002688 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4229 0000268C 48FFC6                  	inc rsi
  4230 0000268F EBEC                    	jmp .L_lambda_simple_params_loop_03c4
  4231                                  .L_lambda_simple_params_end_03c4:
  4232 00002691 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4233 00002694 4889C3                  	mov rbx, rax
  4234 00002697 58                      	pop rax
  4235 00002698 C60005                  	mov byte [rax], T_closure
  4236 0000269B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4237 0000269F 48C74009[AC260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c4
  4238 000026A7 E9BC000000              	jmp .L_lambda_simple_end_03c4
  4239                                  .L_lambda_simple_code_03c4:	; lambda-simple body
  4240 000026AC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4241 000026B2 740B                    	je .L_lambda_simple_arity_check_ok_0822
  4242 000026B4 FF742410                	push qword [rsp + 8 * 2]
  4243 000026B8 6A01                    	push 1
  4244 000026BA E941010100              	jmp L_error_incorrect_arity_simple
  4245                                  .L_lambda_simple_arity_check_ok_0822:
  4246 000026BF C8000000                	enter 0, 0
  4247 000026C3 488B4520                mov rax, qword [rbp + 32]
  4248 000026C7 50                      	push rax
  4249 000026C8 6A01                    	push 1
  4250 000026CA 488B0425[C8010000]      	mov rax, qword [free_var_57]
  4251 000026D2 803805                  	cmp byte [rax], T_closure 
  4252 000026D5 0F8527110100                    jne L_code_ptr_error
  4253                                  
  4254 000026DB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4255                                  
  4256 000026DF 53                              push rbx
  4257                                  
  4258 000026E0 FF5009                          call SOB_CLOSURE_CODE(rax)
  4259                                  
  4260 000026E3 50                              	push rax
  4261 000026E4 6A01                    	push 1
  4262 000026E6 488B0425[D8010000]      	mov rax, qword [free_var_59]
  4263                                  .L_lambda_simple_arity_check_ok_0823:
  4264 000026EE 803805                  	cmp byte [rax], T_closure
  4265                                  
  4266 000026F1 0F850B110100                    jne L_code_ptr_error                      ; rax <- proc
  4267                                  
  4268                                  
  4269 000026F7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4270                                  
  4271 000026FB 53                              push rbx                                  ; env pushed
  4272                                  
  4273 000026FC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4274                                  
  4275                                          ; sagydebug
  4276                                  
  4277 000026FF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4278                                  
  4279                                          
  4280                                          
  4281 00002702 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4282                                  
  4283 00002706 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4284                                  
  4285                                  
  4286 0000270B 4D89CA                          mov r10, r9
  4287 0000270E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  4288                                          
  4289 00002712 4D89D7                          mov r15, r10
  4290 00002715 4983C7FF                        add r15, -1
  4291                                                                                         
  4292 00002719 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4293 0000271C 4983C404                        add r12, 4
  4294 00002720 4983C4FF                        add r12, -1
  4295                                  
  4296 00002724 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4297                                  .L_tc_recycle_frame_loop_045f:
  4298 0000272A 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  4299                                  
  4300 0000272E 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4301                                  
  4302                                  
  4303                                  
  4304 00002733 41BE00000000                    mov r14, 0                                ; clean box
  4305                                  
  4306                                  
  4307 00002739 4983C7FF                        add r15, -1           
  4308 0000273D 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4309                                  
  4310 00002741 4983C4FF                        add r12, -1 
  4311                                  
  4312 00002745 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4313 00002749 75DF                    	jne .L_tc_recycle_frame_loop_045f
  4314                                  .L_tc_recycle_frame_done_045f:
  4315                                  ;this pop rbp in sot to the right place
  4316 0000274B 4D89C7                  mov r15, r8
  4317                                  
  4318 0000274E 4983C704                        add r15, 4
  4319                                  
  4320 00002752 49C1E703                        shl r15, 3
  4321                                  
  4322 00002756 4C01FC                          add rsp, r15
  4323 00002759 5D                      	pop rbp                                  ; restore the old rbp
  4324                                  
  4325 0000275A 488B4D00                        mov rcx, qword [rbp]
  4326 0000275E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4327                                            ; rbx <- code(proc)
  4328                                  
  4329 00002762 FFE3                            jmp rbx
  4330 00002764 C9                      	leave
  4331 00002765 C21800                  	ret 8 * (2 + 1)
  4332                                  .L_lambda_simple_end_03c4:	; new closure is in rax
  4333 00002768 48890425[88020000]      	mov qword [free_var_81], rax
  4334 00002770 48B8-                   	mov rax, sob_void
  4334 00002772 [0000000000000000] 
  4335                                  
  4336 0000277A 4889C7                  	mov rdi, rax
  4337 0000277D E8D6000100              	call print_sexpr_if_not_void
  4338                                  
  4339 00002782 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4340 00002787 E8BB000100              	call malloc
  4341 0000278C 50                      	push rax
  4342 0000278D BF00000000              	mov rdi, 8 * 0	; new rib
  4343 00002792 E8B0000100              	call malloc
  4344 00002797 50                      	push rax
  4345 00002798 BF08000000              	mov rdi, 8 * 1	; extended env
  4346 0000279D E8A5000100              	call malloc
  4347 000027A2 488B7D10                	mov rdi, ENV
  4348 000027A6 BE00000000              	mov rsi, 0
  4349 000027AB BA01000000              	mov rdx, 1
  4350                                  .L_lambda_simple_env_loop_03c5:	; ext_env[i + 1] <-- env[i]
  4351 000027B0 4883FE00                	cmp rsi, 0
  4352 000027B4 7410                    	je .L_lambda_simple_env_end_03c5
  4353 000027B6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4354 000027BA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4355 000027BE 48FFC6                  	inc rsi
  4356 000027C1 48FFC2                  	inc rdx
  4357 000027C4 EBEA                    	jmp .L_lambda_simple_env_loop_03c5
  4358                                  .L_lambda_simple_env_end_03c5:
  4359 000027C6 5B                      	pop rbx
  4360 000027C7 BE00000000              	mov rsi, 0
  4361                                  .L_lambda_simple_params_loop_03c5:	; copy params
  4362 000027CC 4883FE00                	cmp rsi, 0
  4363 000027D0 740E                    	je .L_lambda_simple_params_end_03c5
  4364 000027D2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4365 000027D7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4366 000027DB 48FFC6                  	inc rsi
  4367 000027DE EBEC                    	jmp .L_lambda_simple_params_loop_03c5
  4368                                  .L_lambda_simple_params_end_03c5:
  4369 000027E0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4370 000027E3 4889C3                  	mov rbx, rax
  4371 000027E6 58                      	pop rax
  4372 000027E7 C60005                  	mov byte [rax], T_closure
  4373 000027EA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4374 000027EE 48C74009[FB270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c5
  4375 000027F6 E9BC000000              	jmp .L_lambda_simple_end_03c5
  4376                                  .L_lambda_simple_code_03c5:	; lambda-simple body
  4377 000027FB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4378 00002801 740B                    	je .L_lambda_simple_arity_check_ok_0824
  4379 00002803 FF742410                	push qword [rsp + 8 * 2]
  4380 00002807 6A01                    	push 1
  4381 00002809 E9F2FF0000              	jmp L_error_incorrect_arity_simple
  4382                                  .L_lambda_simple_arity_check_ok_0824:
  4383 0000280E C8000000                	enter 0, 0
  4384 00002812 488B4520                mov rax, qword [rbp + 32]
  4385 00002816 50                      	push rax
  4386 00002817 6A01                    	push 1
  4387 00002819 488B0425[D0010000]      	mov rax, qword [free_var_58]
  4388 00002821 803805                  	cmp byte [rax], T_closure 
  4389 00002824 0F85D80F0100                    jne L_code_ptr_error
  4390                                  
  4391 0000282A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4392                                  
  4393 0000282E 53                              push rbx
  4394                                  
  4395 0000282F FF5009                          call SOB_CLOSURE_CODE(rax)
  4396                                  
  4397 00002832 50                              	push rax
  4398 00002833 6A01                    	push 1
  4399 00002835 488B0425[D8010000]      	mov rax, qword [free_var_59]
  4400                                  .L_lambda_simple_arity_check_ok_0825:
  4401 0000283D 803805                  	cmp byte [rax], T_closure
  4402                                  
  4403 00002840 0F85BC0F0100                    jne L_code_ptr_error                      ; rax <- proc
  4404                                  
  4405                                  
  4406 00002846 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4407                                  
  4408 0000284A 53                              push rbx                                  ; env pushed
  4409                                  
  4410 0000284B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4411                                  
  4412                                          ; sagydebug
  4413                                  
  4414 0000284E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4415                                  
  4416                                          
  4417                                          
  4418 00002851 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4419                                  
  4420 00002855 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4421                                  
  4422                                  
  4423 0000285A 4D89CA                          mov r10, r9
  4424 0000285D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  4425                                          
  4426 00002861 4D89D7                          mov r15, r10
  4427 00002864 4983C7FF                        add r15, -1
  4428                                                                                         
  4429 00002868 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4430 0000286B 4983C404                        add r12, 4
  4431 0000286F 4983C4FF                        add r12, -1
  4432                                  
  4433 00002873 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4434                                  .L_tc_recycle_frame_loop_0460:
  4435 00002879 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  4436                                  
  4437 0000287D 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4438                                  
  4439                                  
  4440                                  
  4441 00002882 41BE00000000                    mov r14, 0                                ; clean box
  4442                                  
  4443                                  
  4444 00002888 4983C7FF                        add r15, -1           
  4445 0000288C 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4446                                  
  4447 00002890 4983C4FF                        add r12, -1 
  4448                                  
  4449 00002894 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4450 00002898 75DF                    	jne .L_tc_recycle_frame_loop_0460
  4451                                  .L_tc_recycle_frame_done_0460:
  4452                                  ;this pop rbp in sot to the right place
  4453 0000289A 4D89C7                  mov r15, r8
  4454                                  
  4455 0000289D 4983C704                        add r15, 4
  4456                                  
  4457 000028A1 49C1E703                        shl r15, 3
  4458                                  
  4459 000028A5 4C01FC                          add rsp, r15
  4460 000028A8 5D                      	pop rbp                                  ; restore the old rbp
  4461                                  
  4462 000028A9 488B4D00                        mov rcx, qword [rbp]
  4463 000028AD 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4464                                            ; rbx <- code(proc)
  4465                                  
  4466 000028B1 FFE3                            jmp rbx
  4467 000028B3 C9                      	leave
  4468 000028B4 C21800                  	ret 8 * (2 + 1)
  4469                                  .L_lambda_simple_end_03c5:	; new closure is in rax
  4470 000028B7 48890425[90020000]      	mov qword [free_var_82], rax
  4471 000028BF 48B8-                   	mov rax, sob_void
  4471 000028C1 [0000000000000000] 
  4472                                  
  4473 000028C9 4889C7                  	mov rdi, rax
  4474 000028CC E887FF0000              	call print_sexpr_if_not_void
  4475                                  
  4476 000028D1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4477 000028D6 E86CFF0000              	call malloc
  4478 000028DB 50                      	push rax
  4479 000028DC BF00000000              	mov rdi, 8 * 0	; new rib
  4480 000028E1 E861FF0000              	call malloc
  4481 000028E6 50                      	push rax
  4482 000028E7 BF08000000              	mov rdi, 8 * 1	; extended env
  4483 000028EC E856FF0000              	call malloc
  4484 000028F1 488B7D10                	mov rdi, ENV
  4485 000028F5 BE00000000              	mov rsi, 0
  4486 000028FA BA01000000              	mov rdx, 1
  4487                                  .L_lambda_simple_env_loop_03c6:	; ext_env[i + 1] <-- env[i]
  4488 000028FF 4883FE00                	cmp rsi, 0
  4489 00002903 7410                    	je .L_lambda_simple_env_end_03c6
  4490 00002905 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4491 00002909 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4492 0000290D 48FFC6                  	inc rsi
  4493 00002910 48FFC2                  	inc rdx
  4494 00002913 EBEA                    	jmp .L_lambda_simple_env_loop_03c6
  4495                                  .L_lambda_simple_env_end_03c6:
  4496 00002915 5B                      	pop rbx
  4497 00002916 BE00000000              	mov rsi, 0
  4498                                  .L_lambda_simple_params_loop_03c6:	; copy params
  4499 0000291B 4883FE00                	cmp rsi, 0
  4500 0000291F 740E                    	je .L_lambda_simple_params_end_03c6
  4501 00002921 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4502 00002926 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4503 0000292A 48FFC6                  	inc rsi
  4504 0000292D EBEC                    	jmp .L_lambda_simple_params_loop_03c6
  4505                                  .L_lambda_simple_params_end_03c6:
  4506 0000292F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4507 00002932 4889C3                  	mov rbx, rax
  4508 00002935 58                      	pop rax
  4509 00002936 C60005                  	mov byte [rax], T_closure
  4510 00002939 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4511 0000293D 48C74009[4A290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c6
  4512 00002945 E9BC000000              	jmp .L_lambda_simple_end_03c6
  4513                                  .L_lambda_simple_code_03c6:	; lambda-simple body
  4514 0000294A 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4515 00002950 740B                    	je .L_lambda_simple_arity_check_ok_0826
  4516 00002952 FF742410                	push qword [rsp + 8 * 2]
  4517 00002956 6A01                    	push 1
  4518 00002958 E9A3FE0000              	jmp L_error_incorrect_arity_simple
  4519                                  .L_lambda_simple_arity_check_ok_0826:
  4520 0000295D C8000000                	enter 0, 0
  4521 00002961 488B4520                mov rax, qword [rbp + 32]
  4522 00002965 50                      	push rax
  4523 00002966 6A01                    	push 1
  4524 00002968 488B0425[D8010000]      	mov rax, qword [free_var_59]
  4525 00002970 803805                  	cmp byte [rax], T_closure 
  4526 00002973 0F85890E0100                    jne L_code_ptr_error
  4527                                  
  4528 00002979 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4529                                  
  4530 0000297D 53                              push rbx
  4531                                  
  4532 0000297E FF5009                          call SOB_CLOSURE_CODE(rax)
  4533                                  
  4534 00002981 50                              	push rax
  4535 00002982 6A01                    	push 1
  4536 00002984 488B0425[D8010000]      	mov rax, qword [free_var_59]
  4537                                  .L_lambda_simple_arity_check_ok_0827:
  4538 0000298C 803805                  	cmp byte [rax], T_closure
  4539                                  
  4540 0000298F 0F856D0E0100                    jne L_code_ptr_error                      ; rax <- proc
  4541                                  
  4542                                  
  4543 00002995 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4544                                  
  4545 00002999 53                              push rbx                                  ; env pushed
  4546                                  
  4547 0000299A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4548                                  
  4549                                          ; sagydebug
  4550                                  
  4551 0000299D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4552                                  
  4553                                          
  4554                                          
  4555 000029A0 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4556                                  
  4557 000029A4 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4558                                  
  4559                                  
  4560 000029A9 4D89CA                          mov r10, r9
  4561 000029AC 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  4562                                          
  4563 000029B0 4D89D7                          mov r15, r10
  4564 000029B3 4983C7FF                        add r15, -1
  4565                                                                                         
  4566 000029B7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4567 000029BA 4983C404                        add r12, 4
  4568 000029BE 4983C4FF                        add r12, -1
  4569                                  
  4570 000029C2 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4571                                  .L_tc_recycle_frame_loop_0461:
  4572 000029C8 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  4573                                  
  4574 000029CC 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4575                                  
  4576                                  
  4577                                  
  4578 000029D1 41BE00000000                    mov r14, 0                                ; clean box
  4579                                  
  4580                                  
  4581 000029D7 4983C7FF                        add r15, -1           
  4582 000029DB 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4583                                  
  4584 000029DF 4983C4FF                        add r12, -1 
  4585                                  
  4586 000029E3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4587 000029E7 75DF                    	jne .L_tc_recycle_frame_loop_0461
  4588                                  .L_tc_recycle_frame_done_0461:
  4589                                  ;this pop rbp in sot to the right place
  4590 000029E9 4D89C7                  mov r15, r8
  4591                                  
  4592 000029EC 4983C704                        add r15, 4
  4593                                  
  4594 000029F0 49C1E703                        shl r15, 3
  4595                                  
  4596 000029F4 4C01FC                          add rsp, r15
  4597 000029F7 5D                      	pop rbp                                  ; restore the old rbp
  4598                                  
  4599 000029F8 488B4D00                        mov rcx, qword [rbp]
  4600 000029FC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4601                                            ; rbx <- code(proc)
  4602                                  
  4603 00002A00 FFE3                            jmp rbx
  4604 00002A02 C9                      	leave
  4605 00002A03 C21800                  	ret 8 * (2 + 1)
  4606                                  .L_lambda_simple_end_03c6:	; new closure is in rax
  4607 00002A06 48890425[98020000]      	mov qword [free_var_83], rax
  4608 00002A0E 48B8-                   	mov rax, sob_void
  4608 00002A10 [0000000000000000] 
  4609                                  
  4610 00002A18 4889C7                  	mov rdi, rax
  4611 00002A1B E838FE0000              	call print_sexpr_if_not_void
  4612                                  
  4613 00002A20 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4614 00002A25 E81DFE0000              	call malloc
  4615 00002A2A 50                      	push rax
  4616 00002A2B BF00000000              	mov rdi, 8 * 0	; new rib
  4617 00002A30 E812FE0000              	call malloc
  4618 00002A35 50                      	push rax
  4619 00002A36 BF08000000              	mov rdi, 8 * 1	; extended env
  4620 00002A3B E807FE0000              	call malloc
  4621 00002A40 488B7D10                	mov rdi, ENV
  4622 00002A44 BE00000000              	mov rsi, 0
  4623 00002A49 BA01000000              	mov rdx, 1
  4624                                  .L_lambda_simple_env_loop_03c7:	; ext_env[i + 1] <-- env[i]
  4625 00002A4E 4883FE00                	cmp rsi, 0
  4626 00002A52 7410                    	je .L_lambda_simple_env_end_03c7
  4627 00002A54 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4628 00002A58 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4629 00002A5C 48FFC6                  	inc rsi
  4630 00002A5F 48FFC2                  	inc rdx
  4631 00002A62 EBEA                    	jmp .L_lambda_simple_env_loop_03c7
  4632                                  .L_lambda_simple_env_end_03c7:
  4633 00002A64 5B                      	pop rbx
  4634 00002A65 BE00000000              	mov rsi, 0
  4635                                  .L_lambda_simple_params_loop_03c7:	; copy params
  4636 00002A6A 4883FE00                	cmp rsi, 0
  4637 00002A6E 740E                    	je .L_lambda_simple_params_end_03c7
  4638 00002A70 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4639 00002A75 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4640 00002A79 48FFC6                  	inc rsi
  4641 00002A7C EBEC                    	jmp .L_lambda_simple_params_loop_03c7
  4642                                  .L_lambda_simple_params_end_03c7:
  4643 00002A7E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4644 00002A81 4889C3                  	mov rbx, rax
  4645 00002A84 58                      	pop rax
  4646 00002A85 C60005                  	mov byte [rax], T_closure
  4647 00002A88 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4648 00002A8C 48C74009[992A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c7
  4649 00002A94 E920010000              	jmp .L_lambda_simple_end_03c7
  4650                                  .L_lambda_simple_code_03c7:	; lambda-simple body
  4651 00002A99 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4652 00002A9F 740B                    	je .L_lambda_simple_arity_check_ok_0828
  4653 00002AA1 FF742410                	push qword [rsp + 8 * 2]
  4654 00002AA5 6A01                    	push 1
  4655 00002AA7 E954FD0000              	jmp L_error_incorrect_arity_simple
  4656                                  .L_lambda_simple_arity_check_ok_0828:
  4657 00002AAC C8000000                	enter 0, 0
  4658 00002AB0 488B4520                mov rax, qword [rbp + 32]
  4659 00002AB4 50                      	push rax
  4660 00002AB5 6A01                    	push 1
  4661 00002AB7 488B0425[00000000]      	mov rax, qword [free_var_0]
  4662 00002ABF 803805                  	cmp byte [rax], T_closure 
  4663 00002AC2 0F853A0D0100                    jne L_code_ptr_error
  4664                                  
  4665 00002AC8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4666                                  
  4667 00002ACC 53                              push rbx
  4668                                  
  4669 00002ACD FF5009                          call SOB_CLOSURE_CODE(rax)
  4670                                  
  4671 00002AD0 483D[02000000]                  	cmp rax, sob_boolean_false
  4672 00002AD6 0F85D9000000            	jne .L_or_end_0049
  4673 00002ADC 488B4520                mov rax, qword [rbp + 32]
  4674 00002AE0 50                      	push rax
  4675 00002AE1 6A01                    	push 1
  4676 00002AE3 488B0425[08000000]      	mov rax, qword [free_var_1]
  4677 00002AEB 803805                  	cmp byte [rax], T_closure 
  4678 00002AEE 0F850E0D0100                    jne L_code_ptr_error
  4679                                  
  4680 00002AF4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4681                                  
  4682 00002AF8 53                              push rbx
  4683                                  
  4684 00002AF9 FF5009                          call SOB_CLOSURE_CODE(rax)
  4685                                  
  4686 00002AFC 483D[02000000]                  	cmp rax, sob_boolean_false
  4687 00002B02 0F84A3000000            	je .L_if_else_0236
  4688 00002B08 488B4520                mov rax, qword [rbp + 32]
  4689 00002B0C 50                      	push rax
  4690 00002B0D 6A01                    	push 1
  4691 00002B0F 488B0425[88000000]      	mov rax, qword [free_var_17]
  4692 00002B17 803805                  	cmp byte [rax], T_closure 
  4693 00002B1A 0F85E20C0100                    jne L_code_ptr_error
  4694                                  
  4695 00002B20 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4696                                  
  4697 00002B24 53                              push rbx
  4698                                  
  4699 00002B25 FF5009                          call SOB_CLOSURE_CODE(rax)
  4700                                  
  4701 00002B28 50                              	push rax
  4702 00002B29 6A01                    	push 1
  4703 00002B2B 488B0425[A0020000]      	mov rax, qword [free_var_84]
  4704                                  .L_lambda_simple_arity_check_ok_0829:
  4705 00002B33 803805                  	cmp byte [rax], T_closure
  4706                                  
  4707 00002B36 0F85C60C0100                    jne L_code_ptr_error                      ; rax <- proc
  4708                                  
  4709                                  
  4710 00002B3C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4711                                  
  4712 00002B40 53                              push rbx                                  ; env pushed
  4713                                  
  4714 00002B41 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4715                                  
  4716                                          ; sagydebug
  4717                                  
  4718 00002B44 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4719                                  
  4720                                          
  4721                                          
  4722 00002B47 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4723                                  
  4724 00002B4B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4725                                  
  4726                                  
  4727 00002B50 4D89CA                          mov r10, r9
  4728 00002B53 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  4729                                          
  4730 00002B57 4D89D7                          mov r15, r10
  4731 00002B5A 4983C7FF                        add r15, -1
  4732                                                                                         
  4733 00002B5E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4734 00002B61 4983C404                        add r12, 4
  4735 00002B65 4983C4FF                        add r12, -1
  4736                                  
  4737 00002B69 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4738                                  .L_tc_recycle_frame_loop_0462:
  4739 00002B6F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  4740                                  
  4741 00002B73 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4742                                  
  4743                                  
  4744                                  
  4745 00002B78 41BE00000000                    mov r14, 0                                ; clean box
  4746                                  
  4747                                  
  4748 00002B7E 4983C7FF                        add r15, -1           
  4749 00002B82 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4750                                  
  4751 00002B86 4983C4FF                        add r12, -1 
  4752                                  
  4753 00002B8A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4754 00002B8E 75DF                    	jne .L_tc_recycle_frame_loop_0462
  4755                                  .L_tc_recycle_frame_done_0462:
  4756                                  ;this pop rbp in sot to the right place
  4757 00002B90 4D89C7                  mov r15, r8
  4758                                  
  4759 00002B93 4983C704                        add r15, 4
  4760                                  
  4761 00002B97 49C1E703                        shl r15, 3
  4762                                  
  4763 00002B9B 4C01FC                          add rsp, r15
  4764 00002B9E 5D                      	pop rbp                                  ; restore the old rbp
  4765                                  
  4766 00002B9F 488B4D00                        mov rcx, qword [rbp]
  4767 00002BA3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4768                                            ; rbx <- code(proc)
  4769                                  
  4770 00002BA7 FFE3                            jmp rbx
  4771 00002BA9 EB0A                    	jmp .L_if_end_0236
  4772                                  	.L_if_else_0236:
  4773 00002BAB 48B8-                   		mov rax, qword (L_constants + 2)
  4773 00002BAD [0200000000000000] 
  4774                                  	.L_if_end_0236:
  4775                                  .L_or_end_0049:
  4776 00002BB5 C9                      	leave
  4777 00002BB6 C21800                  	ret 8 * (2 + 1)
  4778                                  .L_lambda_simple_end_03c7:	; new closure is in rax
  4779 00002BB9 48890425[A0020000]      	mov qword [free_var_84], rax
  4780 00002BC1 48B8-                   	mov rax, sob_void
  4780 00002BC3 [0000000000000000] 
  4781                                  
  4782 00002BCB 4889C7                  	mov rdi, rax
  4783 00002BCE E885FC0000              	call print_sexpr_if_not_void
  4784                                  
  4785 00002BD3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4786 00002BD8 E86AFC0000              	call malloc
  4787 00002BDD 50                      	push rax
  4788 00002BDE BF00000000              	mov rdi, 8 * 0	; new rib
  4789 00002BE3 E85FFC0000              	call malloc
  4790 00002BE8 50                      	push rax
  4791 00002BE9 BF08000000              	mov rdi, 8 * 1	; extended env
  4792 00002BEE E854FC0000              	call malloc
  4793 00002BF3 488B7D10                	mov rdi, ENV
  4794 00002BF7 BE00000000              	mov rsi, 0
  4795 00002BFC BA01000000              	mov rdx, 1
  4796                                  .L_lambda_opt_env_loop_008b:	; ext_env[i + 1] <-- env[i]
  4797 00002C01 4883FE00                	cmp rsi, 0
  4798 00002C05 7410                    	je .L_lambda_opt_env_end_008b
  4799 00002C07 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4800 00002C0B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4801 00002C0F 48FFC6                  	inc rsi
  4802 00002C12 48FFC2                  	inc rdx
  4803 00002C15 EBEA                    	jmp .L_lambda_opt_env_loop_008b
  4804                                  .L_lambda_opt_env_end_008b:
  4805 00002C17 5B                      	pop rbx
  4806 00002C18 BE00000000              	mov rsi, 0
  4807                                  .L_lambda_opt_params_loop_019f:	; copy params
  4808 00002C1D 4883FE00                	cmp rsi, 0
  4809 00002C21 740E                    	je .L_lambda_opt_params_end_019f
  4810 00002C23 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4811 00002C28 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4812 00002C2C 48FFC6                  	inc rsi
  4813 00002C2F EBEC                    	jmp .L_lambda_opt_params_loop_019f
  4814                                  .L_lambda_opt_params_end_019f:
  4815 00002C31 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4816 00002C34 4889C3                  	mov rbx, rax
  4817 00002C37 58                      	pop rax
  4818 00002C38 C60005                  	mov byte [rax], T_closure
  4819 00002C3B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4820 00002C3F 48C74009[4C2C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008b
  4821 00002C47 E9FF000000              	jmp .L_lambda_opt_end_008b
  4822                                  .L_lambda_opt_code_008b:
  4823 00002C4C 4C8B542410              mov r10, qword [rsp+8*2]
  4824 00002C51 4983FA00                cmp r10, 0
  4825 00002C55 740B                    je .L_lambda_opt_arity_check_exact_008b
  4826 00002C57 4983FA00                cmp r10, 0
  4827 00002C5B 7F44                    jg .L_lambda_opt_arity_check_more_008b
  4828 00002C5D E9B2FB0000              jmp L_error_incorrect_arity_opt
  4829                                  .L_lambda_opt_arity_check_exact_008b:
  4830 00002C62 4883EC08                sub rsp, 8
  4831 00002C66 BA03000000              mov rdx, 3+0
  4832 00002C6B 4889E3                  mov qword rbx, rsp
  4833                                  .L_lambda_opt_params_loop_01a0:
  4834 00002C6E 488B4B08                mov qword rcx, [rbx+8]
  4835 00002C72 48890B                  mov qword [rbx], rcx
  4836 00002C75 48FFCA                  dec rdx
  4837 00002C78 4883C308                add rbx, 8
  4838 00002C7C 4883FA00                cmp rdx, 0
  4839 00002C80 7402                    je .L_lambda_opt_params_end_01a0
  4840 00002C82 EBEA                    jmp .L_lambda_opt_params_loop_01a0
  4841                                  .L_lambda_opt_params_end_01a0:
  4842 00002C84 49FFC2                  inc r10
  4843 00002C87 4C89542410              mov qword [rsp+8*2], r10
  4844 00002C8C 4983C202                add r10, 2
  4845 00002C90 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  4846 00002C98 4C8B4D00                mov r9, [rbp]
  4847 00002C9C E996000000              jmp .L_lambda_opt_stack_adjusted_008b
  4848                                  .L_lambda_opt_arity_check_more_008b:
  4849 00002CA1 4C8B6C2410              mov r13, [rsp+2*8]
  4850 00002CA6 48B8-                   mov rax, sob_nil
  4850 00002CA8 [0100000000000000] 
  4851 00002CB0 4C8B542410              mov r10, [rsp+2*8]
  4852 00002CB5 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  4853 00002CBA 4983EA00                sub r10, 0
  4854                                  .L_lambda_opt_stack_shrink_loop_008b:
  4855 00002CBE 4983FA00                cmp r10, 0
  4856 00002CC2 7424                    je .L_lambda_opt_stack_shrink_loop_exit_008b
  4857 00002CC4 4889C1                  mov rcx, rax
  4858 00002CC7 498B10                  mov rdx, [r8]
  4859 00002CCA BF11000000              mov rdi, 17
  4860 00002CCF E873FB0000              call malloc
  4861 00002CD4 C60021                  mov byte [rax], T_pair
  4862 00002CD7 48894809                mov SOB_PAIR_CDR(rax), rcx
  4863 00002CDB 48895001                mov SOB_PAIR_CAR(rax), rdx
  4864 00002CDF 4983E808                sub r8, 8
  4865 00002CE3 49FFCA                  dec r10
  4866 00002CE6 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_008b
  4867                                  .L_lambda_opt_stack_shrink_loop_exit_008b:
  4868 00002CE8 4889442418              mov [rsp+8*(2+1)], rax
  4869 00002CED 41BA01000000            mov r10, 1
  4870 00002CF3 4C89542410              mov [rsp+16], r10
  4871 00002CF8 4989E4                  mov r12, rsp
  4872 00002CFB 4983C418                add r12, 8*(2+1)
  4873 00002CFF 4C2B6C2410              sub r13, [rsp+16]
  4874 00002D04 4D89EA                  mov r10, r13
  4875 00002D07 49C1E203                shl r10, 3
  4876 00002D0B 4D89D7                  mov r15, r10
  4877 00002D0E 4D01E2                  add r10, r12
  4878 00002D11 4C8B4C2410              mov r9, [rsp+16]
  4879 00002D16 4983C103                add r9, 3
  4880                                  .L_lambda_opt_params_loop_01a1:
  4881 00002D1A 4983F900                cmp r9, 0
  4882 00002D1E 7414                    je .L_lambda_opt_params_end_01a1
  4883 00002D20 4D8B3424                mov r14, [r12]
  4884 00002D24 4D8932                  mov [r10], r14
  4885 00002D27 4983EC08                sub r12, 8
  4886 00002D2B 4983EA08                sub r10, 8
  4887 00002D2F 49FFC9                  dec r9
  4888 00002D32 EBE6                    jmp .L_lambda_opt_params_loop_01a1
  4889                                  .L_lambda_opt_params_end_01a1:
  4890 00002D34 4C01FC                  add rsp, r15
  4891                                  .L_lambda_opt_stack_adjusted_008b:
  4892 00002D37 4C8B4D00                mov r9, [rbp]
  4893 00002D3B C8000000                enter 0, 0
  4894 00002D3F 488B4520                mov rax, qword [rbp + 32]
  4895 00002D43 C9                      leave
  4896 00002D44 4C8B4D00                mov r9, [rbp]
  4897 00002D48 C21800                  ret 8 * (3 + 0)
  4898                                  .L_lambda_opt_end_008b:	; new closure is in rax
  4899 00002D4B 48890425[A8020000]      	mov qword [free_var_85], rax
  4900 00002D53 48B8-                   	mov rax, sob_void
  4900 00002D55 [0000000000000000] 
  4901                                  
  4902 00002D5D 4889C7                  	mov rdi, rax
  4903 00002D60 E8F3FA0000              	call print_sexpr_if_not_void
  4904                                  
  4905 00002D65 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4906 00002D6A E8D8FA0000              	call malloc
  4907 00002D6F 50                      	push rax
  4908 00002D70 BF00000000              	mov rdi, 8 * 0	; new rib
  4909 00002D75 E8CDFA0000              	call malloc
  4910 00002D7A 50                      	push rax
  4911 00002D7B BF08000000              	mov rdi, 8 * 1	; extended env
  4912 00002D80 E8C2FA0000              	call malloc
  4913 00002D85 488B7D10                	mov rdi, ENV
  4914 00002D89 BE00000000              	mov rsi, 0
  4915 00002D8E BA01000000              	mov rdx, 1
  4916                                  .L_lambda_simple_env_loop_03c8:	; ext_env[i + 1] <-- env[i]
  4917 00002D93 4883FE00                	cmp rsi, 0
  4918 00002D97 7410                    	je .L_lambda_simple_env_end_03c8
  4919 00002D99 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4920 00002D9D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4921 00002DA1 48FFC6                  	inc rsi
  4922 00002DA4 48FFC2                  	inc rdx
  4923 00002DA7 EBEA                    	jmp .L_lambda_simple_env_loop_03c8
  4924                                  .L_lambda_simple_env_end_03c8:
  4925 00002DA9 5B                      	pop rbx
  4926 00002DAA BE00000000              	mov rsi, 0
  4927                                  .L_lambda_simple_params_loop_03c8:	; copy params
  4928 00002DAF 4883FE00                	cmp rsi, 0
  4929 00002DB3 740E                    	je .L_lambda_simple_params_end_03c8
  4930 00002DB5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4931 00002DBA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4932 00002DBE 48FFC6                  	inc rsi
  4933 00002DC1 EBEC                    	jmp .L_lambda_simple_params_loop_03c8
  4934                                  .L_lambda_simple_params_end_03c8:
  4935 00002DC3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4936 00002DC6 4889C3                  	mov rbx, rax
  4937 00002DC9 58                      	pop rax
  4938 00002DCA C60005                  	mov byte [rax], T_closure
  4939 00002DCD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4940 00002DD1 48C74009[DB2D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c8
  4941 00002DD9 EB3D                    	jmp .L_lambda_simple_end_03c8
  4942                                  .L_lambda_simple_code_03c8:	; lambda-simple body
  4943 00002DDB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4944 00002DE1 740B                    	je .L_lambda_simple_arity_check_ok_082a
  4945 00002DE3 FF742410                	push qword [rsp + 8 * 2]
  4946 00002DE7 6A01                    	push 1
  4947 00002DE9 E912FA0000              	jmp L_error_incorrect_arity_simple
  4948                                  .L_lambda_simple_arity_check_ok_082a:
  4949 00002DEE C8000000                	enter 0, 0
  4950 00002DF2 488B4520                mov rax, qword [rbp + 32]
  4951 00002DF6 483D[02000000]          	cmp rax, sob_boolean_false
  4952 00002DFC 740C                    	je .L_if_else_0237
  4953 00002DFE 48B8-                   	mov rax, qword (L_constants + 2)
  4953 00002E00 [0200000000000000] 
  4954 00002E08 EB0A                    	jmp .L_if_end_0237
  4955                                  	.L_if_else_0237:
  4956 00002E0A 48B8-                   		mov rax, qword (L_constants + 3)
  4956 00002E0C [0300000000000000] 
  4957                                  	.L_if_end_0237:
  4958 00002E14 C9                      	leave
  4959 00002E15 C21800                  	ret 8 * (2 + 1)
  4960                                  .L_lambda_simple_end_03c8:	; new closure is in rax
  4961 00002E18 48890425[B0020000]      	mov qword [free_var_86], rax
  4962 00002E20 48B8-                   	mov rax, sob_void
  4962 00002E22 [0000000000000000] 
  4963                                  
  4964 00002E2A 4889C7                  	mov rdi, rax
  4965 00002E2D E826FA0000              	call print_sexpr_if_not_void
  4966                                  
  4967 00002E32 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4968 00002E37 E80BFA0000              	call malloc
  4969 00002E3C 50                      	push rax
  4970 00002E3D BF00000000              	mov rdi, 8 * 0	; new rib
  4971 00002E42 E800FA0000              	call malloc
  4972 00002E47 50                      	push rax
  4973 00002E48 BF08000000              	mov rdi, 8 * 1	; extended env
  4974 00002E4D E8F5F90000              	call malloc
  4975 00002E52 488B7D10                	mov rdi, ENV
  4976 00002E56 BE00000000              	mov rsi, 0
  4977 00002E5B BA01000000              	mov rdx, 1
  4978                                  .L_lambda_simple_env_loop_03c9:	; ext_env[i + 1] <-- env[i]
  4979 00002E60 4883FE00                	cmp rsi, 0
  4980 00002E64 7410                    	je .L_lambda_simple_env_end_03c9
  4981 00002E66 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4982 00002E6A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4983 00002E6E 48FFC6                  	inc rsi
  4984 00002E71 48FFC2                  	inc rdx
  4985 00002E74 EBEA                    	jmp .L_lambda_simple_env_loop_03c9
  4986                                  .L_lambda_simple_env_end_03c9:
  4987 00002E76 5B                      	pop rbx
  4988 00002E77 BE00000000              	mov rsi, 0
  4989                                  .L_lambda_simple_params_loop_03c9:	; copy params
  4990 00002E7C 4883FE00                	cmp rsi, 0
  4991 00002E80 740E                    	je .L_lambda_simple_params_end_03c9
  4992 00002E82 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4993 00002E87 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4994 00002E8B 48FFC6                  	inc rsi
  4995 00002E8E EBEC                    	jmp .L_lambda_simple_params_loop_03c9
  4996                                  .L_lambda_simple_params_end_03c9:
  4997 00002E90 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4998 00002E93 4889C3                  	mov rbx, rax
  4999 00002E96 58                      	pop rax
  5000 00002E97 C60005                  	mov byte [rax], T_closure
  5001 00002E9A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5002 00002E9E 48C74009[AB2E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03c9
  5003 00002EA6 E9F4000000              	jmp .L_lambda_simple_end_03c9
  5004                                  .L_lambda_simple_code_03c9:	; lambda-simple body
  5005 00002EAB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5006 00002EB1 740B                    	je .L_lambda_simple_arity_check_ok_082b
  5007 00002EB3 FF742410                	push qword [rsp + 8 * 2]
  5008 00002EB7 6A01                    	push 1
  5009 00002EB9 E942F90000              	jmp L_error_incorrect_arity_simple
  5010                                  .L_lambda_simple_arity_check_ok_082b:
  5011 00002EBE C8000000                	enter 0, 0
  5012 00002EC2 488B4520                mov rax, qword [rbp + 32]
  5013 00002EC6 50                      	push rax
  5014 00002EC7 6A01                    	push 1
  5015 00002EC9 488B0425[48000000]      	mov rax, qword [free_var_9]
  5016 00002ED1 803805                  	cmp byte [rax], T_closure 
  5017 00002ED4 0F8528090100                    jne L_code_ptr_error
  5018                                  
  5019 00002EDA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5020                                  
  5021 00002EDE 53                              push rbx
  5022                                  
  5023 00002EDF FF5009                          call SOB_CLOSURE_CODE(rax)
  5024                                  
  5025 00002EE2 483D[02000000]                  	cmp rax, sob_boolean_false
  5026 00002EE8 0F84A3000000            	je .L_if_else_0238
  5027 00002EEE 488B4520                mov rax, qword [rbp + 32]
  5028 00002EF2 50                      	push rax
  5029 00002EF3 6A01                    	push 1
  5030 00002EF5 488B0425[E0000000]      	mov rax, qword [free_var_28]
  5031 00002EFD 803805                  	cmp byte [rax], T_closure 
  5032 00002F00 0F85FC080100                    jne L_code_ptr_error
  5033                                  
  5034 00002F06 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5035                                  
  5036 00002F0A 53                              push rbx
  5037                                  
  5038 00002F0B FF5009                          call SOB_CLOSURE_CODE(rax)
  5039                                  
  5040 00002F0E 50                              	push rax
  5041 00002F0F 6A01                    	push 1
  5042 00002F11 488B0425[B0020000]      	mov rax, qword [free_var_86]
  5043                                  .L_lambda_simple_arity_check_ok_082c:
  5044 00002F19 803805                  	cmp byte [rax], T_closure
  5045                                  
  5046 00002F1C 0F85E0080100                    jne L_code_ptr_error                      ; rax <- proc
  5047                                  
  5048                                  
  5049 00002F22 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5050                                  
  5051 00002F26 53                              push rbx                                  ; env pushed
  5052                                  
  5053 00002F27 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5054                                  
  5055                                          ; sagydebug
  5056                                  
  5057 00002F2A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5058                                  
  5059                                          
  5060                                          
  5061 00002F2D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5062                                  
  5063 00002F31 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5064                                  
  5065                                  
  5066 00002F36 4D89CA                          mov r10, r9
  5067 00002F39 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  5068                                          
  5069 00002F3D 4D89D7                          mov r15, r10
  5070 00002F40 4983C7FF                        add r15, -1
  5071                                                                                         
  5072 00002F44 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5073 00002F47 4983C404                        add r12, 4
  5074 00002F4B 4983C4FF                        add r12, -1
  5075                                  
  5076 00002F4F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5077                                  .L_tc_recycle_frame_loop_0463:
  5078 00002F55 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  5079                                  
  5080 00002F59 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5081                                  
  5082                                  
  5083                                  
  5084 00002F5E 41BE00000000                    mov r14, 0                                ; clean box
  5085                                  
  5086                                  
  5087 00002F64 4983C7FF                        add r15, -1           
  5088 00002F68 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5089                                  
  5090 00002F6C 4983C4FF                        add r12, -1 
  5091                                  
  5092 00002F70 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5093 00002F74 75DF                    	jne .L_tc_recycle_frame_loop_0463
  5094                                  .L_tc_recycle_frame_done_0463:
  5095                                  ;this pop rbp in sot to the right place
  5096 00002F76 4D89C7                  mov r15, r8
  5097                                  
  5098 00002F79 4983C704                        add r15, 4
  5099                                  
  5100 00002F7D 49C1E703                        shl r15, 3
  5101                                  
  5102 00002F81 4C01FC                          add rsp, r15
  5103 00002F84 5D                      	pop rbp                                  ; restore the old rbp
  5104                                  
  5105 00002F85 488B4D00                        mov rcx, qword [rbp]
  5106 00002F89 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5107                                            ; rbx <- code(proc)
  5108                                  
  5109 00002F8D FFE3                            jmp rbx
  5110 00002F8F EB0A                    	jmp .L_if_end_0238
  5111                                  	.L_if_else_0238:
  5112 00002F91 48B8-                   		mov rax, qword (L_constants + 2)
  5112 00002F93 [0200000000000000] 
  5113                                  	.L_if_end_0238:
  5114 00002F9B C9                      	leave
  5115 00002F9C C21800                  	ret 8 * (2 + 1)
  5116                                  .L_lambda_simple_end_03c9:	; new closure is in rax
  5117 00002F9F 48890425[B8020000]      	mov qword [free_var_87], rax
  5118 00002FA7 48B8-                   	mov rax, sob_void
  5118 00002FA9 [0000000000000000] 
  5119                                  
  5120 00002FB1 4889C7                  	mov rdi, rax
  5121 00002FB4 E89FF80000              	call print_sexpr_if_not_void
  5122                                  
  5123 00002FB9 48B8-                   	mov rax, qword (L_constants + 22)
  5123 00002FBB [1600000000000000] 
  5124 00002FC3 50                      	push rax
  5125 00002FC4 6A01                    	push 1
  5126 00002FC6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5127 00002FCB E877F80000              	call malloc
  5128 00002FD0 50                      	push rax
  5129 00002FD1 BF00000000              	mov rdi, 8 * 0	; new rib
  5130 00002FD6 E86CF80000              	call malloc
  5131 00002FDB 50                      	push rax
  5132 00002FDC BF08000000              	mov rdi, 8 * 1	; extended env
  5133 00002FE1 E861F80000              	call malloc
  5134 00002FE6 488B7D10                	mov rdi, ENV
  5135 00002FEA BE00000000              	mov rsi, 0
  5136 00002FEF BA01000000              	mov rdx, 1
  5137                                  .L_lambda_simple_env_loop_03ca:	; ext_env[i + 1] <-- env[i]
  5138 00002FF4 4883FE00                	cmp rsi, 0
  5139 00002FF8 7410                    	je .L_lambda_simple_env_end_03ca
  5140 00002FFA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5141 00002FFE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5142 00003002 48FFC6                  	inc rsi
  5143 00003005 48FFC2                  	inc rdx
  5144 00003008 EBEA                    	jmp .L_lambda_simple_env_loop_03ca
  5145                                  .L_lambda_simple_env_end_03ca:
  5146 0000300A 5B                      	pop rbx
  5147 0000300B BE00000000              	mov rsi, 0
  5148                                  .L_lambda_simple_params_loop_03ca:	; copy params
  5149 00003010 4883FE00                	cmp rsi, 0
  5150 00003014 740E                    	je .L_lambda_simple_params_end_03ca
  5151 00003016 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5152 0000301B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5153 0000301F 48FFC6                  	inc rsi
  5154 00003022 EBEC                    	jmp .L_lambda_simple_params_loop_03ca
  5155                                  .L_lambda_simple_params_end_03ca:
  5156 00003024 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5157 00003027 4889C3                  	mov rbx, rax
  5158 0000302A 58                      	pop rax
  5159 0000302B C60005                  	mov byte [rax], T_closure
  5160 0000302E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5161 00003032 48C74009[3F300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ca
  5162 0000303A E9FE030000              	jmp .L_lambda_simple_end_03ca
  5163                                  .L_lambda_simple_code_03ca:	; lambda-simple body
  5164 0000303F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5165 00003045 740B                    	je .L_lambda_simple_arity_check_ok_082d
  5166 00003047 FF742410                	push qword [rsp + 8 * 2]
  5167 0000304B 6A01                    	push 1
  5168 0000304D E9AEF70000              	jmp L_error_incorrect_arity_simple
  5169                                  .L_lambda_simple_arity_check_ok_082d:
  5170 00003052 C8000000                	enter 0, 0
  5171 00003056 488B4520                mov rax, qword [rbp + 32]
  5172 0000305A BF08000000              mov rdi, 8
  5173 0000305F 4889C3                  mov rbx, rax
  5174 00003062 E8E0F70000              call malloc
  5175 00003067 488918                  mov qword [rax], rbx
  5176 0000306A 48894520                mov qword [rbp + 32], rax
  5177 0000306E 48B8-                   mov rax, sob_void
  5177 00003070 [0000000000000000] 
  5178 00003078 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5179 0000307D E8C5F70000              	call malloc
  5180 00003082 50                      	push rax
  5181 00003083 BF08000000              	mov rdi, 8 * 1	; new rib
  5182 00003088 E8BAF70000              	call malloc
  5183 0000308D 50                      	push rax
  5184 0000308E BF10000000              	mov rdi, 8 * 2	; extended env
  5185 00003093 E8AFF70000              	call malloc
  5186 00003098 488B7D10                	mov rdi, ENV
  5187 0000309C BE00000000              	mov rsi, 0
  5188 000030A1 BA01000000              	mov rdx, 1
  5189                                  .L_lambda_simple_env_loop_03cb:	; ext_env[i + 1] <-- env[i]
  5190 000030A6 4883FE01                	cmp rsi, 1
  5191 000030AA 7410                    	je .L_lambda_simple_env_end_03cb
  5192 000030AC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5193 000030B0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5194 000030B4 48FFC6                  	inc rsi
  5195 000030B7 48FFC2                  	inc rdx
  5196 000030BA EBEA                    	jmp .L_lambda_simple_env_loop_03cb
  5197                                  .L_lambda_simple_env_end_03cb:
  5198 000030BC 5B                      	pop rbx
  5199 000030BD BE00000000              	mov rsi, 0
  5200                                  .L_lambda_simple_params_loop_03cb:	; copy params
  5201 000030C2 4883FE01                	cmp rsi, 1
  5202 000030C6 740E                    	je .L_lambda_simple_params_end_03cb
  5203 000030C8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5204 000030CD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5205 000030D1 48FFC6                  	inc rsi
  5206 000030D4 EBEC                    	jmp .L_lambda_simple_params_loop_03cb
  5207                                  .L_lambda_simple_params_end_03cb:
  5208 000030D6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5209 000030D9 4889C3                  	mov rbx, rax
  5210 000030DC 58                      	pop rax
  5211 000030DD C60005                  	mov byte [rax], T_closure
  5212 000030E0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5213 000030E4 48C74009[F1300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03cb
  5214 000030EC E934010000              	jmp .L_lambda_simple_end_03cb
  5215                                  .L_lambda_simple_code_03cb:	; lambda-simple body
  5216 000030F1 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5217 000030F7 740B                    	je .L_lambda_simple_arity_check_ok_082e
  5218 000030F9 FF742410                	push qword [rsp + 8 * 2]
  5219 000030FD 6A02                    	push 2
  5220 000030FF E9FCF60000              	jmp L_error_incorrect_arity_simple
  5221                                  .L_lambda_simple_arity_check_ok_082e:
  5222 00003104 C8000000                	enter 0, 0
  5223 00003108 488B4528                mov rax, qword [rbp + 40]
  5224 0000310C 50                      	push rax
  5225 0000310D 6A01                    	push 1
  5226 0000310F 488B0425[00000000]      	mov rax, qword [free_var_0]
  5227 00003117 803805                  	cmp byte [rax], T_closure 
  5228 0000311A 0F85E2060100                    jne L_code_ptr_error
  5229                                  
  5230 00003120 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5231                                  
  5232 00003124 53                              push rbx
  5233                                  
  5234 00003125 FF5009                          call SOB_CLOSURE_CODE(rax)
  5235                                  
  5236 00003128 483D[02000000]                  	cmp rax, sob_boolean_false
  5237 0000312E 7409                    	je .L_if_else_0239
  5238 00003130 488B4520                mov rax, qword [rbp + 32]
  5239 00003134 E9E8000000              	jmp .L_if_end_0239
  5240                                  	.L_if_else_0239:
  5241 00003139 488B4528                	mov rax, qword [rbp + 40]
  5242 0000313D 50                      	push rax
  5243 0000313E 6A01                    	push 1
  5244 00003140 488B0425[88000000]      	mov rax, qword [free_var_17]
  5245 00003148 803805                  	cmp byte [rax], T_closure 
  5246 0000314B 0F85B1060100                    jne L_code_ptr_error
  5247                                  
  5248 00003151 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5249                                  
  5250 00003155 53                              push rbx
  5251                                  
  5252 00003156 FF5009                          call SOB_CLOSURE_CODE(rax)
  5253                                  
  5254 00003159 50                              	push rax
  5255 0000315A 488B4528                mov rax, qword [rbp + 40]
  5256 0000315E 50                      	push rax
  5257 0000315F 6A01                    	push 1
  5258 00003161 488B0425[80000000]      	mov rax, qword [free_var_16]
  5259 00003169 803805                  	cmp byte [rax], T_closure 
  5260 0000316C 0F8590060100                    jne L_code_ptr_error
  5261                                  
  5262 00003172 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5263                                  
  5264 00003176 53                              push rbx
  5265                                  
  5266 00003177 FF5009                          call SOB_CLOSURE_CODE(rax)
  5267                                  
  5268 0000317A 50                              	push rax
  5269 0000317B 6A02                    	push 2
  5270 0000317D 488B4510                mov rax, qword [rbp + 16]
  5271 00003181 488B00                  mov rax, qword [rax + 0]
  5272 00003184 488B00                  mov rax, qword [rax + 0]
  5273 00003187 488B00                  	mov rax, qword [rax]
  5274 0000318A 803805                  	cmp byte [rax], T_closure 
  5275 0000318D 0F856F060100                    jne L_code_ptr_error
  5276                                  
  5277 00003193 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5278                                  
  5279 00003197 53                              push rbx
  5280                                  
  5281 00003198 FF5009                          call SOB_CLOSURE_CODE(rax)
  5282                                  
  5283 0000319B 50                              	push rax
  5284 0000319C 488B4520                mov rax, qword [rbp + 32]
  5285 000031A0 50                      	push rax
  5286 000031A1 6A02                    	push 2
  5287 000031A3 488B0425[68000000]      	mov rax, qword [free_var_13]
  5288                                  .L_lambda_simple_arity_check_ok_082f:
  5289 000031AB 803805                  	cmp byte [rax], T_closure
  5290                                  
  5291 000031AE 0F854E060100                    jne L_code_ptr_error                      ; rax <- proc
  5292                                  
  5293                                  
  5294 000031B4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5295                                  
  5296 000031B8 53                              push rbx                                  ; env pushed
  5297                                  
  5298 000031B9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5299                                  
  5300                                          ; sagydebug
  5301                                  
  5302 000031BC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5303                                  
  5304                                          
  5305                                          
  5306 000031BF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5307                                  
  5308 000031C3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5309                                  
  5310                                  
  5311 000031C8 4D89CA                          mov r10, r9
  5312 000031CB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  5313                                          
  5314 000031CF 4D89D7                          mov r15, r10
  5315 000031D2 4983C7FF                        add r15, -1
  5316                                                                                         
  5317 000031D6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5318 000031D9 4983C404                        add r12, 4
  5319 000031DD 4983C4FF                        add r12, -1
  5320                                  
  5321 000031E1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5322                                  .L_tc_recycle_frame_loop_0464:
  5323 000031E7 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  5324                                  
  5325 000031EB 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5326                                  
  5327                                  
  5328                                  
  5329 000031F0 41BE00000000                    mov r14, 0                                ; clean box
  5330                                  
  5331                                  
  5332 000031F6 4983C7FF                        add r15, -1           
  5333 000031FA 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5334                                  
  5335 000031FE 4983C4FF                        add r12, -1 
  5336                                  
  5337 00003202 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5338 00003206 75DF                    	jne .L_tc_recycle_frame_loop_0464
  5339                                  .L_tc_recycle_frame_done_0464:
  5340                                  ;this pop rbp in sot to the right place
  5341 00003208 4D89C7                  mov r15, r8
  5342                                  
  5343 0000320B 4983C704                        add r15, 4
  5344                                  
  5345 0000320F 49C1E703                        shl r15, 3
  5346                                  
  5347 00003213 4C01FC                          add rsp, r15
  5348 00003216 5D                      	pop rbp                                  ; restore the old rbp
  5349                                  
  5350 00003217 488B4D00                        mov rcx, qword [rbp]
  5351 0000321B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5352                                            ; rbx <- code(proc)
  5353                                  
  5354 0000321F FFE3                            jmp rbx
  5355                                  	.L_if_end_0239:
  5356 00003221 C9                      	leave
  5357 00003222 C22000                  	ret 8 * (2 + 2)
  5358                                  .L_lambda_simple_end_03cb:	; new closure is in rax
  5359 00003225 50                      push rax
  5360 00003226 488B4520                mov rax, qword [rbp + 32]
  5361 0000322A 8F00                    pop qword [rax]
  5362 0000322C 48B8-                   mov rax, sob_void
  5362 0000322E [0000000000000000] 
  5363                                  
  5364 00003236 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5365 0000323B E807F60000              	call malloc
  5366 00003240 50                      	push rax
  5367 00003241 BF08000000              	mov rdi, 8 * 1	; new rib
  5368 00003246 E8FCF50000              	call malloc
  5369 0000324B 50                      	push rax
  5370 0000324C BF10000000              	mov rdi, 8 * 2	; extended env
  5371 00003251 E8F1F50000              	call malloc
  5372 00003256 488B7D10                	mov rdi, ENV
  5373 0000325A BE00000000              	mov rsi, 0
  5374 0000325F BA01000000              	mov rdx, 1
  5375                                  .L_lambda_opt_env_loop_008c:	; ext_env[i + 1] <-- env[i]
  5376 00003264 4883FE01                	cmp rsi, 1
  5377 00003268 7410                    	je .L_lambda_opt_env_end_008c
  5378 0000326A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5379 0000326E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5380 00003272 48FFC6                  	inc rsi
  5381 00003275 48FFC2                  	inc rdx
  5382 00003278 EBEA                    	jmp .L_lambda_opt_env_loop_008c
  5383                                  .L_lambda_opt_env_end_008c:
  5384 0000327A 5B                      	pop rbx
  5385 0000327B BE00000000              	mov rsi, 0
  5386                                  .L_lambda_opt_params_loop_01a2:	; copy params
  5387 00003280 4883FE01                	cmp rsi, 1
  5388 00003284 740E                    	je .L_lambda_opt_params_end_01a2
  5389 00003286 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5390 0000328B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5391 0000328F 48FFC6                  	inc rsi
  5392 00003292 EBEC                    	jmp .L_lambda_opt_params_loop_01a2
  5393                                  .L_lambda_opt_params_end_01a2:
  5394 00003294 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5395 00003297 4889C3                  	mov rbx, rax
  5396 0000329A 58                      	pop rax
  5397 0000329B C60005                  	mov byte [rax], T_closure
  5398 0000329E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5399 000032A2 48C74009[AF320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008c
  5400 000032AA E98A010000              	jmp .L_lambda_opt_end_008c
  5401                                  .L_lambda_opt_code_008c:
  5402 000032AF 4C8B542410              mov r10, qword [rsp+8*2]
  5403 000032B4 4983FA01                cmp r10, 1
  5404 000032B8 740B                    je .L_lambda_opt_arity_check_exact_008c
  5405 000032BA 4983FA01                cmp r10, 1
  5406 000032BE 7F44                    jg .L_lambda_opt_arity_check_more_008c
  5407 000032C0 E94FF50000              jmp L_error_incorrect_arity_opt
  5408                                  .L_lambda_opt_arity_check_exact_008c:
  5409 000032C5 4883EC08                sub rsp, 8
  5410 000032C9 BA04000000              mov rdx, 3+1
  5411 000032CE 4889E3                  mov qword rbx, rsp
  5412                                  .L_lambda_opt_params_loop_01a3:
  5413 000032D1 488B4B08                mov qword rcx, [rbx+8]
  5414 000032D5 48890B                  mov qword [rbx], rcx
  5415 000032D8 48FFCA                  dec rdx
  5416 000032DB 4883C308                add rbx, 8
  5417 000032DF 4883FA00                cmp rdx, 0
  5418 000032E3 7402                    je .L_lambda_opt_params_end_01a3
  5419 000032E5 EBEA                    jmp .L_lambda_opt_params_loop_01a3
  5420                                  .L_lambda_opt_params_end_01a3:
  5421 000032E7 49FFC2                  inc r10
  5422 000032EA 4C89542410              mov qword [rsp+8*2], r10
  5423 000032EF 4983C202                add r10, 2
  5424 000032F3 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  5425 000032FB 4C8B4D00                mov r9, [rbp]
  5426 000032FF E996000000              jmp .L_lambda_opt_stack_adjusted_008c
  5427                                  .L_lambda_opt_arity_check_more_008c:
  5428 00003304 4C8B6C2410              mov r13, [rsp+2*8]
  5429 00003309 48B8-                   mov rax, sob_nil
  5429 0000330B [0100000000000000] 
  5430 00003313 4C8B542410              mov r10, [rsp+2*8]
  5431 00003318 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  5432 0000331D 4983EA01                sub r10, 1
  5433                                  .L_lambda_opt_stack_shrink_loop_008c:
  5434 00003321 4983FA00                cmp r10, 0
  5435 00003325 7424                    je .L_lambda_opt_stack_shrink_loop_exit_008c
  5436 00003327 4889C1                  mov rcx, rax
  5437 0000332A 498B10                  mov rdx, [r8]
  5438 0000332D BF11000000              mov rdi, 17
  5439 00003332 E810F50000              call malloc
  5440 00003337 C60021                  mov byte [rax], T_pair
  5441 0000333A 48894809                mov SOB_PAIR_CDR(rax), rcx
  5442 0000333E 48895001                mov SOB_PAIR_CAR(rax), rdx
  5443 00003342 4983E808                sub r8, 8
  5444 00003346 49FFCA                  dec r10
  5445 00003349 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_008c
  5446                                  .L_lambda_opt_stack_shrink_loop_exit_008c:
  5447 0000334B 4889442420              mov [rsp+8*(2+2)], rax
  5448 00003350 41BA02000000            mov r10, 2
  5449 00003356 4C89542410              mov [rsp+16], r10
  5450 0000335B 4989E4                  mov r12, rsp
  5451 0000335E 4983C420                add r12, 8*(2+2)
  5452 00003362 4C2B6C2410              sub r13, [rsp+16]
  5453 00003367 4D89EA                  mov r10, r13
  5454 0000336A 49C1E203                shl r10, 3
  5455 0000336E 4D89D7                  mov r15, r10
  5456 00003371 4D01E2                  add r10, r12
  5457 00003374 4C8B4C2410              mov r9, [rsp+16]
  5458 00003379 4983C103                add r9, 3
  5459                                  .L_lambda_opt_params_loop_01a4:
  5460 0000337D 4983F900                cmp r9, 0
  5461 00003381 7414                    je .L_lambda_opt_params_end_01a4
  5462 00003383 4D8B3424                mov r14, [r12]
  5463 00003387 4D8932                  mov [r10], r14
  5464 0000338A 4983EC08                sub r12, 8
  5465 0000338E 4983EA08                sub r10, 8
  5466 00003392 49FFC9                  dec r9
  5467 00003395 EBE6                    jmp .L_lambda_opt_params_loop_01a4
  5468                                  .L_lambda_opt_params_end_01a4:
  5469 00003397 4C01FC                  add rsp, r15
  5470                                  .L_lambda_opt_stack_adjusted_008c:
  5471 0000339A 4C8B4D00                mov r9, [rbp]
  5472 0000339E C8000000                enter 0, 0
  5473 000033A2 488B4528                mov rax, qword [rbp + 40]
  5474 000033A6 50                      	push rax
  5475 000033A7 488B4520                mov rax, qword [rbp + 32]
  5476 000033AB 50                      	push rax
  5477 000033AC 6A02                    	push 2
  5478 000033AE 488B4510                mov rax, qword [rbp + 16]
  5479 000033B2 488B00                  mov rax, qword [rax + 0]
  5480 000033B5 488B00                  mov rax, qword [rax + 0]
  5481 000033B8 488B00                  	mov rax, qword [rax]
  5482                                  .L_lambda_simple_arity_check_ok_0830:
  5483 000033BB 803805                  	cmp byte [rax], T_closure
  5484                                  
  5485 000033BE 0F853E040100                    jne L_code_ptr_error                      ; rax <- proc
  5486                                  
  5487                                  
  5488 000033C4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5489                                  
  5490 000033C8 53                              push rbx                                  ; env pushed
  5491                                  
  5492 000033C9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5493                                  
  5494                                          ; sagydebug
  5495                                  
  5496 000033CC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5497                                  
  5498                                          
  5499                                          
  5500 000033CF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5501                                  
  5502 000033D3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5503                                  
  5504                                  
  5505 000033D8 4D89CA                          mov r10, r9
  5506 000033DB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  5507                                          
  5508 000033DF 4D89D7                          mov r15, r10
  5509 000033E2 4983C7FF                        add r15, -1
  5510                                                                                         
  5511 000033E6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5512 000033E9 4983C404                        add r12, 4
  5513 000033ED 4983C4FF                        add r12, -1
  5514                                  
  5515 000033F1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5516                                  .L_tc_recycle_frame_loop_0465:
  5517 000033F7 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  5518                                  
  5519 000033FB 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5520                                  
  5521                                  
  5522                                  
  5523 00003400 41BE00000000                    mov r14, 0                                ; clean box
  5524                                  
  5525                                  
  5526 00003406 4983C7FF                        add r15, -1           
  5527 0000340A 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5528                                  
  5529 0000340E 4983C4FF                        add r12, -1 
  5530                                  
  5531 00003412 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5532 00003416 75DF                    	jne .L_tc_recycle_frame_loop_0465
  5533                                  .L_tc_recycle_frame_done_0465:
  5534                                  ;this pop rbp in sot to the right place
  5535 00003418 4D89C7                  mov r15, r8
  5536                                  
  5537 0000341B 4983C704                        add r15, 4
  5538                                  
  5539 0000341F 49C1E703                        shl r15, 3
  5540                                  
  5541 00003423 4C01FC                          add rsp, r15
  5542 00003426 5D                      	pop rbp                                  ; restore the old rbp
  5543                                  
  5544 00003427 488B4D00                        mov rcx, qword [rbp]
  5545 0000342B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5546                                            ; rbx <- code(proc)
  5547                                  
  5548 0000342F FFE3                            jmp rbx
  5549 00003431 C9                      leave
  5550 00003432 4C8B4D00                mov r9, [rbp]
  5551 00003436 C22000                  ret 8 * (3 + 1)
  5552                                  .L_lambda_opt_end_008c:	; new closure is in rax
  5553 00003439 C9                      	leave
  5554 0000343A C21800                  	ret 8 * (2 + 1)
  5555                                  .L_lambda_simple_end_03ca:	; new closure is in rax
  5556 0000343D 803805                  	cmp byte [rax], T_closure 
  5557 00003440 0F85BC030100                    jne L_code_ptr_error
  5558                                  
  5559 00003446 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5560                                  
  5561 0000344A 53                              push rbx
  5562                                  
  5563 0000344B FF5009                          call SOB_CLOSURE_CODE(rax)
  5564                                  
  5565 0000344E 48890425[C0020000]              	mov qword [free_var_88], rax
  5566 00003456 48B8-                   	mov rax, sob_void
  5566 00003458 [0000000000000000] 
  5567                                  
  5568 00003460 4889C7                  	mov rdi, rax
  5569 00003463 E8F0F30000              	call print_sexpr_if_not_void
  5570                                  
  5571 00003468 48B8-                   	mov rax, qword (L_constants + 22)
  5571 0000346A [1600000000000000] 
  5572 00003472 50                      	push rax
  5573 00003473 6A01                    	push 1
  5574 00003475 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5575 0000347A E8C8F30000              	call malloc
  5576 0000347F 50                      	push rax
  5577 00003480 BF00000000              	mov rdi, 8 * 0	; new rib
  5578 00003485 E8BDF30000              	call malloc
  5579 0000348A 50                      	push rax
  5580 0000348B BF08000000              	mov rdi, 8 * 1	; extended env
  5581 00003490 E8B2F30000              	call malloc
  5582 00003495 488B7D10                	mov rdi, ENV
  5583 00003499 BE00000000              	mov rsi, 0
  5584 0000349E BA01000000              	mov rdx, 1
  5585                                  .L_lambda_simple_env_loop_03cc:	; ext_env[i + 1] <-- env[i]
  5586 000034A3 4883FE00                	cmp rsi, 0
  5587 000034A7 7410                    	je .L_lambda_simple_env_end_03cc
  5588 000034A9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5589 000034AD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5590 000034B1 48FFC6                  	inc rsi
  5591 000034B4 48FFC2                  	inc rdx
  5592 000034B7 EBEA                    	jmp .L_lambda_simple_env_loop_03cc
  5593                                  .L_lambda_simple_env_end_03cc:
  5594 000034B9 5B                      	pop rbx
  5595 000034BA BE00000000              	mov rsi, 0
  5596                                  .L_lambda_simple_params_loop_03cc:	; copy params
  5597 000034BF 4883FE00                	cmp rsi, 0
  5598 000034C3 740E                    	je .L_lambda_simple_params_end_03cc
  5599 000034C5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5600 000034CA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5601 000034CE 48FFC6                  	inc rsi
  5602 000034D1 EBEC                    	jmp .L_lambda_simple_params_loop_03cc
  5603                                  .L_lambda_simple_params_end_03cc:
  5604 000034D3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5605 000034D6 4889C3                  	mov rbx, rax
  5606 000034D9 58                      	pop rax
  5607 000034DA C60005                  	mov byte [rax], T_closure
  5608 000034DD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5609 000034E1 48C74009[EE340000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03cc
  5610 000034E9 E958040000              	jmp .L_lambda_simple_end_03cc
  5611                                  .L_lambda_simple_code_03cc:	; lambda-simple body
  5612 000034EE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5613 000034F4 740B                    	je .L_lambda_simple_arity_check_ok_0831
  5614 000034F6 FF742410                	push qword [rsp + 8 * 2]
  5615 000034FA 6A01                    	push 1
  5616 000034FC E9FFF20000              	jmp L_error_incorrect_arity_simple
  5617                                  .L_lambda_simple_arity_check_ok_0831:
  5618 00003501 C8000000                	enter 0, 0
  5619 00003505 488B4520                mov rax, qword [rbp + 32]
  5620 00003509 BF08000000              mov rdi, 8
  5621 0000350E 4889C3                  mov rbx, rax
  5622 00003511 E831F30000              call malloc
  5623 00003516 488918                  mov qword [rax], rbx
  5624 00003519 48894520                mov qword [rbp + 32], rax
  5625 0000351D 48B8-                   mov rax, sob_void
  5625 0000351F [0000000000000000] 
  5626 00003527 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5627 0000352C E816F30000              	call malloc
  5628 00003531 50                      	push rax
  5629 00003532 BF08000000              	mov rdi, 8 * 1	; new rib
  5630 00003537 E80BF30000              	call malloc
  5631 0000353C 50                      	push rax
  5632 0000353D BF10000000              	mov rdi, 8 * 2	; extended env
  5633 00003542 E800F30000              	call malloc
  5634 00003547 488B7D10                	mov rdi, ENV
  5635 0000354B BE00000000              	mov rsi, 0
  5636 00003550 BA01000000              	mov rdx, 1
  5637                                  .L_lambda_simple_env_loop_03cd:	; ext_env[i + 1] <-- env[i]
  5638 00003555 4883FE01                	cmp rsi, 1
  5639 00003559 7410                    	je .L_lambda_simple_env_end_03cd
  5640 0000355B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5641 0000355F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5642 00003563 48FFC6                  	inc rsi
  5643 00003566 48FFC2                  	inc rdx
  5644 00003569 EBEA                    	jmp .L_lambda_simple_env_loop_03cd
  5645                                  .L_lambda_simple_env_end_03cd:
  5646 0000356B 5B                      	pop rbx
  5647 0000356C BE00000000              	mov rsi, 0
  5648                                  .L_lambda_simple_params_loop_03cd:	; copy params
  5649 00003571 4883FE01                	cmp rsi, 1
  5650 00003575 740E                    	je .L_lambda_simple_params_end_03cd
  5651 00003577 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5652 0000357C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5653 00003580 48FFC6                  	inc rsi
  5654 00003583 EBEC                    	jmp .L_lambda_simple_params_loop_03cd
  5655                                  .L_lambda_simple_params_end_03cd:
  5656 00003585 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5657 00003588 4889C3                  	mov rbx, rax
  5658 0000358B 58                      	pop rax
  5659 0000358C C60005                  	mov byte [rax], T_closure
  5660 0000358F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5661 00003593 48C74009[A0350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03cd
  5662 0000359B E935010000              	jmp .L_lambda_simple_end_03cd
  5663                                  .L_lambda_simple_code_03cd:	; lambda-simple body
  5664 000035A0 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5665 000035A6 740B                    	je .L_lambda_simple_arity_check_ok_0832
  5666 000035A8 FF742410                	push qword [rsp + 8 * 2]
  5667 000035AC 6A02                    	push 2
  5668 000035AE E94DF20000              	jmp L_error_incorrect_arity_simple
  5669                                  .L_lambda_simple_arity_check_ok_0832:
  5670 000035B3 C8000000                	enter 0, 0
  5671 000035B7 488B4528                mov rax, qword [rbp + 40]
  5672 000035BB 50                      	push rax
  5673 000035BC 6A01                    	push 1
  5674 000035BE 488B0425[08000000]      	mov rax, qword [free_var_1]
  5675 000035C6 803805                  	cmp byte [rax], T_closure 
  5676 000035C9 0F8533020100                    jne L_code_ptr_error
  5677                                  
  5678 000035CF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5679                                  
  5680 000035D3 53                              push rbx
  5681                                  
  5682 000035D4 FF5009                          call SOB_CLOSURE_CODE(rax)
  5683                                  
  5684 000035D7 483D[02000000]                  	cmp rax, sob_boolean_false
  5685 000035DD 0F84EA000000            	je .L_if_else_023a
  5686 000035E3 488B4528                mov rax, qword [rbp + 40]
  5687 000035E7 50                      	push rax
  5688 000035E8 6A01                    	push 1
  5689 000035EA 488B0425[88000000]      	mov rax, qword [free_var_17]
  5690 000035F2 803805                  	cmp byte [rax], T_closure 
  5691 000035F5 0F8507020100                    jne L_code_ptr_error
  5692                                  
  5693 000035FB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5694                                  
  5695 000035FF 53                              push rbx
  5696                                  
  5697 00003600 FF5009                          call SOB_CLOSURE_CODE(rax)
  5698                                  
  5699 00003603 50                              	push rax
  5700 00003604 488B4528                mov rax, qword [rbp + 40]
  5701 00003608 50                      	push rax
  5702 00003609 6A01                    	push 1
  5703 0000360B 488B0425[80000000]      	mov rax, qword [free_var_16]
  5704 00003613 803805                  	cmp byte [rax], T_closure 
  5705 00003616 0F85E6010100                    jne L_code_ptr_error
  5706                                  
  5707 0000361C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5708                                  
  5709 00003620 53                              push rbx
  5710                                  
  5711 00003621 FF5009                          call SOB_CLOSURE_CODE(rax)
  5712                                  
  5713 00003624 50                              	push rax
  5714 00003625 6A02                    	push 2
  5715 00003627 488B4510                mov rax, qword [rbp + 16]
  5716 0000362B 488B00                  mov rax, qword [rax + 0]
  5717 0000362E 488B00                  mov rax, qword [rax + 0]
  5718 00003631 488B00                  	mov rax, qword [rax]
  5719 00003634 803805                  	cmp byte [rax], T_closure 
  5720 00003637 0F85C5010100                    jne L_code_ptr_error
  5721                                  
  5722 0000363D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5723                                  
  5724 00003641 53                              push rbx
  5725                                  
  5726 00003642 FF5009                          call SOB_CLOSURE_CODE(rax)
  5727                                  
  5728 00003645 50                              	push rax
  5729 00003646 488B4520                mov rax, qword [rbp + 32]
  5730 0000364A 50                      	push rax
  5731 0000364B 6A02                    	push 2
  5732 0000364D 488B0425[68000000]      	mov rax, qword [free_var_13]
  5733                                  .L_lambda_simple_arity_check_ok_0833:
  5734 00003655 803805                  	cmp byte [rax], T_closure
  5735                                  
  5736 00003658 0F85A4010100                    jne L_code_ptr_error                      ; rax <- proc
  5737                                  
  5738                                  
  5739 0000365E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5740                                  
  5741 00003662 53                              push rbx                                  ; env pushed
  5742                                  
  5743 00003663 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5744                                  
  5745                                          ; sagydebug
  5746                                  
  5747 00003666 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5748                                  
  5749                                          
  5750                                          
  5751 00003669 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5752                                  
  5753 0000366D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5754                                  
  5755                                  
  5756 00003672 4D89CA                          mov r10, r9
  5757 00003675 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  5758                                          
  5759 00003679 4D89D7                          mov r15, r10
  5760 0000367C 4983C7FF                        add r15, -1
  5761                                                                                         
  5762 00003680 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5763 00003683 4983C404                        add r12, 4
  5764 00003687 4983C4FF                        add r12, -1
  5765                                  
  5766 0000368B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5767                                  .L_tc_recycle_frame_loop_0466:
  5768 00003691 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  5769                                  
  5770 00003695 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5771                                  
  5772                                  
  5773                                  
  5774 0000369A 41BE00000000                    mov r14, 0                                ; clean box
  5775                                  
  5776                                  
  5777 000036A0 4983C7FF                        add r15, -1           
  5778 000036A4 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5779                                  
  5780 000036A8 4983C4FF                        add r12, -1 
  5781                                  
  5782 000036AC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5783 000036B0 75DF                    	jne .L_tc_recycle_frame_loop_0466
  5784                                  .L_tc_recycle_frame_done_0466:
  5785                                  ;this pop rbp in sot to the right place
  5786 000036B2 4D89C7                  mov r15, r8
  5787                                  
  5788 000036B5 4983C704                        add r15, 4
  5789                                  
  5790 000036B9 49C1E703                        shl r15, 3
  5791                                  
  5792 000036BD 4C01FC                          add rsp, r15
  5793 000036C0 5D                      	pop rbp                                  ; restore the old rbp
  5794                                  
  5795 000036C1 488B4D00                        mov rcx, qword [rbp]
  5796 000036C5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5797                                            ; rbx <- code(proc)
  5798                                  
  5799 000036C9 FFE3                            jmp rbx
  5800 000036CB EB04                    	jmp .L_if_end_023a
  5801                                  	.L_if_else_023a:
  5802 000036CD 488B4520                	mov rax, qword [rbp + 32]
  5803                                  	.L_if_end_023a:
  5804 000036D1 C9                      	leave
  5805 000036D2 C22000                  	ret 8 * (2 + 2)
  5806                                  .L_lambda_simple_end_03cd:	; new closure is in rax
  5807 000036D5 50                      push rax
  5808 000036D6 488B4520                mov rax, qword [rbp + 32]
  5809 000036DA 8F00                    pop qword [rax]
  5810 000036DC 48B8-                   mov rax, sob_void
  5810 000036DE [0000000000000000] 
  5811                                  
  5812 000036E6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5813 000036EB E857F10000              	call malloc
  5814 000036F0 50                      	push rax
  5815 000036F1 BF08000000              	mov rdi, 8 * 1	; new rib
  5816 000036F6 E84CF10000              	call malloc
  5817 000036FB 50                      	push rax
  5818 000036FC BF10000000              	mov rdi, 8 * 2	; extended env
  5819 00003701 E841F10000              	call malloc
  5820 00003706 488B7D10                	mov rdi, ENV
  5821 0000370A BE00000000              	mov rsi, 0
  5822 0000370F BA01000000              	mov rdx, 1
  5823                                  .L_lambda_opt_env_loop_008d:	; ext_env[i + 1] <-- env[i]
  5824 00003714 4883FE01                	cmp rsi, 1
  5825 00003718 7410                    	je .L_lambda_opt_env_end_008d
  5826 0000371A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5827 0000371E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5828 00003722 48FFC6                  	inc rsi
  5829 00003725 48FFC2                  	inc rdx
  5830 00003728 EBEA                    	jmp .L_lambda_opt_env_loop_008d
  5831                                  .L_lambda_opt_env_end_008d:
  5832 0000372A 5B                      	pop rbx
  5833 0000372B BE00000000              	mov rsi, 0
  5834                                  .L_lambda_opt_params_loop_01a5:	; copy params
  5835 00003730 4883FE01                	cmp rsi, 1
  5836 00003734 740E                    	je .L_lambda_opt_params_end_01a5
  5837 00003736 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5838 0000373B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5839 0000373F 48FFC6                  	inc rsi
  5840 00003742 EBEC                    	jmp .L_lambda_opt_params_loop_01a5
  5841                                  .L_lambda_opt_params_end_01a5:
  5842 00003744 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5843 00003747 4889C3                  	mov rbx, rax
  5844 0000374A 58                      	pop rax
  5845 0000374B C60005                  	mov byte [rax], T_closure
  5846 0000374E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5847 00003752 48C74009[5F370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008d
  5848 0000375A E9E3010000              	jmp .L_lambda_opt_end_008d
  5849                                  .L_lambda_opt_code_008d:
  5850 0000375F 4C8B542410              mov r10, qword [rsp+8*2]
  5851 00003764 4983FA01                cmp r10, 1
  5852 00003768 740B                    je .L_lambda_opt_arity_check_exact_008d
  5853 0000376A 4983FA01                cmp r10, 1
  5854 0000376E 7F44                    jg .L_lambda_opt_arity_check_more_008d
  5855 00003770 E99FF00000              jmp L_error_incorrect_arity_opt
  5856                                  .L_lambda_opt_arity_check_exact_008d:
  5857 00003775 4883EC08                sub rsp, 8
  5858 00003779 BA04000000              mov rdx, 3+1
  5859 0000377E 4889E3                  mov qword rbx, rsp
  5860                                  .L_lambda_opt_params_loop_01a6:
  5861 00003781 488B4B08                mov qword rcx, [rbx+8]
  5862 00003785 48890B                  mov qword [rbx], rcx
  5863 00003788 48FFCA                  dec rdx
  5864 0000378B 4883C308                add rbx, 8
  5865 0000378F 4883FA00                cmp rdx, 0
  5866 00003793 7402                    je .L_lambda_opt_params_end_01a6
  5867 00003795 EBEA                    jmp .L_lambda_opt_params_loop_01a6
  5868                                  .L_lambda_opt_params_end_01a6:
  5869 00003797 49FFC2                  inc r10
  5870 0000379A 4C89542410              mov qword [rsp+8*2], r10
  5871 0000379F 4983C202                add r10, 2
  5872 000037A3 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  5873 000037AB 4C8B4D00                mov r9, [rbp]
  5874 000037AF E996000000              jmp .L_lambda_opt_stack_adjusted_008d
  5875                                  .L_lambda_opt_arity_check_more_008d:
  5876 000037B4 4C8B6C2410              mov r13, [rsp+2*8]
  5877 000037B9 48B8-                   mov rax, sob_nil
  5877 000037BB [0100000000000000] 
  5878 000037C3 4C8B542410              mov r10, [rsp+2*8]
  5879 000037C8 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  5880 000037CD 4983EA01                sub r10, 1
  5881                                  .L_lambda_opt_stack_shrink_loop_008d:
  5882 000037D1 4983FA00                cmp r10, 0
  5883 000037D5 7424                    je .L_lambda_opt_stack_shrink_loop_exit_008d
  5884 000037D7 4889C1                  mov rcx, rax
  5885 000037DA 498B10                  mov rdx, [r8]
  5886 000037DD BF11000000              mov rdi, 17
  5887 000037E2 E860F00000              call malloc
  5888 000037E7 C60021                  mov byte [rax], T_pair
  5889 000037EA 48894809                mov SOB_PAIR_CDR(rax), rcx
  5890 000037EE 48895001                mov SOB_PAIR_CAR(rax), rdx
  5891 000037F2 4983E808                sub r8, 8
  5892 000037F6 49FFCA                  dec r10
  5893 000037F9 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_008d
  5894                                  .L_lambda_opt_stack_shrink_loop_exit_008d:
  5895 000037FB 4889442420              mov [rsp+8*(2+2)], rax
  5896 00003800 41BA02000000            mov r10, 2
  5897 00003806 4C89542410              mov [rsp+16], r10
  5898 0000380B 4989E4                  mov r12, rsp
  5899 0000380E 4983C420                add r12, 8*(2+2)
  5900 00003812 4C2B6C2410              sub r13, [rsp+16]
  5901 00003817 4D89EA                  mov r10, r13
  5902 0000381A 49C1E203                shl r10, 3
  5903 0000381E 4D89D7                  mov r15, r10
  5904 00003821 4D01E2                  add r10, r12
  5905 00003824 4C8B4C2410              mov r9, [rsp+16]
  5906 00003829 4983C103                add r9, 3
  5907                                  .L_lambda_opt_params_loop_01a7:
  5908 0000382D 4983F900                cmp r9, 0
  5909 00003831 7414                    je .L_lambda_opt_params_end_01a7
  5910 00003833 4D8B3424                mov r14, [r12]
  5911 00003837 4D8932                  mov [r10], r14
  5912 0000383A 4983EC08                sub r12, 8
  5913 0000383E 4983EA08                sub r10, 8
  5914 00003842 49FFC9                  dec r9
  5915 00003845 EBE6                    jmp .L_lambda_opt_params_loop_01a7
  5916                                  .L_lambda_opt_params_end_01a7:
  5917 00003847 4C01FC                  add rsp, r15
  5918                                  .L_lambda_opt_stack_adjusted_008d:
  5919 0000384A 4C8B4D00                mov r9, [rbp]
  5920 0000384E C8000000                enter 0, 0
  5921 00003852 488B4528                mov rax, qword [rbp + 40]
  5922 00003856 50                      	push rax
  5923 00003857 6A01                    	push 1
  5924 00003859 488B0425[88000000]      	mov rax, qword [free_var_17]
  5925 00003861 803805                  	cmp byte [rax], T_closure 
  5926 00003864 0F8598FF0000                    jne L_code_ptr_error
  5927                                  
  5928 0000386A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5929                                  
  5930 0000386E 53                              push rbx
  5931                                  
  5932 0000386F FF5009                          call SOB_CLOSURE_CODE(rax)
  5933                                  
  5934 00003872 50                              	push rax
  5935 00003873 488B4528                mov rax, qword [rbp + 40]
  5936 00003877 50                      	push rax
  5937 00003878 6A01                    	push 1
  5938 0000387A 488B0425[80000000]      	mov rax, qword [free_var_16]
  5939 00003882 803805                  	cmp byte [rax], T_closure 
  5940 00003885 0F8577FF0000                    jne L_code_ptr_error
  5941                                  
  5942 0000388B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5943                                  
  5944 0000388F 53                              push rbx
  5945                                  
  5946 00003890 FF5009                          call SOB_CLOSURE_CODE(rax)
  5947                                  
  5948 00003893 50                              	push rax
  5949 00003894 6A02                    	push 2
  5950 00003896 488B4510                mov rax, qword [rbp + 16]
  5951 0000389A 488B00                  mov rax, qword [rax + 0]
  5952 0000389D 488B00                  mov rax, qword [rax + 0]
  5953 000038A0 488B00                  	mov rax, qword [rax]
  5954 000038A3 803805                  	cmp byte [rax], T_closure 
  5955 000038A6 0F8556FF0000                    jne L_code_ptr_error
  5956                                  
  5957 000038AC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5958                                  
  5959 000038B0 53                              push rbx
  5960                                  
  5961 000038B1 FF5009                          call SOB_CLOSURE_CODE(rax)
  5962                                  
  5963 000038B4 50                              	push rax
  5964 000038B5 488B4520                mov rax, qword [rbp + 32]
  5965 000038B9 50                      	push rax
  5966 000038BA 6A02                    	push 2
  5967 000038BC 488B0425[E8000000]      	mov rax, qword [free_var_29]
  5968                                  .L_lambda_simple_arity_check_ok_0834:
  5969 000038C4 803805                  	cmp byte [rax], T_closure
  5970                                  
  5971 000038C7 0F8535FF0000                    jne L_code_ptr_error                      ; rax <- proc
  5972                                  
  5973                                  
  5974 000038CD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5975                                  
  5976 000038D1 53                              push rbx                                  ; env pushed
  5977                                  
  5978 000038D2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5979                                  
  5980                                          ; sagydebug
  5981                                  
  5982 000038D5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5983                                  
  5984                                          
  5985                                          
  5986 000038D8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5987                                  
  5988 000038DC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5989                                  
  5990                                  
  5991 000038E1 4D89CA                          mov r10, r9
  5992 000038E4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  5993                                          
  5994 000038E8 4D89D7                          mov r15, r10
  5995 000038EB 4983C7FF                        add r15, -1
  5996                                                                                         
  5997 000038EF 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5998 000038F2 4983C404                        add r12, 4
  5999 000038F6 4983C4FF                        add r12, -1
  6000                                  
  6001 000038FA 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6002                                  .L_tc_recycle_frame_loop_0467:
  6003 00003900 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  6004                                  
  6005 00003904 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6006                                  
  6007                                  
  6008                                  
  6009 00003909 41BE00000000                    mov r14, 0                                ; clean box
  6010                                  
  6011                                  
  6012 0000390F 4983C7FF                        add r15, -1           
  6013 00003913 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6014                                  
  6015 00003917 4983C4FF                        add r12, -1 
  6016                                  
  6017 0000391B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6018 0000391F 75DF                    	jne .L_tc_recycle_frame_loop_0467
  6019                                  .L_tc_recycle_frame_done_0467:
  6020                                  ;this pop rbp in sot to the right place
  6021 00003921 4D89C7                  mov r15, r8
  6022                                  
  6023 00003924 4983C704                        add r15, 4
  6024                                  
  6025 00003928 49C1E703                        shl r15, 3
  6026                                  
  6027 0000392C 4C01FC                          add rsp, r15
  6028 0000392F 5D                      	pop rbp                                  ; restore the old rbp
  6029                                  
  6030 00003930 488B4D00                        mov rcx, qword [rbp]
  6031 00003934 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6032                                            ; rbx <- code(proc)
  6033                                  
  6034 00003938 FFE3                            jmp rbx
  6035 0000393A C9                      leave
  6036 0000393B 4C8B4D00                mov r9, [rbp]
  6037 0000393F C22000                  ret 8 * (3 + 1)
  6038                                  .L_lambda_opt_end_008d:	; new closure is in rax
  6039 00003942 C9                      	leave
  6040 00003943 C21800                  	ret 8 * (2 + 1)
  6041                                  .L_lambda_simple_end_03cc:	; new closure is in rax
  6042 00003946 803805                  	cmp byte [rax], T_closure 
  6043 00003949 0F85B3FE0000                    jne L_code_ptr_error
  6044                                  
  6045 0000394F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6046                                  
  6047 00003953 53                              push rbx
  6048                                  
  6049 00003954 FF5009                          call SOB_CLOSURE_CODE(rax)
  6050                                  
  6051 00003957 48890425[C8020000]              	mov qword [free_var_89], rax
  6052 0000395F 48B8-                   	mov rax, sob_void
  6052 00003961 [0000000000000000] 
  6053                                  
  6054 00003969 4889C7                  	mov rdi, rax
  6055 0000396C E8E7EE0000              	call print_sexpr_if_not_void
  6056                                  
  6057 00003971 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6058 00003976 E8CCEE0000              	call malloc
  6059 0000397B 50                      	push rax
  6060 0000397C BF00000000              	mov rdi, 8 * 0	; new rib
  6061 00003981 E8C1EE0000              	call malloc
  6062 00003986 50                      	push rax
  6063 00003987 BF08000000              	mov rdi, 8 * 1	; extended env
  6064 0000398C E8B6EE0000              	call malloc
  6065 00003991 488B7D10                	mov rdi, ENV
  6066 00003995 BE00000000              	mov rsi, 0
  6067 0000399A BA01000000              	mov rdx, 1
  6068                                  .L_lambda_opt_env_loop_008e:	; ext_env[i + 1] <-- env[i]
  6069 0000399F 4883FE00                	cmp rsi, 0
  6070 000039A3 7410                    	je .L_lambda_opt_env_end_008e
  6071 000039A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6072 000039A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6073 000039AD 48FFC6                  	inc rsi
  6074 000039B0 48FFC2                  	inc rdx
  6075 000039B3 EBEA                    	jmp .L_lambda_opt_env_loop_008e
  6076                                  .L_lambda_opt_env_end_008e:
  6077 000039B5 5B                      	pop rbx
  6078 000039B6 BE00000000              	mov rsi, 0
  6079                                  .L_lambda_opt_params_loop_01a8:	; copy params
  6080 000039BB 4883FE00                	cmp rsi, 0
  6081 000039BF 740E                    	je .L_lambda_opt_params_end_01a8
  6082 000039C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6083 000039C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6084 000039CA 48FFC6                  	inc rsi
  6085 000039CD EBEC                    	jmp .L_lambda_opt_params_loop_01a8
  6086                                  .L_lambda_opt_params_end_01a8:
  6087 000039CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6088 000039D2 4889C3                  	mov rbx, rax
  6089 000039D5 58                      	pop rax
  6090 000039D6 C60005                  	mov byte [rax], T_closure
  6091 000039D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6092 000039DD 48C74009[EA390000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008e
  6093 000039E5 E9C4040000              	jmp .L_lambda_opt_end_008e
  6094                                  .L_lambda_opt_code_008e:
  6095 000039EA 4C8B542410              mov r10, qword [rsp+8*2]
  6096 000039EF 4983FA01                cmp r10, 1
  6097 000039F3 740B                    je .L_lambda_opt_arity_check_exact_008e
  6098 000039F5 4983FA01                cmp r10, 1
  6099 000039F9 7F44                    jg .L_lambda_opt_arity_check_more_008e
  6100 000039FB E914EE0000              jmp L_error_incorrect_arity_opt
  6101                                  .L_lambda_opt_arity_check_exact_008e:
  6102 00003A00 4883EC08                sub rsp, 8
  6103 00003A04 BA04000000              mov rdx, 3+1
  6104 00003A09 4889E3                  mov qword rbx, rsp
  6105                                  .L_lambda_opt_params_loop_01a9:
  6106 00003A0C 488B4B08                mov qword rcx, [rbx+8]
  6107 00003A10 48890B                  mov qword [rbx], rcx
  6108 00003A13 48FFCA                  dec rdx
  6109 00003A16 4883C308                add rbx, 8
  6110 00003A1A 4883FA00                cmp rdx, 0
  6111 00003A1E 7402                    je .L_lambda_opt_params_end_01a9
  6112 00003A20 EBEA                    jmp .L_lambda_opt_params_loop_01a9
  6113                                  .L_lambda_opt_params_end_01a9:
  6114 00003A22 49FFC2                  inc r10
  6115 00003A25 4C89542410              mov qword [rsp+8*2], r10
  6116 00003A2A 4983C202                add r10, 2
  6117 00003A2E 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  6118 00003A36 4C8B4D00                mov r9, [rbp]
  6119 00003A3A E996000000              jmp .L_lambda_opt_stack_adjusted_008e
  6120                                  .L_lambda_opt_arity_check_more_008e:
  6121 00003A3F 4C8B6C2410              mov r13, [rsp+2*8]
  6122 00003A44 48B8-                   mov rax, sob_nil
  6122 00003A46 [0100000000000000] 
  6123 00003A4E 4C8B542410              mov r10, [rsp+2*8]
  6124 00003A53 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  6125 00003A58 4983EA01                sub r10, 1
  6126                                  .L_lambda_opt_stack_shrink_loop_008e:
  6127 00003A5C 4983FA00                cmp r10, 0
  6128 00003A60 7424                    je .L_lambda_opt_stack_shrink_loop_exit_008e
  6129 00003A62 4889C1                  mov rcx, rax
  6130 00003A65 498B10                  mov rdx, [r8]
  6131 00003A68 BF11000000              mov rdi, 17
  6132 00003A6D E8D5ED0000              call malloc
  6133 00003A72 C60021                  mov byte [rax], T_pair
  6134 00003A75 48894809                mov SOB_PAIR_CDR(rax), rcx
  6135 00003A79 48895001                mov SOB_PAIR_CAR(rax), rdx
  6136 00003A7D 4983E808                sub r8, 8
  6137 00003A81 49FFCA                  dec r10
  6138 00003A84 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_008e
  6139                                  .L_lambda_opt_stack_shrink_loop_exit_008e:
  6140 00003A86 4889442420              mov [rsp+8*(2+2)], rax
  6141 00003A8B 41BA02000000            mov r10, 2
  6142 00003A91 4C89542410              mov [rsp+16], r10
  6143 00003A96 4989E4                  mov r12, rsp
  6144 00003A99 4983C420                add r12, 8*(2+2)
  6145 00003A9D 4C2B6C2410              sub r13, [rsp+16]
  6146 00003AA2 4D89EA                  mov r10, r13
  6147 00003AA5 49C1E203                shl r10, 3
  6148 00003AA9 4D89D7                  mov r15, r10
  6149 00003AAC 4D01E2                  add r10, r12
  6150 00003AAF 4C8B4C2410              mov r9, [rsp+16]
  6151 00003AB4 4983C103                add r9, 3
  6152                                  .L_lambda_opt_params_loop_01aa:
  6153 00003AB8 4983F900                cmp r9, 0
  6154 00003ABC 7414                    je .L_lambda_opt_params_end_01aa
  6155 00003ABE 4D8B3424                mov r14, [r12]
  6156 00003AC2 4D8932                  mov [r10], r14
  6157 00003AC5 4983EC08                sub r12, 8
  6158 00003AC9 4983EA08                sub r10, 8
  6159 00003ACD 49FFC9                  dec r9
  6160 00003AD0 EBE6                    jmp .L_lambda_opt_params_loop_01aa
  6161                                  .L_lambda_opt_params_end_01aa:
  6162 00003AD2 4C01FC                  add rsp, r15
  6163                                  .L_lambda_opt_stack_adjusted_008e:
  6164 00003AD5 4C8B4D00                mov r9, [rbp]
  6165 00003AD9 C8000000                enter 0, 0
  6166 00003ADD 48B8-                   	mov rax, qword (L_constants + 22)
  6166 00003ADF [1600000000000000] 
  6167 00003AE7 50                      	push rax
  6168 00003AE8 6A01                    	push 1
  6169 00003AEA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6170 00003AEF E853ED0000              	call malloc
  6171 00003AF4 50                      	push rax
  6172 00003AF5 BF10000000              	mov rdi, 8 * 2	; new rib
  6173 00003AFA E848ED0000              	call malloc
  6174 00003AFF 50                      	push rax
  6175 00003B00 BF10000000              	mov rdi, 8 * 2	; extended env
  6176 00003B05 E83DED0000              	call malloc
  6177 00003B0A 488B7D10                	mov rdi, ENV
  6178 00003B0E BE00000000              	mov rsi, 0
  6179 00003B13 BA01000000              	mov rdx, 1
  6180                                  .L_lambda_simple_env_loop_03ce:	; ext_env[i + 1] <-- env[i]
  6181 00003B18 4883FE01                	cmp rsi, 1
  6182 00003B1C 7410                    	je .L_lambda_simple_env_end_03ce
  6183 00003B1E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6184 00003B22 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6185 00003B26 48FFC6                  	inc rsi
  6186 00003B29 48FFC2                  	inc rdx
  6187 00003B2C EBEA                    	jmp .L_lambda_simple_env_loop_03ce
  6188                                  .L_lambda_simple_env_end_03ce:
  6189 00003B2E 5B                      	pop rbx
  6190 00003B2F BE00000000              	mov rsi, 0
  6191                                  .L_lambda_simple_params_loop_03ce:	; copy params
  6192 00003B34 4883FE02                	cmp rsi, 2
  6193 00003B38 740E                    	je .L_lambda_simple_params_end_03ce
  6194 00003B3A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6195 00003B3F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6196 00003B43 48FFC6                  	inc rsi
  6197 00003B46 EBEC                    	jmp .L_lambda_simple_params_loop_03ce
  6198                                  .L_lambda_simple_params_end_03ce:
  6199 00003B48 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6200 00003B4B 4889C3                  	mov rbx, rax
  6201 00003B4E 58                      	pop rax
  6202 00003B4F C60005                  	mov byte [rax], T_closure
  6203 00003B52 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6204 00003B56 48C74009[633B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ce
  6205 00003B5E E9CD020000              	jmp .L_lambda_simple_end_03ce
  6206                                  .L_lambda_simple_code_03ce:	; lambda-simple body
  6207 00003B63 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6208 00003B69 740B                    	je .L_lambda_simple_arity_check_ok_0835
  6209 00003B6B FF742410                	push qword [rsp + 8 * 2]
  6210 00003B6F 6A01                    	push 1
  6211 00003B71 E98AEC0000              	jmp L_error_incorrect_arity_simple
  6212                                  .L_lambda_simple_arity_check_ok_0835:
  6213 00003B76 C8000000                	enter 0, 0
  6214 00003B7A 488B4520                mov rax, qword [rbp + 32]
  6215 00003B7E BF08000000              mov rdi, 8
  6216 00003B83 4889C3                  mov rbx, rax
  6217 00003B86 E8BCEC0000              call malloc
  6218 00003B8B 488918                  mov qword [rax], rbx
  6219 00003B8E 48894520                mov qword [rbp + 32], rax
  6220 00003B92 48B8-                   mov rax, sob_void
  6220 00003B94 [0000000000000000] 
  6221 00003B9C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6222 00003BA1 E8A1EC0000              	call malloc
  6223 00003BA6 50                      	push rax
  6224 00003BA7 BF08000000              	mov rdi, 8 * 1	; new rib
  6225 00003BAC E896EC0000              	call malloc
  6226 00003BB1 50                      	push rax
  6227 00003BB2 BF18000000              	mov rdi, 8 * 3	; extended env
  6228 00003BB7 E88BEC0000              	call malloc
  6229 00003BBC 488B7D10                	mov rdi, ENV
  6230 00003BC0 BE00000000              	mov rsi, 0
  6231 00003BC5 BA01000000              	mov rdx, 1
  6232                                  .L_lambda_simple_env_loop_03cf:	; ext_env[i + 1] <-- env[i]
  6233 00003BCA 4883FE02                	cmp rsi, 2
  6234 00003BCE 7410                    	je .L_lambda_simple_env_end_03cf
  6235 00003BD0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6236 00003BD4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6237 00003BD8 48FFC6                  	inc rsi
  6238 00003BDB 48FFC2                  	inc rdx
  6239 00003BDE EBEA                    	jmp .L_lambda_simple_env_loop_03cf
  6240                                  .L_lambda_simple_env_end_03cf:
  6241 00003BE0 5B                      	pop rbx
  6242 00003BE1 BE00000000              	mov rsi, 0
  6243                                  .L_lambda_simple_params_loop_03cf:	; copy params
  6244 00003BE6 4883FE01                	cmp rsi, 1
  6245 00003BEA 740E                    	je .L_lambda_simple_params_end_03cf
  6246 00003BEC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6247 00003BF1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6248 00003BF5 48FFC6                  	inc rsi
  6249 00003BF8 EBEC                    	jmp .L_lambda_simple_params_loop_03cf
  6250                                  .L_lambda_simple_params_end_03cf:
  6251 00003BFA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6252 00003BFD 4889C3                  	mov rbx, rax
  6253 00003C00 58                      	pop rax
  6254 00003C01 C60005                  	mov byte [rax], T_closure
  6255 00003C04 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6256 00003C08 48C74009[153C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03cf
  6257 00003C10 E97B010000              	jmp .L_lambda_simple_end_03cf
  6258                                  .L_lambda_simple_code_03cf:	; lambda-simple body
  6259 00003C15 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6260 00003C1B 740B                    	je .L_lambda_simple_arity_check_ok_0836
  6261 00003C1D FF742410                	push qword [rsp + 8 * 2]
  6262 00003C21 6A01                    	push 1
  6263 00003C23 E9D8EB0000              	jmp L_error_incorrect_arity_simple
  6264                                  .L_lambda_simple_arity_check_ok_0836:
  6265 00003C28 C8000000                	enter 0, 0
  6266 00003C2C 488B4520                mov rax, qword [rbp + 32]
  6267 00003C30 50                      	push rax
  6268 00003C31 6A01                    	push 1
  6269 00003C33 488B0425[80000000]      	mov rax, qword [free_var_16]
  6270 00003C3B 803805                  	cmp byte [rax], T_closure 
  6271 00003C3E 0F85BEFB0000                    jne L_code_ptr_error
  6272                                  
  6273 00003C44 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6274                                  
  6275 00003C48 53                              push rbx
  6276                                  
  6277 00003C49 FF5009                          call SOB_CLOSURE_CODE(rax)
  6278                                  
  6279 00003C4C 50                              	push rax
  6280 00003C4D 6A01                    	push 1
  6281 00003C4F 488B0425[08000000]      	mov rax, qword [free_var_1]
  6282 00003C57 803805                  	cmp byte [rax], T_closure 
  6283 00003C5A 0F85A2FB0000                    jne L_code_ptr_error
  6284                                  
  6285 00003C60 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6286                                  
  6287 00003C64 53                              push rbx
  6288                                  
  6289 00003C65 FF5009                          call SOB_CLOSURE_CODE(rax)
  6290                                  
  6291 00003C68 483D[02000000]                  	cmp rax, sob_boolean_false
  6292 00003C6E 0F840E010000            	je .L_if_else_023b
  6293 00003C74 488B4520                mov rax, qword [rbp + 32]
  6294 00003C78 50                      	push rax
  6295 00003C79 488B0425[80000000]      	mov rax, qword [free_var_16]
  6296 00003C81 50                      	push rax
  6297 00003C82 6A02                    	push 2
  6298 00003C84 488B0425[D8020000]      	mov rax, qword [free_var_91]
  6299 00003C8C 803805                  	cmp byte [rax], T_closure 
  6300 00003C8F 0F856DFB0000                    jne L_code_ptr_error
  6301                                  
  6302 00003C95 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6303                                  
  6304 00003C99 53                              push rbx
  6305                                  
  6306 00003C9A FF5009                          call SOB_CLOSURE_CODE(rax)
  6307                                  
  6308 00003C9D 50                              	push rax
  6309 00003C9E 488B4510                mov rax, qword [rbp + 16]
  6310 00003CA2 488B4008                mov rax, qword [rax + 8]
  6311 00003CA6 488B00                  mov rax, qword [rax + 0]
  6312 00003CA9 50                      	push rax
  6313 00003CAA 6A02                    	push 2
  6314 00003CAC 488B0425[C8020000]      	mov rax, qword [free_var_89]
  6315 00003CB4 803805                  	cmp byte [rax], T_closure 
  6316 00003CB7 0F8545FB0000                    jne L_code_ptr_error
  6317                                  
  6318 00003CBD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6319                                  
  6320 00003CC1 53                              push rbx
  6321                                  
  6322 00003CC2 FF5009                          call SOB_CLOSURE_CODE(rax)
  6323                                  
  6324 00003CC5 483D[02000000]                  	cmp rax, sob_boolean_false
  6325 00003CCB 0F85AF000000            	jne .L_or_end_004a
  6326 00003CD1 488B4520                mov rax, qword [rbp + 32]
  6327 00003CD5 50                      	push rax
  6328 00003CD6 488B0425[88000000]      	mov rax, qword [free_var_17]
  6329 00003CDE 50                      	push rax
  6330 00003CDF 6A02                    	push 2
  6331 00003CE1 488B0425[D8020000]      	mov rax, qword [free_var_91]
  6332 00003CE9 803805                  	cmp byte [rax], T_closure 
  6333 00003CEC 0F8510FB0000                    jne L_code_ptr_error
  6334                                  
  6335 00003CF2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6336                                  
  6337 00003CF6 53                              push rbx
  6338                                  
  6339 00003CF7 FF5009                          call SOB_CLOSURE_CODE(rax)
  6340                                  
  6341 00003CFA 50                              	push rax
  6342 00003CFB 6A01                    	push 1
  6343 00003CFD 488B4510                mov rax, qword [rbp + 16]
  6344 00003D01 488B00                  mov rax, qword [rax + 0]
  6345 00003D04 488B00                  mov rax, qword [rax + 0]
  6346 00003D07 488B00                  	mov rax, qword [rax]
  6347                                  .L_lambda_simple_arity_check_ok_0837:
  6348 00003D0A 803805                  	cmp byte [rax], T_closure
  6349                                  
  6350 00003D0D 0F85EFFA0000                    jne L_code_ptr_error                      ; rax <- proc
  6351                                  
  6352                                  
  6353 00003D13 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6354                                  
  6355 00003D17 53                              push rbx                                  ; env pushed
  6356                                  
  6357 00003D18 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6358                                  
  6359                                          ; sagydebug
  6360                                  
  6361 00003D1B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6362                                  
  6363                                          
  6364                                          
  6365 00003D1E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6366                                  
  6367 00003D22 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6368                                  
  6369                                  
  6370 00003D27 4D89CA                          mov r10, r9
  6371 00003D2A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  6372                                          
  6373 00003D2E 4D89D7                          mov r15, r10
  6374 00003D31 4983C7FF                        add r15, -1
  6375                                                                                         
  6376 00003D35 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6377 00003D38 4983C404                        add r12, 4
  6378 00003D3C 4983C4FF                        add r12, -1
  6379                                  
  6380 00003D40 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6381                                  .L_tc_recycle_frame_loop_0468:
  6382 00003D46 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  6383                                  
  6384 00003D4A 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6385                                  
  6386                                  
  6387                                  
  6388 00003D4F 41BE00000000                    mov r14, 0                                ; clean box
  6389                                  
  6390                                  
  6391 00003D55 4983C7FF                        add r15, -1           
  6392 00003D59 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6393                                  
  6394 00003D5D 4983C4FF                        add r12, -1 
  6395                                  
  6396 00003D61 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6397 00003D65 75DF                    	jne .L_tc_recycle_frame_loop_0468
  6398                                  .L_tc_recycle_frame_done_0468:
  6399                                  ;this pop rbp in sot to the right place
  6400 00003D67 4D89C7                  mov r15, r8
  6401                                  
  6402 00003D6A 4983C704                        add r15, 4
  6403                                  
  6404 00003D6E 49C1E703                        shl r15, 3
  6405                                  
  6406 00003D72 4C01FC                          add rsp, r15
  6407 00003D75 5D                      	pop rbp                                  ; restore the old rbp
  6408                                  
  6409 00003D76 488B4D00                        mov rcx, qword [rbp]
  6410 00003D7A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6411                                            ; rbx <- code(proc)
  6412                                  
  6413 00003D7E FFE3                            jmp rbx
  6414                                  .L_or_end_004a:
  6415 00003D80 EB0A                    	jmp .L_if_end_023b
  6416                                  	.L_if_else_023b:
  6417 00003D82 48B8-                   		mov rax, qword (L_constants + 2)
  6417 00003D84 [0200000000000000] 
  6418                                  	.L_if_end_023b:
  6419 00003D8C C9                      	leave
  6420 00003D8D C21800                  	ret 8 * (2 + 1)
  6421                                  .L_lambda_simple_end_03cf:	; new closure is in rax
  6422 00003D90 50                      push rax
  6423 00003D91 488B4520                mov rax, qword [rbp + 32]
  6424 00003D95 8F00                    pop qword [rax]
  6425 00003D97 48B8-                   mov rax, sob_void
  6425 00003D99 [0000000000000000] 
  6426                                  
  6427 00003DA1 488B4510                mov rax, qword [rbp + 16]
  6428 00003DA5 488B00                  mov rax, qword [rax + 0]
  6429 00003DA8 488B4008                mov rax, qword [rax + 8]
  6430 00003DAC 50                      	push rax
  6431 00003DAD 6A01                    	push 1
  6432 00003DAF 488B4520                mov rax, qword [rbp + 32]
  6433 00003DB3 488B00                  	mov rax, qword [rax]
  6434                                  .L_lambda_simple_arity_check_ok_0838:
  6435 00003DB6 803805                  	cmp byte [rax], T_closure
  6436                                  
  6437 00003DB9 0F8543FA0000                    jne L_code_ptr_error                      ; rax <- proc
  6438                                  
  6439                                  
  6440 00003DBF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6441                                  
  6442 00003DC3 53                              push rbx                                  ; env pushed
  6443                                  
  6444 00003DC4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6445                                  
  6446                                          ; sagydebug
  6447                                  
  6448 00003DC7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6449                                  
  6450                                          
  6451                                          
  6452 00003DCA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6453                                  
  6454 00003DCE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6455                                  
  6456                                  
  6457 00003DD3 4D89CA                          mov r10, r9
  6458 00003DD6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  6459                                          
  6460 00003DDA 4D89D7                          mov r15, r10
  6461 00003DDD 4983C7FF                        add r15, -1
  6462                                                                                         
  6463 00003DE1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6464 00003DE4 4983C404                        add r12, 4
  6465 00003DE8 4983C4FF                        add r12, -1
  6466                                  
  6467 00003DEC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6468                                  .L_tc_recycle_frame_loop_0469:
  6469 00003DF2 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  6470                                  
  6471 00003DF6 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6472                                  
  6473                                  
  6474                                  
  6475 00003DFB 41BE00000000                    mov r14, 0                                ; clean box
  6476                                  
  6477                                  
  6478 00003E01 4983C7FF                        add r15, -1           
  6479 00003E05 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6480                                  
  6481 00003E09 4983C4FF                        add r12, -1 
  6482                                  
  6483 00003E0D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6484 00003E11 75DF                    	jne .L_tc_recycle_frame_loop_0469
  6485                                  .L_tc_recycle_frame_done_0469:
  6486                                  ;this pop rbp in sot to the right place
  6487 00003E13 4D89C7                  mov r15, r8
  6488                                  
  6489 00003E16 4983C704                        add r15, 4
  6490                                  
  6491 00003E1A 49C1E703                        shl r15, 3
  6492                                  
  6493 00003E1E 4C01FC                          add rsp, r15
  6494 00003E21 5D                      	pop rbp                                  ; restore the old rbp
  6495                                  
  6496 00003E22 488B4D00                        mov rcx, qword [rbp]
  6497 00003E26 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6498                                            ; rbx <- code(proc)
  6499                                  
  6500 00003E2A FFE3                            jmp rbx
  6501 00003E2C C9                      	leave
  6502 00003E2D C21800                  	ret 8 * (2 + 1)
  6503                                  .L_lambda_simple_end_03ce:	; new closure is in rax
  6504                                  .L_lambda_simple_arity_check_ok_0839:
  6505 00003E30 803805                  	cmp byte [rax], T_closure
  6506                                  
  6507 00003E33 0F85C9F90000                    jne L_code_ptr_error                      ; rax <- proc
  6508                                  
  6509                                  
  6510 00003E39 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6511                                  
  6512 00003E3D 53                              push rbx                                  ; env pushed
  6513                                  
  6514 00003E3E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6515                                  
  6516                                          ; sagydebug
  6517                                  
  6518 00003E41 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6519                                  
  6520                                          
  6521                                          
  6522 00003E44 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6523                                  
  6524 00003E48 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6525                                  
  6526                                  
  6527 00003E4D 4D89CA                          mov r10, r9
  6528 00003E50 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  6529                                          
  6530 00003E54 4D89D7                          mov r15, r10
  6531 00003E57 4983C7FF                        add r15, -1
  6532                                                                                         
  6533 00003E5B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6534 00003E5E 4983C404                        add r12, 4
  6535 00003E62 4983C4FF                        add r12, -1
  6536                                  
  6537 00003E66 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6538                                  .L_tc_recycle_frame_loop_046a:
  6539 00003E6C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  6540                                  
  6541 00003E70 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6542                                  
  6543                                  
  6544                                  
  6545 00003E75 41BE00000000                    mov r14, 0                                ; clean box
  6546                                  
  6547                                  
  6548 00003E7B 4983C7FF                        add r15, -1           
  6549 00003E7F 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6550                                  
  6551 00003E83 4983C4FF                        add r12, -1 
  6552                                  
  6553 00003E87 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6554 00003E8B 75DF                    	jne .L_tc_recycle_frame_loop_046a
  6555                                  .L_tc_recycle_frame_done_046a:
  6556                                  ;this pop rbp in sot to the right place
  6557 00003E8D 4D89C7                  mov r15, r8
  6558                                  
  6559 00003E90 4983C704                        add r15, 4
  6560                                  
  6561 00003E94 49C1E703                        shl r15, 3
  6562                                  
  6563 00003E98 4C01FC                          add rsp, r15
  6564 00003E9B 5D                      	pop rbp                                  ; restore the old rbp
  6565                                  
  6566 00003E9C 488B4D00                        mov rcx, qword [rbp]
  6567 00003EA0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6568                                            ; rbx <- code(proc)
  6569                                  
  6570 00003EA4 FFE3                            jmp rbx
  6571 00003EA6 C9                      leave
  6572 00003EA7 4C8B4D00                mov r9, [rbp]
  6573 00003EAB C22000                  ret 8 * (3 + 1)
  6574                                  .L_lambda_opt_end_008e:	; new closure is in rax
  6575 00003EAE 48890425[D0020000]      	mov qword [free_var_90], rax
  6576 00003EB6 48B8-                   	mov rax, sob_void
  6576 00003EB8 [0000000000000000] 
  6577                                  
  6578 00003EC0 4889C7                  	mov rdi, rax
  6579 00003EC3 E890E90000              	call print_sexpr_if_not_void
  6580                                  
  6581 00003EC8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6582 00003ECD E875E90000              	call malloc
  6583 00003ED2 50                      	push rax
  6584 00003ED3 BF00000000              	mov rdi, 8 * 0	; new rib
  6585 00003ED8 E86AE90000              	call malloc
  6586 00003EDD 50                      	push rax
  6587 00003EDE BF08000000              	mov rdi, 8 * 1	; extended env
  6588 00003EE3 E85FE90000              	call malloc
  6589 00003EE8 488B7D10                	mov rdi, ENV
  6590 00003EEC BE00000000              	mov rsi, 0
  6591 00003EF1 BA01000000              	mov rdx, 1
  6592                                  .L_lambda_opt_env_loop_008f:	; ext_env[i + 1] <-- env[i]
  6593 00003EF6 4883FE00                	cmp rsi, 0
  6594 00003EFA 7410                    	je .L_lambda_opt_env_end_008f
  6595 00003EFC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6596 00003F00 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6597 00003F04 48FFC6                  	inc rsi
  6598 00003F07 48FFC2                  	inc rdx
  6599 00003F0A EBEA                    	jmp .L_lambda_opt_env_loop_008f
  6600                                  .L_lambda_opt_env_end_008f:
  6601 00003F0C 5B                      	pop rbx
  6602 00003F0D BE00000000              	mov rsi, 0
  6603                                  .L_lambda_opt_params_loop_01ab:	; copy params
  6604 00003F12 4883FE00                	cmp rsi, 0
  6605 00003F16 740E                    	je .L_lambda_opt_params_end_01ab
  6606 00003F18 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6607 00003F1D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6608 00003F21 48FFC6                  	inc rsi
  6609 00003F24 EBEC                    	jmp .L_lambda_opt_params_loop_01ab
  6610                                  .L_lambda_opt_params_end_01ab:
  6611 00003F26 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6612 00003F29 4889C3                  	mov rbx, rax
  6613 00003F2C 58                      	pop rax
  6614 00003F2D C60005                  	mov byte [rax], T_closure
  6615 00003F30 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6616 00003F34 48C74009[413F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_008f
  6617 00003F3C E9C4040000              	jmp .L_lambda_opt_end_008f
  6618                                  .L_lambda_opt_code_008f:
  6619 00003F41 4C8B542410              mov r10, qword [rsp+8*2]
  6620 00003F46 4983FA01                cmp r10, 1
  6621 00003F4A 740B                    je .L_lambda_opt_arity_check_exact_008f
  6622 00003F4C 4983FA01                cmp r10, 1
  6623 00003F50 7F44                    jg .L_lambda_opt_arity_check_more_008f
  6624 00003F52 E9BDE80000              jmp L_error_incorrect_arity_opt
  6625                                  .L_lambda_opt_arity_check_exact_008f:
  6626 00003F57 4883EC08                sub rsp, 8
  6627 00003F5B BA04000000              mov rdx, 3+1
  6628 00003F60 4889E3                  mov qword rbx, rsp
  6629                                  .L_lambda_opt_params_loop_01ac:
  6630 00003F63 488B4B08                mov qword rcx, [rbx+8]
  6631 00003F67 48890B                  mov qword [rbx], rcx
  6632 00003F6A 48FFCA                  dec rdx
  6633 00003F6D 4883C308                add rbx, 8
  6634 00003F71 4883FA00                cmp rdx, 0
  6635 00003F75 7402                    je .L_lambda_opt_params_end_01ac
  6636 00003F77 EBEA                    jmp .L_lambda_opt_params_loop_01ac
  6637                                  .L_lambda_opt_params_end_01ac:
  6638 00003F79 49FFC2                  inc r10
  6639 00003F7C 4C89542410              mov qword [rsp+8*2], r10
  6640 00003F81 4983C202                add r10, 2
  6641 00003F85 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  6642 00003F8D 4C8B4D00                mov r9, [rbp]
  6643 00003F91 E996000000              jmp .L_lambda_opt_stack_adjusted_008f
  6644                                  .L_lambda_opt_arity_check_more_008f:
  6645 00003F96 4C8B6C2410              mov r13, [rsp+2*8]
  6646 00003F9B 48B8-                   mov rax, sob_nil
  6646 00003F9D [0100000000000000] 
  6647 00003FA5 4C8B542410              mov r10, [rsp+2*8]
  6648 00003FAA 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  6649 00003FAF 4983EA01                sub r10, 1
  6650                                  .L_lambda_opt_stack_shrink_loop_008f:
  6651 00003FB3 4983FA00                cmp r10, 0
  6652 00003FB7 7424                    je .L_lambda_opt_stack_shrink_loop_exit_008f
  6653 00003FB9 4889C1                  mov rcx, rax
  6654 00003FBC 498B10                  mov rdx, [r8]
  6655 00003FBF BF11000000              mov rdi, 17
  6656 00003FC4 E87EE80000              call malloc
  6657 00003FC9 C60021                  mov byte [rax], T_pair
  6658 00003FCC 48894809                mov SOB_PAIR_CDR(rax), rcx
  6659 00003FD0 48895001                mov SOB_PAIR_CAR(rax), rdx
  6660 00003FD4 4983E808                sub r8, 8
  6661 00003FD8 49FFCA                  dec r10
  6662 00003FDB EBD6                    jmp .L_lambda_opt_stack_shrink_loop_008f
  6663                                  .L_lambda_opt_stack_shrink_loop_exit_008f:
  6664 00003FDD 4889442420              mov [rsp+8*(2+2)], rax
  6665 00003FE2 41BA02000000            mov r10, 2
  6666 00003FE8 4C89542410              mov [rsp+16], r10
  6667 00003FED 4989E4                  mov r12, rsp
  6668 00003FF0 4983C420                add r12, 8*(2+2)
  6669 00003FF4 4C2B6C2410              sub r13, [rsp+16]
  6670 00003FF9 4D89EA                  mov r10, r13
  6671 00003FFC 49C1E203                shl r10, 3
  6672 00004000 4D89D7                  mov r15, r10
  6673 00004003 4D01E2                  add r10, r12
  6674 00004006 4C8B4C2410              mov r9, [rsp+16]
  6675 0000400B 4983C103                add r9, 3
  6676                                  .L_lambda_opt_params_loop_01ad:
  6677 0000400F 4983F900                cmp r9, 0
  6678 00004013 7414                    je .L_lambda_opt_params_end_01ad
  6679 00004015 4D8B3424                mov r14, [r12]
  6680 00004019 4D8932                  mov [r10], r14
  6681 0000401C 4983EC08                sub r12, 8
  6682 00004020 4983EA08                sub r10, 8
  6683 00004024 49FFC9                  dec r9
  6684 00004027 EBE6                    jmp .L_lambda_opt_params_loop_01ad
  6685                                  .L_lambda_opt_params_end_01ad:
  6686 00004029 4C01FC                  add rsp, r15
  6687                                  .L_lambda_opt_stack_adjusted_008f:
  6688 0000402C 4C8B4D00                mov r9, [rbp]
  6689 00004030 C8000000                enter 0, 0
  6690 00004034 48B8-                   	mov rax, qword (L_constants + 22)
  6690 00004036 [1600000000000000] 
  6691 0000403E 50                      	push rax
  6692 0000403F 6A01                    	push 1
  6693 00004041 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6694 00004046 E8FCE70000              	call malloc
  6695 0000404B 50                      	push rax
  6696 0000404C BF10000000              	mov rdi, 8 * 2	; new rib
  6697 00004051 E8F1E70000              	call malloc
  6698 00004056 50                      	push rax
  6699 00004057 BF10000000              	mov rdi, 8 * 2	; extended env
  6700 0000405C E8E6E70000              	call malloc
  6701 00004061 488B7D10                	mov rdi, ENV
  6702 00004065 BE00000000              	mov rsi, 0
  6703 0000406A BA01000000              	mov rdx, 1
  6704                                  .L_lambda_simple_env_loop_03d0:	; ext_env[i + 1] <-- env[i]
  6705 0000406F 4883FE01                	cmp rsi, 1
  6706 00004073 7410                    	je .L_lambda_simple_env_end_03d0
  6707 00004075 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6708 00004079 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6709 0000407D 48FFC6                  	inc rsi
  6710 00004080 48FFC2                  	inc rdx
  6711 00004083 EBEA                    	jmp .L_lambda_simple_env_loop_03d0
  6712                                  .L_lambda_simple_env_end_03d0:
  6713 00004085 5B                      	pop rbx
  6714 00004086 BE00000000              	mov rsi, 0
  6715                                  .L_lambda_simple_params_loop_03d0:	; copy params
  6716 0000408B 4883FE02                	cmp rsi, 2
  6717 0000408F 740E                    	je .L_lambda_simple_params_end_03d0
  6718 00004091 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6719 00004096 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6720 0000409A 48FFC6                  	inc rsi
  6721 0000409D EBEC                    	jmp .L_lambda_simple_params_loop_03d0
  6722                                  .L_lambda_simple_params_end_03d0:
  6723 0000409F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6724 000040A2 4889C3                  	mov rbx, rax
  6725 000040A5 58                      	pop rax
  6726 000040A6 C60005                  	mov byte [rax], T_closure
  6727 000040A9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6728 000040AD 48C74009[BA400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d0
  6729 000040B5 E9CD020000              	jmp .L_lambda_simple_end_03d0
  6730                                  .L_lambda_simple_code_03d0:	; lambda-simple body
  6731 000040BA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6732 000040C0 740B                    	je .L_lambda_simple_arity_check_ok_083a
  6733 000040C2 FF742410                	push qword [rsp + 8 * 2]
  6734 000040C6 6A01                    	push 1
  6735 000040C8 E933E70000              	jmp L_error_incorrect_arity_simple
  6736                                  .L_lambda_simple_arity_check_ok_083a:
  6737 000040CD C8000000                	enter 0, 0
  6738 000040D1 488B4520                mov rax, qword [rbp + 32]
  6739 000040D5 BF08000000              mov rdi, 8
  6740 000040DA 4889C3                  mov rbx, rax
  6741 000040DD E865E70000              call malloc
  6742 000040E2 488918                  mov qword [rax], rbx
  6743 000040E5 48894520                mov qword [rbp + 32], rax
  6744 000040E9 48B8-                   mov rax, sob_void
  6744 000040EB [0000000000000000] 
  6745 000040F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6746 000040F8 E84AE70000              	call malloc
  6747 000040FD 50                      	push rax
  6748 000040FE BF08000000              	mov rdi, 8 * 1	; new rib
  6749 00004103 E83FE70000              	call malloc
  6750 00004108 50                      	push rax
  6751 00004109 BF18000000              	mov rdi, 8 * 3	; extended env
  6752 0000410E E834E70000              	call malloc
  6753 00004113 488B7D10                	mov rdi, ENV
  6754 00004117 BE00000000              	mov rsi, 0
  6755 0000411C BA01000000              	mov rdx, 1
  6756                                  .L_lambda_simple_env_loop_03d1:	; ext_env[i + 1] <-- env[i]
  6757 00004121 4883FE02                	cmp rsi, 2
  6758 00004125 7410                    	je .L_lambda_simple_env_end_03d1
  6759 00004127 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6760 0000412B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6761 0000412F 48FFC6                  	inc rsi
  6762 00004132 48FFC2                  	inc rdx
  6763 00004135 EBEA                    	jmp .L_lambda_simple_env_loop_03d1
  6764                                  .L_lambda_simple_env_end_03d1:
  6765 00004137 5B                      	pop rbx
  6766 00004138 BE00000000              	mov rsi, 0
  6767                                  .L_lambda_simple_params_loop_03d1:	; copy params
  6768 0000413D 4883FE01                	cmp rsi, 1
  6769 00004141 740E                    	je .L_lambda_simple_params_end_03d1
  6770 00004143 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6771 00004148 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6772 0000414C 48FFC6                  	inc rsi
  6773 0000414F EBEC                    	jmp .L_lambda_simple_params_loop_03d1
  6774                                  .L_lambda_simple_params_end_03d1:
  6775 00004151 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6776 00004154 4889C3                  	mov rbx, rax
  6777 00004157 58                      	pop rax
  6778 00004158 C60005                  	mov byte [rax], T_closure
  6779 0000415B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6780 0000415F 48C74009[6C410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d1
  6781 00004167 E97B010000              	jmp .L_lambda_simple_end_03d1
  6782                                  .L_lambda_simple_code_03d1:	; lambda-simple body
  6783 0000416C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6784 00004172 740B                    	je .L_lambda_simple_arity_check_ok_083b
  6785 00004174 FF742410                	push qword [rsp + 8 * 2]
  6786 00004178 6A01                    	push 1
  6787 0000417A E981E60000              	jmp L_error_incorrect_arity_simple
  6788                                  .L_lambda_simple_arity_check_ok_083b:
  6789 0000417F C8000000                	enter 0, 0
  6790 00004183 488B4520                mov rax, qword [rbp + 32]
  6791 00004187 50                      	push rax
  6792 00004188 6A01                    	push 1
  6793 0000418A 488B0425[80000000]      	mov rax, qword [free_var_16]
  6794 00004192 803805                  	cmp byte [rax], T_closure 
  6795 00004195 0F8567F60000                    jne L_code_ptr_error
  6796                                  
  6797 0000419B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6798                                  
  6799 0000419F 53                              push rbx
  6800                                  
  6801 000041A0 FF5009                          call SOB_CLOSURE_CODE(rax)
  6802                                  
  6803 000041A3 50                              	push rax
  6804 000041A4 6A01                    	push 1
  6805 000041A6 488B0425[00000000]      	mov rax, qword [free_var_0]
  6806 000041AE 803805                  	cmp byte [rax], T_closure 
  6807 000041B1 0F854BF60000                    jne L_code_ptr_error
  6808                                  
  6809 000041B7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6810                                  
  6811 000041BB 53                              push rbx
  6812                                  
  6813 000041BC FF5009                          call SOB_CLOSURE_CODE(rax)
  6814                                  
  6815 000041BF 483D[02000000]                  	cmp rax, sob_boolean_false
  6816 000041C5 0F8518010000            	jne .L_or_end_004b
  6817 000041CB 488B4520                mov rax, qword [rbp + 32]
  6818 000041CF 50                      	push rax
  6819 000041D0 488B0425[80000000]      	mov rax, qword [free_var_16]
  6820 000041D8 50                      	push rax
  6821 000041D9 6A02                    	push 2
  6822 000041DB 488B0425[D8020000]      	mov rax, qword [free_var_91]
  6823 000041E3 803805                  	cmp byte [rax], T_closure 
  6824 000041E6 0F8516F60000                    jne L_code_ptr_error
  6825                                  
  6826 000041EC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6827                                  
  6828 000041F0 53                              push rbx
  6829                                  
  6830 000041F1 FF5009                          call SOB_CLOSURE_CODE(rax)
  6831                                  
  6832 000041F4 50                              	push rax
  6833 000041F5 488B4510                mov rax, qword [rbp + 16]
  6834 000041F9 488B4008                mov rax, qword [rax + 8]
  6835 000041FD 488B00                  mov rax, qword [rax + 0]
  6836 00004200 50                      	push rax
  6837 00004201 6A02                    	push 2
  6838 00004203 488B0425[C8020000]      	mov rax, qword [free_var_89]
  6839 0000420B 803805                  	cmp byte [rax], T_closure 
  6840 0000420E 0F85EEF50000                    jne L_code_ptr_error
  6841                                  
  6842 00004214 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6843                                  
  6844 00004218 53                              push rbx
  6845                                  
  6846 00004219 FF5009                          call SOB_CLOSURE_CODE(rax)
  6847                                  
  6848 0000421C 483D[02000000]                  	cmp rax, sob_boolean_false
  6849 00004222 0F84B1000000            	je .L_if_else_023c
  6850 00004228 488B4520                mov rax, qword [rbp + 32]
  6851 0000422C 50                      	push rax
  6852 0000422D 488B0425[88000000]      	mov rax, qword [free_var_17]
  6853 00004235 50                      	push rax
  6854 00004236 6A02                    	push 2
  6855 00004238 488B0425[D8020000]      	mov rax, qword [free_var_91]
  6856 00004240 803805                  	cmp byte [rax], T_closure 
  6857 00004243 0F85B9F50000                    jne L_code_ptr_error
  6858                                  
  6859 00004249 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6860                                  
  6861 0000424D 53                              push rbx
  6862                                  
  6863 0000424E FF5009                          call SOB_CLOSURE_CODE(rax)
  6864                                  
  6865 00004251 50                              	push rax
  6866 00004252 6A01                    	push 1
  6867 00004254 488B4510                mov rax, qword [rbp + 16]
  6868 00004258 488B00                  mov rax, qword [rax + 0]
  6869 0000425B 488B00                  mov rax, qword [rax + 0]
  6870 0000425E 488B00                  	mov rax, qword [rax]
  6871                                  .L_lambda_simple_arity_check_ok_083c:
  6872 00004261 803805                  	cmp byte [rax], T_closure
  6873                                  
  6874 00004264 0F8598F50000                    jne L_code_ptr_error                      ; rax <- proc
  6875                                  
  6876                                  
  6877 0000426A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6878                                  
  6879 0000426E 53                              push rbx                                  ; env pushed
  6880                                  
  6881 0000426F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6882                                  
  6883                                          ; sagydebug
  6884                                  
  6885 00004272 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6886                                  
  6887                                          
  6888                                          
  6889 00004275 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6890                                  
  6891 00004279 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6892                                  
  6893                                  
  6894 0000427E 4D89CA                          mov r10, r9
  6895 00004281 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  6896                                          
  6897 00004285 4D89D7                          mov r15, r10
  6898 00004288 4983C7FF                        add r15, -1
  6899                                                                                         
  6900 0000428C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6901 0000428F 4983C404                        add r12, 4
  6902 00004293 4983C4FF                        add r12, -1
  6903                                  
  6904 00004297 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6905                                  .L_tc_recycle_frame_loop_046b:
  6906 0000429D 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  6907                                  
  6908 000042A1 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6909                                  
  6910                                  
  6911                                  
  6912 000042A6 41BE00000000                    mov r14, 0                                ; clean box
  6913                                  
  6914                                  
  6915 000042AC 4983C7FF                        add r15, -1           
  6916 000042B0 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6917                                  
  6918 000042B4 4983C4FF                        add r12, -1 
  6919                                  
  6920 000042B8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6921 000042BC 75DF                    	jne .L_tc_recycle_frame_loop_046b
  6922                                  .L_tc_recycle_frame_done_046b:
  6923                                  ;this pop rbp in sot to the right place
  6924 000042BE 4D89C7                  mov r15, r8
  6925                                  
  6926 000042C1 4983C704                        add r15, 4
  6927                                  
  6928 000042C5 49C1E703                        shl r15, 3
  6929                                  
  6930 000042C9 4C01FC                          add rsp, r15
  6931 000042CC 5D                      	pop rbp                                  ; restore the old rbp
  6932                                  
  6933 000042CD 488B4D00                        mov rcx, qword [rbp]
  6934 000042D1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6935                                            ; rbx <- code(proc)
  6936                                  
  6937 000042D5 FFE3                            jmp rbx
  6938 000042D7 EB0A                    	jmp .L_if_end_023c
  6939                                  	.L_if_else_023c:
  6940 000042D9 48B8-                   		mov rax, qword (L_constants + 2)
  6940 000042DB [0200000000000000] 
  6941                                  	.L_if_end_023c:
  6942                                  .L_or_end_004b:
  6943 000042E3 C9                      	leave
  6944 000042E4 C21800                  	ret 8 * (2 + 1)
  6945                                  .L_lambda_simple_end_03d1:	; new closure is in rax
  6946 000042E7 50                      push rax
  6947 000042E8 488B4520                mov rax, qword [rbp + 32]
  6948 000042EC 8F00                    pop qword [rax]
  6949 000042EE 48B8-                   mov rax, sob_void
  6949 000042F0 [0000000000000000] 
  6950                                  
  6951 000042F8 488B4510                mov rax, qword [rbp + 16]
  6952 000042FC 488B00                  mov rax, qword [rax + 0]
  6953 000042FF 488B4008                mov rax, qword [rax + 8]
  6954 00004303 50                      	push rax
  6955 00004304 6A01                    	push 1
  6956 00004306 488B4520                mov rax, qword [rbp + 32]
  6957 0000430A 488B00                  	mov rax, qword [rax]
  6958                                  .L_lambda_simple_arity_check_ok_083d:
  6959 0000430D 803805                  	cmp byte [rax], T_closure
  6960                                  
  6961 00004310 0F85ECF40000                    jne L_code_ptr_error                      ; rax <- proc
  6962                                  
  6963                                  
  6964 00004316 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6965                                  
  6966 0000431A 53                              push rbx                                  ; env pushed
  6967                                  
  6968 0000431B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6969                                  
  6970                                          ; sagydebug
  6971                                  
  6972 0000431E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6973                                  
  6974                                          
  6975                                          
  6976 00004321 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6977                                  
  6978 00004325 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6979                                  
  6980                                  
  6981 0000432A 4D89CA                          mov r10, r9
  6982 0000432D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  6983                                          
  6984 00004331 4D89D7                          mov r15, r10
  6985 00004334 4983C7FF                        add r15, -1
  6986                                                                                         
  6987 00004338 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6988 0000433B 4983C404                        add r12, 4
  6989 0000433F 4983C4FF                        add r12, -1
  6990                                  
  6991 00004343 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6992                                  .L_tc_recycle_frame_loop_046c:
  6993 00004349 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  6994                                  
  6995 0000434D 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6996                                  
  6997                                  
  6998                                  
  6999 00004352 41BE00000000                    mov r14, 0                                ; clean box
  7000                                  
  7001                                  
  7002 00004358 4983C7FF                        add r15, -1           
  7003 0000435C 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7004                                  
  7005 00004360 4983C4FF                        add r12, -1 
  7006                                  
  7007 00004364 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7008 00004368 75DF                    	jne .L_tc_recycle_frame_loop_046c
  7009                                  .L_tc_recycle_frame_done_046c:
  7010                                  ;this pop rbp in sot to the right place
  7011 0000436A 4D89C7                  mov r15, r8
  7012                                  
  7013 0000436D 4983C704                        add r15, 4
  7014                                  
  7015 00004371 49C1E703                        shl r15, 3
  7016                                  
  7017 00004375 4C01FC                          add rsp, r15
  7018 00004378 5D                      	pop rbp                                  ; restore the old rbp
  7019                                  
  7020 00004379 488B4D00                        mov rcx, qword [rbp]
  7021 0000437D 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7022                                            ; rbx <- code(proc)
  7023                                  
  7024 00004381 FFE3                            jmp rbx
  7025 00004383 C9                      	leave
  7026 00004384 C21800                  	ret 8 * (2 + 1)
  7027                                  .L_lambda_simple_end_03d0:	; new closure is in rax
  7028                                  .L_lambda_simple_arity_check_ok_083e:
  7029 00004387 803805                  	cmp byte [rax], T_closure
  7030                                  
  7031 0000438A 0F8572F40000                    jne L_code_ptr_error                      ; rax <- proc
  7032                                  
  7033                                  
  7034 00004390 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7035                                  
  7036 00004394 53                              push rbx                                  ; env pushed
  7037                                  
  7038 00004395 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7039                                  
  7040                                          ; sagydebug
  7041                                  
  7042 00004398 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7043                                  
  7044                                          
  7045                                          
  7046 0000439B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7047                                  
  7048 0000439F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7049                                  
  7050                                  
  7051 000043A4 4D89CA                          mov r10, r9
  7052 000043A7 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  7053                                          
  7054 000043AB 4D89D7                          mov r15, r10
  7055 000043AE 4983C7FF                        add r15, -1
  7056                                                                                         
  7057 000043B2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7058 000043B5 4983C404                        add r12, 4
  7059 000043B9 4983C4FF                        add r12, -1
  7060                                  
  7061 000043BD 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7062                                  .L_tc_recycle_frame_loop_046d:
  7063 000043C3 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  7064                                  
  7065 000043C7 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7066                                  
  7067                                  
  7068                                  
  7069 000043CC 41BE00000000                    mov r14, 0                                ; clean box
  7070                                  
  7071                                  
  7072 000043D2 4983C7FF                        add r15, -1           
  7073 000043D6 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7074                                  
  7075 000043DA 4983C4FF                        add r12, -1 
  7076                                  
  7077 000043DE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7078 000043E2 75DF                    	jne .L_tc_recycle_frame_loop_046d
  7079                                  .L_tc_recycle_frame_done_046d:
  7080                                  ;this pop rbp in sot to the right place
  7081 000043E4 4D89C7                  mov r15, r8
  7082                                  
  7083 000043E7 4983C704                        add r15, 4
  7084                                  
  7085 000043EB 49C1E703                        shl r15, 3
  7086                                  
  7087 000043EF 4C01FC                          add rsp, r15
  7088 000043F2 5D                      	pop rbp                                  ; restore the old rbp
  7089                                  
  7090 000043F3 488B4D00                        mov rcx, qword [rbp]
  7091 000043F7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7092                                            ; rbx <- code(proc)
  7093                                  
  7094 000043FB FFE3                            jmp rbx
  7095 000043FD C9                      leave
  7096 000043FE 4C8B4D00                mov r9, [rbp]
  7097 00004402 C22000                  ret 8 * (3 + 1)
  7098                                  .L_lambda_opt_end_008f:	; new closure is in rax
  7099 00004405 48890425[E0020000]      	mov qword [free_var_92], rax
  7100 0000440D 48B8-                   	mov rax, sob_void
  7100 0000440F [0000000000000000] 
  7101                                  
  7102 00004417 4889C7                  	mov rdi, rax
  7103 0000441A E839E40000              	call print_sexpr_if_not_void
  7104                                  
  7105 0000441F 48B8-                   	mov rax, qword (L_constants + 22)
  7105 00004421 [1600000000000000] 
  7106 00004429 50                      	push rax
  7107 0000442A 48B8-                   	mov rax, qword (L_constants + 22)
  7107 0000442C [1600000000000000] 
  7108 00004434 50                      	push rax
  7109 00004435 6A02                    	push 2
  7110 00004437 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7111 0000443C E806E40000              	call malloc
  7112 00004441 50                      	push rax
  7113 00004442 BF00000000              	mov rdi, 8 * 0	; new rib
  7114 00004447 E8FBE30000              	call malloc
  7115 0000444C 50                      	push rax
  7116 0000444D BF08000000              	mov rdi, 8 * 1	; extended env
  7117 00004452 E8F0E30000              	call malloc
  7118 00004457 488B7D10                	mov rdi, ENV
  7119 0000445B BE00000000              	mov rsi, 0
  7120 00004460 BA01000000              	mov rdx, 1
  7121                                  .L_lambda_simple_env_loop_03d2:	; ext_env[i + 1] <-- env[i]
  7122 00004465 4883FE00                	cmp rsi, 0
  7123 00004469 7410                    	je .L_lambda_simple_env_end_03d2
  7124 0000446B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7125 0000446F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7126 00004473 48FFC6                  	inc rsi
  7127 00004476 48FFC2                  	inc rdx
  7128 00004479 EBEA                    	jmp .L_lambda_simple_env_loop_03d2
  7129                                  .L_lambda_simple_env_end_03d2:
  7130 0000447B 5B                      	pop rbx
  7131 0000447C BE00000000              	mov rsi, 0
  7132                                  .L_lambda_simple_params_loop_03d2:	; copy params
  7133 00004481 4883FE00                	cmp rsi, 0
  7134 00004485 740E                    	je .L_lambda_simple_params_end_03d2
  7135 00004487 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7136 0000448C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7137 00004490 48FFC6                  	inc rsi
  7138 00004493 EBEC                    	jmp .L_lambda_simple_params_loop_03d2
  7139                                  .L_lambda_simple_params_end_03d2:
  7140 00004495 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7141 00004498 4889C3                  	mov rbx, rax
  7142 0000449B 58                      	pop rax
  7143 0000449C C60005                  	mov byte [rax], T_closure
  7144 0000449F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7145 000044A3 48C74009[B0440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d2
  7146 000044AB E994060000              	jmp .L_lambda_simple_end_03d2
  7147                                  .L_lambda_simple_code_03d2:	; lambda-simple body
  7148 000044B0 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7149 000044B6 740B                    	je .L_lambda_simple_arity_check_ok_083f
  7150 000044B8 FF742410                	push qword [rsp + 8 * 2]
  7151 000044BC 6A02                    	push 2
  7152 000044BE E93DE30000              	jmp L_error_incorrect_arity_simple
  7153                                  .L_lambda_simple_arity_check_ok_083f:
  7154 000044C3 C8000000                	enter 0, 0
  7155 000044C7 488B4520                mov rax, qword [rbp + 32]
  7156 000044CB BF08000000              mov rdi, 8
  7157 000044D0 4889C3                  mov rbx, rax
  7158 000044D3 E86FE30000              call malloc
  7159 000044D8 488918                  mov qword [rax], rbx
  7160 000044DB 48894520                mov qword [rbp + 32], rax
  7161 000044DF 48B8-                   mov rax, sob_void
  7161 000044E1 [0000000000000000] 
  7162 000044E9 488B4528                mov rax, qword [rbp + 40]
  7163 000044ED BF08000000              mov rdi, 8
  7164 000044F2 4889C3                  mov rbx, rax
  7165 000044F5 E84DE30000              call malloc
  7166 000044FA 488918                  mov qword [rax], rbx
  7167 000044FD 48894528                mov qword [rbp + 40], rax
  7168 00004501 48B8-                   mov rax, sob_void
  7168 00004503 [0000000000000000] 
  7169 0000450B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7170 00004510 E832E30000              	call malloc
  7171 00004515 50                      	push rax
  7172 00004516 BF10000000              	mov rdi, 8 * 2	; new rib
  7173 0000451B E827E30000              	call malloc
  7174 00004520 50                      	push rax
  7175 00004521 BF10000000              	mov rdi, 8 * 2	; extended env
  7176 00004526 E81CE30000              	call malloc
  7177 0000452B 488B7D10                	mov rdi, ENV
  7178 0000452F BE00000000              	mov rsi, 0
  7179 00004534 BA01000000              	mov rdx, 1
  7180                                  .L_lambda_simple_env_loop_03d3:	; ext_env[i + 1] <-- env[i]
  7181 00004539 4883FE01                	cmp rsi, 1
  7182 0000453D 7410                    	je .L_lambda_simple_env_end_03d3
  7183 0000453F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7184 00004543 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7185 00004547 48FFC6                  	inc rsi
  7186 0000454A 48FFC2                  	inc rdx
  7187 0000454D EBEA                    	jmp .L_lambda_simple_env_loop_03d3
  7188                                  .L_lambda_simple_env_end_03d3:
  7189 0000454F 5B                      	pop rbx
  7190 00004550 BE00000000              	mov rsi, 0
  7191                                  .L_lambda_simple_params_loop_03d3:	; copy params
  7192 00004555 4883FE02                	cmp rsi, 2
  7193 00004559 740E                    	je .L_lambda_simple_params_end_03d3
  7194 0000455B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7195 00004560 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7196 00004564 48FFC6                  	inc rsi
  7197 00004567 EBEC                    	jmp .L_lambda_simple_params_loop_03d3
  7198                                  .L_lambda_simple_params_end_03d3:
  7199 00004569 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7200 0000456C 4889C3                  	mov rbx, rax
  7201 0000456F 58                      	pop rax
  7202 00004570 C60005                  	mov byte [rax], T_closure
  7203 00004573 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7204 00004577 48C74009[84450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d3
  7205 0000457F E952010000              	jmp .L_lambda_simple_end_03d3
  7206                                  .L_lambda_simple_code_03d3:	; lambda-simple body
  7207 00004584 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7208 0000458A 740B                    	je .L_lambda_simple_arity_check_ok_0840
  7209 0000458C FF742410                	push qword [rsp + 8 * 2]
  7210 00004590 6A02                    	push 2
  7211 00004592 E969E20000              	jmp L_error_incorrect_arity_simple
  7212                                  .L_lambda_simple_arity_check_ok_0840:
  7213 00004597 C8000000                	enter 0, 0
  7214 0000459B 488B4528                mov rax, qword [rbp + 40]
  7215 0000459F 50                      	push rax
  7216 000045A0 6A01                    	push 1
  7217 000045A2 488B0425[00000000]      	mov rax, qword [free_var_0]
  7218 000045AA 803805                  	cmp byte [rax], T_closure 
  7219 000045AD 0F854FF20000                    jne L_code_ptr_error
  7220                                  
  7221 000045B3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7222                                  
  7223 000045B7 53                              push rbx
  7224                                  
  7225 000045B8 FF5009                          call SOB_CLOSURE_CODE(rax)
  7226                                  
  7227 000045BB 483D[02000000]                  	cmp rax, sob_boolean_false
  7228 000045C1 740F                    	je .L_if_else_023d
  7229 000045C3 48B8-                   	mov rax, qword (L_constants + 1)
  7229 000045C5 [0100000000000000] 
  7230 000045CD E900010000              	jmp .L_if_end_023d
  7231                                  	.L_if_else_023d:
  7232 000045D2 488B4528                	mov rax, qword [rbp + 40]
  7233 000045D6 50                      	push rax
  7234 000045D7 6A01                    	push 1
  7235 000045D9 488B0425[88000000]      	mov rax, qword [free_var_17]
  7236 000045E1 803805                  	cmp byte [rax], T_closure 
  7237 000045E4 0F8518F20000                    jne L_code_ptr_error
  7238                                  
  7239 000045EA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7240                                  
  7241 000045EE 53                              push rbx
  7242                                  
  7243 000045EF FF5009                          call SOB_CLOSURE_CODE(rax)
  7244                                  
  7245 000045F2 50                              	push rax
  7246 000045F3 488B4520                mov rax, qword [rbp + 32]
  7247 000045F7 50                      	push rax
  7248 000045F8 6A02                    	push 2
  7249 000045FA 488B4510                mov rax, qword [rbp + 16]
  7250 000045FE 488B00                  mov rax, qword [rax + 0]
  7251 00004601 488B00                  mov rax, qword [rax + 0]
  7252 00004604 488B00                  	mov rax, qword [rax]
  7253 00004607 803805                  	cmp byte [rax], T_closure 
  7254 0000460A 0F85F2F10000                    jne L_code_ptr_error
  7255                                  
  7256 00004610 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7257                                  
  7258 00004614 53                              push rbx
  7259                                  
  7260 00004615 FF5009                          call SOB_CLOSURE_CODE(rax)
  7261                                  
  7262 00004618 50                              	push rax
  7263 00004619 488B4528                mov rax, qword [rbp + 40]
  7264 0000461D 50                      	push rax
  7265 0000461E 6A01                    	push 1
  7266 00004620 488B0425[80000000]      	mov rax, qword [free_var_16]
  7267 00004628 803805                  	cmp byte [rax], T_closure 
  7268 0000462B 0F85D1F10000                    jne L_code_ptr_error
  7269                                  
  7270 00004631 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7271                                  
  7272 00004635 53                              push rbx
  7273                                  
  7274 00004636 FF5009                          call SOB_CLOSURE_CODE(rax)
  7275                                  
  7276 00004639 50                              	push rax
  7277 0000463A 6A01                    	push 1
  7278 0000463C 488B4520                mov rax, qword [rbp + 32]
  7279 00004640 803805                  	cmp byte [rax], T_closure 
  7280 00004643 0F85B9F10000                    jne L_code_ptr_error
  7281                                  
  7282 00004649 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7283                                  
  7284 0000464D 53                              push rbx
  7285                                  
  7286 0000464E FF5009                          call SOB_CLOSURE_CODE(rax)
  7287                                  
  7288 00004651 50                              	push rax
  7289 00004652 6A02                    	push 2
  7290 00004654 488B0425[68000000]      	mov rax, qword [free_var_13]
  7291                                  .L_lambda_simple_arity_check_ok_0841:
  7292 0000465C 803805                  	cmp byte [rax], T_closure
  7293                                  
  7294 0000465F 0F859DF10000                    jne L_code_ptr_error                      ; rax <- proc
  7295                                  
  7296                                  
  7297 00004665 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7298                                  
  7299 00004669 53                              push rbx                                  ; env pushed
  7300                                  
  7301 0000466A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7302                                  
  7303                                          ; sagydebug
  7304                                  
  7305 0000466D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7306                                  
  7307                                          
  7308                                          
  7309 00004670 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7310                                  
  7311 00004674 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7312                                  
  7313                                  
  7314 00004679 4D89CA                          mov r10, r9
  7315 0000467C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  7316                                          
  7317 00004680 4D89D7                          mov r15, r10
  7318 00004683 4983C7FF                        add r15, -1
  7319                                                                                         
  7320 00004687 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7321 0000468A 4983C404                        add r12, 4
  7322 0000468E 4983C4FF                        add r12, -1
  7323                                  
  7324 00004692 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7325                                  .L_tc_recycle_frame_loop_046e:
  7326 00004698 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  7327                                  
  7328 0000469C 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7329                                  
  7330                                  
  7331                                  
  7332 000046A1 41BE00000000                    mov r14, 0                                ; clean box
  7333                                  
  7334                                  
  7335 000046A7 4983C7FF                        add r15, -1           
  7336 000046AB 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7337                                  
  7338 000046AF 4983C4FF                        add r12, -1 
  7339                                  
  7340 000046B3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7341 000046B7 75DF                    	jne .L_tc_recycle_frame_loop_046e
  7342                                  .L_tc_recycle_frame_done_046e:
  7343                                  ;this pop rbp in sot to the right place
  7344 000046B9 4D89C7                  mov r15, r8
  7345                                  
  7346 000046BC 4983C704                        add r15, 4
  7347                                  
  7348 000046C0 49C1E703                        shl r15, 3
  7349                                  
  7350 000046C4 4C01FC                          add rsp, r15
  7351 000046C7 5D                      	pop rbp                                  ; restore the old rbp
  7352                                  
  7353 000046C8 488B4D00                        mov rcx, qword [rbp]
  7354 000046CC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7355                                            ; rbx <- code(proc)
  7356                                  
  7357 000046D0 FFE3                            jmp rbx
  7358                                  	.L_if_end_023d:
  7359 000046D2 C9                      	leave
  7360 000046D3 C22000                  	ret 8 * (2 + 2)
  7361                                  .L_lambda_simple_end_03d3:	; new closure is in rax
  7362 000046D6 50                      push rax
  7363 000046D7 488B4520                mov rax, qword [rbp + 32]
  7364 000046DB 8F00                    pop qword [rax]
  7365 000046DD 48B8-                   mov rax, sob_void
  7365 000046DF [0000000000000000] 
  7366                                  
  7367 000046E7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7368 000046EC E856E10000              	call malloc
  7369 000046F1 50                      	push rax
  7370 000046F2 BF10000000              	mov rdi, 8 * 2	; new rib
  7371 000046F7 E84BE10000              	call malloc
  7372 000046FC 50                      	push rax
  7373 000046FD BF10000000              	mov rdi, 8 * 2	; extended env
  7374 00004702 E840E10000              	call malloc
  7375 00004707 488B7D10                	mov rdi, ENV
  7376 0000470B BE00000000              	mov rsi, 0
  7377 00004710 BA01000000              	mov rdx, 1
  7378                                  .L_lambda_simple_env_loop_03d4:	; ext_env[i + 1] <-- env[i]
  7379 00004715 4883FE01                	cmp rsi, 1
  7380 00004719 7410                    	je .L_lambda_simple_env_end_03d4
  7381 0000471B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7382 0000471F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7383 00004723 48FFC6                  	inc rsi
  7384 00004726 48FFC2                  	inc rdx
  7385 00004729 EBEA                    	jmp .L_lambda_simple_env_loop_03d4
  7386                                  .L_lambda_simple_env_end_03d4:
  7387 0000472B 5B                      	pop rbx
  7388 0000472C BE00000000              	mov rsi, 0
  7389                                  .L_lambda_simple_params_loop_03d4:	; copy params
  7390 00004731 4883FE02                	cmp rsi, 2
  7391 00004735 740E                    	je .L_lambda_simple_params_end_03d4
  7392 00004737 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7393 0000473C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7394 00004740 48FFC6                  	inc rsi
  7395 00004743 EBEC                    	jmp .L_lambda_simple_params_loop_03d4
  7396                                  .L_lambda_simple_params_end_03d4:
  7397 00004745 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7398 00004748 4889C3                  	mov rbx, rax
  7399 0000474B 58                      	pop rax
  7400 0000474C C60005                  	mov byte [rax], T_closure
  7401 0000474F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7402 00004753 48C74009[60470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d4
  7403 0000475B E994010000              	jmp .L_lambda_simple_end_03d4
  7404                                  .L_lambda_simple_code_03d4:	; lambda-simple body
  7405 00004760 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7406 00004766 740B                    	je .L_lambda_simple_arity_check_ok_0842
  7407 00004768 FF742410                	push qword [rsp + 8 * 2]
  7408 0000476C 6A02                    	push 2
  7409 0000476E E98DE00000              	jmp L_error_incorrect_arity_simple
  7410                                  .L_lambda_simple_arity_check_ok_0842:
  7411 00004773 C8000000                	enter 0, 0
  7412 00004777 488B4528                mov rax, qword [rbp + 40]
  7413 0000477B 50                      	push rax
  7414 0000477C 6A01                    	push 1
  7415 0000477E 488B0425[80000000]      	mov rax, qword [free_var_16]
  7416 00004786 803805                  	cmp byte [rax], T_closure 
  7417 00004789 0F8573F00000                    jne L_code_ptr_error
  7418                                  
  7419 0000478F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7420                                  
  7421 00004793 53                              push rbx
  7422                                  
  7423 00004794 FF5009                          call SOB_CLOSURE_CODE(rax)
  7424                                  
  7425 00004797 50                              	push rax
  7426 00004798 6A01                    	push 1
  7427 0000479A 488B0425[00000000]      	mov rax, qword [free_var_0]
  7428 000047A2 803805                  	cmp byte [rax], T_closure 
  7429 000047A5 0F8557F00000                    jne L_code_ptr_error
  7430                                  
  7431 000047AB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7432                                  
  7433 000047AF 53                              push rbx
  7434                                  
  7435 000047B0 FF5009                          call SOB_CLOSURE_CODE(rax)
  7436                                  
  7437 000047B3 483D[02000000]                  	cmp rax, sob_boolean_false
  7438 000047B9 740F                    	je .L_if_else_023e
  7439 000047BB 48B8-                   	mov rax, qword (L_constants + 1)
  7439 000047BD [0100000000000000] 
  7440 000047C5 E926010000              	jmp .L_if_end_023e
  7441                                  	.L_if_else_023e:
  7442 000047CA 488B4528                	mov rax, qword [rbp + 40]
  7443 000047CE 50                      	push rax
  7444 000047CF 488B0425[88000000]      	mov rax, qword [free_var_17]
  7445 000047D7 50                      	push rax
  7446 000047D8 6A02                    	push 2
  7447 000047DA 488B4510                mov rax, qword [rbp + 16]
  7448 000047DE 488B00                  mov rax, qword [rax + 0]
  7449 000047E1 488B00                  mov rax, qword [rax + 0]
  7450 000047E4 488B00                  	mov rax, qword [rax]
  7451 000047E7 803805                  	cmp byte [rax], T_closure 
  7452 000047EA 0F8512F00000                    jne L_code_ptr_error
  7453                                  
  7454 000047F0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7455                                  
  7456 000047F4 53                              push rbx
  7457                                  
  7458 000047F5 FF5009                          call SOB_CLOSURE_CODE(rax)
  7459                                  
  7460 000047F8 50                              	push rax
  7461 000047F9 488B4520                mov rax, qword [rbp + 32]
  7462 000047FD 50                      	push rax
  7463 000047FE 6A02                    	push 2
  7464 00004800 488B4510                mov rax, qword [rbp + 16]
  7465 00004804 488B00                  mov rax, qword [rax + 0]
  7466 00004807 488B4008                mov rax, qword [rax + 8]
  7467 0000480B 488B00                  	mov rax, qword [rax]
  7468 0000480E 803805                  	cmp byte [rax], T_closure 
  7469 00004811 0F85EBEF0000                    jne L_code_ptr_error
  7470                                  
  7471 00004817 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7472                                  
  7473 0000481B 53                              push rbx
  7474                                  
  7475 0000481C FF5009                          call SOB_CLOSURE_CODE(rax)
  7476                                  
  7477 0000481F 50                              	push rax
  7478 00004820 488B4528                mov rax, qword [rbp + 40]
  7479 00004824 50                      	push rax
  7480 00004825 488B0425[80000000]      	mov rax, qword [free_var_16]
  7481 0000482D 50                      	push rax
  7482 0000482E 6A02                    	push 2
  7483 00004830 488B4510                mov rax, qword [rbp + 16]
  7484 00004834 488B00                  mov rax, qword [rax + 0]
  7485 00004837 488B00                  mov rax, qword [rax + 0]
  7486 0000483A 488B00                  	mov rax, qword [rax]
  7487 0000483D 803805                  	cmp byte [rax], T_closure 
  7488 00004840 0F85BCEF0000                    jne L_code_ptr_error
  7489                                  
  7490 00004846 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7491                                  
  7492 0000484A 53                              push rbx
  7493                                  
  7494 0000484B FF5009                          call SOB_CLOSURE_CODE(rax)
  7495                                  
  7496 0000484E 50                              	push rax
  7497 0000484F 488B4520                mov rax, qword [rbp + 32]
  7498 00004853 50                      	push rax
  7499 00004854 6A02                    	push 2
  7500 00004856 488B0425[C8020000]      	mov rax, qword [free_var_89]
  7501 0000485E 803805                  	cmp byte [rax], T_closure 
  7502 00004861 0F859BEF0000                    jne L_code_ptr_error
  7503                                  
  7504 00004867 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7505                                  
  7506 0000486B 53                              push rbx
  7507                                  
  7508 0000486C FF5009                          call SOB_CLOSURE_CODE(rax)
  7509                                  
  7510 0000486F 50                              	push rax
  7511 00004870 6A02                    	push 2
  7512 00004872 488B0425[68000000]      	mov rax, qword [free_var_13]
  7513                                  .L_lambda_simple_arity_check_ok_0843:
  7514 0000487A 803805                  	cmp byte [rax], T_closure
  7515                                  
  7516 0000487D 0F857FEF0000                    jne L_code_ptr_error                      ; rax <- proc
  7517                                  
  7518                                  
  7519 00004883 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7520                                  
  7521 00004887 53                              push rbx                                  ; env pushed
  7522                                  
  7523 00004888 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7524                                  
  7525                                          ; sagydebug
  7526                                  
  7527 0000488B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7528                                  
  7529                                          
  7530                                          
  7531 0000488E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7532                                  
  7533 00004892 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7534                                  
  7535                                  
  7536 00004897 4D89CA                          mov r10, r9
  7537 0000489A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  7538                                          
  7539 0000489E 4D89D7                          mov r15, r10
  7540 000048A1 4983C7FF                        add r15, -1
  7541                                                                                         
  7542 000048A5 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7543 000048A8 4983C404                        add r12, 4
  7544 000048AC 4983C4FF                        add r12, -1
  7545                                  
  7546 000048B0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7547                                  .L_tc_recycle_frame_loop_046f:
  7548 000048B6 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  7549                                  
  7550 000048BA 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7551                                  
  7552                                  
  7553                                  
  7554 000048BF 41BE00000000                    mov r14, 0                                ; clean box
  7555                                  
  7556                                  
  7557 000048C5 4983C7FF                        add r15, -1           
  7558 000048C9 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7559                                  
  7560 000048CD 4983C4FF                        add r12, -1 
  7561                                  
  7562 000048D1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7563 000048D5 75DF                    	jne .L_tc_recycle_frame_loop_046f
  7564                                  .L_tc_recycle_frame_done_046f:
  7565                                  ;this pop rbp in sot to the right place
  7566 000048D7 4D89C7                  mov r15, r8
  7567                                  
  7568 000048DA 4983C704                        add r15, 4
  7569                                  
  7570 000048DE 49C1E703                        shl r15, 3
  7571                                  
  7572 000048E2 4C01FC                          add rsp, r15
  7573 000048E5 5D                      	pop rbp                                  ; restore the old rbp
  7574                                  
  7575 000048E6 488B4D00                        mov rcx, qword [rbp]
  7576 000048EA 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7577                                            ; rbx <- code(proc)
  7578                                  
  7579 000048EE FFE3                            jmp rbx
  7580                                  	.L_if_end_023e:
  7581 000048F0 C9                      	leave
  7582 000048F1 C22000                  	ret 8 * (2 + 2)
  7583                                  .L_lambda_simple_end_03d4:	; new closure is in rax
  7584 000048F4 50                      push rax
  7585 000048F5 488B4528                mov rax, qword [rbp + 40]
  7586 000048F9 8F00                    pop qword [rax]
  7587 000048FB 48B8-                   mov rax, sob_void
  7587 000048FD [0000000000000000] 
  7588                                  
  7589 00004905 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7590 0000490A E838DF0000              	call malloc
  7591 0000490F 50                      	push rax
  7592 00004910 BF10000000              	mov rdi, 8 * 2	; new rib
  7593 00004915 E82DDF0000              	call malloc
  7594 0000491A 50                      	push rax
  7595 0000491B BF10000000              	mov rdi, 8 * 2	; extended env
  7596 00004920 E822DF0000              	call malloc
  7597 00004925 488B7D10                	mov rdi, ENV
  7598 00004929 BE00000000              	mov rsi, 0
  7599 0000492E BA01000000              	mov rdx, 1
  7600                                  .L_lambda_opt_env_loop_0090:	; ext_env[i + 1] <-- env[i]
  7601 00004933 4883FE01                	cmp rsi, 1
  7602 00004937 7410                    	je .L_lambda_opt_env_end_0090
  7603 00004939 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7604 0000493D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7605 00004941 48FFC6                  	inc rsi
  7606 00004944 48FFC2                  	inc rdx
  7607 00004947 EBEA                    	jmp .L_lambda_opt_env_loop_0090
  7608                                  .L_lambda_opt_env_end_0090:
  7609 00004949 5B                      	pop rbx
  7610 0000494A BE00000000              	mov rsi, 0
  7611                                  .L_lambda_opt_params_loop_01ae:	; copy params
  7612 0000494F 4883FE02                	cmp rsi, 2
  7613 00004953 740E                    	je .L_lambda_opt_params_end_01ae
  7614 00004955 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7615 0000495A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7616 0000495E 48FFC6                  	inc rsi
  7617 00004961 EBEC                    	jmp .L_lambda_opt_params_loop_01ae
  7618                                  .L_lambda_opt_params_end_01ae:
  7619 00004963 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7620 00004966 4889C3                  	mov rbx, rax
  7621 00004969 58                      	pop rax
  7622 0000496A C60005                  	mov byte [rax], T_closure
  7623 0000496D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7624 00004971 48C74009[7E490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0090
  7625 00004979 E9C2010000              	jmp .L_lambda_opt_end_0090
  7626                                  .L_lambda_opt_code_0090:
  7627 0000497E 4C8B542410              mov r10, qword [rsp+8*2]
  7628 00004983 4983FA01                cmp r10, 1
  7629 00004987 740B                    je .L_lambda_opt_arity_check_exact_0090
  7630 00004989 4983FA01                cmp r10, 1
  7631 0000498D 7F44                    jg .L_lambda_opt_arity_check_more_0090
  7632 0000498F E980DE0000              jmp L_error_incorrect_arity_opt
  7633                                  .L_lambda_opt_arity_check_exact_0090:
  7634 00004994 4883EC08                sub rsp, 8
  7635 00004998 BA04000000              mov rdx, 3+1
  7636 0000499D 4889E3                  mov qword rbx, rsp
  7637                                  .L_lambda_opt_params_loop_01af:
  7638 000049A0 488B4B08                mov qword rcx, [rbx+8]
  7639 000049A4 48890B                  mov qword [rbx], rcx
  7640 000049A7 48FFCA                  dec rdx
  7641 000049AA 4883C308                add rbx, 8
  7642 000049AE 4883FA00                cmp rdx, 0
  7643 000049B2 7402                    je .L_lambda_opt_params_end_01af
  7644 000049B4 EBEA                    jmp .L_lambda_opt_params_loop_01af
  7645                                  .L_lambda_opt_params_end_01af:
  7646 000049B6 49FFC2                  inc r10
  7647 000049B9 4C89542410              mov qword [rsp+8*2], r10
  7648 000049BE 4983C202                add r10, 2
  7649 000049C2 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  7650 000049CA 4C8B4D00                mov r9, [rbp]
  7651 000049CE E996000000              jmp .L_lambda_opt_stack_adjusted_0090
  7652                                  .L_lambda_opt_arity_check_more_0090:
  7653 000049D3 4C8B6C2410              mov r13, [rsp+2*8]
  7654 000049D8 48B8-                   mov rax, sob_nil
  7654 000049DA [0100000000000000] 
  7655 000049E2 4C8B542410              mov r10, [rsp+2*8]
  7656 000049E7 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  7657 000049EC 4983EA01                sub r10, 1
  7658                                  .L_lambda_opt_stack_shrink_loop_0090:
  7659 000049F0 4983FA00                cmp r10, 0
  7660 000049F4 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0090
  7661 000049F6 4889C1                  mov rcx, rax
  7662 000049F9 498B10                  mov rdx, [r8]
  7663 000049FC BF11000000              mov rdi, 17
  7664 00004A01 E841DE0000              call malloc
  7665 00004A06 C60021                  mov byte [rax], T_pair
  7666 00004A09 48894809                mov SOB_PAIR_CDR(rax), rcx
  7667 00004A0D 48895001                mov SOB_PAIR_CAR(rax), rdx
  7668 00004A11 4983E808                sub r8, 8
  7669 00004A15 49FFCA                  dec r10
  7670 00004A18 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0090
  7671                                  .L_lambda_opt_stack_shrink_loop_exit_0090:
  7672 00004A1A 4889442420              mov [rsp+8*(2+2)], rax
  7673 00004A1F 41BA02000000            mov r10, 2
  7674 00004A25 4C89542410              mov [rsp+16], r10
  7675 00004A2A 4989E4                  mov r12, rsp
  7676 00004A2D 4983C420                add r12, 8*(2+2)
  7677 00004A31 4C2B6C2410              sub r13, [rsp+16]
  7678 00004A36 4D89EA                  mov r10, r13
  7679 00004A39 49C1E203                shl r10, 3
  7680 00004A3D 4D89D7                  mov r15, r10
  7681 00004A40 4D01E2                  add r10, r12
  7682 00004A43 4C8B4C2410              mov r9, [rsp+16]
  7683 00004A48 4983C103                add r9, 3
  7684                                  .L_lambda_opt_params_loop_01b0:
  7685 00004A4C 4983F900                cmp r9, 0
  7686 00004A50 7414                    je .L_lambda_opt_params_end_01b0
  7687 00004A52 4D8B3424                mov r14, [r12]
  7688 00004A56 4D8932                  mov [r10], r14
  7689 00004A59 4983EC08                sub r12, 8
  7690 00004A5D 4983EA08                sub r10, 8
  7691 00004A61 49FFC9                  dec r9
  7692 00004A64 EBE6                    jmp .L_lambda_opt_params_loop_01b0
  7693                                  .L_lambda_opt_params_end_01b0:
  7694 00004A66 4C01FC                  add rsp, r15
  7695                                  .L_lambda_opt_stack_adjusted_0090:
  7696 00004A69 4C8B4D00                mov r9, [rbp]
  7697 00004A6D C8000000                enter 0, 0
  7698 00004A71 488B4528                mov rax, qword [rbp + 40]
  7699 00004A75 50                      	push rax
  7700 00004A76 6A01                    	push 1
  7701 00004A78 488B0425[00000000]      	mov rax, qword [free_var_0]
  7702 00004A80 803805                  	cmp byte [rax], T_closure 
  7703 00004A83 0F8579ED0000                    jne L_code_ptr_error
  7704                                  
  7705 00004A89 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7706                                  
  7707 00004A8D 53                              push rbx
  7708                                  
  7709 00004A8E FF5009                          call SOB_CLOSURE_CODE(rax)
  7710                                  
  7711 00004A91 483D[02000000]                  	cmp rax, sob_boolean_false
  7712 00004A97 740F                    	je .L_if_else_023f
  7713 00004A99 48B8-                   	mov rax, qword (L_constants + 1)
  7713 00004A9B [0100000000000000] 
  7714 00004AA3 E990000000              	jmp .L_if_end_023f
  7715                                  	.L_if_else_023f:
  7716 00004AA8 488B4528                	mov rax, qword [rbp + 40]
  7717 00004AAC 50                      	push rax
  7718 00004AAD 488B4520                mov rax, qword [rbp + 32]
  7719 00004AB1 50                      	push rax
  7720 00004AB2 6A02                    	push 2
  7721 00004AB4 488B4510                mov rax, qword [rbp + 16]
  7722 00004AB8 488B00                  mov rax, qword [rax + 0]
  7723 00004ABB 488B4008                mov rax, qword [rax + 8]
  7724 00004ABF 488B00                  	mov rax, qword [rax]
  7725                                  .L_lambda_simple_arity_check_ok_0844:
  7726 00004AC2 803805                  	cmp byte [rax], T_closure
  7727                                  
  7728 00004AC5 0F8537ED0000                    jne L_code_ptr_error                      ; rax <- proc
  7729                                  
  7730                                  
  7731 00004ACB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7732                                  
  7733 00004ACF 53                              push rbx                                  ; env pushed
  7734                                  
  7735 00004AD0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7736                                  
  7737                                          ; sagydebug
  7738                                  
  7739 00004AD3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7740                                  
  7741                                          
  7742                                          
  7743 00004AD6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7744                                  
  7745 00004ADA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7746                                  
  7747                                  
  7748 00004ADF 4D89CA                          mov r10, r9
  7749 00004AE2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  7750                                          
  7751 00004AE6 4D89D7                          mov r15, r10
  7752 00004AE9 4983C7FF                        add r15, -1
  7753                                                                                         
  7754 00004AED 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7755 00004AF0 4983C404                        add r12, 4
  7756 00004AF4 4983C4FF                        add r12, -1
  7757                                  
  7758 00004AF8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7759                                  .L_tc_recycle_frame_loop_0470:
  7760 00004AFE 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  7761                                  
  7762 00004B02 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7763                                  
  7764                                  
  7765                                  
  7766 00004B07 41BE00000000                    mov r14, 0                                ; clean box
  7767                                  
  7768                                  
  7769 00004B0D 4983C7FF                        add r15, -1           
  7770 00004B11 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7771                                  
  7772 00004B15 4983C4FF                        add r12, -1 
  7773                                  
  7774 00004B19 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7775 00004B1D 75DF                    	jne .L_tc_recycle_frame_loop_0470
  7776                                  .L_tc_recycle_frame_done_0470:
  7777                                  ;this pop rbp in sot to the right place
  7778 00004B1F 4D89C7                  mov r15, r8
  7779                                  
  7780 00004B22 4983C704                        add r15, 4
  7781                                  
  7782 00004B26 49C1E703                        shl r15, 3
  7783                                  
  7784 00004B2A 4C01FC                          add rsp, r15
  7785 00004B2D 5D                      	pop rbp                                  ; restore the old rbp
  7786                                  
  7787 00004B2E 488B4D00                        mov rcx, qword [rbp]
  7788 00004B32 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7789                                            ; rbx <- code(proc)
  7790                                  
  7791 00004B36 FFE3                            jmp rbx
  7792                                  	.L_if_end_023f:
  7793 00004B38 C9                      leave
  7794 00004B39 4C8B4D00                mov r9, [rbp]
  7795 00004B3D C22000                  ret 8 * (3 + 1)
  7796                                  .L_lambda_opt_end_0090:	; new closure is in rax
  7797 00004B40 C9                      	leave
  7798 00004B41 C22000                  	ret 8 * (2 + 2)
  7799                                  .L_lambda_simple_end_03d2:	; new closure is in rax
  7800 00004B44 803805                  	cmp byte [rax], T_closure 
  7801 00004B47 0F85B5EC0000                    jne L_code_ptr_error
  7802                                  
  7803 00004B4D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7804                                  
  7805 00004B51 53                              push rbx
  7806                                  
  7807 00004B52 FF5009                          call SOB_CLOSURE_CODE(rax)
  7808                                  
  7809 00004B55 48890425[D8020000]              	mov qword [free_var_91], rax
  7810 00004B5D 48B8-                   	mov rax, sob_void
  7810 00004B5F [0000000000000000] 
  7811                                  
  7812 00004B67 4889C7                  	mov rdi, rax
  7813 00004B6A E8E9DC0000              	call print_sexpr_if_not_void
  7814                                  
  7815 00004B6F 48B8-                   	mov rax, qword (L_constants + 22)
  7815 00004B71 [1600000000000000] 
  7816 00004B79 50                      	push rax
  7817 00004B7A 6A01                    	push 1
  7818 00004B7C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7819 00004B81 E8C1DC0000              	call malloc
  7820 00004B86 50                      	push rax
  7821 00004B87 BF00000000              	mov rdi, 8 * 0	; new rib
  7822 00004B8C E8B6DC0000              	call malloc
  7823 00004B91 50                      	push rax
  7824 00004B92 BF08000000              	mov rdi, 8 * 1	; extended env
  7825 00004B97 E8ABDC0000              	call malloc
  7826 00004B9C 488B7D10                	mov rdi, ENV
  7827 00004BA0 BE00000000              	mov rsi, 0
  7828 00004BA5 BA01000000              	mov rdx, 1
  7829                                  .L_lambda_simple_env_loop_03d5:	; ext_env[i + 1] <-- env[i]
  7830 00004BAA 4883FE00                	cmp rsi, 0
  7831 00004BAE 7410                    	je .L_lambda_simple_env_end_03d5
  7832 00004BB0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7833 00004BB4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7834 00004BB8 48FFC6                  	inc rsi
  7835 00004BBB 48FFC2                  	inc rdx
  7836 00004BBE EBEA                    	jmp .L_lambda_simple_env_loop_03d5
  7837                                  .L_lambda_simple_env_end_03d5:
  7838 00004BC0 5B                      	pop rbx
  7839 00004BC1 BE00000000              	mov rsi, 0
  7840                                  .L_lambda_simple_params_loop_03d5:	; copy params
  7841 00004BC6 4883FE00                	cmp rsi, 0
  7842 00004BCA 740E                    	je .L_lambda_simple_params_end_03d5
  7843 00004BCC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7844 00004BD1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7845 00004BD5 48FFC6                  	inc rsi
  7846 00004BD8 EBEC                    	jmp .L_lambda_simple_params_loop_03d5
  7847                                  .L_lambda_simple_params_end_03d5:
  7848 00004BDA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7849 00004BDD 4889C3                  	mov rbx, rax
  7850 00004BE0 58                      	pop rax
  7851 00004BE1 C60005                  	mov byte [rax], T_closure
  7852 00004BE4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7853 00004BE8 48C74009[F54B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d5
  7854 00004BF0 E924030000              	jmp .L_lambda_simple_end_03d5
  7855                                  .L_lambda_simple_code_03d5:	; lambda-simple body
  7856 00004BF5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7857 00004BFB 740B                    	je .L_lambda_simple_arity_check_ok_0845
  7858 00004BFD FF742410                	push qword [rsp + 8 * 2]
  7859 00004C01 6A01                    	push 1
  7860 00004C03 E9F8DB0000              	jmp L_error_incorrect_arity_simple
  7861                                  .L_lambda_simple_arity_check_ok_0845:
  7862 00004C08 C8000000                	enter 0, 0
  7863 00004C0C 488B4520                mov rax, qword [rbp + 32]
  7864 00004C10 BF08000000              mov rdi, 8
  7865 00004C15 4889C3                  mov rbx, rax
  7866 00004C18 E82ADC0000              call malloc
  7867 00004C1D 488918                  mov qword [rax], rbx
  7868 00004C20 48894520                mov qword [rbp + 32], rax
  7869 00004C24 48B8-                   mov rax, sob_void
  7869 00004C26 [0000000000000000] 
  7870 00004C2E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7871 00004C33 E80FDC0000              	call malloc
  7872 00004C38 50                      	push rax
  7873 00004C39 BF08000000              	mov rdi, 8 * 1	; new rib
  7874 00004C3E E804DC0000              	call malloc
  7875 00004C43 50                      	push rax
  7876 00004C44 BF10000000              	mov rdi, 8 * 2	; extended env
  7877 00004C49 E8F9DB0000              	call malloc
  7878 00004C4E 488B7D10                	mov rdi, ENV
  7879 00004C52 BE00000000              	mov rsi, 0
  7880 00004C57 BA01000000              	mov rdx, 1
  7881                                  .L_lambda_simple_env_loop_03d6:	; ext_env[i + 1] <-- env[i]
  7882 00004C5C 4883FE01                	cmp rsi, 1
  7883 00004C60 7410                    	je .L_lambda_simple_env_end_03d6
  7884 00004C62 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7885 00004C66 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7886 00004C6A 48FFC6                  	inc rsi
  7887 00004C6D 48FFC2                  	inc rdx
  7888 00004C70 EBEA                    	jmp .L_lambda_simple_env_loop_03d6
  7889                                  .L_lambda_simple_env_end_03d6:
  7890 00004C72 5B                      	pop rbx
  7891 00004C73 BE00000000              	mov rsi, 0
  7892                                  .L_lambda_simple_params_loop_03d6:	; copy params
  7893 00004C78 4883FE01                	cmp rsi, 1
  7894 00004C7C 740E                    	je .L_lambda_simple_params_end_03d6
  7895 00004C7E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7896 00004C83 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7897 00004C87 48FFC6                  	inc rsi
  7898 00004C8A EBEC                    	jmp .L_lambda_simple_params_loop_03d6
  7899                                  .L_lambda_simple_params_end_03d6:
  7900 00004C8C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7901 00004C8F 4889C3                  	mov rbx, rax
  7902 00004C92 58                      	pop rax
  7903 00004C93 C60005                  	mov byte [rax], T_closure
  7904 00004C96 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7905 00004C9A 48C74009[A74C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d6
  7906 00004CA2 E934010000              	jmp .L_lambda_simple_end_03d6
  7907                                  .L_lambda_simple_code_03d6:	; lambda-simple body
  7908 00004CA7 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7909 00004CAD 740B                    	je .L_lambda_simple_arity_check_ok_0846
  7910 00004CAF FF742410                	push qword [rsp + 8 * 2]
  7911 00004CB3 6A02                    	push 2
  7912 00004CB5 E946DB0000              	jmp L_error_incorrect_arity_simple
  7913                                  .L_lambda_simple_arity_check_ok_0846:
  7914 00004CBA C8000000                	enter 0, 0
  7915 00004CBE 488B4520                mov rax, qword [rbp + 32]
  7916 00004CC2 50                      	push rax
  7917 00004CC3 6A01                    	push 1
  7918 00004CC5 488B0425[00000000]      	mov rax, qword [free_var_0]
  7919 00004CCD 803805                  	cmp byte [rax], T_closure 
  7920 00004CD0 0F852CEB0000                    jne L_code_ptr_error
  7921                                  
  7922 00004CD6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7923                                  
  7924 00004CDA 53                              push rbx
  7925                                  
  7926 00004CDB FF5009                          call SOB_CLOSURE_CODE(rax)
  7927                                  
  7928 00004CDE 483D[02000000]                  	cmp rax, sob_boolean_false
  7929 00004CE4 7409                    	je .L_if_else_0240
  7930 00004CE6 488B4528                mov rax, qword [rbp + 40]
  7931 00004CEA E9E8000000              	jmp .L_if_end_0240
  7932                                  	.L_if_else_0240:
  7933 00004CEF 488B4528                	mov rax, qword [rbp + 40]
  7934 00004CF3 50                      	push rax
  7935 00004CF4 488B4520                mov rax, qword [rbp + 32]
  7936 00004CF8 50                      	push rax
  7937 00004CF9 6A01                    	push 1
  7938 00004CFB 488B0425[80000000]      	mov rax, qword [free_var_16]
  7939 00004D03 803805                  	cmp byte [rax], T_closure 
  7940 00004D06 0F85F6EA0000                    jne L_code_ptr_error
  7941                                  
  7942 00004D0C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7943                                  
  7944 00004D10 53                              push rbx
  7945                                  
  7946 00004D11 FF5009                          call SOB_CLOSURE_CODE(rax)
  7947                                  
  7948 00004D14 50                              	push rax
  7949 00004D15 6A02                    	push 2
  7950 00004D17 488B0425[68000000]      	mov rax, qword [free_var_13]
  7951 00004D1F 803805                  	cmp byte [rax], T_closure 
  7952 00004D22 0F85DAEA0000                    jne L_code_ptr_error
  7953                                  
  7954 00004D28 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7955                                  
  7956 00004D2C 53                              push rbx
  7957                                  
  7958 00004D2D FF5009                          call SOB_CLOSURE_CODE(rax)
  7959                                  
  7960 00004D30 50                              	push rax
  7961 00004D31 488B4520                mov rax, qword [rbp + 32]
  7962 00004D35 50                      	push rax
  7963 00004D36 6A01                    	push 1
  7964 00004D38 488B0425[88000000]      	mov rax, qword [free_var_17]
  7965 00004D40 803805                  	cmp byte [rax], T_closure 
  7966 00004D43 0F85B9EA0000                    jne L_code_ptr_error
  7967                                  
  7968 00004D49 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7969                                  
  7970 00004D4D 53                              push rbx
  7971                                  
  7972 00004D4E FF5009                          call SOB_CLOSURE_CODE(rax)
  7973                                  
  7974 00004D51 50                              	push rax
  7975 00004D52 6A02                    	push 2
  7976 00004D54 488B4510                mov rax, qword [rbp + 16]
  7977 00004D58 488B00                  mov rax, qword [rax + 0]
  7978 00004D5B 488B00                  mov rax, qword [rax + 0]
  7979 00004D5E 488B00                  	mov rax, qword [rax]
  7980                                  .L_lambda_simple_arity_check_ok_0847:
  7981 00004D61 803805                  	cmp byte [rax], T_closure
  7982                                  
  7983 00004D64 0F8598EA0000                    jne L_code_ptr_error                      ; rax <- proc
  7984                                  
  7985                                  
  7986 00004D6A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7987                                  
  7988 00004D6E 53                              push rbx                                  ; env pushed
  7989                                  
  7990 00004D6F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7991                                  
  7992                                          ; sagydebug
  7993                                  
  7994 00004D72 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7995                                  
  7996                                          
  7997                                          
  7998 00004D75 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7999                                  
  8000 00004D79 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8001                                  
  8002                                  
  8003 00004D7E 4D89CA                          mov r10, r9
  8004 00004D81 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  8005                                          
  8006 00004D85 4D89D7                          mov r15, r10
  8007 00004D88 4983C7FF                        add r15, -1
  8008                                                                                         
  8009 00004D8C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8010 00004D8F 4983C404                        add r12, 4
  8011 00004D93 4983C4FF                        add r12, -1
  8012                                  
  8013 00004D97 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8014                                  .L_tc_recycle_frame_loop_0471:
  8015 00004D9D 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  8016                                  
  8017 00004DA1 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8018                                  
  8019                                  
  8020                                  
  8021 00004DA6 41BE00000000                    mov r14, 0                                ; clean box
  8022                                  
  8023                                  
  8024 00004DAC 4983C7FF                        add r15, -1           
  8025 00004DB0 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8026                                  
  8027 00004DB4 4983C4FF                        add r12, -1 
  8028                                  
  8029 00004DB8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8030 00004DBC 75DF                    	jne .L_tc_recycle_frame_loop_0471
  8031                                  .L_tc_recycle_frame_done_0471:
  8032                                  ;this pop rbp in sot to the right place
  8033 00004DBE 4D89C7                  mov r15, r8
  8034                                  
  8035 00004DC1 4983C704                        add r15, 4
  8036                                  
  8037 00004DC5 49C1E703                        shl r15, 3
  8038                                  
  8039 00004DC9 4C01FC                          add rsp, r15
  8040 00004DCC 5D                      	pop rbp                                  ; restore the old rbp
  8041                                  
  8042 00004DCD 488B4D00                        mov rcx, qword [rbp]
  8043 00004DD1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8044                                            ; rbx <- code(proc)
  8045                                  
  8046 00004DD5 FFE3                            jmp rbx
  8047                                  	.L_if_end_0240:
  8048 00004DD7 C9                      	leave
  8049 00004DD8 C22000                  	ret 8 * (2 + 2)
  8050                                  .L_lambda_simple_end_03d6:	; new closure is in rax
  8051 00004DDB 50                      push rax
  8052 00004DDC 488B4520                mov rax, qword [rbp + 32]
  8053 00004DE0 8F00                    pop qword [rax]
  8054 00004DE2 48B8-                   mov rax, sob_void
  8054 00004DE4 [0000000000000000] 
  8055                                  
  8056 00004DEC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8057 00004DF1 E851DA0000              	call malloc
  8058 00004DF6 50                      	push rax
  8059 00004DF7 BF08000000              	mov rdi, 8 * 1	; new rib
  8060 00004DFC E846DA0000              	call malloc
  8061 00004E01 50                      	push rax
  8062 00004E02 BF10000000              	mov rdi, 8 * 2	; extended env
  8063 00004E07 E83BDA0000              	call malloc
  8064 00004E0C 488B7D10                	mov rdi, ENV
  8065 00004E10 BE00000000              	mov rsi, 0
  8066 00004E15 BA01000000              	mov rdx, 1
  8067                                  .L_lambda_simple_env_loop_03d7:	; ext_env[i + 1] <-- env[i]
  8068 00004E1A 4883FE01                	cmp rsi, 1
  8069 00004E1E 7410                    	je .L_lambda_simple_env_end_03d7
  8070 00004E20 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8071 00004E24 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8072 00004E28 48FFC6                  	inc rsi
  8073 00004E2B 48FFC2                  	inc rdx
  8074 00004E2E EBEA                    	jmp .L_lambda_simple_env_loop_03d7
  8075                                  .L_lambda_simple_env_end_03d7:
  8076 00004E30 5B                      	pop rbx
  8077 00004E31 BE00000000              	mov rsi, 0
  8078                                  .L_lambda_simple_params_loop_03d7:	; copy params
  8079 00004E36 4883FE01                	cmp rsi, 1
  8080 00004E3A 740E                    	je .L_lambda_simple_params_end_03d7
  8081 00004E3C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8082 00004E41 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8083 00004E45 48FFC6                  	inc rsi
  8084 00004E48 EBEC                    	jmp .L_lambda_simple_params_loop_03d7
  8085                                  .L_lambda_simple_params_end_03d7:
  8086 00004E4A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8087 00004E4D 4889C3                  	mov rbx, rax
  8088 00004E50 58                      	pop rax
  8089 00004E51 C60005                  	mov byte [rax], T_closure
  8090 00004E54 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8091 00004E58 48C74009[654E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d7
  8092 00004E60 E9B0000000              	jmp .L_lambda_simple_end_03d7
  8093                                  .L_lambda_simple_code_03d7:	; lambda-simple body
  8094 00004E65 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8095 00004E6B 740B                    	je .L_lambda_simple_arity_check_ok_0848
  8096 00004E6D FF742410                	push qword [rsp + 8 * 2]
  8097 00004E71 6A01                    	push 1
  8098 00004E73 E988D90000              	jmp L_error_incorrect_arity_simple
  8099                                  .L_lambda_simple_arity_check_ok_0848:
  8100 00004E78 C8000000                	enter 0, 0
  8101 00004E7C 48B8-                   	mov rax, qword (L_constants + 1)
  8101 00004E7E [0100000000000000] 
  8102 00004E86 50                      	push rax
  8103 00004E87 488B4520                mov rax, qword [rbp + 32]
  8104 00004E8B 50                      	push rax
  8105 00004E8C 6A02                    	push 2
  8106 00004E8E 488B4510                mov rax, qword [rbp + 16]
  8107 00004E92 488B00                  mov rax, qword [rax + 0]
  8108 00004E95 488B00                  mov rax, qword [rax + 0]
  8109 00004E98 488B00                  	mov rax, qword [rax]
  8110                                  .L_lambda_simple_arity_check_ok_0849:
  8111 00004E9B 803805                  	cmp byte [rax], T_closure
  8112                                  
  8113 00004E9E 0F855EE90000                    jne L_code_ptr_error                      ; rax <- proc
  8114                                  
  8115                                  
  8116 00004EA4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8117                                  
  8118 00004EA8 53                              push rbx                                  ; env pushed
  8119                                  
  8120 00004EA9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8121                                  
  8122                                          ; sagydebug
  8123                                  
  8124 00004EAC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8125                                  
  8126                                          
  8127                                          
  8128 00004EAF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8129                                  
  8130 00004EB3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8131                                  
  8132                                  
  8133 00004EB8 4D89CA                          mov r10, r9
  8134 00004EBB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  8135                                          
  8136 00004EBF 4D89D7                          mov r15, r10
  8137 00004EC2 4983C7FF                        add r15, -1
  8138                                                                                         
  8139 00004EC6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8140 00004EC9 4983C404                        add r12, 4
  8141 00004ECD 4983C4FF                        add r12, -1
  8142                                  
  8143 00004ED1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8144                                  .L_tc_recycle_frame_loop_0472:
  8145 00004ED7 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  8146                                  
  8147 00004EDB 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8148                                  
  8149                                  
  8150                                  
  8151 00004EE0 41BE00000000                    mov r14, 0                                ; clean box
  8152                                  
  8153                                  
  8154 00004EE6 4983C7FF                        add r15, -1           
  8155 00004EEA 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8156                                  
  8157 00004EEE 4983C4FF                        add r12, -1 
  8158                                  
  8159 00004EF2 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8160 00004EF6 75DF                    	jne .L_tc_recycle_frame_loop_0472
  8161                                  .L_tc_recycle_frame_done_0472:
  8162                                  ;this pop rbp in sot to the right place
  8163 00004EF8 4D89C7                  mov r15, r8
  8164                                  
  8165 00004EFB 4983C704                        add r15, 4
  8166                                  
  8167 00004EFF 49C1E703                        shl r15, 3
  8168                                  
  8169 00004F03 4C01FC                          add rsp, r15
  8170 00004F06 5D                      	pop rbp                                  ; restore the old rbp
  8171                                  
  8172 00004F07 488B4D00                        mov rcx, qword [rbp]
  8173 00004F0B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8174                                            ; rbx <- code(proc)
  8175                                  
  8176 00004F0F FFE3                            jmp rbx
  8177 00004F11 C9                      	leave
  8178 00004F12 C21800                  	ret 8 * (2 + 1)
  8179                                  .L_lambda_simple_end_03d7:	; new closure is in rax
  8180 00004F15 C9                      	leave
  8181 00004F16 C21800                  	ret 8 * (2 + 1)
  8182                                  .L_lambda_simple_end_03d5:	; new closure is in rax
  8183 00004F19 803805                  	cmp byte [rax], T_closure 
  8184 00004F1C 0F85E0E80000                    jne L_code_ptr_error
  8185                                  
  8186 00004F22 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8187                                  
  8188 00004F26 53                              push rbx
  8189                                  
  8190 00004F27 FF5009                          call SOB_CLOSURE_CODE(rax)
  8191                                  
  8192 00004F2A 48890425[E8020000]              	mov qword [free_var_93], rax
  8193 00004F32 48B8-                   	mov rax, sob_void
  8193 00004F34 [0000000000000000] 
  8194                                  
  8195 00004F3C 4889C7                  	mov rdi, rax
  8196 00004F3F E814D90000              	call print_sexpr_if_not_void
  8197                                  
  8198 00004F44 48B8-                   	mov rax, qword (L_constants + 22)
  8198 00004F46 [1600000000000000] 
  8199 00004F4E 50                      	push rax
  8200 00004F4F 48B8-                   	mov rax, qword (L_constants + 22)
  8200 00004F51 [1600000000000000] 
  8201 00004F59 50                      	push rax
  8202 00004F5A 6A02                    	push 2
  8203 00004F5C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8204 00004F61 E8E1D80000              	call malloc
  8205 00004F66 50                      	push rax
  8206 00004F67 BF00000000              	mov rdi, 8 * 0	; new rib
  8207 00004F6C E8D6D80000              	call malloc
  8208 00004F71 50                      	push rax
  8209 00004F72 BF08000000              	mov rdi, 8 * 1	; extended env
  8210 00004F77 E8CBD80000              	call malloc
  8211 00004F7C 488B7D10                	mov rdi, ENV
  8212 00004F80 BE00000000              	mov rsi, 0
  8213 00004F85 BA01000000              	mov rdx, 1
  8214                                  .L_lambda_simple_env_loop_03d8:	; ext_env[i + 1] <-- env[i]
  8215 00004F8A 4883FE00                	cmp rsi, 0
  8216 00004F8E 7410                    	je .L_lambda_simple_env_end_03d8
  8217 00004F90 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8218 00004F94 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8219 00004F98 48FFC6                  	inc rsi
  8220 00004F9B 48FFC2                  	inc rdx
  8221 00004F9E EBEA                    	jmp .L_lambda_simple_env_loop_03d8
  8222                                  .L_lambda_simple_env_end_03d8:
  8223 00004FA0 5B                      	pop rbx
  8224 00004FA1 BE00000000              	mov rsi, 0
  8225                                  .L_lambda_simple_params_loop_03d8:	; copy params
  8226 00004FA6 4883FE00                	cmp rsi, 0
  8227 00004FAA 740E                    	je .L_lambda_simple_params_end_03d8
  8228 00004FAC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8229 00004FB1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8230 00004FB5 48FFC6                  	inc rsi
  8231 00004FB8 EBEC                    	jmp .L_lambda_simple_params_loop_03d8
  8232                                  .L_lambda_simple_params_end_03d8:
  8233 00004FBA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8234 00004FBD 4889C3                  	mov rbx, rax
  8235 00004FC0 58                      	pop rax
  8236 00004FC1 C60005                  	mov byte [rax], T_closure
  8237 00004FC4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8238 00004FC8 48C74009[D54F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d8
  8239 00004FD0 E954060000              	jmp .L_lambda_simple_end_03d8
  8240                                  .L_lambda_simple_code_03d8:	; lambda-simple body
  8241 00004FD5 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8242 00004FDB 740B                    	je .L_lambda_simple_arity_check_ok_084a
  8243 00004FDD FF742410                	push qword [rsp + 8 * 2]
  8244 00004FE1 6A02                    	push 2
  8245 00004FE3 E918D80000              	jmp L_error_incorrect_arity_simple
  8246                                  .L_lambda_simple_arity_check_ok_084a:
  8247 00004FE8 C8000000                	enter 0, 0
  8248 00004FEC 488B4520                mov rax, qword [rbp + 32]
  8249 00004FF0 BF08000000              mov rdi, 8
  8250 00004FF5 4889C3                  mov rbx, rax
  8251 00004FF8 E84AD80000              call malloc
  8252 00004FFD 488918                  mov qword [rax], rbx
  8253 00005000 48894520                mov qword [rbp + 32], rax
  8254 00005004 48B8-                   mov rax, sob_void
  8254 00005006 [0000000000000000] 
  8255 0000500E 488B4528                mov rax, qword [rbp + 40]
  8256 00005012 BF08000000              mov rdi, 8
  8257 00005017 4889C3                  mov rbx, rax
  8258 0000501A E828D80000              call malloc
  8259 0000501F 488918                  mov qword [rax], rbx
  8260 00005022 48894528                mov qword [rbp + 40], rax
  8261 00005026 48B8-                   mov rax, sob_void
  8261 00005028 [0000000000000000] 
  8262 00005030 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8263 00005035 E80DD80000              	call malloc
  8264 0000503A 50                      	push rax
  8265 0000503B BF10000000              	mov rdi, 8 * 2	; new rib
  8266 00005040 E802D80000              	call malloc
  8267 00005045 50                      	push rax
  8268 00005046 BF10000000              	mov rdi, 8 * 2	; extended env
  8269 0000504B E8F7D70000              	call malloc
  8270 00005050 488B7D10                	mov rdi, ENV
  8271 00005054 BE00000000              	mov rsi, 0
  8272 00005059 BA01000000              	mov rdx, 1
  8273                                  .L_lambda_simple_env_loop_03d9:	; ext_env[i + 1] <-- env[i]
  8274 0000505E 4883FE01                	cmp rsi, 1
  8275 00005062 7410                    	je .L_lambda_simple_env_end_03d9
  8276 00005064 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8277 00005068 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8278 0000506C 48FFC6                  	inc rsi
  8279 0000506F 48FFC2                  	inc rdx
  8280 00005072 EBEA                    	jmp .L_lambda_simple_env_loop_03d9
  8281                                  .L_lambda_simple_env_end_03d9:
  8282 00005074 5B                      	pop rbx
  8283 00005075 BE00000000              	mov rsi, 0
  8284                                  .L_lambda_simple_params_loop_03d9:	; copy params
  8285 0000507A 4883FE02                	cmp rsi, 2
  8286 0000507E 740E                    	je .L_lambda_simple_params_end_03d9
  8287 00005080 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8288 00005085 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8289 00005089 48FFC6                  	inc rsi
  8290 0000508C EBEC                    	jmp .L_lambda_simple_params_loop_03d9
  8291                                  .L_lambda_simple_params_end_03d9:
  8292 0000508E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8293 00005091 4889C3                  	mov rbx, rax
  8294 00005094 58                      	pop rax
  8295 00005095 C60005                  	mov byte [rax], T_closure
  8296 00005098 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8297 0000509C 48C74009[A9500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03d9
  8298 000050A4 E93A010000              	jmp .L_lambda_simple_end_03d9
  8299                                  .L_lambda_simple_code_03d9:	; lambda-simple body
  8300 000050A9 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8301 000050AF 740B                    	je .L_lambda_simple_arity_check_ok_084b
  8302 000050B1 FF742410                	push qword [rsp + 8 * 2]
  8303 000050B5 6A02                    	push 2
  8304 000050B7 E944D70000              	jmp L_error_incorrect_arity_simple
  8305                                  .L_lambda_simple_arity_check_ok_084b:
  8306 000050BC C8000000                	enter 0, 0
  8307 000050C0 488B4528                mov rax, qword [rbp + 40]
  8308 000050C4 50                      	push rax
  8309 000050C5 6A01                    	push 1
  8310 000050C7 488B0425[00000000]      	mov rax, qword [free_var_0]
  8311 000050CF 803805                  	cmp byte [rax], T_closure 
  8312 000050D2 0F852AE70000                    jne L_code_ptr_error
  8313                                  
  8314 000050D8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8315                                  
  8316 000050DC 53                              push rbx
  8317                                  
  8318 000050DD FF5009                          call SOB_CLOSURE_CODE(rax)
  8319                                  
  8320 000050E0 483D[02000000]                  	cmp rax, sob_boolean_false
  8321 000050E6 7409                    	je .L_if_else_0241
  8322 000050E8 488B4520                mov rax, qword [rbp + 32]
  8323 000050EC E9EE000000              	jmp .L_if_end_0241
  8324                                  	.L_if_else_0241:
  8325 000050F1 488B4528                	mov rax, qword [rbp + 40]
  8326 000050F5 50                      	push rax
  8327 000050F6 6A01                    	push 1
  8328 000050F8 488B0425[88000000]      	mov rax, qword [free_var_17]
  8329 00005100 803805                  	cmp byte [rax], T_closure 
  8330 00005103 0F85F9E60000                    jne L_code_ptr_error
  8331                                  
  8332 00005109 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8333                                  
  8334 0000510D 53                              push rbx
  8335                                  
  8336 0000510E FF5009                          call SOB_CLOSURE_CODE(rax)
  8337                                  
  8338 00005111 50                              	push rax
  8339 00005112 488B4528                mov rax, qword [rbp + 40]
  8340 00005116 50                      	push rax
  8341 00005117 6A01                    	push 1
  8342 00005119 488B0425[80000000]      	mov rax, qword [free_var_16]
  8343 00005121 803805                  	cmp byte [rax], T_closure 
  8344 00005124 0F85D8E60000                    jne L_code_ptr_error
  8345                                  
  8346 0000512A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8347                                  
  8348 0000512E 53                              push rbx
  8349                                  
  8350 0000512F FF5009                          call SOB_CLOSURE_CODE(rax)
  8351                                  
  8352 00005132 50                              	push rax
  8353 00005133 6A02                    	push 2
  8354 00005135 488B4510                mov rax, qword [rbp + 16]
  8355 00005139 488B00                  mov rax, qword [rax + 0]
  8356 0000513C 488B00                  mov rax, qword [rax + 0]
  8357 0000513F 488B00                  	mov rax, qword [rax]
  8358 00005142 803805                  	cmp byte [rax], T_closure 
  8359 00005145 0F85B7E60000                    jne L_code_ptr_error
  8360                                  
  8361 0000514B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8362                                  
  8363 0000514F 53                              push rbx
  8364                                  
  8365 00005150 FF5009                          call SOB_CLOSURE_CODE(rax)
  8366                                  
  8367 00005153 50                              	push rax
  8368 00005154 488B4520                mov rax, qword [rbp + 32]
  8369 00005158 50                      	push rax
  8370 00005159 6A02                    	push 2
  8371 0000515B 488B4510                mov rax, qword [rbp + 16]
  8372 0000515F 488B00                  mov rax, qword [rax + 0]
  8373 00005162 488B4008                mov rax, qword [rax + 8]
  8374 00005166 488B00                  	mov rax, qword [rax]
  8375                                  .L_lambda_simple_arity_check_ok_084c:
  8376 00005169 803805                  	cmp byte [rax], T_closure
  8377                                  
  8378 0000516C 0F8590E60000                    jne L_code_ptr_error                      ; rax <- proc
  8379                                  
  8380                                  
  8381 00005172 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8382                                  
  8383 00005176 53                              push rbx                                  ; env pushed
  8384                                  
  8385 00005177 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8386                                  
  8387                                          ; sagydebug
  8388                                  
  8389 0000517A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8390                                  
  8391                                          
  8392                                          
  8393 0000517D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8394                                  
  8395 00005181 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8396                                  
  8397                                  
  8398 00005186 4D89CA                          mov r10, r9
  8399 00005189 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  8400                                          
  8401 0000518D 4D89D7                          mov r15, r10
  8402 00005190 4983C7FF                        add r15, -1
  8403                                                                                         
  8404 00005194 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8405 00005197 4983C404                        add r12, 4
  8406 0000519B 4983C4FF                        add r12, -1
  8407                                  
  8408 0000519F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8409                                  .L_tc_recycle_frame_loop_0473:
  8410 000051A5 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  8411                                  
  8412 000051A9 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8413                                  
  8414                                  
  8415                                  
  8416 000051AE 41BE00000000                    mov r14, 0                                ; clean box
  8417                                  
  8418                                  
  8419 000051B4 4983C7FF                        add r15, -1           
  8420 000051B8 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8421                                  
  8422 000051BC 4983C4FF                        add r12, -1 
  8423                                  
  8424 000051C0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8425 000051C4 75DF                    	jne .L_tc_recycle_frame_loop_0473
  8426                                  .L_tc_recycle_frame_done_0473:
  8427                                  ;this pop rbp in sot to the right place
  8428 000051C6 4D89C7                  mov r15, r8
  8429                                  
  8430 000051C9 4983C704                        add r15, 4
  8431                                  
  8432 000051CD 49C1E703                        shl r15, 3
  8433                                  
  8434 000051D1 4C01FC                          add rsp, r15
  8435 000051D4 5D                      	pop rbp                                  ; restore the old rbp
  8436                                  
  8437 000051D5 488B4D00                        mov rcx, qword [rbp]
  8438 000051D9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8439                                            ; rbx <- code(proc)
  8440                                  
  8441 000051DD FFE3                            jmp rbx
  8442                                  	.L_if_end_0241:
  8443 000051DF C9                      	leave
  8444 000051E0 C22000                  	ret 8 * (2 + 2)
  8445                                  .L_lambda_simple_end_03d9:	; new closure is in rax
  8446 000051E3 50                      push rax
  8447 000051E4 488B4520                mov rax, qword [rbp + 32]
  8448 000051E8 8F00                    pop qword [rax]
  8449 000051EA 48B8-                   mov rax, sob_void
  8449 000051EC [0000000000000000] 
  8450                                  
  8451 000051F4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8452 000051F9 E849D60000              	call malloc
  8453 000051FE 50                      	push rax
  8454 000051FF BF10000000              	mov rdi, 8 * 2	; new rib
  8455 00005204 E83ED60000              	call malloc
  8456 00005209 50                      	push rax
  8457 0000520A BF10000000              	mov rdi, 8 * 2	; extended env
  8458 0000520F E833D60000              	call malloc
  8459 00005214 488B7D10                	mov rdi, ENV
  8460 00005218 BE00000000              	mov rsi, 0
  8461 0000521D BA01000000              	mov rdx, 1
  8462                                  .L_lambda_simple_env_loop_03da:	; ext_env[i + 1] <-- env[i]
  8463 00005222 4883FE01                	cmp rsi, 1
  8464 00005226 7410                    	je .L_lambda_simple_env_end_03da
  8465 00005228 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8466 0000522C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8467 00005230 48FFC6                  	inc rsi
  8468 00005233 48FFC2                  	inc rdx
  8469 00005236 EBEA                    	jmp .L_lambda_simple_env_loop_03da
  8470                                  .L_lambda_simple_env_end_03da:
  8471 00005238 5B                      	pop rbx
  8472 00005239 BE00000000              	mov rsi, 0
  8473                                  .L_lambda_simple_params_loop_03da:	; copy params
  8474 0000523E 4883FE02                	cmp rsi, 2
  8475 00005242 740E                    	je .L_lambda_simple_params_end_03da
  8476 00005244 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8477 00005249 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8478 0000524D 48FFC6                  	inc rsi
  8479 00005250 EBEC                    	jmp .L_lambda_simple_params_loop_03da
  8480                                  .L_lambda_simple_params_end_03da:
  8481 00005252 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8482 00005255 4889C3                  	mov rbx, rax
  8483 00005258 58                      	pop rax
  8484 00005259 C60005                  	mov byte [rax], T_closure
  8485 0000525C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8486 00005260 48C74009[6D520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03da
  8487 00005268 E935010000              	jmp .L_lambda_simple_end_03da
  8488                                  .L_lambda_simple_code_03da:	; lambda-simple body
  8489 0000526D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8490 00005273 740B                    	je .L_lambda_simple_arity_check_ok_084d
  8491 00005275 FF742410                	push qword [rsp + 8 * 2]
  8492 00005279 6A02                    	push 2
  8493 0000527B E980D50000              	jmp L_error_incorrect_arity_simple
  8494                                  .L_lambda_simple_arity_check_ok_084d:
  8495 00005280 C8000000                	enter 0, 0
  8496 00005284 488B4520                mov rax, qword [rbp + 32]
  8497 00005288 50                      	push rax
  8498 00005289 6A01                    	push 1
  8499 0000528B 488B0425[00000000]      	mov rax, qword [free_var_0]
  8500 00005293 803805                  	cmp byte [rax], T_closure 
  8501 00005296 0F8566E50000                    jne L_code_ptr_error
  8502                                  
  8503 0000529C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8504                                  
  8505 000052A0 53                              push rbx
  8506                                  
  8507 000052A1 FF5009                          call SOB_CLOSURE_CODE(rax)
  8508                                  
  8509 000052A4 483D[02000000]                  	cmp rax, sob_boolean_false
  8510 000052AA 7409                    	je .L_if_else_0242
  8511 000052AC 488B4528                mov rax, qword [rbp + 40]
  8512 000052B0 E9E9000000              	jmp .L_if_end_0242
  8513                                  	.L_if_else_0242:
  8514 000052B5 488B4528                	mov rax, qword [rbp + 40]
  8515 000052B9 50                      	push rax
  8516 000052BA 488B4520                mov rax, qword [rbp + 32]
  8517 000052BE 50                      	push rax
  8518 000052BF 6A01                    	push 1
  8519 000052C1 488B0425[88000000]      	mov rax, qword [free_var_17]
  8520 000052C9 803805                  	cmp byte [rax], T_closure 
  8521 000052CC 0F8530E50000                    jne L_code_ptr_error
  8522                                  
  8523 000052D2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8524                                  
  8525 000052D6 53                              push rbx
  8526                                  
  8527 000052D7 FF5009                          call SOB_CLOSURE_CODE(rax)
  8528                                  
  8529 000052DA 50                              	push rax
  8530 000052DB 6A02                    	push 2
  8531 000052DD 488B4510                mov rax, qword [rbp + 16]
  8532 000052E1 488B00                  mov rax, qword [rax + 0]
  8533 000052E4 488B4008                mov rax, qword [rax + 8]
  8534 000052E8 488B00                  	mov rax, qword [rax]
  8535 000052EB 803805                  	cmp byte [rax], T_closure 
  8536 000052EE 0F850EE50000                    jne L_code_ptr_error
  8537                                  
  8538 000052F4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8539                                  
  8540 000052F8 53                              push rbx
  8541                                  
  8542 000052F9 FF5009                          call SOB_CLOSURE_CODE(rax)
  8543                                  
  8544 000052FC 50                              	push rax
  8545 000052FD 488B4520                mov rax, qword [rbp + 32]
  8546 00005301 50                      	push rax
  8547 00005302 6A01                    	push 1
  8548 00005304 488B0425[80000000]      	mov rax, qword [free_var_16]
  8549 0000530C 803805                  	cmp byte [rax], T_closure 
  8550 0000530F 0F85EDE40000                    jne L_code_ptr_error
  8551                                  
  8552 00005315 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8553                                  
  8554 00005319 53                              push rbx
  8555                                  
  8556 0000531A FF5009                          call SOB_CLOSURE_CODE(rax)
  8557                                  
  8558 0000531D 50                              	push rax
  8559 0000531E 6A02                    	push 2
  8560 00005320 488B0425[68000000]      	mov rax, qword [free_var_13]
  8561                                  .L_lambda_simple_arity_check_ok_084e:
  8562 00005328 803805                  	cmp byte [rax], T_closure
  8563                                  
  8564 0000532B 0F85D1E40000                    jne L_code_ptr_error                      ; rax <- proc
  8565                                  
  8566                                  
  8567 00005331 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8568                                  
  8569 00005335 53                              push rbx                                  ; env pushed
  8570                                  
  8571 00005336 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8572                                  
  8573                                          ; sagydebug
  8574                                  
  8575 00005339 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8576                                  
  8577                                          
  8578                                          
  8579 0000533C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8580                                  
  8581 00005340 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8582                                  
  8583                                  
  8584 00005345 4D89CA                          mov r10, r9
  8585 00005348 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  8586                                          
  8587 0000534C 4D89D7                          mov r15, r10
  8588 0000534F 4983C7FF                        add r15, -1
  8589                                                                                         
  8590 00005353 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8591 00005356 4983C404                        add r12, 4
  8592 0000535A 4983C4FF                        add r12, -1
  8593                                  
  8594 0000535E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8595                                  .L_tc_recycle_frame_loop_0474:
  8596 00005364 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  8597                                  
  8598 00005368 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8599                                  
  8600                                  
  8601                                  
  8602 0000536D 41BE00000000                    mov r14, 0                                ; clean box
  8603                                  
  8604                                  
  8605 00005373 4983C7FF                        add r15, -1           
  8606 00005377 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8607                                  
  8608 0000537B 4983C4FF                        add r12, -1 
  8609                                  
  8610 0000537F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8611 00005383 75DF                    	jne .L_tc_recycle_frame_loop_0474
  8612                                  .L_tc_recycle_frame_done_0474:
  8613                                  ;this pop rbp in sot to the right place
  8614 00005385 4D89C7                  mov r15, r8
  8615                                  
  8616 00005388 4983C704                        add r15, 4
  8617                                  
  8618 0000538C 49C1E703                        shl r15, 3
  8619                                  
  8620 00005390 4C01FC                          add rsp, r15
  8621 00005393 5D                      	pop rbp                                  ; restore the old rbp
  8622                                  
  8623 00005394 488B4D00                        mov rcx, qword [rbp]
  8624 00005398 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8625                                            ; rbx <- code(proc)
  8626                                  
  8627 0000539C FFE3                            jmp rbx
  8628                                  	.L_if_end_0242:
  8629 0000539E C9                      	leave
  8630 0000539F C22000                  	ret 8 * (2 + 2)
  8631                                  .L_lambda_simple_end_03da:	; new closure is in rax
  8632 000053A2 50                      push rax
  8633 000053A3 488B4528                mov rax, qword [rbp + 40]
  8634 000053A7 8F00                    pop qword [rax]
  8635 000053A9 48B8-                   mov rax, sob_void
  8635 000053AB [0000000000000000] 
  8636                                  
  8637 000053B3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8638 000053B8 E88AD40000              	call malloc
  8639 000053BD 50                      	push rax
  8640 000053BE BF10000000              	mov rdi, 8 * 2	; new rib
  8641 000053C3 E87FD40000              	call malloc
  8642 000053C8 50                      	push rax
  8643 000053C9 BF10000000              	mov rdi, 8 * 2	; extended env
  8644 000053CE E874D40000              	call malloc
  8645 000053D3 488B7D10                	mov rdi, ENV
  8646 000053D7 BE00000000              	mov rsi, 0
  8647 000053DC BA01000000              	mov rdx, 1
  8648                                  .L_lambda_opt_env_loop_0091:	; ext_env[i + 1] <-- env[i]
  8649 000053E1 4883FE01                	cmp rsi, 1
  8650 000053E5 7410                    	je .L_lambda_opt_env_end_0091
  8651 000053E7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8652 000053EB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8653 000053EF 48FFC6                  	inc rsi
  8654 000053F2 48FFC2                  	inc rdx
  8655 000053F5 EBEA                    	jmp .L_lambda_opt_env_loop_0091
  8656                                  .L_lambda_opt_env_end_0091:
  8657 000053F7 5B                      	pop rbx
  8658 000053F8 BE00000000              	mov rsi, 0
  8659                                  .L_lambda_opt_params_loop_01b1:	; copy params
  8660 000053FD 4883FE02                	cmp rsi, 2
  8661 00005401 740E                    	je .L_lambda_opt_params_end_01b1
  8662 00005403 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8663 00005408 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8664 0000540C 48FFC6                  	inc rsi
  8665 0000540F EBEC                    	jmp .L_lambda_opt_params_loop_01b1
  8666                                  .L_lambda_opt_params_end_01b1:
  8667 00005411 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8668 00005414 4889C3                  	mov rbx, rax
  8669 00005417 58                      	pop rax
  8670 00005418 C60005                  	mov byte [rax], T_closure
  8671 0000541B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8672 0000541F 48C74009[2C540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0091
  8673 00005427 E9F9010000              	jmp .L_lambda_opt_end_0091
  8674                                  .L_lambda_opt_code_0091:
  8675 0000542C 4C8B542410              mov r10, qword [rsp+8*2]
  8676 00005431 4983FA00                cmp r10, 0
  8677 00005435 740B                    je .L_lambda_opt_arity_check_exact_0091
  8678 00005437 4983FA00                cmp r10, 0
  8679 0000543B 7F44                    jg .L_lambda_opt_arity_check_more_0091
  8680 0000543D E9D2D30000              jmp L_error_incorrect_arity_opt
  8681                                  .L_lambda_opt_arity_check_exact_0091:
  8682 00005442 4883EC08                sub rsp, 8
  8683 00005446 BA03000000              mov rdx, 3+0
  8684 0000544B 4889E3                  mov qword rbx, rsp
  8685                                  .L_lambda_opt_params_loop_01b2:
  8686 0000544E 488B4B08                mov qword rcx, [rbx+8]
  8687 00005452 48890B                  mov qword [rbx], rcx
  8688 00005455 48FFCA                  dec rdx
  8689 00005458 4883C308                add rbx, 8
  8690 0000545C 4883FA00                cmp rdx, 0
  8691 00005460 7402                    je .L_lambda_opt_params_end_01b2
  8692 00005462 EBEA                    jmp .L_lambda_opt_params_loop_01b2
  8693                                  .L_lambda_opt_params_end_01b2:
  8694 00005464 49FFC2                  inc r10
  8695 00005467 4C89542410              mov qword [rsp+8*2], r10
  8696 0000546C 4983C202                add r10, 2
  8697 00005470 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  8698 00005478 4C8B4D00                mov r9, [rbp]
  8699 0000547C E996000000              jmp .L_lambda_opt_stack_adjusted_0091
  8700                                  .L_lambda_opt_arity_check_more_0091:
  8701 00005481 4C8B6C2410              mov r13, [rsp+2*8]
  8702 00005486 48B8-                   mov rax, sob_nil
  8702 00005488 [0100000000000000] 
  8703 00005490 4C8B542410              mov r10, [rsp+2*8]
  8704 00005495 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  8705 0000549A 4983EA00                sub r10, 0
  8706                                  .L_lambda_opt_stack_shrink_loop_0091:
  8707 0000549E 4983FA00                cmp r10, 0
  8708 000054A2 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0091
  8709 000054A4 4889C1                  mov rcx, rax
  8710 000054A7 498B10                  mov rdx, [r8]
  8711 000054AA BF11000000              mov rdi, 17
  8712 000054AF E893D30000              call malloc
  8713 000054B4 C60021                  mov byte [rax], T_pair
  8714 000054B7 48894809                mov SOB_PAIR_CDR(rax), rcx
  8715 000054BB 48895001                mov SOB_PAIR_CAR(rax), rdx
  8716 000054BF 4983E808                sub r8, 8
  8717 000054C3 49FFCA                  dec r10
  8718 000054C6 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0091
  8719                                  .L_lambda_opt_stack_shrink_loop_exit_0091:
  8720 000054C8 4889442418              mov [rsp+8*(2+1)], rax
  8721 000054CD 41BA01000000            mov r10, 1
  8722 000054D3 4C89542410              mov [rsp+16], r10
  8723 000054D8 4989E4                  mov r12, rsp
  8724 000054DB 4983C418                add r12, 8*(2+1)
  8725 000054DF 4C2B6C2410              sub r13, [rsp+16]
  8726 000054E4 4D89EA                  mov r10, r13
  8727 000054E7 49C1E203                shl r10, 3
  8728 000054EB 4D89D7                  mov r15, r10
  8729 000054EE 4D01E2                  add r10, r12
  8730 000054F1 4C8B4C2410              mov r9, [rsp+16]
  8731 000054F6 4983C103                add r9, 3
  8732                                  .L_lambda_opt_params_loop_01b3:
  8733 000054FA 4983F900                cmp r9, 0
  8734 000054FE 7414                    je .L_lambda_opt_params_end_01b3
  8735 00005500 4D8B3424                mov r14, [r12]
  8736 00005504 4D8932                  mov [r10], r14
  8737 00005507 4983EC08                sub r12, 8
  8738 0000550B 4983EA08                sub r10, 8
  8739 0000550F 49FFC9                  dec r9
  8740 00005512 EBE6                    jmp .L_lambda_opt_params_loop_01b3
  8741                                  .L_lambda_opt_params_end_01b3:
  8742 00005514 4C01FC                  add rsp, r15
  8743                                  .L_lambda_opt_stack_adjusted_0091:
  8744 00005517 4C8B4D00                mov r9, [rbp]
  8745 0000551B C8000000                enter 0, 0
  8746 0000551F 488B4520                mov rax, qword [rbp + 32]
  8747 00005523 50                      	push rax
  8748 00005524 6A01                    	push 1
  8749 00005526 488B0425[00000000]      	mov rax, qword [free_var_0]
  8750 0000552E 803805                  	cmp byte [rax], T_closure 
  8751 00005531 0F85CBE20000                    jne L_code_ptr_error
  8752                                  
  8753 00005537 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8754                                  
  8755 0000553B 53                              push rbx
  8756                                  
  8757 0000553C FF5009                          call SOB_CLOSURE_CODE(rax)
  8758                                  
  8759 0000553F 483D[02000000]                  	cmp rax, sob_boolean_false
  8760 00005545 740F                    	je .L_if_else_0243
  8761 00005547 48B8-                   	mov rax, qword (L_constants + 1)
  8761 00005549 [0100000000000000] 
  8762 00005551 E9C7000000              	jmp .L_if_end_0243
  8763                                  	.L_if_else_0243:
  8764 00005556 488B4520                	mov rax, qword [rbp + 32]
  8765 0000555A 50                      	push rax
  8766 0000555B 6A01                    	push 1
  8767 0000555D 488B0425[88000000]      	mov rax, qword [free_var_17]
  8768 00005565 803805                  	cmp byte [rax], T_closure 
  8769 00005568 0F8594E20000                    jne L_code_ptr_error
  8770                                  
  8771 0000556E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8772                                  
  8773 00005572 53                              push rbx
  8774                                  
  8775 00005573 FF5009                          call SOB_CLOSURE_CODE(rax)
  8776                                  
  8777 00005576 50                              	push rax
  8778 00005577 488B4520                mov rax, qword [rbp + 32]
  8779 0000557B 50                      	push rax
  8780 0000557C 6A01                    	push 1
  8781 0000557E 488B0425[80000000]      	mov rax, qword [free_var_16]
  8782 00005586 803805                  	cmp byte [rax], T_closure 
  8783 00005589 0F8573E20000                    jne L_code_ptr_error
  8784                                  
  8785 0000558F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8786                                  
  8787 00005593 53                              push rbx
  8788                                  
  8789 00005594 FF5009                          call SOB_CLOSURE_CODE(rax)
  8790                                  
  8791 00005597 50                              	push rax
  8792 00005598 6A02                    	push 2
  8793 0000559A 488B4510                mov rax, qword [rbp + 16]
  8794 0000559E 488B00                  mov rax, qword [rax + 0]
  8795 000055A1 488B00                  mov rax, qword [rax + 0]
  8796 000055A4 488B00                  	mov rax, qword [rax]
  8797                                  .L_lambda_simple_arity_check_ok_084f:
  8798 000055A7 803805                  	cmp byte [rax], T_closure
  8799                                  
  8800 000055AA 0F8552E20000                    jne L_code_ptr_error                      ; rax <- proc
  8801                                  
  8802                                  
  8803 000055B0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8804                                  
  8805 000055B4 53                              push rbx                                  ; env pushed
  8806                                  
  8807 000055B5 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8808                                  
  8809                                          ; sagydebug
  8810                                  
  8811 000055B8 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8812                                  
  8813                                          
  8814                                          
  8815 000055BB 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8816                                  
  8817 000055BF 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8818                                  
  8819                                  
  8820 000055C4 4D89CA                          mov r10, r9
  8821 000055C7 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  8822                                          
  8823 000055CB 4D89D7                          mov r15, r10
  8824 000055CE 4983C7FF                        add r15, -1
  8825                                                                                         
  8826 000055D2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8827 000055D5 4983C404                        add r12, 4
  8828 000055D9 4983C4FF                        add r12, -1
  8829                                  
  8830 000055DD 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8831                                  .L_tc_recycle_frame_loop_0475:
  8832 000055E3 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  8833                                  
  8834 000055E7 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8835                                  
  8836                                  
  8837                                  
  8838 000055EC 41BE00000000                    mov r14, 0                                ; clean box
  8839                                  
  8840                                  
  8841 000055F2 4983C7FF                        add r15, -1           
  8842 000055F6 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8843                                  
  8844 000055FA 4983C4FF                        add r12, -1 
  8845                                  
  8846 000055FE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8847 00005602 75DF                    	jne .L_tc_recycle_frame_loop_0475
  8848                                  .L_tc_recycle_frame_done_0475:
  8849                                  ;this pop rbp in sot to the right place
  8850 00005604 4D89C7                  mov r15, r8
  8851                                  
  8852 00005607 4983C704                        add r15, 4
  8853                                  
  8854 0000560B 49C1E703                        shl r15, 3
  8855                                  
  8856 0000560F 4C01FC                          add rsp, r15
  8857 00005612 5D                      	pop rbp                                  ; restore the old rbp
  8858                                  
  8859 00005613 488B4D00                        mov rcx, qword [rbp]
  8860 00005617 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8861                                            ; rbx <- code(proc)
  8862                                  
  8863 0000561B FFE3                            jmp rbx
  8864                                  	.L_if_end_0243:
  8865 0000561D C9                      leave
  8866 0000561E 4C8B4D00                mov r9, [rbp]
  8867 00005622 C21800                  ret 8 * (3 + 0)
  8868                                  .L_lambda_opt_end_0091:	; new closure is in rax
  8869 00005625 C9                      	leave
  8870 00005626 C22000                  	ret 8 * (2 + 2)
  8871                                  .L_lambda_simple_end_03d8:	; new closure is in rax
  8872 00005629 803805                  	cmp byte [rax], T_closure 
  8873 0000562C 0F85D0E10000                    jne L_code_ptr_error
  8874                                  
  8875 00005632 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8876                                  
  8877 00005636 53                              push rbx
  8878                                  
  8879 00005637 FF5009                          call SOB_CLOSURE_CODE(rax)
  8880                                  
  8881 0000563A 48890425[F0020000]              	mov qword [free_var_94], rax
  8882 00005642 48B8-                   	mov rax, sob_void
  8882 00005644 [0000000000000000] 
  8883                                  
  8884 0000564C 4889C7                  	mov rdi, rax
  8885 0000564F E804D20000              	call print_sexpr_if_not_void
  8886                                  
  8887 00005654 48B8-                   	mov rax, qword (L_constants + 22)
  8887 00005656 [1600000000000000] 
  8888 0000565E 50                      	push rax
  8889 0000565F 6A01                    	push 1
  8890 00005661 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8891 00005666 E8DCD10000              	call malloc
  8892 0000566B 50                      	push rax
  8893 0000566C BF00000000              	mov rdi, 8 * 0	; new rib
  8894 00005671 E8D1D10000              	call malloc
  8895 00005676 50                      	push rax
  8896 00005677 BF08000000              	mov rdi, 8 * 1	; extended env
  8897 0000567C E8C6D10000              	call malloc
  8898 00005681 488B7D10                	mov rdi, ENV
  8899 00005685 BE00000000              	mov rsi, 0
  8900 0000568A BA01000000              	mov rdx, 1
  8901                                  .L_lambda_simple_env_loop_03db:	; ext_env[i + 1] <-- env[i]
  8902 0000568F 4883FE00                	cmp rsi, 0
  8903 00005693 7410                    	je .L_lambda_simple_env_end_03db
  8904 00005695 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8905 00005699 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8906 0000569D 48FFC6                  	inc rsi
  8907 000056A0 48FFC2                  	inc rdx
  8908 000056A3 EBEA                    	jmp .L_lambda_simple_env_loop_03db
  8909                                  .L_lambda_simple_env_end_03db:
  8910 000056A5 5B                      	pop rbx
  8911 000056A6 BE00000000              	mov rsi, 0
  8912                                  .L_lambda_simple_params_loop_03db:	; copy params
  8913 000056AB 4883FE00                	cmp rsi, 0
  8914 000056AF 740E                    	je .L_lambda_simple_params_end_03db
  8915 000056B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8916 000056B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8917 000056BA 48FFC6                  	inc rsi
  8918 000056BD EBEC                    	jmp .L_lambda_simple_params_loop_03db
  8919                                  .L_lambda_simple_params_end_03db:
  8920 000056BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8921 000056C2 4889C3                  	mov rbx, rax
  8922 000056C5 58                      	pop rax
  8923 000056C6 C60005                  	mov byte [rax], T_closure
  8924 000056C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8925 000056CD 48C74009[DA560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03db
  8926 000056D5 E928040000              	jmp .L_lambda_simple_end_03db
  8927                                  .L_lambda_simple_code_03db:	; lambda-simple body
  8928 000056DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8929 000056E0 740B                    	je .L_lambda_simple_arity_check_ok_0850
  8930 000056E2 FF742410                	push qword [rsp + 8 * 2]
  8931 000056E6 6A01                    	push 1
  8932 000056E8 E913D10000              	jmp L_error_incorrect_arity_simple
  8933                                  .L_lambda_simple_arity_check_ok_0850:
  8934 000056ED C8000000                	enter 0, 0
  8935 000056F1 488B4520                mov rax, qword [rbp + 32]
  8936 000056F5 BF08000000              mov rdi, 8
  8937 000056FA 4889C3                  mov rbx, rax
  8938 000056FD E845D10000              call malloc
  8939 00005702 488918                  mov qword [rax], rbx
  8940 00005705 48894520                mov qword [rbp + 32], rax
  8941 00005709 48B8-                   mov rax, sob_void
  8941 0000570B [0000000000000000] 
  8942 00005713 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8943 00005718 E82AD10000              	call malloc
  8944 0000571D 50                      	push rax
  8945 0000571E BF08000000              	mov rdi, 8 * 1	; new rib
  8946 00005723 E81FD10000              	call malloc
  8947 00005728 50                      	push rax
  8948 00005729 BF10000000              	mov rdi, 8 * 2	; extended env
  8949 0000572E E814D10000              	call malloc
  8950 00005733 488B7D10                	mov rdi, ENV
  8951 00005737 BE00000000              	mov rsi, 0
  8952 0000573C BA01000000              	mov rdx, 1
  8953                                  .L_lambda_simple_env_loop_03dc:	; ext_env[i + 1] <-- env[i]
  8954 00005741 4883FE01                	cmp rsi, 1
  8955 00005745 7410                    	je .L_lambda_simple_env_end_03dc
  8956 00005747 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8957 0000574B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8958 0000574F 48FFC6                  	inc rsi
  8959 00005752 48FFC2                  	inc rdx
  8960 00005755 EBEA                    	jmp .L_lambda_simple_env_loop_03dc
  8961                                  .L_lambda_simple_env_end_03dc:
  8962 00005757 5B                      	pop rbx
  8963 00005758 BE00000000              	mov rsi, 0
  8964                                  .L_lambda_simple_params_loop_03dc:	; copy params
  8965 0000575D 4883FE01                	cmp rsi, 1
  8966 00005761 740E                    	je .L_lambda_simple_params_end_03dc
  8967 00005763 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8968 00005768 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8969 0000576C 48FFC6                  	inc rsi
  8970 0000576F EBEC                    	jmp .L_lambda_simple_params_loop_03dc
  8971                                  .L_lambda_simple_params_end_03dc:
  8972 00005771 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8973 00005774 4889C3                  	mov rbx, rax
  8974 00005777 58                      	pop rax
  8975 00005778 C60005                  	mov byte [rax], T_closure
  8976 0000577B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8977 0000577F 48C74009[8C570000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03dc
  8978 00005787 E959010000              	jmp .L_lambda_simple_end_03dc
  8979                                  .L_lambda_simple_code_03dc:	; lambda-simple body
  8980 0000578C 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8981 00005792 740B                    	je .L_lambda_simple_arity_check_ok_0851
  8982 00005794 FF742410                	push qword [rsp + 8 * 2]
  8983 00005798 6A03                    	push 3
  8984 0000579A E961D00000              	jmp L_error_incorrect_arity_simple
  8985                                  .L_lambda_simple_arity_check_ok_0851:
  8986 0000579F C8000000                	enter 0, 0
  8987 000057A3 488B4530                mov rax, qword [rbp + 48]
  8988 000057A7 50                      	push rax
  8989 000057A8 488B0425[00000000]      	mov rax, qword [free_var_0]
  8990 000057B0 50                      	push rax
  8991 000057B1 6A02                    	push 2
  8992 000057B3 488B0425[D0020000]      	mov rax, qword [free_var_90]
  8993 000057BB 803805                  	cmp byte [rax], T_closure 
  8994 000057BE 0F853EE00000                    jne L_code_ptr_error
  8995                                  
  8996 000057C4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8997                                  
  8998 000057C8 53                              push rbx
  8999                                  
  9000 000057C9 FF5009                          call SOB_CLOSURE_CODE(rax)
  9001                                  
  9002 000057CC 483D[02000000]                  	cmp rax, sob_boolean_false
  9003 000057D2 7409                    	je .L_if_else_0244
  9004 000057D4 488B4528                mov rax, qword [rbp + 40]
  9005 000057D8 E904010000              	jmp .L_if_end_0244
  9006                                  	.L_if_else_0244:
  9007 000057DD 488B4530                	mov rax, qword [rbp + 48]
  9008 000057E1 50                      	push rax
  9009 000057E2 488B0425[88000000]      	mov rax, qword [free_var_17]
  9010 000057EA 50                      	push rax
  9011 000057EB 6A02                    	push 2
  9012 000057ED 488B0425[D8020000]      	mov rax, qword [free_var_91]
  9013 000057F5 803805                  	cmp byte [rax], T_closure 
  9014 000057F8 0F8504E00000                    jne L_code_ptr_error
  9015                                  
  9016 000057FE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9017                                  
  9018 00005802 53                              push rbx
  9019                                  
  9020 00005803 FF5009                          call SOB_CLOSURE_CODE(rax)
  9021                                  
  9022 00005806 50                              	push rax
  9023 00005807 488B4530                mov rax, qword [rbp + 48]
  9024 0000580B 50                      	push rax
  9025 0000580C 488B0425[80000000]      	mov rax, qword [free_var_16]
  9026 00005814 50                      	push rax
  9027 00005815 6A02                    	push 2
  9028 00005817 488B0425[D8020000]      	mov rax, qword [free_var_91]
  9029 0000581F 803805                  	cmp byte [rax], T_closure 
  9030 00005822 0F85DADF0000                    jne L_code_ptr_error
  9031                                  
  9032 00005828 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9033                                  
  9034 0000582C 53                              push rbx
  9035                                  
  9036 0000582D FF5009                          call SOB_CLOSURE_CODE(rax)
  9037                                  
  9038 00005830 50                              	push rax
  9039 00005831 488B4528                mov rax, qword [rbp + 40]
  9040 00005835 50                      	push rax
  9041 00005836 488B4520                mov rax, qword [rbp + 32]
  9042 0000583A 50                      	push rax
  9043 0000583B 6A03                    	push 3
  9044 0000583D 488B0425[C8020000]      	mov rax, qword [free_var_89]
  9045 00005845 803805                  	cmp byte [rax], T_closure 
  9046 00005848 0F85B4DF0000                    jne L_code_ptr_error
  9047                                  
  9048 0000584E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9049                                  
  9050 00005852 53                              push rbx
  9051                                  
  9052 00005853 FF5009                          call SOB_CLOSURE_CODE(rax)
  9053                                  
  9054 00005856 50                              	push rax
  9055 00005857 488B4520                mov rax, qword [rbp + 32]
  9056 0000585B 50                      	push rax
  9057 0000585C 6A03                    	push 3
  9058 0000585E 488B4510                mov rax, qword [rbp + 16]
  9059 00005862 488B00                  mov rax, qword [rax + 0]
  9060 00005865 488B00                  mov rax, qword [rax + 0]
  9061 00005868 488B00                  	mov rax, qword [rax]
  9062                                  .L_lambda_simple_arity_check_ok_0852:
  9063 0000586B 803805                  	cmp byte [rax], T_closure
  9064                                  
  9065 0000586E 0F858EDF0000                    jne L_code_ptr_error                      ; rax <- proc
  9066                                  
  9067                                  
  9068 00005874 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9069                                  
  9070 00005878 53                              push rbx                                  ; env pushed
  9071                                  
  9072 00005879 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9073                                  
  9074                                          ; sagydebug
  9075                                  
  9076 0000587C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9077                                  
  9078                                          
  9079                                          
  9080 0000587F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9081                                  
  9082 00005883 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9083                                  
  9084                                  
  9085 00005888 4D89CA                          mov r10, r9
  9086 0000588B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  9087                                          
  9088 0000588F 4D89D7                          mov r15, r10
  9089 00005892 4983C7FF                        add r15, -1
  9090                                                                                         
  9091 00005896 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9092 00005899 4983C404                        add r12, 4
  9093 0000589D 4983C4FF                        add r12, -1
  9094                                  
  9095 000058A1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9096                                  .L_tc_recycle_frame_loop_0476:
  9097 000058A7 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  9098                                  
  9099 000058AB 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9100                                  
  9101                                  
  9102                                  
  9103 000058B0 41BE00000000                    mov r14, 0                                ; clean box
  9104                                  
  9105                                  
  9106 000058B6 4983C7FF                        add r15, -1           
  9107 000058BA 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9108                                  
  9109 000058BE 4983C4FF                        add r12, -1 
  9110                                  
  9111 000058C2 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9112 000058C6 75DF                    	jne .L_tc_recycle_frame_loop_0476
  9113                                  .L_tc_recycle_frame_done_0476:
  9114                                  ;this pop rbp in sot to the right place
  9115 000058C8 4D89C7                  mov r15, r8
  9116                                  
  9117 000058CB 4983C704                        add r15, 4
  9118                                  
  9119 000058CF 49C1E703                        shl r15, 3
  9120                                  
  9121 000058D3 4C01FC                          add rsp, r15
  9122 000058D6 5D                      	pop rbp                                  ; restore the old rbp
  9123                                  
  9124 000058D7 488B4D00                        mov rcx, qword [rbp]
  9125 000058DB 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9126                                            ; rbx <- code(proc)
  9127                                  
  9128 000058DF FFE3                            jmp rbx
  9129                                  	.L_if_end_0244:
  9130 000058E1 C9                      	leave
  9131 000058E2 C22800                  	ret 8 * (2 + 3)
  9132                                  .L_lambda_simple_end_03dc:	; new closure is in rax
  9133 000058E5 50                      push rax
  9134 000058E6 488B4520                mov rax, qword [rbp + 32]
  9135 000058EA 8F00                    pop qword [rax]
  9136 000058EC 48B8-                   mov rax, sob_void
  9136 000058EE [0000000000000000] 
  9137                                  
  9138 000058F6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9139 000058FB E847CF0000              	call malloc
  9140 00005900 50                      	push rax
  9141 00005901 BF08000000              	mov rdi, 8 * 1	; new rib
  9142 00005906 E83CCF0000              	call malloc
  9143 0000590B 50                      	push rax
  9144 0000590C BF10000000              	mov rdi, 8 * 2	; extended env
  9145 00005911 E831CF0000              	call malloc
  9146 00005916 488B7D10                	mov rdi, ENV
  9147 0000591A BE00000000              	mov rsi, 0
  9148 0000591F BA01000000              	mov rdx, 1
  9149                                  .L_lambda_opt_env_loop_0092:	; ext_env[i + 1] <-- env[i]
  9150 00005924 4883FE01                	cmp rsi, 1
  9151 00005928 7410                    	je .L_lambda_opt_env_end_0092
  9152 0000592A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9153 0000592E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9154 00005932 48FFC6                  	inc rsi
  9155 00005935 48FFC2                  	inc rdx
  9156 00005938 EBEA                    	jmp .L_lambda_opt_env_loop_0092
  9157                                  .L_lambda_opt_env_end_0092:
  9158 0000593A 5B                      	pop rbx
  9159 0000593B BE00000000              	mov rsi, 0
  9160                                  .L_lambda_opt_params_loop_01b4:	; copy params
  9161 00005940 4883FE01                	cmp rsi, 1
  9162 00005944 740E                    	je .L_lambda_opt_params_end_01b4
  9163 00005946 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9164 0000594B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9165 0000594F 48FFC6                  	inc rsi
  9166 00005952 EBEC                    	jmp .L_lambda_opt_params_loop_01b4
  9167                                  .L_lambda_opt_params_end_01b4:
  9168 00005954 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9169 00005957 4889C3                  	mov rbx, rax
  9170 0000595A 58                      	pop rax
  9171 0000595B C60005                  	mov byte [rax], T_closure
  9172 0000595E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9173 00005962 48C74009[6F590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0092
  9174 0000596A E98F010000              	jmp .L_lambda_opt_end_0092
  9175                                  .L_lambda_opt_code_0092:
  9176 0000596F 4C8B542410              mov r10, qword [rsp+8*2]
  9177 00005974 4983FA02                cmp r10, 2
  9178 00005978 740B                    je .L_lambda_opt_arity_check_exact_0092
  9179 0000597A 4983FA02                cmp r10, 2
  9180 0000597E 7F44                    jg .L_lambda_opt_arity_check_more_0092
  9181 00005980 E98FCE0000              jmp L_error_incorrect_arity_opt
  9182                                  .L_lambda_opt_arity_check_exact_0092:
  9183 00005985 4883EC08                sub rsp, 8
  9184 00005989 BA05000000              mov rdx, 3+2
  9185 0000598E 4889E3                  mov qword rbx, rsp
  9186                                  .L_lambda_opt_params_loop_01b5:
  9187 00005991 488B4B08                mov qword rcx, [rbx+8]
  9188 00005995 48890B                  mov qword [rbx], rcx
  9189 00005998 48FFCA                  dec rdx
  9190 0000599B 4883C308                add rbx, 8
  9191 0000599F 4883FA00                cmp rdx, 0
  9192 000059A3 7402                    je .L_lambda_opt_params_end_01b5
  9193 000059A5 EBEA                    jmp .L_lambda_opt_params_loop_01b5
  9194                                  .L_lambda_opt_params_end_01b5:
  9195 000059A7 49FFC2                  inc r10
  9196 000059AA 4C89542410              mov qword [rsp+8*2], r10
  9197 000059AF 4983C202                add r10, 2
  9198 000059B3 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  9199 000059BB 4C8B4D00                mov r9, [rbp]
  9200 000059BF E996000000              jmp .L_lambda_opt_stack_adjusted_0092
  9201                                  .L_lambda_opt_arity_check_more_0092:
  9202 000059C4 4C8B6C2410              mov r13, [rsp+2*8]
  9203 000059C9 48B8-                   mov rax, sob_nil
  9203 000059CB [0100000000000000] 
  9204 000059D3 4C8B542410              mov r10, [rsp+2*8]
  9205 000059D8 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  9206 000059DD 4983EA02                sub r10, 2
  9207                                  .L_lambda_opt_stack_shrink_loop_0092:
  9208 000059E1 4983FA00                cmp r10, 0
  9209 000059E5 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0092
  9210 000059E7 4889C1                  mov rcx, rax
  9211 000059EA 498B10                  mov rdx, [r8]
  9212 000059ED BF11000000              mov rdi, 17
  9213 000059F2 E850CE0000              call malloc
  9214 000059F7 C60021                  mov byte [rax], T_pair
  9215 000059FA 48894809                mov SOB_PAIR_CDR(rax), rcx
  9216 000059FE 48895001                mov SOB_PAIR_CAR(rax), rdx
  9217 00005A02 4983E808                sub r8, 8
  9218 00005A06 49FFCA                  dec r10
  9219 00005A09 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0092
  9220                                  .L_lambda_opt_stack_shrink_loop_exit_0092:
  9221 00005A0B 4889442428              mov [rsp+8*(2+3)], rax
  9222 00005A10 41BA03000000            mov r10, 3
  9223 00005A16 4C89542410              mov [rsp+16], r10
  9224 00005A1B 4989E4                  mov r12, rsp
  9225 00005A1E 4983C428                add r12, 8*(2+3)
  9226 00005A22 4C2B6C2410              sub r13, [rsp+16]
  9227 00005A27 4D89EA                  mov r10, r13
  9228 00005A2A 49C1E203                shl r10, 3
  9229 00005A2E 4D89D7                  mov r15, r10
  9230 00005A31 4D01E2                  add r10, r12
  9231 00005A34 4C8B4C2410              mov r9, [rsp+16]
  9232 00005A39 4983C103                add r9, 3
  9233                                  .L_lambda_opt_params_loop_01b6:
  9234 00005A3D 4983F900                cmp r9, 0
  9235 00005A41 7414                    je .L_lambda_opt_params_end_01b6
  9236 00005A43 4D8B3424                mov r14, [r12]
  9237 00005A47 4D8932                  mov [r10], r14
  9238 00005A4A 4983EC08                sub r12, 8
  9239 00005A4E 4983EA08                sub r10, 8
  9240 00005A52 49FFC9                  dec r9
  9241 00005A55 EBE6                    jmp .L_lambda_opt_params_loop_01b6
  9242                                  .L_lambda_opt_params_end_01b6:
  9243 00005A57 4C01FC                  add rsp, r15
  9244                                  .L_lambda_opt_stack_adjusted_0092:
  9245 00005A5A 4C8B4D00                mov r9, [rbp]
  9246 00005A5E C8000000                enter 0, 0
  9247 00005A62 488B4530                mov rax, qword [rbp + 48]
  9248 00005A66 50                      	push rax
  9249 00005A67 488B4528                mov rax, qword [rbp + 40]
  9250 00005A6B 50                      	push rax
  9251 00005A6C 488B4520                mov rax, qword [rbp + 32]
  9252 00005A70 50                      	push rax
  9253 00005A71 6A03                    	push 3
  9254 00005A73 488B4510                mov rax, qword [rbp + 16]
  9255 00005A77 488B00                  mov rax, qword [rax + 0]
  9256 00005A7A 488B00                  mov rax, qword [rax + 0]
  9257 00005A7D 488B00                  	mov rax, qword [rax]
  9258                                  .L_lambda_simple_arity_check_ok_0853:
  9259 00005A80 803805                  	cmp byte [rax], T_closure
  9260                                  
  9261 00005A83 0F8579DD0000                    jne L_code_ptr_error                      ; rax <- proc
  9262                                  
  9263                                  
  9264 00005A89 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9265                                  
  9266 00005A8D 53                              push rbx                                  ; env pushed
  9267                                  
  9268 00005A8E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9269                                  
  9270                                          ; sagydebug
  9271                                  
  9272 00005A91 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9273                                  
  9274                                          
  9275                                          
  9276 00005A94 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9277                                  
  9278 00005A98 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9279                                  
  9280                                  
  9281 00005A9D 4D89CA                          mov r10, r9
  9282 00005AA0 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  9283                                          
  9284 00005AA4 4D89D7                          mov r15, r10
  9285 00005AA7 4983C7FF                        add r15, -1
  9286                                                                                         
  9287 00005AAB 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9288 00005AAE 4983C404                        add r12, 4
  9289 00005AB2 4983C4FF                        add r12, -1
  9290                                  
  9291 00005AB6 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9292                                  .L_tc_recycle_frame_loop_0477:
  9293 00005ABC 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  9294                                  
  9295 00005AC0 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9296                                  
  9297                                  
  9298                                  
  9299 00005AC5 41BE00000000                    mov r14, 0                                ; clean box
  9300                                  
  9301                                  
  9302 00005ACB 4983C7FF                        add r15, -1           
  9303 00005ACF 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9304                                  
  9305 00005AD3 4983C4FF                        add r12, -1 
  9306                                  
  9307 00005AD7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9308 00005ADB 75DF                    	jne .L_tc_recycle_frame_loop_0477
  9309                                  .L_tc_recycle_frame_done_0477:
  9310                                  ;this pop rbp in sot to the right place
  9311 00005ADD 4D89C7                  mov r15, r8
  9312                                  
  9313 00005AE0 4983C704                        add r15, 4
  9314                                  
  9315 00005AE4 49C1E703                        shl r15, 3
  9316                                  
  9317 00005AE8 4C01FC                          add rsp, r15
  9318 00005AEB 5D                      	pop rbp                                  ; restore the old rbp
  9319                                  
  9320 00005AEC 488B4D00                        mov rcx, qword [rbp]
  9321 00005AF0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9322                                            ; rbx <- code(proc)
  9323                                  
  9324 00005AF4 FFE3                            jmp rbx
  9325 00005AF6 C9                      leave
  9326 00005AF7 4C8B4D00                mov r9, [rbp]
  9327 00005AFB C22800                  ret 8 * (3 + 2)
  9328                                  .L_lambda_opt_end_0092:	; new closure is in rax
  9329 00005AFE C9                      	leave
  9330 00005AFF C21800                  	ret 8 * (2 + 1)
  9331                                  .L_lambda_simple_end_03db:	; new closure is in rax
  9332 00005B02 803805                  	cmp byte [rax], T_closure 
  9333 00005B05 0F85F7DC0000                    jne L_code_ptr_error
  9334                                  
  9335 00005B0B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9336                                  
  9337 00005B0F 53                              push rbx
  9338                                  
  9339 00005B10 FF5009                          call SOB_CLOSURE_CODE(rax)
  9340                                  
  9341 00005B13 48890425[F8020000]              	mov qword [free_var_95], rax
  9342 00005B1B 48B8-                   	mov rax, sob_void
  9342 00005B1D [0000000000000000] 
  9343                                  
  9344 00005B25 4889C7                  	mov rdi, rax
  9345 00005B28 E82BCD0000              	call print_sexpr_if_not_void
  9346                                  
  9347 00005B2D 48B8-                   	mov rax, qword (L_constants + 22)
  9347 00005B2F [1600000000000000] 
  9348 00005B37 50                      	push rax
  9349 00005B38 6A01                    	push 1
  9350 00005B3A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9351 00005B3F E803CD0000              	call malloc
  9352 00005B44 50                      	push rax
  9353 00005B45 BF00000000              	mov rdi, 8 * 0	; new rib
  9354 00005B4A E8F8CC0000              	call malloc
  9355 00005B4F 50                      	push rax
  9356 00005B50 BF08000000              	mov rdi, 8 * 1	; extended env
  9357 00005B55 E8EDCC0000              	call malloc
  9358 00005B5A 488B7D10                	mov rdi, ENV
  9359 00005B5E BE00000000              	mov rsi, 0
  9360 00005B63 BA01000000              	mov rdx, 1
  9361                                  .L_lambda_simple_env_loop_03dd:	; ext_env[i + 1] <-- env[i]
  9362 00005B68 4883FE00                	cmp rsi, 0
  9363 00005B6C 7410                    	je .L_lambda_simple_env_end_03dd
  9364 00005B6E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9365 00005B72 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9366 00005B76 48FFC6                  	inc rsi
  9367 00005B79 48FFC2                  	inc rdx
  9368 00005B7C EBEA                    	jmp .L_lambda_simple_env_loop_03dd
  9369                                  .L_lambda_simple_env_end_03dd:
  9370 00005B7E 5B                      	pop rbx
  9371 00005B7F BE00000000              	mov rsi, 0
  9372                                  .L_lambda_simple_params_loop_03dd:	; copy params
  9373 00005B84 4883FE00                	cmp rsi, 0
  9374 00005B88 740E                    	je .L_lambda_simple_params_end_03dd
  9375 00005B8A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9376 00005B8F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9377 00005B93 48FFC6                  	inc rsi
  9378 00005B96 EBEC                    	jmp .L_lambda_simple_params_loop_03dd
  9379                                  .L_lambda_simple_params_end_03dd:
  9380 00005B98 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9381 00005B9B 4889C3                  	mov rbx, rax
  9382 00005B9E 58                      	pop rax
  9383 00005B9F C60005                  	mov byte [rax], T_closure
  9384 00005BA2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9385 00005BA6 48C74009[B35B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03dd
  9386 00005BAE E96B040000              	jmp .L_lambda_simple_end_03dd
  9387                                  .L_lambda_simple_code_03dd:	; lambda-simple body
  9388 00005BB3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9389 00005BB9 740B                    	je .L_lambda_simple_arity_check_ok_0854
  9390 00005BBB FF742410                	push qword [rsp + 8 * 2]
  9391 00005BBF 6A01                    	push 1
  9392 00005BC1 E93ACC0000              	jmp L_error_incorrect_arity_simple
  9393                                  .L_lambda_simple_arity_check_ok_0854:
  9394 00005BC6 C8000000                	enter 0, 0
  9395 00005BCA 488B4520                mov rax, qword [rbp + 32]
  9396 00005BCE BF08000000              mov rdi, 8
  9397 00005BD3 4889C3                  mov rbx, rax
  9398 00005BD6 E86CCC0000              call malloc
  9399 00005BDB 488918                  mov qword [rax], rbx
  9400 00005BDE 48894520                mov qword [rbp + 32], rax
  9401 00005BE2 48B8-                   mov rax, sob_void
  9401 00005BE4 [0000000000000000] 
  9402 00005BEC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9403 00005BF1 E851CC0000              	call malloc
  9404 00005BF6 50                      	push rax
  9405 00005BF7 BF08000000              	mov rdi, 8 * 1	; new rib
  9406 00005BFC E846CC0000              	call malloc
  9407 00005C01 50                      	push rax
  9408 00005C02 BF10000000              	mov rdi, 8 * 2	; extended env
  9409 00005C07 E83BCC0000              	call malloc
  9410 00005C0C 488B7D10                	mov rdi, ENV
  9411 00005C10 BE00000000              	mov rsi, 0
  9412 00005C15 BA01000000              	mov rdx, 1
  9413                                  .L_lambda_simple_env_loop_03de:	; ext_env[i + 1] <-- env[i]
  9414 00005C1A 4883FE01                	cmp rsi, 1
  9415 00005C1E 7410                    	je .L_lambda_simple_env_end_03de
  9416 00005C20 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9417 00005C24 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9418 00005C28 48FFC6                  	inc rsi
  9419 00005C2B 48FFC2                  	inc rdx
  9420 00005C2E EBEA                    	jmp .L_lambda_simple_env_loop_03de
  9421                                  .L_lambda_simple_env_end_03de:
  9422 00005C30 5B                      	pop rbx
  9423 00005C31 BE00000000              	mov rsi, 0
  9424                                  .L_lambda_simple_params_loop_03de:	; copy params
  9425 00005C36 4883FE01                	cmp rsi, 1
  9426 00005C3A 740E                    	je .L_lambda_simple_params_end_03de
  9427 00005C3C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9428 00005C41 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9429 00005C45 48FFC6                  	inc rsi
  9430 00005C48 EBEC                    	jmp .L_lambda_simple_params_loop_03de
  9431                                  .L_lambda_simple_params_end_03de:
  9432 00005C4A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9433 00005C4D 4889C3                  	mov rbx, rax
  9434 00005C50 58                      	pop rax
  9435 00005C51 C60005                  	mov byte [rax], T_closure
  9436 00005C54 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9437 00005C58 48C74009[655C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03de
  9438 00005C60 E99C010000              	jmp .L_lambda_simple_end_03de
  9439                                  .L_lambda_simple_code_03de:	; lambda-simple body
  9440 00005C65 48837C241003            	cmp qword [rsp + 8 * 2], 3
  9441 00005C6B 740B                    	je .L_lambda_simple_arity_check_ok_0855
  9442 00005C6D FF742410                	push qword [rsp + 8 * 2]
  9443 00005C71 6A03                    	push 3
  9444 00005C73 E988CB0000              	jmp L_error_incorrect_arity_simple
  9445                                  .L_lambda_simple_arity_check_ok_0855:
  9446 00005C78 C8000000                	enter 0, 0
  9447 00005C7C 488B4530                mov rax, qword [rbp + 48]
  9448 00005C80 50                      	push rax
  9449 00005C81 488B0425[00000000]      	mov rax, qword [free_var_0]
  9450 00005C89 50                      	push rax
  9451 00005C8A 6A02                    	push 2
  9452 00005C8C 488B0425[D0020000]      	mov rax, qword [free_var_90]
  9453 00005C94 803805                  	cmp byte [rax], T_closure 
  9454 00005C97 0F8565DB0000                    jne L_code_ptr_error
  9455                                  
  9456 00005C9D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9457                                  
  9458 00005CA1 53                              push rbx
  9459                                  
  9460 00005CA2 FF5009                          call SOB_CLOSURE_CODE(rax)
  9461                                  
  9462 00005CA5 483D[02000000]                  	cmp rax, sob_boolean_false
  9463 00005CAB 7409                    	je .L_if_else_0245
  9464 00005CAD 488B4528                mov rax, qword [rbp + 40]
  9465 00005CB1 E947010000              	jmp .L_if_end_0245
  9466                                  	.L_if_else_0245:
  9467 00005CB6 48B8-                   		mov rax, qword (L_constants + 1)
  9467 00005CB8 [0100000000000000] 
  9468 00005CC0 50                      	push rax
  9469 00005CC1 488B4530                mov rax, qword [rbp + 48]
  9470 00005CC5 50                      	push rax
  9471 00005CC6 488B0425[88000000]      	mov rax, qword [free_var_17]
  9472 00005CCE 50                      	push rax
  9473 00005CCF 6A02                    	push 2
  9474 00005CD1 488B0425[D8020000]      	mov rax, qword [free_var_91]
  9475 00005CD9 803805                  	cmp byte [rax], T_closure 
  9476 00005CDC 0F8520DB0000                    jne L_code_ptr_error
  9477                                  
  9478 00005CE2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9479                                  
  9480 00005CE6 53                              push rbx
  9481                                  
  9482 00005CE7 FF5009                          call SOB_CLOSURE_CODE(rax)
  9483                                  
  9484 00005CEA 50                              	push rax
  9485 00005CEB 488B4528                mov rax, qword [rbp + 40]
  9486 00005CEF 50                      	push rax
  9487 00005CF0 488B4520                mov rax, qword [rbp + 32]
  9488 00005CF4 50                      	push rax
  9489 00005CF5 6A03                    	push 3
  9490 00005CF7 488B4510                mov rax, qword [rbp + 16]
  9491 00005CFB 488B00                  mov rax, qword [rax + 0]
  9492 00005CFE 488B00                  mov rax, qword [rax + 0]
  9493 00005D01 488B00                  	mov rax, qword [rax]
  9494 00005D04 803805                  	cmp byte [rax], T_closure 
  9495 00005D07 0F85F5DA0000                    jne L_code_ptr_error
  9496                                  
  9497 00005D0D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9498                                  
  9499 00005D11 53                              push rbx
  9500                                  
  9501 00005D12 FF5009                          call SOB_CLOSURE_CODE(rax)
  9502                                  
  9503 00005D15 50                              	push rax
  9504 00005D16 6A02                    	push 2
  9505 00005D18 488B0425[68000000]      	mov rax, qword [free_var_13]
  9506 00005D20 803805                  	cmp byte [rax], T_closure 
  9507 00005D23 0F85D9DA0000                    jne L_code_ptr_error
  9508                                  
  9509 00005D29 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9510                                  
  9511 00005D2D 53                              push rbx
  9512                                  
  9513 00005D2E FF5009                          call SOB_CLOSURE_CODE(rax)
  9514                                  
  9515 00005D31 50                              	push rax
  9516 00005D32 488B4530                mov rax, qword [rbp + 48]
  9517 00005D36 50                      	push rax
  9518 00005D37 488B0425[80000000]      	mov rax, qword [free_var_16]
  9519 00005D3F 50                      	push rax
  9520 00005D40 6A02                    	push 2
  9521 00005D42 488B0425[D8020000]      	mov rax, qword [free_var_91]
  9522 00005D4A 803805                  	cmp byte [rax], T_closure 
  9523 00005D4D 0F85AFDA0000                    jne L_code_ptr_error
  9524                                  
  9525 00005D53 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9526                                  
  9527 00005D57 53                              push rbx
  9528                                  
  9529 00005D58 FF5009                          call SOB_CLOSURE_CODE(rax)
  9530                                  
  9531 00005D5B 50                              	push rax
  9532 00005D5C 6A02                    	push 2
  9533 00005D5E 488B0425[F0020000]      	mov rax, qword [free_var_94]
  9534 00005D66 803805                  	cmp byte [rax], T_closure 
  9535 00005D69 0F8593DA0000                    jne L_code_ptr_error
  9536                                  
  9537 00005D6F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9538                                  
  9539 00005D73 53                              push rbx
  9540                                  
  9541 00005D74 FF5009                          call SOB_CLOSURE_CODE(rax)
  9542                                  
  9543 00005D77 50                              	push rax
  9544 00005D78 488B4520                mov rax, qword [rbp + 32]
  9545 00005D7C 50                      	push rax
  9546 00005D7D 6A02                    	push 2
  9547 00005D7F 488B0425[C8020000]      	mov rax, qword [free_var_89]
  9548                                  .L_lambda_simple_arity_check_ok_0856:
  9549 00005D87 803805                  	cmp byte [rax], T_closure
  9550                                  
  9551 00005D8A 0F8572DA0000                    jne L_code_ptr_error                      ; rax <- proc
  9552                                  
  9553                                  
  9554 00005D90 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9555                                  
  9556 00005D94 53                              push rbx                                  ; env pushed
  9557                                  
  9558 00005D95 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9559                                  
  9560                                          ; sagydebug
  9561                                  
  9562 00005D98 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9563                                  
  9564                                          
  9565                                          
  9566 00005D9B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9567                                  
  9568 00005D9F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9569                                  
  9570                                  
  9571 00005DA4 4D89CA                          mov r10, r9
  9572 00005DA7 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  9573                                          
  9574 00005DAB 4D89D7                          mov r15, r10
  9575 00005DAE 4983C7FF                        add r15, -1
  9576                                                                                         
  9577 00005DB2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9578 00005DB5 4983C404                        add r12, 4
  9579 00005DB9 4983C4FF                        add r12, -1
  9580                                  
  9581 00005DBD 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9582                                  .L_tc_recycle_frame_loop_0478:
  9583 00005DC3 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  9584                                  
  9585 00005DC7 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9586                                  
  9587                                  
  9588                                  
  9589 00005DCC 41BE00000000                    mov r14, 0                                ; clean box
  9590                                  
  9591                                  
  9592 00005DD2 4983C7FF                        add r15, -1           
  9593 00005DD6 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9594                                  
  9595 00005DDA 4983C4FF                        add r12, -1 
  9596                                  
  9597 00005DDE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9598 00005DE2 75DF                    	jne .L_tc_recycle_frame_loop_0478
  9599                                  .L_tc_recycle_frame_done_0478:
  9600                                  ;this pop rbp in sot to the right place
  9601 00005DE4 4D89C7                  mov r15, r8
  9602                                  
  9603 00005DE7 4983C704                        add r15, 4
  9604                                  
  9605 00005DEB 49C1E703                        shl r15, 3
  9606                                  
  9607 00005DEF 4C01FC                          add rsp, r15
  9608 00005DF2 5D                      	pop rbp                                  ; restore the old rbp
  9609                                  
  9610 00005DF3 488B4D00                        mov rcx, qword [rbp]
  9611 00005DF7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9612                                            ; rbx <- code(proc)
  9613                                  
  9614 00005DFB FFE3                            jmp rbx
  9615                                  	.L_if_end_0245:
  9616 00005DFD C9                      	leave
  9617 00005DFE C22800                  	ret 8 * (2 + 3)
  9618                                  .L_lambda_simple_end_03de:	; new closure is in rax
  9619 00005E01 50                      push rax
  9620 00005E02 488B4520                mov rax, qword [rbp + 32]
  9621 00005E06 8F00                    pop qword [rax]
  9622 00005E08 48B8-                   mov rax, sob_void
  9622 00005E0A [0000000000000000] 
  9623                                  
  9624 00005E12 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9625 00005E17 E82BCA0000              	call malloc
  9626 00005E1C 50                      	push rax
  9627 00005E1D BF08000000              	mov rdi, 8 * 1	; new rib
  9628 00005E22 E820CA0000              	call malloc
  9629 00005E27 50                      	push rax
  9630 00005E28 BF10000000              	mov rdi, 8 * 2	; extended env
  9631 00005E2D E815CA0000              	call malloc
  9632 00005E32 488B7D10                	mov rdi, ENV
  9633 00005E36 BE00000000              	mov rsi, 0
  9634 00005E3B BA01000000              	mov rdx, 1
  9635                                  .L_lambda_opt_env_loop_0093:	; ext_env[i + 1] <-- env[i]
  9636 00005E40 4883FE01                	cmp rsi, 1
  9637 00005E44 7410                    	je .L_lambda_opt_env_end_0093
  9638 00005E46 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9639 00005E4A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9640 00005E4E 48FFC6                  	inc rsi
  9641 00005E51 48FFC2                  	inc rdx
  9642 00005E54 EBEA                    	jmp .L_lambda_opt_env_loop_0093
  9643                                  .L_lambda_opt_env_end_0093:
  9644 00005E56 5B                      	pop rbx
  9645 00005E57 BE00000000              	mov rsi, 0
  9646                                  .L_lambda_opt_params_loop_01b7:	; copy params
  9647 00005E5C 4883FE01                	cmp rsi, 1
  9648 00005E60 740E                    	je .L_lambda_opt_params_end_01b7
  9649 00005E62 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9650 00005E67 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9651 00005E6B 48FFC6                  	inc rsi
  9652 00005E6E EBEC                    	jmp .L_lambda_opt_params_loop_01b7
  9653                                  .L_lambda_opt_params_end_01b7:
  9654 00005E70 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9655 00005E73 4889C3                  	mov rbx, rax
  9656 00005E76 58                      	pop rax
  9657 00005E77 C60005                  	mov byte [rax], T_closure
  9658 00005E7A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9659 00005E7E 48C74009[8B5E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0093
  9660 00005E86 E98F010000              	jmp .L_lambda_opt_end_0093
  9661                                  .L_lambda_opt_code_0093:
  9662 00005E8B 4C8B542410              mov r10, qword [rsp+8*2]
  9663 00005E90 4983FA02                cmp r10, 2
  9664 00005E94 740B                    je .L_lambda_opt_arity_check_exact_0093
  9665 00005E96 4983FA02                cmp r10, 2
  9666 00005E9A 7F44                    jg .L_lambda_opt_arity_check_more_0093
  9667 00005E9C E973C90000              jmp L_error_incorrect_arity_opt
  9668                                  .L_lambda_opt_arity_check_exact_0093:
  9669 00005EA1 4883EC08                sub rsp, 8
  9670 00005EA5 BA05000000              mov rdx, 3+2
  9671 00005EAA 4889E3                  mov qword rbx, rsp
  9672                                  .L_lambda_opt_params_loop_01b8:
  9673 00005EAD 488B4B08                mov qword rcx, [rbx+8]
  9674 00005EB1 48890B                  mov qword [rbx], rcx
  9675 00005EB4 48FFCA                  dec rdx
  9676 00005EB7 4883C308                add rbx, 8
  9677 00005EBB 4883FA00                cmp rdx, 0
  9678 00005EBF 7402                    je .L_lambda_opt_params_end_01b8
  9679 00005EC1 EBEA                    jmp .L_lambda_opt_params_loop_01b8
  9680                                  .L_lambda_opt_params_end_01b8:
  9681 00005EC3 49FFC2                  inc r10
  9682 00005EC6 4C89542410              mov qword [rsp+8*2], r10
  9683 00005ECB 4983C202                add r10, 2
  9684 00005ECF 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  9685 00005ED7 4C8B4D00                mov r9, [rbp]
  9686 00005EDB E996000000              jmp .L_lambda_opt_stack_adjusted_0093
  9687                                  .L_lambda_opt_arity_check_more_0093:
  9688 00005EE0 4C8B6C2410              mov r13, [rsp+2*8]
  9689 00005EE5 48B8-                   mov rax, sob_nil
  9689 00005EE7 [0100000000000000] 
  9690 00005EEF 4C8B542410              mov r10, [rsp+2*8]
  9691 00005EF4 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  9692 00005EF9 4983EA02                sub r10, 2
  9693                                  .L_lambda_opt_stack_shrink_loop_0093:
  9694 00005EFD 4983FA00                cmp r10, 0
  9695 00005F01 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0093
  9696 00005F03 4889C1                  mov rcx, rax
  9697 00005F06 498B10                  mov rdx, [r8]
  9698 00005F09 BF11000000              mov rdi, 17
  9699 00005F0E E834C90000              call malloc
  9700 00005F13 C60021                  mov byte [rax], T_pair
  9701 00005F16 48894809                mov SOB_PAIR_CDR(rax), rcx
  9702 00005F1A 48895001                mov SOB_PAIR_CAR(rax), rdx
  9703 00005F1E 4983E808                sub r8, 8
  9704 00005F22 49FFCA                  dec r10
  9705 00005F25 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0093
  9706                                  .L_lambda_opt_stack_shrink_loop_exit_0093:
  9707 00005F27 4889442428              mov [rsp+8*(2+3)], rax
  9708 00005F2C 41BA03000000            mov r10, 3
  9709 00005F32 4C89542410              mov [rsp+16], r10
  9710 00005F37 4989E4                  mov r12, rsp
  9711 00005F3A 4983C428                add r12, 8*(2+3)
  9712 00005F3E 4C2B6C2410              sub r13, [rsp+16]
  9713 00005F43 4D89EA                  mov r10, r13
  9714 00005F46 49C1E203                shl r10, 3
  9715 00005F4A 4D89D7                  mov r15, r10
  9716 00005F4D 4D01E2                  add r10, r12
  9717 00005F50 4C8B4C2410              mov r9, [rsp+16]
  9718 00005F55 4983C103                add r9, 3
  9719                                  .L_lambda_opt_params_loop_01b9:
  9720 00005F59 4983F900                cmp r9, 0
  9721 00005F5D 7414                    je .L_lambda_opt_params_end_01b9
  9722 00005F5F 4D8B3424                mov r14, [r12]
  9723 00005F63 4D8932                  mov [r10], r14
  9724 00005F66 4983EC08                sub r12, 8
  9725 00005F6A 4983EA08                sub r10, 8
  9726 00005F6E 49FFC9                  dec r9
  9727 00005F71 EBE6                    jmp .L_lambda_opt_params_loop_01b9
  9728                                  .L_lambda_opt_params_end_01b9:
  9729 00005F73 4C01FC                  add rsp, r15
  9730                                  .L_lambda_opt_stack_adjusted_0093:
  9731 00005F76 4C8B4D00                mov r9, [rbp]
  9732 00005F7A C8000000                enter 0, 0
  9733 00005F7E 488B4530                mov rax, qword [rbp + 48]
  9734 00005F82 50                      	push rax
  9735 00005F83 488B4528                mov rax, qword [rbp + 40]
  9736 00005F87 50                      	push rax
  9737 00005F88 488B4520                mov rax, qword [rbp + 32]
  9738 00005F8C 50                      	push rax
  9739 00005F8D 6A03                    	push 3
  9740 00005F8F 488B4510                mov rax, qword [rbp + 16]
  9741 00005F93 488B00                  mov rax, qword [rax + 0]
  9742 00005F96 488B00                  mov rax, qword [rax + 0]
  9743 00005F99 488B00                  	mov rax, qword [rax]
  9744                                  .L_lambda_simple_arity_check_ok_0857:
  9745 00005F9C 803805                  	cmp byte [rax], T_closure
  9746                                  
  9747 00005F9F 0F855DD80000                    jne L_code_ptr_error                      ; rax <- proc
  9748                                  
  9749                                  
  9750 00005FA5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9751                                  
  9752 00005FA9 53                              push rbx                                  ; env pushed
  9753                                  
  9754 00005FAA FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9755                                  
  9756                                          ; sagydebug
  9757                                  
  9758 00005FAD FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9759                                  
  9760                                          
  9761                                          
  9762 00005FB0 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9763                                  
  9764 00005FB4 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9765                                  
  9766                                  
  9767 00005FB9 4D89CA                          mov r10, r9
  9768 00005FBC 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  9769                                          
  9770 00005FC0 4D89D7                          mov r15, r10
  9771 00005FC3 4983C7FF                        add r15, -1
  9772                                                                                         
  9773 00005FC7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9774 00005FCA 4983C404                        add r12, 4
  9775 00005FCE 4983C4FF                        add r12, -1
  9776                                  
  9777 00005FD2 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9778                                  .L_tc_recycle_frame_loop_0479:
  9779 00005FD8 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  9780                                  
  9781 00005FDC 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9782                                  
  9783                                  
  9784                                  
  9785 00005FE1 41BE00000000                    mov r14, 0                                ; clean box
  9786                                  
  9787                                  
  9788 00005FE7 4983C7FF                        add r15, -1           
  9789 00005FEB 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9790                                  
  9791 00005FEF 4983C4FF                        add r12, -1 
  9792                                  
  9793 00005FF3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9794 00005FF7 75DF                    	jne .L_tc_recycle_frame_loop_0479
  9795                                  .L_tc_recycle_frame_done_0479:
  9796                                  ;this pop rbp in sot to the right place
  9797 00005FF9 4D89C7                  mov r15, r8
  9798                                  
  9799 00005FFC 4983C704                        add r15, 4
  9800                                  
  9801 00006000 49C1E703                        shl r15, 3
  9802                                  
  9803 00006004 4C01FC                          add rsp, r15
  9804 00006007 5D                      	pop rbp                                  ; restore the old rbp
  9805                                  
  9806 00006008 488B4D00                        mov rcx, qword [rbp]
  9807 0000600C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9808                                            ; rbx <- code(proc)
  9809                                  
  9810 00006010 FFE3                            jmp rbx
  9811 00006012 C9                      leave
  9812 00006013 4C8B4D00                mov r9, [rbp]
  9813 00006017 C22800                  ret 8 * (3 + 2)
  9814                                  .L_lambda_opt_end_0093:	; new closure is in rax
  9815 0000601A C9                      	leave
  9816 0000601B C21800                  	ret 8 * (2 + 1)
  9817                                  .L_lambda_simple_end_03dd:	; new closure is in rax
  9818 0000601E 803805                  	cmp byte [rax], T_closure 
  9819 00006021 0F85DBD70000                    jne L_code_ptr_error
  9820                                  
  9821 00006027 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9822                                  
  9823 0000602B 53                              push rbx
  9824                                  
  9825 0000602C FF5009                          call SOB_CLOSURE_CODE(rax)
  9826                                  
  9827 0000602F 48890425[00030000]              	mov qword [free_var_96], rax
  9828 00006037 48B8-                   	mov rax, sob_void
  9828 00006039 [0000000000000000] 
  9829                                  
  9830 00006041 4889C7                  	mov rdi, rax
  9831 00006044 E80FC80000              	call print_sexpr_if_not_void
  9832                                  
  9833 00006049 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9834 0000604E E8F4C70000              	call malloc
  9835 00006053 50                      	push rax
  9836 00006054 BF00000000              	mov rdi, 8 * 0	; new rib
  9837 00006059 E8E9C70000              	call malloc
  9838 0000605E 50                      	push rax
  9839 0000605F BF08000000              	mov rdi, 8 * 1	; extended env
  9840 00006064 E8DEC70000              	call malloc
  9841 00006069 488B7D10                	mov rdi, ENV
  9842 0000606D BE00000000              	mov rsi, 0
  9843 00006072 BA01000000              	mov rdx, 1
  9844                                  .L_lambda_simple_env_loop_03df:	; ext_env[i + 1] <-- env[i]
  9845 00006077 4883FE00                	cmp rsi, 0
  9846 0000607B 7410                    	je .L_lambda_simple_env_end_03df
  9847 0000607D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9848 00006081 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9849 00006085 48FFC6                  	inc rsi
  9850 00006088 48FFC2                  	inc rdx
  9851 0000608B EBEA                    	jmp .L_lambda_simple_env_loop_03df
  9852                                  .L_lambda_simple_env_end_03df:
  9853 0000608D 5B                      	pop rbx
  9854 0000608E BE00000000              	mov rsi, 0
  9855                                  .L_lambda_simple_params_loop_03df:	; copy params
  9856 00006093 4883FE00                	cmp rsi, 0
  9857 00006097 740E                    	je .L_lambda_simple_params_end_03df
  9858 00006099 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9859 0000609E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9860 000060A2 48FFC6                  	inc rsi
  9861 000060A5 EBEC                    	jmp .L_lambda_simple_params_loop_03df
  9862                                  .L_lambda_simple_params_end_03df:
  9863 000060A7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9864 000060AA 4889C3                  	mov rbx, rax
  9865 000060AD 58                      	pop rax
  9866 000060AE C60005                  	mov byte [rax], T_closure
  9867 000060B1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9868 000060B5 48C74009[C2600000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03df
  9869 000060BD E9B1000000              	jmp .L_lambda_simple_end_03df
  9870                                  .L_lambda_simple_code_03df:	; lambda-simple body
  9871 000060C2 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9872 000060C8 740B                    	je .L_lambda_simple_arity_check_ok_0858
  9873 000060CA FF742410                	push qword [rsp + 8 * 2]
  9874 000060CE 6A00                    	push 0
  9875 000060D0 E92BC70000              	jmp L_error_incorrect_arity_simple
  9876                                  .L_lambda_simple_arity_check_ok_0858:
  9877 000060D5 C8000000                	enter 0, 0
  9878 000060D9 48B8-                   	mov rax, qword (L_constants + 67)
  9878 000060DB [4300000000000000] 
  9879 000060E3 50                      	push rax
  9880 000060E4 48B8-                   	mov rax, qword (L_constants + 58)
  9880 000060E6 [3A00000000000000] 
  9881 000060EE 50                      	push rax
  9882 000060EF 6A02                    	push 2
  9883 000060F1 488B0425[30010000]      	mov rax, qword [free_var_38]
  9884                                  .L_lambda_simple_arity_check_ok_0859:
  9885 000060F9 803805                  	cmp byte [rax], T_closure
  9886                                  
  9887 000060FC 0F8500D70000                    jne L_code_ptr_error                      ; rax <- proc
  9888                                  
  9889                                  
  9890 00006102 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9891                                  
  9892 00006106 53                              push rbx                                  ; env pushed
  9893                                  
  9894 00006107 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9895                                  
  9896                                          ; sagydebug
  9897                                  
  9898 0000610A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9899                                  
  9900                                          
  9901                                          
  9902 0000610D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9903                                  
  9904 00006111 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9905                                  
  9906                                  
  9907 00006116 4D89CA                          mov r10, r9
  9908 00006119 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
  9909                                          
  9910 0000611D 4D89D7                          mov r15, r10
  9911 00006120 4983C7FF                        add r15, -1
  9912                                                                                         
  9913 00006124 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9914 00006127 4983C404                        add r12, 4
  9915 0000612B 4983C4FF                        add r12, -1
  9916                                  
  9917 0000612F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9918                                  .L_tc_recycle_frame_loop_047a:
  9919 00006135 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
  9920                                  
  9921 00006139 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9922                                  
  9923                                  
  9924                                  
  9925 0000613E 41BE00000000                    mov r14, 0                                ; clean box
  9926                                  
  9927                                  
  9928 00006144 4983C7FF                        add r15, -1           
  9929 00006148 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9930                                  
  9931 0000614C 4983C4FF                        add r12, -1 
  9932                                  
  9933 00006150 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9934 00006154 75DF                    	jne .L_tc_recycle_frame_loop_047a
  9935                                  .L_tc_recycle_frame_done_047a:
  9936                                  ;this pop rbp in sot to the right place
  9937 00006156 4D89C7                  mov r15, r8
  9938                                  
  9939 00006159 4983C704                        add r15, 4
  9940                                  
  9941 0000615D 49C1E703                        shl r15, 3
  9942                                  
  9943 00006161 4C01FC                          add rsp, r15
  9944 00006164 5D                      	pop rbp                                  ; restore the old rbp
  9945                                  
  9946 00006165 488B4D00                        mov rcx, qword [rbp]
  9947 00006169 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9948                                            ; rbx <- code(proc)
  9949                                  
  9950 0000616D FFE3                            jmp rbx
  9951 0000616F C9                      	leave
  9952 00006170 C21000                  	ret 8 * (2 + 0)
  9953                                  .L_lambda_simple_end_03df:	; new closure is in rax
  9954 00006173 50                      	push rax
  9955 00006174 6A01                    	push 1
  9956 00006176 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9957 0000617B E8C7C60000              	call malloc
  9958 00006180 50                      	push rax
  9959 00006181 BF00000000              	mov rdi, 8 * 0	; new rib
  9960 00006186 E8BCC60000              	call malloc
  9961 0000618B 50                      	push rax
  9962 0000618C BF08000000              	mov rdi, 8 * 1	; extended env
  9963 00006191 E8B1C60000              	call malloc
  9964 00006196 488B7D10                	mov rdi, ENV
  9965 0000619A BE00000000              	mov rsi, 0
  9966 0000619F BA01000000              	mov rdx, 1
  9967                                  .L_lambda_simple_env_loop_03e0:	; ext_env[i + 1] <-- env[i]
  9968 000061A4 4883FE00                	cmp rsi, 0
  9969 000061A8 7410                    	je .L_lambda_simple_env_end_03e0
  9970 000061AA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9971 000061AE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9972 000061B2 48FFC6                  	inc rsi
  9973 000061B5 48FFC2                  	inc rdx
  9974 000061B8 EBEA                    	jmp .L_lambda_simple_env_loop_03e0
  9975                                  .L_lambda_simple_env_end_03e0:
  9976 000061BA 5B                      	pop rbx
  9977 000061BB BE00000000              	mov rsi, 0
  9978                                  .L_lambda_simple_params_loop_03e0:	; copy params
  9979 000061C0 4883FE00                	cmp rsi, 0
  9980 000061C4 740E                    	je .L_lambda_simple_params_end_03e0
  9981 000061C6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9982 000061CB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9983 000061CF 48FFC6                  	inc rsi
  9984 000061D2 EBEC                    	jmp .L_lambda_simple_params_loop_03e0
  9985                                  .L_lambda_simple_params_end_03e0:
  9986 000061D4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9987 000061D7 4889C3                  	mov rbx, rax
  9988 000061DA 58                      	pop rax
  9989 000061DB C60005                  	mov byte [rax], T_closure
  9990 000061DE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9991 000061E2 48C74009[EF610000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e0
  9992 000061EA E9D7080000              	jmp .L_lambda_simple_end_03e0
  9993                                  .L_lambda_simple_code_03e0:	; lambda-simple body
  9994 000061EF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9995 000061F5 740B                    	je .L_lambda_simple_arity_check_ok_085a
  9996 000061F7 FF742410                	push qword [rsp + 8 * 2]
  9997 000061FB 6A01                    	push 1
  9998 000061FD E9FEC50000              	jmp L_error_incorrect_arity_simple
  9999                                  .L_lambda_simple_arity_check_ok_085a:
 10000 00006202 C8000000                	enter 0, 0
 10001 00006206 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10002 0000620B E837C60000              	call malloc
 10003 00006210 50                      	push rax
 10004 00006211 BF08000000              	mov rdi, 8 * 1	; new rib
 10005 00006216 E82CC60000              	call malloc
 10006 0000621B 50                      	push rax
 10007 0000621C BF10000000              	mov rdi, 8 * 2	; extended env
 10008 00006221 E821C60000              	call malloc
 10009 00006226 488B7D10                	mov rdi, ENV
 10010 0000622A BE00000000              	mov rsi, 0
 10011 0000622F BA01000000              	mov rdx, 1
 10012                                  .L_lambda_simple_env_loop_03e1:	; ext_env[i + 1] <-- env[i]
 10013 00006234 4883FE01                	cmp rsi, 1
 10014 00006238 7410                    	je .L_lambda_simple_env_end_03e1
 10015 0000623A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10016 0000623E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10017 00006242 48FFC6                  	inc rsi
 10018 00006245 48FFC2                  	inc rdx
 10019 00006248 EBEA                    	jmp .L_lambda_simple_env_loop_03e1
 10020                                  .L_lambda_simple_env_end_03e1:
 10021 0000624A 5B                      	pop rbx
 10022 0000624B BE00000000              	mov rsi, 0
 10023                                  .L_lambda_simple_params_loop_03e1:	; copy params
 10024 00006250 4883FE01                	cmp rsi, 1
 10025 00006254 740E                    	je .L_lambda_simple_params_end_03e1
 10026 00006256 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10027 0000625B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10028 0000625F 48FFC6                  	inc rsi
 10029 00006262 EBEC                    	jmp .L_lambda_simple_params_loop_03e1
 10030                                  .L_lambda_simple_params_end_03e1:
 10031 00006264 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10032 00006267 4889C3                  	mov rbx, rax
 10033 0000626A 58                      	pop rax
 10034 0000626B C60005                  	mov byte [rax], T_closure
 10035 0000626E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10036 00006272 48C74009[7F620000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e1
 10037 0000627A E927050000              	jmp .L_lambda_simple_end_03e1
 10038                                  .L_lambda_simple_code_03e1:	; lambda-simple body
 10039 0000627F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10040 00006285 740B                    	je .L_lambda_simple_arity_check_ok_085b
 10041 00006287 FF742410                	push qword [rsp + 8 * 2]
 10042 0000628B 6A02                    	push 2
 10043 0000628D E96EC50000              	jmp L_error_incorrect_arity_simple
 10044                                  .L_lambda_simple_arity_check_ok_085b:
 10045 00006292 C8000000                	enter 0, 0
 10046 00006296 488B4520                mov rax, qword [rbp + 32]
 10047 0000629A 50                      	push rax
 10048 0000629B 6A01                    	push 1
 10049 0000629D 488B0425[48000000]      	mov rax, qword [free_var_9]
 10050 000062A5 803805                  	cmp byte [rax], T_closure 
 10051 000062A8 0F8554D50000                    jne L_code_ptr_error
 10052                                  
 10053 000062AE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10054                                  
 10055 000062B2 53                              push rbx
 10056                                  
 10057 000062B3 FF5009                          call SOB_CLOSURE_CODE(rax)
 10058                                  
 10059 000062B6 483D[02000000]                  	cmp rax, sob_boolean_false
 10060 000062BC 0F8419020000            	je .L_if_else_0246
 10061 000062C2 488B4528                mov rax, qword [rbp + 40]
 10062 000062C6 50                      	push rax
 10063 000062C7 6A01                    	push 1
 10064 000062C9 488B0425[48000000]      	mov rax, qword [free_var_9]
 10065 000062D1 803805                  	cmp byte [rax], T_closure 
 10066 000062D4 0F8528D50000                    jne L_code_ptr_error
 10067                                  
 10068 000062DA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10069                                  
 10070 000062DE 53                              push rbx
 10071                                  
 10072 000062DF FF5009                          call SOB_CLOSURE_CODE(rax)
 10073                                  
 10074 000062E2 483D[02000000]                  	cmp rax, sob_boolean_false
 10075 000062E8 0F848F000000            	je .L_if_else_024a
 10076 000062EE 488B4528                mov rax, qword [rbp + 40]
 10077 000062F2 50                      	push rax
 10078 000062F3 488B4520                mov rax, qword [rbp + 32]
 10079 000062F7 50                      	push rax
 10080 000062F8 6A02                    	push 2
 10081 000062FA 488B0425[10010000]      	mov rax, qword [free_var_34]
 10082                                  .L_lambda_simple_arity_check_ok_0862:
 10083 00006302 803805                  	cmp byte [rax], T_closure
 10084                                  
 10085 00006305 0F85F7D40000                    jne L_code_ptr_error                      ; rax <- proc
 10086                                  
 10087                                  
 10088 0000630B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10089                                  
 10090 0000630F 53                              push rbx                                  ; env pushed
 10091                                  
 10092 00006310 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10093                                  
 10094                                          ; sagydebug
 10095                                  
 10096 00006313 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10097                                  
 10098                                          
 10099                                          
 10100 00006316 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10101                                  
 10102 0000631A 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10103                                  
 10104                                  
 10105 0000631F 4D89CA                          mov r10, r9
 10106 00006322 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10107                                          
 10108 00006326 4D89D7                          mov r15, r10
 10109 00006329 4983C7FF                        add r15, -1
 10110                                                                                         
 10111 0000632D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10112 00006330 4983C404                        add r12, 4
 10113 00006334 4983C4FF                        add r12, -1
 10114                                  
 10115 00006338 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10116                                  .L_tc_recycle_frame_loop_0481:
 10117 0000633E 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10118                                  
 10119 00006342 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10120                                  
 10121                                  
 10122                                  
 10123 00006347 41BE00000000                    mov r14, 0                                ; clean box
 10124                                  
 10125                                  
 10126 0000634D 4983C7FF                        add r15, -1           
 10127 00006351 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10128                                  
 10129 00006355 4983C4FF                        add r12, -1 
 10130                                  
 10131 00006359 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10132 0000635D 75DF                    	jne .L_tc_recycle_frame_loop_0481
 10133                                  .L_tc_recycle_frame_done_0481:
 10134                                  ;this pop rbp in sot to the right place
 10135 0000635F 4D89C7                  mov r15, r8
 10136                                  
 10137 00006362 4983C704                        add r15, 4
 10138                                  
 10139 00006366 49C1E703                        shl r15, 3
 10140                                  
 10141 0000636A 4C01FC                          add rsp, r15
 10142 0000636D 5D                      	pop rbp                                  ; restore the old rbp
 10143                                  
 10144 0000636E 488B4D00                        mov rcx, qword [rbp]
 10145 00006372 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10146                                            ; rbx <- code(proc)
 10147                                  
 10148 00006376 FFE3                            jmp rbx
 10149 00006378 E959010000              	jmp .L_if_end_024a
 10150                                  	.L_if_else_024a:
 10151 0000637D 488B4528                	mov rax, qword [rbp + 40]
 10152 00006381 50                      	push rax
 10153 00006382 6A01                    	push 1
 10154 00006384 488B0425[40000000]      	mov rax, qword [free_var_8]
 10155 0000638C 803805                  	cmp byte [rax], T_closure 
 10156 0000638F 0F856DD40000                    jne L_code_ptr_error
 10157                                  
 10158 00006395 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10159                                  
 10160 00006399 53                              push rbx
 10161                                  
 10162 0000639A FF5009                          call SOB_CLOSURE_CODE(rax)
 10163                                  
 10164 0000639D 483D[02000000]                  	cmp rax, sob_boolean_false
 10165 000063A3 0F84AB000000            	je .L_if_else_024b
 10166 000063A9 488B4528                mov rax, qword [rbp + 40]
 10167 000063AD 50                      	push rax
 10168 000063AE 488B4520                mov rax, qword [rbp + 32]
 10169 000063B2 50                      	push rax
 10170 000063B3 6A01                    	push 1
 10171 000063B5 488B0425[B8000000]      	mov rax, qword [free_var_23]
 10172 000063BD 803805                  	cmp byte [rax], T_closure 
 10173 000063C0 0F853CD40000                    jne L_code_ptr_error
 10174                                  
 10175 000063C6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10176                                  
 10177 000063CA 53                              push rbx
 10178                                  
 10179 000063CB FF5009                          call SOB_CLOSURE_CODE(rax)
 10180                                  
 10181 000063CE 50                              	push rax
 10182 000063CF 6A02                    	push 2
 10183 000063D1 488B0425[F0000000]      	mov rax, qword [free_var_30]
 10184                                  .L_lambda_simple_arity_check_ok_0861:
 10185 000063D9 803805                  	cmp byte [rax], T_closure
 10186                                  
 10187 000063DC 0F8520D40000                    jne L_code_ptr_error                      ; rax <- proc
 10188                                  
 10189                                  
 10190 000063E2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10191                                  
 10192 000063E6 53                              push rbx                                  ; env pushed
 10193                                  
 10194 000063E7 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10195                                  
 10196                                          ; sagydebug
 10197                                  
 10198 000063EA FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10199                                  
 10200                                          
 10201                                          
 10202 000063ED 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10203                                  
 10204 000063F1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10205                                  
 10206                                  
 10207 000063F6 4D89CA                          mov r10, r9
 10208 000063F9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10209                                          
 10210 000063FD 4D89D7                          mov r15, r10
 10211 00006400 4983C7FF                        add r15, -1
 10212                                                                                         
 10213 00006404 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10214 00006407 4983C404                        add r12, 4
 10215 0000640B 4983C4FF                        add r12, -1
 10216                                  
 10217 0000640F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10218                                  .L_tc_recycle_frame_loop_0480:
 10219 00006415 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10220                                  
 10221 00006419 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10222                                  
 10223                                  
 10224                                  
 10225 0000641E 41BE00000000                    mov r14, 0                                ; clean box
 10226                                  
 10227                                  
 10228 00006424 4983C7FF                        add r15, -1           
 10229 00006428 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10230                                  
 10231 0000642C 4983C4FF                        add r12, -1 
 10232                                  
 10233 00006430 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10234 00006434 75DF                    	jne .L_tc_recycle_frame_loop_0480
 10235                                  .L_tc_recycle_frame_done_0480:
 10236                                  ;this pop rbp in sot to the right place
 10237 00006436 4D89C7                  mov r15, r8
 10238                                  
 10239 00006439 4983C704                        add r15, 4
 10240                                  
 10241 0000643D 49C1E703                        shl r15, 3
 10242                                  
 10243 00006441 4C01FC                          add rsp, r15
 10244 00006444 5D                      	pop rbp                                  ; restore the old rbp
 10245                                  
 10246 00006445 488B4D00                        mov rcx, qword [rbp]
 10247 00006449 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10248                                            ; rbx <- code(proc)
 10249                                  
 10250 0000644D FFE3                            jmp rbx
 10251 0000644F E982000000              	jmp .L_if_end_024b
 10252                                  	.L_if_else_024b:
 10253 00006454 6A00                    		push 0
 10254 00006456 488B4510                mov rax, qword [rbp + 16]
 10255 0000645A 488B00                  mov rax, qword [rax + 0]
 10256 0000645D 488B00                  mov rax, qword [rax + 0]
 10257                                  .L_lambda_simple_arity_check_ok_0860:
 10258 00006460 803805                  	cmp byte [rax], T_closure
 10259                                  
 10260 00006463 0F8599D30000                    jne L_code_ptr_error                      ; rax <- proc
 10261                                  
 10262                                  
 10263 00006469 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10264                                  
 10265 0000646D 53                              push rbx                                  ; env pushed
 10266                                  
 10267 0000646E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10268                                  
 10269                                          ; sagydebug
 10270                                  
 10271 00006471 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10272                                  
 10273                                          
 10274                                          
 10275 00006474 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10276                                  
 10277 00006478 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10278                                  
 10279                                  
 10280 0000647D 4D89CA                          mov r10, r9
 10281 00006480 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10282                                          
 10283 00006484 4D89D7                          mov r15, r10
 10284 00006487 4983C7FF                        add r15, -1
 10285                                                                                         
 10286 0000648B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10287 0000648E 4983C404                        add r12, 4
 10288 00006492 4983C4FF                        add r12, -1
 10289                                  
 10290 00006496 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10291                                  .L_tc_recycle_frame_loop_047f:
 10292 0000649C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10293                                  
 10294 000064A0 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10295                                  
 10296                                  
 10297                                  
 10298 000064A5 41BE00000000                    mov r14, 0                                ; clean box
 10299                                  
 10300                                  
 10301 000064AB 4983C7FF                        add r15, -1           
 10302 000064AF 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10303                                  
 10304 000064B3 4983C4FF                        add r12, -1 
 10305                                  
 10306 000064B7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10307 000064BB 75DF                    	jne .L_tc_recycle_frame_loop_047f
 10308                                  .L_tc_recycle_frame_done_047f:
 10309                                  ;this pop rbp in sot to the right place
 10310 000064BD 4D89C7                  mov r15, r8
 10311                                  
 10312 000064C0 4983C704                        add r15, 4
 10313                                  
 10314 000064C4 49C1E703                        shl r15, 3
 10315                                  
 10316 000064C8 4C01FC                          add rsp, r15
 10317 000064CB 5D                      	pop rbp                                  ; restore the old rbp
 10318                                  
 10319 000064CC 488B4D00                        mov rcx, qword [rbp]
 10320 000064D0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10321                                            ; rbx <- code(proc)
 10322                                  
 10323 000064D4 FFE3                            jmp rbx
 10324                                  	.L_if_end_024b:
 10325                                  	.L_if_end_024a:
 10326 000064D6 E9C7020000              	jmp .L_if_end_0246
 10327                                  	.L_if_else_0246:
 10328 000064DB 488B4520                	mov rax, qword [rbp + 32]
 10329 000064DF 50                      	push rax
 10330 000064E0 6A01                    	push 1
 10331 000064E2 488B0425[40000000]      	mov rax, qword [free_var_8]
 10332 000064EA 803805                  	cmp byte [rax], T_closure 
 10333 000064ED 0F850FD30000                    jne L_code_ptr_error
 10334                                  
 10335 000064F3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10336                                  
 10337 000064F7 53                              push rbx
 10338                                  
 10339 000064F8 FF5009                          call SOB_CLOSURE_CODE(rax)
 10340                                  
 10341 000064FB 483D[02000000]                  	cmp rax, sob_boolean_false
 10342 00006501 0F8419020000            	je .L_if_else_0247
 10343 00006507 488B4528                mov rax, qword [rbp + 40]
 10344 0000650B 50                      	push rax
 10345 0000650C 6A01                    	push 1
 10346 0000650E 488B0425[48000000]      	mov rax, qword [free_var_9]
 10347 00006516 803805                  	cmp byte [rax], T_closure 
 10348 00006519 0F85E3D20000                    jne L_code_ptr_error
 10349                                  
 10350 0000651F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10351                                  
 10352 00006523 53                              push rbx
 10353                                  
 10354 00006524 FF5009                          call SOB_CLOSURE_CODE(rax)
 10355                                  
 10356 00006527 483D[02000000]                  	cmp rax, sob_boolean_false
 10357 0000652D 0F84AB000000            	je .L_if_else_0248
 10358 00006533 488B4528                mov rax, qword [rbp + 40]
 10359 00006537 50                      	push rax
 10360 00006538 6A01                    	push 1
 10361 0000653A 488B0425[B8000000]      	mov rax, qword [free_var_23]
 10362 00006542 803805                  	cmp byte [rax], T_closure 
 10363 00006545 0F85B7D20000                    jne L_code_ptr_error
 10364                                  
 10365 0000654B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10366                                  
 10367 0000654F 53                              push rbx
 10368                                  
 10369 00006550 FF5009                          call SOB_CLOSURE_CODE(rax)
 10370                                  
 10371 00006553 50                              	push rax
 10372 00006554 488B4520                mov rax, qword [rbp + 32]
 10373 00006558 50                      	push rax
 10374 00006559 6A02                    	push 2
 10375 0000655B 488B0425[F0000000]      	mov rax, qword [free_var_30]
 10376                                  .L_lambda_simple_arity_check_ok_085f:
 10377 00006563 803805                  	cmp byte [rax], T_closure
 10378                                  
 10379 00006566 0F8596D20000                    jne L_code_ptr_error                      ; rax <- proc
 10380                                  
 10381                                  
 10382 0000656C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10383                                  
 10384 00006570 53                              push rbx                                  ; env pushed
 10385                                  
 10386 00006571 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10387                                  
 10388                                          ; sagydebug
 10389                                  
 10390 00006574 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10391                                  
 10392                                          
 10393                                          
 10394 00006577 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10395                                  
 10396 0000657B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10397                                  
 10398                                  
 10399 00006580 4D89CA                          mov r10, r9
 10400 00006583 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10401                                          
 10402 00006587 4D89D7                          mov r15, r10
 10403 0000658A 4983C7FF                        add r15, -1
 10404                                                                                         
 10405 0000658E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10406 00006591 4983C404                        add r12, 4
 10407 00006595 4983C4FF                        add r12, -1
 10408                                  
 10409 00006599 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10410                                  .L_tc_recycle_frame_loop_047e:
 10411 0000659F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10412                                  
 10413 000065A3 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10414                                  
 10415                                  
 10416                                  
 10417 000065A8 41BE00000000                    mov r14, 0                                ; clean box
 10418                                  
 10419                                  
 10420 000065AE 4983C7FF                        add r15, -1           
 10421 000065B2 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10422                                  
 10423 000065B6 4983C4FF                        add r12, -1 
 10424                                  
 10425 000065BA 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10426 000065BE 75DF                    	jne .L_tc_recycle_frame_loop_047e
 10427                                  .L_tc_recycle_frame_done_047e:
 10428                                  ;this pop rbp in sot to the right place
 10429 000065C0 4D89C7                  mov r15, r8
 10430                                  
 10431 000065C3 4983C704                        add r15, 4
 10432                                  
 10433 000065C7 49C1E703                        shl r15, 3
 10434                                  
 10435 000065CB 4C01FC                          add rsp, r15
 10436 000065CE 5D                      	pop rbp                                  ; restore the old rbp
 10437                                  
 10438 000065CF 488B4D00                        mov rcx, qword [rbp]
 10439 000065D3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10440                                            ; rbx <- code(proc)
 10441                                  
 10442 000065D7 FFE3                            jmp rbx
 10443 000065D9 E93D010000              	jmp .L_if_end_0248
 10444                                  	.L_if_else_0248:
 10445 000065DE 488B4528                	mov rax, qword [rbp + 40]
 10446 000065E2 50                      	push rax
 10447 000065E3 6A01                    	push 1
 10448 000065E5 488B0425[40000000]      	mov rax, qword [free_var_8]
 10449 000065ED 803805                  	cmp byte [rax], T_closure 
 10450 000065F0 0F850CD20000                    jne L_code_ptr_error
 10451                                  
 10452 000065F6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10453                                  
 10454 000065FA 53                              push rbx
 10455                                  
 10456 000065FB FF5009                          call SOB_CLOSURE_CODE(rax)
 10457                                  
 10458 000065FE 483D[02000000]                  	cmp rax, sob_boolean_false
 10459 00006604 0F848F000000            	je .L_if_else_0249
 10460 0000660A 488B4528                mov rax, qword [rbp + 40]
 10461 0000660E 50                      	push rax
 10462 0000660F 488B4520                mov rax, qword [rbp + 32]
 10463 00006613 50                      	push rax
 10464 00006614 6A02                    	push 2
 10465 00006616 488B0425[F0000000]      	mov rax, qword [free_var_30]
 10466                                  .L_lambda_simple_arity_check_ok_085e:
 10467 0000661E 803805                  	cmp byte [rax], T_closure
 10468                                  
 10469 00006621 0F85DBD10000                    jne L_code_ptr_error                      ; rax <- proc
 10470                                  
 10471                                  
 10472 00006627 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10473                                  
 10474 0000662B 53                              push rbx                                  ; env pushed
 10475                                  
 10476 0000662C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10477                                  
 10478                                          ; sagydebug
 10479                                  
 10480 0000662F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10481                                  
 10482                                          
 10483                                          
 10484 00006632 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10485                                  
 10486 00006636 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10487                                  
 10488                                  
 10489 0000663B 4D89CA                          mov r10, r9
 10490 0000663E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10491                                          
 10492 00006642 4D89D7                          mov r15, r10
 10493 00006645 4983C7FF                        add r15, -1
 10494                                                                                         
 10495 00006649 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10496 0000664C 4983C404                        add r12, 4
 10497 00006650 4983C4FF                        add r12, -1
 10498                                  
 10499 00006654 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10500                                  .L_tc_recycle_frame_loop_047d:
 10501 0000665A 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10502                                  
 10503 0000665E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10504                                  
 10505                                  
 10506                                  
 10507 00006663 41BE00000000                    mov r14, 0                                ; clean box
 10508                                  
 10509                                  
 10510 00006669 4983C7FF                        add r15, -1           
 10511 0000666D 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10512                                  
 10513 00006671 4983C4FF                        add r12, -1 
 10514                                  
 10515 00006675 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10516 00006679 75DF                    	jne .L_tc_recycle_frame_loop_047d
 10517                                  .L_tc_recycle_frame_done_047d:
 10518                                  ;this pop rbp in sot to the right place
 10519 0000667B 4D89C7                  mov r15, r8
 10520                                  
 10521 0000667E 4983C704                        add r15, 4
 10522                                  
 10523 00006682 49C1E703                        shl r15, 3
 10524                                  
 10525 00006686 4C01FC                          add rsp, r15
 10526 00006689 5D                      	pop rbp                                  ; restore the old rbp
 10527                                  
 10528 0000668A 488B4D00                        mov rcx, qword [rbp]
 10529 0000668E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10530                                            ; rbx <- code(proc)
 10531                                  
 10532 00006692 FFE3                            jmp rbx
 10533 00006694 E982000000              	jmp .L_if_end_0249
 10534                                  	.L_if_else_0249:
 10535 00006699 6A00                    		push 0
 10536 0000669B 488B4510                mov rax, qword [rbp + 16]
 10537 0000669F 488B00                  mov rax, qword [rax + 0]
 10538 000066A2 488B00                  mov rax, qword [rax + 0]
 10539                                  .L_lambda_simple_arity_check_ok_085d:
 10540 000066A5 803805                  	cmp byte [rax], T_closure
 10541                                  
 10542 000066A8 0F8554D10000                    jne L_code_ptr_error                      ; rax <- proc
 10543                                  
 10544                                  
 10545 000066AE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10546                                  
 10547 000066B2 53                              push rbx                                  ; env pushed
 10548                                  
 10549 000066B3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10550                                  
 10551                                          ; sagydebug
 10552                                  
 10553 000066B6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10554                                  
 10555                                          
 10556                                          
 10557 000066B9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10558                                  
 10559 000066BD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10560                                  
 10561                                  
 10562 000066C2 4D89CA                          mov r10, r9
 10563 000066C5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10564                                          
 10565 000066C9 4D89D7                          mov r15, r10
 10566 000066CC 4983C7FF                        add r15, -1
 10567                                                                                         
 10568 000066D0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10569 000066D3 4983C404                        add r12, 4
 10570 000066D7 4983C4FF                        add r12, -1
 10571                                  
 10572 000066DB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10573                                  .L_tc_recycle_frame_loop_047c:
 10574 000066E1 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10575                                  
 10576 000066E5 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10577                                  
 10578                                  
 10579                                  
 10580 000066EA 41BE00000000                    mov r14, 0                                ; clean box
 10581                                  
 10582                                  
 10583 000066F0 4983C7FF                        add r15, -1           
 10584 000066F4 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10585                                  
 10586 000066F8 4983C4FF                        add r12, -1 
 10587                                  
 10588 000066FC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10589 00006700 75DF                    	jne .L_tc_recycle_frame_loop_047c
 10590                                  .L_tc_recycle_frame_done_047c:
 10591                                  ;this pop rbp in sot to the right place
 10592 00006702 4D89C7                  mov r15, r8
 10593                                  
 10594 00006705 4983C704                        add r15, 4
 10595                                  
 10596 00006709 49C1E703                        shl r15, 3
 10597                                  
 10598 0000670D 4C01FC                          add rsp, r15
 10599 00006710 5D                      	pop rbp                                  ; restore the old rbp
 10600                                  
 10601 00006711 488B4D00                        mov rcx, qword [rbp]
 10602 00006715 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10603                                            ; rbx <- code(proc)
 10604                                  
 10605 00006719 FFE3                            jmp rbx
 10606                                  	.L_if_end_0249:
 10607                                  	.L_if_end_0248:
 10608 0000671B E982000000              	jmp .L_if_end_0247
 10609                                  	.L_if_else_0247:
 10610 00006720 6A00                    		push 0
 10611 00006722 488B4510                mov rax, qword [rbp + 16]
 10612 00006726 488B00                  mov rax, qword [rax + 0]
 10613 00006729 488B00                  mov rax, qword [rax + 0]
 10614                                  .L_lambda_simple_arity_check_ok_085c:
 10615 0000672C 803805                  	cmp byte [rax], T_closure
 10616                                  
 10617 0000672F 0F85CDD00000                    jne L_code_ptr_error                      ; rax <- proc
 10618                                  
 10619                                  
 10620 00006735 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10621                                  
 10622 00006739 53                              push rbx                                  ; env pushed
 10623                                  
 10624 0000673A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10625                                  
 10626                                          ; sagydebug
 10627                                  
 10628 0000673D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10629                                  
 10630                                          
 10631                                          
 10632 00006740 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10633                                  
 10634 00006744 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10635                                  
 10636                                  
 10637 00006749 4D89CA                          mov r10, r9
 10638 0000674C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10639                                          
 10640 00006750 4D89D7                          mov r15, r10
 10641 00006753 4983C7FF                        add r15, -1
 10642                                                                                         
 10643 00006757 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10644 0000675A 4983C404                        add r12, 4
 10645 0000675E 4983C4FF                        add r12, -1
 10646                                  
 10647 00006762 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10648                                  .L_tc_recycle_frame_loop_047b:
 10649 00006768 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10650                                  
 10651 0000676C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10652                                  
 10653                                  
 10654                                  
 10655 00006771 41BE00000000                    mov r14, 0                                ; clean box
 10656                                  
 10657                                  
 10658 00006777 4983C7FF                        add r15, -1           
 10659 0000677B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10660                                  
 10661 0000677F 4983C4FF                        add r12, -1 
 10662                                  
 10663 00006783 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10664 00006787 75DF                    	jne .L_tc_recycle_frame_loop_047b
 10665                                  .L_tc_recycle_frame_done_047b:
 10666                                  ;this pop rbp in sot to the right place
 10667 00006789 4D89C7                  mov r15, r8
 10668                                  
 10669 0000678C 4983C704                        add r15, 4
 10670                                  
 10671 00006790 49C1E703                        shl r15, 3
 10672                                  
 10673 00006794 4C01FC                          add rsp, r15
 10674 00006797 5D                      	pop rbp                                  ; restore the old rbp
 10675                                  
 10676 00006798 488B4D00                        mov rcx, qword [rbp]
 10677 0000679C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10678                                            ; rbx <- code(proc)
 10679                                  
 10680 000067A0 FFE3                            jmp rbx
 10681                                  	.L_if_end_0247:
 10682                                  	.L_if_end_0246:
 10683 000067A2 C9                      	leave
 10684 000067A3 C22000                  	ret 8 * (2 + 2)
 10685                                  .L_lambda_simple_end_03e1:	; new closure is in rax
 10686 000067A6 50                      	push rax
 10687 000067A7 6A01                    	push 1
 10688 000067A9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10689 000067AE E894C00000              	call malloc
 10690 000067B3 50                      	push rax
 10691 000067B4 BF08000000              	mov rdi, 8 * 1	; new rib
 10692 000067B9 E889C00000              	call malloc
 10693 000067BE 50                      	push rax
 10694 000067BF BF10000000              	mov rdi, 8 * 2	; extended env
 10695 000067C4 E87EC00000              	call malloc
 10696 000067C9 488B7D10                	mov rdi, ENV
 10697 000067CD BE00000000              	mov rsi, 0
 10698 000067D2 BA01000000              	mov rdx, 1
 10699                                  .L_lambda_simple_env_loop_03e2:	; ext_env[i + 1] <-- env[i]
 10700 000067D7 4883FE01                	cmp rsi, 1
 10701 000067DB 7410                    	je .L_lambda_simple_env_end_03e2
 10702 000067DD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10703 000067E1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10704 000067E5 48FFC6                  	inc rsi
 10705 000067E8 48FFC2                  	inc rdx
 10706 000067EB EBEA                    	jmp .L_lambda_simple_env_loop_03e2
 10707                                  .L_lambda_simple_env_end_03e2:
 10708 000067ED 5B                      	pop rbx
 10709 000067EE BE00000000              	mov rsi, 0
 10710                                  .L_lambda_simple_params_loop_03e2:	; copy params
 10711 000067F3 4883FE01                	cmp rsi, 1
 10712 000067F7 740E                    	je .L_lambda_simple_params_end_03e2
 10713 000067F9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10714 000067FE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10715 00006802 48FFC6                  	inc rsi
 10716 00006805 EBEC                    	jmp .L_lambda_simple_params_loop_03e2
 10717                                  .L_lambda_simple_params_end_03e2:
 10718 00006807 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10719 0000680A 4889C3                  	mov rbx, rax
 10720 0000680D 58                      	pop rax
 10721 0000680E C60005                  	mov byte [rax], T_closure
 10722 00006811 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10723 00006815 48C74009[22680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e2
 10724 0000681D E92A020000              	jmp .L_lambda_simple_end_03e2
 10725                                  .L_lambda_simple_code_03e2:	; lambda-simple body
 10726 00006822 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10727 00006828 740B                    	je .L_lambda_simple_arity_check_ok_0863
 10728 0000682A FF742410                	push qword [rsp + 8 * 2]
 10729 0000682E 6A01                    	push 1
 10730 00006830 E9CBBF0000              	jmp L_error_incorrect_arity_simple
 10731                                  .L_lambda_simple_arity_check_ok_0863:
 10732 00006835 C8000000                	enter 0, 0
 10733 00006839 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10734 0000683E E804C00000              	call malloc
 10735 00006843 50                      	push rax
 10736 00006844 BF08000000              	mov rdi, 8 * 1	; new rib
 10737 00006849 E8F9BF0000              	call malloc
 10738 0000684E 50                      	push rax
 10739 0000684F BF18000000              	mov rdi, 8 * 3	; extended env
 10740 00006854 E8EEBF0000              	call malloc
 10741 00006859 488B7D10                	mov rdi, ENV
 10742 0000685D BE00000000              	mov rsi, 0
 10743 00006862 BA01000000              	mov rdx, 1
 10744                                  .L_lambda_opt_env_loop_0094:	; ext_env[i + 1] <-- env[i]
 10745 00006867 4883FE02                	cmp rsi, 2
 10746 0000686B 7410                    	je .L_lambda_opt_env_end_0094
 10747 0000686D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10748 00006871 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10749 00006875 48FFC6                  	inc rsi
 10750 00006878 48FFC2                  	inc rdx
 10751 0000687B EBEA                    	jmp .L_lambda_opt_env_loop_0094
 10752                                  .L_lambda_opt_env_end_0094:
 10753 0000687D 5B                      	pop rbx
 10754 0000687E BE00000000              	mov rsi, 0
 10755                                  .L_lambda_opt_params_loop_01ba:	; copy params
 10756 00006883 4883FE01                	cmp rsi, 1
 10757 00006887 740E                    	je .L_lambda_opt_params_end_01ba
 10758 00006889 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10759 0000688E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10760 00006892 48FFC6                  	inc rsi
 10761 00006895 EBEC                    	jmp .L_lambda_opt_params_loop_01ba
 10762                                  .L_lambda_opt_params_end_01ba:
 10763 00006897 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10764 0000689A 4889C3                  	mov rbx, rax
 10765 0000689D 58                      	pop rax
 10766 0000689E C60005                  	mov byte [rax], T_closure
 10767 000068A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10768 000068A5 48C74009[B2680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0094
 10769 000068AD E996010000              	jmp .L_lambda_opt_end_0094
 10770                                  .L_lambda_opt_code_0094:
 10771 000068B2 4C8B542410              mov r10, qword [rsp+8*2]
 10772 000068B7 4983FA00                cmp r10, 0
 10773 000068BB 740B                    je .L_lambda_opt_arity_check_exact_0094
 10774 000068BD 4983FA00                cmp r10, 0
 10775 000068C1 7F44                    jg .L_lambda_opt_arity_check_more_0094
 10776 000068C3 E94CBF0000              jmp L_error_incorrect_arity_opt
 10777                                  .L_lambda_opt_arity_check_exact_0094:
 10778 000068C8 4883EC08                sub rsp, 8
 10779 000068CC BA03000000              mov rdx, 3+0
 10780 000068D1 4889E3                  mov qword rbx, rsp
 10781                                  .L_lambda_opt_params_loop_01bb:
 10782 000068D4 488B4B08                mov qword rcx, [rbx+8]
 10783 000068D8 48890B                  mov qword [rbx], rcx
 10784 000068DB 48FFCA                  dec rdx
 10785 000068DE 4883C308                add rbx, 8
 10786 000068E2 4883FA00                cmp rdx, 0
 10787 000068E6 7402                    je .L_lambda_opt_params_end_01bb
 10788 000068E8 EBEA                    jmp .L_lambda_opt_params_loop_01bb
 10789                                  .L_lambda_opt_params_end_01bb:
 10790 000068EA 49FFC2                  inc r10
 10791 000068ED 4C89542410              mov qword [rsp+8*2], r10
 10792 000068F2 4983C202                add r10, 2
 10793 000068F6 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 10794 000068FE 4C8B4D00                mov r9, [rbp]
 10795 00006902 E996000000              jmp .L_lambda_opt_stack_adjusted_0094
 10796                                  .L_lambda_opt_arity_check_more_0094:
 10797 00006907 4C8B6C2410              mov r13, [rsp+2*8]
 10798 0000690C 48B8-                   mov rax, sob_nil
 10798 0000690E [0100000000000000] 
 10799 00006916 4C8B542410              mov r10, [rsp+2*8]
 10800 0000691B 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 10801 00006920 4983EA00                sub r10, 0
 10802                                  .L_lambda_opt_stack_shrink_loop_0094:
 10803 00006924 4983FA00                cmp r10, 0
 10804 00006928 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0094
 10805 0000692A 4889C1                  mov rcx, rax
 10806 0000692D 498B10                  mov rdx, [r8]
 10807 00006930 BF11000000              mov rdi, 17
 10808 00006935 E80DBF0000              call malloc
 10809 0000693A C60021                  mov byte [rax], T_pair
 10810 0000693D 48894809                mov SOB_PAIR_CDR(rax), rcx
 10811 00006941 48895001                mov SOB_PAIR_CAR(rax), rdx
 10812 00006945 4983E808                sub r8, 8
 10813 00006949 49FFCA                  dec r10
 10814 0000694C EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0094
 10815                                  .L_lambda_opt_stack_shrink_loop_exit_0094:
 10816 0000694E 4889442418              mov [rsp+8*(2+1)], rax
 10817 00006953 41BA01000000            mov r10, 1
 10818 00006959 4C89542410              mov [rsp+16], r10
 10819 0000695E 4989E4                  mov r12, rsp
 10820 00006961 4983C418                add r12, 8*(2+1)
 10821 00006965 4C2B6C2410              sub r13, [rsp+16]
 10822 0000696A 4D89EA                  mov r10, r13
 10823 0000696D 49C1E203                shl r10, 3
 10824 00006971 4D89D7                  mov r15, r10
 10825 00006974 4D01E2                  add r10, r12
 10826 00006977 4C8B4C2410              mov r9, [rsp+16]
 10827 0000697C 4983C103                add r9, 3
 10828                                  .L_lambda_opt_params_loop_01bc:
 10829 00006980 4983F900                cmp r9, 0
 10830 00006984 7414                    je .L_lambda_opt_params_end_01bc
 10831 00006986 4D8B3424                mov r14, [r12]
 10832 0000698A 4D8932                  mov [r10], r14
 10833 0000698D 4983EC08                sub r12, 8
 10834 00006991 4983EA08                sub r10, 8
 10835 00006995 49FFC9                  dec r9
 10836 00006998 EBE6                    jmp .L_lambda_opt_params_loop_01bc
 10837                                  .L_lambda_opt_params_end_01bc:
 10838 0000699A 4C01FC                  add rsp, r15
 10839                                  .L_lambda_opt_stack_adjusted_0094:
 10840 0000699D 4C8B4D00                mov r9, [rbp]
 10841 000069A1 C8000000                enter 0, 0
 10842 000069A5 488B4520                mov rax, qword [rbp + 32]
 10843 000069A9 50                      	push rax
 10844 000069AA 48B8-                   	mov rax, qword (L_constants + 31)
 10844 000069AC [1F00000000000000] 
 10845 000069B4 50                      	push rax
 10846 000069B5 488B4510                mov rax, qword [rbp + 16]
 10847 000069B9 488B00                  mov rax, qword [rax + 0]
 10848 000069BC 488B00                  mov rax, qword [rax + 0]
 10849 000069BF 50                      	push rax
 10850 000069C0 6A03                    	push 3
 10851 000069C2 488B0425[F8020000]      	mov rax, qword [free_var_95]
 10852                                  .L_lambda_simple_arity_check_ok_0864:
 10853 000069CA 803805                  	cmp byte [rax], T_closure
 10854                                  
 10855 000069CD 0F852FCE0000                    jne L_code_ptr_error                      ; rax <- proc
 10856                                  
 10857                                  
 10858 000069D3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10859                                  
 10860 000069D7 53                              push rbx                                  ; env pushed
 10861                                  
 10862 000069D8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10863                                  
 10864                                          ; sagydebug
 10865                                  
 10866 000069DB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10867                                  
 10868                                          
 10869                                          
 10870 000069DE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10871                                  
 10872 000069E2 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10873                                  
 10874                                  
 10875 000069E7 4D89CA                          mov r10, r9
 10876 000069EA 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10877                                          
 10878 000069EE 4D89D7                          mov r15, r10
 10879 000069F1 4983C7FF                        add r15, -1
 10880                                                                                         
 10881 000069F5 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10882 000069F8 4983C404                        add r12, 4
 10883 000069FC 4983C4FF                        add r12, -1
 10884                                  
 10885 00006A00 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10886                                  .L_tc_recycle_frame_loop_0482:
 10887 00006A06 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10888                                  
 10889 00006A0A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10890                                  
 10891                                  
 10892                                  
 10893 00006A0F 41BE00000000                    mov r14, 0                                ; clean box
 10894                                  
 10895                                  
 10896 00006A15 4983C7FF                        add r15, -1           
 10897 00006A19 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10898                                  
 10899 00006A1D 4983C4FF                        add r12, -1 
 10900                                  
 10901 00006A21 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10902 00006A25 75DF                    	jne .L_tc_recycle_frame_loop_0482
 10903                                  .L_tc_recycle_frame_done_0482:
 10904                                  ;this pop rbp in sot to the right place
 10905 00006A27 4D89C7                  mov r15, r8
 10906                                  
 10907 00006A2A 4983C704                        add r15, 4
 10908                                  
 10909 00006A2E 49C1E703                        shl r15, 3
 10910                                  
 10911 00006A32 4C01FC                          add rsp, r15
 10912 00006A35 5D                      	pop rbp                                  ; restore the old rbp
 10913                                  
 10914 00006A36 488B4D00                        mov rcx, qword [rbp]
 10915 00006A3A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10916                                            ; rbx <- code(proc)
 10917                                  
 10918 00006A3E FFE3                            jmp rbx
 10919 00006A40 C9                      leave
 10920 00006A41 4C8B4D00                mov r9, [rbp]
 10921 00006A45 C21800                  ret 8 * (3 + 0)
 10922                                  .L_lambda_opt_end_0094:	; new closure is in rax
 10923 00006A48 C9                      	leave
 10924 00006A49 C21800                  	ret 8 * (2 + 1)
 10925                                  .L_lambda_simple_end_03e2:	; new closure is in rax
 10926                                  .L_lambda_simple_arity_check_ok_0865:
 10927 00006A4C 803805                  	cmp byte [rax], T_closure
 10928                                  
 10929 00006A4F 0F85ADCD0000                    jne L_code_ptr_error                      ; rax <- proc
 10930                                  
 10931                                  
 10932 00006A55 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10933                                  
 10934 00006A59 53                              push rbx                                  ; env pushed
 10935                                  
 10936 00006A5A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10937                                  
 10938                                          ; sagydebug
 10939                                  
 10940 00006A5D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10941                                  
 10942                                          
 10943                                          
 10944 00006A60 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10945                                  
 10946 00006A64 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10947                                  
 10948                                  
 10949 00006A69 4D89CA                          mov r10, r9
 10950 00006A6C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 10951                                          
 10952 00006A70 4D89D7                          mov r15, r10
 10953 00006A73 4983C7FF                        add r15, -1
 10954                                                                                         
 10955 00006A77 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10956 00006A7A 4983C404                        add r12, 4
 10957 00006A7E 4983C4FF                        add r12, -1
 10958                                  
 10959 00006A82 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10960                                  .L_tc_recycle_frame_loop_0483:
 10961 00006A88 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 10962                                  
 10963 00006A8C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10964                                  
 10965                                  
 10966                                  
 10967 00006A91 41BE00000000                    mov r14, 0                                ; clean box
 10968                                  
 10969                                  
 10970 00006A97 4983C7FF                        add r15, -1           
 10971 00006A9B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10972                                  
 10973 00006A9F 4983C4FF                        add r12, -1 
 10974                                  
 10975 00006AA3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10976 00006AA7 75DF                    	jne .L_tc_recycle_frame_loop_0483
 10977                                  .L_tc_recycle_frame_done_0483:
 10978                                  ;this pop rbp in sot to the right place
 10979 00006AA9 4D89C7                  mov r15, r8
 10980                                  
 10981 00006AAC 4983C704                        add r15, 4
 10982                                  
 10983 00006AB0 49C1E703                        shl r15, 3
 10984                                  
 10985 00006AB4 4C01FC                          add rsp, r15
 10986 00006AB7 5D                      	pop rbp                                  ; restore the old rbp
 10987                                  
 10988 00006AB8 488B4D00                        mov rcx, qword [rbp]
 10989 00006ABC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10990                                            ; rbx <- code(proc)
 10991                                  
 10992 00006AC0 FFE3                            jmp rbx
 10993 00006AC2 C9                      	leave
 10994 00006AC3 C21800                  	ret 8 * (2 + 1)
 10995                                  .L_lambda_simple_end_03e0:	; new closure is in rax
 10996 00006AC6 803805                  	cmp byte [rax], T_closure 
 10997 00006AC9 0F8533CD0000                    jne L_code_ptr_error
 10998                                  
 10999 00006ACF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11000                                  
 11001 00006AD3 53                              push rbx
 11002                                  
 11003 00006AD4 FF5009                          call SOB_CLOSURE_CODE(rax)
 11004                                  
 11005 00006AD7 48890425[08030000]              	mov qword [free_var_97], rax
 11006 00006ADF 48B8-                   	mov rax, sob_void
 11006 00006AE1 [0000000000000000] 
 11007                                  
 11008 00006AE9 4889C7                  	mov rdi, rax
 11009 00006AEC E867BD0000              	call print_sexpr_if_not_void
 11010                                  
 11011 00006AF1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11012 00006AF6 E84CBD0000              	call malloc
 11013 00006AFB 50                      	push rax
 11014 00006AFC BF00000000              	mov rdi, 8 * 0	; new rib
 11015 00006B01 E841BD0000              	call malloc
 11016 00006B06 50                      	push rax
 11017 00006B07 BF08000000              	mov rdi, 8 * 1	; extended env
 11018 00006B0C E836BD0000              	call malloc
 11019 00006B11 488B7D10                	mov rdi, ENV
 11020 00006B15 BE00000000              	mov rsi, 0
 11021 00006B1A BA01000000              	mov rdx, 1
 11022                                  .L_lambda_simple_env_loop_03e3:	; ext_env[i + 1] <-- env[i]
 11023 00006B1F 4883FE00                	cmp rsi, 0
 11024 00006B23 7410                    	je .L_lambda_simple_env_end_03e3
 11025 00006B25 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11026 00006B29 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11027 00006B2D 48FFC6                  	inc rsi
 11028 00006B30 48FFC2                  	inc rdx
 11029 00006B33 EBEA                    	jmp .L_lambda_simple_env_loop_03e3
 11030                                  .L_lambda_simple_env_end_03e3:
 11031 00006B35 5B                      	pop rbx
 11032 00006B36 BE00000000              	mov rsi, 0
 11033                                  .L_lambda_simple_params_loop_03e3:	; copy params
 11034 00006B3B 4883FE00                	cmp rsi, 0
 11035 00006B3F 740E                    	je .L_lambda_simple_params_end_03e3
 11036 00006B41 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11037 00006B46 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11038 00006B4A 48FFC6                  	inc rsi
 11039 00006B4D EBEC                    	jmp .L_lambda_simple_params_loop_03e3
 11040                                  .L_lambda_simple_params_end_03e3:
 11041 00006B4F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11042 00006B52 4889C3                  	mov rbx, rax
 11043 00006B55 58                      	pop rax
 11044 00006B56 C60005                  	mov byte [rax], T_closure
 11045 00006B59 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11046 00006B5D 48C74009[6A6B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e3
 11047 00006B65 E9B1000000              	jmp .L_lambda_simple_end_03e3
 11048                                  .L_lambda_simple_code_03e3:	; lambda-simple body
 11049 00006B6A 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11050 00006B70 740B                    	je .L_lambda_simple_arity_check_ok_0866
 11051 00006B72 FF742410                	push qword [rsp + 8 * 2]
 11052 00006B76 6A00                    	push 0
 11053 00006B78 E983BC0000              	jmp L_error_incorrect_arity_simple
 11054                                  .L_lambda_simple_arity_check_ok_0866:
 11055 00006B7D C8000000                	enter 0, 0
 11056 00006B81 48B8-                   	mov rax, qword (L_constants + 67)
 11056 00006B83 [4300000000000000] 
 11057 00006B8B 50                      	push rax
 11058 00006B8C 48B8-                   	mov rax, qword (L_constants + 118)
 11058 00006B8E [7600000000000000] 
 11059 00006B96 50                      	push rax
 11060 00006B97 6A02                    	push 2
 11061 00006B99 488B0425[30010000]      	mov rax, qword [free_var_38]
 11062                                  .L_lambda_simple_arity_check_ok_0867:
 11063 00006BA1 803805                  	cmp byte [rax], T_closure
 11064                                  
 11065 00006BA4 0F8558CC0000                    jne L_code_ptr_error                      ; rax <- proc
 11066                                  
 11067                                  
 11068 00006BAA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11069                                  
 11070 00006BAE 53                              push rbx                                  ; env pushed
 11071                                  
 11072 00006BAF FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11073                                  
 11074                                          ; sagydebug
 11075                                  
 11076 00006BB2 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11077                                  
 11078                                          
 11079                                          
 11080 00006BB5 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11081                                  
 11082 00006BB9 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11083                                  
 11084                                  
 11085 00006BBE 4D89CA                          mov r10, r9
 11086 00006BC1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 11087                                          
 11088 00006BC5 4D89D7                          mov r15, r10
 11089 00006BC8 4983C7FF                        add r15, -1
 11090                                                                                         
 11091 00006BCC 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11092 00006BCF 4983C404                        add r12, 4
 11093 00006BD3 4983C4FF                        add r12, -1
 11094                                  
 11095 00006BD7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11096                                  .L_tc_recycle_frame_loop_0484:
 11097 00006BDD 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 11098                                  
 11099 00006BE1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11100                                  
 11101                                  
 11102                                  
 11103 00006BE6 41BE00000000                    mov r14, 0                                ; clean box
 11104                                  
 11105                                  
 11106 00006BEC 4983C7FF                        add r15, -1           
 11107 00006BF0 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11108                                  
 11109 00006BF4 4983C4FF                        add r12, -1 
 11110                                  
 11111 00006BF8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11112 00006BFC 75DF                    	jne .L_tc_recycle_frame_loop_0484
 11113                                  .L_tc_recycle_frame_done_0484:
 11114                                  ;this pop rbp in sot to the right place
 11115 00006BFE 4D89C7                  mov r15, r8
 11116                                  
 11117 00006C01 4983C704                        add r15, 4
 11118                                  
 11119 00006C05 49C1E703                        shl r15, 3
 11120                                  
 11121 00006C09 4C01FC                          add rsp, r15
 11122 00006C0C 5D                      	pop rbp                                  ; restore the old rbp
 11123                                  
 11124 00006C0D 488B4D00                        mov rcx, qword [rbp]
 11125 00006C11 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11126                                            ; rbx <- code(proc)
 11127                                  
 11128 00006C15 FFE3                            jmp rbx
 11129 00006C17 C9                      	leave
 11130 00006C18 C21000                  	ret 8 * (2 + 0)
 11131                                  .L_lambda_simple_end_03e3:	; new closure is in rax
 11132 00006C1B 50                      	push rax
 11133 00006C1C 6A01                    	push 1
 11134 00006C1E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11135 00006C23 E81FBC0000              	call malloc
 11136 00006C28 50                      	push rax
 11137 00006C29 BF00000000              	mov rdi, 8 * 0	; new rib
 11138 00006C2E E814BC0000              	call malloc
 11139 00006C33 50                      	push rax
 11140 00006C34 BF08000000              	mov rdi, 8 * 1	; extended env
 11141 00006C39 E809BC0000              	call malloc
 11142 00006C3E 488B7D10                	mov rdi, ENV
 11143 00006C42 BE00000000              	mov rsi, 0
 11144 00006C47 BA01000000              	mov rdx, 1
 11145                                  .L_lambda_simple_env_loop_03e4:	; ext_env[i + 1] <-- env[i]
 11146 00006C4C 4883FE00                	cmp rsi, 0
 11147 00006C50 7410                    	je .L_lambda_simple_env_end_03e4
 11148 00006C52 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11149 00006C56 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11150 00006C5A 48FFC6                  	inc rsi
 11151 00006C5D 48FFC2                  	inc rdx
 11152 00006C60 EBEA                    	jmp .L_lambda_simple_env_loop_03e4
 11153                                  .L_lambda_simple_env_end_03e4:
 11154 00006C62 5B                      	pop rbx
 11155 00006C63 BE00000000              	mov rsi, 0
 11156                                  .L_lambda_simple_params_loop_03e4:	; copy params
 11157 00006C68 4883FE00                	cmp rsi, 0
 11158 00006C6C 740E                    	je .L_lambda_simple_params_end_03e4
 11159 00006C6E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11160 00006C73 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11161 00006C77 48FFC6                  	inc rsi
 11162 00006C7A EBEC                    	jmp .L_lambda_simple_params_loop_03e4
 11163                                  .L_lambda_simple_params_end_03e4:
 11164 00006C7C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11165 00006C7F 4889C3                  	mov rbx, rax
 11166 00006C82 58                      	pop rax
 11167 00006C83 C60005                  	mov byte [rax], T_closure
 11168 00006C86 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11169 00006C8A 48C74009[976C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e4
 11170 00006C92 E9D30A0000              	jmp .L_lambda_simple_end_03e4
 11171                                  .L_lambda_simple_code_03e4:	; lambda-simple body
 11172 00006C97 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11173 00006C9D 740B                    	je .L_lambda_simple_arity_check_ok_0868
 11174 00006C9F FF742410                	push qword [rsp + 8 * 2]
 11175 00006CA3 6A01                    	push 1
 11176 00006CA5 E956BB0000              	jmp L_error_incorrect_arity_simple
 11177                                  .L_lambda_simple_arity_check_ok_0868:
 11178 00006CAA C8000000                	enter 0, 0
 11179 00006CAE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11180 00006CB3 E88FBB0000              	call malloc
 11181 00006CB8 50                      	push rax
 11182 00006CB9 BF08000000              	mov rdi, 8 * 1	; new rib
 11183 00006CBE E884BB0000              	call malloc
 11184 00006CC3 50                      	push rax
 11185 00006CC4 BF10000000              	mov rdi, 8 * 2	; extended env
 11186 00006CC9 E879BB0000              	call malloc
 11187 00006CCE 488B7D10                	mov rdi, ENV
 11188 00006CD2 BE00000000              	mov rsi, 0
 11189 00006CD7 BA01000000              	mov rdx, 1
 11190                                  .L_lambda_simple_env_loop_03e5:	; ext_env[i + 1] <-- env[i]
 11191 00006CDC 4883FE01                	cmp rsi, 1
 11192 00006CE0 7410                    	je .L_lambda_simple_env_end_03e5
 11193 00006CE2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11194 00006CE6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11195 00006CEA 48FFC6                  	inc rsi
 11196 00006CED 48FFC2                  	inc rdx
 11197 00006CF0 EBEA                    	jmp .L_lambda_simple_env_loop_03e5
 11198                                  .L_lambda_simple_env_end_03e5:
 11199 00006CF2 5B                      	pop rbx
 11200 00006CF3 BE00000000              	mov rsi, 0
 11201                                  .L_lambda_simple_params_loop_03e5:	; copy params
 11202 00006CF8 4883FE01                	cmp rsi, 1
 11203 00006CFC 740E                    	je .L_lambda_simple_params_end_03e5
 11204 00006CFE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11205 00006D03 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11206 00006D07 48FFC6                  	inc rsi
 11207 00006D0A EBEC                    	jmp .L_lambda_simple_params_loop_03e5
 11208                                  .L_lambda_simple_params_end_03e5:
 11209 00006D0C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11210 00006D0F 4889C3                  	mov rbx, rax
 11211 00006D12 58                      	pop rax
 11212 00006D13 C60005                  	mov byte [rax], T_closure
 11213 00006D16 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11214 00006D1A 48C74009[276D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e5
 11215 00006D22 E927050000              	jmp .L_lambda_simple_end_03e5
 11216                                  .L_lambda_simple_code_03e5:	; lambda-simple body
 11217 00006D27 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11218 00006D2D 740B                    	je .L_lambda_simple_arity_check_ok_0869
 11219 00006D2F FF742410                	push qword [rsp + 8 * 2]
 11220 00006D33 6A02                    	push 2
 11221 00006D35 E9C6BA0000              	jmp L_error_incorrect_arity_simple
 11222                                  .L_lambda_simple_arity_check_ok_0869:
 11223 00006D3A C8000000                	enter 0, 0
 11224 00006D3E 488B4520                mov rax, qword [rbp + 32]
 11225 00006D42 50                      	push rax
 11226 00006D43 6A01                    	push 1
 11227 00006D45 488B0425[48000000]      	mov rax, qword [free_var_9]
 11228 00006D4D 803805                  	cmp byte [rax], T_closure 
 11229 00006D50 0F85ACCA0000                    jne L_code_ptr_error
 11230                                  
 11231 00006D56 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11232                                  
 11233 00006D5A 53                              push rbx
 11234                                  
 11235 00006D5B FF5009                          call SOB_CLOSURE_CODE(rax)
 11236                                  
 11237 00006D5E 483D[02000000]                  	cmp rax, sob_boolean_false
 11238 00006D64 0F8419020000            	je .L_if_else_024c
 11239 00006D6A 488B4528                mov rax, qword [rbp + 40]
 11240 00006D6E 50                      	push rax
 11241 00006D6F 6A01                    	push 1
 11242 00006D71 488B0425[48000000]      	mov rax, qword [free_var_9]
 11243 00006D79 803805                  	cmp byte [rax], T_closure 
 11244 00006D7C 0F8580CA0000                    jne L_code_ptr_error
 11245                                  
 11246 00006D82 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11247                                  
 11248 00006D86 53                              push rbx
 11249                                  
 11250 00006D87 FF5009                          call SOB_CLOSURE_CODE(rax)
 11251                                  
 11252 00006D8A 483D[02000000]                  	cmp rax, sob_boolean_false
 11253 00006D90 0F848F000000            	je .L_if_else_0250
 11254 00006D96 488B4528                mov rax, qword [rbp + 40]
 11255 00006D9A 50                      	push rax
 11256 00006D9B 488B4520                mov rax, qword [rbp + 32]
 11257 00006D9F 50                      	push rax
 11258 00006DA0 6A02                    	push 2
 11259 00006DA2 488B0425[18010000]      	mov rax, qword [free_var_35]
 11260                                  .L_lambda_simple_arity_check_ok_0870:
 11261 00006DAA 803805                  	cmp byte [rax], T_closure
 11262                                  
 11263 00006DAD 0F854FCA0000                    jne L_code_ptr_error                      ; rax <- proc
 11264                                  
 11265                                  
 11266 00006DB3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11267                                  
 11268 00006DB7 53                              push rbx                                  ; env pushed
 11269                                  
 11270 00006DB8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11271                                  
 11272                                          ; sagydebug
 11273                                  
 11274 00006DBB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11275                                  
 11276                                          
 11277                                          
 11278 00006DBE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11279                                  
 11280 00006DC2 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11281                                  
 11282                                  
 11283 00006DC7 4D89CA                          mov r10, r9
 11284 00006DCA 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 11285                                          
 11286 00006DCE 4D89D7                          mov r15, r10
 11287 00006DD1 4983C7FF                        add r15, -1
 11288                                                                                         
 11289 00006DD5 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11290 00006DD8 4983C404                        add r12, 4
 11291 00006DDC 4983C4FF                        add r12, -1
 11292                                  
 11293 00006DE0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11294                                  .L_tc_recycle_frame_loop_048b:
 11295 00006DE6 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 11296                                  
 11297 00006DEA 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11298                                  
 11299                                  
 11300                                  
 11301 00006DEF 41BE00000000                    mov r14, 0                                ; clean box
 11302                                  
 11303                                  
 11304 00006DF5 4983C7FF                        add r15, -1           
 11305 00006DF9 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11306                                  
 11307 00006DFD 4983C4FF                        add r12, -1 
 11308                                  
 11309 00006E01 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11310 00006E05 75DF                    	jne .L_tc_recycle_frame_loop_048b
 11311                                  .L_tc_recycle_frame_done_048b:
 11312                                  ;this pop rbp in sot to the right place
 11313 00006E07 4D89C7                  mov r15, r8
 11314                                  
 11315 00006E0A 4983C704                        add r15, 4
 11316                                  
 11317 00006E0E 49C1E703                        shl r15, 3
 11318                                  
 11319 00006E12 4C01FC                          add rsp, r15
 11320 00006E15 5D                      	pop rbp                                  ; restore the old rbp
 11321                                  
 11322 00006E16 488B4D00                        mov rcx, qword [rbp]
 11323 00006E1A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11324                                            ; rbx <- code(proc)
 11325                                  
 11326 00006E1E FFE3                            jmp rbx
 11327 00006E20 E959010000              	jmp .L_if_end_0250
 11328                                  	.L_if_else_0250:
 11329 00006E25 488B4528                	mov rax, qword [rbp + 40]
 11330 00006E29 50                      	push rax
 11331 00006E2A 6A01                    	push 1
 11332 00006E2C 488B0425[40000000]      	mov rax, qword [free_var_8]
 11333 00006E34 803805                  	cmp byte [rax], T_closure 
 11334 00006E37 0F85C5C90000                    jne L_code_ptr_error
 11335                                  
 11336 00006E3D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11337                                  
 11338 00006E41 53                              push rbx
 11339                                  
 11340 00006E42 FF5009                          call SOB_CLOSURE_CODE(rax)
 11341                                  
 11342 00006E45 483D[02000000]                  	cmp rax, sob_boolean_false
 11343 00006E4B 0F84AB000000            	je .L_if_else_0251
 11344 00006E51 488B4528                mov rax, qword [rbp + 40]
 11345 00006E55 50                      	push rax
 11346 00006E56 488B4520                mov rax, qword [rbp + 32]
 11347 00006E5A 50                      	push rax
 11348 00006E5B 6A01                    	push 1
 11349 00006E5D 488B0425[B8000000]      	mov rax, qword [free_var_23]
 11350 00006E65 803805                  	cmp byte [rax], T_closure 
 11351 00006E68 0F8594C90000                    jne L_code_ptr_error
 11352                                  
 11353 00006E6E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11354                                  
 11355 00006E72 53                              push rbx
 11356                                  
 11357 00006E73 FF5009                          call SOB_CLOSURE_CODE(rax)
 11358                                  
 11359 00006E76 50                              	push rax
 11360 00006E77 6A02                    	push 2
 11361 00006E79 488B0425[F8000000]      	mov rax, qword [free_var_31]
 11362                                  .L_lambda_simple_arity_check_ok_086f:
 11363 00006E81 803805                  	cmp byte [rax], T_closure
 11364                                  
 11365 00006E84 0F8578C90000                    jne L_code_ptr_error                      ; rax <- proc
 11366                                  
 11367                                  
 11368 00006E8A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11369                                  
 11370 00006E8E 53                              push rbx                                  ; env pushed
 11371                                  
 11372 00006E8F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11373                                  
 11374                                          ; sagydebug
 11375                                  
 11376 00006E92 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11377                                  
 11378                                          
 11379                                          
 11380 00006E95 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11381                                  
 11382 00006E99 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11383                                  
 11384                                  
 11385 00006E9E 4D89CA                          mov r10, r9
 11386 00006EA1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 11387                                          
 11388 00006EA5 4D89D7                          mov r15, r10
 11389 00006EA8 4983C7FF                        add r15, -1
 11390                                                                                         
 11391 00006EAC 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11392 00006EAF 4983C404                        add r12, 4
 11393 00006EB3 4983C4FF                        add r12, -1
 11394                                  
 11395 00006EB7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11396                                  .L_tc_recycle_frame_loop_048a:
 11397 00006EBD 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 11398                                  
 11399 00006EC1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11400                                  
 11401                                  
 11402                                  
 11403 00006EC6 41BE00000000                    mov r14, 0                                ; clean box
 11404                                  
 11405                                  
 11406 00006ECC 4983C7FF                        add r15, -1           
 11407 00006ED0 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11408                                  
 11409 00006ED4 4983C4FF                        add r12, -1 
 11410                                  
 11411 00006ED8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11412 00006EDC 75DF                    	jne .L_tc_recycle_frame_loop_048a
 11413                                  .L_tc_recycle_frame_done_048a:
 11414                                  ;this pop rbp in sot to the right place
 11415 00006EDE 4D89C7                  mov r15, r8
 11416                                  
 11417 00006EE1 4983C704                        add r15, 4
 11418                                  
 11419 00006EE5 49C1E703                        shl r15, 3
 11420                                  
 11421 00006EE9 4C01FC                          add rsp, r15
 11422 00006EEC 5D                      	pop rbp                                  ; restore the old rbp
 11423                                  
 11424 00006EED 488B4D00                        mov rcx, qword [rbp]
 11425 00006EF1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11426                                            ; rbx <- code(proc)
 11427                                  
 11428 00006EF5 FFE3                            jmp rbx
 11429 00006EF7 E982000000              	jmp .L_if_end_0251
 11430                                  	.L_if_else_0251:
 11431 00006EFC 6A00                    		push 0
 11432 00006EFE 488B4510                mov rax, qword [rbp + 16]
 11433 00006F02 488B00                  mov rax, qword [rax + 0]
 11434 00006F05 488B00                  mov rax, qword [rax + 0]
 11435                                  .L_lambda_simple_arity_check_ok_086e:
 11436 00006F08 803805                  	cmp byte [rax], T_closure
 11437                                  
 11438 00006F0B 0F85F1C80000                    jne L_code_ptr_error                      ; rax <- proc
 11439                                  
 11440                                  
 11441 00006F11 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11442                                  
 11443 00006F15 53                              push rbx                                  ; env pushed
 11444                                  
 11445 00006F16 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11446                                  
 11447                                          ; sagydebug
 11448                                  
 11449 00006F19 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11450                                  
 11451                                          
 11452                                          
 11453 00006F1C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11454                                  
 11455 00006F20 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11456                                  
 11457                                  
 11458 00006F25 4D89CA                          mov r10, r9
 11459 00006F28 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 11460                                          
 11461 00006F2C 4D89D7                          mov r15, r10
 11462 00006F2F 4983C7FF                        add r15, -1
 11463                                                                                         
 11464 00006F33 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11465 00006F36 4983C404                        add r12, 4
 11466 00006F3A 4983C4FF                        add r12, -1
 11467                                  
 11468 00006F3E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11469                                  .L_tc_recycle_frame_loop_0489:
 11470 00006F44 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 11471                                  
 11472 00006F48 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11473                                  
 11474                                  
 11475                                  
 11476 00006F4D 41BE00000000                    mov r14, 0                                ; clean box
 11477                                  
 11478                                  
 11479 00006F53 4983C7FF                        add r15, -1           
 11480 00006F57 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11481                                  
 11482 00006F5B 4983C4FF                        add r12, -1 
 11483                                  
 11484 00006F5F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11485 00006F63 75DF                    	jne .L_tc_recycle_frame_loop_0489
 11486                                  .L_tc_recycle_frame_done_0489:
 11487                                  ;this pop rbp in sot to the right place
 11488 00006F65 4D89C7                  mov r15, r8
 11489                                  
 11490 00006F68 4983C704                        add r15, 4
 11491                                  
 11492 00006F6C 49C1E703                        shl r15, 3
 11493                                  
 11494 00006F70 4C01FC                          add rsp, r15
 11495 00006F73 5D                      	pop rbp                                  ; restore the old rbp
 11496                                  
 11497 00006F74 488B4D00                        mov rcx, qword [rbp]
 11498 00006F78 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11499                                            ; rbx <- code(proc)
 11500                                  
 11501 00006F7C FFE3                            jmp rbx
 11502                                  	.L_if_end_0251:
 11503                                  	.L_if_end_0250:
 11504 00006F7E E9C7020000              	jmp .L_if_end_024c
 11505                                  	.L_if_else_024c:
 11506 00006F83 488B4520                	mov rax, qword [rbp + 32]
 11507 00006F87 50                      	push rax
 11508 00006F88 6A01                    	push 1
 11509 00006F8A 488B0425[40000000]      	mov rax, qword [free_var_8]
 11510 00006F92 803805                  	cmp byte [rax], T_closure 
 11511 00006F95 0F8567C80000                    jne L_code_ptr_error
 11512                                  
 11513 00006F9B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11514                                  
 11515 00006F9F 53                              push rbx
 11516                                  
 11517 00006FA0 FF5009                          call SOB_CLOSURE_CODE(rax)
 11518                                  
 11519 00006FA3 483D[02000000]                  	cmp rax, sob_boolean_false
 11520 00006FA9 0F8419020000            	je .L_if_else_024d
 11521 00006FAF 488B4528                mov rax, qword [rbp + 40]
 11522 00006FB3 50                      	push rax
 11523 00006FB4 6A01                    	push 1
 11524 00006FB6 488B0425[48000000]      	mov rax, qword [free_var_9]
 11525 00006FBE 803805                  	cmp byte [rax], T_closure 
 11526 00006FC1 0F853BC80000                    jne L_code_ptr_error
 11527                                  
 11528 00006FC7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11529                                  
 11530 00006FCB 53                              push rbx
 11531                                  
 11532 00006FCC FF5009                          call SOB_CLOSURE_CODE(rax)
 11533                                  
 11534 00006FCF 483D[02000000]                  	cmp rax, sob_boolean_false
 11535 00006FD5 0F84AB000000            	je .L_if_else_024e
 11536 00006FDB 488B4528                mov rax, qword [rbp + 40]
 11537 00006FDF 50                      	push rax
 11538 00006FE0 6A01                    	push 1
 11539 00006FE2 488B0425[B8000000]      	mov rax, qword [free_var_23]
 11540 00006FEA 803805                  	cmp byte [rax], T_closure 
 11541 00006FED 0F850FC80000                    jne L_code_ptr_error
 11542                                  
 11543 00006FF3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11544                                  
 11545 00006FF7 53                              push rbx
 11546                                  
 11547 00006FF8 FF5009                          call SOB_CLOSURE_CODE(rax)
 11548                                  
 11549 00006FFB 50                              	push rax
 11550 00006FFC 488B4520                mov rax, qword [rbp + 32]
 11551 00007000 50                      	push rax
 11552 00007001 6A02                    	push 2
 11553 00007003 488B0425[F8000000]      	mov rax, qword [free_var_31]
 11554                                  .L_lambda_simple_arity_check_ok_086d:
 11555 0000700B 803805                  	cmp byte [rax], T_closure
 11556                                  
 11557 0000700E 0F85EEC70000                    jne L_code_ptr_error                      ; rax <- proc
 11558                                  
 11559                                  
 11560 00007014 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11561                                  
 11562 00007018 53                              push rbx                                  ; env pushed
 11563                                  
 11564 00007019 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11565                                  
 11566                                          ; sagydebug
 11567                                  
 11568 0000701C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11569                                  
 11570                                          
 11571                                          
 11572 0000701F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11573                                  
 11574 00007023 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11575                                  
 11576                                  
 11577 00007028 4D89CA                          mov r10, r9
 11578 0000702B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 11579                                          
 11580 0000702F 4D89D7                          mov r15, r10
 11581 00007032 4983C7FF                        add r15, -1
 11582                                                                                         
 11583 00007036 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11584 00007039 4983C404                        add r12, 4
 11585 0000703D 4983C4FF                        add r12, -1
 11586                                  
 11587 00007041 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11588                                  .L_tc_recycle_frame_loop_0488:
 11589 00007047 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 11590                                  
 11591 0000704B 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11592                                  
 11593                                  
 11594                                  
 11595 00007050 41BE00000000                    mov r14, 0                                ; clean box
 11596                                  
 11597                                  
 11598 00007056 4983C7FF                        add r15, -1           
 11599 0000705A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11600                                  
 11601 0000705E 4983C4FF                        add r12, -1 
 11602                                  
 11603 00007062 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11604 00007066 75DF                    	jne .L_tc_recycle_frame_loop_0488
 11605                                  .L_tc_recycle_frame_done_0488:
 11606                                  ;this pop rbp in sot to the right place
 11607 00007068 4D89C7                  mov r15, r8
 11608                                  
 11609 0000706B 4983C704                        add r15, 4
 11610                                  
 11611 0000706F 49C1E703                        shl r15, 3
 11612                                  
 11613 00007073 4C01FC                          add rsp, r15
 11614 00007076 5D                      	pop rbp                                  ; restore the old rbp
 11615                                  
 11616 00007077 488B4D00                        mov rcx, qword [rbp]
 11617 0000707B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11618                                            ; rbx <- code(proc)
 11619                                  
 11620 0000707F FFE3                            jmp rbx
 11621 00007081 E93D010000              	jmp .L_if_end_024e
 11622                                  	.L_if_else_024e:
 11623 00007086 488B4528                	mov rax, qword [rbp + 40]
 11624 0000708A 50                      	push rax
 11625 0000708B 6A01                    	push 1
 11626 0000708D 488B0425[40000000]      	mov rax, qword [free_var_8]
 11627 00007095 803805                  	cmp byte [rax], T_closure 
 11628 00007098 0F8564C70000                    jne L_code_ptr_error
 11629                                  
 11630 0000709E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11631                                  
 11632 000070A2 53                              push rbx
 11633                                  
 11634 000070A3 FF5009                          call SOB_CLOSURE_CODE(rax)
 11635                                  
 11636 000070A6 483D[02000000]                  	cmp rax, sob_boolean_false
 11637 000070AC 0F848F000000            	je .L_if_else_024f
 11638 000070B2 488B4528                mov rax, qword [rbp + 40]
 11639 000070B6 50                      	push rax
 11640 000070B7 488B4520                mov rax, qword [rbp + 32]
 11641 000070BB 50                      	push rax
 11642 000070BC 6A02                    	push 2
 11643 000070BE 488B0425[F8000000]      	mov rax, qword [free_var_31]
 11644                                  .L_lambda_simple_arity_check_ok_086c:
 11645 000070C6 803805                  	cmp byte [rax], T_closure
 11646                                  
 11647 000070C9 0F8533C70000                    jne L_code_ptr_error                      ; rax <- proc
 11648                                  
 11649                                  
 11650 000070CF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11651                                  
 11652 000070D3 53                              push rbx                                  ; env pushed
 11653                                  
 11654 000070D4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11655                                  
 11656                                          ; sagydebug
 11657                                  
 11658 000070D7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11659                                  
 11660                                          
 11661                                          
 11662 000070DA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11663                                  
 11664 000070DE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11665                                  
 11666                                  
 11667 000070E3 4D89CA                          mov r10, r9
 11668 000070E6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 11669                                          
 11670 000070EA 4D89D7                          mov r15, r10
 11671 000070ED 4983C7FF                        add r15, -1
 11672                                                                                         
 11673 000070F1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11674 000070F4 4983C404                        add r12, 4
 11675 000070F8 4983C4FF                        add r12, -1
 11676                                  
 11677 000070FC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11678                                  .L_tc_recycle_frame_loop_0487:
 11679 00007102 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 11680                                  
 11681 00007106 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11682                                  
 11683                                  
 11684                                  
 11685 0000710B 41BE00000000                    mov r14, 0                                ; clean box
 11686                                  
 11687                                  
 11688 00007111 4983C7FF                        add r15, -1           
 11689 00007115 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11690                                  
 11691 00007119 4983C4FF                        add r12, -1 
 11692                                  
 11693 0000711D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11694 00007121 75DF                    	jne .L_tc_recycle_frame_loop_0487
 11695                                  .L_tc_recycle_frame_done_0487:
 11696                                  ;this pop rbp in sot to the right place
 11697 00007123 4D89C7                  mov r15, r8
 11698                                  
 11699 00007126 4983C704                        add r15, 4
 11700                                  
 11701 0000712A 49C1E703                        shl r15, 3
 11702                                  
 11703 0000712E 4C01FC                          add rsp, r15
 11704 00007131 5D                      	pop rbp                                  ; restore the old rbp
 11705                                  
 11706 00007132 488B4D00                        mov rcx, qword [rbp]
 11707 00007136 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11708                                            ; rbx <- code(proc)
 11709                                  
 11710 0000713A FFE3                            jmp rbx
 11711 0000713C E982000000              	jmp .L_if_end_024f
 11712                                  	.L_if_else_024f:
 11713 00007141 6A00                    		push 0
 11714 00007143 488B4510                mov rax, qword [rbp + 16]
 11715 00007147 488B00                  mov rax, qword [rax + 0]
 11716 0000714A 488B00                  mov rax, qword [rax + 0]
 11717                                  .L_lambda_simple_arity_check_ok_086b:
 11718 0000714D 803805                  	cmp byte [rax], T_closure
 11719                                  
 11720 00007150 0F85ACC60000                    jne L_code_ptr_error                      ; rax <- proc
 11721                                  
 11722                                  
 11723 00007156 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11724                                  
 11725 0000715A 53                              push rbx                                  ; env pushed
 11726                                  
 11727 0000715B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11728                                  
 11729                                          ; sagydebug
 11730                                  
 11731 0000715E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11732                                  
 11733                                          
 11734                                          
 11735 00007161 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11736                                  
 11737 00007165 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11738                                  
 11739                                  
 11740 0000716A 4D89CA                          mov r10, r9
 11741 0000716D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 11742                                          
 11743 00007171 4D89D7                          mov r15, r10
 11744 00007174 4983C7FF                        add r15, -1
 11745                                                                                         
 11746 00007178 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11747 0000717B 4983C404                        add r12, 4
 11748 0000717F 4983C4FF                        add r12, -1
 11749                                  
 11750 00007183 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11751                                  .L_tc_recycle_frame_loop_0486:
 11752 00007189 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 11753                                  
 11754 0000718D 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11755                                  
 11756                                  
 11757                                  
 11758 00007192 41BE00000000                    mov r14, 0                                ; clean box
 11759                                  
 11760                                  
 11761 00007198 4983C7FF                        add r15, -1           
 11762 0000719C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11763                                  
 11764 000071A0 4983C4FF                        add r12, -1 
 11765                                  
 11766 000071A4 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11767 000071A8 75DF                    	jne .L_tc_recycle_frame_loop_0486
 11768                                  .L_tc_recycle_frame_done_0486:
 11769                                  ;this pop rbp in sot to the right place
 11770 000071AA 4D89C7                  mov r15, r8
 11771                                  
 11772 000071AD 4983C704                        add r15, 4
 11773                                  
 11774 000071B1 49C1E703                        shl r15, 3
 11775                                  
 11776 000071B5 4C01FC                          add rsp, r15
 11777 000071B8 5D                      	pop rbp                                  ; restore the old rbp
 11778                                  
 11779 000071B9 488B4D00                        mov rcx, qword [rbp]
 11780 000071BD 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11781                                            ; rbx <- code(proc)
 11782                                  
 11783 000071C1 FFE3                            jmp rbx
 11784                                  	.L_if_end_024f:
 11785                                  	.L_if_end_024e:
 11786 000071C3 E982000000              	jmp .L_if_end_024d
 11787                                  	.L_if_else_024d:
 11788 000071C8 6A00                    		push 0
 11789 000071CA 488B4510                mov rax, qword [rbp + 16]
 11790 000071CE 488B00                  mov rax, qword [rax + 0]
 11791 000071D1 488B00                  mov rax, qword [rax + 0]
 11792                                  .L_lambda_simple_arity_check_ok_086a:
 11793 000071D4 803805                  	cmp byte [rax], T_closure
 11794                                  
 11795 000071D7 0F8525C60000                    jne L_code_ptr_error                      ; rax <- proc
 11796                                  
 11797                                  
 11798 000071DD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11799                                  
 11800 000071E1 53                              push rbx                                  ; env pushed
 11801                                  
 11802 000071E2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11803                                  
 11804                                          ; sagydebug
 11805                                  
 11806 000071E5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11807                                  
 11808                                          
 11809                                          
 11810 000071E8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11811                                  
 11812 000071EC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11813                                  
 11814                                  
 11815 000071F1 4D89CA                          mov r10, r9
 11816 000071F4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 11817                                          
 11818 000071F8 4D89D7                          mov r15, r10
 11819 000071FB 4983C7FF                        add r15, -1
 11820                                                                                         
 11821 000071FF 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11822 00007202 4983C404                        add r12, 4
 11823 00007206 4983C4FF                        add r12, -1
 11824                                  
 11825 0000720A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11826                                  .L_tc_recycle_frame_loop_0485:
 11827 00007210 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 11828                                  
 11829 00007214 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11830                                  
 11831                                  
 11832                                  
 11833 00007219 41BE00000000                    mov r14, 0                                ; clean box
 11834                                  
 11835                                  
 11836 0000721F 4983C7FF                        add r15, -1           
 11837 00007223 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11838                                  
 11839 00007227 4983C4FF                        add r12, -1 
 11840                                  
 11841 0000722B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11842 0000722F 75DF                    	jne .L_tc_recycle_frame_loop_0485
 11843                                  .L_tc_recycle_frame_done_0485:
 11844                                  ;this pop rbp in sot to the right place
 11845 00007231 4D89C7                  mov r15, r8
 11846                                  
 11847 00007234 4983C704                        add r15, 4
 11848                                  
 11849 00007238 49C1E703                        shl r15, 3
 11850                                  
 11851 0000723C 4C01FC                          add rsp, r15
 11852 0000723F 5D                      	pop rbp                                  ; restore the old rbp
 11853                                  
 11854 00007240 488B4D00                        mov rcx, qword [rbp]
 11855 00007244 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11856                                            ; rbx <- code(proc)
 11857                                  
 11858 00007248 FFE3                            jmp rbx
 11859                                  	.L_if_end_024d:
 11860                                  	.L_if_end_024c:
 11861 0000724A C9                      	leave
 11862 0000724B C22000                  	ret 8 * (2 + 2)
 11863                                  .L_lambda_simple_end_03e5:	; new closure is in rax
 11864 0000724E 50                      	push rax
 11865 0000724F 6A01                    	push 1
 11866 00007251 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11867 00007256 E8ECB50000              	call malloc
 11868 0000725B 50                      	push rax
 11869 0000725C BF08000000              	mov rdi, 8 * 1	; new rib
 11870 00007261 E8E1B50000              	call malloc
 11871 00007266 50                      	push rax
 11872 00007267 BF10000000              	mov rdi, 8 * 2	; extended env
 11873 0000726C E8D6B50000              	call malloc
 11874 00007271 488B7D10                	mov rdi, ENV
 11875 00007275 BE00000000              	mov rsi, 0
 11876 0000727A BA01000000              	mov rdx, 1
 11877                                  .L_lambda_simple_env_loop_03e6:	; ext_env[i + 1] <-- env[i]
 11878 0000727F 4883FE01                	cmp rsi, 1
 11879 00007283 7410                    	je .L_lambda_simple_env_end_03e6
 11880 00007285 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11881 00007289 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11882 0000728D 48FFC6                  	inc rsi
 11883 00007290 48FFC2                  	inc rdx
 11884 00007293 EBEA                    	jmp .L_lambda_simple_env_loop_03e6
 11885                                  .L_lambda_simple_env_end_03e6:
 11886 00007295 5B                      	pop rbx
 11887 00007296 BE00000000              	mov rsi, 0
 11888                                  .L_lambda_simple_params_loop_03e6:	; copy params
 11889 0000729B 4883FE01                	cmp rsi, 1
 11890 0000729F 740E                    	je .L_lambda_simple_params_end_03e6
 11891 000072A1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11892 000072A6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11893 000072AA 48FFC6                  	inc rsi
 11894 000072AD EBEC                    	jmp .L_lambda_simple_params_loop_03e6
 11895                                  .L_lambda_simple_params_end_03e6:
 11896 000072AF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11897 000072B2 4889C3                  	mov rbx, rax
 11898 000072B5 58                      	pop rax
 11899 000072B6 C60005                  	mov byte [rax], T_closure
 11900 000072B9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11901 000072BD 48C74009[CA720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e6
 11902 000072C5 E926040000              	jmp .L_lambda_simple_end_03e6
 11903                                  .L_lambda_simple_code_03e6:	; lambda-simple body
 11904 000072CA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11905 000072D0 740B                    	je .L_lambda_simple_arity_check_ok_0871
 11906 000072D2 FF742410                	push qword [rsp + 8 * 2]
 11907 000072D6 6A01                    	push 1
 11908 000072D8 E923B50000              	jmp L_error_incorrect_arity_simple
 11909                                  .L_lambda_simple_arity_check_ok_0871:
 11910 000072DD C8000000                	enter 0, 0
 11911 000072E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11912 000072E6 E85CB50000              	call malloc
 11913 000072EB 50                      	push rax
 11914 000072EC BF08000000              	mov rdi, 8 * 1	; new rib
 11915 000072F1 E851B50000              	call malloc
 11916 000072F6 50                      	push rax
 11917 000072F7 BF18000000              	mov rdi, 8 * 3	; extended env
 11918 000072FC E846B50000              	call malloc
 11919 00007301 488B7D10                	mov rdi, ENV
 11920 00007305 BE00000000              	mov rsi, 0
 11921 0000730A BA01000000              	mov rdx, 1
 11922                                  .L_lambda_opt_env_loop_0095:	; ext_env[i + 1] <-- env[i]
 11923 0000730F 4883FE02                	cmp rsi, 2
 11924 00007313 7410                    	je .L_lambda_opt_env_end_0095
 11925 00007315 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11926 00007319 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11927 0000731D 48FFC6                  	inc rsi
 11928 00007320 48FFC2                  	inc rdx
 11929 00007323 EBEA                    	jmp .L_lambda_opt_env_loop_0095
 11930                                  .L_lambda_opt_env_end_0095:
 11931 00007325 5B                      	pop rbx
 11932 00007326 BE00000000              	mov rsi, 0
 11933                                  .L_lambda_opt_params_loop_01bd:	; copy params
 11934 0000732B 4883FE01                	cmp rsi, 1
 11935 0000732F 740E                    	je .L_lambda_opt_params_end_01bd
 11936 00007331 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11937 00007336 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11938 0000733A 48FFC6                  	inc rsi
 11939 0000733D EBEC                    	jmp .L_lambda_opt_params_loop_01bd
 11940                                  .L_lambda_opt_params_end_01bd:
 11941 0000733F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11942 00007342 4889C3                  	mov rbx, rax
 11943 00007345 58                      	pop rax
 11944 00007346 C60005                  	mov byte [rax], T_closure
 11945 00007349 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11946 0000734D 48C74009[5A730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0095
 11947 00007355 E992030000              	jmp .L_lambda_opt_end_0095
 11948                                  .L_lambda_opt_code_0095:
 11949 0000735A 4C8B542410              mov r10, qword [rsp+8*2]
 11950 0000735F 4983FA01                cmp r10, 1
 11951 00007363 740B                    je .L_lambda_opt_arity_check_exact_0095
 11952 00007365 4983FA01                cmp r10, 1
 11953 00007369 7F44                    jg .L_lambda_opt_arity_check_more_0095
 11954 0000736B E9A4B40000              jmp L_error_incorrect_arity_opt
 11955                                  .L_lambda_opt_arity_check_exact_0095:
 11956 00007370 4883EC08                sub rsp, 8
 11957 00007374 BA04000000              mov rdx, 3+1
 11958 00007379 4889E3                  mov qword rbx, rsp
 11959                                  .L_lambda_opt_params_loop_01be:
 11960 0000737C 488B4B08                mov qword rcx, [rbx+8]
 11961 00007380 48890B                  mov qword [rbx], rcx
 11962 00007383 48FFCA                  dec rdx
 11963 00007386 4883C308                add rbx, 8
 11964 0000738A 4883FA00                cmp rdx, 0
 11965 0000738E 7402                    je .L_lambda_opt_params_end_01be
 11966 00007390 EBEA                    jmp .L_lambda_opt_params_loop_01be
 11967                                  .L_lambda_opt_params_end_01be:
 11968 00007392 49FFC2                  inc r10
 11969 00007395 4C89542410              mov qword [rsp+8*2], r10
 11970 0000739A 4983C202                add r10, 2
 11971 0000739E 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 11972 000073A6 4C8B4D00                mov r9, [rbp]
 11973 000073AA E996000000              jmp .L_lambda_opt_stack_adjusted_0095
 11974                                  .L_lambda_opt_arity_check_more_0095:
 11975 000073AF 4C8B6C2410              mov r13, [rsp+2*8]
 11976 000073B4 48B8-                   mov rax, sob_nil
 11976 000073B6 [0100000000000000] 
 11977 000073BE 4C8B542410              mov r10, [rsp+2*8]
 11978 000073C3 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 11979 000073C8 4983EA01                sub r10, 1
 11980                                  .L_lambda_opt_stack_shrink_loop_0095:
 11981 000073CC 4983FA00                cmp r10, 0
 11982 000073D0 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0095
 11983 000073D2 4889C1                  mov rcx, rax
 11984 000073D5 498B10                  mov rdx, [r8]
 11985 000073D8 BF11000000              mov rdi, 17
 11986 000073DD E865B40000              call malloc
 11987 000073E2 C60021                  mov byte [rax], T_pair
 11988 000073E5 48894809                mov SOB_PAIR_CDR(rax), rcx
 11989 000073E9 48895001                mov SOB_PAIR_CAR(rax), rdx
 11990 000073ED 4983E808                sub r8, 8
 11991 000073F1 49FFCA                  dec r10
 11992 000073F4 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0095
 11993                                  .L_lambda_opt_stack_shrink_loop_exit_0095:
 11994 000073F6 4889442420              mov [rsp+8*(2+2)], rax
 11995 000073FB 41BA02000000            mov r10, 2
 11996 00007401 4C89542410              mov [rsp+16], r10
 11997 00007406 4989E4                  mov r12, rsp
 11998 00007409 4983C420                add r12, 8*(2+2)
 11999 0000740D 4C2B6C2410              sub r13, [rsp+16]
 12000 00007412 4D89EA                  mov r10, r13
 12001 00007415 49C1E203                shl r10, 3
 12002 00007419 4D89D7                  mov r15, r10
 12003 0000741C 4D01E2                  add r10, r12
 12004 0000741F 4C8B4C2410              mov r9, [rsp+16]
 12005 00007424 4983C103                add r9, 3
 12006                                  .L_lambda_opt_params_loop_01bf:
 12007 00007428 4983F900                cmp r9, 0
 12008 0000742C 7414                    je .L_lambda_opt_params_end_01bf
 12009 0000742E 4D8B3424                mov r14, [r12]
 12010 00007432 4D8932                  mov [r10], r14
 12011 00007435 4983EC08                sub r12, 8
 12012 00007439 4983EA08                sub r10, 8
 12013 0000743D 49FFC9                  dec r9
 12014 00007440 EBE6                    jmp .L_lambda_opt_params_loop_01bf
 12015                                  .L_lambda_opt_params_end_01bf:
 12016 00007442 4C01FC                  add rsp, r15
 12017                                  .L_lambda_opt_stack_adjusted_0095:
 12018 00007445 4C8B4D00                mov r9, [rbp]
 12019 00007449 C8000000                enter 0, 0
 12020 0000744D 488B4528                mov rax, qword [rbp + 40]
 12021 00007451 50                      	push rax
 12022 00007452 6A01                    	push 1
 12023 00007454 488B0425[00000000]      	mov rax, qword [free_var_0]
 12024 0000745C 803805                  	cmp byte [rax], T_closure 
 12025 0000745F 0F859DC30000                    jne L_code_ptr_error
 12026                                  
 12027 00007465 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12028                                  
 12029 00007469 53                              push rbx
 12030                                  
 12031 0000746A FF5009                          call SOB_CLOSURE_CODE(rax)
 12032                                  
 12033 0000746D 483D[02000000]                  	cmp rax, sob_boolean_false
 12034 00007473 0F8497000000            	je .L_if_else_0252
 12035 00007479 488B4520                mov rax, qword [rbp + 32]
 12036 0000747D 50                      	push rax
 12037 0000747E 48B8-                   	mov rax, qword (L_constants + 31)
 12037 00007480 [1F00000000000000] 
 12038 00007488 50                      	push rax
 12039 00007489 6A02                    	push 2
 12040 0000748B 488B4510                mov rax, qword [rbp + 16]
 12041 0000748F 488B00                  mov rax, qword [rax + 0]
 12042 00007492 488B00                  mov rax, qword [rax + 0]
 12043                                  .L_lambda_simple_arity_check_ok_0875:
 12044 00007495 803805                  	cmp byte [rax], T_closure
 12045                                  
 12046 00007498 0F8564C30000                    jne L_code_ptr_error                      ; rax <- proc
 12047                                  
 12048                                  
 12049 0000749E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12050                                  
 12051 000074A2 53                              push rbx                                  ; env pushed
 12052                                  
 12053 000074A3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12054                                  
 12055                                          ; sagydebug
 12056                                  
 12057 000074A6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12058                                  
 12059                                          
 12060                                          
 12061 000074A9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12062                                  
 12063 000074AD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12064                                  
 12065                                  
 12066 000074B2 4D89CA                          mov r10, r9
 12067 000074B5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12068                                          
 12069 000074B9 4D89D7                          mov r15, r10
 12070 000074BC 4983C7FF                        add r15, -1
 12071                                                                                         
 12072 000074C0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12073 000074C3 4983C404                        add r12, 4
 12074 000074C7 4983C4FF                        add r12, -1
 12075                                  
 12076 000074CB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12077                                  .L_tc_recycle_frame_loop_048e:
 12078 000074D1 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12079                                  
 12080 000074D5 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12081                                  
 12082                                  
 12083                                  
 12084 000074DA 41BE00000000                    mov r14, 0                                ; clean box
 12085                                  
 12086                                  
 12087 000074E0 4983C7FF                        add r15, -1           
 12088 000074E4 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12089                                  
 12090 000074E8 4983C4FF                        add r12, -1 
 12091                                  
 12092 000074EC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12093 000074F0 75DF                    	jne .L_tc_recycle_frame_loop_048e
 12094                                  .L_tc_recycle_frame_done_048e:
 12095                                  ;this pop rbp in sot to the right place
 12096 000074F2 4D89C7                  mov r15, r8
 12097                                  
 12098 000074F5 4983C704                        add r15, 4
 12099                                  
 12100 000074F9 49C1E703                        shl r15, 3
 12101                                  
 12102 000074FD 4C01FC                          add rsp, r15
 12103 00007500 5D                      	pop rbp                                  ; restore the old rbp
 12104                                  
 12105 00007501 488B4D00                        mov rcx, qword [rbp]
 12106 00007505 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12107                                            ; rbx <- code(proc)
 12108                                  
 12109 00007509 FFE3                            jmp rbx
 12110 0000750B E9D4010000              	jmp .L_if_end_0252
 12111                                  	.L_if_else_0252:
 12112 00007510 488B4528                	mov rax, qword [rbp + 40]
 12113 00007514 50                      	push rax
 12114 00007515 48B8-                   	mov rax, qword (L_constants + 31)
 12114 00007517 [1F00000000000000] 
 12115 0000751F 50                      	push rax
 12116 00007520 488B0425[08030000]      	mov rax, qword [free_var_97]
 12117 00007528 50                      	push rax
 12118 00007529 6A03                    	push 3
 12119 0000752B 488B0425[F8020000]      	mov rax, qword [free_var_95]
 12120 00007533 803805                  	cmp byte [rax], T_closure 
 12121 00007536 0F85C6C20000                    jne L_code_ptr_error
 12122                                  
 12123 0000753C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12124                                  
 12125 00007540 53                              push rbx
 12126                                  
 12127 00007541 FF5009                          call SOB_CLOSURE_CODE(rax)
 12128                                  
 12129 00007544 50                              	push rax
 12130 00007545 6A01                    	push 1
 12131 00007547 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12132 0000754C E8F6B20000              	call malloc
 12133 00007551 50                      	push rax
 12134 00007552 BF10000000              	mov rdi, 8 * 2	; new rib
 12135 00007557 E8EBB20000              	call malloc
 12136 0000755C 50                      	push rax
 12137 0000755D BF20000000              	mov rdi, 8 * 4	; extended env
 12138 00007562 E8E0B20000              	call malloc
 12139 00007567 488B7D10                	mov rdi, ENV
 12140 0000756B BE00000000              	mov rsi, 0
 12141 00007570 BA01000000              	mov rdx, 1
 12142                                  .L_lambda_simple_env_loop_03e7:	; ext_env[i + 1] <-- env[i]
 12143 00007575 4883FE03                	cmp rsi, 3
 12144 00007579 7410                    	je .L_lambda_simple_env_end_03e7
 12145 0000757B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12146 0000757F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12147 00007583 48FFC6                  	inc rsi
 12148 00007586 48FFC2                  	inc rdx
 12149 00007589 EBEA                    	jmp .L_lambda_simple_env_loop_03e7
 12150                                  .L_lambda_simple_env_end_03e7:
 12151 0000758B 5B                      	pop rbx
 12152 0000758C BE00000000              	mov rsi, 0
 12153                                  .L_lambda_simple_params_loop_03e7:	; copy params
 12154 00007591 4883FE02                	cmp rsi, 2
 12155 00007595 740E                    	je .L_lambda_simple_params_end_03e7
 12156 00007597 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12157 0000759C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12158 000075A0 48FFC6                  	inc rsi
 12159 000075A3 EBEC                    	jmp .L_lambda_simple_params_loop_03e7
 12160                                  .L_lambda_simple_params_end_03e7:
 12161 000075A5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12162 000075A8 4889C3                  	mov rbx, rax
 12163 000075AB 58                      	pop rax
 12164 000075AC C60005                  	mov byte [rax], T_closure
 12165 000075AF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12166 000075B3 48C74009[C0750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e7
 12167 000075BB E9AE000000              	jmp .L_lambda_simple_end_03e7
 12168                                  .L_lambda_simple_code_03e7:	; lambda-simple body
 12169 000075C0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12170 000075C6 740B                    	je .L_lambda_simple_arity_check_ok_0872
 12171 000075C8 FF742410                	push qword [rsp + 8 * 2]
 12172 000075CC 6A01                    	push 1
 12173 000075CE E92DB20000              	jmp L_error_incorrect_arity_simple
 12174                                  .L_lambda_simple_arity_check_ok_0872:
 12175 000075D3 C8000000                	enter 0, 0
 12176 000075D7 488B4520                mov rax, qword [rbp + 32]
 12177 000075DB 50                      	push rax
 12178 000075DC 488B4510                mov rax, qword [rbp + 16]
 12179 000075E0 488B00                  mov rax, qword [rax + 0]
 12180 000075E3 488B00                  mov rax, qword [rax + 0]
 12181 000075E6 50                      	push rax
 12182 000075E7 6A02                    	push 2
 12183 000075E9 488B4510                mov rax, qword [rbp + 16]
 12184 000075ED 488B4008                mov rax, qword [rax + 8]
 12185 000075F1 488B00                  mov rax, qword [rax + 0]
 12186                                  .L_lambda_simple_arity_check_ok_0873:
 12187 000075F4 803805                  	cmp byte [rax], T_closure
 12188                                  
 12189 000075F7 0F8505C20000                    jne L_code_ptr_error                      ; rax <- proc
 12190                                  
 12191                                  
 12192 000075FD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12193                                  
 12194 00007601 53                              push rbx                                  ; env pushed
 12195                                  
 12196 00007602 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12197                                  
 12198                                          ; sagydebug
 12199                                  
 12200 00007605 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12201                                  
 12202                                          
 12203                                          
 12204 00007608 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12205                                  
 12206 0000760C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12207                                  
 12208                                  
 12209 00007611 4D89CA                          mov r10, r9
 12210 00007614 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12211                                          
 12212 00007618 4D89D7                          mov r15, r10
 12213 0000761B 4983C7FF                        add r15, -1
 12214                                                                                         
 12215 0000761F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12216 00007622 4983C404                        add r12, 4
 12217 00007626 4983C4FF                        add r12, -1
 12218                                  
 12219 0000762A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12220                                  .L_tc_recycle_frame_loop_048c:
 12221 00007630 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12222                                  
 12223 00007634 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12224                                  
 12225                                  
 12226                                  
 12227 00007639 41BE00000000                    mov r14, 0                                ; clean box
 12228                                  
 12229                                  
 12230 0000763F 4983C7FF                        add r15, -1           
 12231 00007643 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12232                                  
 12233 00007647 4983C4FF                        add r12, -1 
 12234                                  
 12235 0000764B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12236 0000764F 75DF                    	jne .L_tc_recycle_frame_loop_048c
 12237                                  .L_tc_recycle_frame_done_048c:
 12238                                  ;this pop rbp in sot to the right place
 12239 00007651 4D89C7                  mov r15, r8
 12240                                  
 12241 00007654 4983C704                        add r15, 4
 12242                                  
 12243 00007658 49C1E703                        shl r15, 3
 12244                                  
 12245 0000765C 4C01FC                          add rsp, r15
 12246 0000765F 5D                      	pop rbp                                  ; restore the old rbp
 12247                                  
 12248 00007660 488B4D00                        mov rcx, qword [rbp]
 12249 00007664 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12250                                            ; rbx <- code(proc)
 12251                                  
 12252 00007668 FFE3                            jmp rbx
 12253 0000766A C9                      	leave
 12254 0000766B C21800                  	ret 8 * (2 + 1)
 12255                                  .L_lambda_simple_end_03e7:	; new closure is in rax
 12256                                  .L_lambda_simple_arity_check_ok_0874:
 12257 0000766E 803805                  	cmp byte [rax], T_closure
 12258                                  
 12259 00007671 0F858BC10000                    jne L_code_ptr_error                      ; rax <- proc
 12260                                  
 12261                                  
 12262 00007677 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12263                                  
 12264 0000767B 53                              push rbx                                  ; env pushed
 12265                                  
 12266 0000767C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12267                                  
 12268                                          ; sagydebug
 12269                                  
 12270 0000767F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12271                                  
 12272                                          
 12273                                          
 12274 00007682 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12275                                  
 12276 00007686 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12277                                  
 12278                                  
 12279 0000768B 4D89CA                          mov r10, r9
 12280 0000768E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12281                                          
 12282 00007692 4D89D7                          mov r15, r10
 12283 00007695 4983C7FF                        add r15, -1
 12284                                                                                         
 12285 00007699 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12286 0000769C 4983C404                        add r12, 4
 12287 000076A0 4983C4FF                        add r12, -1
 12288                                  
 12289 000076A4 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12290                                  .L_tc_recycle_frame_loop_048d:
 12291 000076AA 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12292                                  
 12293 000076AE 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12294                                  
 12295                                  
 12296                                  
 12297 000076B3 41BE00000000                    mov r14, 0                                ; clean box
 12298                                  
 12299                                  
 12300 000076B9 4983C7FF                        add r15, -1           
 12301 000076BD 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12302                                  
 12303 000076C1 4983C4FF                        add r12, -1 
 12304                                  
 12305 000076C5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12306 000076C9 75DF                    	jne .L_tc_recycle_frame_loop_048d
 12307                                  .L_tc_recycle_frame_done_048d:
 12308                                  ;this pop rbp in sot to the right place
 12309 000076CB 4D89C7                  mov r15, r8
 12310                                  
 12311 000076CE 4983C704                        add r15, 4
 12312                                  
 12313 000076D2 49C1E703                        shl r15, 3
 12314                                  
 12315 000076D6 4C01FC                          add rsp, r15
 12316 000076D9 5D                      	pop rbp                                  ; restore the old rbp
 12317                                  
 12318 000076DA 488B4D00                        mov rcx, qword [rbp]
 12319 000076DE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12320                                            ; rbx <- code(proc)
 12321                                  
 12322 000076E2 FFE3                            jmp rbx
 12323                                  	.L_if_end_0252:
 12324 000076E4 C9                      leave
 12325 000076E5 4C8B4D00                mov r9, [rbp]
 12326 000076E9 C22000                  ret 8 * (3 + 1)
 12327                                  .L_lambda_opt_end_0095:	; new closure is in rax
 12328 000076EC C9                      	leave
 12329 000076ED C21800                  	ret 8 * (2 + 1)
 12330                                  .L_lambda_simple_end_03e6:	; new closure is in rax
 12331                                  .L_lambda_simple_arity_check_ok_0876:
 12332 000076F0 803805                  	cmp byte [rax], T_closure
 12333                                  
 12334 000076F3 0F8509C10000                    jne L_code_ptr_error                      ; rax <- proc
 12335                                  
 12336                                  
 12337 000076F9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12338                                  
 12339 000076FD 53                              push rbx                                  ; env pushed
 12340                                  
 12341 000076FE FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12342                                  
 12343                                          ; sagydebug
 12344                                  
 12345 00007701 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12346                                  
 12347                                          
 12348                                          
 12349 00007704 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12350                                  
 12351 00007708 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12352                                  
 12353                                  
 12354 0000770D 4D89CA                          mov r10, r9
 12355 00007710 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12356                                          
 12357 00007714 4D89D7                          mov r15, r10
 12358 00007717 4983C7FF                        add r15, -1
 12359                                                                                         
 12360 0000771B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12361 0000771E 4983C404                        add r12, 4
 12362 00007722 4983C4FF                        add r12, -1
 12363                                  
 12364 00007726 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12365                                  .L_tc_recycle_frame_loop_048f:
 12366 0000772C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12367                                  
 12368 00007730 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12369                                  
 12370                                  
 12371                                  
 12372 00007735 41BE00000000                    mov r14, 0                                ; clean box
 12373                                  
 12374                                  
 12375 0000773B 4983C7FF                        add r15, -1           
 12376 0000773F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12377                                  
 12378 00007743 4983C4FF                        add r12, -1 
 12379                                  
 12380 00007747 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12381 0000774B 75DF                    	jne .L_tc_recycle_frame_loop_048f
 12382                                  .L_tc_recycle_frame_done_048f:
 12383                                  ;this pop rbp in sot to the right place
 12384 0000774D 4D89C7                  mov r15, r8
 12385                                  
 12386 00007750 4983C704                        add r15, 4
 12387                                  
 12388 00007754 49C1E703                        shl r15, 3
 12389                                  
 12390 00007758 4C01FC                          add rsp, r15
 12391 0000775B 5D                      	pop rbp                                  ; restore the old rbp
 12392                                  
 12393 0000775C 488B4D00                        mov rcx, qword [rbp]
 12394 00007760 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12395                                            ; rbx <- code(proc)
 12396                                  
 12397 00007764 FFE3                            jmp rbx
 12398 00007766 C9                      	leave
 12399 00007767 C21800                  	ret 8 * (2 + 1)
 12400                                  .L_lambda_simple_end_03e4:	; new closure is in rax
 12401 0000776A 803805                  	cmp byte [rax], T_closure 
 12402 0000776D 0F858FC00000                    jne L_code_ptr_error
 12403                                  
 12404 00007773 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12405                                  
 12406 00007777 53                              push rbx
 12407                                  
 12408 00007778 FF5009                          call SOB_CLOSURE_CODE(rax)
 12409                                  
 12410 0000777B 48890425[10030000]              	mov qword [free_var_98], rax
 12411 00007783 48B8-                   	mov rax, sob_void
 12411 00007785 [0000000000000000] 
 12412                                  
 12413 0000778D 4889C7                  	mov rdi, rax
 12414 00007790 E8C3B00000              	call print_sexpr_if_not_void
 12415                                  
 12416 00007795 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12417 0000779A E8A8B00000              	call malloc
 12418 0000779F 50                      	push rax
 12419 000077A0 BF00000000              	mov rdi, 8 * 0	; new rib
 12420 000077A5 E89DB00000              	call malloc
 12421 000077AA 50                      	push rax
 12422 000077AB BF08000000              	mov rdi, 8 * 1	; extended env
 12423 000077B0 E892B00000              	call malloc
 12424 000077B5 488B7D10                	mov rdi, ENV
 12425 000077B9 BE00000000              	mov rsi, 0
 12426 000077BE BA01000000              	mov rdx, 1
 12427                                  .L_lambda_simple_env_loop_03e8:	; ext_env[i + 1] <-- env[i]
 12428 000077C3 4883FE00                	cmp rsi, 0
 12429 000077C7 7410                    	je .L_lambda_simple_env_end_03e8
 12430 000077C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12431 000077CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12432 000077D1 48FFC6                  	inc rsi
 12433 000077D4 48FFC2                  	inc rdx
 12434 000077D7 EBEA                    	jmp .L_lambda_simple_env_loop_03e8
 12435                                  .L_lambda_simple_env_end_03e8:
 12436 000077D9 5B                      	pop rbx
 12437 000077DA BE00000000              	mov rsi, 0
 12438                                  .L_lambda_simple_params_loop_03e8:	; copy params
 12439 000077DF 4883FE00                	cmp rsi, 0
 12440 000077E3 740E                    	je .L_lambda_simple_params_end_03e8
 12441 000077E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12442 000077EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12443 000077EE 48FFC6                  	inc rsi
 12444 000077F1 EBEC                    	jmp .L_lambda_simple_params_loop_03e8
 12445                                  .L_lambda_simple_params_end_03e8:
 12446 000077F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12447 000077F6 4889C3                  	mov rbx, rax
 12448 000077F9 58                      	pop rax
 12449 000077FA C60005                  	mov byte [rax], T_closure
 12450 000077FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12451 00007801 48C74009[0E780000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e8
 12452 00007809 E9B1000000              	jmp .L_lambda_simple_end_03e8
 12453                                  .L_lambda_simple_code_03e8:	; lambda-simple body
 12454 0000780E 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12455 00007814 740B                    	je .L_lambda_simple_arity_check_ok_0877
 12456 00007816 FF742410                	push qword [rsp + 8 * 2]
 12457 0000781A 6A00                    	push 0
 12458 0000781C E9DFAF0000              	jmp L_error_incorrect_arity_simple
 12459                                  .L_lambda_simple_arity_check_ok_0877:
 12460 00007821 C8000000                	enter 0, 0
 12461 00007825 48B8-                   	mov rax, qword (L_constants + 67)
 12461 00007827 [4300000000000000] 
 12462 0000782F 50                      	push rax
 12463 00007830 48B8-                   	mov rax, qword (L_constants + 154)
 12463 00007832 [9A00000000000000] 
 12464 0000783A 50                      	push rax
 12465 0000783B 6A02                    	push 2
 12466 0000783D 488B0425[30010000]      	mov rax, qword [free_var_38]
 12467                                  .L_lambda_simple_arity_check_ok_0878:
 12468 00007845 803805                  	cmp byte [rax], T_closure
 12469                                  
 12470 00007848 0F85B4BF0000                    jne L_code_ptr_error                      ; rax <- proc
 12471                                  
 12472                                  
 12473 0000784E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12474                                  
 12475 00007852 53                              push rbx                                  ; env pushed
 12476                                  
 12477 00007853 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12478                                  
 12479                                          ; sagydebug
 12480                                  
 12481 00007856 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12482                                  
 12483                                          
 12484                                          
 12485 00007859 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12486                                  
 12487 0000785D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12488                                  
 12489                                  
 12490 00007862 4D89CA                          mov r10, r9
 12491 00007865 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12492                                          
 12493 00007869 4D89D7                          mov r15, r10
 12494 0000786C 4983C7FF                        add r15, -1
 12495                                                                                         
 12496 00007870 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12497 00007873 4983C404                        add r12, 4
 12498 00007877 4983C4FF                        add r12, -1
 12499                                  
 12500 0000787B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12501                                  .L_tc_recycle_frame_loop_0490:
 12502 00007881 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12503                                  
 12504 00007885 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12505                                  
 12506                                  
 12507                                  
 12508 0000788A 41BE00000000                    mov r14, 0                                ; clean box
 12509                                  
 12510                                  
 12511 00007890 4983C7FF                        add r15, -1           
 12512 00007894 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12513                                  
 12514 00007898 4983C4FF                        add r12, -1 
 12515                                  
 12516 0000789C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12517 000078A0 75DF                    	jne .L_tc_recycle_frame_loop_0490
 12518                                  .L_tc_recycle_frame_done_0490:
 12519                                  ;this pop rbp in sot to the right place
 12520 000078A2 4D89C7                  mov r15, r8
 12521                                  
 12522 000078A5 4983C704                        add r15, 4
 12523                                  
 12524 000078A9 49C1E703                        shl r15, 3
 12525                                  
 12526 000078AD 4C01FC                          add rsp, r15
 12527 000078B0 5D                      	pop rbp                                  ; restore the old rbp
 12528                                  
 12529 000078B1 488B4D00                        mov rcx, qword [rbp]
 12530 000078B5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12531                                            ; rbx <- code(proc)
 12532                                  
 12533 000078B9 FFE3                            jmp rbx
 12534 000078BB C9                      	leave
 12535 000078BC C21000                  	ret 8 * (2 + 0)
 12536                                  .L_lambda_simple_end_03e8:	; new closure is in rax
 12537 000078BF 50                      	push rax
 12538 000078C0 6A01                    	push 1
 12539 000078C2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12540 000078C7 E87BAF0000              	call malloc
 12541 000078CC 50                      	push rax
 12542 000078CD BF00000000              	mov rdi, 8 * 0	; new rib
 12543 000078D2 E870AF0000              	call malloc
 12544 000078D7 50                      	push rax
 12545 000078D8 BF08000000              	mov rdi, 8 * 1	; extended env
 12546 000078DD E865AF0000              	call malloc
 12547 000078E2 488B7D10                	mov rdi, ENV
 12548 000078E6 BE00000000              	mov rsi, 0
 12549 000078EB BA01000000              	mov rdx, 1
 12550                                  .L_lambda_simple_env_loop_03e9:	; ext_env[i + 1] <-- env[i]
 12551 000078F0 4883FE00                	cmp rsi, 0
 12552 000078F4 7410                    	je .L_lambda_simple_env_end_03e9
 12553 000078F6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12554 000078FA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12555 000078FE 48FFC6                  	inc rsi
 12556 00007901 48FFC2                  	inc rdx
 12557 00007904 EBEA                    	jmp .L_lambda_simple_env_loop_03e9
 12558                                  .L_lambda_simple_env_end_03e9:
 12559 00007906 5B                      	pop rbx
 12560 00007907 BE00000000              	mov rsi, 0
 12561                                  .L_lambda_simple_params_loop_03e9:	; copy params
 12562 0000790C 4883FE00                	cmp rsi, 0
 12563 00007910 740E                    	je .L_lambda_simple_params_end_03e9
 12564 00007912 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12565 00007917 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12566 0000791B 48FFC6                  	inc rsi
 12567 0000791E EBEC                    	jmp .L_lambda_simple_params_loop_03e9
 12568                                  .L_lambda_simple_params_end_03e9:
 12569 00007920 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12570 00007923 4889C3                  	mov rbx, rax
 12571 00007926 58                      	pop rax
 12572 00007927 C60005                  	mov byte [rax], T_closure
 12573 0000792A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12574 0000792E 48C74009[3B790000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03e9
 12575 00007936 E9D7080000              	jmp .L_lambda_simple_end_03e9
 12576                                  .L_lambda_simple_code_03e9:	; lambda-simple body
 12577 0000793B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12578 00007941 740B                    	je .L_lambda_simple_arity_check_ok_0879
 12579 00007943 FF742410                	push qword [rsp + 8 * 2]
 12580 00007947 6A01                    	push 1
 12581 00007949 E9B2AE0000              	jmp L_error_incorrect_arity_simple
 12582                                  .L_lambda_simple_arity_check_ok_0879:
 12583 0000794E C8000000                	enter 0, 0
 12584 00007952 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12585 00007957 E8EBAE0000              	call malloc
 12586 0000795C 50                      	push rax
 12587 0000795D BF08000000              	mov rdi, 8 * 1	; new rib
 12588 00007962 E8E0AE0000              	call malloc
 12589 00007967 50                      	push rax
 12590 00007968 BF10000000              	mov rdi, 8 * 2	; extended env
 12591 0000796D E8D5AE0000              	call malloc
 12592 00007972 488B7D10                	mov rdi, ENV
 12593 00007976 BE00000000              	mov rsi, 0
 12594 0000797B BA01000000              	mov rdx, 1
 12595                                  .L_lambda_simple_env_loop_03ea:	; ext_env[i + 1] <-- env[i]
 12596 00007980 4883FE01                	cmp rsi, 1
 12597 00007984 7410                    	je .L_lambda_simple_env_end_03ea
 12598 00007986 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12599 0000798A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12600 0000798E 48FFC6                  	inc rsi
 12601 00007991 48FFC2                  	inc rdx
 12602 00007994 EBEA                    	jmp .L_lambda_simple_env_loop_03ea
 12603                                  .L_lambda_simple_env_end_03ea:
 12604 00007996 5B                      	pop rbx
 12605 00007997 BE00000000              	mov rsi, 0
 12606                                  .L_lambda_simple_params_loop_03ea:	; copy params
 12607 0000799C 4883FE01                	cmp rsi, 1
 12608 000079A0 740E                    	je .L_lambda_simple_params_end_03ea
 12609 000079A2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12610 000079A7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12611 000079AB 48FFC6                  	inc rsi
 12612 000079AE EBEC                    	jmp .L_lambda_simple_params_loop_03ea
 12613                                  .L_lambda_simple_params_end_03ea:
 12614 000079B0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12615 000079B3 4889C3                  	mov rbx, rax
 12616 000079B6 58                      	pop rax
 12617 000079B7 C60005                  	mov byte [rax], T_closure
 12618 000079BA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12619 000079BE 48C74009[CB790000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ea
 12620 000079C6 E927050000              	jmp .L_lambda_simple_end_03ea
 12621                                  .L_lambda_simple_code_03ea:	; lambda-simple body
 12622 000079CB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12623 000079D1 740B                    	je .L_lambda_simple_arity_check_ok_087a
 12624 000079D3 FF742410                	push qword [rsp + 8 * 2]
 12625 000079D7 6A02                    	push 2
 12626 000079D9 E922AE0000              	jmp L_error_incorrect_arity_simple
 12627                                  .L_lambda_simple_arity_check_ok_087a:
 12628 000079DE C8000000                	enter 0, 0
 12629 000079E2 488B4520                mov rax, qword [rbp + 32]
 12630 000079E6 50                      	push rax
 12631 000079E7 6A01                    	push 1
 12632 000079E9 488B0425[48000000]      	mov rax, qword [free_var_9]
 12633 000079F1 803805                  	cmp byte [rax], T_closure 
 12634 000079F4 0F8508BE0000                    jne L_code_ptr_error
 12635                                  
 12636 000079FA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12637                                  
 12638 000079FE 53                              push rbx
 12639                                  
 12640 000079FF FF5009                          call SOB_CLOSURE_CODE(rax)
 12641                                  
 12642 00007A02 483D[02000000]                  	cmp rax, sob_boolean_false
 12643 00007A08 0F8419020000            	je .L_if_else_0253
 12644 00007A0E 488B4528                mov rax, qword [rbp + 40]
 12645 00007A12 50                      	push rax
 12646 00007A13 6A01                    	push 1
 12647 00007A15 488B0425[48000000]      	mov rax, qword [free_var_9]
 12648 00007A1D 803805                  	cmp byte [rax], T_closure 
 12649 00007A20 0F85DCBD0000                    jne L_code_ptr_error
 12650                                  
 12651 00007A26 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12652                                  
 12653 00007A2A 53                              push rbx
 12654                                  
 12655 00007A2B FF5009                          call SOB_CLOSURE_CODE(rax)
 12656                                  
 12657 00007A2E 483D[02000000]                  	cmp rax, sob_boolean_false
 12658 00007A34 0F848F000000            	je .L_if_else_0257
 12659 00007A3A 488B4528                mov rax, qword [rbp + 40]
 12660 00007A3E 50                      	push rax
 12661 00007A3F 488B4520                mov rax, qword [rbp + 32]
 12662 00007A43 50                      	push rax
 12663 00007A44 6A02                    	push 2
 12664 00007A46 488B0425[20010000]      	mov rax, qword [free_var_36]
 12665                                  .L_lambda_simple_arity_check_ok_0881:
 12666 00007A4E 803805                  	cmp byte [rax], T_closure
 12667                                  
 12668 00007A51 0F85ABBD0000                    jne L_code_ptr_error                      ; rax <- proc
 12669                                  
 12670                                  
 12671 00007A57 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12672                                  
 12673 00007A5B 53                              push rbx                                  ; env pushed
 12674                                  
 12675 00007A5C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12676                                  
 12677                                          ; sagydebug
 12678                                  
 12679 00007A5F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12680                                  
 12681                                          
 12682                                          
 12683 00007A62 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12684                                  
 12685 00007A66 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12686                                  
 12687                                  
 12688 00007A6B 4D89CA                          mov r10, r9
 12689 00007A6E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12690                                          
 12691 00007A72 4D89D7                          mov r15, r10
 12692 00007A75 4983C7FF                        add r15, -1
 12693                                                                                         
 12694 00007A79 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12695 00007A7C 4983C404                        add r12, 4
 12696 00007A80 4983C4FF                        add r12, -1
 12697                                  
 12698 00007A84 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12699                                  .L_tc_recycle_frame_loop_0497:
 12700 00007A8A 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12701                                  
 12702 00007A8E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12703                                  
 12704                                  
 12705                                  
 12706 00007A93 41BE00000000                    mov r14, 0                                ; clean box
 12707                                  
 12708                                  
 12709 00007A99 4983C7FF                        add r15, -1           
 12710 00007A9D 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12711                                  
 12712 00007AA1 4983C4FF                        add r12, -1 
 12713                                  
 12714 00007AA5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12715 00007AA9 75DF                    	jne .L_tc_recycle_frame_loop_0497
 12716                                  .L_tc_recycle_frame_done_0497:
 12717                                  ;this pop rbp in sot to the right place
 12718 00007AAB 4D89C7                  mov r15, r8
 12719                                  
 12720 00007AAE 4983C704                        add r15, 4
 12721                                  
 12722 00007AB2 49C1E703                        shl r15, 3
 12723                                  
 12724 00007AB6 4C01FC                          add rsp, r15
 12725 00007AB9 5D                      	pop rbp                                  ; restore the old rbp
 12726                                  
 12727 00007ABA 488B4D00                        mov rcx, qword [rbp]
 12728 00007ABE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12729                                            ; rbx <- code(proc)
 12730                                  
 12731 00007AC2 FFE3                            jmp rbx
 12732 00007AC4 E959010000              	jmp .L_if_end_0257
 12733                                  	.L_if_else_0257:
 12734 00007AC9 488B4528                	mov rax, qword [rbp + 40]
 12735 00007ACD 50                      	push rax
 12736 00007ACE 6A01                    	push 1
 12737 00007AD0 488B0425[40000000]      	mov rax, qword [free_var_8]
 12738 00007AD8 803805                  	cmp byte [rax], T_closure 
 12739 00007ADB 0F8521BD0000                    jne L_code_ptr_error
 12740                                  
 12741 00007AE1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12742                                  
 12743 00007AE5 53                              push rbx
 12744                                  
 12745 00007AE6 FF5009                          call SOB_CLOSURE_CODE(rax)
 12746                                  
 12747 00007AE9 483D[02000000]                  	cmp rax, sob_boolean_false
 12748 00007AEF 0F84AB000000            	je .L_if_else_0258
 12749 00007AF5 488B4528                mov rax, qword [rbp + 40]
 12750 00007AF9 50                      	push rax
 12751 00007AFA 488B4520                mov rax, qword [rbp + 32]
 12752 00007AFE 50                      	push rax
 12753 00007AFF 6A01                    	push 1
 12754 00007B01 488B0425[B8000000]      	mov rax, qword [free_var_23]
 12755 00007B09 803805                  	cmp byte [rax], T_closure 
 12756 00007B0C 0F85F0BC0000                    jne L_code_ptr_error
 12757                                  
 12758 00007B12 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12759                                  
 12760 00007B16 53                              push rbx
 12761                                  
 12762 00007B17 FF5009                          call SOB_CLOSURE_CODE(rax)
 12763                                  
 12764 00007B1A 50                              	push rax
 12765 00007B1B 6A02                    	push 2
 12766 00007B1D 488B0425[00010000]      	mov rax, qword [free_var_32]
 12767                                  .L_lambda_simple_arity_check_ok_0880:
 12768 00007B25 803805                  	cmp byte [rax], T_closure
 12769                                  
 12770 00007B28 0F85D4BC0000                    jne L_code_ptr_error                      ; rax <- proc
 12771                                  
 12772                                  
 12773 00007B2E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12774                                  
 12775 00007B32 53                              push rbx                                  ; env pushed
 12776                                  
 12777 00007B33 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12778                                  
 12779                                          ; sagydebug
 12780                                  
 12781 00007B36 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12782                                  
 12783                                          
 12784                                          
 12785 00007B39 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12786                                  
 12787 00007B3D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12788                                  
 12789                                  
 12790 00007B42 4D89CA                          mov r10, r9
 12791 00007B45 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12792                                          
 12793 00007B49 4D89D7                          mov r15, r10
 12794 00007B4C 4983C7FF                        add r15, -1
 12795                                                                                         
 12796 00007B50 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12797 00007B53 4983C404                        add r12, 4
 12798 00007B57 4983C4FF                        add r12, -1
 12799                                  
 12800 00007B5B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12801                                  .L_tc_recycle_frame_loop_0496:
 12802 00007B61 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12803                                  
 12804 00007B65 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12805                                  
 12806                                  
 12807                                  
 12808 00007B6A 41BE00000000                    mov r14, 0                                ; clean box
 12809                                  
 12810                                  
 12811 00007B70 4983C7FF                        add r15, -1           
 12812 00007B74 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12813                                  
 12814 00007B78 4983C4FF                        add r12, -1 
 12815                                  
 12816 00007B7C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12817 00007B80 75DF                    	jne .L_tc_recycle_frame_loop_0496
 12818                                  .L_tc_recycle_frame_done_0496:
 12819                                  ;this pop rbp in sot to the right place
 12820 00007B82 4D89C7                  mov r15, r8
 12821                                  
 12822 00007B85 4983C704                        add r15, 4
 12823                                  
 12824 00007B89 49C1E703                        shl r15, 3
 12825                                  
 12826 00007B8D 4C01FC                          add rsp, r15
 12827 00007B90 5D                      	pop rbp                                  ; restore the old rbp
 12828                                  
 12829 00007B91 488B4D00                        mov rcx, qword [rbp]
 12830 00007B95 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12831                                            ; rbx <- code(proc)
 12832                                  
 12833 00007B99 FFE3                            jmp rbx
 12834 00007B9B E982000000              	jmp .L_if_end_0258
 12835                                  	.L_if_else_0258:
 12836 00007BA0 6A00                    		push 0
 12837 00007BA2 488B4510                mov rax, qword [rbp + 16]
 12838 00007BA6 488B00                  mov rax, qword [rax + 0]
 12839 00007BA9 488B00                  mov rax, qword [rax + 0]
 12840                                  .L_lambda_simple_arity_check_ok_087f:
 12841 00007BAC 803805                  	cmp byte [rax], T_closure
 12842                                  
 12843 00007BAF 0F854DBC0000                    jne L_code_ptr_error                      ; rax <- proc
 12844                                  
 12845                                  
 12846 00007BB5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12847                                  
 12848 00007BB9 53                              push rbx                                  ; env pushed
 12849                                  
 12850 00007BBA FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12851                                  
 12852                                          ; sagydebug
 12853                                  
 12854 00007BBD FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12855                                  
 12856                                          
 12857                                          
 12858 00007BC0 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12859                                  
 12860 00007BC4 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12861                                  
 12862                                  
 12863 00007BC9 4D89CA                          mov r10, r9
 12864 00007BCC 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12865                                          
 12866 00007BD0 4D89D7                          mov r15, r10
 12867 00007BD3 4983C7FF                        add r15, -1
 12868                                                                                         
 12869 00007BD7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12870 00007BDA 4983C404                        add r12, 4
 12871 00007BDE 4983C4FF                        add r12, -1
 12872                                  
 12873 00007BE2 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12874                                  .L_tc_recycle_frame_loop_0495:
 12875 00007BE8 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12876                                  
 12877 00007BEC 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12878                                  
 12879                                  
 12880                                  
 12881 00007BF1 41BE00000000                    mov r14, 0                                ; clean box
 12882                                  
 12883                                  
 12884 00007BF7 4983C7FF                        add r15, -1           
 12885 00007BFB 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12886                                  
 12887 00007BFF 4983C4FF                        add r12, -1 
 12888                                  
 12889 00007C03 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12890 00007C07 75DF                    	jne .L_tc_recycle_frame_loop_0495
 12891                                  .L_tc_recycle_frame_done_0495:
 12892                                  ;this pop rbp in sot to the right place
 12893 00007C09 4D89C7                  mov r15, r8
 12894                                  
 12895 00007C0C 4983C704                        add r15, 4
 12896                                  
 12897 00007C10 49C1E703                        shl r15, 3
 12898                                  
 12899 00007C14 4C01FC                          add rsp, r15
 12900 00007C17 5D                      	pop rbp                                  ; restore the old rbp
 12901                                  
 12902 00007C18 488B4D00                        mov rcx, qword [rbp]
 12903 00007C1C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12904                                            ; rbx <- code(proc)
 12905                                  
 12906 00007C20 FFE3                            jmp rbx
 12907                                  	.L_if_end_0258:
 12908                                  	.L_if_end_0257:
 12909 00007C22 E9C7020000              	jmp .L_if_end_0253
 12910                                  	.L_if_else_0253:
 12911 00007C27 488B4520                	mov rax, qword [rbp + 32]
 12912 00007C2B 50                      	push rax
 12913 00007C2C 6A01                    	push 1
 12914 00007C2E 488B0425[40000000]      	mov rax, qword [free_var_8]
 12915 00007C36 803805                  	cmp byte [rax], T_closure 
 12916 00007C39 0F85C3BB0000                    jne L_code_ptr_error
 12917                                  
 12918 00007C3F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12919                                  
 12920 00007C43 53                              push rbx
 12921                                  
 12922 00007C44 FF5009                          call SOB_CLOSURE_CODE(rax)
 12923                                  
 12924 00007C47 483D[02000000]                  	cmp rax, sob_boolean_false
 12925 00007C4D 0F8419020000            	je .L_if_else_0254
 12926 00007C53 488B4528                mov rax, qword [rbp + 40]
 12927 00007C57 50                      	push rax
 12928 00007C58 6A01                    	push 1
 12929 00007C5A 488B0425[48000000]      	mov rax, qword [free_var_9]
 12930 00007C62 803805                  	cmp byte [rax], T_closure 
 12931 00007C65 0F8597BB0000                    jne L_code_ptr_error
 12932                                  
 12933 00007C6B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12934                                  
 12935 00007C6F 53                              push rbx
 12936                                  
 12937 00007C70 FF5009                          call SOB_CLOSURE_CODE(rax)
 12938                                  
 12939 00007C73 483D[02000000]                  	cmp rax, sob_boolean_false
 12940 00007C79 0F84AB000000            	je .L_if_else_0255
 12941 00007C7F 488B4528                mov rax, qword [rbp + 40]
 12942 00007C83 50                      	push rax
 12943 00007C84 6A01                    	push 1
 12944 00007C86 488B0425[B8000000]      	mov rax, qword [free_var_23]
 12945 00007C8E 803805                  	cmp byte [rax], T_closure 
 12946 00007C91 0F856BBB0000                    jne L_code_ptr_error
 12947                                  
 12948 00007C97 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12949                                  
 12950 00007C9B 53                              push rbx
 12951                                  
 12952 00007C9C FF5009                          call SOB_CLOSURE_CODE(rax)
 12953                                  
 12954 00007C9F 50                              	push rax
 12955 00007CA0 488B4520                mov rax, qword [rbp + 32]
 12956 00007CA4 50                      	push rax
 12957 00007CA5 6A02                    	push 2
 12958 00007CA7 488B0425[00010000]      	mov rax, qword [free_var_32]
 12959                                  .L_lambda_simple_arity_check_ok_087e:
 12960 00007CAF 803805                  	cmp byte [rax], T_closure
 12961                                  
 12962 00007CB2 0F854ABB0000                    jne L_code_ptr_error                      ; rax <- proc
 12963                                  
 12964                                  
 12965 00007CB8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12966                                  
 12967 00007CBC 53                              push rbx                                  ; env pushed
 12968                                  
 12969 00007CBD FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12970                                  
 12971                                          ; sagydebug
 12972                                  
 12973 00007CC0 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12974                                  
 12975                                          
 12976                                          
 12977 00007CC3 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12978                                  
 12979 00007CC7 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12980                                  
 12981                                  
 12982 00007CCC 4D89CA                          mov r10, r9
 12983 00007CCF 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 12984                                          
 12985 00007CD3 4D89D7                          mov r15, r10
 12986 00007CD6 4983C7FF                        add r15, -1
 12987                                                                                         
 12988 00007CDA 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12989 00007CDD 4983C404                        add r12, 4
 12990 00007CE1 4983C4FF                        add r12, -1
 12991                                  
 12992 00007CE5 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12993                                  .L_tc_recycle_frame_loop_0494:
 12994 00007CEB 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 12995                                  
 12996 00007CEF 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12997                                  
 12998                                  
 12999                                  
 13000 00007CF4 41BE00000000                    mov r14, 0                                ; clean box
 13001                                  
 13002                                  
 13003 00007CFA 4983C7FF                        add r15, -1           
 13004 00007CFE 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13005                                  
 13006 00007D02 4983C4FF                        add r12, -1 
 13007                                  
 13008 00007D06 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13009 00007D0A 75DF                    	jne .L_tc_recycle_frame_loop_0494
 13010                                  .L_tc_recycle_frame_done_0494:
 13011                                  ;this pop rbp in sot to the right place
 13012 00007D0C 4D89C7                  mov r15, r8
 13013                                  
 13014 00007D0F 4983C704                        add r15, 4
 13015                                  
 13016 00007D13 49C1E703                        shl r15, 3
 13017                                  
 13018 00007D17 4C01FC                          add rsp, r15
 13019 00007D1A 5D                      	pop rbp                                  ; restore the old rbp
 13020                                  
 13021 00007D1B 488B4D00                        mov rcx, qword [rbp]
 13022 00007D1F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13023                                            ; rbx <- code(proc)
 13024                                  
 13025 00007D23 FFE3                            jmp rbx
 13026 00007D25 E93D010000              	jmp .L_if_end_0255
 13027                                  	.L_if_else_0255:
 13028 00007D2A 488B4528                	mov rax, qword [rbp + 40]
 13029 00007D2E 50                      	push rax
 13030 00007D2F 6A01                    	push 1
 13031 00007D31 488B0425[40000000]      	mov rax, qword [free_var_8]
 13032 00007D39 803805                  	cmp byte [rax], T_closure 
 13033 00007D3C 0F85C0BA0000                    jne L_code_ptr_error
 13034                                  
 13035 00007D42 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13036                                  
 13037 00007D46 53                              push rbx
 13038                                  
 13039 00007D47 FF5009                          call SOB_CLOSURE_CODE(rax)
 13040                                  
 13041 00007D4A 483D[02000000]                  	cmp rax, sob_boolean_false
 13042 00007D50 0F848F000000            	je .L_if_else_0256
 13043 00007D56 488B4528                mov rax, qword [rbp + 40]
 13044 00007D5A 50                      	push rax
 13045 00007D5B 488B4520                mov rax, qword [rbp + 32]
 13046 00007D5F 50                      	push rax
 13047 00007D60 6A02                    	push 2
 13048 00007D62 488B0425[00010000]      	mov rax, qword [free_var_32]
 13049                                  .L_lambda_simple_arity_check_ok_087d:
 13050 00007D6A 803805                  	cmp byte [rax], T_closure
 13051                                  
 13052 00007D6D 0F858FBA0000                    jne L_code_ptr_error                      ; rax <- proc
 13053                                  
 13054                                  
 13055 00007D73 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13056                                  
 13057 00007D77 53                              push rbx                                  ; env pushed
 13058                                  
 13059 00007D78 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13060                                  
 13061                                          ; sagydebug
 13062                                  
 13063 00007D7B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13064                                  
 13065                                          
 13066                                          
 13067 00007D7E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13068                                  
 13069 00007D82 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13070                                  
 13071                                  
 13072 00007D87 4D89CA                          mov r10, r9
 13073 00007D8A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 13074                                          
 13075 00007D8E 4D89D7                          mov r15, r10
 13076 00007D91 4983C7FF                        add r15, -1
 13077                                                                                         
 13078 00007D95 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13079 00007D98 4983C404                        add r12, 4
 13080 00007D9C 4983C4FF                        add r12, -1
 13081                                  
 13082 00007DA0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13083                                  .L_tc_recycle_frame_loop_0493:
 13084 00007DA6 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 13085                                  
 13086 00007DAA 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13087                                  
 13088                                  
 13089                                  
 13090 00007DAF 41BE00000000                    mov r14, 0                                ; clean box
 13091                                  
 13092                                  
 13093 00007DB5 4983C7FF                        add r15, -1           
 13094 00007DB9 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13095                                  
 13096 00007DBD 4983C4FF                        add r12, -1 
 13097                                  
 13098 00007DC1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13099 00007DC5 75DF                    	jne .L_tc_recycle_frame_loop_0493
 13100                                  .L_tc_recycle_frame_done_0493:
 13101                                  ;this pop rbp in sot to the right place
 13102 00007DC7 4D89C7                  mov r15, r8
 13103                                  
 13104 00007DCA 4983C704                        add r15, 4
 13105                                  
 13106 00007DCE 49C1E703                        shl r15, 3
 13107                                  
 13108 00007DD2 4C01FC                          add rsp, r15
 13109 00007DD5 5D                      	pop rbp                                  ; restore the old rbp
 13110                                  
 13111 00007DD6 488B4D00                        mov rcx, qword [rbp]
 13112 00007DDA 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13113                                            ; rbx <- code(proc)
 13114                                  
 13115 00007DDE FFE3                            jmp rbx
 13116 00007DE0 E982000000              	jmp .L_if_end_0256
 13117                                  	.L_if_else_0256:
 13118 00007DE5 6A00                    		push 0
 13119 00007DE7 488B4510                mov rax, qword [rbp + 16]
 13120 00007DEB 488B00                  mov rax, qword [rax + 0]
 13121 00007DEE 488B00                  mov rax, qword [rax + 0]
 13122                                  .L_lambda_simple_arity_check_ok_087c:
 13123 00007DF1 803805                  	cmp byte [rax], T_closure
 13124                                  
 13125 00007DF4 0F8508BA0000                    jne L_code_ptr_error                      ; rax <- proc
 13126                                  
 13127                                  
 13128 00007DFA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13129                                  
 13130 00007DFE 53                              push rbx                                  ; env pushed
 13131                                  
 13132 00007DFF FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13133                                  
 13134                                          ; sagydebug
 13135                                  
 13136 00007E02 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13137                                  
 13138                                          
 13139                                          
 13140 00007E05 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13141                                  
 13142 00007E09 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13143                                  
 13144                                  
 13145 00007E0E 4D89CA                          mov r10, r9
 13146 00007E11 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 13147                                          
 13148 00007E15 4D89D7                          mov r15, r10
 13149 00007E18 4983C7FF                        add r15, -1
 13150                                                                                         
 13151 00007E1C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13152 00007E1F 4983C404                        add r12, 4
 13153 00007E23 4983C4FF                        add r12, -1
 13154                                  
 13155 00007E27 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13156                                  .L_tc_recycle_frame_loop_0492:
 13157 00007E2D 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 13158                                  
 13159 00007E31 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13160                                  
 13161                                  
 13162                                  
 13163 00007E36 41BE00000000                    mov r14, 0                                ; clean box
 13164                                  
 13165                                  
 13166 00007E3C 4983C7FF                        add r15, -1           
 13167 00007E40 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13168                                  
 13169 00007E44 4983C4FF                        add r12, -1 
 13170                                  
 13171 00007E48 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13172 00007E4C 75DF                    	jne .L_tc_recycle_frame_loop_0492
 13173                                  .L_tc_recycle_frame_done_0492:
 13174                                  ;this pop rbp in sot to the right place
 13175 00007E4E 4D89C7                  mov r15, r8
 13176                                  
 13177 00007E51 4983C704                        add r15, 4
 13178                                  
 13179 00007E55 49C1E703                        shl r15, 3
 13180                                  
 13181 00007E59 4C01FC                          add rsp, r15
 13182 00007E5C 5D                      	pop rbp                                  ; restore the old rbp
 13183                                  
 13184 00007E5D 488B4D00                        mov rcx, qword [rbp]
 13185 00007E61 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13186                                            ; rbx <- code(proc)
 13187                                  
 13188 00007E65 FFE3                            jmp rbx
 13189                                  	.L_if_end_0256:
 13190                                  	.L_if_end_0255:
 13191 00007E67 E982000000              	jmp .L_if_end_0254
 13192                                  	.L_if_else_0254:
 13193 00007E6C 6A00                    		push 0
 13194 00007E6E 488B4510                mov rax, qword [rbp + 16]
 13195 00007E72 488B00                  mov rax, qword [rax + 0]
 13196 00007E75 488B00                  mov rax, qword [rax + 0]
 13197                                  .L_lambda_simple_arity_check_ok_087b:
 13198 00007E78 803805                  	cmp byte [rax], T_closure
 13199                                  
 13200 00007E7B 0F8581B90000                    jne L_code_ptr_error                      ; rax <- proc
 13201                                  
 13202                                  
 13203 00007E81 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13204                                  
 13205 00007E85 53                              push rbx                                  ; env pushed
 13206                                  
 13207 00007E86 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13208                                  
 13209                                          ; sagydebug
 13210                                  
 13211 00007E89 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13212                                  
 13213                                          
 13214                                          
 13215 00007E8C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13216                                  
 13217 00007E90 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13218                                  
 13219                                  
 13220 00007E95 4D89CA                          mov r10, r9
 13221 00007E98 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 13222                                          
 13223 00007E9C 4D89D7                          mov r15, r10
 13224 00007E9F 4983C7FF                        add r15, -1
 13225                                                                                         
 13226 00007EA3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13227 00007EA6 4983C404                        add r12, 4
 13228 00007EAA 4983C4FF                        add r12, -1
 13229                                  
 13230 00007EAE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13231                                  .L_tc_recycle_frame_loop_0491:
 13232 00007EB4 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 13233                                  
 13234 00007EB8 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13235                                  
 13236                                  
 13237                                  
 13238 00007EBD 41BE00000000                    mov r14, 0                                ; clean box
 13239                                  
 13240                                  
 13241 00007EC3 4983C7FF                        add r15, -1           
 13242 00007EC7 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13243                                  
 13244 00007ECB 4983C4FF                        add r12, -1 
 13245                                  
 13246 00007ECF 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13247 00007ED3 75DF                    	jne .L_tc_recycle_frame_loop_0491
 13248                                  .L_tc_recycle_frame_done_0491:
 13249                                  ;this pop rbp in sot to the right place
 13250 00007ED5 4D89C7                  mov r15, r8
 13251                                  
 13252 00007ED8 4983C704                        add r15, 4
 13253                                  
 13254 00007EDC 49C1E703                        shl r15, 3
 13255                                  
 13256 00007EE0 4C01FC                          add rsp, r15
 13257 00007EE3 5D                      	pop rbp                                  ; restore the old rbp
 13258                                  
 13259 00007EE4 488B4D00                        mov rcx, qword [rbp]
 13260 00007EE8 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13261                                            ; rbx <- code(proc)
 13262                                  
 13263 00007EEC FFE3                            jmp rbx
 13264                                  	.L_if_end_0254:
 13265                                  	.L_if_end_0253:
 13266 00007EEE C9                      	leave
 13267 00007EEF C22000                  	ret 8 * (2 + 2)
 13268                                  .L_lambda_simple_end_03ea:	; new closure is in rax
 13269 00007EF2 50                      	push rax
 13270 00007EF3 6A01                    	push 1
 13271 00007EF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13272 00007EFA E848A90000              	call malloc
 13273 00007EFF 50                      	push rax
 13274 00007F00 BF08000000              	mov rdi, 8 * 1	; new rib
 13275 00007F05 E83DA90000              	call malloc
 13276 00007F0A 50                      	push rax
 13277 00007F0B BF10000000              	mov rdi, 8 * 2	; extended env
 13278 00007F10 E832A90000              	call malloc
 13279 00007F15 488B7D10                	mov rdi, ENV
 13280 00007F19 BE00000000              	mov rsi, 0
 13281 00007F1E BA01000000              	mov rdx, 1
 13282                                  .L_lambda_simple_env_loop_03eb:	; ext_env[i + 1] <-- env[i]
 13283 00007F23 4883FE01                	cmp rsi, 1
 13284 00007F27 7410                    	je .L_lambda_simple_env_end_03eb
 13285 00007F29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13286 00007F2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13287 00007F31 48FFC6                  	inc rsi
 13288 00007F34 48FFC2                  	inc rdx
 13289 00007F37 EBEA                    	jmp .L_lambda_simple_env_loop_03eb
 13290                                  .L_lambda_simple_env_end_03eb:
 13291 00007F39 5B                      	pop rbx
 13292 00007F3A BE00000000              	mov rsi, 0
 13293                                  .L_lambda_simple_params_loop_03eb:	; copy params
 13294 00007F3F 4883FE01                	cmp rsi, 1
 13295 00007F43 740E                    	je .L_lambda_simple_params_end_03eb
 13296 00007F45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13297 00007F4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13298 00007F4E 48FFC6                  	inc rsi
 13299 00007F51 EBEC                    	jmp .L_lambda_simple_params_loop_03eb
 13300                                  .L_lambda_simple_params_end_03eb:
 13301 00007F53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13302 00007F56 4889C3                  	mov rbx, rax
 13303 00007F59 58                      	pop rax
 13304 00007F5A C60005                  	mov byte [rax], T_closure
 13305 00007F5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13306 00007F61 48C74009[6E7F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03eb
 13307 00007F69 E92A020000              	jmp .L_lambda_simple_end_03eb
 13308                                  .L_lambda_simple_code_03eb:	; lambda-simple body
 13309 00007F6E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13310 00007F74 740B                    	je .L_lambda_simple_arity_check_ok_0882
 13311 00007F76 FF742410                	push qword [rsp + 8 * 2]
 13312 00007F7A 6A01                    	push 1
 13313 00007F7C E97FA80000              	jmp L_error_incorrect_arity_simple
 13314                                  .L_lambda_simple_arity_check_ok_0882:
 13315 00007F81 C8000000                	enter 0, 0
 13316 00007F85 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13317 00007F8A E8B8A80000              	call malloc
 13318 00007F8F 50                      	push rax
 13319 00007F90 BF08000000              	mov rdi, 8 * 1	; new rib
 13320 00007F95 E8ADA80000              	call malloc
 13321 00007F9A 50                      	push rax
 13322 00007F9B BF18000000              	mov rdi, 8 * 3	; extended env
 13323 00007FA0 E8A2A80000              	call malloc
 13324 00007FA5 488B7D10                	mov rdi, ENV
 13325 00007FA9 BE00000000              	mov rsi, 0
 13326 00007FAE BA01000000              	mov rdx, 1
 13327                                  .L_lambda_opt_env_loop_0096:	; ext_env[i + 1] <-- env[i]
 13328 00007FB3 4883FE02                	cmp rsi, 2
 13329 00007FB7 7410                    	je .L_lambda_opt_env_end_0096
 13330 00007FB9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13331 00007FBD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13332 00007FC1 48FFC6                  	inc rsi
 13333 00007FC4 48FFC2                  	inc rdx
 13334 00007FC7 EBEA                    	jmp .L_lambda_opt_env_loop_0096
 13335                                  .L_lambda_opt_env_end_0096:
 13336 00007FC9 5B                      	pop rbx
 13337 00007FCA BE00000000              	mov rsi, 0
 13338                                  .L_lambda_opt_params_loop_01c0:	; copy params
 13339 00007FCF 4883FE01                	cmp rsi, 1
 13340 00007FD3 740E                    	je .L_lambda_opt_params_end_01c0
 13341 00007FD5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13342 00007FDA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13343 00007FDE 48FFC6                  	inc rsi
 13344 00007FE1 EBEC                    	jmp .L_lambda_opt_params_loop_01c0
 13345                                  .L_lambda_opt_params_end_01c0:
 13346 00007FE3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13347 00007FE6 4889C3                  	mov rbx, rax
 13348 00007FE9 58                      	pop rax
 13349 00007FEA C60005                  	mov byte [rax], T_closure
 13350 00007FED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13351 00007FF1 48C74009[FE7F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0096
 13352 00007FF9 E996010000              	jmp .L_lambda_opt_end_0096
 13353                                  .L_lambda_opt_code_0096:
 13354 00007FFE 4C8B542410              mov r10, qword [rsp+8*2]
 13355 00008003 4983FA00                cmp r10, 0
 13356 00008007 740B                    je .L_lambda_opt_arity_check_exact_0096
 13357 00008009 4983FA00                cmp r10, 0
 13358 0000800D 7F44                    jg .L_lambda_opt_arity_check_more_0096
 13359 0000800F E900A80000              jmp L_error_incorrect_arity_opt
 13360                                  .L_lambda_opt_arity_check_exact_0096:
 13361 00008014 4883EC08                sub rsp, 8
 13362 00008018 BA03000000              mov rdx, 3+0
 13363 0000801D 4889E3                  mov qword rbx, rsp
 13364                                  .L_lambda_opt_params_loop_01c1:
 13365 00008020 488B4B08                mov qword rcx, [rbx+8]
 13366 00008024 48890B                  mov qword [rbx], rcx
 13367 00008027 48FFCA                  dec rdx
 13368 0000802A 4883C308                add rbx, 8
 13369 0000802E 4883FA00                cmp rdx, 0
 13370 00008032 7402                    je .L_lambda_opt_params_end_01c1
 13371 00008034 EBEA                    jmp .L_lambda_opt_params_loop_01c1
 13372                                  .L_lambda_opt_params_end_01c1:
 13373 00008036 49FFC2                  inc r10
 13374 00008039 4C89542410              mov qword [rsp+8*2], r10
 13375 0000803E 4983C202                add r10, 2
 13376 00008042 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 13377 0000804A 4C8B4D00                mov r9, [rbp]
 13378 0000804E E996000000              jmp .L_lambda_opt_stack_adjusted_0096
 13379                                  .L_lambda_opt_arity_check_more_0096:
 13380 00008053 4C8B6C2410              mov r13, [rsp+2*8]
 13381 00008058 48B8-                   mov rax, sob_nil
 13381 0000805A [0100000000000000] 
 13382 00008062 4C8B542410              mov r10, [rsp+2*8]
 13383 00008067 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 13384 0000806C 4983EA00                sub r10, 0
 13385                                  .L_lambda_opt_stack_shrink_loop_0096:
 13386 00008070 4983FA00                cmp r10, 0
 13387 00008074 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0096
 13388 00008076 4889C1                  mov rcx, rax
 13389 00008079 498B10                  mov rdx, [r8]
 13390 0000807C BF11000000              mov rdi, 17
 13391 00008081 E8C1A70000              call malloc
 13392 00008086 C60021                  mov byte [rax], T_pair
 13393 00008089 48894809                mov SOB_PAIR_CDR(rax), rcx
 13394 0000808D 48895001                mov SOB_PAIR_CAR(rax), rdx
 13395 00008091 4983E808                sub r8, 8
 13396 00008095 49FFCA                  dec r10
 13397 00008098 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0096
 13398                                  .L_lambda_opt_stack_shrink_loop_exit_0096:
 13399 0000809A 4889442418              mov [rsp+8*(2+1)], rax
 13400 0000809F 41BA01000000            mov r10, 1
 13401 000080A5 4C89542410              mov [rsp+16], r10
 13402 000080AA 4989E4                  mov r12, rsp
 13403 000080AD 4983C418                add r12, 8*(2+1)
 13404 000080B1 4C2B6C2410              sub r13, [rsp+16]
 13405 000080B6 4D89EA                  mov r10, r13
 13406 000080B9 49C1E203                shl r10, 3
 13407 000080BD 4D89D7                  mov r15, r10
 13408 000080C0 4D01E2                  add r10, r12
 13409 000080C3 4C8B4C2410              mov r9, [rsp+16]
 13410 000080C8 4983C103                add r9, 3
 13411                                  .L_lambda_opt_params_loop_01c2:
 13412 000080CC 4983F900                cmp r9, 0
 13413 000080D0 7414                    je .L_lambda_opt_params_end_01c2
 13414 000080D2 4D8B3424                mov r14, [r12]
 13415 000080D6 4D8932                  mov [r10], r14
 13416 000080D9 4983EC08                sub r12, 8
 13417 000080DD 4983EA08                sub r10, 8
 13418 000080E1 49FFC9                  dec r9
 13419 000080E4 EBE6                    jmp .L_lambda_opt_params_loop_01c2
 13420                                  .L_lambda_opt_params_end_01c2:
 13421 000080E6 4C01FC                  add rsp, r15
 13422                                  .L_lambda_opt_stack_adjusted_0096:
 13423 000080E9 4C8B4D00                mov r9, [rbp]
 13424 000080ED C8000000                enter 0, 0
 13425 000080F1 488B4520                mov rax, qword [rbp + 32]
 13426 000080F5 50                      	push rax
 13427 000080F6 48B8-                   	mov rax, qword (L_constants + 127)
 13427 000080F8 [7F00000000000000] 
 13428 00008100 50                      	push rax
 13429 00008101 488B4510                mov rax, qword [rbp + 16]
 13430 00008105 488B00                  mov rax, qword [rax + 0]
 13431 00008108 488B00                  mov rax, qword [rax + 0]
 13432 0000810B 50                      	push rax
 13433 0000810C 6A03                    	push 3
 13434 0000810E 488B0425[F8020000]      	mov rax, qword [free_var_95]
 13435                                  .L_lambda_simple_arity_check_ok_0883:
 13436 00008116 803805                  	cmp byte [rax], T_closure
 13437                                  
 13438 00008119 0F85E3B60000                    jne L_code_ptr_error                      ; rax <- proc
 13439                                  
 13440                                  
 13441 0000811F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13442                                  
 13443 00008123 53                              push rbx                                  ; env pushed
 13444                                  
 13445 00008124 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13446                                  
 13447                                          ; sagydebug
 13448                                  
 13449 00008127 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13450                                  
 13451                                          
 13452                                          
 13453 0000812A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13454                                  
 13455 0000812E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13456                                  
 13457                                  
 13458 00008133 4D89CA                          mov r10, r9
 13459 00008136 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 13460                                          
 13461 0000813A 4D89D7                          mov r15, r10
 13462 0000813D 4983C7FF                        add r15, -1
 13463                                                                                         
 13464 00008141 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13465 00008144 4983C404                        add r12, 4
 13466 00008148 4983C4FF                        add r12, -1
 13467                                  
 13468 0000814C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13469                                  .L_tc_recycle_frame_loop_0498:
 13470 00008152 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 13471                                  
 13472 00008156 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13473                                  
 13474                                  
 13475                                  
 13476 0000815B 41BE00000000                    mov r14, 0                                ; clean box
 13477                                  
 13478                                  
 13479 00008161 4983C7FF                        add r15, -1           
 13480 00008165 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13481                                  
 13482 00008169 4983C4FF                        add r12, -1 
 13483                                  
 13484 0000816D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13485 00008171 75DF                    	jne .L_tc_recycle_frame_loop_0498
 13486                                  .L_tc_recycle_frame_done_0498:
 13487                                  ;this pop rbp in sot to the right place
 13488 00008173 4D89C7                  mov r15, r8
 13489                                  
 13490 00008176 4983C704                        add r15, 4
 13491                                  
 13492 0000817A 49C1E703                        shl r15, 3
 13493                                  
 13494 0000817E 4C01FC                          add rsp, r15
 13495 00008181 5D                      	pop rbp                                  ; restore the old rbp
 13496                                  
 13497 00008182 488B4D00                        mov rcx, qword [rbp]
 13498 00008186 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13499                                            ; rbx <- code(proc)
 13500                                  
 13501 0000818A FFE3                            jmp rbx
 13502 0000818C C9                      leave
 13503 0000818D 4C8B4D00                mov r9, [rbp]
 13504 00008191 C21800                  ret 8 * (3 + 0)
 13505                                  .L_lambda_opt_end_0096:	; new closure is in rax
 13506 00008194 C9                      	leave
 13507 00008195 C21800                  	ret 8 * (2 + 1)
 13508                                  .L_lambda_simple_end_03eb:	; new closure is in rax
 13509                                  .L_lambda_simple_arity_check_ok_0884:
 13510 00008198 803805                  	cmp byte [rax], T_closure
 13511                                  
 13512 0000819B 0F8561B60000                    jne L_code_ptr_error                      ; rax <- proc
 13513                                  
 13514                                  
 13515 000081A1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13516                                  
 13517 000081A5 53                              push rbx                                  ; env pushed
 13518                                  
 13519 000081A6 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13520                                  
 13521                                          ; sagydebug
 13522                                  
 13523 000081A9 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13524                                  
 13525                                          
 13526                                          
 13527 000081AC 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13528                                  
 13529 000081B0 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13530                                  
 13531                                  
 13532 000081B5 4D89CA                          mov r10, r9
 13533 000081B8 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 13534                                          
 13535 000081BC 4D89D7                          mov r15, r10
 13536 000081BF 4983C7FF                        add r15, -1
 13537                                                                                         
 13538 000081C3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13539 000081C6 4983C404                        add r12, 4
 13540 000081CA 4983C4FF                        add r12, -1
 13541                                  
 13542 000081CE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13543                                  .L_tc_recycle_frame_loop_0499:
 13544 000081D4 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 13545                                  
 13546 000081D8 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13547                                  
 13548                                  
 13549                                  
 13550 000081DD 41BE00000000                    mov r14, 0                                ; clean box
 13551                                  
 13552                                  
 13553 000081E3 4983C7FF                        add r15, -1           
 13554 000081E7 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13555                                  
 13556 000081EB 4983C4FF                        add r12, -1 
 13557                                  
 13558 000081EF 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13559 000081F3 75DF                    	jne .L_tc_recycle_frame_loop_0499
 13560                                  .L_tc_recycle_frame_done_0499:
 13561                                  ;this pop rbp in sot to the right place
 13562 000081F5 4D89C7                  mov r15, r8
 13563                                  
 13564 000081F8 4983C704                        add r15, 4
 13565                                  
 13566 000081FC 49C1E703                        shl r15, 3
 13567                                  
 13568 00008200 4C01FC                          add rsp, r15
 13569 00008203 5D                      	pop rbp                                  ; restore the old rbp
 13570                                  
 13571 00008204 488B4D00                        mov rcx, qword [rbp]
 13572 00008208 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13573                                            ; rbx <- code(proc)
 13574                                  
 13575 0000820C FFE3                            jmp rbx
 13576 0000820E C9                      	leave
 13577 0000820F C21800                  	ret 8 * (2 + 1)
 13578                                  .L_lambda_simple_end_03e9:	; new closure is in rax
 13579 00008212 803805                  	cmp byte [rax], T_closure 
 13580 00008215 0F85E7B50000                    jne L_code_ptr_error
 13581                                  
 13582 0000821B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13583                                  
 13584 0000821F 53                              push rbx
 13585                                  
 13586 00008220 FF5009                          call SOB_CLOSURE_CODE(rax)
 13587                                  
 13588 00008223 48890425[18030000]              	mov qword [free_var_99], rax
 13589 0000822B 48B8-                   	mov rax, sob_void
 13589 0000822D [0000000000000000] 
 13590                                  
 13591 00008235 4889C7                  	mov rdi, rax
 13592 00008238 E81BA60000              	call print_sexpr_if_not_void
 13593                                  
 13594 0000823D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13595 00008242 E800A60000              	call malloc
 13596 00008247 50                      	push rax
 13597 00008248 BF00000000              	mov rdi, 8 * 0	; new rib
 13598 0000824D E8F5A50000              	call malloc
 13599 00008252 50                      	push rax
 13600 00008253 BF08000000              	mov rdi, 8 * 1	; extended env
 13601 00008258 E8EAA50000              	call malloc
 13602 0000825D 488B7D10                	mov rdi, ENV
 13603 00008261 BE00000000              	mov rsi, 0
 13604 00008266 BA01000000              	mov rdx, 1
 13605                                  .L_lambda_simple_env_loop_03ec:	; ext_env[i + 1] <-- env[i]
 13606 0000826B 4883FE00                	cmp rsi, 0
 13607 0000826F 7410                    	je .L_lambda_simple_env_end_03ec
 13608 00008271 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13609 00008275 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13610 00008279 48FFC6                  	inc rsi
 13611 0000827C 48FFC2                  	inc rdx
 13612 0000827F EBEA                    	jmp .L_lambda_simple_env_loop_03ec
 13613                                  .L_lambda_simple_env_end_03ec:
 13614 00008281 5B                      	pop rbx
 13615 00008282 BE00000000              	mov rsi, 0
 13616                                  .L_lambda_simple_params_loop_03ec:	; copy params
 13617 00008287 4883FE00                	cmp rsi, 0
 13618 0000828B 740E                    	je .L_lambda_simple_params_end_03ec
 13619 0000828D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13620 00008292 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13621 00008296 48FFC6                  	inc rsi
 13622 00008299 EBEC                    	jmp .L_lambda_simple_params_loop_03ec
 13623                                  .L_lambda_simple_params_end_03ec:
 13624 0000829B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13625 0000829E 4889C3                  	mov rbx, rax
 13626 000082A1 58                      	pop rax
 13627 000082A2 C60005                  	mov byte [rax], T_closure
 13628 000082A5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13629 000082A9 48C74009[B6820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ec
 13630 000082B1 E9B1000000              	jmp .L_lambda_simple_end_03ec
 13631                                  .L_lambda_simple_code_03ec:	; lambda-simple body
 13632 000082B6 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13633 000082BC 740B                    	je .L_lambda_simple_arity_check_ok_0885
 13634 000082BE FF742410                	push qword [rsp + 8 * 2]
 13635 000082C2 6A00                    	push 0
 13636 000082C4 E937A50000              	jmp L_error_incorrect_arity_simple
 13637                                  .L_lambda_simple_arity_check_ok_0885:
 13638 000082C9 C8000000                	enter 0, 0
 13639 000082CD 48B8-                   	mov rax, qword (L_constants + 67)
 13639 000082CF [4300000000000000] 
 13640 000082D7 50                      	push rax
 13641 000082D8 48B8-                   	mov rax, qword (L_constants + 173)
 13641 000082DA [AD00000000000000] 
 13642 000082E2 50                      	push rax
 13643 000082E3 6A02                    	push 2
 13644 000082E5 488B0425[30010000]      	mov rax, qword [free_var_38]
 13645                                  .L_lambda_simple_arity_check_ok_0886:
 13646 000082ED 803805                  	cmp byte [rax], T_closure
 13647                                  
 13648 000082F0 0F850CB50000                    jne L_code_ptr_error                      ; rax <- proc
 13649                                  
 13650                                  
 13651 000082F6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13652                                  
 13653 000082FA 53                              push rbx                                  ; env pushed
 13654                                  
 13655 000082FB FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13656                                  
 13657                                          ; sagydebug
 13658                                  
 13659 000082FE FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13660                                  
 13661                                          
 13662                                          
 13663 00008301 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13664                                  
 13665 00008305 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13666                                  
 13667                                  
 13668 0000830A 4D89CA                          mov r10, r9
 13669 0000830D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 13670                                          
 13671 00008311 4D89D7                          mov r15, r10
 13672 00008314 4983C7FF                        add r15, -1
 13673                                                                                         
 13674 00008318 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13675 0000831B 4983C404                        add r12, 4
 13676 0000831F 4983C4FF                        add r12, -1
 13677                                  
 13678 00008323 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13679                                  .L_tc_recycle_frame_loop_049a:
 13680 00008329 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 13681                                  
 13682 0000832D 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13683                                  
 13684                                  
 13685                                  
 13686 00008332 41BE00000000                    mov r14, 0                                ; clean box
 13687                                  
 13688                                  
 13689 00008338 4983C7FF                        add r15, -1           
 13690 0000833C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13691                                  
 13692 00008340 4983C4FF                        add r12, -1 
 13693                                  
 13694 00008344 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13695 00008348 75DF                    	jne .L_tc_recycle_frame_loop_049a
 13696                                  .L_tc_recycle_frame_done_049a:
 13697                                  ;this pop rbp in sot to the right place
 13698 0000834A 4D89C7                  mov r15, r8
 13699                                  
 13700 0000834D 4983C704                        add r15, 4
 13701                                  
 13702 00008351 49C1E703                        shl r15, 3
 13703                                  
 13704 00008355 4C01FC                          add rsp, r15
 13705 00008358 5D                      	pop rbp                                  ; restore the old rbp
 13706                                  
 13707 00008359 488B4D00                        mov rcx, qword [rbp]
 13708 0000835D 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13709                                            ; rbx <- code(proc)
 13710                                  
 13711 00008361 FFE3                            jmp rbx
 13712 00008363 C9                      	leave
 13713 00008364 C21000                  	ret 8 * (2 + 0)
 13714                                  .L_lambda_simple_end_03ec:	; new closure is in rax
 13715 00008367 50                      	push rax
 13716 00008368 6A01                    	push 1
 13717 0000836A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13718 0000836F E8D3A40000              	call malloc
 13719 00008374 50                      	push rax
 13720 00008375 BF00000000              	mov rdi, 8 * 0	; new rib
 13721 0000837A E8C8A40000              	call malloc
 13722 0000837F 50                      	push rax
 13723 00008380 BF08000000              	mov rdi, 8 * 1	; extended env
 13724 00008385 E8BDA40000              	call malloc
 13725 0000838A 488B7D10                	mov rdi, ENV
 13726 0000838E BE00000000              	mov rsi, 0
 13727 00008393 BA01000000              	mov rdx, 1
 13728                                  .L_lambda_simple_env_loop_03ed:	; ext_env[i + 1] <-- env[i]
 13729 00008398 4883FE00                	cmp rsi, 0
 13730 0000839C 7410                    	je .L_lambda_simple_env_end_03ed
 13731 0000839E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13732 000083A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13733 000083A6 48FFC6                  	inc rsi
 13734 000083A9 48FFC2                  	inc rdx
 13735 000083AC EBEA                    	jmp .L_lambda_simple_env_loop_03ed
 13736                                  .L_lambda_simple_env_end_03ed:
 13737 000083AE 5B                      	pop rbx
 13738 000083AF BE00000000              	mov rsi, 0
 13739                                  .L_lambda_simple_params_loop_03ed:	; copy params
 13740 000083B4 4883FE00                	cmp rsi, 0
 13741 000083B8 740E                    	je .L_lambda_simple_params_end_03ed
 13742 000083BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13743 000083BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13744 000083C3 48FFC6                  	inc rsi
 13745 000083C6 EBEC                    	jmp .L_lambda_simple_params_loop_03ed
 13746                                  .L_lambda_simple_params_end_03ed:
 13747 000083C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13748 000083CB 4889C3                  	mov rbx, rax
 13749 000083CE 58                      	pop rax
 13750 000083CF C60005                  	mov byte [rax], T_closure
 13751 000083D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13752 000083D6 48C74009[E3830000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ed
 13753 000083DE E9D30A0000              	jmp .L_lambda_simple_end_03ed
 13754                                  .L_lambda_simple_code_03ed:	; lambda-simple body
 13755 000083E3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13756 000083E9 740B                    	je .L_lambda_simple_arity_check_ok_0887
 13757 000083EB FF742410                	push qword [rsp + 8 * 2]
 13758 000083EF 6A01                    	push 1
 13759 000083F1 E90AA40000              	jmp L_error_incorrect_arity_simple
 13760                                  .L_lambda_simple_arity_check_ok_0887:
 13761 000083F6 C8000000                	enter 0, 0
 13762 000083FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13763 000083FF E843A40000              	call malloc
 13764 00008404 50                      	push rax
 13765 00008405 BF08000000              	mov rdi, 8 * 1	; new rib
 13766 0000840A E838A40000              	call malloc
 13767 0000840F 50                      	push rax
 13768 00008410 BF10000000              	mov rdi, 8 * 2	; extended env
 13769 00008415 E82DA40000              	call malloc
 13770 0000841A 488B7D10                	mov rdi, ENV
 13771 0000841E BE00000000              	mov rsi, 0
 13772 00008423 BA01000000              	mov rdx, 1
 13773                                  .L_lambda_simple_env_loop_03ee:	; ext_env[i + 1] <-- env[i]
 13774 00008428 4883FE01                	cmp rsi, 1
 13775 0000842C 7410                    	je .L_lambda_simple_env_end_03ee
 13776 0000842E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13777 00008432 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13778 00008436 48FFC6                  	inc rsi
 13779 00008439 48FFC2                  	inc rdx
 13780 0000843C EBEA                    	jmp .L_lambda_simple_env_loop_03ee
 13781                                  .L_lambda_simple_env_end_03ee:
 13782 0000843E 5B                      	pop rbx
 13783 0000843F BE00000000              	mov rsi, 0
 13784                                  .L_lambda_simple_params_loop_03ee:	; copy params
 13785 00008444 4883FE01                	cmp rsi, 1
 13786 00008448 740E                    	je .L_lambda_simple_params_end_03ee
 13787 0000844A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13788 0000844F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13789 00008453 48FFC6                  	inc rsi
 13790 00008456 EBEC                    	jmp .L_lambda_simple_params_loop_03ee
 13791                                  .L_lambda_simple_params_end_03ee:
 13792 00008458 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13793 0000845B 4889C3                  	mov rbx, rax
 13794 0000845E 58                      	pop rax
 13795 0000845F C60005                  	mov byte [rax], T_closure
 13796 00008462 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13797 00008466 48C74009[73840000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ee
 13798 0000846E E927050000              	jmp .L_lambda_simple_end_03ee
 13799                                  .L_lambda_simple_code_03ee:	; lambda-simple body
 13800 00008473 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13801 00008479 740B                    	je .L_lambda_simple_arity_check_ok_0888
 13802 0000847B FF742410                	push qword [rsp + 8 * 2]
 13803 0000847F 6A02                    	push 2
 13804 00008481 E97AA30000              	jmp L_error_incorrect_arity_simple
 13805                                  .L_lambda_simple_arity_check_ok_0888:
 13806 00008486 C8000000                	enter 0, 0
 13807 0000848A 488B4520                mov rax, qword [rbp + 32]
 13808 0000848E 50                      	push rax
 13809 0000848F 6A01                    	push 1
 13810 00008491 488B0425[48000000]      	mov rax, qword [free_var_9]
 13811 00008499 803805                  	cmp byte [rax], T_closure 
 13812 0000849C 0F8560B30000                    jne L_code_ptr_error
 13813                                  
 13814 000084A2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13815                                  
 13816 000084A6 53                              push rbx
 13817                                  
 13818 000084A7 FF5009                          call SOB_CLOSURE_CODE(rax)
 13819                                  
 13820 000084AA 483D[02000000]                  	cmp rax, sob_boolean_false
 13821 000084B0 0F8419020000            	je .L_if_else_0259
 13822 000084B6 488B4528                mov rax, qword [rbp + 40]
 13823 000084BA 50                      	push rax
 13824 000084BB 6A01                    	push 1
 13825 000084BD 488B0425[48000000]      	mov rax, qword [free_var_9]
 13826 000084C5 803805                  	cmp byte [rax], T_closure 
 13827 000084C8 0F8534B30000                    jne L_code_ptr_error
 13828                                  
 13829 000084CE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13830                                  
 13831 000084D2 53                              push rbx
 13832                                  
 13833 000084D3 FF5009                          call SOB_CLOSURE_CODE(rax)
 13834                                  
 13835 000084D6 483D[02000000]                  	cmp rax, sob_boolean_false
 13836 000084DC 0F848F000000            	je .L_if_else_025d
 13837 000084E2 488B4528                mov rax, qword [rbp + 40]
 13838 000084E6 50                      	push rax
 13839 000084E7 488B4520                mov rax, qword [rbp + 32]
 13840 000084EB 50                      	push rax
 13841 000084EC 6A02                    	push 2
 13842 000084EE 488B0425[28010000]      	mov rax, qword [free_var_37]
 13843                                  .L_lambda_simple_arity_check_ok_088f:
 13844 000084F6 803805                  	cmp byte [rax], T_closure
 13845                                  
 13846 000084F9 0F8503B30000                    jne L_code_ptr_error                      ; rax <- proc
 13847                                  
 13848                                  
 13849 000084FF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13850                                  
 13851 00008503 53                              push rbx                                  ; env pushed
 13852                                  
 13853 00008504 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13854                                  
 13855                                          ; sagydebug
 13856                                  
 13857 00008507 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13858                                  
 13859                                          
 13860                                          
 13861 0000850A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13862                                  
 13863 0000850E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13864                                  
 13865                                  
 13866 00008513 4D89CA                          mov r10, r9
 13867 00008516 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 13868                                          
 13869 0000851A 4D89D7                          mov r15, r10
 13870 0000851D 4983C7FF                        add r15, -1
 13871                                                                                         
 13872 00008521 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13873 00008524 4983C404                        add r12, 4
 13874 00008528 4983C4FF                        add r12, -1
 13875                                  
 13876 0000852C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13877                                  .L_tc_recycle_frame_loop_04a1:
 13878 00008532 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 13879                                  
 13880 00008536 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13881                                  
 13882                                  
 13883                                  
 13884 0000853B 41BE00000000                    mov r14, 0                                ; clean box
 13885                                  
 13886                                  
 13887 00008541 4983C7FF                        add r15, -1           
 13888 00008545 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13889                                  
 13890 00008549 4983C4FF                        add r12, -1 
 13891                                  
 13892 0000854D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13893 00008551 75DF                    	jne .L_tc_recycle_frame_loop_04a1
 13894                                  .L_tc_recycle_frame_done_04a1:
 13895                                  ;this pop rbp in sot to the right place
 13896 00008553 4D89C7                  mov r15, r8
 13897                                  
 13898 00008556 4983C704                        add r15, 4
 13899                                  
 13900 0000855A 49C1E703                        shl r15, 3
 13901                                  
 13902 0000855E 4C01FC                          add rsp, r15
 13903 00008561 5D                      	pop rbp                                  ; restore the old rbp
 13904                                  
 13905 00008562 488B4D00                        mov rcx, qword [rbp]
 13906 00008566 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13907                                            ; rbx <- code(proc)
 13908                                  
 13909 0000856A FFE3                            jmp rbx
 13910 0000856C E959010000              	jmp .L_if_end_025d
 13911                                  	.L_if_else_025d:
 13912 00008571 488B4528                	mov rax, qword [rbp + 40]
 13913 00008575 50                      	push rax
 13914 00008576 6A01                    	push 1
 13915 00008578 488B0425[40000000]      	mov rax, qword [free_var_8]
 13916 00008580 803805                  	cmp byte [rax], T_closure 
 13917 00008583 0F8579B20000                    jne L_code_ptr_error
 13918                                  
 13919 00008589 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13920                                  
 13921 0000858D 53                              push rbx
 13922                                  
 13923 0000858E FF5009                          call SOB_CLOSURE_CODE(rax)
 13924                                  
 13925 00008591 483D[02000000]                  	cmp rax, sob_boolean_false
 13926 00008597 0F84AB000000            	je .L_if_else_025e
 13927 0000859D 488B4528                mov rax, qword [rbp + 40]
 13928 000085A1 50                      	push rax
 13929 000085A2 488B4520                mov rax, qword [rbp + 32]
 13930 000085A6 50                      	push rax
 13931 000085A7 6A01                    	push 1
 13932 000085A9 488B0425[B8000000]      	mov rax, qword [free_var_23]
 13933 000085B1 803805                  	cmp byte [rax], T_closure 
 13934 000085B4 0F8548B20000                    jne L_code_ptr_error
 13935                                  
 13936 000085BA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13937                                  
 13938 000085BE 53                              push rbx
 13939                                  
 13940 000085BF FF5009                          call SOB_CLOSURE_CODE(rax)
 13941                                  
 13942 000085C2 50                              	push rax
 13943 000085C3 6A02                    	push 2
 13944 000085C5 488B0425[08010000]      	mov rax, qword [free_var_33]
 13945                                  .L_lambda_simple_arity_check_ok_088e:
 13946 000085CD 803805                  	cmp byte [rax], T_closure
 13947                                  
 13948 000085D0 0F852CB20000                    jne L_code_ptr_error                      ; rax <- proc
 13949                                  
 13950                                  
 13951 000085D6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13952                                  
 13953 000085DA 53                              push rbx                                  ; env pushed
 13954                                  
 13955 000085DB FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13956                                  
 13957                                          ; sagydebug
 13958                                  
 13959 000085DE FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13960                                  
 13961                                          
 13962                                          
 13963 000085E1 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13964                                  
 13965 000085E5 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13966                                  
 13967                                  
 13968 000085EA 4D89CA                          mov r10, r9
 13969 000085ED 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 13970                                          
 13971 000085F1 4D89D7                          mov r15, r10
 13972 000085F4 4983C7FF                        add r15, -1
 13973                                                                                         
 13974 000085F8 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13975 000085FB 4983C404                        add r12, 4
 13976 000085FF 4983C4FF                        add r12, -1
 13977                                  
 13978 00008603 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13979                                  .L_tc_recycle_frame_loop_04a0:
 13980 00008609 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 13981                                  
 13982 0000860D 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13983                                  
 13984                                  
 13985                                  
 13986 00008612 41BE00000000                    mov r14, 0                                ; clean box
 13987                                  
 13988                                  
 13989 00008618 4983C7FF                        add r15, -1           
 13990 0000861C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13991                                  
 13992 00008620 4983C4FF                        add r12, -1 
 13993                                  
 13994 00008624 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13995 00008628 75DF                    	jne .L_tc_recycle_frame_loop_04a0
 13996                                  .L_tc_recycle_frame_done_04a0:
 13997                                  ;this pop rbp in sot to the right place
 13998 0000862A 4D89C7                  mov r15, r8
 13999                                  
 14000 0000862D 4983C704                        add r15, 4
 14001                                  
 14002 00008631 49C1E703                        shl r15, 3
 14003                                  
 14004 00008635 4C01FC                          add rsp, r15
 14005 00008638 5D                      	pop rbp                                  ; restore the old rbp
 14006                                  
 14007 00008639 488B4D00                        mov rcx, qword [rbp]
 14008 0000863D 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14009                                            ; rbx <- code(proc)
 14010                                  
 14011 00008641 FFE3                            jmp rbx
 14012 00008643 E982000000              	jmp .L_if_end_025e
 14013                                  	.L_if_else_025e:
 14014 00008648 6A00                    		push 0
 14015 0000864A 488B4510                mov rax, qword [rbp + 16]
 14016 0000864E 488B00                  mov rax, qword [rax + 0]
 14017 00008651 488B00                  mov rax, qword [rax + 0]
 14018                                  .L_lambda_simple_arity_check_ok_088d:
 14019 00008654 803805                  	cmp byte [rax], T_closure
 14020                                  
 14021 00008657 0F85A5B10000                    jne L_code_ptr_error                      ; rax <- proc
 14022                                  
 14023                                  
 14024 0000865D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14025                                  
 14026 00008661 53                              push rbx                                  ; env pushed
 14027                                  
 14028 00008662 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14029                                  
 14030                                          ; sagydebug
 14031                                  
 14032 00008665 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14033                                  
 14034                                          
 14035                                          
 14036 00008668 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14037                                  
 14038 0000866C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14039                                  
 14040                                  
 14041 00008671 4D89CA                          mov r10, r9
 14042 00008674 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14043                                          
 14044 00008678 4D89D7                          mov r15, r10
 14045 0000867B 4983C7FF                        add r15, -1
 14046                                                                                         
 14047 0000867F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14048 00008682 4983C404                        add r12, 4
 14049 00008686 4983C4FF                        add r12, -1
 14050                                  
 14051 0000868A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14052                                  .L_tc_recycle_frame_loop_049f:
 14053 00008690 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14054                                  
 14055 00008694 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14056                                  
 14057                                  
 14058                                  
 14059 00008699 41BE00000000                    mov r14, 0                                ; clean box
 14060                                  
 14061                                  
 14062 0000869F 4983C7FF                        add r15, -1           
 14063 000086A3 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14064                                  
 14065 000086A7 4983C4FF                        add r12, -1 
 14066                                  
 14067 000086AB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14068 000086AF 75DF                    	jne .L_tc_recycle_frame_loop_049f
 14069                                  .L_tc_recycle_frame_done_049f:
 14070                                  ;this pop rbp in sot to the right place
 14071 000086B1 4D89C7                  mov r15, r8
 14072                                  
 14073 000086B4 4983C704                        add r15, 4
 14074                                  
 14075 000086B8 49C1E703                        shl r15, 3
 14076                                  
 14077 000086BC 4C01FC                          add rsp, r15
 14078 000086BF 5D                      	pop rbp                                  ; restore the old rbp
 14079                                  
 14080 000086C0 488B4D00                        mov rcx, qword [rbp]
 14081 000086C4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14082                                            ; rbx <- code(proc)
 14083                                  
 14084 000086C8 FFE3                            jmp rbx
 14085                                  	.L_if_end_025e:
 14086                                  	.L_if_end_025d:
 14087 000086CA E9C7020000              	jmp .L_if_end_0259
 14088                                  	.L_if_else_0259:
 14089 000086CF 488B4520                	mov rax, qword [rbp + 32]
 14090 000086D3 50                      	push rax
 14091 000086D4 6A01                    	push 1
 14092 000086D6 488B0425[40000000]      	mov rax, qword [free_var_8]
 14093 000086DE 803805                  	cmp byte [rax], T_closure 
 14094 000086E1 0F851BB10000                    jne L_code_ptr_error
 14095                                  
 14096 000086E7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14097                                  
 14098 000086EB 53                              push rbx
 14099                                  
 14100 000086EC FF5009                          call SOB_CLOSURE_CODE(rax)
 14101                                  
 14102 000086EF 483D[02000000]                  	cmp rax, sob_boolean_false
 14103 000086F5 0F8419020000            	je .L_if_else_025a
 14104 000086FB 488B4528                mov rax, qword [rbp + 40]
 14105 000086FF 50                      	push rax
 14106 00008700 6A01                    	push 1
 14107 00008702 488B0425[48000000]      	mov rax, qword [free_var_9]
 14108 0000870A 803805                  	cmp byte [rax], T_closure 
 14109 0000870D 0F85EFB00000                    jne L_code_ptr_error
 14110                                  
 14111 00008713 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14112                                  
 14113 00008717 53                              push rbx
 14114                                  
 14115 00008718 FF5009                          call SOB_CLOSURE_CODE(rax)
 14116                                  
 14117 0000871B 483D[02000000]                  	cmp rax, sob_boolean_false
 14118 00008721 0F84AB000000            	je .L_if_else_025b
 14119 00008727 488B4528                mov rax, qword [rbp + 40]
 14120 0000872B 50                      	push rax
 14121 0000872C 6A01                    	push 1
 14122 0000872E 488B0425[B8000000]      	mov rax, qword [free_var_23]
 14123 00008736 803805                  	cmp byte [rax], T_closure 
 14124 00008739 0F85C3B00000                    jne L_code_ptr_error
 14125                                  
 14126 0000873F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14127                                  
 14128 00008743 53                              push rbx
 14129                                  
 14130 00008744 FF5009                          call SOB_CLOSURE_CODE(rax)
 14131                                  
 14132 00008747 50                              	push rax
 14133 00008748 488B4520                mov rax, qword [rbp + 32]
 14134 0000874C 50                      	push rax
 14135 0000874D 6A02                    	push 2
 14136 0000874F 488B0425[08010000]      	mov rax, qword [free_var_33]
 14137                                  .L_lambda_simple_arity_check_ok_088c:
 14138 00008757 803805                  	cmp byte [rax], T_closure
 14139                                  
 14140 0000875A 0F85A2B00000                    jne L_code_ptr_error                      ; rax <- proc
 14141                                  
 14142                                  
 14143 00008760 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14144                                  
 14145 00008764 53                              push rbx                                  ; env pushed
 14146                                  
 14147 00008765 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14148                                  
 14149                                          ; sagydebug
 14150                                  
 14151 00008768 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14152                                  
 14153                                          
 14154                                          
 14155 0000876B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14156                                  
 14157 0000876F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14158                                  
 14159                                  
 14160 00008774 4D89CA                          mov r10, r9
 14161 00008777 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14162                                          
 14163 0000877B 4D89D7                          mov r15, r10
 14164 0000877E 4983C7FF                        add r15, -1
 14165                                                                                         
 14166 00008782 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14167 00008785 4983C404                        add r12, 4
 14168 00008789 4983C4FF                        add r12, -1
 14169                                  
 14170 0000878D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14171                                  .L_tc_recycle_frame_loop_049e:
 14172 00008793 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14173                                  
 14174 00008797 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14175                                  
 14176                                  
 14177                                  
 14178 0000879C 41BE00000000                    mov r14, 0                                ; clean box
 14179                                  
 14180                                  
 14181 000087A2 4983C7FF                        add r15, -1           
 14182 000087A6 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14183                                  
 14184 000087AA 4983C4FF                        add r12, -1 
 14185                                  
 14186 000087AE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14187 000087B2 75DF                    	jne .L_tc_recycle_frame_loop_049e
 14188                                  .L_tc_recycle_frame_done_049e:
 14189                                  ;this pop rbp in sot to the right place
 14190 000087B4 4D89C7                  mov r15, r8
 14191                                  
 14192 000087B7 4983C704                        add r15, 4
 14193                                  
 14194 000087BB 49C1E703                        shl r15, 3
 14195                                  
 14196 000087BF 4C01FC                          add rsp, r15
 14197 000087C2 5D                      	pop rbp                                  ; restore the old rbp
 14198                                  
 14199 000087C3 488B4D00                        mov rcx, qword [rbp]
 14200 000087C7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14201                                            ; rbx <- code(proc)
 14202                                  
 14203 000087CB FFE3                            jmp rbx
 14204 000087CD E93D010000              	jmp .L_if_end_025b
 14205                                  	.L_if_else_025b:
 14206 000087D2 488B4528                	mov rax, qword [rbp + 40]
 14207 000087D6 50                      	push rax
 14208 000087D7 6A01                    	push 1
 14209 000087D9 488B0425[40000000]      	mov rax, qword [free_var_8]
 14210 000087E1 803805                  	cmp byte [rax], T_closure 
 14211 000087E4 0F8518B00000                    jne L_code_ptr_error
 14212                                  
 14213 000087EA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14214                                  
 14215 000087EE 53                              push rbx
 14216                                  
 14217 000087EF FF5009                          call SOB_CLOSURE_CODE(rax)
 14218                                  
 14219 000087F2 483D[02000000]                  	cmp rax, sob_boolean_false
 14220 000087F8 0F848F000000            	je .L_if_else_025c
 14221 000087FE 488B4528                mov rax, qword [rbp + 40]
 14222 00008802 50                      	push rax
 14223 00008803 488B4520                mov rax, qword [rbp + 32]
 14224 00008807 50                      	push rax
 14225 00008808 6A02                    	push 2
 14226 0000880A 488B0425[08010000]      	mov rax, qword [free_var_33]
 14227                                  .L_lambda_simple_arity_check_ok_088b:
 14228 00008812 803805                  	cmp byte [rax], T_closure
 14229                                  
 14230 00008815 0F85E7AF0000                    jne L_code_ptr_error                      ; rax <- proc
 14231                                  
 14232                                  
 14233 0000881B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14234                                  
 14235 0000881F 53                              push rbx                                  ; env pushed
 14236                                  
 14237 00008820 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14238                                  
 14239                                          ; sagydebug
 14240                                  
 14241 00008823 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14242                                  
 14243                                          
 14244                                          
 14245 00008826 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14246                                  
 14247 0000882A 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14248                                  
 14249                                  
 14250 0000882F 4D89CA                          mov r10, r9
 14251 00008832 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14252                                          
 14253 00008836 4D89D7                          mov r15, r10
 14254 00008839 4983C7FF                        add r15, -1
 14255                                                                                         
 14256 0000883D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14257 00008840 4983C404                        add r12, 4
 14258 00008844 4983C4FF                        add r12, -1
 14259                                  
 14260 00008848 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14261                                  .L_tc_recycle_frame_loop_049d:
 14262 0000884E 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14263                                  
 14264 00008852 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14265                                  
 14266                                  
 14267                                  
 14268 00008857 41BE00000000                    mov r14, 0                                ; clean box
 14269                                  
 14270                                  
 14271 0000885D 4983C7FF                        add r15, -1           
 14272 00008861 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14273                                  
 14274 00008865 4983C4FF                        add r12, -1 
 14275                                  
 14276 00008869 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14277 0000886D 75DF                    	jne .L_tc_recycle_frame_loop_049d
 14278                                  .L_tc_recycle_frame_done_049d:
 14279                                  ;this pop rbp in sot to the right place
 14280 0000886F 4D89C7                  mov r15, r8
 14281                                  
 14282 00008872 4983C704                        add r15, 4
 14283                                  
 14284 00008876 49C1E703                        shl r15, 3
 14285                                  
 14286 0000887A 4C01FC                          add rsp, r15
 14287 0000887D 5D                      	pop rbp                                  ; restore the old rbp
 14288                                  
 14289 0000887E 488B4D00                        mov rcx, qword [rbp]
 14290 00008882 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14291                                            ; rbx <- code(proc)
 14292                                  
 14293 00008886 FFE3                            jmp rbx
 14294 00008888 E982000000              	jmp .L_if_end_025c
 14295                                  	.L_if_else_025c:
 14296 0000888D 6A00                    		push 0
 14297 0000888F 488B4510                mov rax, qword [rbp + 16]
 14298 00008893 488B00                  mov rax, qword [rax + 0]
 14299 00008896 488B00                  mov rax, qword [rax + 0]
 14300                                  .L_lambda_simple_arity_check_ok_088a:
 14301 00008899 803805                  	cmp byte [rax], T_closure
 14302                                  
 14303 0000889C 0F8560AF0000                    jne L_code_ptr_error                      ; rax <- proc
 14304                                  
 14305                                  
 14306 000088A2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14307                                  
 14308 000088A6 53                              push rbx                                  ; env pushed
 14309                                  
 14310 000088A7 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14311                                  
 14312                                          ; sagydebug
 14313                                  
 14314 000088AA FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14315                                  
 14316                                          
 14317                                          
 14318 000088AD 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14319                                  
 14320 000088B1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14321                                  
 14322                                  
 14323 000088B6 4D89CA                          mov r10, r9
 14324 000088B9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14325                                          
 14326 000088BD 4D89D7                          mov r15, r10
 14327 000088C0 4983C7FF                        add r15, -1
 14328                                                                                         
 14329 000088C4 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14330 000088C7 4983C404                        add r12, 4
 14331 000088CB 4983C4FF                        add r12, -1
 14332                                  
 14333 000088CF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14334                                  .L_tc_recycle_frame_loop_049c:
 14335 000088D5 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14336                                  
 14337 000088D9 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14338                                  
 14339                                  
 14340                                  
 14341 000088DE 41BE00000000                    mov r14, 0                                ; clean box
 14342                                  
 14343                                  
 14344 000088E4 4983C7FF                        add r15, -1           
 14345 000088E8 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14346                                  
 14347 000088EC 4983C4FF                        add r12, -1 
 14348                                  
 14349 000088F0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14350 000088F4 75DF                    	jne .L_tc_recycle_frame_loop_049c
 14351                                  .L_tc_recycle_frame_done_049c:
 14352                                  ;this pop rbp in sot to the right place
 14353 000088F6 4D89C7                  mov r15, r8
 14354                                  
 14355 000088F9 4983C704                        add r15, 4
 14356                                  
 14357 000088FD 49C1E703                        shl r15, 3
 14358                                  
 14359 00008901 4C01FC                          add rsp, r15
 14360 00008904 5D                      	pop rbp                                  ; restore the old rbp
 14361                                  
 14362 00008905 488B4D00                        mov rcx, qword [rbp]
 14363 00008909 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14364                                            ; rbx <- code(proc)
 14365                                  
 14366 0000890D FFE3                            jmp rbx
 14367                                  	.L_if_end_025c:
 14368                                  	.L_if_end_025b:
 14369 0000890F E982000000              	jmp .L_if_end_025a
 14370                                  	.L_if_else_025a:
 14371 00008914 6A00                    		push 0
 14372 00008916 488B4510                mov rax, qword [rbp + 16]
 14373 0000891A 488B00                  mov rax, qword [rax + 0]
 14374 0000891D 488B00                  mov rax, qword [rax + 0]
 14375                                  .L_lambda_simple_arity_check_ok_0889:
 14376 00008920 803805                  	cmp byte [rax], T_closure
 14377                                  
 14378 00008923 0F85D9AE0000                    jne L_code_ptr_error                      ; rax <- proc
 14379                                  
 14380                                  
 14381 00008929 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14382                                  
 14383 0000892D 53                              push rbx                                  ; env pushed
 14384                                  
 14385 0000892E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14386                                  
 14387                                          ; sagydebug
 14388                                  
 14389 00008931 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14390                                  
 14391                                          
 14392                                          
 14393 00008934 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14394                                  
 14395 00008938 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14396                                  
 14397                                  
 14398 0000893D 4D89CA                          mov r10, r9
 14399 00008940 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14400                                          
 14401 00008944 4D89D7                          mov r15, r10
 14402 00008947 4983C7FF                        add r15, -1
 14403                                                                                         
 14404 0000894B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14405 0000894E 4983C404                        add r12, 4
 14406 00008952 4983C4FF                        add r12, -1
 14407                                  
 14408 00008956 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14409                                  .L_tc_recycle_frame_loop_049b:
 14410 0000895C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14411                                  
 14412 00008960 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14413                                  
 14414                                  
 14415                                  
 14416 00008965 41BE00000000                    mov r14, 0                                ; clean box
 14417                                  
 14418                                  
 14419 0000896B 4983C7FF                        add r15, -1           
 14420 0000896F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14421                                  
 14422 00008973 4983C4FF                        add r12, -1 
 14423                                  
 14424 00008977 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14425 0000897B 75DF                    	jne .L_tc_recycle_frame_loop_049b
 14426                                  .L_tc_recycle_frame_done_049b:
 14427                                  ;this pop rbp in sot to the right place
 14428 0000897D 4D89C7                  mov r15, r8
 14429                                  
 14430 00008980 4983C704                        add r15, 4
 14431                                  
 14432 00008984 49C1E703                        shl r15, 3
 14433                                  
 14434 00008988 4C01FC                          add rsp, r15
 14435 0000898B 5D                      	pop rbp                                  ; restore the old rbp
 14436                                  
 14437 0000898C 488B4D00                        mov rcx, qword [rbp]
 14438 00008990 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14439                                            ; rbx <- code(proc)
 14440                                  
 14441 00008994 FFE3                            jmp rbx
 14442                                  	.L_if_end_025a:
 14443                                  	.L_if_end_0259:
 14444 00008996 C9                      	leave
 14445 00008997 C22000                  	ret 8 * (2 + 2)
 14446                                  .L_lambda_simple_end_03ee:	; new closure is in rax
 14447 0000899A 50                      	push rax
 14448 0000899B 6A01                    	push 1
 14449 0000899D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14450 000089A2 E8A09E0000              	call malloc
 14451 000089A7 50                      	push rax
 14452 000089A8 BF08000000              	mov rdi, 8 * 1	; new rib
 14453 000089AD E8959E0000              	call malloc
 14454 000089B2 50                      	push rax
 14455 000089B3 BF10000000              	mov rdi, 8 * 2	; extended env
 14456 000089B8 E88A9E0000              	call malloc
 14457 000089BD 488B7D10                	mov rdi, ENV
 14458 000089C1 BE00000000              	mov rsi, 0
 14459 000089C6 BA01000000              	mov rdx, 1
 14460                                  .L_lambda_simple_env_loop_03ef:	; ext_env[i + 1] <-- env[i]
 14461 000089CB 4883FE01                	cmp rsi, 1
 14462 000089CF 7410                    	je .L_lambda_simple_env_end_03ef
 14463 000089D1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14464 000089D5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14465 000089D9 48FFC6                  	inc rsi
 14466 000089DC 48FFC2                  	inc rdx
 14467 000089DF EBEA                    	jmp .L_lambda_simple_env_loop_03ef
 14468                                  .L_lambda_simple_env_end_03ef:
 14469 000089E1 5B                      	pop rbx
 14470 000089E2 BE00000000              	mov rsi, 0
 14471                                  .L_lambda_simple_params_loop_03ef:	; copy params
 14472 000089E7 4883FE01                	cmp rsi, 1
 14473 000089EB 740E                    	je .L_lambda_simple_params_end_03ef
 14474 000089ED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14475 000089F2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14476 000089F6 48FFC6                  	inc rsi
 14477 000089F9 EBEC                    	jmp .L_lambda_simple_params_loop_03ef
 14478                                  .L_lambda_simple_params_end_03ef:
 14479 000089FB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14480 000089FE 4889C3                  	mov rbx, rax
 14481 00008A01 58                      	pop rax
 14482 00008A02 C60005                  	mov byte [rax], T_closure
 14483 00008A05 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14484 00008A09 48C74009[168A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ef
 14485 00008A11 E926040000              	jmp .L_lambda_simple_end_03ef
 14486                                  .L_lambda_simple_code_03ef:	; lambda-simple body
 14487 00008A16 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14488 00008A1C 740B                    	je .L_lambda_simple_arity_check_ok_0890
 14489 00008A1E FF742410                	push qword [rsp + 8 * 2]
 14490 00008A22 6A01                    	push 1
 14491 00008A24 E9D79D0000              	jmp L_error_incorrect_arity_simple
 14492                                  .L_lambda_simple_arity_check_ok_0890:
 14493 00008A29 C8000000                	enter 0, 0
 14494 00008A2D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14495 00008A32 E8109E0000              	call malloc
 14496 00008A37 50                      	push rax
 14497 00008A38 BF08000000              	mov rdi, 8 * 1	; new rib
 14498 00008A3D E8059E0000              	call malloc
 14499 00008A42 50                      	push rax
 14500 00008A43 BF18000000              	mov rdi, 8 * 3	; extended env
 14501 00008A48 E8FA9D0000              	call malloc
 14502 00008A4D 488B7D10                	mov rdi, ENV
 14503 00008A51 BE00000000              	mov rsi, 0
 14504 00008A56 BA01000000              	mov rdx, 1
 14505                                  .L_lambda_opt_env_loop_0097:	; ext_env[i + 1] <-- env[i]
 14506 00008A5B 4883FE02                	cmp rsi, 2
 14507 00008A5F 7410                    	je .L_lambda_opt_env_end_0097
 14508 00008A61 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14509 00008A65 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14510 00008A69 48FFC6                  	inc rsi
 14511 00008A6C 48FFC2                  	inc rdx
 14512 00008A6F EBEA                    	jmp .L_lambda_opt_env_loop_0097
 14513                                  .L_lambda_opt_env_end_0097:
 14514 00008A71 5B                      	pop rbx
 14515 00008A72 BE00000000              	mov rsi, 0
 14516                                  .L_lambda_opt_params_loop_01c3:	; copy params
 14517 00008A77 4883FE01                	cmp rsi, 1
 14518 00008A7B 740E                    	je .L_lambda_opt_params_end_01c3
 14519 00008A7D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14520 00008A82 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14521 00008A86 48FFC6                  	inc rsi
 14522 00008A89 EBEC                    	jmp .L_lambda_opt_params_loop_01c3
 14523                                  .L_lambda_opt_params_end_01c3:
 14524 00008A8B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14525 00008A8E 4889C3                  	mov rbx, rax
 14526 00008A91 58                      	pop rax
 14527 00008A92 C60005                  	mov byte [rax], T_closure
 14528 00008A95 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14529 00008A99 48C74009[A68A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0097
 14530 00008AA1 E992030000              	jmp .L_lambda_opt_end_0097
 14531                                  .L_lambda_opt_code_0097:
 14532 00008AA6 4C8B542410              mov r10, qword [rsp+8*2]
 14533 00008AAB 4983FA01                cmp r10, 1
 14534 00008AAF 740B                    je .L_lambda_opt_arity_check_exact_0097
 14535 00008AB1 4983FA01                cmp r10, 1
 14536 00008AB5 7F44                    jg .L_lambda_opt_arity_check_more_0097
 14537 00008AB7 E9589D0000              jmp L_error_incorrect_arity_opt
 14538                                  .L_lambda_opt_arity_check_exact_0097:
 14539 00008ABC 4883EC08                sub rsp, 8
 14540 00008AC0 BA04000000              mov rdx, 3+1
 14541 00008AC5 4889E3                  mov qword rbx, rsp
 14542                                  .L_lambda_opt_params_loop_01c4:
 14543 00008AC8 488B4B08                mov qword rcx, [rbx+8]
 14544 00008ACC 48890B                  mov qword [rbx], rcx
 14545 00008ACF 48FFCA                  dec rdx
 14546 00008AD2 4883C308                add rbx, 8
 14547 00008AD6 4883FA00                cmp rdx, 0
 14548 00008ADA 7402                    je .L_lambda_opt_params_end_01c4
 14549 00008ADC EBEA                    jmp .L_lambda_opt_params_loop_01c4
 14550                                  .L_lambda_opt_params_end_01c4:
 14551 00008ADE 49FFC2                  inc r10
 14552 00008AE1 4C89542410              mov qword [rsp+8*2], r10
 14553 00008AE6 4983C202                add r10, 2
 14554 00008AEA 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 14555 00008AF2 4C8B4D00                mov r9, [rbp]
 14556 00008AF6 E996000000              jmp .L_lambda_opt_stack_adjusted_0097
 14557                                  .L_lambda_opt_arity_check_more_0097:
 14558 00008AFB 4C8B6C2410              mov r13, [rsp+2*8]
 14559 00008B00 48B8-                   mov rax, sob_nil
 14559 00008B02 [0100000000000000] 
 14560 00008B0A 4C8B542410              mov r10, [rsp+2*8]
 14561 00008B0F 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 14562 00008B14 4983EA01                sub r10, 1
 14563                                  .L_lambda_opt_stack_shrink_loop_0097:
 14564 00008B18 4983FA00                cmp r10, 0
 14565 00008B1C 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0097
 14566 00008B1E 4889C1                  mov rcx, rax
 14567 00008B21 498B10                  mov rdx, [r8]
 14568 00008B24 BF11000000              mov rdi, 17
 14569 00008B29 E8199D0000              call malloc
 14570 00008B2E C60021                  mov byte [rax], T_pair
 14571 00008B31 48894809                mov SOB_PAIR_CDR(rax), rcx
 14572 00008B35 48895001                mov SOB_PAIR_CAR(rax), rdx
 14573 00008B39 4983E808                sub r8, 8
 14574 00008B3D 49FFCA                  dec r10
 14575 00008B40 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0097
 14576                                  .L_lambda_opt_stack_shrink_loop_exit_0097:
 14577 00008B42 4889442420              mov [rsp+8*(2+2)], rax
 14578 00008B47 41BA02000000            mov r10, 2
 14579 00008B4D 4C89542410              mov [rsp+16], r10
 14580 00008B52 4989E4                  mov r12, rsp
 14581 00008B55 4983C420                add r12, 8*(2+2)
 14582 00008B59 4C2B6C2410              sub r13, [rsp+16]
 14583 00008B5E 4D89EA                  mov r10, r13
 14584 00008B61 49C1E203                shl r10, 3
 14585 00008B65 4D89D7                  mov r15, r10
 14586 00008B68 4D01E2                  add r10, r12
 14587 00008B6B 4C8B4C2410              mov r9, [rsp+16]
 14588 00008B70 4983C103                add r9, 3
 14589                                  .L_lambda_opt_params_loop_01c5:
 14590 00008B74 4983F900                cmp r9, 0
 14591 00008B78 7414                    je .L_lambda_opt_params_end_01c5
 14592 00008B7A 4D8B3424                mov r14, [r12]
 14593 00008B7E 4D8932                  mov [r10], r14
 14594 00008B81 4983EC08                sub r12, 8
 14595 00008B85 4983EA08                sub r10, 8
 14596 00008B89 49FFC9                  dec r9
 14597 00008B8C EBE6                    jmp .L_lambda_opt_params_loop_01c5
 14598                                  .L_lambda_opt_params_end_01c5:
 14599 00008B8E 4C01FC                  add rsp, r15
 14600                                  .L_lambda_opt_stack_adjusted_0097:
 14601 00008B91 4C8B4D00                mov r9, [rbp]
 14602 00008B95 C8000000                enter 0, 0
 14603 00008B99 488B4528                mov rax, qword [rbp + 40]
 14604 00008B9D 50                      	push rax
 14605 00008B9E 6A01                    	push 1
 14606 00008BA0 488B0425[00000000]      	mov rax, qword [free_var_0]
 14607 00008BA8 803805                  	cmp byte [rax], T_closure 
 14608 00008BAB 0F8551AC0000                    jne L_code_ptr_error
 14609                                  
 14610 00008BB1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14611                                  
 14612 00008BB5 53                              push rbx
 14613                                  
 14614 00008BB6 FF5009                          call SOB_CLOSURE_CODE(rax)
 14615                                  
 14616 00008BB9 483D[02000000]                  	cmp rax, sob_boolean_false
 14617 00008BBF 0F8497000000            	je .L_if_else_025f
 14618 00008BC5 488B4520                mov rax, qword [rbp + 32]
 14619 00008BC9 50                      	push rax
 14620 00008BCA 48B8-                   	mov rax, qword (L_constants + 127)
 14620 00008BCC [7F00000000000000] 
 14621 00008BD4 50                      	push rax
 14622 00008BD5 6A02                    	push 2
 14623 00008BD7 488B4510                mov rax, qword [rbp + 16]
 14624 00008BDB 488B00                  mov rax, qword [rax + 0]
 14625 00008BDE 488B00                  mov rax, qword [rax + 0]
 14626                                  .L_lambda_simple_arity_check_ok_0894:
 14627 00008BE1 803805                  	cmp byte [rax], T_closure
 14628                                  
 14629 00008BE4 0F8518AC0000                    jne L_code_ptr_error                      ; rax <- proc
 14630                                  
 14631                                  
 14632 00008BEA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14633                                  
 14634 00008BEE 53                              push rbx                                  ; env pushed
 14635                                  
 14636 00008BEF FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14637                                  
 14638                                          ; sagydebug
 14639                                  
 14640 00008BF2 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14641                                  
 14642                                          
 14643                                          
 14644 00008BF5 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14645                                  
 14646 00008BF9 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14647                                  
 14648                                  
 14649 00008BFE 4D89CA                          mov r10, r9
 14650 00008C01 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14651                                          
 14652 00008C05 4D89D7                          mov r15, r10
 14653 00008C08 4983C7FF                        add r15, -1
 14654                                                                                         
 14655 00008C0C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14656 00008C0F 4983C404                        add r12, 4
 14657 00008C13 4983C4FF                        add r12, -1
 14658                                  
 14659 00008C17 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14660                                  .L_tc_recycle_frame_loop_04a4:
 14661 00008C1D 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14662                                  
 14663 00008C21 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14664                                  
 14665                                  
 14666                                  
 14667 00008C26 41BE00000000                    mov r14, 0                                ; clean box
 14668                                  
 14669                                  
 14670 00008C2C 4983C7FF                        add r15, -1           
 14671 00008C30 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14672                                  
 14673 00008C34 4983C4FF                        add r12, -1 
 14674                                  
 14675 00008C38 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14676 00008C3C 75DF                    	jne .L_tc_recycle_frame_loop_04a4
 14677                                  .L_tc_recycle_frame_done_04a4:
 14678                                  ;this pop rbp in sot to the right place
 14679 00008C3E 4D89C7                  mov r15, r8
 14680                                  
 14681 00008C41 4983C704                        add r15, 4
 14682                                  
 14683 00008C45 49C1E703                        shl r15, 3
 14684                                  
 14685 00008C49 4C01FC                          add rsp, r15
 14686 00008C4C 5D                      	pop rbp                                  ; restore the old rbp
 14687                                  
 14688 00008C4D 488B4D00                        mov rcx, qword [rbp]
 14689 00008C51 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14690                                            ; rbx <- code(proc)
 14691                                  
 14692 00008C55 FFE3                            jmp rbx
 14693 00008C57 E9D4010000              	jmp .L_if_end_025f
 14694                                  	.L_if_else_025f:
 14695 00008C5C 488B4528                	mov rax, qword [rbp + 40]
 14696 00008C60 50                      	push rax
 14697 00008C61 48B8-                   	mov rax, qword (L_constants + 127)
 14697 00008C63 [7F00000000000000] 
 14698 00008C6B 50                      	push rax
 14699 00008C6C 488B0425[18030000]      	mov rax, qword [free_var_99]
 14700 00008C74 50                      	push rax
 14701 00008C75 6A03                    	push 3
 14702 00008C77 488B0425[F8020000]      	mov rax, qword [free_var_95]
 14703 00008C7F 803805                  	cmp byte [rax], T_closure 
 14704 00008C82 0F857AAB0000                    jne L_code_ptr_error
 14705                                  
 14706 00008C88 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14707                                  
 14708 00008C8C 53                              push rbx
 14709                                  
 14710 00008C8D FF5009                          call SOB_CLOSURE_CODE(rax)
 14711                                  
 14712 00008C90 50                              	push rax
 14713 00008C91 6A01                    	push 1
 14714 00008C93 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14715 00008C98 E8AA9B0000              	call malloc
 14716 00008C9D 50                      	push rax
 14717 00008C9E BF10000000              	mov rdi, 8 * 2	; new rib
 14718 00008CA3 E89F9B0000              	call malloc
 14719 00008CA8 50                      	push rax
 14720 00008CA9 BF20000000              	mov rdi, 8 * 4	; extended env
 14721 00008CAE E8949B0000              	call malloc
 14722 00008CB3 488B7D10                	mov rdi, ENV
 14723 00008CB7 BE00000000              	mov rsi, 0
 14724 00008CBC BA01000000              	mov rdx, 1
 14725                                  .L_lambda_simple_env_loop_03f0:	; ext_env[i + 1] <-- env[i]
 14726 00008CC1 4883FE03                	cmp rsi, 3
 14727 00008CC5 7410                    	je .L_lambda_simple_env_end_03f0
 14728 00008CC7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14729 00008CCB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14730 00008CCF 48FFC6                  	inc rsi
 14731 00008CD2 48FFC2                  	inc rdx
 14732 00008CD5 EBEA                    	jmp .L_lambda_simple_env_loop_03f0
 14733                                  .L_lambda_simple_env_end_03f0:
 14734 00008CD7 5B                      	pop rbx
 14735 00008CD8 BE00000000              	mov rsi, 0
 14736                                  .L_lambda_simple_params_loop_03f0:	; copy params
 14737 00008CDD 4883FE02                	cmp rsi, 2
 14738 00008CE1 740E                    	je .L_lambda_simple_params_end_03f0
 14739 00008CE3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14740 00008CE8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14741 00008CEC 48FFC6                  	inc rsi
 14742 00008CEF EBEC                    	jmp .L_lambda_simple_params_loop_03f0
 14743                                  .L_lambda_simple_params_end_03f0:
 14744 00008CF1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14745 00008CF4 4889C3                  	mov rbx, rax
 14746 00008CF7 58                      	pop rax
 14747 00008CF8 C60005                  	mov byte [rax], T_closure
 14748 00008CFB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14749 00008CFF 48C74009[0C8D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f0
 14750 00008D07 E9AE000000              	jmp .L_lambda_simple_end_03f0
 14751                                  .L_lambda_simple_code_03f0:	; lambda-simple body
 14752 00008D0C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14753 00008D12 740B                    	je .L_lambda_simple_arity_check_ok_0891
 14754 00008D14 FF742410                	push qword [rsp + 8 * 2]
 14755 00008D18 6A01                    	push 1
 14756 00008D1A E9E19A0000              	jmp L_error_incorrect_arity_simple
 14757                                  .L_lambda_simple_arity_check_ok_0891:
 14758 00008D1F C8000000                	enter 0, 0
 14759 00008D23 488B4520                mov rax, qword [rbp + 32]
 14760 00008D27 50                      	push rax
 14761 00008D28 488B4510                mov rax, qword [rbp + 16]
 14762 00008D2C 488B00                  mov rax, qword [rax + 0]
 14763 00008D2F 488B00                  mov rax, qword [rax + 0]
 14764 00008D32 50                      	push rax
 14765 00008D33 6A02                    	push 2
 14766 00008D35 488B4510                mov rax, qword [rbp + 16]
 14767 00008D39 488B4008                mov rax, qword [rax + 8]
 14768 00008D3D 488B00                  mov rax, qword [rax + 0]
 14769                                  .L_lambda_simple_arity_check_ok_0892:
 14770 00008D40 803805                  	cmp byte [rax], T_closure
 14771                                  
 14772 00008D43 0F85B9AA0000                    jne L_code_ptr_error                      ; rax <- proc
 14773                                  
 14774                                  
 14775 00008D49 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14776                                  
 14777 00008D4D 53                              push rbx                                  ; env pushed
 14778                                  
 14779 00008D4E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14780                                  
 14781                                          ; sagydebug
 14782                                  
 14783 00008D51 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14784                                  
 14785                                          
 14786                                          
 14787 00008D54 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14788                                  
 14789 00008D58 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14790                                  
 14791                                  
 14792 00008D5D 4D89CA                          mov r10, r9
 14793 00008D60 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14794                                          
 14795 00008D64 4D89D7                          mov r15, r10
 14796 00008D67 4983C7FF                        add r15, -1
 14797                                                                                         
 14798 00008D6B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14799 00008D6E 4983C404                        add r12, 4
 14800 00008D72 4983C4FF                        add r12, -1
 14801                                  
 14802 00008D76 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14803                                  .L_tc_recycle_frame_loop_04a2:
 14804 00008D7C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14805                                  
 14806 00008D80 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14807                                  
 14808                                  
 14809                                  
 14810 00008D85 41BE00000000                    mov r14, 0                                ; clean box
 14811                                  
 14812                                  
 14813 00008D8B 4983C7FF                        add r15, -1           
 14814 00008D8F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14815                                  
 14816 00008D93 4983C4FF                        add r12, -1 
 14817                                  
 14818 00008D97 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14819 00008D9B 75DF                    	jne .L_tc_recycle_frame_loop_04a2
 14820                                  .L_tc_recycle_frame_done_04a2:
 14821                                  ;this pop rbp in sot to the right place
 14822 00008D9D 4D89C7                  mov r15, r8
 14823                                  
 14824 00008DA0 4983C704                        add r15, 4
 14825                                  
 14826 00008DA4 49C1E703                        shl r15, 3
 14827                                  
 14828 00008DA8 4C01FC                          add rsp, r15
 14829 00008DAB 5D                      	pop rbp                                  ; restore the old rbp
 14830                                  
 14831 00008DAC 488B4D00                        mov rcx, qword [rbp]
 14832 00008DB0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14833                                            ; rbx <- code(proc)
 14834                                  
 14835 00008DB4 FFE3                            jmp rbx
 14836 00008DB6 C9                      	leave
 14837 00008DB7 C21800                  	ret 8 * (2 + 1)
 14838                                  .L_lambda_simple_end_03f0:	; new closure is in rax
 14839                                  .L_lambda_simple_arity_check_ok_0893:
 14840 00008DBA 803805                  	cmp byte [rax], T_closure
 14841                                  
 14842 00008DBD 0F853FAA0000                    jne L_code_ptr_error                      ; rax <- proc
 14843                                  
 14844                                  
 14845 00008DC3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14846                                  
 14847 00008DC7 53                              push rbx                                  ; env pushed
 14848                                  
 14849 00008DC8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14850                                  
 14851                                          ; sagydebug
 14852                                  
 14853 00008DCB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14854                                  
 14855                                          
 14856                                          
 14857 00008DCE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14858                                  
 14859 00008DD2 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14860                                  
 14861                                  
 14862 00008DD7 4D89CA                          mov r10, r9
 14863 00008DDA 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14864                                          
 14865 00008DDE 4D89D7                          mov r15, r10
 14866 00008DE1 4983C7FF                        add r15, -1
 14867                                                                                         
 14868 00008DE5 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14869 00008DE8 4983C404                        add r12, 4
 14870 00008DEC 4983C4FF                        add r12, -1
 14871                                  
 14872 00008DF0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14873                                  .L_tc_recycle_frame_loop_04a3:
 14874 00008DF6 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14875                                  
 14876 00008DFA 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14877                                  
 14878                                  
 14879                                  
 14880 00008DFF 41BE00000000                    mov r14, 0                                ; clean box
 14881                                  
 14882                                  
 14883 00008E05 4983C7FF                        add r15, -1           
 14884 00008E09 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14885                                  
 14886 00008E0D 4983C4FF                        add r12, -1 
 14887                                  
 14888 00008E11 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14889 00008E15 75DF                    	jne .L_tc_recycle_frame_loop_04a3
 14890                                  .L_tc_recycle_frame_done_04a3:
 14891                                  ;this pop rbp in sot to the right place
 14892 00008E17 4D89C7                  mov r15, r8
 14893                                  
 14894 00008E1A 4983C704                        add r15, 4
 14895                                  
 14896 00008E1E 49C1E703                        shl r15, 3
 14897                                  
 14898 00008E22 4C01FC                          add rsp, r15
 14899 00008E25 5D                      	pop rbp                                  ; restore the old rbp
 14900                                  
 14901 00008E26 488B4D00                        mov rcx, qword [rbp]
 14902 00008E2A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14903                                            ; rbx <- code(proc)
 14904                                  
 14905 00008E2E FFE3                            jmp rbx
 14906                                  	.L_if_end_025f:
 14907 00008E30 C9                      leave
 14908 00008E31 4C8B4D00                mov r9, [rbp]
 14909 00008E35 C22000                  ret 8 * (3 + 1)
 14910                                  .L_lambda_opt_end_0097:	; new closure is in rax
 14911 00008E38 C9                      	leave
 14912 00008E39 C21800                  	ret 8 * (2 + 1)
 14913                                  .L_lambda_simple_end_03ef:	; new closure is in rax
 14914                                  .L_lambda_simple_arity_check_ok_0895:
 14915 00008E3C 803805                  	cmp byte [rax], T_closure
 14916                                  
 14917 00008E3F 0F85BDA90000                    jne L_code_ptr_error                      ; rax <- proc
 14918                                  
 14919                                  
 14920 00008E45 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14921                                  
 14922 00008E49 53                              push rbx                                  ; env pushed
 14923                                  
 14924 00008E4A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14925                                  
 14926                                          ; sagydebug
 14927                                  
 14928 00008E4D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14929                                  
 14930                                          
 14931                                          
 14932 00008E50 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14933                                  
 14934 00008E54 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14935                                  
 14936                                  
 14937 00008E59 4D89CA                          mov r10, r9
 14938 00008E5C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 14939                                          
 14940 00008E60 4D89D7                          mov r15, r10
 14941 00008E63 4983C7FF                        add r15, -1
 14942                                                                                         
 14943 00008E67 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14944 00008E6A 4983C404                        add r12, 4
 14945 00008E6E 4983C4FF                        add r12, -1
 14946                                  
 14947 00008E72 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14948                                  .L_tc_recycle_frame_loop_04a5:
 14949 00008E78 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 14950                                  
 14951 00008E7C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14952                                  
 14953                                  
 14954                                  
 14955 00008E81 41BE00000000                    mov r14, 0                                ; clean box
 14956                                  
 14957                                  
 14958 00008E87 4983C7FF                        add r15, -1           
 14959 00008E8B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14960                                  
 14961 00008E8F 4983C4FF                        add r12, -1 
 14962                                  
 14963 00008E93 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14964 00008E97 75DF                    	jne .L_tc_recycle_frame_loop_04a5
 14965                                  .L_tc_recycle_frame_done_04a5:
 14966                                  ;this pop rbp in sot to the right place
 14967 00008E99 4D89C7                  mov r15, r8
 14968                                  
 14969 00008E9C 4983C704                        add r15, 4
 14970                                  
 14971 00008EA0 49C1E703                        shl r15, 3
 14972                                  
 14973 00008EA4 4C01FC                          add rsp, r15
 14974 00008EA7 5D                      	pop rbp                                  ; restore the old rbp
 14975                                  
 14976 00008EA8 488B4D00                        mov rcx, qword [rbp]
 14977 00008EAC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14978                                            ; rbx <- code(proc)
 14979                                  
 14980 00008EB0 FFE3                            jmp rbx
 14981 00008EB2 C9                      	leave
 14982 00008EB3 C21800                  	ret 8 * (2 + 1)
 14983                                  .L_lambda_simple_end_03ed:	; new closure is in rax
 14984 00008EB6 803805                  	cmp byte [rax], T_closure 
 14985 00008EB9 0F8543A90000                    jne L_code_ptr_error
 14986                                  
 14987 00008EBF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14988                                  
 14989 00008EC3 53                              push rbx
 14990                                  
 14991 00008EC4 FF5009                          call SOB_CLOSURE_CODE(rax)
 14992                                  
 14993 00008EC7 48890425[20030000]              	mov qword [free_var_100], rax
 14994 00008ECF 48B8-                   	mov rax, sob_void
 14994 00008ED1 [0000000000000000] 
 14995                                  
 14996 00008ED9 4889C7                  	mov rdi, rax
 14997 00008EDC E877990000              	call print_sexpr_if_not_void
 14998                                  
 14999 00008EE1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15000 00008EE6 E85C990000              	call malloc
 15001 00008EEB 50                      	push rax
 15002 00008EEC BF00000000              	mov rdi, 8 * 0	; new rib
 15003 00008EF1 E851990000              	call malloc
 15004 00008EF6 50                      	push rax
 15005 00008EF7 BF08000000              	mov rdi, 8 * 1	; extended env
 15006 00008EFC E846990000              	call malloc
 15007 00008F01 488B7D10                	mov rdi, ENV
 15008 00008F05 BE00000000              	mov rsi, 0
 15009 00008F0A BA01000000              	mov rdx, 1
 15010                                  .L_lambda_simple_env_loop_03f1:	; ext_env[i + 1] <-- env[i]
 15011 00008F0F 4883FE00                	cmp rsi, 0
 15012 00008F13 7410                    	je .L_lambda_simple_env_end_03f1
 15013 00008F15 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15014 00008F19 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15015 00008F1D 48FFC6                  	inc rsi
 15016 00008F20 48FFC2                  	inc rdx
 15017 00008F23 EBEA                    	jmp .L_lambda_simple_env_loop_03f1
 15018                                  .L_lambda_simple_env_end_03f1:
 15019 00008F25 5B                      	pop rbx
 15020 00008F26 BE00000000              	mov rsi, 0
 15021                                  .L_lambda_simple_params_loop_03f1:	; copy params
 15022 00008F2B 4883FE00                	cmp rsi, 0
 15023 00008F2F 740E                    	je .L_lambda_simple_params_end_03f1
 15024 00008F31 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15025 00008F36 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15026 00008F3A 48FFC6                  	inc rsi
 15027 00008F3D EBEC                    	jmp .L_lambda_simple_params_loop_03f1
 15028                                  .L_lambda_simple_params_end_03f1:
 15029 00008F3F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15030 00008F42 4889C3                  	mov rbx, rax
 15031 00008F45 58                      	pop rax
 15032 00008F46 C60005                  	mov byte [rax], T_closure
 15033 00008F49 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15034 00008F4D 48C74009[5A8F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f1
 15035 00008F55 E91F010000              	jmp .L_lambda_simple_end_03f1
 15036                                  .L_lambda_simple_code_03f1:	; lambda-simple body
 15037 00008F5A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15038 00008F60 740B                    	je .L_lambda_simple_arity_check_ok_0896
 15039 00008F62 FF742410                	push qword [rsp + 8 * 2]
 15040 00008F66 6A01                    	push 1
 15041 00008F68 E993980000              	jmp L_error_incorrect_arity_simple
 15042                                  .L_lambda_simple_arity_check_ok_0896:
 15043 00008F6D C8000000                	enter 0, 0
 15044 00008F71 488B4520                mov rax, qword [rbp + 32]
 15045 00008F75 50                      	push rax
 15046 00008F76 6A01                    	push 1
 15047 00008F78 488B0425[D8000000]      	mov rax, qword [free_var_27]
 15048 00008F80 803805                  	cmp byte [rax], T_closure 
 15049 00008F83 0F8579A80000                    jne L_code_ptr_error
 15050                                  
 15051 00008F89 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15052                                  
 15053 00008F8D 53                              push rbx
 15054                                  
 15055 00008F8E FF5009                          call SOB_CLOSURE_CODE(rax)
 15056                                  
 15057 00008F91 483D[02000000]                  	cmp rax, sob_boolean_false
 15058 00008F97 740F                    	je .L_if_else_0260
 15059 00008F99 48B8-                   	mov rax, qword (L_constants + 127)
 15059 00008F9B [7F00000000000000] 
 15060 00008FA3 E9CD000000              	jmp .L_if_end_0260
 15061                                  	.L_if_else_0260:
 15062 00008FA8 48B8-                   		mov rax, qword (L_constants + 127)
 15062 00008FAA [7F00000000000000] 
 15063 00008FB2 50                      	push rax
 15064 00008FB3 488B4520                mov rax, qword [rbp + 32]
 15065 00008FB7 50                      	push rax
 15066 00008FB8 6A02                    	push 2
 15067 00008FBA 488B0425[10030000]      	mov rax, qword [free_var_98]
 15068 00008FC2 803805                  	cmp byte [rax], T_closure 
 15069 00008FC5 0F8537A80000                    jne L_code_ptr_error
 15070                                  
 15071 00008FCB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15072                                  
 15073 00008FCF 53                              push rbx
 15074                                  
 15075 00008FD0 FF5009                          call SOB_CLOSURE_CODE(rax)
 15076                                  
 15077 00008FD3 50                              	push rax
 15078 00008FD4 6A01                    	push 1
 15079 00008FD6 488B0425[28030000]      	mov rax, qword [free_var_101]
 15080 00008FDE 803805                  	cmp byte [rax], T_closure 
 15081 00008FE1 0F851BA80000                    jne L_code_ptr_error
 15082                                  
 15083 00008FE7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15084                                  
 15085 00008FEB 53                              push rbx
 15086                                  
 15087 00008FEC FF5009                          call SOB_CLOSURE_CODE(rax)
 15088                                  
 15089 00008FEF 50                              	push rax
 15090 00008FF0 488B4520                mov rax, qword [rbp + 32]
 15091 00008FF4 50                      	push rax
 15092 00008FF5 6A02                    	push 2
 15093 00008FF7 488B0425[18030000]      	mov rax, qword [free_var_99]
 15094                                  .L_lambda_simple_arity_check_ok_0897:
 15095 00008FFF 803805                  	cmp byte [rax], T_closure
 15096                                  
 15097 00009002 0F85FAA70000                    jne L_code_ptr_error                      ; rax <- proc
 15098                                  
 15099                                  
 15100 00009008 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15101                                  
 15102 0000900C 53                              push rbx                                  ; env pushed
 15103                                  
 15104 0000900D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15105                                  
 15106                                          ; sagydebug
 15107                                  
 15108 00009010 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15109                                  
 15110                                          
 15111                                          
 15112 00009013 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15113                                  
 15114 00009017 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15115                                  
 15116                                  
 15117 0000901C 4D89CA                          mov r10, r9
 15118 0000901F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 15119                                          
 15120 00009023 4D89D7                          mov r15, r10
 15121 00009026 4983C7FF                        add r15, -1
 15122                                                                                         
 15123 0000902A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15124 0000902D 4983C404                        add r12, 4
 15125 00009031 4983C4FF                        add r12, -1
 15126                                  
 15127 00009035 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15128                                  .L_tc_recycle_frame_loop_04a6:
 15129 0000903B 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 15130                                  
 15131 0000903F 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15132                                  
 15133                                  
 15134                                  
 15135 00009044 41BE00000000                    mov r14, 0                                ; clean box
 15136                                  
 15137                                  
 15138 0000904A 4983C7FF                        add r15, -1           
 15139 0000904E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15140                                  
 15141 00009052 4983C4FF                        add r12, -1 
 15142                                  
 15143 00009056 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15144 0000905A 75DF                    	jne .L_tc_recycle_frame_loop_04a6
 15145                                  .L_tc_recycle_frame_done_04a6:
 15146                                  ;this pop rbp in sot to the right place
 15147 0000905C 4D89C7                  mov r15, r8
 15148                                  
 15149 0000905F 4983C704                        add r15, 4
 15150                                  
 15151 00009063 49C1E703                        shl r15, 3
 15152                                  
 15153 00009067 4C01FC                          add rsp, r15
 15154 0000906A 5D                      	pop rbp                                  ; restore the old rbp
 15155                                  
 15156 0000906B 488B4D00                        mov rcx, qword [rbp]
 15157 0000906F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15158                                            ; rbx <- code(proc)
 15159                                  
 15160 00009073 FFE3                            jmp rbx
 15161                                  	.L_if_end_0260:
 15162 00009075 C9                      	leave
 15163 00009076 C21800                  	ret 8 * (2 + 1)
 15164                                  .L_lambda_simple_end_03f1:	; new closure is in rax
 15165 00009079 48890425[28030000]      	mov qword [free_var_101], rax
 15166 00009081 48B8-                   	mov rax, sob_void
 15166 00009083 [0000000000000000] 
 15167                                  
 15168 0000908B 4889C7                  	mov rdi, rax
 15169 0000908E E8C5970000              	call print_sexpr_if_not_void
 15170                                  
 15171 00009093 48B8-                   	mov rax, qword (L_constants + 0)
 15171 00009095 [0000000000000000] 
 15172 0000909D 48890425[30030000]      	mov qword [free_var_102], rax
 15173 000090A5 48B8-                   	mov rax, sob_void
 15173 000090A7 [0000000000000000] 
 15174                                  
 15175 000090AF 4889C7                  	mov rdi, rax
 15176 000090B2 E8A1970000              	call print_sexpr_if_not_void
 15177                                  
 15178 000090B7 48B8-                   	mov rax, qword (L_constants + 0)
 15178 000090B9 [0000000000000000] 
 15179 000090C1 48890425[38030000]      	mov qword [free_var_103], rax
 15180 000090C9 48B8-                   	mov rax, sob_void
 15180 000090CB [0000000000000000] 
 15181                                  
 15182 000090D3 4889C7                  	mov rdi, rax
 15183 000090D6 E87D970000              	call print_sexpr_if_not_void
 15184                                  
 15185 000090DB 48B8-                   	mov rax, qword (L_constants + 0)
 15185 000090DD [0000000000000000] 
 15186 000090E5 48890425[40030000]      	mov qword [free_var_104], rax
 15187 000090ED 48B8-                   	mov rax, sob_void
 15187 000090EF [0000000000000000] 
 15188                                  
 15189 000090F7 4889C7                  	mov rdi, rax
 15190 000090FA E859970000              	call print_sexpr_if_not_void
 15191                                  
 15192 000090FF 48B8-                   	mov rax, qword (L_constants + 0)
 15192 00009101 [0000000000000000] 
 15193 00009109 48890425[48030000]      	mov qword [free_var_105], rax
 15194 00009111 48B8-                   	mov rax, sob_void
 15194 00009113 [0000000000000000] 
 15195                                  
 15196 0000911B 4889C7                  	mov rdi, rax
 15197 0000911E E835970000              	call print_sexpr_if_not_void
 15198                                  
 15199 00009123 48B8-                   	mov rax, qword (L_constants + 0)
 15199 00009125 [0000000000000000] 
 15200 0000912D 48890425[50030000]      	mov qword [free_var_106], rax
 15201 00009135 48B8-                   	mov rax, sob_void
 15201 00009137 [0000000000000000] 
 15202                                  
 15203 0000913F 4889C7                  	mov rdi, rax
 15204 00009142 E811970000              	call print_sexpr_if_not_void
 15205                                  
 15206 00009147 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15207 0000914C E8F6960000              	call malloc
 15208 00009151 50                      	push rax
 15209 00009152 BF00000000              	mov rdi, 8 * 0	; new rib
 15210 00009157 E8EB960000              	call malloc
 15211 0000915C 50                      	push rax
 15212 0000915D BF08000000              	mov rdi, 8 * 1	; extended env
 15213 00009162 E8E0960000              	call malloc
 15214 00009167 488B7D10                	mov rdi, ENV
 15215 0000916B BE00000000              	mov rsi, 0
 15216 00009170 BA01000000              	mov rdx, 1
 15217                                  .L_lambda_simple_env_loop_03f2:	; ext_env[i + 1] <-- env[i]
 15218 00009175 4883FE00                	cmp rsi, 0
 15219 00009179 7410                    	je .L_lambda_simple_env_end_03f2
 15220 0000917B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15221 0000917F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15222 00009183 48FFC6                  	inc rsi
 15223 00009186 48FFC2                  	inc rdx
 15224 00009189 EBEA                    	jmp .L_lambda_simple_env_loop_03f2
 15225                                  .L_lambda_simple_env_end_03f2:
 15226 0000918B 5B                      	pop rbx
 15227 0000918C BE00000000              	mov rsi, 0
 15228                                  .L_lambda_simple_params_loop_03f2:	; copy params
 15229 00009191 4883FE00                	cmp rsi, 0
 15230 00009195 740E                    	je .L_lambda_simple_params_end_03f2
 15231 00009197 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15232 0000919C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15233 000091A0 48FFC6                  	inc rsi
 15234 000091A3 EBEC                    	jmp .L_lambda_simple_params_loop_03f2
 15235                                  .L_lambda_simple_params_end_03f2:
 15236 000091A5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15237 000091A8 4889C3                  	mov rbx, rax
 15238 000091AB 58                      	pop rax
 15239 000091AC C60005                  	mov byte [rax], T_closure
 15240 000091AF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15241 000091B3 48C74009[C0910000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f2
 15242 000091BB E9B1000000              	jmp .L_lambda_simple_end_03f2
 15243                                  .L_lambda_simple_code_03f2:	; lambda-simple body
 15244 000091C0 48837C241000            	cmp qword [rsp + 8 * 2], 0
 15245 000091C6 740B                    	je .L_lambda_simple_arity_check_ok_0898
 15246 000091C8 FF742410                	push qword [rsp + 8 * 2]
 15247 000091CC 6A00                    	push 0
 15248 000091CE E92D960000              	jmp L_error_incorrect_arity_simple
 15249                                  .L_lambda_simple_arity_check_ok_0898:
 15250 000091D3 C8000000                	enter 0, 0
 15251 000091D7 48B8-                   	mov rax, qword (L_constants + 218)
 15251 000091D9 [DA00000000000000] 
 15252 000091E1 50                      	push rax
 15253 000091E2 48B8-                   	mov rax, qword (L_constants + 209)
 15253 000091E4 [D100000000000000] 
 15254 000091EC 50                      	push rax
 15255 000091ED 6A02                    	push 2
 15256 000091EF 488B0425[30010000]      	mov rax, qword [free_var_38]
 15257                                  .L_lambda_simple_arity_check_ok_0899:
 15258 000091F7 803805                  	cmp byte [rax], T_closure
 15259                                  
 15260 000091FA 0F8502A60000                    jne L_code_ptr_error                      ; rax <- proc
 15261                                  
 15262                                  
 15263 00009200 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15264                                  
 15265 00009204 53                              push rbx                                  ; env pushed
 15266                                  
 15267 00009205 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15268                                  
 15269                                          ; sagydebug
 15270                                  
 15271 00009208 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15272                                  
 15273                                          
 15274                                          
 15275 0000920B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15276                                  
 15277 0000920F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15278                                  
 15279                                  
 15280 00009214 4D89CA                          mov r10, r9
 15281 00009217 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 15282                                          
 15283 0000921B 4D89D7                          mov r15, r10
 15284 0000921E 4983C7FF                        add r15, -1
 15285                                                                                         
 15286 00009222 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15287 00009225 4983C404                        add r12, 4
 15288 00009229 4983C4FF                        add r12, -1
 15289                                  
 15290 0000922D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15291                                  .L_tc_recycle_frame_loop_04a7:
 15292 00009233 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 15293                                  
 15294 00009237 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15295                                  
 15296                                  
 15297                                  
 15298 0000923C 41BE00000000                    mov r14, 0                                ; clean box
 15299                                  
 15300                                  
 15301 00009242 4983C7FF                        add r15, -1           
 15302 00009246 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15303                                  
 15304 0000924A 4983C4FF                        add r12, -1 
 15305                                  
 15306 0000924E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15307 00009252 75DF                    	jne .L_tc_recycle_frame_loop_04a7
 15308                                  .L_tc_recycle_frame_done_04a7:
 15309                                  ;this pop rbp in sot to the right place
 15310 00009254 4D89C7                  mov r15, r8
 15311                                  
 15312 00009257 4983C704                        add r15, 4
 15313                                  
 15314 0000925B 49C1E703                        shl r15, 3
 15315                                  
 15316 0000925F 4C01FC                          add rsp, r15
 15317 00009262 5D                      	pop rbp                                  ; restore the old rbp
 15318                                  
 15319 00009263 488B4D00                        mov rcx, qword [rbp]
 15320 00009267 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15321                                            ; rbx <- code(proc)
 15322                                  
 15323 0000926B FFE3                            jmp rbx
 15324 0000926D C9                      	leave
 15325 0000926E C21000                  	ret 8 * (2 + 0)
 15326                                  .L_lambda_simple_end_03f2:	; new closure is in rax
 15327 00009271 50                      	push rax
 15328 00009272 6A01                    	push 1
 15329 00009274 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15330 00009279 E8C9950000              	call malloc
 15331 0000927E 50                      	push rax
 15332 0000927F BF00000000              	mov rdi, 8 * 0	; new rib
 15333 00009284 E8BE950000              	call malloc
 15334 00009289 50                      	push rax
 15335 0000928A BF08000000              	mov rdi, 8 * 1	; extended env
 15336 0000928F E8B3950000              	call malloc
 15337 00009294 488B7D10                	mov rdi, ENV
 15338 00009298 BE00000000              	mov rsi, 0
 15339 0000929D BA01000000              	mov rdx, 1
 15340                                  .L_lambda_simple_env_loop_03f3:	; ext_env[i + 1] <-- env[i]
 15341 000092A2 4883FE00                	cmp rsi, 0
 15342 000092A6 7410                    	je .L_lambda_simple_env_end_03f3
 15343 000092A8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15344 000092AC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15345 000092B0 48FFC6                  	inc rsi
 15346 000092B3 48FFC2                  	inc rdx
 15347 000092B6 EBEA                    	jmp .L_lambda_simple_env_loop_03f3
 15348                                  .L_lambda_simple_env_end_03f3:
 15349 000092B8 5B                      	pop rbx
 15350 000092B9 BE00000000              	mov rsi, 0
 15351                                  .L_lambda_simple_params_loop_03f3:	; copy params
 15352 000092BE 4883FE00                	cmp rsi, 0
 15353 000092C2 740E                    	je .L_lambda_simple_params_end_03f3
 15354 000092C4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15355 000092C9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15356 000092CD 48FFC6                  	inc rsi
 15357 000092D0 EBEC                    	jmp .L_lambda_simple_params_loop_03f3
 15358                                  .L_lambda_simple_params_end_03f3:
 15359 000092D2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15360 000092D5 4889C3                  	mov rbx, rax
 15361 000092D8 58                      	pop rax
 15362 000092D9 C60005                  	mov byte [rax], T_closure
 15363 000092DC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15364 000092E0 48C74009[ED920000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f3
 15365 000092E8 E9FA170000              	jmp .L_lambda_simple_end_03f3
 15366                                  .L_lambda_simple_code_03f3:	; lambda-simple body
 15367 000092ED 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15368 000092F3 740B                    	je .L_lambda_simple_arity_check_ok_089a
 15369 000092F5 FF742410                	push qword [rsp + 8 * 2]
 15370 000092F9 6A01                    	push 1
 15371 000092FB E900950000              	jmp L_error_incorrect_arity_simple
 15372                                  .L_lambda_simple_arity_check_ok_089a:
 15373 00009300 C8000000                	enter 0, 0
 15374 00009304 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15375 00009309 E839950000              	call malloc
 15376 0000930E 50                      	push rax
 15377 0000930F BF08000000              	mov rdi, 8 * 1	; new rib
 15378 00009314 E82E950000              	call malloc
 15379 00009319 50                      	push rax
 15380 0000931A BF10000000              	mov rdi, 8 * 2	; extended env
 15381 0000931F E823950000              	call malloc
 15382 00009324 488B7D10                	mov rdi, ENV
 15383 00009328 BE00000000              	mov rsi, 0
 15384 0000932D BA01000000              	mov rdx, 1
 15385                                  .L_lambda_simple_env_loop_03f4:	; ext_env[i + 1] <-- env[i]
 15386 00009332 4883FE01                	cmp rsi, 1
 15387 00009336 7410                    	je .L_lambda_simple_env_end_03f4
 15388 00009338 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15389 0000933C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15390 00009340 48FFC6                  	inc rsi
 15391 00009343 48FFC2                  	inc rdx
 15392 00009346 EBEA                    	jmp .L_lambda_simple_env_loop_03f4
 15393                                  .L_lambda_simple_env_end_03f4:
 15394 00009348 5B                      	pop rbx
 15395 00009349 BE00000000              	mov rsi, 0
 15396                                  .L_lambda_simple_params_loop_03f4:	; copy params
 15397 0000934E 4883FE01                	cmp rsi, 1
 15398 00009352 740E                    	je .L_lambda_simple_params_end_03f4
 15399 00009354 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15400 00009359 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15401 0000935D 48FFC6                  	inc rsi
 15402 00009360 EBEC                    	jmp .L_lambda_simple_params_loop_03f4
 15403                                  .L_lambda_simple_params_end_03f4:
 15404 00009362 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15405 00009365 4889C3                  	mov rbx, rax
 15406 00009368 58                      	pop rax
 15407 00009369 C60005                  	mov byte [rax], T_closure
 15408 0000936C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15409 00009370 48C74009[7D930000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f4
 15410 00009378 E94D050000              	jmp .L_lambda_simple_end_03f4
 15411                                  .L_lambda_simple_code_03f4:	; lambda-simple body
 15412 0000937D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15413 00009383 740B                    	je .L_lambda_simple_arity_check_ok_089b
 15414 00009385 FF742410                	push qword [rsp + 8 * 2]
 15415 00009389 6A02                    	push 2
 15416 0000938B E970940000              	jmp L_error_incorrect_arity_simple
 15417                                  .L_lambda_simple_arity_check_ok_089b:
 15418 00009390 C8000000                	enter 0, 0
 15419 00009394 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15420 00009399 E8A9940000              	call malloc
 15421 0000939E 50                      	push rax
 15422 0000939F BF10000000              	mov rdi, 8 * 2	; new rib
 15423 000093A4 E89E940000              	call malloc
 15424 000093A9 50                      	push rax
 15425 000093AA BF18000000              	mov rdi, 8 * 3	; extended env
 15426 000093AF E893940000              	call malloc
 15427 000093B4 488B7D10                	mov rdi, ENV
 15428 000093B8 BE00000000              	mov rsi, 0
 15429 000093BD BA01000000              	mov rdx, 1
 15430                                  .L_lambda_simple_env_loop_03f5:	; ext_env[i + 1] <-- env[i]
 15431 000093C2 4883FE02                	cmp rsi, 2
 15432 000093C6 7410                    	je .L_lambda_simple_env_end_03f5
 15433 000093C8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15434 000093CC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15435 000093D0 48FFC6                  	inc rsi
 15436 000093D3 48FFC2                  	inc rdx
 15437 000093D6 EBEA                    	jmp .L_lambda_simple_env_loop_03f5
 15438                                  .L_lambda_simple_env_end_03f5:
 15439 000093D8 5B                      	pop rbx
 15440 000093D9 BE00000000              	mov rsi, 0
 15441                                  .L_lambda_simple_params_loop_03f5:	; copy params
 15442 000093DE 4883FE02                	cmp rsi, 2
 15443 000093E2 740E                    	je .L_lambda_simple_params_end_03f5
 15444 000093E4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15445 000093E9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15446 000093ED 48FFC6                  	inc rsi
 15447 000093F0 EBEC                    	jmp .L_lambda_simple_params_loop_03f5
 15448                                  .L_lambda_simple_params_end_03f5:
 15449 000093F2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15450 000093F5 4889C3                  	mov rbx, rax
 15451 000093F8 58                      	pop rax
 15452 000093F9 C60005                  	mov byte [rax], T_closure
 15453 000093FC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15454 00009400 48C74009[0D940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f5
 15455 00009408 E9B9040000              	jmp .L_lambda_simple_end_03f5
 15456                                  .L_lambda_simple_code_03f5:	; lambda-simple body
 15457 0000940D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15458 00009413 740B                    	je .L_lambda_simple_arity_check_ok_089c
 15459 00009415 FF742410                	push qword [rsp + 8 * 2]
 15460 00009419 6A02                    	push 2
 15461 0000941B E9E0930000              	jmp L_error_incorrect_arity_simple
 15462                                  .L_lambda_simple_arity_check_ok_089c:
 15463 00009420 C8000000                	enter 0, 0
 15464 00009424 488B4520                mov rax, qword [rbp + 32]
 15465 00009428 50                      	push rax
 15466 00009429 6A01                    	push 1
 15467 0000942B 488B0425[48000000]      	mov rax, qword [free_var_9]
 15468 00009433 803805                  	cmp byte [rax], T_closure 
 15469 00009436 0F85C6A30000                    jne L_code_ptr_error
 15470                                  
 15471 0000943C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15472                                  
 15473 00009440 53                              push rbx
 15474                                  
 15475 00009441 FF5009                          call SOB_CLOSURE_CODE(rax)
 15476                                  
 15477 00009444 483D[02000000]                  	cmp rax, sob_boolean_false
 15478 0000944A 0F841F020000            	je .L_if_else_0261
 15479 00009450 488B4528                mov rax, qword [rbp + 40]
 15480 00009454 50                      	push rax
 15481 00009455 6A01                    	push 1
 15482 00009457 488B0425[48000000]      	mov rax, qword [free_var_9]
 15483 0000945F 803805                  	cmp byte [rax], T_closure 
 15484 00009462 0F859AA30000                    jne L_code_ptr_error
 15485                                  
 15486 00009468 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15487                                  
 15488 0000946C 53                              push rbx
 15489                                  
 15490 0000946D FF5009                          call SOB_CLOSURE_CODE(rax)
 15491                                  
 15492 00009470 483D[02000000]                  	cmp rax, sob_boolean_false
 15493 00009476 0F8491000000            	je .L_if_else_0265
 15494 0000947C 488B4528                mov rax, qword [rbp + 40]
 15495 00009480 50                      	push rax
 15496 00009481 488B4520                mov rax, qword [rbp + 32]
 15497 00009485 50                      	push rax
 15498 00009486 6A02                    	push 2
 15499 00009488 488B4510                mov rax, qword [rbp + 16]
 15500 0000948C 488B00                  mov rax, qword [rax + 0]
 15501 0000948F 488B00                  mov rax, qword [rax + 0]
 15502                                  .L_lambda_simple_arity_check_ok_08a2:
 15503 00009492 803805                  	cmp byte [rax], T_closure
 15504                                  
 15505 00009495 0F8567A30000                    jne L_code_ptr_error                      ; rax <- proc
 15506                                  
 15507                                  
 15508 0000949B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15509                                  
 15510 0000949F 53                              push rbx                                  ; env pushed
 15511                                  
 15512 000094A0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15513                                  
 15514                                          ; sagydebug
 15515                                  
 15516 000094A3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15517                                  
 15518                                          
 15519                                          
 15520 000094A6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15521                                  
 15522 000094AA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15523                                  
 15524                                  
 15525 000094AF 4D89CA                          mov r10, r9
 15526 000094B2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 15527                                          
 15528 000094B6 4D89D7                          mov r15, r10
 15529 000094B9 4983C7FF                        add r15, -1
 15530                                                                                         
 15531 000094BD 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15532 000094C0 4983C404                        add r12, 4
 15533 000094C4 4983C4FF                        add r12, -1
 15534                                  
 15535 000094C8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15536                                  .L_tc_recycle_frame_loop_04ad:
 15537 000094CE 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 15538                                  
 15539 000094D2 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15540                                  
 15541                                  
 15542                                  
 15543 000094D7 41BE00000000                    mov r14, 0                                ; clean box
 15544                                  
 15545                                  
 15546 000094DD 4983C7FF                        add r15, -1           
 15547 000094E1 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15548                                  
 15549 000094E5 4983C4FF                        add r12, -1 
 15550                                  
 15551 000094E9 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15552 000094ED 75DF                    	jne .L_tc_recycle_frame_loop_04ad
 15553                                  .L_tc_recycle_frame_done_04ad:
 15554                                  ;this pop rbp in sot to the right place
 15555 000094EF 4D89C7                  mov r15, r8
 15556                                  
 15557 000094F2 4983C704                        add r15, 4
 15558                                  
 15559 000094F6 49C1E703                        shl r15, 3
 15560                                  
 15561 000094FA 4C01FC                          add rsp, r15
 15562 000094FD 5D                      	pop rbp                                  ; restore the old rbp
 15563                                  
 15564 000094FE 488B4D00                        mov rcx, qword [rbp]
 15565 00009502 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15566                                            ; rbx <- code(proc)
 15567                                  
 15568 00009506 FFE3                            jmp rbx
 15569 00009508 E95D010000              	jmp .L_if_end_0265
 15570                                  	.L_if_else_0265:
 15571 0000950D 488B4528                	mov rax, qword [rbp + 40]
 15572 00009511 50                      	push rax
 15573 00009512 6A01                    	push 1
 15574 00009514 488B0425[40000000]      	mov rax, qword [free_var_8]
 15575 0000951C 803805                  	cmp byte [rax], T_closure 
 15576 0000951F 0F85DDA20000                    jne L_code_ptr_error
 15577                                  
 15578 00009525 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15579                                  
 15580 00009529 53                              push rbx
 15581                                  
 15582 0000952A FF5009                          call SOB_CLOSURE_CODE(rax)
 15583                                  
 15584 0000952D 483D[02000000]                  	cmp rax, sob_boolean_false
 15585 00009533 0F84AE000000            	je .L_if_else_0266
 15586 00009539 488B4528                mov rax, qword [rbp + 40]
 15587 0000953D 50                      	push rax
 15588 0000953E 488B4520                mov rax, qword [rbp + 32]
 15589 00009542 50                      	push rax
 15590 00009543 6A01                    	push 1
 15591 00009545 488B0425[B8000000]      	mov rax, qword [free_var_23]
 15592 0000954D 803805                  	cmp byte [rax], T_closure 
 15593 00009550 0F85ACA20000                    jne L_code_ptr_error
 15594                                  
 15595 00009556 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15596                                  
 15597 0000955A 53                              push rbx
 15598                                  
 15599 0000955B FF5009                          call SOB_CLOSURE_CODE(rax)
 15600                                  
 15601 0000955E 50                              	push rax
 15602 0000955F 6A02                    	push 2
 15603 00009561 488B4510                mov rax, qword [rbp + 16]
 15604 00009565 488B00                  mov rax, qword [rax + 0]
 15605 00009568 488B4008                mov rax, qword [rax + 8]
 15606                                  .L_lambda_simple_arity_check_ok_08a1:
 15607 0000956C 803805                  	cmp byte [rax], T_closure
 15608                                  
 15609 0000956F 0F858DA20000                    jne L_code_ptr_error                      ; rax <- proc
 15610                                  
 15611                                  
 15612 00009575 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15613                                  
 15614 00009579 53                              push rbx                                  ; env pushed
 15615                                  
 15616 0000957A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15617                                  
 15618                                          ; sagydebug
 15619                                  
 15620 0000957D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15621                                  
 15622                                          
 15623                                          
 15624 00009580 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15625                                  
 15626 00009584 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15627                                  
 15628                                  
 15629 00009589 4D89CA                          mov r10, r9
 15630 0000958C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 15631                                          
 15632 00009590 4D89D7                          mov r15, r10
 15633 00009593 4983C7FF                        add r15, -1
 15634                                                                                         
 15635 00009597 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15636 0000959A 4983C404                        add r12, 4
 15637 0000959E 4983C4FF                        add r12, -1
 15638                                  
 15639 000095A2 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15640                                  .L_tc_recycle_frame_loop_04ac:
 15641 000095A8 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 15642                                  
 15643 000095AC 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15644                                  
 15645                                  
 15646                                  
 15647 000095B1 41BE00000000                    mov r14, 0                                ; clean box
 15648                                  
 15649                                  
 15650 000095B7 4983C7FF                        add r15, -1           
 15651 000095BB 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15652                                  
 15653 000095BF 4983C4FF                        add r12, -1 
 15654                                  
 15655 000095C3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15656 000095C7 75DF                    	jne .L_tc_recycle_frame_loop_04ac
 15657                                  .L_tc_recycle_frame_done_04ac:
 15658                                  ;this pop rbp in sot to the right place
 15659 000095C9 4D89C7                  mov r15, r8
 15660                                  
 15661 000095CC 4983C704                        add r15, 4
 15662                                  
 15663 000095D0 49C1E703                        shl r15, 3
 15664                                  
 15665 000095D4 4C01FC                          add rsp, r15
 15666 000095D7 5D                      	pop rbp                                  ; restore the old rbp
 15667                                  
 15668 000095D8 488B4D00                        mov rcx, qword [rbp]
 15669 000095DC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15670                                            ; rbx <- code(proc)
 15671                                  
 15672 000095E0 FFE3                            jmp rbx
 15673 000095E2 E983000000              	jmp .L_if_end_0266
 15674                                  	.L_if_else_0266:
 15675 000095E7 6A00                    		push 0
 15676 000095E9 488B4510                mov rax, qword [rbp + 16]
 15677 000095ED 488B4008                mov rax, qword [rax + 8]
 15678 000095F1 488B00                  mov rax, qword [rax + 0]
 15679                                  .L_lambda_simple_arity_check_ok_08a0:
 15680 000095F4 803805                  	cmp byte [rax], T_closure
 15681                                  
 15682 000095F7 0F8505A20000                    jne L_code_ptr_error                      ; rax <- proc
 15683                                  
 15684                                  
 15685 000095FD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15686                                  
 15687 00009601 53                              push rbx                                  ; env pushed
 15688                                  
 15689 00009602 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15690                                  
 15691                                          ; sagydebug
 15692                                  
 15693 00009605 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15694                                  
 15695                                          
 15696                                          
 15697 00009608 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15698                                  
 15699 0000960C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15700                                  
 15701                                  
 15702 00009611 4D89CA                          mov r10, r9
 15703 00009614 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 15704                                          
 15705 00009618 4D89D7                          mov r15, r10
 15706 0000961B 4983C7FF                        add r15, -1
 15707                                                                                         
 15708 0000961F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15709 00009622 4983C404                        add r12, 4
 15710 00009626 4983C4FF                        add r12, -1
 15711                                  
 15712 0000962A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15713                                  .L_tc_recycle_frame_loop_04ab:
 15714 00009630 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 15715                                  
 15716 00009634 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15717                                  
 15718                                  
 15719                                  
 15720 00009639 41BE00000000                    mov r14, 0                                ; clean box
 15721                                  
 15722                                  
 15723 0000963F 4983C7FF                        add r15, -1           
 15724 00009643 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15725                                  
 15726 00009647 4983C4FF                        add r12, -1 
 15727                                  
 15728 0000964B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15729 0000964F 75DF                    	jne .L_tc_recycle_frame_loop_04ab
 15730                                  .L_tc_recycle_frame_done_04ab:
 15731                                  ;this pop rbp in sot to the right place
 15732 00009651 4D89C7                  mov r15, r8
 15733                                  
 15734 00009654 4983C704                        add r15, 4
 15735                                  
 15736 00009658 49C1E703                        shl r15, 3
 15737                                  
 15738 0000965C 4C01FC                          add rsp, r15
 15739 0000965F 5D                      	pop rbp                                  ; restore the old rbp
 15740                                  
 15741 00009660 488B4D00                        mov rcx, qword [rbp]
 15742 00009664 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15743                                            ; rbx <- code(proc)
 15744                                  
 15745 00009668 FFE3                            jmp rbx
 15746                                  	.L_if_end_0266:
 15747                                  	.L_if_end_0265:
 15748 0000966A E953020000              	jmp .L_if_end_0261
 15749                                  	.L_if_else_0261:
 15750 0000966F 488B4520                	mov rax, qword [rbp + 32]
 15751 00009673 50                      	push rax
 15752 00009674 6A01                    	push 1
 15753 00009676 488B0425[40000000]      	mov rax, qword [free_var_8]
 15754 0000967E 803805                  	cmp byte [rax], T_closure 
 15755 00009681 0F857BA10000                    jne L_code_ptr_error
 15756                                  
 15757 00009687 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15758                                  
 15759 0000968B 53                              push rbx
 15760                                  
 15761 0000968C FF5009                          call SOB_CLOSURE_CODE(rax)
 15762                                  
 15763 0000968F 483D[02000000]                  	cmp rax, sob_boolean_false
 15764 00009695 0F841D020000            	je .L_if_else_0262
 15765 0000969B 488B4528                mov rax, qword [rbp + 40]
 15766 0000969F 50                      	push rax
 15767 000096A0 6A01                    	push 1
 15768 000096A2 488B0425[48000000]      	mov rax, qword [free_var_9]
 15769 000096AA 803805                  	cmp byte [rax], T_closure 
 15770 000096AD 0F854FA10000                    jne L_code_ptr_error
 15771                                  
 15772 000096B3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15773                                  
 15774 000096B7 53                              push rbx
 15775                                  
 15776 000096B8 FF5009                          call SOB_CLOSURE_CODE(rax)
 15777                                  
 15778 000096BB 483D[02000000]                  	cmp rax, sob_boolean_false
 15779 000096C1 0F84AE000000            	je .L_if_else_0263
 15780 000096C7 488B4528                mov rax, qword [rbp + 40]
 15781 000096CB 50                      	push rax
 15782 000096CC 6A01                    	push 1
 15783 000096CE 488B0425[B8000000]      	mov rax, qword [free_var_23]
 15784 000096D6 803805                  	cmp byte [rax], T_closure 
 15785 000096D9 0F8523A10000                    jne L_code_ptr_error
 15786                                  
 15787 000096DF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15788                                  
 15789 000096E3 53                              push rbx
 15790                                  
 15791 000096E4 FF5009                          call SOB_CLOSURE_CODE(rax)
 15792                                  
 15793 000096E7 50                              	push rax
 15794 000096E8 488B4520                mov rax, qword [rbp + 32]
 15795 000096EC 50                      	push rax
 15796 000096ED 6A02                    	push 2
 15797 000096EF 488B4510                mov rax, qword [rbp + 16]
 15798 000096F3 488B00                  mov rax, qword [rax + 0]
 15799 000096F6 488B4008                mov rax, qword [rax + 8]
 15800                                  .L_lambda_simple_arity_check_ok_089f:
 15801 000096FA 803805                  	cmp byte [rax], T_closure
 15802                                  
 15803 000096FD 0F85FFA00000                    jne L_code_ptr_error                      ; rax <- proc
 15804                                  
 15805                                  
 15806 00009703 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15807                                  
 15808 00009707 53                              push rbx                                  ; env pushed
 15809                                  
 15810 00009708 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15811                                  
 15812                                          ; sagydebug
 15813                                  
 15814 0000970B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15815                                  
 15816                                          
 15817                                          
 15818 0000970E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15819                                  
 15820 00009712 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15821                                  
 15822                                  
 15823 00009717 4D89CA                          mov r10, r9
 15824 0000971A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 15825                                          
 15826 0000971E 4D89D7                          mov r15, r10
 15827 00009721 4983C7FF                        add r15, -1
 15828                                                                                         
 15829 00009725 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15830 00009728 4983C404                        add r12, 4
 15831 0000972C 4983C4FF                        add r12, -1
 15832                                  
 15833 00009730 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15834                                  .L_tc_recycle_frame_loop_04aa:
 15835 00009736 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 15836                                  
 15837 0000973A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15838                                  
 15839                                  
 15840                                  
 15841 0000973F 41BE00000000                    mov r14, 0                                ; clean box
 15842                                  
 15843                                  
 15844 00009745 4983C7FF                        add r15, -1           
 15845 00009749 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15846                                  
 15847 0000974D 4983C4FF                        add r12, -1 
 15848                                  
 15849 00009751 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15850 00009755 75DF                    	jne .L_tc_recycle_frame_loop_04aa
 15851                                  .L_tc_recycle_frame_done_04aa:
 15852                                  ;this pop rbp in sot to the right place
 15853 00009757 4D89C7                  mov r15, r8
 15854                                  
 15855 0000975A 4983C704                        add r15, 4
 15856                                  
 15857 0000975E 49C1E703                        shl r15, 3
 15858                                  
 15859 00009762 4C01FC                          add rsp, r15
 15860 00009765 5D                      	pop rbp                                  ; restore the old rbp
 15861                                  
 15862 00009766 488B4D00                        mov rcx, qword [rbp]
 15863 0000976A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15864                                            ; rbx <- code(proc)
 15865                                  
 15866 0000976E FFE3                            jmp rbx
 15867 00009770 E941010000              	jmp .L_if_end_0263
 15868                                  	.L_if_else_0263:
 15869 00009775 488B4528                	mov rax, qword [rbp + 40]
 15870 00009779 50                      	push rax
 15871 0000977A 6A01                    	push 1
 15872 0000977C 488B0425[40000000]      	mov rax, qword [free_var_8]
 15873 00009784 803805                  	cmp byte [rax], T_closure 
 15874 00009787 0F8575A00000                    jne L_code_ptr_error
 15875                                  
 15876 0000978D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15877                                  
 15878 00009791 53                              push rbx
 15879                                  
 15880 00009792 FF5009                          call SOB_CLOSURE_CODE(rax)
 15881                                  
 15882 00009795 483D[02000000]                  	cmp rax, sob_boolean_false
 15883 0000979B 0F8492000000            	je .L_if_else_0264
 15884 000097A1 488B4528                mov rax, qword [rbp + 40]
 15885 000097A5 50                      	push rax
 15886 000097A6 488B4520                mov rax, qword [rbp + 32]
 15887 000097AA 50                      	push rax
 15888 000097AB 6A02                    	push 2
 15889 000097AD 488B4510                mov rax, qword [rbp + 16]
 15890 000097B1 488B00                  mov rax, qword [rax + 0]
 15891 000097B4 488B4008                mov rax, qword [rax + 8]
 15892                                  .L_lambda_simple_arity_check_ok_089e:
 15893 000097B8 803805                  	cmp byte [rax], T_closure
 15894                                  
 15895 000097BB 0F8541A00000                    jne L_code_ptr_error                      ; rax <- proc
 15896                                  
 15897                                  
 15898 000097C1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15899                                  
 15900 000097C5 53                              push rbx                                  ; env pushed
 15901                                  
 15902 000097C6 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15903                                  
 15904                                          ; sagydebug
 15905                                  
 15906 000097C9 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15907                                  
 15908                                          
 15909                                          
 15910 000097CC 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15911                                  
 15912 000097D0 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15913                                  
 15914                                  
 15915 000097D5 4D89CA                          mov r10, r9
 15916 000097D8 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 15917                                          
 15918 000097DC 4D89D7                          mov r15, r10
 15919 000097DF 4983C7FF                        add r15, -1
 15920                                                                                         
 15921 000097E3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15922 000097E6 4983C404                        add r12, 4
 15923 000097EA 4983C4FF                        add r12, -1
 15924                                  
 15925 000097EE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15926                                  .L_tc_recycle_frame_loop_04a9:
 15927 000097F4 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 15928                                  
 15929 000097F8 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15930                                  
 15931                                  
 15932                                  
 15933 000097FD 41BE00000000                    mov r14, 0                                ; clean box
 15934                                  
 15935                                  
 15936 00009803 4983C7FF                        add r15, -1           
 15937 00009807 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15938                                  
 15939 0000980B 4983C4FF                        add r12, -1 
 15940                                  
 15941 0000980F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15942 00009813 75DF                    	jne .L_tc_recycle_frame_loop_04a9
 15943                                  .L_tc_recycle_frame_done_04a9:
 15944                                  ;this pop rbp in sot to the right place
 15945 00009815 4D89C7                  mov r15, r8
 15946                                  
 15947 00009818 4983C704                        add r15, 4
 15948                                  
 15949 0000981C 49C1E703                        shl r15, 3
 15950                                  
 15951 00009820 4C01FC                          add rsp, r15
 15952 00009823 5D                      	pop rbp                                  ; restore the old rbp
 15953                                  
 15954 00009824 488B4D00                        mov rcx, qword [rbp]
 15955 00009828 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15956                                            ; rbx <- code(proc)
 15957                                  
 15958 0000982C FFE3                            jmp rbx
 15959 0000982E E983000000              	jmp .L_if_end_0264
 15960                                  	.L_if_else_0264:
 15961 00009833 6A00                    		push 0
 15962 00009835 488B4510                mov rax, qword [rbp + 16]
 15963 00009839 488B4008                mov rax, qword [rax + 8]
 15964 0000983D 488B00                  mov rax, qword [rax + 0]
 15965                                  .L_lambda_simple_arity_check_ok_089d:
 15966 00009840 803805                  	cmp byte [rax], T_closure
 15967                                  
 15968 00009843 0F85B99F0000                    jne L_code_ptr_error                      ; rax <- proc
 15969                                  
 15970                                  
 15971 00009849 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15972                                  
 15973 0000984D 53                              push rbx                                  ; env pushed
 15974                                  
 15975 0000984E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15976                                  
 15977                                          ; sagydebug
 15978                                  
 15979 00009851 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15980                                  
 15981                                          
 15982                                          
 15983 00009854 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15984                                  
 15985 00009858 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15986                                  
 15987                                  
 15988 0000985D 4D89CA                          mov r10, r9
 15989 00009860 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 15990                                          
 15991 00009864 4D89D7                          mov r15, r10
 15992 00009867 4983C7FF                        add r15, -1
 15993                                                                                         
 15994 0000986B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15995 0000986E 4983C404                        add r12, 4
 15996 00009872 4983C4FF                        add r12, -1
 15997                                  
 15998 00009876 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15999                                  .L_tc_recycle_frame_loop_04a8:
 16000 0000987C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 16001                                  
 16002 00009880 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16003                                  
 16004                                  
 16005                                  
 16006 00009885 41BE00000000                    mov r14, 0                                ; clean box
 16007                                  
 16008                                  
 16009 0000988B 4983C7FF                        add r15, -1           
 16010 0000988F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16011                                  
 16012 00009893 4983C4FF                        add r12, -1 
 16013                                  
 16014 00009897 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16015 0000989B 75DF                    	jne .L_tc_recycle_frame_loop_04a8
 16016                                  .L_tc_recycle_frame_done_04a8:
 16017                                  ;this pop rbp in sot to the right place
 16018 0000989D 4D89C7                  mov r15, r8
 16019                                  
 16020 000098A0 4983C704                        add r15, 4
 16021                                  
 16022 000098A4 49C1E703                        shl r15, 3
 16023                                  
 16024 000098A8 4C01FC                          add rsp, r15
 16025 000098AB 5D                      	pop rbp                                  ; restore the old rbp
 16026                                  
 16027 000098AC 488B4D00                        mov rcx, qword [rbp]
 16028 000098B0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16029                                            ; rbx <- code(proc)
 16030                                  
 16031 000098B4 FFE3                            jmp rbx
 16032                                  	.L_if_end_0264:
 16033                                  	.L_if_end_0263:
 16034 000098B6 EB0A                    	jmp .L_if_end_0262
 16035                                  	.L_if_else_0262:
 16036 000098B8 48B8-                   		mov rax, qword (L_constants + 0)
 16036 000098BA [0000000000000000] 
 16037                                  	.L_if_end_0262:
 16038                                  	.L_if_end_0261:
 16039 000098C2 C9                      	leave
 16040 000098C3 C22000                  	ret 8 * (2 + 2)
 16041                                  .L_lambda_simple_end_03f5:	; new closure is in rax
 16042 000098C6 C9                      	leave
 16043 000098C7 C22000                  	ret 8 * (2 + 2)
 16044                                  .L_lambda_simple_end_03f4:	; new closure is in rax
 16045 000098CA 50                      	push rax
 16046 000098CB 6A01                    	push 1
 16047 000098CD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16048 000098D2 E8708F0000              	call malloc
 16049 000098D7 50                      	push rax
 16050 000098D8 BF08000000              	mov rdi, 8 * 1	; new rib
 16051 000098DD E8658F0000              	call malloc
 16052 000098E2 50                      	push rax
 16053 000098E3 BF10000000              	mov rdi, 8 * 2	; extended env
 16054 000098E8 E85A8F0000              	call malloc
 16055 000098ED 488B7D10                	mov rdi, ENV
 16056 000098F1 BE00000000              	mov rsi, 0
 16057 000098F6 BA01000000              	mov rdx, 1
 16058                                  .L_lambda_simple_env_loop_03f6:	; ext_env[i + 1] <-- env[i]
 16059 000098FB 4883FE01                	cmp rsi, 1
 16060 000098FF 7410                    	je .L_lambda_simple_env_end_03f6
 16061 00009901 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16062 00009905 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16063 00009909 48FFC6                  	inc rsi
 16064 0000990C 48FFC2                  	inc rdx
 16065 0000990F EBEA                    	jmp .L_lambda_simple_env_loop_03f6
 16066                                  .L_lambda_simple_env_end_03f6:
 16067 00009911 5B                      	pop rbx
 16068 00009912 BE00000000              	mov rsi, 0
 16069                                  .L_lambda_simple_params_loop_03f6:	; copy params
 16070 00009917 4883FE01                	cmp rsi, 1
 16071 0000991B 740E                    	je .L_lambda_simple_params_end_03f6
 16072 0000991D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16073 00009922 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16074 00009926 48FFC6                  	inc rsi
 16075 00009929 EBEC                    	jmp .L_lambda_simple_params_loop_03f6
 16076                                  .L_lambda_simple_params_end_03f6:
 16077 0000992B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16078 0000992E 4889C3                  	mov rbx, rax
 16079 00009931 58                      	pop rax
 16080 00009932 C60005                  	mov byte [rax], T_closure
 16081 00009935 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16082 00009939 48C74009[46990000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f6
 16083 00009941 E927110000              	jmp .L_lambda_simple_end_03f6
 16084                                  .L_lambda_simple_code_03f6:	; lambda-simple body
 16085 00009946 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16086 0000994C 740B                    	je .L_lambda_simple_arity_check_ok_08a3
 16087 0000994E FF742410                	push qword [rsp + 8 * 2]
 16088 00009952 6A01                    	push 1
 16089 00009954 E9A78E0000              	jmp L_error_incorrect_arity_simple
 16090                                  .L_lambda_simple_arity_check_ok_08a3:
 16091 00009959 C8000000                	enter 0, 0
 16092 0000995D 488B0425[38010000]      	mov rax, qword [free_var_39]
 16093 00009965 50                      	push rax
 16094 00009966 488B0425[40010000]      	mov rax, qword [free_var_40]
 16095 0000996E 50                      	push rax
 16096 0000996F 6A02                    	push 2
 16097 00009971 488B4520                mov rax, qword [rbp + 32]
 16098 00009975 803805                  	cmp byte [rax], T_closure 
 16099 00009978 0F85849E0000                    jne L_code_ptr_error
 16100                                  
 16101 0000997E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16102                                  
 16103 00009982 53                              push rbx
 16104                                  
 16105 00009983 FF5009                          call SOB_CLOSURE_CODE(rax)
 16106                                  
 16107 00009986 50                              	push rax
 16108 00009987 6A01                    	push 1
 16109 00009989 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16110 0000998E E8B48E0000              	call malloc
 16111 00009993 50                      	push rax
 16112 00009994 BF08000000              	mov rdi, 8 * 1	; new rib
 16113 00009999 E8A98E0000              	call malloc
 16114 0000999E 50                      	push rax
 16115 0000999F BF18000000              	mov rdi, 8 * 3	; extended env
 16116 000099A4 E89E8E0000              	call malloc
 16117 000099A9 488B7D10                	mov rdi, ENV
 16118 000099AD BE00000000              	mov rsi, 0
 16119 000099B2 BA01000000              	mov rdx, 1
 16120                                  .L_lambda_simple_env_loop_03f7:	; ext_env[i + 1] <-- env[i]
 16121 000099B7 4883FE02                	cmp rsi, 2
 16122 000099BB 7410                    	je .L_lambda_simple_env_end_03f7
 16123 000099BD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16124 000099C1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16125 000099C5 48FFC6                  	inc rsi
 16126 000099C8 48FFC2                  	inc rdx
 16127 000099CB EBEA                    	jmp .L_lambda_simple_env_loop_03f7
 16128                                  .L_lambda_simple_env_end_03f7:
 16129 000099CD 5B                      	pop rbx
 16130 000099CE BE00000000              	mov rsi, 0
 16131                                  .L_lambda_simple_params_loop_03f7:	; copy params
 16132 000099D3 4883FE01                	cmp rsi, 1
 16133 000099D7 740E                    	je .L_lambda_simple_params_end_03f7
 16134 000099D9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16135 000099DE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16136 000099E2 48FFC6                  	inc rsi
 16137 000099E5 EBEC                    	jmp .L_lambda_simple_params_loop_03f7
 16138                                  .L_lambda_simple_params_end_03f7:
 16139 000099E7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16140 000099EA 4889C3                  	mov rbx, rax
 16141 000099ED 58                      	pop rax
 16142 000099EE C60005                  	mov byte [rax], T_closure
 16143 000099F1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16144 000099F5 48C74009[029A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f7
 16145 000099FD E9F10F0000              	jmp .L_lambda_simple_end_03f7
 16146                                  .L_lambda_simple_code_03f7:	; lambda-simple body
 16147 00009A02 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16148 00009A08 740B                    	je .L_lambda_simple_arity_check_ok_08a4
 16149 00009A0A FF742410                	push qword [rsp + 8 * 2]
 16150 00009A0E 6A01                    	push 1
 16151 00009A10 E9EB8D0000              	jmp L_error_incorrect_arity_simple
 16152                                  .L_lambda_simple_arity_check_ok_08a4:
 16153 00009A15 C8000000                	enter 0, 0
 16154 00009A19 488B0425[48010000]      	mov rax, qword [free_var_41]
 16155 00009A21 50                      	push rax
 16156 00009A22 488B0425[50010000]      	mov rax, qword [free_var_42]
 16157 00009A2A 50                      	push rax
 16158 00009A2B 6A02                    	push 2
 16159 00009A2D 488B4510                mov rax, qword [rbp + 16]
 16160 00009A31 488B00                  mov rax, qword [rax + 0]
 16161 00009A34 488B00                  mov rax, qword [rax + 0]
 16162 00009A37 803805                  	cmp byte [rax], T_closure 
 16163 00009A3A 0F85C29D0000                    jne L_code_ptr_error
 16164                                  
 16165 00009A40 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16166                                  
 16167 00009A44 53                              push rbx
 16168                                  
 16169 00009A45 FF5009                          call SOB_CLOSURE_CODE(rax)
 16170                                  
 16171 00009A48 50                              	push rax
 16172 00009A49 6A01                    	push 1
 16173 00009A4B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16174 00009A50 E8F28D0000              	call malloc
 16175 00009A55 50                      	push rax
 16176 00009A56 BF08000000              	mov rdi, 8 * 1	; new rib
 16177 00009A5B E8E78D0000              	call malloc
 16178 00009A60 50                      	push rax
 16179 00009A61 BF20000000              	mov rdi, 8 * 4	; extended env
 16180 00009A66 E8DC8D0000              	call malloc
 16181 00009A6B 488B7D10                	mov rdi, ENV
 16182 00009A6F BE00000000              	mov rsi, 0
 16183 00009A74 BA01000000              	mov rdx, 1
 16184                                  .L_lambda_simple_env_loop_03f8:	; ext_env[i + 1] <-- env[i]
 16185 00009A79 4883FE03                	cmp rsi, 3
 16186 00009A7D 7410                    	je .L_lambda_simple_env_end_03f8
 16187 00009A7F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16188 00009A83 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16189 00009A87 48FFC6                  	inc rsi
 16190 00009A8A 48FFC2                  	inc rdx
 16191 00009A8D EBEA                    	jmp .L_lambda_simple_env_loop_03f8
 16192                                  .L_lambda_simple_env_end_03f8:
 16193 00009A8F 5B                      	pop rbx
 16194 00009A90 BE00000000              	mov rsi, 0
 16195                                  .L_lambda_simple_params_loop_03f8:	; copy params
 16196 00009A95 4883FE01                	cmp rsi, 1
 16197 00009A99 740E                    	je .L_lambda_simple_params_end_03f8
 16198 00009A9B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16199 00009AA0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16200 00009AA4 48FFC6                  	inc rsi
 16201 00009AA7 EBEC                    	jmp .L_lambda_simple_params_loop_03f8
 16202                                  .L_lambda_simple_params_end_03f8:
 16203 00009AA9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16204 00009AAC 4889C3                  	mov rbx, rax
 16205 00009AAF 58                      	pop rax
 16206 00009AB0 C60005                  	mov byte [rax], T_closure
 16207 00009AB3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16208 00009AB7 48C74009[C49A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f8
 16209 00009ABF E9B50E0000              	jmp .L_lambda_simple_end_03f8
 16210                                  .L_lambda_simple_code_03f8:	; lambda-simple body
 16211 00009AC4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16212 00009ACA 740B                    	je .L_lambda_simple_arity_check_ok_08a5
 16213 00009ACC FF742410                	push qword [rsp + 8 * 2]
 16214 00009AD0 6A01                    	push 1
 16215 00009AD2 E9298D0000              	jmp L_error_incorrect_arity_simple
 16216                                  .L_lambda_simple_arity_check_ok_08a5:
 16217 00009AD7 C8000000                	enter 0, 0
 16218 00009ADB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16219 00009AE0 E8628D0000              	call malloc
 16220 00009AE5 50                      	push rax
 16221 00009AE6 BF08000000              	mov rdi, 8 * 1	; new rib
 16222 00009AEB E8578D0000              	call malloc
 16223 00009AF0 50                      	push rax
 16224 00009AF1 BF28000000              	mov rdi, 8 * 5	; extended env
 16225 00009AF6 E84C8D0000              	call malloc
 16226 00009AFB 488B7D10                	mov rdi, ENV
 16227 00009AFF BE00000000              	mov rsi, 0
 16228 00009B04 BA01000000              	mov rdx, 1
 16229                                  .L_lambda_simple_env_loop_03f9:	; ext_env[i + 1] <-- env[i]
 16230 00009B09 4883FE04                	cmp rsi, 4
 16231 00009B0D 7410                    	je .L_lambda_simple_env_end_03f9
 16232 00009B0F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16233 00009B13 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16234 00009B17 48FFC6                  	inc rsi
 16235 00009B1A 48FFC2                  	inc rdx
 16236 00009B1D EBEA                    	jmp .L_lambda_simple_env_loop_03f9
 16237                                  .L_lambda_simple_env_end_03f9:
 16238 00009B1F 5B                      	pop rbx
 16239 00009B20 BE00000000              	mov rsi, 0
 16240                                  .L_lambda_simple_params_loop_03f9:	; copy params
 16241 00009B25 4883FE01                	cmp rsi, 1
 16242 00009B29 740E                    	je .L_lambda_simple_params_end_03f9
 16243 00009B2B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16244 00009B30 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16245 00009B34 48FFC6                  	inc rsi
 16246 00009B37 EBEC                    	jmp .L_lambda_simple_params_loop_03f9
 16247                                  .L_lambda_simple_params_end_03f9:
 16248 00009B39 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16249 00009B3C 4889C3                  	mov rbx, rax
 16250 00009B3F 58                      	pop rax
 16251 00009B40 C60005                  	mov byte [rax], T_closure
 16252 00009B43 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16253 00009B47 48C74009[549B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03f9
 16254 00009B4F E9C4000000              	jmp .L_lambda_simple_end_03f9
 16255                                  .L_lambda_simple_code_03f9:	; lambda-simple body
 16256 00009B54 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16257 00009B5A 740B                    	je .L_lambda_simple_arity_check_ok_08a6
 16258 00009B5C FF742410                	push qword [rsp + 8 * 2]
 16259 00009B60 6A02                    	push 2
 16260 00009B62 E9998C0000              	jmp L_error_incorrect_arity_simple
 16261                                  .L_lambda_simple_arity_check_ok_08a6:
 16262 00009B67 C8000000                	enter 0, 0
 16263 00009B6B 488B4528                mov rax, qword [rbp + 40]
 16264 00009B6F 50                      	push rax
 16265 00009B70 488B4520                mov rax, qword [rbp + 32]
 16266 00009B74 50                      	push rax
 16267 00009B75 6A02                    	push 2
 16268 00009B77 488B4510                mov rax, qword [rbp + 16]
 16269 00009B7B 488B4008                mov rax, qword [rax + 8]
 16270 00009B7F 488B00                  mov rax, qword [rax + 0]
 16271 00009B82 803805                  	cmp byte [rax], T_closure 
 16272 00009B85 0F85779C0000                    jne L_code_ptr_error
 16273                                  
 16274 00009B8B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16275                                  
 16276 00009B8F 53                              push rbx
 16277                                  
 16278 00009B90 FF5009                          call SOB_CLOSURE_CODE(rax)
 16279                                  
 16280 00009B93 50                              	push rax
 16281 00009B94 6A01                    	push 1
 16282 00009B96 488B0425[B0020000]      	mov rax, qword [free_var_86]
 16283                                  .L_lambda_simple_arity_check_ok_08a7:
 16284 00009B9E 803805                  	cmp byte [rax], T_closure
 16285                                  
 16286 00009BA1 0F855B9C0000                    jne L_code_ptr_error                      ; rax <- proc
 16287                                  
 16288                                  
 16289 00009BA7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16290                                  
 16291 00009BAB 53                              push rbx                                  ; env pushed
 16292                                  
 16293 00009BAC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16294                                  
 16295                                          ; sagydebug
 16296                                  
 16297 00009BAF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16298                                  
 16299                                          
 16300                                          
 16301 00009BB2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16302                                  
 16303 00009BB6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16304                                  
 16305                                  
 16306 00009BBB 4D89CA                          mov r10, r9
 16307 00009BBE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 16308                                          
 16309 00009BC2 4D89D7                          mov r15, r10
 16310 00009BC5 4983C7FF                        add r15, -1
 16311                                                                                         
 16312 00009BC9 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16313 00009BCC 4983C404                        add r12, 4
 16314 00009BD0 4983C4FF                        add r12, -1
 16315                                  
 16316 00009BD4 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16317                                  .L_tc_recycle_frame_loop_04ae:
 16318 00009BDA 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 16319                                  
 16320 00009BDE 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16321                                  
 16322                                  
 16323                                  
 16324 00009BE3 41BE00000000                    mov r14, 0                                ; clean box
 16325                                  
 16326                                  
 16327 00009BE9 4983C7FF                        add r15, -1           
 16328 00009BED 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16329                                  
 16330 00009BF1 4983C4FF                        add r12, -1 
 16331                                  
 16332 00009BF5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16333 00009BF9 75DF                    	jne .L_tc_recycle_frame_loop_04ae
 16334                                  .L_tc_recycle_frame_done_04ae:
 16335                                  ;this pop rbp in sot to the right place
 16336 00009BFB 4D89C7                  mov r15, r8
 16337                                  
 16338 00009BFE 4983C704                        add r15, 4
 16339                                  
 16340 00009C02 49C1E703                        shl r15, 3
 16341                                  
 16342 00009C06 4C01FC                          add rsp, r15
 16343 00009C09 5D                      	pop rbp                                  ; restore the old rbp
 16344                                  
 16345 00009C0A 488B4D00                        mov rcx, qword [rbp]
 16346 00009C0E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16347                                            ; rbx <- code(proc)
 16348                                  
 16349 00009C12 FFE3                            jmp rbx
 16350 00009C14 C9                      	leave
 16351 00009C15 C22000                  	ret 8 * (2 + 2)
 16352                                  .L_lambda_simple_end_03f9:	; new closure is in rax
 16353 00009C18 50                      	push rax
 16354 00009C19 6A01                    	push 1
 16355 00009C1B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16356 00009C20 E8228C0000              	call malloc
 16357 00009C25 50                      	push rax
 16358 00009C26 BF08000000              	mov rdi, 8 * 1	; new rib
 16359 00009C2B E8178C0000              	call malloc
 16360 00009C30 50                      	push rax
 16361 00009C31 BF28000000              	mov rdi, 8 * 5	; extended env
 16362 00009C36 E80C8C0000              	call malloc
 16363 00009C3B 488B7D10                	mov rdi, ENV
 16364 00009C3F BE00000000              	mov rsi, 0
 16365 00009C44 BA01000000              	mov rdx, 1
 16366                                  .L_lambda_simple_env_loop_03fa:	; ext_env[i + 1] <-- env[i]
 16367 00009C49 4883FE04                	cmp rsi, 4
 16368 00009C4D 7410                    	je .L_lambda_simple_env_end_03fa
 16369 00009C4F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16370 00009C53 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16371 00009C57 48FFC6                  	inc rsi
 16372 00009C5A 48FFC2                  	inc rdx
 16373 00009C5D EBEA                    	jmp .L_lambda_simple_env_loop_03fa
 16374                                  .L_lambda_simple_env_end_03fa:
 16375 00009C5F 5B                      	pop rbx
 16376 00009C60 BE00000000              	mov rsi, 0
 16377                                  .L_lambda_simple_params_loop_03fa:	; copy params
 16378 00009C65 4883FE01                	cmp rsi, 1
 16379 00009C69 740E                    	je .L_lambda_simple_params_end_03fa
 16380 00009C6B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16381 00009C70 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16382 00009C74 48FFC6                  	inc rsi
 16383 00009C77 EBEC                    	jmp .L_lambda_simple_params_loop_03fa
 16384                                  .L_lambda_simple_params_end_03fa:
 16385 00009C79 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16386 00009C7C 4889C3                  	mov rbx, rax
 16387 00009C7F 58                      	pop rax
 16388 00009C80 C60005                  	mov byte [rax], T_closure
 16389 00009C83 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16390 00009C87 48C74009[949C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fa
 16391 00009C8F E96B0C0000              	jmp .L_lambda_simple_end_03fa
 16392                                  .L_lambda_simple_code_03fa:	; lambda-simple body
 16393 00009C94 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16394 00009C9A 740B                    	je .L_lambda_simple_arity_check_ok_08a8
 16395 00009C9C FF742410                	push qword [rsp + 8 * 2]
 16396 00009CA0 6A01                    	push 1
 16397 00009CA2 E9598B0000              	jmp L_error_incorrect_arity_simple
 16398                                  .L_lambda_simple_arity_check_ok_08a8:
 16399 00009CA7 C8000000                	enter 0, 0
 16400 00009CAB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16401 00009CB0 E8928B0000              	call malloc
 16402 00009CB5 50                      	push rax
 16403 00009CB6 BF08000000              	mov rdi, 8 * 1	; new rib
 16404 00009CBB E8878B0000              	call malloc
 16405 00009CC0 50                      	push rax
 16406 00009CC1 BF30000000              	mov rdi, 8 * 6	; extended env
 16407 00009CC6 E87C8B0000              	call malloc
 16408 00009CCB 488B7D10                	mov rdi, ENV
 16409 00009CCF BE00000000              	mov rsi, 0
 16410 00009CD4 BA01000000              	mov rdx, 1
 16411                                  .L_lambda_simple_env_loop_03fb:	; ext_env[i + 1] <-- env[i]
 16412 00009CD9 4883FE05                	cmp rsi, 5
 16413 00009CDD 7410                    	je .L_lambda_simple_env_end_03fb
 16414 00009CDF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16415 00009CE3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16416 00009CE7 48FFC6                  	inc rsi
 16417 00009CEA 48FFC2                  	inc rdx
 16418 00009CED EBEA                    	jmp .L_lambda_simple_env_loop_03fb
 16419                                  .L_lambda_simple_env_end_03fb:
 16420 00009CEF 5B                      	pop rbx
 16421 00009CF0 BE00000000              	mov rsi, 0
 16422                                  .L_lambda_simple_params_loop_03fb:	; copy params
 16423 00009CF5 4883FE01                	cmp rsi, 1
 16424 00009CF9 740E                    	je .L_lambda_simple_params_end_03fb
 16425 00009CFB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16426 00009D00 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16427 00009D04 48FFC6                  	inc rsi
 16428 00009D07 EBEC                    	jmp .L_lambda_simple_params_loop_03fb
 16429                                  .L_lambda_simple_params_end_03fb:
 16430 00009D09 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16431 00009D0C 4889C3                  	mov rbx, rax
 16432 00009D0F 58                      	pop rax
 16433 00009D10 C60005                  	mov byte [rax], T_closure
 16434 00009D13 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16435 00009D17 48C74009[249D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fb
 16436 00009D1F E9A8000000              	jmp .L_lambda_simple_end_03fb
 16437                                  .L_lambda_simple_code_03fb:	; lambda-simple body
 16438 00009D24 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16439 00009D2A 740B                    	je .L_lambda_simple_arity_check_ok_08a9
 16440 00009D2C FF742410                	push qword [rsp + 8 * 2]
 16441 00009D30 6A02                    	push 2
 16442 00009D32 E9C98A0000              	jmp L_error_incorrect_arity_simple
 16443                                  .L_lambda_simple_arity_check_ok_08a9:
 16444 00009D37 C8000000                	enter 0, 0
 16445 00009D3B 488B4520                mov rax, qword [rbp + 32]
 16446 00009D3F 50                      	push rax
 16447 00009D40 488B4528                mov rax, qword [rbp + 40]
 16448 00009D44 50                      	push rax
 16449 00009D45 6A02                    	push 2
 16450 00009D47 488B4510                mov rax, qword [rbp + 16]
 16451 00009D4B 488B4010                mov rax, qword [rax + 16]
 16452 00009D4F 488B00                  mov rax, qword [rax + 0]
 16453                                  .L_lambda_simple_arity_check_ok_08aa:
 16454 00009D52 803805                  	cmp byte [rax], T_closure
 16455                                  
 16456 00009D55 0F85A79A0000                    jne L_code_ptr_error                      ; rax <- proc
 16457                                  
 16458                                  
 16459 00009D5B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16460                                  
 16461 00009D5F 53                              push rbx                                  ; env pushed
 16462                                  
 16463 00009D60 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16464                                  
 16465                                          ; sagydebug
 16466                                  
 16467 00009D63 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16468                                  
 16469                                          
 16470                                          
 16471 00009D66 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16472                                  
 16473 00009D6A 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16474                                  
 16475                                  
 16476 00009D6F 4D89CA                          mov r10, r9
 16477 00009D72 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 16478                                          
 16479 00009D76 4D89D7                          mov r15, r10
 16480 00009D79 4983C7FF                        add r15, -1
 16481                                                                                         
 16482 00009D7D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16483 00009D80 4983C404                        add r12, 4
 16484 00009D84 4983C4FF                        add r12, -1
 16485                                  
 16486 00009D88 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16487                                  .L_tc_recycle_frame_loop_04af:
 16488 00009D8E 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 16489                                  
 16490 00009D92 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16491                                  
 16492                                  
 16493                                  
 16494 00009D97 41BE00000000                    mov r14, 0                                ; clean box
 16495                                  
 16496                                  
 16497 00009D9D 4983C7FF                        add r15, -1           
 16498 00009DA1 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16499                                  
 16500 00009DA5 4983C4FF                        add r12, -1 
 16501                                  
 16502 00009DA9 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16503 00009DAD 75DF                    	jne .L_tc_recycle_frame_loop_04af
 16504                                  .L_tc_recycle_frame_done_04af:
 16505                                  ;this pop rbp in sot to the right place
 16506 00009DAF 4D89C7                  mov r15, r8
 16507                                  
 16508 00009DB2 4983C704                        add r15, 4
 16509                                  
 16510 00009DB6 49C1E703                        shl r15, 3
 16511                                  
 16512 00009DBA 4C01FC                          add rsp, r15
 16513 00009DBD 5D                      	pop rbp                                  ; restore the old rbp
 16514                                  
 16515 00009DBE 488B4D00                        mov rcx, qword [rbp]
 16516 00009DC2 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16517                                            ; rbx <- code(proc)
 16518                                  
 16519 00009DC6 FFE3                            jmp rbx
 16520 00009DC8 C9                      	leave
 16521 00009DC9 C22000                  	ret 8 * (2 + 2)
 16522                                  .L_lambda_simple_end_03fb:	; new closure is in rax
 16523 00009DCC 50                      	push rax
 16524 00009DCD 6A01                    	push 1
 16525 00009DCF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16526 00009DD4 E86E8A0000              	call malloc
 16527 00009DD9 50                      	push rax
 16528 00009DDA BF08000000              	mov rdi, 8 * 1	; new rib
 16529 00009DDF E8638A0000              	call malloc
 16530 00009DE4 50                      	push rax
 16531 00009DE5 BF30000000              	mov rdi, 8 * 6	; extended env
 16532 00009DEA E8588A0000              	call malloc
 16533 00009DEF 488B7D10                	mov rdi, ENV
 16534 00009DF3 BE00000000              	mov rsi, 0
 16535 00009DF8 BA01000000              	mov rdx, 1
 16536                                  .L_lambda_simple_env_loop_03fc:	; ext_env[i + 1] <-- env[i]
 16537 00009DFD 4883FE05                	cmp rsi, 5
 16538 00009E01 7410                    	je .L_lambda_simple_env_end_03fc
 16539 00009E03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16540 00009E07 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16541 00009E0B 48FFC6                  	inc rsi
 16542 00009E0E 48FFC2                  	inc rdx
 16543 00009E11 EBEA                    	jmp .L_lambda_simple_env_loop_03fc
 16544                                  .L_lambda_simple_env_end_03fc:
 16545 00009E13 5B                      	pop rbx
 16546 00009E14 BE00000000              	mov rsi, 0
 16547                                  .L_lambda_simple_params_loop_03fc:	; copy params
 16548 00009E19 4883FE01                	cmp rsi, 1
 16549 00009E1D 740E                    	je .L_lambda_simple_params_end_03fc
 16550 00009E1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16551 00009E24 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16552 00009E28 48FFC6                  	inc rsi
 16553 00009E2B EBEC                    	jmp .L_lambda_simple_params_loop_03fc
 16554                                  .L_lambda_simple_params_end_03fc:
 16555 00009E2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16556 00009E30 4889C3                  	mov rbx, rax
 16557 00009E33 58                      	pop rax
 16558 00009E34 C60005                  	mov byte [rax], T_closure
 16559 00009E37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16560 00009E3B 48C74009[489E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fc
 16561 00009E43 E93D0A0000              	jmp .L_lambda_simple_end_03fc
 16562                                  .L_lambda_simple_code_03fc:	; lambda-simple body
 16563 00009E48 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16564 00009E4E 740B                    	je .L_lambda_simple_arity_check_ok_08ab
 16565 00009E50 FF742410                	push qword [rsp + 8 * 2]
 16566 00009E54 6A01                    	push 1
 16567 00009E56 E9A5890000              	jmp L_error_incorrect_arity_simple
 16568                                  .L_lambda_simple_arity_check_ok_08ab:
 16569 00009E5B C8000000                	enter 0, 0
 16570 00009E5F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16571 00009E64 E8DE890000              	call malloc
 16572 00009E69 50                      	push rax
 16573 00009E6A BF08000000              	mov rdi, 8 * 1	; new rib
 16574 00009E6F E8D3890000              	call malloc
 16575 00009E74 50                      	push rax
 16576 00009E75 BF38000000              	mov rdi, 8 * 7	; extended env
 16577 00009E7A E8C8890000              	call malloc
 16578 00009E7F 488B7D10                	mov rdi, ENV
 16579 00009E83 BE00000000              	mov rsi, 0
 16580 00009E88 BA01000000              	mov rdx, 1
 16581                                  .L_lambda_simple_env_loop_03fd:	; ext_env[i + 1] <-- env[i]
 16582 00009E8D 4883FE06                	cmp rsi, 6
 16583 00009E91 7410                    	je .L_lambda_simple_env_end_03fd
 16584 00009E93 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16585 00009E97 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16586 00009E9B 48FFC6                  	inc rsi
 16587 00009E9E 48FFC2                  	inc rdx
 16588 00009EA1 EBEA                    	jmp .L_lambda_simple_env_loop_03fd
 16589                                  .L_lambda_simple_env_end_03fd:
 16590 00009EA3 5B                      	pop rbx
 16591 00009EA4 BE00000000              	mov rsi, 0
 16592                                  .L_lambda_simple_params_loop_03fd:	; copy params
 16593 00009EA9 4883FE01                	cmp rsi, 1
 16594 00009EAD 740E                    	je .L_lambda_simple_params_end_03fd
 16595 00009EAF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16596 00009EB4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16597 00009EB8 48FFC6                  	inc rsi
 16598 00009EBB EBEC                    	jmp .L_lambda_simple_params_loop_03fd
 16599                                  .L_lambda_simple_params_end_03fd:
 16600 00009EBD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16601 00009EC0 4889C3                  	mov rbx, rax
 16602 00009EC3 58                      	pop rax
 16603 00009EC4 C60005                  	mov byte [rax], T_closure
 16604 00009EC7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16605 00009ECB 48C74009[D89E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fd
 16606 00009ED3 E9C3000000              	jmp .L_lambda_simple_end_03fd
 16607                                  .L_lambda_simple_code_03fd:	; lambda-simple body
 16608 00009ED8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16609 00009EDE 740B                    	je .L_lambda_simple_arity_check_ok_08ac
 16610 00009EE0 FF742410                	push qword [rsp + 8 * 2]
 16611 00009EE4 6A02                    	push 2
 16612 00009EE6 E915890000              	jmp L_error_incorrect_arity_simple
 16613                                  .L_lambda_simple_arity_check_ok_08ac:
 16614 00009EEB C8000000                	enter 0, 0
 16615 00009EEF 488B4528                mov rax, qword [rbp + 40]
 16616 00009EF3 50                      	push rax
 16617 00009EF4 488B4520                mov rax, qword [rbp + 32]
 16618 00009EF8 50                      	push rax
 16619 00009EF9 6A02                    	push 2
 16620 00009EFB 488B4510                mov rax, qword [rbp + 16]
 16621 00009EFF 488B00                  mov rax, qword [rax + 0]
 16622 00009F02 488B00                  mov rax, qword [rax + 0]
 16623 00009F05 803805                  	cmp byte [rax], T_closure 
 16624 00009F08 0F85F4980000                    jne L_code_ptr_error
 16625                                  
 16626 00009F0E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16627                                  
 16628 00009F12 53                              push rbx
 16629                                  
 16630 00009F13 FF5009                          call SOB_CLOSURE_CODE(rax)
 16631                                  
 16632 00009F16 50                              	push rax
 16633 00009F17 6A01                    	push 1
 16634 00009F19 488B0425[B0020000]      	mov rax, qword [free_var_86]
 16635                                  .L_lambda_simple_arity_check_ok_08ad:
 16636 00009F21 803805                  	cmp byte [rax], T_closure
 16637                                  
 16638 00009F24 0F85D8980000                    jne L_code_ptr_error                      ; rax <- proc
 16639                                  
 16640                                  
 16641 00009F2A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16642                                  
 16643 00009F2E 53                              push rbx                                  ; env pushed
 16644                                  
 16645 00009F2F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16646                                  
 16647                                          ; sagydebug
 16648                                  
 16649 00009F32 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16650                                  
 16651                                          
 16652                                          
 16653 00009F35 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16654                                  
 16655 00009F39 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16656                                  
 16657                                  
 16658 00009F3E 4D89CA                          mov r10, r9
 16659 00009F41 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 16660                                          
 16661 00009F45 4D89D7                          mov r15, r10
 16662 00009F48 4983C7FF                        add r15, -1
 16663                                                                                         
 16664 00009F4C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16665 00009F4F 4983C404                        add r12, 4
 16666 00009F53 4983C4FF                        add r12, -1
 16667                                  
 16668 00009F57 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16669                                  .L_tc_recycle_frame_loop_04b0:
 16670 00009F5D 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 16671                                  
 16672 00009F61 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16673                                  
 16674                                  
 16675                                  
 16676 00009F66 41BE00000000                    mov r14, 0                                ; clean box
 16677                                  
 16678                                  
 16679 00009F6C 4983C7FF                        add r15, -1           
 16680 00009F70 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16681                                  
 16682 00009F74 4983C4FF                        add r12, -1 
 16683                                  
 16684 00009F78 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16685 00009F7C 75DF                    	jne .L_tc_recycle_frame_loop_04b0
 16686                                  .L_tc_recycle_frame_done_04b0:
 16687                                  ;this pop rbp in sot to the right place
 16688 00009F7E 4D89C7                  mov r15, r8
 16689                                  
 16690 00009F81 4983C704                        add r15, 4
 16691                                  
 16692 00009F85 49C1E703                        shl r15, 3
 16693                                  
 16694 00009F89 4C01FC                          add rsp, r15
 16695 00009F8C 5D                      	pop rbp                                  ; restore the old rbp
 16696                                  
 16697 00009F8D 488B4D00                        mov rcx, qword [rbp]
 16698 00009F91 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16699                                            ; rbx <- code(proc)
 16700                                  
 16701 00009F95 FFE3                            jmp rbx
 16702 00009F97 C9                      	leave
 16703 00009F98 C22000                  	ret 8 * (2 + 2)
 16704                                  .L_lambda_simple_end_03fd:	; new closure is in rax
 16705 00009F9B 50                      	push rax
 16706 00009F9C 6A01                    	push 1
 16707 00009F9E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16708 00009FA3 E89F880000              	call malloc
 16709 00009FA8 50                      	push rax
 16710 00009FA9 BF08000000              	mov rdi, 8 * 1	; new rib
 16711 00009FAE E894880000              	call malloc
 16712 00009FB3 50                      	push rax
 16713 00009FB4 BF38000000              	mov rdi, 8 * 7	; extended env
 16714 00009FB9 E889880000              	call malloc
 16715 00009FBE 488B7D10                	mov rdi, ENV
 16716 00009FC2 BE00000000              	mov rsi, 0
 16717 00009FC7 BA01000000              	mov rdx, 1
 16718                                  .L_lambda_simple_env_loop_03fe:	; ext_env[i + 1] <-- env[i]
 16719 00009FCC 4883FE06                	cmp rsi, 6
 16720 00009FD0 7410                    	je .L_lambda_simple_env_end_03fe
 16721 00009FD2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16722 00009FD6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16723 00009FDA 48FFC6                  	inc rsi
 16724 00009FDD 48FFC2                  	inc rdx
 16725 00009FE0 EBEA                    	jmp .L_lambda_simple_env_loop_03fe
 16726                                  .L_lambda_simple_env_end_03fe:
 16727 00009FE2 5B                      	pop rbx
 16728 00009FE3 BE00000000              	mov rsi, 0
 16729                                  .L_lambda_simple_params_loop_03fe:	; copy params
 16730 00009FE8 4883FE01                	cmp rsi, 1
 16731 00009FEC 740E                    	je .L_lambda_simple_params_end_03fe
 16732 00009FEE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16733 00009FF3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16734 00009FF7 48FFC6                  	inc rsi
 16735 00009FFA EBEC                    	jmp .L_lambda_simple_params_loop_03fe
 16736                                  .L_lambda_simple_params_end_03fe:
 16737 00009FFC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16738 00009FFF 4889C3                  	mov rbx, rax
 16739 0000A002 58                      	pop rax
 16740 0000A003 C60005                  	mov byte [rax], T_closure
 16741 0000A006 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16742 0000A00A 48C74009[17A00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03fe
 16743 0000A012 E9F4070000              	jmp .L_lambda_simple_end_03fe
 16744                                  .L_lambda_simple_code_03fe:	; lambda-simple body
 16745 0000A017 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16746 0000A01D 740B                    	je .L_lambda_simple_arity_check_ok_08ae
 16747 0000A01F FF742410                	push qword [rsp + 8 * 2]
 16748 0000A023 6A01                    	push 1
 16749 0000A025 E9D6870000              	jmp L_error_incorrect_arity_simple
 16750                                  .L_lambda_simple_arity_check_ok_08ae:
 16751 0000A02A C8000000                	enter 0, 0
 16752 0000A02E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16753 0000A033 E80F880000              	call malloc
 16754 0000A038 50                      	push rax
 16755 0000A039 BF08000000              	mov rdi, 8 * 1	; new rib
 16756 0000A03E E804880000              	call malloc
 16757 0000A043 50                      	push rax
 16758 0000A044 BF40000000              	mov rdi, 8 * 8	; extended env
 16759 0000A049 E8F9870000              	call malloc
 16760 0000A04E 488B7D10                	mov rdi, ENV
 16761 0000A052 BE00000000              	mov rsi, 0
 16762 0000A057 BA01000000              	mov rdx, 1
 16763                                  .L_lambda_simple_env_loop_03ff:	; ext_env[i + 1] <-- env[i]
 16764 0000A05C 4883FE07                	cmp rsi, 7
 16765 0000A060 7410                    	je .L_lambda_simple_env_end_03ff
 16766 0000A062 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16767 0000A066 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16768 0000A06A 48FFC6                  	inc rsi
 16769 0000A06D 48FFC2                  	inc rdx
 16770 0000A070 EBEA                    	jmp .L_lambda_simple_env_loop_03ff
 16771                                  .L_lambda_simple_env_end_03ff:
 16772 0000A072 5B                      	pop rbx
 16773 0000A073 BE00000000              	mov rsi, 0
 16774                                  .L_lambda_simple_params_loop_03ff:	; copy params
 16775 0000A078 4883FE01                	cmp rsi, 1
 16776 0000A07C 740E                    	je .L_lambda_simple_params_end_03ff
 16777 0000A07E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16778 0000A083 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16779 0000A087 48FFC6                  	inc rsi
 16780 0000A08A EBEC                    	jmp .L_lambda_simple_params_loop_03ff
 16781                                  .L_lambda_simple_params_end_03ff:
 16782 0000A08C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16783 0000A08F 4889C3                  	mov rbx, rax
 16784 0000A092 58                      	pop rax
 16785 0000A093 C60005                  	mov byte [rax], T_closure
 16786 0000A096 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16787 0000A09A 48C74009[A7A00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_03ff
 16788 0000A0A2 E94B050000              	jmp .L_lambda_simple_end_03ff
 16789                                  .L_lambda_simple_code_03ff:	; lambda-simple body
 16790 0000A0A7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16791 0000A0AD 740B                    	je .L_lambda_simple_arity_check_ok_08af
 16792 0000A0AF FF742410                	push qword [rsp + 8 * 2]
 16793 0000A0B3 6A01                    	push 1
 16794 0000A0B5 E946870000              	jmp L_error_incorrect_arity_simple
 16795                                  .L_lambda_simple_arity_check_ok_08af:
 16796 0000A0BA C8000000                	enter 0, 0
 16797 0000A0BE 48B8-                   	mov rax, qword (L_constants + 22)
 16797 0000A0C0 [1600000000000000] 
 16798 0000A0C8 50                      	push rax
 16799 0000A0C9 6A01                    	push 1
 16800 0000A0CB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16801 0000A0D0 E872870000              	call malloc
 16802 0000A0D5 50                      	push rax
 16803 0000A0D6 BF08000000              	mov rdi, 8 * 1	; new rib
 16804 0000A0DB E867870000              	call malloc
 16805 0000A0E0 50                      	push rax
 16806 0000A0E1 BF48000000              	mov rdi, 8 * 9	; extended env
 16807 0000A0E6 E85C870000              	call malloc
 16808 0000A0EB 488B7D10                	mov rdi, ENV
 16809 0000A0EF BE00000000              	mov rsi, 0
 16810 0000A0F4 BA01000000              	mov rdx, 1
 16811                                  .L_lambda_simple_env_loop_0400:	; ext_env[i + 1] <-- env[i]
 16812 0000A0F9 4883FE08                	cmp rsi, 8
 16813 0000A0FD 7410                    	je .L_lambda_simple_env_end_0400
 16814 0000A0FF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16815 0000A103 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16816 0000A107 48FFC6                  	inc rsi
 16817 0000A10A 48FFC2                  	inc rdx
 16818 0000A10D EBEA                    	jmp .L_lambda_simple_env_loop_0400
 16819                                  .L_lambda_simple_env_end_0400:
 16820 0000A10F 5B                      	pop rbx
 16821 0000A110 BE00000000              	mov rsi, 0
 16822                                  .L_lambda_simple_params_loop_0400:	; copy params
 16823 0000A115 4883FE01                	cmp rsi, 1
 16824 0000A119 740E                    	je .L_lambda_simple_params_end_0400
 16825 0000A11B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16826 0000A120 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16827 0000A124 48FFC6                  	inc rsi
 16828 0000A127 EBEC                    	jmp .L_lambda_simple_params_loop_0400
 16829                                  .L_lambda_simple_params_end_0400:
 16830 0000A129 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16831 0000A12C 4889C3                  	mov rbx, rax
 16832 0000A12F 58                      	pop rax
 16833 0000A130 C60005                  	mov byte [rax], T_closure
 16834 0000A133 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16835 0000A137 48C74009[44A10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0400
 16836 0000A13F E934040000              	jmp .L_lambda_simple_end_0400
 16837                                  .L_lambda_simple_code_0400:	; lambda-simple body
 16838 0000A144 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16839 0000A14A 740B                    	je .L_lambda_simple_arity_check_ok_08b0
 16840 0000A14C FF742410                	push qword [rsp + 8 * 2]
 16841 0000A150 6A01                    	push 1
 16842 0000A152 E9A9860000              	jmp L_error_incorrect_arity_simple
 16843                                  .L_lambda_simple_arity_check_ok_08b0:
 16844 0000A157 C8000000                	enter 0, 0
 16845 0000A15B 488B4520                mov rax, qword [rbp + 32]
 16846 0000A15F BF08000000              mov rdi, 8
 16847 0000A164 4889C3                  mov rbx, rax
 16848 0000A167 E8DB860000              call malloc
 16849 0000A16C 488918                  mov qword [rax], rbx
 16850 0000A16F 48894520                mov qword [rbp + 32], rax
 16851 0000A173 48B8-                   mov rax, sob_void
 16851 0000A175 [0000000000000000] 
 16852 0000A17D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16853 0000A182 E8C0860000              	call malloc
 16854 0000A187 50                      	push rax
 16855 0000A188 BF08000000              	mov rdi, 8 * 1	; new rib
 16856 0000A18D E8B5860000              	call malloc
 16857 0000A192 50                      	push rax
 16858 0000A193 BF50000000              	mov rdi, 8 * 10	; extended env
 16859 0000A198 E8AA860000              	call malloc
 16860 0000A19D 488B7D10                	mov rdi, ENV
 16861 0000A1A1 BE00000000              	mov rsi, 0
 16862 0000A1A6 BA01000000              	mov rdx, 1
 16863                                  .L_lambda_simple_env_loop_0401:	; ext_env[i + 1] <-- env[i]
 16864 0000A1AB 4883FE09                	cmp rsi, 9
 16865 0000A1AF 7410                    	je .L_lambda_simple_env_end_0401
 16866 0000A1B1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16867 0000A1B5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16868 0000A1B9 48FFC6                  	inc rsi
 16869 0000A1BC 48FFC2                  	inc rdx
 16870 0000A1BF EBEA                    	jmp .L_lambda_simple_env_loop_0401
 16871                                  .L_lambda_simple_env_end_0401:
 16872 0000A1C1 5B                      	pop rbx
 16873 0000A1C2 BE00000000              	mov rsi, 0
 16874                                  .L_lambda_simple_params_loop_0401:	; copy params
 16875 0000A1C7 4883FE01                	cmp rsi, 1
 16876 0000A1CB 740E                    	je .L_lambda_simple_params_end_0401
 16877 0000A1CD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16878 0000A1D2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16879 0000A1D6 48FFC6                  	inc rsi
 16880 0000A1D9 EBEC                    	jmp .L_lambda_simple_params_loop_0401
 16881                                  .L_lambda_simple_params_end_0401:
 16882 0000A1DB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16883 0000A1DE 4889C3                  	mov rbx, rax
 16884 0000A1E1 58                      	pop rax
 16885 0000A1E2 C60005                  	mov byte [rax], T_closure
 16886 0000A1E5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16887 0000A1E9 48C74009[F6A10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0401
 16888 0000A1F1 E96A010000              	jmp .L_lambda_simple_end_0401
 16889                                  .L_lambda_simple_code_0401:	; lambda-simple body
 16890 0000A1F6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16891 0000A1FC 740B                    	je .L_lambda_simple_arity_check_ok_08b1
 16892 0000A1FE FF742410                	push qword [rsp + 8 * 2]
 16893 0000A202 6A02                    	push 2
 16894 0000A204 E9F7850000              	jmp L_error_incorrect_arity_simple
 16895                                  .L_lambda_simple_arity_check_ok_08b1:
 16896 0000A209 C8000000                	enter 0, 0
 16897 0000A20D 488B4528                mov rax, qword [rbp + 40]
 16898 0000A211 50                      	push rax
 16899 0000A212 6A01                    	push 1
 16900 0000A214 488B0425[00000000]      	mov rax, qword [free_var_0]
 16901 0000A21C 803805                  	cmp byte [rax], T_closure 
 16902 0000A21F 0F85DD950000                    jne L_code_ptr_error
 16903                                  
 16904 0000A225 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16905                                  
 16906 0000A229 53                              push rbx
 16907                                  
 16908 0000A22A FF5009                          call SOB_CLOSURE_CODE(rax)
 16909                                  
 16910 0000A22D 483D[02000000]                  	cmp rax, sob_boolean_false
 16911 0000A233 0F8523010000            	jne .L_or_end_004c
 16912 0000A239 488B4528                mov rax, qword [rbp + 40]
 16913 0000A23D 50                      	push rax
 16914 0000A23E 6A01                    	push 1
 16915 0000A240 488B0425[80000000]      	mov rax, qword [free_var_16]
 16916 0000A248 803805                  	cmp byte [rax], T_closure 
 16917 0000A24B 0F85B1950000                    jne L_code_ptr_error
 16918                                  
 16919 0000A251 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16920                                  
 16921 0000A255 53                              push rbx
 16922                                  
 16923 0000A256 FF5009                          call SOB_CLOSURE_CODE(rax)
 16924                                  
 16925 0000A259 50                              	push rax
 16926 0000A25A 488B4520                mov rax, qword [rbp + 32]
 16927 0000A25E 50                      	push rax
 16928 0000A25F 6A02                    	push 2
 16929 0000A261 488B4510                mov rax, qword [rbp + 16]
 16930 0000A265 488B4008                mov rax, qword [rax + 8]
 16931 0000A269 488B00                  mov rax, qword [rax + 0]
 16932 0000A26C 803805                  	cmp byte [rax], T_closure 
 16933 0000A26F 0F858D950000                    jne L_code_ptr_error
 16934                                  
 16935 0000A275 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16936                                  
 16937 0000A279 53                              push rbx
 16938                                  
 16939 0000A27A FF5009                          call SOB_CLOSURE_CODE(rax)
 16940                                  
 16941 0000A27D 483D[02000000]                  	cmp rax, sob_boolean_false
 16942 0000A283 0F84C9000000            	je .L_if_else_0267
 16943 0000A289 488B4528                mov rax, qword [rbp + 40]
 16944 0000A28D 50                      	push rax
 16945 0000A28E 6A01                    	push 1
 16946 0000A290 488B0425[88000000]      	mov rax, qword [free_var_17]
 16947 0000A298 803805                  	cmp byte [rax], T_closure 
 16948 0000A29B 0F8561950000                    jne L_code_ptr_error
 16949                                  
 16950 0000A2A1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16951                                  
 16952 0000A2A5 53                              push rbx
 16953                                  
 16954 0000A2A6 FF5009                          call SOB_CLOSURE_CODE(rax)
 16955                                  
 16956 0000A2A9 50                              	push rax
 16957 0000A2AA 488B4528                mov rax, qword [rbp + 40]
 16958 0000A2AE 50                      	push rax
 16959 0000A2AF 6A01                    	push 1
 16960 0000A2B1 488B0425[80000000]      	mov rax, qword [free_var_16]
 16961 0000A2B9 803805                  	cmp byte [rax], T_closure 
 16962 0000A2BC 0F8540950000                    jne L_code_ptr_error
 16963                                  
 16964 0000A2C2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16965                                  
 16966 0000A2C6 53                              push rbx
 16967                                  
 16968 0000A2C7 FF5009                          call SOB_CLOSURE_CODE(rax)
 16969                                  
 16970 0000A2CA 50                              	push rax
 16971 0000A2CB 6A02                    	push 2
 16972 0000A2CD 488B4510                mov rax, qword [rbp + 16]
 16973 0000A2D1 488B00                  mov rax, qword [rax + 0]
 16974 0000A2D4 488B00                  mov rax, qword [rax + 0]
 16975 0000A2D7 488B00                  	mov rax, qword [rax]
 16976                                  .L_lambda_simple_arity_check_ok_08b2:
 16977 0000A2DA 803805                  	cmp byte [rax], T_closure
 16978                                  
 16979 0000A2DD 0F851F950000                    jne L_code_ptr_error                      ; rax <- proc
 16980                                  
 16981                                  
 16982 0000A2E3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16983                                  
 16984 0000A2E7 53                              push rbx                                  ; env pushed
 16985                                  
 16986 0000A2E8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16987                                  
 16988                                          ; sagydebug
 16989                                  
 16990 0000A2EB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16991                                  
 16992                                          
 16993                                          
 16994 0000A2EE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16995                                  
 16996 0000A2F2 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16997                                  
 16998                                  
 16999 0000A2F7 4D89CA                          mov r10, r9
 17000 0000A2FA 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17001                                          
 17002 0000A2FE 4D89D7                          mov r15, r10
 17003 0000A301 4983C7FF                        add r15, -1
 17004                                                                                         
 17005 0000A305 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17006 0000A308 4983C404                        add r12, 4
 17007 0000A30C 4983C4FF                        add r12, -1
 17008                                  
 17009 0000A310 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17010                                  .L_tc_recycle_frame_loop_04b1:
 17011 0000A316 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17012                                  
 17013 0000A31A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17014                                  
 17015                                  
 17016                                  
 17017 0000A31F 41BE00000000                    mov r14, 0                                ; clean box
 17018                                  
 17019                                  
 17020 0000A325 4983C7FF                        add r15, -1           
 17021 0000A329 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17022                                  
 17023 0000A32D 4983C4FF                        add r12, -1 
 17024                                  
 17025 0000A331 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17026 0000A335 75DF                    	jne .L_tc_recycle_frame_loop_04b1
 17027                                  .L_tc_recycle_frame_done_04b1:
 17028                                  ;this pop rbp in sot to the right place
 17029 0000A337 4D89C7                  mov r15, r8
 17030                                  
 17031 0000A33A 4983C704                        add r15, 4
 17032                                  
 17033 0000A33E 49C1E703                        shl r15, 3
 17034                                  
 17035 0000A342 4C01FC                          add rsp, r15
 17036 0000A345 5D                      	pop rbp                                  ; restore the old rbp
 17037                                  
 17038 0000A346 488B4D00                        mov rcx, qword [rbp]
 17039 0000A34A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17040                                            ; rbx <- code(proc)
 17041                                  
 17042 0000A34E FFE3                            jmp rbx
 17043 0000A350 EB0A                    	jmp .L_if_end_0267
 17044                                  	.L_if_else_0267:
 17045 0000A352 48B8-                   		mov rax, qword (L_constants + 2)
 17045 0000A354 [0200000000000000] 
 17046                                  	.L_if_end_0267:
 17047                                  .L_or_end_004c:
 17048 0000A35C C9                      	leave
 17049 0000A35D C22000                  	ret 8 * (2 + 2)
 17050                                  .L_lambda_simple_end_0401:	; new closure is in rax
 17051 0000A360 50                      push rax
 17052 0000A361 488B4520                mov rax, qword [rbp + 32]
 17053 0000A365 8F00                    pop qword [rax]
 17054 0000A367 48B8-                   mov rax, sob_void
 17054 0000A369 [0000000000000000] 
 17055                                  
 17056 0000A371 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17057 0000A376 E8CC840000              	call malloc
 17058 0000A37B 50                      	push rax
 17059 0000A37C BF08000000              	mov rdi, 8 * 1	; new rib
 17060 0000A381 E8C1840000              	call malloc
 17061 0000A386 50                      	push rax
 17062 0000A387 BF50000000              	mov rdi, 8 * 10	; extended env
 17063 0000A38C E8B6840000              	call malloc
 17064 0000A391 488B7D10                	mov rdi, ENV
 17065 0000A395 BE00000000              	mov rsi, 0
 17066 0000A39A BA01000000              	mov rdx, 1
 17067                                  .L_lambda_opt_env_loop_0098:	; ext_env[i + 1] <-- env[i]
 17068 0000A39F 4883FE09                	cmp rsi, 9
 17069 0000A3A3 7410                    	je .L_lambda_opt_env_end_0098
 17070 0000A3A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17071 0000A3A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17072 0000A3AD 48FFC6                  	inc rsi
 17073 0000A3B0 48FFC2                  	inc rdx
 17074 0000A3B3 EBEA                    	jmp .L_lambda_opt_env_loop_0098
 17075                                  .L_lambda_opt_env_end_0098:
 17076 0000A3B5 5B                      	pop rbx
 17077 0000A3B6 BE00000000              	mov rsi, 0
 17078                                  .L_lambda_opt_params_loop_01c6:	; copy params
 17079 0000A3BB 4883FE01                	cmp rsi, 1
 17080 0000A3BF 740E                    	je .L_lambda_opt_params_end_01c6
 17081 0000A3C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17082 0000A3C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17083 0000A3CA 48FFC6                  	inc rsi
 17084 0000A3CD EBEC                    	jmp .L_lambda_opt_params_loop_01c6
 17085                                  .L_lambda_opt_params_end_01c6:
 17086 0000A3CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17087 0000A3D2 4889C3                  	mov rbx, rax
 17088 0000A3D5 58                      	pop rax
 17089 0000A3D6 C60005                  	mov byte [rax], T_closure
 17090 0000A3D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17091 0000A3DD 48C74009[EAA30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0098
 17092 0000A3E5 E98A010000              	jmp .L_lambda_opt_end_0098
 17093                                  .L_lambda_opt_code_0098:
 17094 0000A3EA 4C8B542410              mov r10, qword [rsp+8*2]
 17095 0000A3EF 4983FA01                cmp r10, 1
 17096 0000A3F3 740B                    je .L_lambda_opt_arity_check_exact_0098
 17097 0000A3F5 4983FA01                cmp r10, 1
 17098 0000A3F9 7F44                    jg .L_lambda_opt_arity_check_more_0098
 17099 0000A3FB E914840000              jmp L_error_incorrect_arity_opt
 17100                                  .L_lambda_opt_arity_check_exact_0098:
 17101 0000A400 4883EC08                sub rsp, 8
 17102 0000A404 BA04000000              mov rdx, 3+1
 17103 0000A409 4889E3                  mov qword rbx, rsp
 17104                                  .L_lambda_opt_params_loop_01c7:
 17105 0000A40C 488B4B08                mov qword rcx, [rbx+8]
 17106 0000A410 48890B                  mov qword [rbx], rcx
 17107 0000A413 48FFCA                  dec rdx
 17108 0000A416 4883C308                add rbx, 8
 17109 0000A41A 4883FA00                cmp rdx, 0
 17110 0000A41E 7402                    je .L_lambda_opt_params_end_01c7
 17111 0000A420 EBEA                    jmp .L_lambda_opt_params_loop_01c7
 17112                                  .L_lambda_opt_params_end_01c7:
 17113 0000A422 49FFC2                  inc r10
 17114 0000A425 4C89542410              mov qword [rsp+8*2], r10
 17115 0000A42A 4983C202                add r10, 2
 17116 0000A42E 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 17117 0000A436 4C8B4D00                mov r9, [rbp]
 17118 0000A43A E996000000              jmp .L_lambda_opt_stack_adjusted_0098
 17119                                  .L_lambda_opt_arity_check_more_0098:
 17120 0000A43F 4C8B6C2410              mov r13, [rsp+2*8]
 17121 0000A444 48B8-                   mov rax, sob_nil
 17121 0000A446 [0100000000000000] 
 17122 0000A44E 4C8B542410              mov r10, [rsp+2*8]
 17123 0000A453 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 17124 0000A458 4983EA01                sub r10, 1
 17125                                  .L_lambda_opt_stack_shrink_loop_0098:
 17126 0000A45C 4983FA00                cmp r10, 0
 17127 0000A460 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0098
 17128 0000A462 4889C1                  mov rcx, rax
 17129 0000A465 498B10                  mov rdx, [r8]
 17130 0000A468 BF11000000              mov rdi, 17
 17131 0000A46D E8D5830000              call malloc
 17132 0000A472 C60021                  mov byte [rax], T_pair
 17133 0000A475 48894809                mov SOB_PAIR_CDR(rax), rcx
 17134 0000A479 48895001                mov SOB_PAIR_CAR(rax), rdx
 17135 0000A47D 4983E808                sub r8, 8
 17136 0000A481 49FFCA                  dec r10
 17137 0000A484 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0098
 17138                                  .L_lambda_opt_stack_shrink_loop_exit_0098:
 17139 0000A486 4889442420              mov [rsp+8*(2+2)], rax
 17140 0000A48B 41BA02000000            mov r10, 2
 17141 0000A491 4C89542410              mov [rsp+16], r10
 17142 0000A496 4989E4                  mov r12, rsp
 17143 0000A499 4983C420                add r12, 8*(2+2)
 17144 0000A49D 4C2B6C2410              sub r13, [rsp+16]
 17145 0000A4A2 4D89EA                  mov r10, r13
 17146 0000A4A5 49C1E203                shl r10, 3
 17147 0000A4A9 4D89D7                  mov r15, r10
 17148 0000A4AC 4D01E2                  add r10, r12
 17149 0000A4AF 4C8B4C2410              mov r9, [rsp+16]
 17150 0000A4B4 4983C103                add r9, 3
 17151                                  .L_lambda_opt_params_loop_01c8:
 17152 0000A4B8 4983F900                cmp r9, 0
 17153 0000A4BC 7414                    je .L_lambda_opt_params_end_01c8
 17154 0000A4BE 4D8B3424                mov r14, [r12]
 17155 0000A4C2 4D8932                  mov [r10], r14
 17156 0000A4C5 4983EC08                sub r12, 8
 17157 0000A4C9 4983EA08                sub r10, 8
 17158 0000A4CD 49FFC9                  dec r9
 17159 0000A4D0 EBE6                    jmp .L_lambda_opt_params_loop_01c8
 17160                                  .L_lambda_opt_params_end_01c8:
 17161 0000A4D2 4C01FC                  add rsp, r15
 17162                                  .L_lambda_opt_stack_adjusted_0098:
 17163 0000A4D5 4C8B4D00                mov r9, [rbp]
 17164 0000A4D9 C8000000                enter 0, 0
 17165 0000A4DD 488B4528                mov rax, qword [rbp + 40]
 17166 0000A4E1 50                      	push rax
 17167 0000A4E2 488B4520                mov rax, qword [rbp + 32]
 17168 0000A4E6 50                      	push rax
 17169 0000A4E7 6A02                    	push 2
 17170 0000A4E9 488B4510                mov rax, qword [rbp + 16]
 17171 0000A4ED 488B00                  mov rax, qword [rax + 0]
 17172 0000A4F0 488B00                  mov rax, qword [rax + 0]
 17173 0000A4F3 488B00                  	mov rax, qword [rax]
 17174                                  .L_lambda_simple_arity_check_ok_08b3:
 17175 0000A4F6 803805                  	cmp byte [rax], T_closure
 17176                                  
 17177 0000A4F9 0F8503930000                    jne L_code_ptr_error                      ; rax <- proc
 17178                                  
 17179                                  
 17180 0000A4FF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17181                                  
 17182 0000A503 53                              push rbx                                  ; env pushed
 17183                                  
 17184 0000A504 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17185                                  
 17186                                          ; sagydebug
 17187                                  
 17188 0000A507 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17189                                  
 17190                                          
 17191                                          
 17192 0000A50A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17193                                  
 17194 0000A50E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17195                                  
 17196                                  
 17197 0000A513 4D89CA                          mov r10, r9
 17198 0000A516 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17199                                          
 17200 0000A51A 4D89D7                          mov r15, r10
 17201 0000A51D 4983C7FF                        add r15, -1
 17202                                                                                         
 17203 0000A521 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17204 0000A524 4983C404                        add r12, 4
 17205 0000A528 4983C4FF                        add r12, -1
 17206                                  
 17207 0000A52C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17208                                  .L_tc_recycle_frame_loop_04b2:
 17209 0000A532 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17210                                  
 17211 0000A536 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17212                                  
 17213                                  
 17214                                  
 17215 0000A53B 41BE00000000                    mov r14, 0                                ; clean box
 17216                                  
 17217                                  
 17218 0000A541 4983C7FF                        add r15, -1           
 17219 0000A545 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17220                                  
 17221 0000A549 4983C4FF                        add r12, -1 
 17222                                  
 17223 0000A54D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17224 0000A551 75DF                    	jne .L_tc_recycle_frame_loop_04b2
 17225                                  .L_tc_recycle_frame_done_04b2:
 17226                                  ;this pop rbp in sot to the right place
 17227 0000A553 4D89C7                  mov r15, r8
 17228                                  
 17229 0000A556 4983C704                        add r15, 4
 17230                                  
 17231 0000A55A 49C1E703                        shl r15, 3
 17232                                  
 17233 0000A55E 4C01FC                          add rsp, r15
 17234 0000A561 5D                      	pop rbp                                  ; restore the old rbp
 17235                                  
 17236 0000A562 488B4D00                        mov rcx, qword [rbp]
 17237 0000A566 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17238                                            ; rbx <- code(proc)
 17239                                  
 17240 0000A56A FFE3                            jmp rbx
 17241 0000A56C C9                      leave
 17242 0000A56D 4C8B4D00                mov r9, [rbp]
 17243 0000A571 C22000                  ret 8 * (3 + 1)
 17244                                  .L_lambda_opt_end_0098:	; new closure is in rax
 17245 0000A574 C9                      	leave
 17246 0000A575 C21800                  	ret 8 * (2 + 1)
 17247                                  .L_lambda_simple_end_0400:	; new closure is in rax
 17248                                  .L_lambda_simple_arity_check_ok_08b4:
 17249 0000A578 803805                  	cmp byte [rax], T_closure
 17250                                  
 17251 0000A57B 0F8581920000                    jne L_code_ptr_error                      ; rax <- proc
 17252                                  
 17253                                  
 17254 0000A581 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17255                                  
 17256 0000A585 53                              push rbx                                  ; env pushed
 17257                                  
 17258 0000A586 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17259                                  
 17260                                          ; sagydebug
 17261                                  
 17262 0000A589 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17263                                  
 17264                                          
 17265                                          
 17266 0000A58C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17267                                  
 17268 0000A590 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17269                                  
 17270                                  
 17271 0000A595 4D89CA                          mov r10, r9
 17272 0000A598 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17273                                          
 17274 0000A59C 4D89D7                          mov r15, r10
 17275 0000A59F 4983C7FF                        add r15, -1
 17276                                                                                         
 17277 0000A5A3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17278 0000A5A6 4983C404                        add r12, 4
 17279 0000A5AA 4983C4FF                        add r12, -1
 17280                                  
 17281 0000A5AE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17282                                  .L_tc_recycle_frame_loop_04b3:
 17283 0000A5B4 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17284                                  
 17285 0000A5B8 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17286                                  
 17287                                  
 17288                                  
 17289 0000A5BD 41BE00000000                    mov r14, 0                                ; clean box
 17290                                  
 17291                                  
 17292 0000A5C3 4983C7FF                        add r15, -1           
 17293 0000A5C7 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17294                                  
 17295 0000A5CB 4983C4FF                        add r12, -1 
 17296                                  
 17297 0000A5CF 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17298 0000A5D3 75DF                    	jne .L_tc_recycle_frame_loop_04b3
 17299                                  .L_tc_recycle_frame_done_04b3:
 17300                                  ;this pop rbp in sot to the right place
 17301 0000A5D5 4D89C7                  mov r15, r8
 17302                                  
 17303 0000A5D8 4983C704                        add r15, 4
 17304                                  
 17305 0000A5DC 49C1E703                        shl r15, 3
 17306                                  
 17307 0000A5E0 4C01FC                          add rsp, r15
 17308 0000A5E3 5D                      	pop rbp                                  ; restore the old rbp
 17309                                  
 17310 0000A5E4 488B4D00                        mov rcx, qword [rbp]
 17311 0000A5E8 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17312                                            ; rbx <- code(proc)
 17313                                  
 17314 0000A5EC FFE3                            jmp rbx
 17315 0000A5EE C9                      	leave
 17316 0000A5EF C21800                  	ret 8 * (2 + 1)
 17317                                  .L_lambda_simple_end_03ff:	; new closure is in rax
 17318 0000A5F2 50                      	push rax
 17319 0000A5F3 6A01                    	push 1
 17320 0000A5F5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17321 0000A5FA E848820000              	call malloc
 17322 0000A5FF 50                      	push rax
 17323 0000A600 BF08000000              	mov rdi, 8 * 1	; new rib
 17324 0000A605 E83D820000              	call malloc
 17325 0000A60A 50                      	push rax
 17326 0000A60B BF40000000              	mov rdi, 8 * 8	; extended env
 17327 0000A610 E832820000              	call malloc
 17328 0000A615 488B7D10                	mov rdi, ENV
 17329 0000A619 BE00000000              	mov rsi, 0
 17330 0000A61E BA01000000              	mov rdx, 1
 17331                                  .L_lambda_simple_env_loop_0402:	; ext_env[i + 1] <-- env[i]
 17332 0000A623 4883FE07                	cmp rsi, 7
 17333 0000A627 7410                    	je .L_lambda_simple_env_end_0402
 17334 0000A629 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17335 0000A62D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17336 0000A631 48FFC6                  	inc rsi
 17337 0000A634 48FFC2                  	inc rdx
 17338 0000A637 EBEA                    	jmp .L_lambda_simple_env_loop_0402
 17339                                  .L_lambda_simple_env_end_0402:
 17340 0000A639 5B                      	pop rbx
 17341 0000A63A BE00000000              	mov rsi, 0
 17342                                  .L_lambda_simple_params_loop_0402:	; copy params
 17343 0000A63F 4883FE01                	cmp rsi, 1
 17344 0000A643 740E                    	je .L_lambda_simple_params_end_0402
 17345 0000A645 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17346 0000A64A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17347 0000A64E 48FFC6                  	inc rsi
 17348 0000A651 EBEC                    	jmp .L_lambda_simple_params_loop_0402
 17349                                  .L_lambda_simple_params_end_0402:
 17350 0000A653 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17351 0000A656 4889C3                  	mov rbx, rax
 17352 0000A659 58                      	pop rax
 17353 0000A65A C60005                  	mov byte [rax], T_closure
 17354 0000A65D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17355 0000A661 48C74009[6EA60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0402
 17356 0000A669 E923010000              	jmp .L_lambda_simple_end_0402
 17357                                  .L_lambda_simple_code_0402:	; lambda-simple body
 17358 0000A66E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17359 0000A674 740B                    	je .L_lambda_simple_arity_check_ok_08b5
 17360 0000A676 FF742410                	push qword [rsp + 8 * 2]
 17361 0000A67A 6A01                    	push 1
 17362 0000A67C E97F810000              	jmp L_error_incorrect_arity_simple
 17363                                  .L_lambda_simple_arity_check_ok_08b5:
 17364 0000A681 C8000000                	enter 0, 0
 17365 0000A685 488B4510                mov rax, qword [rbp + 16]
 17366 0000A689 488B4020                mov rax, qword [rax + 32]
 17367 0000A68D 488B00                  mov rax, qword [rax + 0]
 17368 0000A690 50                      	push rax
 17369 0000A691 6A01                    	push 1
 17370 0000A693 488B4520                mov rax, qword [rbp + 32]
 17371 0000A697 803805                  	cmp byte [rax], T_closure 
 17372 0000A69A 0F8562910000                    jne L_code_ptr_error
 17373                                  
 17374 0000A6A0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17375                                  
 17376 0000A6A4 53                              push rbx
 17377                                  
 17378 0000A6A5 FF5009                          call SOB_CLOSURE_CODE(rax)
 17379                                  
 17380 0000A6A8 48890425[30030000]              	mov qword [free_var_102], rax
 17381 0000A6B0 48B8-                   	mov rax, sob_void
 17381 0000A6B2 [0000000000000000] 
 17382                                  
 17383 0000A6BA 488B4510                mov rax, qword [rbp + 16]
 17384 0000A6BE 488B00                  mov rax, qword [rax + 0]
 17385 0000A6C1 488B00                  mov rax, qword [rax + 0]
 17386 0000A6C4 50                      	push rax
 17387 0000A6C5 6A01                    	push 1
 17388 0000A6C7 488B4520                mov rax, qword [rbp + 32]
 17389 0000A6CB 803805                  	cmp byte [rax], T_closure 
 17390 0000A6CE 0F852E910000                    jne L_code_ptr_error
 17391                                  
 17392 0000A6D4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17393                                  
 17394 0000A6D8 53                              push rbx
 17395                                  
 17396 0000A6D9 FF5009                          call SOB_CLOSURE_CODE(rax)
 17397                                  
 17398 0000A6DC 48890425[38030000]              	mov qword [free_var_103], rax
 17399 0000A6E4 48B8-                   	mov rax, sob_void
 17399 0000A6E6 [0000000000000000] 
 17400                                  
 17401 0000A6EE 488B4510                mov rax, qword [rbp + 16]
 17402 0000A6F2 488B4008                mov rax, qword [rax + 8]
 17403 0000A6F6 488B00                  mov rax, qword [rax + 0]
 17404 0000A6F9 50                      	push rax
 17405 0000A6FA 6A01                    	push 1
 17406 0000A6FC 488B4520                mov rax, qword [rbp + 32]
 17407 0000A700 803805                  	cmp byte [rax], T_closure 
 17408 0000A703 0F85F9900000                    jne L_code_ptr_error
 17409                                  
 17410 0000A709 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17411                                  
 17412 0000A70D 53                              push rbx
 17413                                  
 17414 0000A70E FF5009                          call SOB_CLOSURE_CODE(rax)
 17415                                  
 17416 0000A711 48890425[40030000]              	mov qword [free_var_104], rax
 17417 0000A719 48B8-                   	mov rax, sob_void
 17417 0000A71B [0000000000000000] 
 17418                                  
 17419 0000A723 488B4510                mov rax, qword [rbp + 16]
 17420 0000A727 488B4010                mov rax, qword [rax + 16]
 17421 0000A72B 488B00                  mov rax, qword [rax + 0]
 17422 0000A72E 50                      	push rax
 17423 0000A72F 6A01                    	push 1
 17424 0000A731 488B4520                mov rax, qword [rbp + 32]
 17425 0000A735 803805                  	cmp byte [rax], T_closure 
 17426 0000A738 0F85C4900000                    jne L_code_ptr_error
 17427                                  
 17428 0000A73E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17429                                  
 17430 0000A742 53                              push rbx
 17431                                  
 17432 0000A743 FF5009                          call SOB_CLOSURE_CODE(rax)
 17433                                  
 17434 0000A746 48890425[48030000]              	mov qword [free_var_105], rax
 17435 0000A74E 48B8-                   	mov rax, sob_void
 17435 0000A750 [0000000000000000] 
 17436                                  
 17437 0000A758 488B4510                mov rax, qword [rbp + 16]
 17438 0000A75C 488B4018                mov rax, qword [rax + 24]
 17439 0000A760 488B00                  mov rax, qword [rax + 0]
 17440 0000A763 50                      	push rax
 17441 0000A764 6A01                    	push 1
 17442 0000A766 488B4520                mov rax, qword [rbp + 32]
 17443 0000A76A 803805                  	cmp byte [rax], T_closure 
 17444 0000A76D 0F858F900000                    jne L_code_ptr_error
 17445                                  
 17446 0000A773 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17447                                  
 17448 0000A777 53                              push rbx
 17449                                  
 17450 0000A778 FF5009                          call SOB_CLOSURE_CODE(rax)
 17451                                  
 17452 0000A77B 48890425[50030000]              	mov qword [free_var_106], rax
 17453 0000A783 48B8-                   	mov rax, sob_void
 17453 0000A785 [0000000000000000] 
 17454 0000A78D C9                      	leave
 17455 0000A78E C21800                  	ret 8 * (2 + 1)
 17456                                  .L_lambda_simple_end_0402:	; new closure is in rax
 17457                                  .L_lambda_simple_arity_check_ok_08b6:
 17458 0000A791 803805                  	cmp byte [rax], T_closure
 17459                                  
 17460 0000A794 0F8568900000                    jne L_code_ptr_error                      ; rax <- proc
 17461                                  
 17462                                  
 17463 0000A79A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17464                                  
 17465 0000A79E 53                              push rbx                                  ; env pushed
 17466                                  
 17467 0000A79F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17468                                  
 17469                                          ; sagydebug
 17470                                  
 17471 0000A7A2 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17472                                  
 17473                                          
 17474                                          
 17475 0000A7A5 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17476                                  
 17477 0000A7A9 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17478                                  
 17479                                  
 17480 0000A7AE 4D89CA                          mov r10, r9
 17481 0000A7B1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17482                                          
 17483 0000A7B5 4D89D7                          mov r15, r10
 17484 0000A7B8 4983C7FF                        add r15, -1
 17485                                                                                         
 17486 0000A7BC 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17487 0000A7BF 4983C404                        add r12, 4
 17488 0000A7C3 4983C4FF                        add r12, -1
 17489                                  
 17490 0000A7C7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17491                                  .L_tc_recycle_frame_loop_04b4:
 17492 0000A7CD 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17493                                  
 17494 0000A7D1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17495                                  
 17496                                  
 17497                                  
 17498 0000A7D6 41BE00000000                    mov r14, 0                                ; clean box
 17499                                  
 17500                                  
 17501 0000A7DC 4983C7FF                        add r15, -1           
 17502 0000A7E0 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17503                                  
 17504 0000A7E4 4983C4FF                        add r12, -1 
 17505                                  
 17506 0000A7E8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17507 0000A7EC 75DF                    	jne .L_tc_recycle_frame_loop_04b4
 17508                                  .L_tc_recycle_frame_done_04b4:
 17509                                  ;this pop rbp in sot to the right place
 17510 0000A7EE 4D89C7                  mov r15, r8
 17511                                  
 17512 0000A7F1 4983C704                        add r15, 4
 17513                                  
 17514 0000A7F5 49C1E703                        shl r15, 3
 17515                                  
 17516 0000A7F9 4C01FC                          add rsp, r15
 17517 0000A7FC 5D                      	pop rbp                                  ; restore the old rbp
 17518                                  
 17519 0000A7FD 488B4D00                        mov rcx, qword [rbp]
 17520 0000A801 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17521                                            ; rbx <- code(proc)
 17522                                  
 17523 0000A805 FFE3                            jmp rbx
 17524 0000A807 C9                      	leave
 17525 0000A808 C21800                  	ret 8 * (2 + 1)
 17526                                  .L_lambda_simple_end_03fe:	; new closure is in rax
 17527                                  .L_lambda_simple_arity_check_ok_08b7:
 17528 0000A80B 803805                  	cmp byte [rax], T_closure
 17529                                  
 17530 0000A80E 0F85EE8F0000                    jne L_code_ptr_error                      ; rax <- proc
 17531                                  
 17532                                  
 17533 0000A814 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17534                                  
 17535 0000A818 53                              push rbx                                  ; env pushed
 17536                                  
 17537 0000A819 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17538                                  
 17539                                          ; sagydebug
 17540                                  
 17541 0000A81C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17542                                  
 17543                                          
 17544                                          
 17545 0000A81F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17546                                  
 17547 0000A823 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17548                                  
 17549                                  
 17550 0000A828 4D89CA                          mov r10, r9
 17551 0000A82B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17552                                          
 17553 0000A82F 4D89D7                          mov r15, r10
 17554 0000A832 4983C7FF                        add r15, -1
 17555                                                                                         
 17556 0000A836 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17557 0000A839 4983C404                        add r12, 4
 17558 0000A83D 4983C4FF                        add r12, -1
 17559                                  
 17560 0000A841 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17561                                  .L_tc_recycle_frame_loop_04b5:
 17562 0000A847 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17563                                  
 17564 0000A84B 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17565                                  
 17566                                  
 17567                                  
 17568 0000A850 41BE00000000                    mov r14, 0                                ; clean box
 17569                                  
 17570                                  
 17571 0000A856 4983C7FF                        add r15, -1           
 17572 0000A85A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17573                                  
 17574 0000A85E 4983C4FF                        add r12, -1 
 17575                                  
 17576 0000A862 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17577 0000A866 75DF                    	jne .L_tc_recycle_frame_loop_04b5
 17578                                  .L_tc_recycle_frame_done_04b5:
 17579                                  ;this pop rbp in sot to the right place
 17580 0000A868 4D89C7                  mov r15, r8
 17581                                  
 17582 0000A86B 4983C704                        add r15, 4
 17583                                  
 17584 0000A86F 49C1E703                        shl r15, 3
 17585                                  
 17586 0000A873 4C01FC                          add rsp, r15
 17587 0000A876 5D                      	pop rbp                                  ; restore the old rbp
 17588                                  
 17589 0000A877 488B4D00                        mov rcx, qword [rbp]
 17590 0000A87B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17591                                            ; rbx <- code(proc)
 17592                                  
 17593 0000A87F FFE3                            jmp rbx
 17594 0000A881 C9                      	leave
 17595 0000A882 C21800                  	ret 8 * (2 + 1)
 17596                                  .L_lambda_simple_end_03fc:	; new closure is in rax
 17597                                  .L_lambda_simple_arity_check_ok_08b8:
 17598 0000A885 803805                  	cmp byte [rax], T_closure
 17599                                  
 17600 0000A888 0F85748F0000                    jne L_code_ptr_error                      ; rax <- proc
 17601                                  
 17602                                  
 17603 0000A88E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17604                                  
 17605 0000A892 53                              push rbx                                  ; env pushed
 17606                                  
 17607 0000A893 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17608                                  
 17609                                          ; sagydebug
 17610                                  
 17611 0000A896 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17612                                  
 17613                                          
 17614                                          
 17615 0000A899 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17616                                  
 17617 0000A89D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17618                                  
 17619                                  
 17620 0000A8A2 4D89CA                          mov r10, r9
 17621 0000A8A5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17622                                          
 17623 0000A8A9 4D89D7                          mov r15, r10
 17624 0000A8AC 4983C7FF                        add r15, -1
 17625                                                                                         
 17626 0000A8B0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17627 0000A8B3 4983C404                        add r12, 4
 17628 0000A8B7 4983C4FF                        add r12, -1
 17629                                  
 17630 0000A8BB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17631                                  .L_tc_recycle_frame_loop_04b6:
 17632 0000A8C1 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17633                                  
 17634 0000A8C5 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17635                                  
 17636                                  
 17637                                  
 17638 0000A8CA 41BE00000000                    mov r14, 0                                ; clean box
 17639                                  
 17640                                  
 17641 0000A8D0 4983C7FF                        add r15, -1           
 17642 0000A8D4 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17643                                  
 17644 0000A8D8 4983C4FF                        add r12, -1 
 17645                                  
 17646 0000A8DC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17647 0000A8E0 75DF                    	jne .L_tc_recycle_frame_loop_04b6
 17648                                  .L_tc_recycle_frame_done_04b6:
 17649                                  ;this pop rbp in sot to the right place
 17650 0000A8E2 4D89C7                  mov r15, r8
 17651                                  
 17652 0000A8E5 4983C704                        add r15, 4
 17653                                  
 17654 0000A8E9 49C1E703                        shl r15, 3
 17655                                  
 17656 0000A8ED 4C01FC                          add rsp, r15
 17657 0000A8F0 5D                      	pop rbp                                  ; restore the old rbp
 17658                                  
 17659 0000A8F1 488B4D00                        mov rcx, qword [rbp]
 17660 0000A8F5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17661                                            ; rbx <- code(proc)
 17662                                  
 17663 0000A8F9 FFE3                            jmp rbx
 17664 0000A8FB C9                      	leave
 17665 0000A8FC C21800                  	ret 8 * (2 + 1)
 17666                                  .L_lambda_simple_end_03fa:	; new closure is in rax
 17667                                  .L_lambda_simple_arity_check_ok_08b9:
 17668 0000A8FF 803805                  	cmp byte [rax], T_closure
 17669                                  
 17670 0000A902 0F85FA8E0000                    jne L_code_ptr_error                      ; rax <- proc
 17671                                  
 17672                                  
 17673 0000A908 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17674                                  
 17675 0000A90C 53                              push rbx                                  ; env pushed
 17676                                  
 17677 0000A90D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17678                                  
 17679                                          ; sagydebug
 17680                                  
 17681 0000A910 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17682                                  
 17683                                          
 17684                                          
 17685 0000A913 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17686                                  
 17687 0000A917 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17688                                  
 17689                                  
 17690 0000A91C 4D89CA                          mov r10, r9
 17691 0000A91F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17692                                          
 17693 0000A923 4D89D7                          mov r15, r10
 17694 0000A926 4983C7FF                        add r15, -1
 17695                                                                                         
 17696 0000A92A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17697 0000A92D 4983C404                        add r12, 4
 17698 0000A931 4983C4FF                        add r12, -1
 17699                                  
 17700 0000A935 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17701                                  .L_tc_recycle_frame_loop_04b7:
 17702 0000A93B 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17703                                  
 17704 0000A93F 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17705                                  
 17706                                  
 17707                                  
 17708 0000A944 41BE00000000                    mov r14, 0                                ; clean box
 17709                                  
 17710                                  
 17711 0000A94A 4983C7FF                        add r15, -1           
 17712 0000A94E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17713                                  
 17714 0000A952 4983C4FF                        add r12, -1 
 17715                                  
 17716 0000A956 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17717 0000A95A 75DF                    	jne .L_tc_recycle_frame_loop_04b7
 17718                                  .L_tc_recycle_frame_done_04b7:
 17719                                  ;this pop rbp in sot to the right place
 17720 0000A95C 4D89C7                  mov r15, r8
 17721                                  
 17722 0000A95F 4983C704                        add r15, 4
 17723                                  
 17724 0000A963 49C1E703                        shl r15, 3
 17725                                  
 17726 0000A967 4C01FC                          add rsp, r15
 17727 0000A96A 5D                      	pop rbp                                  ; restore the old rbp
 17728                                  
 17729 0000A96B 488B4D00                        mov rcx, qword [rbp]
 17730 0000A96F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17731                                            ; rbx <- code(proc)
 17732                                  
 17733 0000A973 FFE3                            jmp rbx
 17734 0000A975 C9                      	leave
 17735 0000A976 C21800                  	ret 8 * (2 + 1)
 17736                                  .L_lambda_simple_end_03f8:	; new closure is in rax
 17737                                  .L_lambda_simple_arity_check_ok_08ba:
 17738 0000A979 803805                  	cmp byte [rax], T_closure
 17739                                  
 17740 0000A97C 0F85808E0000                    jne L_code_ptr_error                      ; rax <- proc
 17741                                  
 17742                                  
 17743 0000A982 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17744                                  
 17745 0000A986 53                              push rbx                                  ; env pushed
 17746                                  
 17747 0000A987 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17748                                  
 17749                                          ; sagydebug
 17750                                  
 17751 0000A98A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17752                                  
 17753                                          
 17754                                          
 17755 0000A98D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17756                                  
 17757 0000A991 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17758                                  
 17759                                  
 17760 0000A996 4D89CA                          mov r10, r9
 17761 0000A999 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17762                                          
 17763 0000A99D 4D89D7                          mov r15, r10
 17764 0000A9A0 4983C7FF                        add r15, -1
 17765                                                                                         
 17766 0000A9A4 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17767 0000A9A7 4983C404                        add r12, 4
 17768 0000A9AB 4983C4FF                        add r12, -1
 17769                                  
 17770 0000A9AF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17771                                  .L_tc_recycle_frame_loop_04b8:
 17772 0000A9B5 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17773                                  
 17774 0000A9B9 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17775                                  
 17776                                  
 17777                                  
 17778 0000A9BE 41BE00000000                    mov r14, 0                                ; clean box
 17779                                  
 17780                                  
 17781 0000A9C4 4983C7FF                        add r15, -1           
 17782 0000A9C8 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17783                                  
 17784 0000A9CC 4983C4FF                        add r12, -1 
 17785                                  
 17786 0000A9D0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17787 0000A9D4 75DF                    	jne .L_tc_recycle_frame_loop_04b8
 17788                                  .L_tc_recycle_frame_done_04b8:
 17789                                  ;this pop rbp in sot to the right place
 17790 0000A9D6 4D89C7                  mov r15, r8
 17791                                  
 17792 0000A9D9 4983C704                        add r15, 4
 17793                                  
 17794 0000A9DD 49C1E703                        shl r15, 3
 17795                                  
 17796 0000A9E1 4C01FC                          add rsp, r15
 17797 0000A9E4 5D                      	pop rbp                                  ; restore the old rbp
 17798                                  
 17799 0000A9E5 488B4D00                        mov rcx, qword [rbp]
 17800 0000A9E9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17801                                            ; rbx <- code(proc)
 17802                                  
 17803 0000A9ED FFE3                            jmp rbx
 17804 0000A9EF C9                      	leave
 17805 0000A9F0 C21800                  	ret 8 * (2 + 1)
 17806                                  .L_lambda_simple_end_03f7:	; new closure is in rax
 17807                                  .L_lambda_simple_arity_check_ok_08bb:
 17808 0000A9F3 803805                  	cmp byte [rax], T_closure
 17809                                  
 17810 0000A9F6 0F85068E0000                    jne L_code_ptr_error                      ; rax <- proc
 17811                                  
 17812                                  
 17813 0000A9FC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17814                                  
 17815 0000AA00 53                              push rbx                                  ; env pushed
 17816                                  
 17817 0000AA01 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17818                                  
 17819                                          ; sagydebug
 17820                                  
 17821 0000AA04 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17822                                  
 17823                                          
 17824                                          
 17825 0000AA07 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17826                                  
 17827 0000AA0B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17828                                  
 17829                                  
 17830 0000AA10 4D89CA                          mov r10, r9
 17831 0000AA13 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17832                                          
 17833 0000AA17 4D89D7                          mov r15, r10
 17834 0000AA1A 4983C7FF                        add r15, -1
 17835                                                                                         
 17836 0000AA1E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17837 0000AA21 4983C404                        add r12, 4
 17838 0000AA25 4983C4FF                        add r12, -1
 17839                                  
 17840 0000AA29 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17841                                  .L_tc_recycle_frame_loop_04b9:
 17842 0000AA2F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17843                                  
 17844 0000AA33 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17845                                  
 17846                                  
 17847                                  
 17848 0000AA38 41BE00000000                    mov r14, 0                                ; clean box
 17849                                  
 17850                                  
 17851 0000AA3E 4983C7FF                        add r15, -1           
 17852 0000AA42 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17853                                  
 17854 0000AA46 4983C4FF                        add r12, -1 
 17855                                  
 17856 0000AA4A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17857 0000AA4E 75DF                    	jne .L_tc_recycle_frame_loop_04b9
 17858                                  .L_tc_recycle_frame_done_04b9:
 17859                                  ;this pop rbp in sot to the right place
 17860 0000AA50 4D89C7                  mov r15, r8
 17861                                  
 17862 0000AA53 4983C704                        add r15, 4
 17863                                  
 17864 0000AA57 49C1E703                        shl r15, 3
 17865                                  
 17866 0000AA5B 4C01FC                          add rsp, r15
 17867 0000AA5E 5D                      	pop rbp                                  ; restore the old rbp
 17868                                  
 17869 0000AA5F 488B4D00                        mov rcx, qword [rbp]
 17870 0000AA63 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17871                                            ; rbx <- code(proc)
 17872                                  
 17873 0000AA67 FFE3                            jmp rbx
 17874 0000AA69 C9                      	leave
 17875 0000AA6A C21800                  	ret 8 * (2 + 1)
 17876                                  .L_lambda_simple_end_03f6:	; new closure is in rax
 17877                                  .L_lambda_simple_arity_check_ok_08bc:
 17878 0000AA6D 803805                  	cmp byte [rax], T_closure
 17879                                  
 17880 0000AA70 0F858C8D0000                    jne L_code_ptr_error                      ; rax <- proc
 17881                                  
 17882                                  
 17883 0000AA76 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17884                                  
 17885 0000AA7A 53                              push rbx                                  ; env pushed
 17886                                  
 17887 0000AA7B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17888                                  
 17889                                          ; sagydebug
 17890                                  
 17891 0000AA7E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17892                                  
 17893                                          
 17894                                          
 17895 0000AA81 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17896                                  
 17897 0000AA85 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17898                                  
 17899                                  
 17900 0000AA8A 4D89CA                          mov r10, r9
 17901 0000AA8D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 17902                                          
 17903 0000AA91 4D89D7                          mov r15, r10
 17904 0000AA94 4983C7FF                        add r15, -1
 17905                                                                                         
 17906 0000AA98 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17907 0000AA9B 4983C404                        add r12, 4
 17908 0000AA9F 4983C4FF                        add r12, -1
 17909                                  
 17910 0000AAA3 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17911                                  .L_tc_recycle_frame_loop_04ba:
 17912 0000AAA9 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 17913                                  
 17914 0000AAAD 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17915                                  
 17916                                  
 17917                                  
 17918 0000AAB2 41BE00000000                    mov r14, 0                                ; clean box
 17919                                  
 17920                                  
 17921 0000AAB8 4983C7FF                        add r15, -1           
 17922 0000AABC 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17923                                  
 17924 0000AAC0 4983C4FF                        add r12, -1 
 17925                                  
 17926 0000AAC4 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17927 0000AAC8 75DF                    	jne .L_tc_recycle_frame_loop_04ba
 17928                                  .L_tc_recycle_frame_done_04ba:
 17929                                  ;this pop rbp in sot to the right place
 17930 0000AACA 4D89C7                  mov r15, r8
 17931                                  
 17932 0000AACD 4983C704                        add r15, 4
 17933                                  
 17934 0000AAD1 49C1E703                        shl r15, 3
 17935                                  
 17936 0000AAD5 4C01FC                          add rsp, r15
 17937 0000AAD8 5D                      	pop rbp                                  ; restore the old rbp
 17938                                  
 17939 0000AAD9 488B4D00                        mov rcx, qword [rbp]
 17940 0000AADD 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17941                                            ; rbx <- code(proc)
 17942                                  
 17943 0000AAE1 FFE3                            jmp rbx
 17944 0000AAE3 C9                      	leave
 17945 0000AAE4 C21800                  	ret 8 * (2 + 1)
 17946                                  .L_lambda_simple_end_03f3:	; new closure is in rax
 17947 0000AAE7 803805                  	cmp byte [rax], T_closure 
 17948 0000AAEA 0F85128D0000                    jne L_code_ptr_error
 17949                                  
 17950 0000AAF0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17951                                  
 17952 0000AAF4 53                              push rbx
 17953                                  
 17954 0000AAF5 FF5009                          call SOB_CLOSURE_CODE(rax)
 17955                                  
 17956                                          
 17957 0000AAF8 4889C7                  	mov rdi, rax
 17958 0000AAFB E8587D0000              	call print_sexpr_if_not_void
 17959                                  
 17960 0000AB00 48B8-                   	mov rax, qword (L_constants + 22)
 17960 0000AB02 [1600000000000000] 
 17961 0000AB0A 50                      	push rax
 17962 0000AB0B 6A01                    	push 1
 17963 0000AB0D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17964 0000AB12 E8307D0000              	call malloc
 17965 0000AB17 50                      	push rax
 17966 0000AB18 BF00000000              	mov rdi, 8 * 0	; new rib
 17967 0000AB1D E8257D0000              	call malloc
 17968 0000AB22 50                      	push rax
 17969 0000AB23 BF08000000              	mov rdi, 8 * 1	; extended env
 17970 0000AB28 E81A7D0000              	call malloc
 17971 0000AB2D 488B7D10                	mov rdi, ENV
 17972 0000AB31 BE00000000              	mov rsi, 0
 17973 0000AB36 BA01000000              	mov rdx, 1
 17974                                  .L_lambda_simple_env_loop_0403:	; ext_env[i + 1] <-- env[i]
 17975 0000AB3B 4883FE00                	cmp rsi, 0
 17976 0000AB3F 7410                    	je .L_lambda_simple_env_end_0403
 17977 0000AB41 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17978 0000AB45 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17979 0000AB49 48FFC6                  	inc rsi
 17980 0000AB4C 48FFC2                  	inc rdx
 17981 0000AB4F EBEA                    	jmp .L_lambda_simple_env_loop_0403
 17982                                  .L_lambda_simple_env_end_0403:
 17983 0000AB51 5B                      	pop rbx
 17984 0000AB52 BE00000000              	mov rsi, 0
 17985                                  .L_lambda_simple_params_loop_0403:	; copy params
 17986 0000AB57 4883FE00                	cmp rsi, 0
 17987 0000AB5B 740E                    	je .L_lambda_simple_params_end_0403
 17988 0000AB5D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17989 0000AB62 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17990 0000AB66 48FFC6                  	inc rsi
 17991 0000AB69 EBEC                    	jmp .L_lambda_simple_params_loop_0403
 17992                                  .L_lambda_simple_params_end_0403:
 17993 0000AB6B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17994 0000AB6E 4889C3                  	mov rbx, rax
 17995 0000AB71 58                      	pop rax
 17996 0000AB72 C60005                  	mov byte [rax], T_closure
 17997 0000AB75 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17998 0000AB79 48C74009[86AB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0403
 17999 0000AB81 E940060000              	jmp .L_lambda_simple_end_0403
 18000                                  .L_lambda_simple_code_0403:	; lambda-simple body
 18001 0000AB86 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18002 0000AB8C 740B                    	je .L_lambda_simple_arity_check_ok_08bd
 18003 0000AB8E FF742410                	push qword [rsp + 8 * 2]
 18004 0000AB92 6A01                    	push 1
 18005 0000AB94 E9677C0000              	jmp L_error_incorrect_arity_simple
 18006                                  .L_lambda_simple_arity_check_ok_08bd:
 18007 0000AB99 C8000000                	enter 0, 0
 18008 0000AB9D 488B4520                mov rax, qword [rbp + 32]
 18009 0000ABA1 BF08000000              mov rdi, 8
 18010 0000ABA6 4889C3                  mov rbx, rax
 18011 0000ABA9 E8997C0000              call malloc
 18012 0000ABAE 488918                  mov qword [rax], rbx
 18013 0000ABB1 48894520                mov qword [rbp + 32], rax
 18014 0000ABB5 48B8-                   mov rax, sob_void
 18014 0000ABB7 [0000000000000000] 
 18015 0000ABBF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18016 0000ABC4 E87E7C0000              	call malloc
 18017 0000ABC9 50                      	push rax
 18018 0000ABCA BF08000000              	mov rdi, 8 * 1	; new rib
 18019 0000ABCF E8737C0000              	call malloc
 18020 0000ABD4 50                      	push rax
 18021 0000ABD5 BF10000000              	mov rdi, 8 * 2	; extended env
 18022 0000ABDA E8687C0000              	call malloc
 18023 0000ABDF 488B7D10                	mov rdi, ENV
 18024 0000ABE3 BE00000000              	mov rsi, 0
 18025 0000ABE8 BA01000000              	mov rdx, 1
 18026                                  .L_lambda_simple_env_loop_0404:	; ext_env[i + 1] <-- env[i]
 18027 0000ABED 4883FE01                	cmp rsi, 1
 18028 0000ABF1 7410                    	je .L_lambda_simple_env_end_0404
 18029 0000ABF3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18030 0000ABF7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18031 0000ABFB 48FFC6                  	inc rsi
 18032 0000ABFE 48FFC2                  	inc rdx
 18033 0000AC01 EBEA                    	jmp .L_lambda_simple_env_loop_0404
 18034                                  .L_lambda_simple_env_end_0404:
 18035 0000AC03 5B                      	pop rbx
 18036 0000AC04 BE00000000              	mov rsi, 0
 18037                                  .L_lambda_simple_params_loop_0404:	; copy params
 18038 0000AC09 4883FE01                	cmp rsi, 1
 18039 0000AC0D 740E                    	je .L_lambda_simple_params_end_0404
 18040 0000AC0F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18041 0000AC14 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18042 0000AC18 48FFC6                  	inc rsi
 18043 0000AC1B EBEC                    	jmp .L_lambda_simple_params_loop_0404
 18044                                  .L_lambda_simple_params_end_0404:
 18045 0000AC1D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18046 0000AC20 4889C3                  	mov rbx, rax
 18047 0000AC23 58                      	pop rax
 18048 0000AC24 C60005                  	mov byte [rax], T_closure
 18049 0000AC27 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18050 0000AC2B 48C74009[38AC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0404
 18051 0000AC33 E929010000              	jmp .L_lambda_simple_end_0404
 18052                                  .L_lambda_simple_code_0404:	; lambda-simple body
 18053 0000AC38 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18054 0000AC3E 740B                    	je .L_lambda_simple_arity_check_ok_08be
 18055 0000AC40 FF742410                	push qword [rsp + 8 * 2]
 18056 0000AC44 6A02                    	push 2
 18057 0000AC46 E9B57B0000              	jmp L_error_incorrect_arity_simple
 18058                                  .L_lambda_simple_arity_check_ok_08be:
 18059 0000AC4B C8000000                	enter 0, 0
 18060 0000AC4F 488B4520                mov rax, qword [rbp + 32]
 18061 0000AC53 50                      	push rax
 18062 0000AC54 6A01                    	push 1
 18063 0000AC56 488B0425[D8000000]      	mov rax, qword [free_var_27]
 18064 0000AC5E 803805                  	cmp byte [rax], T_closure 
 18065 0000AC61 0F859B8B0000                    jne L_code_ptr_error
 18066                                  
 18067 0000AC67 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18068                                  
 18069 0000AC6B 53                              push rbx
 18070                                  
 18071 0000AC6C FF5009                          call SOB_CLOSURE_CODE(rax)
 18072                                  
 18073 0000AC6F 483D[02000000]                  	cmp rax, sob_boolean_false
 18074 0000AC75 740F                    	je .L_if_else_0268
 18075 0000AC77 48B8-                   	mov rax, qword (L_constants + 1)
 18075 0000AC79 [0100000000000000] 
 18076 0000AC81 E9D7000000              	jmp .L_if_end_0268
 18077                                  	.L_if_else_0268:
 18078 0000AC86 488B4528                	mov rax, qword [rbp + 40]
 18079 0000AC8A 50                      	push rax
 18080 0000AC8B 48B8-                   	mov rax, qword (L_constants + 127)
 18080 0000AC8D [7F00000000000000] 
 18081 0000AC95 50                      	push rax
 18082 0000AC96 488B4520                mov rax, qword [rbp + 32]
 18083 0000AC9A 50                      	push rax
 18084 0000AC9B 6A02                    	push 2
 18085 0000AC9D 488B0425[10030000]      	mov rax, qword [free_var_98]
 18086 0000ACA5 803805                  	cmp byte [rax], T_closure 
 18087 0000ACA8 0F85548B0000                    jne L_code_ptr_error
 18088                                  
 18089 0000ACAE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18090                                  
 18091 0000ACB2 53                              push rbx
 18092                                  
 18093 0000ACB3 FF5009                          call SOB_CLOSURE_CODE(rax)
 18094                                  
 18095 0000ACB6 50                              	push rax
 18096 0000ACB7 6A02                    	push 2
 18097 0000ACB9 488B4510                mov rax, qword [rbp + 16]
 18098 0000ACBD 488B00                  mov rax, qword [rax + 0]
 18099 0000ACC0 488B00                  mov rax, qword [rax + 0]
 18100 0000ACC3 488B00                  	mov rax, qword [rax]
 18101 0000ACC6 803805                  	cmp byte [rax], T_closure 
 18102 0000ACC9 0F85338B0000                    jne L_code_ptr_error
 18103                                  
 18104 0000ACCF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18105                                  
 18106 0000ACD3 53                              push rbx
 18107                                  
 18108 0000ACD4 FF5009                          call SOB_CLOSURE_CODE(rax)
 18109                                  
 18110 0000ACD7 50                              	push rax
 18111 0000ACD8 488B4528                mov rax, qword [rbp + 40]
 18112 0000ACDC 50                      	push rax
 18113 0000ACDD 6A02                    	push 2
 18114 0000ACDF 488B0425[68000000]      	mov rax, qword [free_var_13]
 18115                                  .L_lambda_simple_arity_check_ok_08bf:
 18116 0000ACE7 803805                  	cmp byte [rax], T_closure
 18117                                  
 18118 0000ACEA 0F85128B0000                    jne L_code_ptr_error                      ; rax <- proc
 18119                                  
 18120                                  
 18121 0000ACF0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 18122                                  
 18123 0000ACF4 53                              push rbx                                  ; env pushed
 18124                                  
 18125 0000ACF5 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 18126                                  
 18127                                          ; sagydebug
 18128                                  
 18129 0000ACF8 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 18130                                  
 18131                                          
 18132                                          
 18133 0000ACFB 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 18134                                  
 18135 0000ACFF 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 18136                                  
 18137                                  
 18138 0000AD04 4D89CA                          mov r10, r9
 18139 0000AD07 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 18140                                          
 18141 0000AD0B 4D89D7                          mov r15, r10
 18142 0000AD0E 4983C7FF                        add r15, -1
 18143                                                                                         
 18144 0000AD12 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 18145 0000AD15 4983C404                        add r12, 4
 18146 0000AD19 4983C4FF                        add r12, -1
 18147                                  
 18148 0000AD1D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 18149                                  .L_tc_recycle_frame_loop_04bb:
 18150 0000AD23 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 18151                                  
 18152 0000AD27 4E8974E500                      mov [rbp + (r12 * 8)], r14
 18153                                  
 18154                                  
 18155                                  
 18156 0000AD2C 41BE00000000                    mov r14, 0                                ; clean box
 18157                                  
 18158                                  
 18159 0000AD32 4983C7FF                        add r15, -1           
 18160 0000AD36 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18161                                  
 18162 0000AD3A 4983C4FF                        add r12, -1 
 18163                                  
 18164 0000AD3E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18165 0000AD42 75DF                    	jne .L_tc_recycle_frame_loop_04bb
 18166                                  .L_tc_recycle_frame_done_04bb:
 18167                                  ;this pop rbp in sot to the right place
 18168 0000AD44 4D89C7                  mov r15, r8
 18169                                  
 18170 0000AD47 4983C704                        add r15, 4
 18171                                  
 18172 0000AD4B 49C1E703                        shl r15, 3
 18173                                  
 18174 0000AD4F 4C01FC                          add rsp, r15
 18175 0000AD52 5D                      	pop rbp                                  ; restore the old rbp
 18176                                  
 18177 0000AD53 488B4D00                        mov rcx, qword [rbp]
 18178 0000AD57 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18179                                            ; rbx <- code(proc)
 18180                                  
 18181 0000AD5B FFE3                            jmp rbx
 18182                                  	.L_if_end_0268:
 18183 0000AD5D C9                      	leave
 18184 0000AD5E C22000                  	ret 8 * (2 + 2)
 18185                                  .L_lambda_simple_end_0404:	; new closure is in rax
 18186 0000AD61 50                      push rax
 18187 0000AD62 488B4520                mov rax, qword [rbp + 32]
 18188 0000AD66 8F00                    pop qword [rax]
 18189 0000AD68 48B8-                   mov rax, sob_void
 18189 0000AD6A [0000000000000000] 
 18190                                  
 18191 0000AD72 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18192 0000AD77 E8CB7A0000              	call malloc
 18193 0000AD7C 50                      	push rax
 18194 0000AD7D BF08000000              	mov rdi, 8 * 1	; new rib
 18195 0000AD82 E8C07A0000              	call malloc
 18196 0000AD87 50                      	push rax
 18197 0000AD88 BF10000000              	mov rdi, 8 * 2	; extended env
 18198 0000AD8D E8B57A0000              	call malloc
 18199 0000AD92 488B7D10                	mov rdi, ENV
 18200 0000AD96 BE00000000              	mov rsi, 0
 18201 0000AD9B BA01000000              	mov rdx, 1
 18202                                  .L_lambda_opt_env_loop_0099:	; ext_env[i + 1] <-- env[i]
 18203 0000ADA0 4883FE01                	cmp rsi, 1
 18204 0000ADA4 7410                    	je .L_lambda_opt_env_end_0099
 18205 0000ADA6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18206 0000ADAA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18207 0000ADAE 48FFC6                  	inc rsi
 18208 0000ADB1 48FFC2                  	inc rdx
 18209 0000ADB4 EBEA                    	jmp .L_lambda_opt_env_loop_0099
 18210                                  .L_lambda_opt_env_end_0099:
 18211 0000ADB6 5B                      	pop rbx
 18212 0000ADB7 BE00000000              	mov rsi, 0
 18213                                  .L_lambda_opt_params_loop_01c9:	; copy params
 18214 0000ADBC 4883FE01                	cmp rsi, 1
 18215 0000ADC0 740E                    	je .L_lambda_opt_params_end_01c9
 18216 0000ADC2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18217 0000ADC7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18218 0000ADCB 48FFC6                  	inc rsi
 18219 0000ADCE EBEC                    	jmp .L_lambda_opt_params_loop_01c9
 18220                                  .L_lambda_opt_params_end_01c9:
 18221 0000ADD0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18222 0000ADD3 4889C3                  	mov rbx, rax
 18223 0000ADD6 58                      	pop rax
 18224 0000ADD7 C60005                  	mov byte [rax], T_closure
 18225 0000ADDA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18226 0000ADDE 48C74009[EBAD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0099
 18227 0000ADE6 E9D7030000              	jmp .L_lambda_opt_end_0099
 18228                                  .L_lambda_opt_code_0099:
 18229 0000ADEB 4C8B542410              mov r10, qword [rsp+8*2]
 18230 0000ADF0 4983FA01                cmp r10, 1
 18231 0000ADF4 740B                    je .L_lambda_opt_arity_check_exact_0099
 18232 0000ADF6 4983FA01                cmp r10, 1
 18233 0000ADFA 7F44                    jg .L_lambda_opt_arity_check_more_0099
 18234 0000ADFC E9137A0000              jmp L_error_incorrect_arity_opt
 18235                                  .L_lambda_opt_arity_check_exact_0099:
 18236 0000AE01 4883EC08                sub rsp, 8
 18237 0000AE05 BA04000000              mov rdx, 3+1
 18238 0000AE0A 4889E3                  mov qword rbx, rsp
 18239                                  .L_lambda_opt_params_loop_01ca:
 18240 0000AE0D 488B4B08                mov qword rcx, [rbx+8]
 18241 0000AE11 48890B                  mov qword [rbx], rcx
 18242 0000AE14 48FFCA                  dec rdx
 18243 0000AE17 4883C308                add rbx, 8
 18244 0000AE1B 4883FA00                cmp rdx, 0
 18245 0000AE1F 7402                    je .L_lambda_opt_params_end_01ca
 18246 0000AE21 EBEA                    jmp .L_lambda_opt_params_loop_01ca
 18247                                  .L_lambda_opt_params_end_01ca:
 18248 0000AE23 49FFC2                  inc r10
 18249 0000AE26 4C89542410              mov qword [rsp+8*2], r10
 18250 0000AE2B 4983C202                add r10, 2
 18251 0000AE2F 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 18252 0000AE37 4C8B4D00                mov r9, [rbp]
 18253 0000AE3B E996000000              jmp .L_lambda_opt_stack_adjusted_0099
 18254                                  .L_lambda_opt_arity_check_more_0099:
 18255 0000AE40 4C8B6C2410              mov r13, [rsp+2*8]
 18256 0000AE45 48B8-                   mov rax, sob_nil
 18256 0000AE47 [0100000000000000] 
 18257 0000AE4F 4C8B542410              mov r10, [rsp+2*8]
 18258 0000AE54 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 18259 0000AE59 4983EA01                sub r10, 1
 18260                                  .L_lambda_opt_stack_shrink_loop_0099:
 18261 0000AE5D 4983FA00                cmp r10, 0
 18262 0000AE61 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0099
 18263 0000AE63 4889C1                  mov rcx, rax
 18264 0000AE66 498B10                  mov rdx, [r8]
 18265 0000AE69 BF11000000              mov rdi, 17
 18266 0000AE6E E8D4790000              call malloc
 18267 0000AE73 C60021                  mov byte [rax], T_pair
 18268 0000AE76 48894809                mov SOB_PAIR_CDR(rax), rcx
 18269 0000AE7A 48895001                mov SOB_PAIR_CAR(rax), rdx
 18270 0000AE7E 4983E808                sub r8, 8
 18271 0000AE82 49FFCA                  dec r10
 18272 0000AE85 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0099
 18273                                  .L_lambda_opt_stack_shrink_loop_exit_0099:
 18274 0000AE87 4889442420              mov [rsp+8*(2+2)], rax
 18275 0000AE8C 41BA02000000            mov r10, 2
 18276 0000AE92 4C89542410              mov [rsp+16], r10
 18277 0000AE97 4989E4                  mov r12, rsp
 18278 0000AE9A 4983C420                add r12, 8*(2+2)
 18279 0000AE9E 4C2B6C2410              sub r13, [rsp+16]
 18280 0000AEA3 4D89EA                  mov r10, r13
 18281 0000AEA6 49C1E203                shl r10, 3
 18282 0000AEAA 4D89D7                  mov r15, r10
 18283 0000AEAD 4D01E2                  add r10, r12
 18284 0000AEB0 4C8B4C2410              mov r9, [rsp+16]
 18285 0000AEB5 4983C103                add r9, 3
 18286                                  .L_lambda_opt_params_loop_01cb:
 18287 0000AEB9 4983F900                cmp r9, 0
 18288 0000AEBD 7414                    je .L_lambda_opt_params_end_01cb
 18289 0000AEBF 4D8B3424                mov r14, [r12]
 18290 0000AEC3 4D8932                  mov [r10], r14
 18291 0000AEC6 4983EC08                sub r12, 8
 18292 0000AECA 4983EA08                sub r10, 8
 18293 0000AECE 49FFC9                  dec r9
 18294 0000AED1 EBE6                    jmp .L_lambda_opt_params_loop_01cb
 18295                                  .L_lambda_opt_params_end_01cb:
 18296 0000AED3 4C01FC                  add rsp, r15
 18297                                  .L_lambda_opt_stack_adjusted_0099:
 18298 0000AED6 4C8B4D00                mov r9, [rbp]
 18299 0000AEDA C8000000                enter 0, 0
 18300 0000AEDE 488B4528                mov rax, qword [rbp + 40]
 18301 0000AEE2 50                      	push rax
 18302 0000AEE3 6A01                    	push 1
 18303 0000AEE5 488B0425[00000000]      	mov rax, qword [free_var_0]
 18304 0000AEED 803805                  	cmp byte [rax], T_closure 
 18305 0000AEF0 0F850C890000                    jne L_code_ptr_error
 18306                                  
 18307 0000AEF6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18308                                  
 18309 0000AEFA 53                              push rbx
 18310                                  
 18311 0000AEFB FF5009                          call SOB_CLOSURE_CODE(rax)
 18312                                  
 18313 0000AEFE 483D[02000000]                  	cmp rax, sob_boolean_false
 18314 0000AF04 0F849A000000            	je .L_if_else_0269
 18315 0000AF0A 48B8-                   	mov rax, qword (L_constants + 4)
 18315 0000AF0C [0400000000000000] 
 18316 0000AF14 50                      	push rax
 18317 0000AF15 488B4520                mov rax, qword [rbp + 32]
 18318 0000AF19 50                      	push rax
 18319 0000AF1A 6A02                    	push 2
 18320 0000AF1C 488B4510                mov rax, qword [rbp + 16]
 18321 0000AF20 488B00                  mov rax, qword [rax + 0]
 18322 0000AF23 488B00                  mov rax, qword [rax + 0]
 18323 0000AF26 488B00                  	mov rax, qword [rax]
 18324                                  .L_lambda_simple_arity_check_ok_08c2:
 18325 0000AF29 803805                  	cmp byte [rax], T_closure
 18326                                  
 18327 0000AF2C 0F85D0880000                    jne L_code_ptr_error                      ; rax <- proc
 18328                                  
 18329                                  
 18330 0000AF32 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 18331                                  
 18332 0000AF36 53                              push rbx                                  ; env pushed
 18333                                  
 18334 0000AF37 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 18335                                  
 18336                                          ; sagydebug
 18337                                  
 18338 0000AF3A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 18339                                  
 18340                                          
 18341                                          
 18342 0000AF3D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 18343                                  
 18344 0000AF41 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 18345                                  
 18346                                  
 18347 0000AF46 4D89CA                          mov r10, r9
 18348 0000AF49 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 18349                                          
 18350 0000AF4D 4D89D7                          mov r15, r10
 18351 0000AF50 4983C7FF                        add r15, -1
 18352                                                                                         
 18353 0000AF54 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 18354 0000AF57 4983C404                        add r12, 4
 18355 0000AF5B 4983C4FF                        add r12, -1
 18356                                  
 18357 0000AF5F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 18358                                  .L_tc_recycle_frame_loop_04be:
 18359 0000AF65 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 18360                                  
 18361 0000AF69 4E8974E500                      mov [rbp + (r12 * 8)], r14
 18362                                  
 18363                                  
 18364                                  
 18365 0000AF6E 41BE00000000                    mov r14, 0                                ; clean box
 18366                                  
 18367                                  
 18368 0000AF74 4983C7FF                        add r15, -1           
 18369 0000AF78 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18370                                  
 18371 0000AF7C 4983C4FF                        add r12, -1 
 18372                                  
 18373 0000AF80 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18374 0000AF84 75DF                    	jne .L_tc_recycle_frame_loop_04be
 18375                                  .L_tc_recycle_frame_done_04be:
 18376                                  ;this pop rbp in sot to the right place
 18377 0000AF86 4D89C7                  mov r15, r8
 18378                                  
 18379 0000AF89 4983C704                        add r15, 4
 18380                                  
 18381 0000AF8D 49C1E703                        shl r15, 3
 18382                                  
 18383 0000AF91 4C01FC                          add rsp, r15
 18384 0000AF94 5D                      	pop rbp                                  ; restore the old rbp
 18385                                  
 18386 0000AF95 488B4D00                        mov rcx, qword [rbp]
 18387 0000AF99 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18388                                            ; rbx <- code(proc)
 18389                                  
 18390 0000AF9D FFE3                            jmp rbx
 18391 0000AF9F E916020000              	jmp .L_if_end_0269
 18392                                  	.L_if_else_0269:
 18393 0000AFA4 488B4528                	mov rax, qword [rbp + 40]
 18394 0000AFA8 50                      	push rax
 18395 0000AFA9 6A01                    	push 1
 18396 0000AFAB 488B0425[08000000]      	mov rax, qword [free_var_1]
 18397 0000AFB3 803805                  	cmp byte [rax], T_closure 
 18398 0000AFB6 0F8546880000                    jne L_code_ptr_error
 18399                                  
 18400 0000AFBC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18401                                  
 18402 0000AFC0 53                              push rbx
 18403                                  
 18404 0000AFC1 FF5009                          call SOB_CLOSURE_CODE(rax)
 18405                                  
 18406 0000AFC4 483D[02000000]                  	cmp rax, sob_boolean_false
 18407 0000AFCA 0F848E000000            	je .L_if_else_026b
 18408 0000AFD0 488B4528                mov rax, qword [rbp + 40]
 18409 0000AFD4 50                      	push rax
 18410 0000AFD5 6A01                    	push 1
 18411 0000AFD7 488B0425[88000000]      	mov rax, qword [free_var_17]
 18412 0000AFDF 803805                  	cmp byte [rax], T_closure 
 18413 0000AFE2 0F851A880000                    jne L_code_ptr_error
 18414                                  
 18415 0000AFE8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18416                                  
 18417 0000AFEC 53                              push rbx
 18418                                  
 18419 0000AFED FF5009                          call SOB_CLOSURE_CODE(rax)
 18420                                  
 18421 0000AFF0 50                              	push rax
 18422 0000AFF1 6A01                    	push 1
 18423 0000AFF3 488B0425[00000000]      	mov rax, qword [free_var_0]
 18424 0000AFFB 803805                  	cmp byte [rax], T_closure 
 18425 0000AFFE 0F85FE870000                    jne L_code_ptr_error
 18426                                  
 18427 0000B004 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18428                                  
 18429 0000B008 53                              push rbx
 18430                                  
 18431 0000B009 FF5009                          call SOB_CLOSURE_CODE(rax)
 18432                                  
 18433 0000B00C 483D[02000000]                  	cmp rax, sob_boolean_false
 18434 0000B012 743E                    	je .L_if_else_026c
 18435 0000B014 488B4528                mov rax, qword [rbp + 40]
 18436 0000B018 50                      	push rax
 18437 0000B019 6A01                    	push 1
 18438 0000B01B 488B0425[80000000]      	mov rax, qword [free_var_16]
 18439 0000B023 803805                  	cmp byte [rax], T_closure 
 18440 0000B026 0F85D6870000                    jne L_code_ptr_error
 18441                                  
 18442 0000B02C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18443                                  
 18444 0000B030 53                              push rbx
 18445                                  
 18446 0000B031 FF5009                          call SOB_CLOSURE_CODE(rax)
 18447                                  
 18448 0000B034 50                              	push rax
 18449 0000B035 6A01                    	push 1
 18450 0000B037 488B0425[18000000]      	mov rax, qword [free_var_3]
 18451 0000B03F 803805                  	cmp byte [rax], T_closure 
 18452 0000B042 0F85BA870000                    jne L_code_ptr_error
 18453                                  
 18454 0000B048 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18455                                  
 18456 0000B04C 53                              push rbx
 18457                                  
 18458 0000B04D FF5009                          call SOB_CLOSURE_CODE(rax)
 18459                                  
 18460 0000B050 EB0A                            	jmp .L_if_end_026c
 18461                                  	.L_if_else_026c:
 18462 0000B052 48B8-                   		mov rax, qword (L_constants + 2)
 18462 0000B054 [0200000000000000] 
 18463                                  	.L_if_end_026c:
 18464 0000B05C EB0A                    	jmp .L_if_end_026b
 18465                                  	.L_if_else_026b:
 18466 0000B05E 48B8-                   		mov rax, qword (L_constants + 2)
 18466 0000B060 [0200000000000000] 
 18467                                  	.L_if_end_026b:
 18468 0000B068 483D[02000000]          	cmp rax, sob_boolean_false
 18469 0000B06E 0F84B0000000            	je .L_if_else_026a
 18470 0000B074 488B4528                mov rax, qword [rbp + 40]
 18471 0000B078 50                      	push rax
 18472 0000B079 6A01                    	push 1
 18473 0000B07B 488B0425[80000000]      	mov rax, qword [free_var_16]
 18474 0000B083 803805                  	cmp byte [rax], T_closure 
 18475 0000B086 0F8576870000                    jne L_code_ptr_error
 18476                                  
 18477 0000B08C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18478                                  
 18479 0000B090 53                              push rbx
 18480                                  
 18481 0000B091 FF5009                          call SOB_CLOSURE_CODE(rax)
 18482                                  
 18483 0000B094 50                              	push rax
 18484 0000B095 488B4520                mov rax, qword [rbp + 32]
 18485 0000B099 50                      	push rax
 18486 0000B09A 6A02                    	push 2
 18487 0000B09C 488B4510                mov rax, qword [rbp + 16]
 18488 0000B0A0 488B00                  mov rax, qword [rax + 0]
 18489 0000B0A3 488B00                  mov rax, qword [rax + 0]
 18490 0000B0A6 488B00                  	mov rax, qword [rax]
 18491                                  .L_lambda_simple_arity_check_ok_08c1:
 18492 0000B0A9 803805                  	cmp byte [rax], T_closure
 18493                                  
 18494 0000B0AC 0F8550870000                    jne L_code_ptr_error                      ; rax <- proc
 18495                                  
 18496                                  
 18497 0000B0B2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 18498                                  
 18499 0000B0B6 53                              push rbx                                  ; env pushed
 18500                                  
 18501 0000B0B7 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 18502                                  
 18503                                          ; sagydebug
 18504                                  
 18505 0000B0BA FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 18506                                  
 18507                                          
 18508                                          
 18509 0000B0BD 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 18510                                  
 18511 0000B0C1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 18512                                  
 18513                                  
 18514 0000B0C6 4D89CA                          mov r10, r9
 18515 0000B0C9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 18516                                          
 18517 0000B0CD 4D89D7                          mov r15, r10
 18518 0000B0D0 4983C7FF                        add r15, -1
 18519                                                                                         
 18520 0000B0D4 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 18521 0000B0D7 4983C404                        add r12, 4
 18522 0000B0DB 4983C4FF                        add r12, -1
 18523                                  
 18524 0000B0DF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 18525                                  .L_tc_recycle_frame_loop_04bd:
 18526 0000B0E5 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 18527                                  
 18528 0000B0E9 4E8974E500                      mov [rbp + (r12 * 8)], r14
 18529                                  
 18530                                  
 18531                                  
 18532 0000B0EE 41BE00000000                    mov r14, 0                                ; clean box
 18533                                  
 18534                                  
 18535 0000B0F4 4983C7FF                        add r15, -1           
 18536 0000B0F8 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18537                                  
 18538 0000B0FC 4983C4FF                        add r12, -1 
 18539                                  
 18540 0000B100 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18541 0000B104 75DF                    	jne .L_tc_recycle_frame_loop_04bd
 18542                                  .L_tc_recycle_frame_done_04bd:
 18543                                  ;this pop rbp in sot to the right place
 18544 0000B106 4D89C7                  mov r15, r8
 18545                                  
 18546 0000B109 4983C704                        add r15, 4
 18547                                  
 18548 0000B10D 49C1E703                        shl r15, 3
 18549                                  
 18550 0000B111 4C01FC                          add rsp, r15
 18551 0000B114 5D                      	pop rbp                                  ; restore the old rbp
 18552                                  
 18553 0000B115 488B4D00                        mov rcx, qword [rbp]
 18554 0000B119 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18555                                            ; rbx <- code(proc)
 18556                                  
 18557 0000B11D FFE3                            jmp rbx
 18558 0000B11F E996000000              	jmp .L_if_end_026a
 18559                                  	.L_if_else_026a:
 18560 0000B124 48B8-                   		mov rax, qword (L_constants + 287)
 18560 0000B126 [1F01000000000000] 
 18561 0000B12E 50                      	push rax
 18562 0000B12F 48B8-                   	mov rax, qword (L_constants + 278)
 18562 0000B131 [1601000000000000] 
 18563 0000B139 50                      	push rax
 18564 0000B13A 6A02                    	push 2
 18565 0000B13C 488B0425[30010000]      	mov rax, qword [free_var_38]
 18566                                  .L_lambda_simple_arity_check_ok_08c0:
 18567 0000B144 803805                  	cmp byte [rax], T_closure
 18568                                  
 18569 0000B147 0F85B5860000                    jne L_code_ptr_error                      ; rax <- proc
 18570                                  
 18571                                  
 18572 0000B14D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 18573                                  
 18574 0000B151 53                              push rbx                                  ; env pushed
 18575                                  
 18576 0000B152 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 18577                                  
 18578                                          ; sagydebug
 18579                                  
 18580 0000B155 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 18581                                  
 18582                                          
 18583                                          
 18584 0000B158 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 18585                                  
 18586 0000B15C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 18587                                  
 18588                                  
 18589 0000B161 4D89CA                          mov r10, r9
 18590 0000B164 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 18591                                          
 18592 0000B168 4D89D7                          mov r15, r10
 18593 0000B16B 4983C7FF                        add r15, -1
 18594                                                                                         
 18595 0000B16F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 18596 0000B172 4983C404                        add r12, 4
 18597 0000B176 4983C4FF                        add r12, -1
 18598                                  
 18599 0000B17A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 18600                                  .L_tc_recycle_frame_loop_04bc:
 18601 0000B180 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 18602                                  
 18603 0000B184 4E8974E500                      mov [rbp + (r12 * 8)], r14
 18604                                  
 18605                                  
 18606                                  
 18607 0000B189 41BE00000000                    mov r14, 0                                ; clean box
 18608                                  
 18609                                  
 18610 0000B18F 4983C7FF                        add r15, -1           
 18611 0000B193 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18612                                  
 18613 0000B197 4983C4FF                        add r12, -1 
 18614                                  
 18615 0000B19B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18616 0000B19F 75DF                    	jne .L_tc_recycle_frame_loop_04bc
 18617                                  .L_tc_recycle_frame_done_04bc:
 18618                                  ;this pop rbp in sot to the right place
 18619 0000B1A1 4D89C7                  mov r15, r8
 18620                                  
 18621 0000B1A4 4983C704                        add r15, 4
 18622                                  
 18623 0000B1A8 49C1E703                        shl r15, 3
 18624                                  
 18625 0000B1AC 4C01FC                          add rsp, r15
 18626 0000B1AF 5D                      	pop rbp                                  ; restore the old rbp
 18627                                  
 18628 0000B1B0 488B4D00                        mov rcx, qword [rbp]
 18629 0000B1B4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18630                                            ; rbx <- code(proc)
 18631                                  
 18632 0000B1B8 FFE3                            jmp rbx
 18633                                  	.L_if_end_026a:
 18634                                  	.L_if_end_0269:
 18635 0000B1BA C9                      leave
 18636 0000B1BB 4C8B4D00                mov r9, [rbp]
 18637 0000B1BF C22000                  ret 8 * (3 + 1)
 18638                                  .L_lambda_opt_end_0099:	; new closure is in rax
 18639 0000B1C2 C9                      	leave
 18640 0000B1C3 C21800                  	ret 8 * (2 + 1)
 18641                                  .L_lambda_simple_end_0403:	; new closure is in rax
 18642 0000B1C6 803805                  	cmp byte [rax], T_closure 
 18643 0000B1C9 0F8533860000                    jne L_code_ptr_error
 18644                                  
 18645 0000B1CF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18646                                  
 18647 0000B1D3 53                              push rbx
 18648                                  
 18649 0000B1D4 FF5009                          call SOB_CLOSURE_CODE(rax)
 18650                                  
 18651 0000B1D7 48890425[58030000]              	mov qword [free_var_107], rax
 18652 0000B1DF 48B8-                   	mov rax, sob_void
 18652 0000B1E1 [0000000000000000] 
 18653                                  
 18654 0000B1E9 4889C7                  	mov rdi, rax
 18655 0000B1EC E867760000              	call print_sexpr_if_not_void
 18656                                  
 18657 0000B1F1 48B8-                   	mov rax, qword (L_constants + 0)
 18657 0000B1F3 [0000000000000000] 
 18658 0000B1FB 48890425[60030000]      	mov qword [free_var_108], rax
 18659 0000B203 48B8-                   	mov rax, sob_void
 18659 0000B205 [0000000000000000] 
 18660                                  
 18661 0000B20D 4889C7                  	mov rdi, rax
 18662 0000B210 E843760000              	call print_sexpr_if_not_void
 18663                                  
 18664 0000B215 48B8-                   	mov rax, qword (L_constants + 0)
 18664 0000B217 [0000000000000000] 
 18665 0000B21F 48890425[68030000]      	mov qword [free_var_109], rax
 18666 0000B227 48B8-                   	mov rax, sob_void
 18666 0000B229 [0000000000000000] 
 18667                                  
 18668 0000B231 4889C7                  	mov rdi, rax
 18669 0000B234 E81F760000              	call print_sexpr_if_not_void
 18670                                  
 18671 0000B239 48B8-                   	mov rax, qword (L_constants + 0)
 18671 0000B23B [0000000000000000] 
 18672 0000B243 48890425[70030000]      	mov qword [free_var_110], rax
 18673 0000B24B 48B8-                   	mov rax, sob_void
 18673 0000B24D [0000000000000000] 
 18674                                  
 18675 0000B255 4889C7                  	mov rdi, rax
 18676 0000B258 E8FB750000              	call print_sexpr_if_not_void
 18677                                  
 18678 0000B25D 48B8-                   	mov rax, qword (L_constants + 0)
 18678 0000B25F [0000000000000000] 
 18679 0000B267 48890425[78030000]      	mov qword [free_var_111], rax
 18680 0000B26F 48B8-                   	mov rax, sob_void
 18680 0000B271 [0000000000000000] 
 18681                                  
 18682 0000B279 4889C7                  	mov rdi, rax
 18683 0000B27C E8D7750000              	call print_sexpr_if_not_void
 18684                                  
 18685 0000B281 48B8-                   	mov rax, qword (L_constants + 0)
 18685 0000B283 [0000000000000000] 
 18686 0000B28B 48890425[80030000]      	mov qword [free_var_112], rax
 18687 0000B293 48B8-                   	mov rax, sob_void
 18687 0000B295 [0000000000000000] 
 18688                                  
 18689 0000B29D 4889C7                  	mov rdi, rax
 18690 0000B2A0 E8B3750000              	call print_sexpr_if_not_void
 18691                                  
 18692 0000B2A5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18693 0000B2AA E898750000              	call malloc
 18694 0000B2AF 50                      	push rax
 18695 0000B2B0 BF00000000              	mov rdi, 8 * 0	; new rib
 18696 0000B2B5 E88D750000              	call malloc
 18697 0000B2BA 50                      	push rax
 18698 0000B2BB BF08000000              	mov rdi, 8 * 1	; extended env
 18699 0000B2C0 E882750000              	call malloc
 18700 0000B2C5 488B7D10                	mov rdi, ENV
 18701 0000B2C9 BE00000000              	mov rsi, 0
 18702 0000B2CE BA01000000              	mov rdx, 1
 18703                                  .L_lambda_simple_env_loop_0405:	; ext_env[i + 1] <-- env[i]
 18704 0000B2D3 4883FE00                	cmp rsi, 0
 18705 0000B2D7 7410                    	je .L_lambda_simple_env_end_0405
 18706 0000B2D9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18707 0000B2DD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18708 0000B2E1 48FFC6                  	inc rsi
 18709 0000B2E4 48FFC2                  	inc rdx
 18710 0000B2E7 EBEA                    	jmp .L_lambda_simple_env_loop_0405
 18711                                  .L_lambda_simple_env_end_0405:
 18712 0000B2E9 5B                      	pop rbx
 18713 0000B2EA BE00000000              	mov rsi, 0
 18714                                  .L_lambda_simple_params_loop_0405:	; copy params
 18715 0000B2EF 4883FE00                	cmp rsi, 0
 18716 0000B2F3 740E                    	je .L_lambda_simple_params_end_0405
 18717 0000B2F5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18718 0000B2FA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18719 0000B2FE 48FFC6                  	inc rsi
 18720 0000B301 EBEC                    	jmp .L_lambda_simple_params_loop_0405
 18721                                  .L_lambda_simple_params_end_0405:
 18722 0000B303 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18723 0000B306 4889C3                  	mov rbx, rax
 18724 0000B309 58                      	pop rax
 18725 0000B30A C60005                  	mov byte [rax], T_closure
 18726 0000B30D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18727 0000B311 48C74009[1EB30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0405
 18728 0000B319 E944020000              	jmp .L_lambda_simple_end_0405
 18729                                  .L_lambda_simple_code_0405:	; lambda-simple body
 18730 0000B31E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18731 0000B324 740B                    	je .L_lambda_simple_arity_check_ok_08c3
 18732 0000B326 FF742410                	push qword [rsp + 8 * 2]
 18733 0000B32A 6A01                    	push 1
 18734 0000B32C E9CF740000              	jmp L_error_incorrect_arity_simple
 18735                                  .L_lambda_simple_arity_check_ok_08c3:
 18736 0000B331 C8000000                	enter 0, 0
 18737 0000B335 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18738 0000B33A E808750000              	call malloc
 18739 0000B33F 50                      	push rax
 18740 0000B340 BF08000000              	mov rdi, 8 * 1	; new rib
 18741 0000B345 E8FD740000              	call malloc
 18742 0000B34A 50                      	push rax
 18743 0000B34B BF10000000              	mov rdi, 8 * 2	; extended env
 18744 0000B350 E8F2740000              	call malloc
 18745 0000B355 488B7D10                	mov rdi, ENV
 18746 0000B359 BE00000000              	mov rsi, 0
 18747 0000B35E BA01000000              	mov rdx, 1
 18748                                  .L_lambda_opt_env_loop_009a:	; ext_env[i + 1] <-- env[i]
 18749 0000B363 4883FE01                	cmp rsi, 1
 18750 0000B367 7410                    	je .L_lambda_opt_env_end_009a
 18751 0000B369 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18752 0000B36D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18753 0000B371 48FFC6                  	inc rsi
 18754 0000B374 48FFC2                  	inc rdx
 18755 0000B377 EBEA                    	jmp .L_lambda_opt_env_loop_009a
 18756                                  .L_lambda_opt_env_end_009a:
 18757 0000B379 5B                      	pop rbx
 18758 0000B37A BE00000000              	mov rsi, 0
 18759                                  .L_lambda_opt_params_loop_01cc:	; copy params
 18760 0000B37F 4883FE01                	cmp rsi, 1
 18761 0000B383 740E                    	je .L_lambda_opt_params_end_01cc
 18762 0000B385 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18763 0000B38A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18764 0000B38E 48FFC6                  	inc rsi
 18765 0000B391 EBEC                    	jmp .L_lambda_opt_params_loop_01cc
 18766                                  .L_lambda_opt_params_end_01cc:
 18767 0000B393 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18768 0000B396 4889C3                  	mov rbx, rax
 18769 0000B399 58                      	pop rax
 18770 0000B39A C60005                  	mov byte [rax], T_closure
 18771 0000B39D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18772 0000B3A1 48C74009[AEB30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_009a
 18773 0000B3A9 E9B0010000              	jmp .L_lambda_opt_end_009a
 18774                                  .L_lambda_opt_code_009a:
 18775 0000B3AE 4C8B542410              mov r10, qword [rsp+8*2]
 18776 0000B3B3 4983FA00                cmp r10, 0
 18777 0000B3B7 740B                    je .L_lambda_opt_arity_check_exact_009a
 18778 0000B3B9 4983FA00                cmp r10, 0
 18779 0000B3BD 7F44                    jg .L_lambda_opt_arity_check_more_009a
 18780 0000B3BF E950740000              jmp L_error_incorrect_arity_opt
 18781                                  .L_lambda_opt_arity_check_exact_009a:
 18782 0000B3C4 4883EC08                sub rsp, 8
 18783 0000B3C8 BA03000000              mov rdx, 3+0
 18784 0000B3CD 4889E3                  mov qword rbx, rsp
 18785                                  .L_lambda_opt_params_loop_01cd:
 18786 0000B3D0 488B4B08                mov qword rcx, [rbx+8]
 18787 0000B3D4 48890B                  mov qword [rbx], rcx
 18788 0000B3D7 48FFCA                  dec rdx
 18789 0000B3DA 4883C308                add rbx, 8
 18790 0000B3DE 4883FA00                cmp rdx, 0
 18791 0000B3E2 7402                    je .L_lambda_opt_params_end_01cd
 18792 0000B3E4 EBEA                    jmp .L_lambda_opt_params_loop_01cd
 18793                                  .L_lambda_opt_params_end_01cd:
 18794 0000B3E6 49FFC2                  inc r10
 18795 0000B3E9 4C89542410              mov qword [rsp+8*2], r10
 18796 0000B3EE 4983C202                add r10, 2
 18797 0000B3F2 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 18798 0000B3FA 4C8B4D00                mov r9, [rbp]
 18799 0000B3FE E996000000              jmp .L_lambda_opt_stack_adjusted_009a
 18800                                  .L_lambda_opt_arity_check_more_009a:
 18801 0000B403 4C8B6C2410              mov r13, [rsp+2*8]
 18802 0000B408 48B8-                   mov rax, sob_nil
 18802 0000B40A [0100000000000000] 
 18803 0000B412 4C8B542410              mov r10, [rsp+2*8]
 18804 0000B417 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 18805 0000B41C 4983EA00                sub r10, 0
 18806                                  .L_lambda_opt_stack_shrink_loop_009a:
 18807 0000B420 4983FA00                cmp r10, 0
 18808 0000B424 7424                    je .L_lambda_opt_stack_shrink_loop_exit_009a
 18809 0000B426 4889C1                  mov rcx, rax
 18810 0000B429 498B10                  mov rdx, [r8]
 18811 0000B42C BF11000000              mov rdi, 17
 18812 0000B431 E811740000              call malloc
 18813 0000B436 C60021                  mov byte [rax], T_pair
 18814 0000B439 48894809                mov SOB_PAIR_CDR(rax), rcx
 18815 0000B43D 48895001                mov SOB_PAIR_CAR(rax), rdx
 18816 0000B441 4983E808                sub r8, 8
 18817 0000B445 49FFCA                  dec r10
 18818 0000B448 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_009a
 18819                                  .L_lambda_opt_stack_shrink_loop_exit_009a:
 18820 0000B44A 4889442418              mov [rsp+8*(2+1)], rax
 18821 0000B44F 41BA01000000            mov r10, 1
 18822 0000B455 4C89542410              mov [rsp+16], r10
 18823 0000B45A 4989E4                  mov r12, rsp
 18824 0000B45D 4983C418                add r12, 8*(2+1)
 18825 0000B461 4C2B6C2410              sub r13, [rsp+16]
 18826 0000B466 4D89EA                  mov r10, r13
 18827 0000B469 49C1E203                shl r10, 3
 18828 0000B46D 4D89D7                  mov r15, r10
 18829 0000B470 4D01E2                  add r10, r12
 18830 0000B473 4C8B4C2410              mov r9, [rsp+16]
 18831 0000B478 4983C103                add r9, 3
 18832                                  .L_lambda_opt_params_loop_01ce:
 18833 0000B47C 4983F900                cmp r9, 0
 18834 0000B480 7414                    je .L_lambda_opt_params_end_01ce
 18835 0000B482 4D8B3424                mov r14, [r12]
 18836 0000B486 4D8932                  mov [r10], r14
 18837 0000B489 4983EC08                sub r12, 8
 18838 0000B48D 4983EA08                sub r10, 8
 18839 0000B491 49FFC9                  dec r9
 18840 0000B494 EBE6                    jmp .L_lambda_opt_params_loop_01ce
 18841                                  .L_lambda_opt_params_end_01ce:
 18842 0000B496 4C01FC                  add rsp, r15
 18843                                  .L_lambda_opt_stack_adjusted_009a:
 18844 0000B499 4C8B4D00                mov r9, [rbp]
 18845 0000B49D C8000000                enter 0, 0
 18846 0000B4A1 488B4520                mov rax, qword [rbp + 32]
 18847 0000B4A5 50                      	push rax
 18848 0000B4A6 488B0425[C0000000]      	mov rax, qword [free_var_24]
 18849 0000B4AE 50                      	push rax
 18850 0000B4AF 6A02                    	push 2
 18851 0000B4B1 488B0425[D8020000]      	mov rax, qword [free_var_91]
 18852 0000B4B9 803805                  	cmp byte [rax], T_closure 
 18853 0000B4BC 0F8540830000                    jne L_code_ptr_error
 18854                                  
 18855 0000B4C2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18856                                  
 18857 0000B4C6 53                              push rbx
 18858                                  
 18859 0000B4C7 FF5009                          call SOB_CLOSURE_CODE(rax)
 18860                                  
 18861 0000B4CA 50                              	push rax
 18862 0000B4CB 488B4510                mov rax, qword [rbp + 16]
 18863 0000B4CF 488B00                  mov rax, qword [rax + 0]
 18864 0000B4D2 488B00                  mov rax, qword [rax + 0]
 18865 0000B4D5 50                      	push rax
 18866 0000B4D6 6A02                    	push 2
 18867 0000B4D8 488B0425[C8020000]      	mov rax, qword [free_var_89]
 18868                                  .L_lambda_simple_arity_check_ok_08c4:
 18869 0000B4E0 803805                  	cmp byte [rax], T_closure
 18870                                  
 18871 0000B4E3 0F8519830000                    jne L_code_ptr_error                      ; rax <- proc
 18872                                  
 18873                                  
 18874 0000B4E9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 18875                                  
 18876 0000B4ED 53                              push rbx                                  ; env pushed
 18877                                  
 18878 0000B4EE FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 18879                                  
 18880                                          ; sagydebug
 18881                                  
 18882 0000B4F1 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 18883                                  
 18884                                          
 18885                                          
 18886 0000B4F4 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 18887                                  
 18888 0000B4F8 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 18889                                  
 18890                                  
 18891 0000B4FD 4D89CA                          mov r10, r9
 18892 0000B500 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 18893                                          
 18894 0000B504 4D89D7                          mov r15, r10
 18895 0000B507 4983C7FF                        add r15, -1
 18896                                                                                         
 18897 0000B50B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 18898 0000B50E 4983C404                        add r12, 4
 18899 0000B512 4983C4FF                        add r12, -1
 18900                                  
 18901 0000B516 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 18902                                  .L_tc_recycle_frame_loop_04bf:
 18903 0000B51C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 18904                                  
 18905 0000B520 4E8974E500                      mov [rbp + (r12 * 8)], r14
 18906                                  
 18907                                  
 18908                                  
 18909 0000B525 41BE00000000                    mov r14, 0                                ; clean box
 18910                                  
 18911                                  
 18912 0000B52B 4983C7FF                        add r15, -1           
 18913 0000B52F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18914                                  
 18915 0000B533 4983C4FF                        add r12, -1 
 18916                                  
 18917 0000B537 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18918 0000B53B 75DF                    	jne .L_tc_recycle_frame_loop_04bf
 18919                                  .L_tc_recycle_frame_done_04bf:
 18920                                  ;this pop rbp in sot to the right place
 18921 0000B53D 4D89C7                  mov r15, r8
 18922                                  
 18923 0000B540 4983C704                        add r15, 4
 18924                                  
 18925 0000B544 49C1E703                        shl r15, 3
 18926                                  
 18927 0000B548 4C01FC                          add rsp, r15
 18928 0000B54B 5D                      	pop rbp                                  ; restore the old rbp
 18929                                  
 18930 0000B54C 488B4D00                        mov rcx, qword [rbp]
 18931 0000B550 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18932                                            ; rbx <- code(proc)
 18933                                  
 18934 0000B554 FFE3                            jmp rbx
 18935 0000B556 C9                      leave
 18936 0000B557 4C8B4D00                mov r9, [rbp]
 18937 0000B55B C21800                  ret 8 * (3 + 0)
 18938                                  .L_lambda_opt_end_009a:	; new closure is in rax
 18939 0000B55E C9                      	leave
 18940 0000B55F C21800                  	ret 8 * (2 + 1)
 18941                                  .L_lambda_simple_end_0405:	; new closure is in rax
 18942 0000B562 50                      	push rax
 18943 0000B563 6A01                    	push 1
 18944 0000B565 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18945 0000B56A E8D8720000              	call malloc
 18946 0000B56F 50                      	push rax
 18947 0000B570 BF00000000              	mov rdi, 8 * 0	; new rib
 18948 0000B575 E8CD720000              	call malloc
 18949 0000B57A 50                      	push rax
 18950 0000B57B BF08000000              	mov rdi, 8 * 1	; extended env
 18951 0000B580 E8C2720000              	call malloc
 18952 0000B585 488B7D10                	mov rdi, ENV
 18953 0000B589 BE00000000              	mov rsi, 0
 18954 0000B58E BA01000000              	mov rdx, 1
 18955                                  .L_lambda_simple_env_loop_0406:	; ext_env[i + 1] <-- env[i]
 18956 0000B593 4883FE00                	cmp rsi, 0
 18957 0000B597 7410                    	je .L_lambda_simple_env_end_0406
 18958 0000B599 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18959 0000B59D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18960 0000B5A1 48FFC6                  	inc rsi
 18961 0000B5A4 48FFC2                  	inc rdx
 18962 0000B5A7 EBEA                    	jmp .L_lambda_simple_env_loop_0406
 18963                                  .L_lambda_simple_env_end_0406:
 18964 0000B5A9 5B                      	pop rbx
 18965 0000B5AA BE00000000              	mov rsi, 0
 18966                                  .L_lambda_simple_params_loop_0406:	; copy params
 18967 0000B5AF 4883FE00                	cmp rsi, 0
 18968 0000B5B3 740E                    	je .L_lambda_simple_params_end_0406
 18969 0000B5B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18970 0000B5BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18971 0000B5BE 48FFC6                  	inc rsi
 18972 0000B5C1 EBEC                    	jmp .L_lambda_simple_params_loop_0406
 18973                                  .L_lambda_simple_params_end_0406:
 18974 0000B5C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18975 0000B5C6 4889C3                  	mov rbx, rax
 18976 0000B5C9 58                      	pop rax
 18977 0000B5CA C60005                  	mov byte [rax], T_closure
 18978 0000B5CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18979 0000B5D1 48C74009[DEB50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0406
 18980 0000B5D9 E915010000              	jmp .L_lambda_simple_end_0406
 18981                                  .L_lambda_simple_code_0406:	; lambda-simple body
 18982 0000B5DE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18983 0000B5E4 740B                    	je .L_lambda_simple_arity_check_ok_08c5
 18984 0000B5E6 FF742410                	push qword [rsp + 8 * 2]
 18985 0000B5EA 6A01                    	push 1
 18986 0000B5EC E90F720000              	jmp L_error_incorrect_arity_simple
 18987                                  .L_lambda_simple_arity_check_ok_08c5:
 18988 0000B5F1 C8000000                	enter 0, 0
 18989 0000B5F5 488B0425[30030000]      	mov rax, qword [free_var_102]
 18990 0000B5FD 50                      	push rax
 18991 0000B5FE 6A01                    	push 1
 18992 0000B600 488B4520                mov rax, qword [rbp + 32]
 18993 0000B604 803805                  	cmp byte [rax], T_closure 
 18994 0000B607 0F85F5810000                    jne L_code_ptr_error
 18995                                  
 18996 0000B60D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18997                                  
 18998 0000B611 53                              push rbx
 18999                                  
 19000 0000B612 FF5009                          call SOB_CLOSURE_CODE(rax)
 19001                                  
 19002 0000B615 48890425[60030000]              	mov qword [free_var_108], rax
 19003 0000B61D 48B8-                   	mov rax, sob_void
 19003 0000B61F [0000000000000000] 
 19004                                  
 19005 0000B627 488B0425[38030000]      	mov rax, qword [free_var_103]
 19006 0000B62F 50                      	push rax
 19007 0000B630 6A01                    	push 1
 19008 0000B632 488B4520                mov rax, qword [rbp + 32]
 19009 0000B636 803805                  	cmp byte [rax], T_closure 
 19010 0000B639 0F85C3810000                    jne L_code_ptr_error
 19011                                  
 19012 0000B63F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19013                                  
 19014 0000B643 53                              push rbx
 19015                                  
 19016 0000B644 FF5009                          call SOB_CLOSURE_CODE(rax)
 19017                                  
 19018 0000B647 48890425[68030000]              	mov qword [free_var_109], rax
 19019 0000B64F 48B8-                   	mov rax, sob_void
 19019 0000B651 [0000000000000000] 
 19020                                  
 19021 0000B659 488B0425[50030000]      	mov rax, qword [free_var_106]
 19022 0000B661 50                      	push rax
 19023 0000B662 6A01                    	push 1
 19024 0000B664 488B4520                mov rax, qword [rbp + 32]
 19025 0000B668 803805                  	cmp byte [rax], T_closure 
 19026 0000B66B 0F8591810000                    jne L_code_ptr_error
 19027                                  
 19028 0000B671 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19029                                  
 19030 0000B675 53                              push rbx
 19031                                  
 19032 0000B676 FF5009                          call SOB_CLOSURE_CODE(rax)
 19033                                  
 19034 0000B679 48890425[70030000]              	mov qword [free_var_110], rax
 19035 0000B681 48B8-                   	mov rax, sob_void
 19035 0000B683 [0000000000000000] 
 19036                                  
 19037 0000B68B 488B0425[40030000]      	mov rax, qword [free_var_104]
 19038 0000B693 50                      	push rax
 19039 0000B694 6A01                    	push 1
 19040 0000B696 488B4520                mov rax, qword [rbp + 32]
 19041 0000B69A 803805                  	cmp byte [rax], T_closure 
 19042 0000B69D 0F855F810000                    jne L_code_ptr_error
 19043                                  
 19044 0000B6A3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19045                                  
 19046 0000B6A7 53                              push rbx
 19047                                  
 19048 0000B6A8 FF5009                          call SOB_CLOSURE_CODE(rax)
 19049                                  
 19050 0000B6AB 48890425[78030000]              	mov qword [free_var_111], rax
 19051 0000B6B3 48B8-                   	mov rax, sob_void
 19051 0000B6B5 [0000000000000000] 
 19052                                  
 19053 0000B6BD 488B0425[48030000]      	mov rax, qword [free_var_105]
 19054 0000B6C5 50                      	push rax
 19055 0000B6C6 6A01                    	push 1
 19056 0000B6C8 488B4520                mov rax, qword [rbp + 32]
 19057 0000B6CC 803805                  	cmp byte [rax], T_closure 
 19058 0000B6CF 0F852D810000                    jne L_code_ptr_error
 19059                                  
 19060 0000B6D5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19061                                  
 19062 0000B6D9 53                              push rbx
 19063                                  
 19064 0000B6DA FF5009                          call SOB_CLOSURE_CODE(rax)
 19065                                  
 19066 0000B6DD 48890425[80030000]              	mov qword [free_var_112], rax
 19067 0000B6E5 48B8-                   	mov rax, sob_void
 19067 0000B6E7 [0000000000000000] 
 19068 0000B6EF C9                      	leave
 19069 0000B6F0 C21800                  	ret 8 * (2 + 1)
 19070                                  .L_lambda_simple_end_0406:	; new closure is in rax
 19071 0000B6F3 803805                  	cmp byte [rax], T_closure 
 19072 0000B6F6 0F8506810000                    jne L_code_ptr_error
 19073                                  
 19074 0000B6FC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19075                                  
 19076 0000B700 53                              push rbx
 19077                                  
 19078 0000B701 FF5009                          call SOB_CLOSURE_CODE(rax)
 19079                                  
 19080                                          
 19081 0000B704 4889C7                  	mov rdi, rax
 19082 0000B707 E84C710000              	call print_sexpr_if_not_void
 19083                                  
 19084 0000B70C 48B8-                   	mov rax, qword (L_constants + 0)
 19084 0000B70E [0000000000000000] 
 19085 0000B716 48890425[88030000]      	mov qword [free_var_113], rax
 19086 0000B71E 48B8-                   	mov rax, sob_void
 19086 0000B720 [0000000000000000] 
 19087                                  
 19088 0000B728 4889C7                  	mov rdi, rax
 19089 0000B72B E828710000              	call print_sexpr_if_not_void
 19090                                  
 19091 0000B730 48B8-                   	mov rax, qword (L_constants + 0)
 19091 0000B732 [0000000000000000] 
 19092 0000B73A 48890425[90030000]      	mov qword [free_var_114], rax
 19093 0000B742 48B8-                   	mov rax, sob_void
 19093 0000B744 [0000000000000000] 
 19094                                  
 19095 0000B74C 4889C7                  	mov rdi, rax
 19096 0000B74F E804710000              	call print_sexpr_if_not_void
 19097                                  
 19098 0000B754 48B8-                   	mov rax, qword (L_constants + 341)
 19098 0000B756 [5501000000000000] 
 19099 0000B75E 50                      	push rax
 19100 0000B75F 6A01                    	push 1
 19101 0000B761 488B0425[C0000000]      	mov rax, qword [free_var_24]
 19102 0000B769 803805                  	cmp byte [rax], T_closure 
 19103 0000B76C 0F8590800000                    jne L_code_ptr_error
 19104                                  
 19105 0000B772 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19106                                  
 19107 0000B776 53                              push rbx
 19108                                  
 19109 0000B777 FF5009                          call SOB_CLOSURE_CODE(rax)
 19110                                  
 19111 0000B77A 50                              	push rax
 19112 0000B77B 48B8-                   	mov rax, qword (L_constants + 345)
 19112 0000B77D [5901000000000000] 
 19113 0000B785 50                      	push rax
 19114 0000B786 6A01                    	push 1
 19115 0000B788 488B0425[C0000000]      	mov rax, qword [free_var_24]
 19116 0000B790 803805                  	cmp byte [rax], T_closure 
 19117 0000B793 0F8569800000                    jne L_code_ptr_error
 19118                                  
 19119 0000B799 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19120                                  
 19121 0000B79D 53                              push rbx
 19122                                  
 19123 0000B79E FF5009                          call SOB_CLOSURE_CODE(rax)
 19124                                  
 19125 0000B7A1 50                              	push rax
 19126 0000B7A2 6A02                    	push 2
 19127 0000B7A4 488B0425[10030000]      	mov rax, qword [free_var_98]
 19128 0000B7AC 803805                  	cmp byte [rax], T_closure 
 19129 0000B7AF 0F854D800000                    jne L_code_ptr_error
 19130                                  
 19131 0000B7B5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19132                                  
 19133 0000B7B9 53                              push rbx
 19134                                  
 19135 0000B7BA FF5009                          call SOB_CLOSURE_CODE(rax)
 19136                                  
 19137 0000B7BD 50                              	push rax
 19138 0000B7BE 6A01                    	push 1
 19139 0000B7C0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19140 0000B7C5 E87D700000              	call malloc
 19141 0000B7CA 50                      	push rax
 19142 0000B7CB BF00000000              	mov rdi, 8 * 0	; new rib
 19143 0000B7D0 E872700000              	call malloc
 19144 0000B7D5 50                      	push rax
 19145 0000B7D6 BF08000000              	mov rdi, 8 * 1	; extended env
 19146 0000B7DB E867700000              	call malloc
 19147 0000B7E0 488B7D10                	mov rdi, ENV
 19148 0000B7E4 BE00000000              	mov rsi, 0
 19149 0000B7E9 BA01000000              	mov rdx, 1
 19150                                  .L_lambda_simple_env_loop_0407:	; ext_env[i + 1] <-- env[i]
 19151 0000B7EE 4883FE00                	cmp rsi, 0
 19152 0000B7F2 7410                    	je .L_lambda_simple_env_end_0407
 19153 0000B7F4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19154 0000B7F8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19155 0000B7FC 48FFC6                  	inc rsi
 19156 0000B7FF 48FFC2                  	inc rdx
 19157 0000B802 EBEA                    	jmp .L_lambda_simple_env_loop_0407
 19158                                  .L_lambda_simple_env_end_0407:
 19159 0000B804 5B                      	pop rbx
 19160 0000B805 BE00000000              	mov rsi, 0
 19161                                  .L_lambda_simple_params_loop_0407:	; copy params
 19162 0000B80A 4883FE00                	cmp rsi, 0
 19163 0000B80E 740E                    	je .L_lambda_simple_params_end_0407
 19164 0000B810 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19165 0000B815 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19166 0000B819 48FFC6                  	inc rsi
 19167 0000B81C EBEC                    	jmp .L_lambda_simple_params_loop_0407
 19168                                  .L_lambda_simple_params_end_0407:
 19169 0000B81E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19170 0000B821 4889C3                  	mov rbx, rax
 19171 0000B824 58                      	pop rax
 19172 0000B825 C60005                  	mov byte [rax], T_closure
 19173 0000B828 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19174 0000B82C 48C74009[39B80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0407
 19175 0000B834 E987030000              	jmp .L_lambda_simple_end_0407
 19176                                  .L_lambda_simple_code_0407:	; lambda-simple body
 19177 0000B839 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19178 0000B83F 740B                    	je .L_lambda_simple_arity_check_ok_08c6
 19179 0000B841 FF742410                	push qword [rsp + 8 * 2]
 19180 0000B845 6A01                    	push 1
 19181 0000B847 E9B46F0000              	jmp L_error_incorrect_arity_simple
 19182                                  .L_lambda_simple_arity_check_ok_08c6:
 19183 0000B84C C8000000                	enter 0, 0
 19184 0000B850 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19185 0000B855 E8ED6F0000              	call malloc
 19186 0000B85A 50                      	push rax
 19187 0000B85B BF08000000              	mov rdi, 8 * 1	; new rib
 19188 0000B860 E8E26F0000              	call malloc
 19189 0000B865 50                      	push rax
 19190 0000B866 BF10000000              	mov rdi, 8 * 2	; extended env
 19191 0000B86B E8D76F0000              	call malloc
 19192 0000B870 488B7D10                	mov rdi, ENV
 19193 0000B874 BE00000000              	mov rsi, 0
 19194 0000B879 BA01000000              	mov rdx, 1
 19195                                  .L_lambda_simple_env_loop_0408:	; ext_env[i + 1] <-- env[i]
 19196 0000B87E 4883FE01                	cmp rsi, 1
 19197 0000B882 7410                    	je .L_lambda_simple_env_end_0408
 19198 0000B884 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19199 0000B888 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19200 0000B88C 48FFC6                  	inc rsi
 19201 0000B88F 48FFC2                  	inc rdx
 19202 0000B892 EBEA                    	jmp .L_lambda_simple_env_loop_0408
 19203                                  .L_lambda_simple_env_end_0408:
 19204 0000B894 5B                      	pop rbx
 19205 0000B895 BE00000000              	mov rsi, 0
 19206                                  .L_lambda_simple_params_loop_0408:	; copy params
 19207 0000B89A 4883FE01                	cmp rsi, 1
 19208 0000B89E 740E                    	je .L_lambda_simple_params_end_0408
 19209 0000B8A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19210 0000B8A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19211 0000B8A9 48FFC6                  	inc rsi
 19212 0000B8AC EBEC                    	jmp .L_lambda_simple_params_loop_0408
 19213                                  .L_lambda_simple_params_end_0408:
 19214 0000B8AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19215 0000B8B1 4889C3                  	mov rbx, rax
 19216 0000B8B4 58                      	pop rax
 19217 0000B8B5 C60005                  	mov byte [rax], T_closure
 19218 0000B8B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19219 0000B8BC 48C74009[C9B80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0408
 19220 0000B8C4 E92B010000              	jmp .L_lambda_simple_end_0408
 19221                                  .L_lambda_simple_code_0408:	; lambda-simple body
 19222 0000B8C9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19223 0000B8CF 740B                    	je .L_lambda_simple_arity_check_ok_08c7
 19224 0000B8D1 FF742410                	push qword [rsp + 8 * 2]
 19225 0000B8D5 6A01                    	push 1
 19226 0000B8D7 E9246F0000              	jmp L_error_incorrect_arity_simple
 19227                                  .L_lambda_simple_arity_check_ok_08c7:
 19228 0000B8DC C8000000                	enter 0, 0
 19229 0000B8E0 48B8-                   	mov rax, qword (L_constants + 343)
 19229 0000B8E2 [5701000000000000] 
 19230 0000B8EA 50                      	push rax
 19231 0000B8EB 488B4520                mov rax, qword [rbp + 32]
 19232 0000B8EF 50                      	push rax
 19233 0000B8F0 48B8-                   	mov rax, qword (L_constants + 341)
 19233 0000B8F2 [5501000000000000] 
 19234 0000B8FA 50                      	push rax
 19235 0000B8FB 6A03                    	push 3
 19236 0000B8FD 488B0425[68030000]      	mov rax, qword [free_var_109]
 19237 0000B905 803805                  	cmp byte [rax], T_closure 
 19238 0000B908 0F85F47E0000                    jne L_code_ptr_error
 19239                                  
 19240 0000B90E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19241                                  
 19242 0000B912 53                              push rbx
 19243                                  
 19244 0000B913 FF5009                          call SOB_CLOSURE_CODE(rax)
 19245                                  
 19246 0000B916 483D[02000000]                  	cmp rax, sob_boolean_false
 19247 0000B91C 0F84CA000000            	je .L_if_else_026d
 19248 0000B922 488B4510                mov rax, qword [rbp + 16]
 19249 0000B926 488B00                  mov rax, qword [rax + 0]
 19250 0000B929 488B00                  mov rax, qword [rax + 0]
 19251 0000B92C 50                      	push rax
 19252 0000B92D 488B4520                mov rax, qword [rbp + 32]
 19253 0000B931 50                      	push rax
 19254 0000B932 6A01                    	push 1
 19255 0000B934 488B0425[C0000000]      	mov rax, qword [free_var_24]
 19256 0000B93C 803805                  	cmp byte [rax], T_closure 
 19257 0000B93F 0F85BD7E0000                    jne L_code_ptr_error
 19258                                  
 19259 0000B945 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19260                                  
 19261 0000B949 53                              push rbx
 19262                                  
 19263 0000B94A FF5009                          call SOB_CLOSURE_CODE(rax)
 19264                                  
 19265 0000B94D 50                              	push rax
 19266 0000B94E 6A02                    	push 2
 19267 0000B950 488B0425[08030000]      	mov rax, qword [free_var_97]
 19268 0000B958 803805                  	cmp byte [rax], T_closure 
 19269 0000B95B 0F85A17E0000                    jne L_code_ptr_error
 19270                                  
 19271 0000B961 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19272                                  
 19273 0000B965 53                              push rbx
 19274                                  
 19275 0000B966 FF5009                          call SOB_CLOSURE_CODE(rax)
 19276                                  
 19277 0000B969 50                              	push rax
 19278 0000B96A 6A01                    	push 1
 19279 0000B96C 488B0425[C8000000]      	mov rax, qword [free_var_25]
 19280                                  .L_lambda_simple_arity_check_ok_08c8:
 19281 0000B974 803805                  	cmp byte [rax], T_closure
 19282                                  
 19283 0000B977 0F85857E0000                    jne L_code_ptr_error                      ; rax <- proc
 19284                                  
 19285                                  
 19286 0000B97D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19287                                  
 19288 0000B981 53                              push rbx                                  ; env pushed
 19289                                  
 19290 0000B982 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19291                                  
 19292                                          ; sagydebug
 19293                                  
 19294 0000B985 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19295                                  
 19296                                          
 19297                                          
 19298 0000B988 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19299                                  
 19300 0000B98C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19301                                  
 19302                                  
 19303 0000B991 4D89CA                          mov r10, r9
 19304 0000B994 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 19305                                          
 19306 0000B998 4D89D7                          mov r15, r10
 19307 0000B99B 4983C7FF                        add r15, -1
 19308                                                                                         
 19309 0000B99F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19310 0000B9A2 4983C404                        add r12, 4
 19311 0000B9A6 4983C4FF                        add r12, -1
 19312                                  
 19313 0000B9AA 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19314                                  .L_tc_recycle_frame_loop_04c0:
 19315 0000B9B0 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 19316                                  
 19317 0000B9B4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19318                                  
 19319                                  
 19320                                  
 19321 0000B9B9 41BE00000000                    mov r14, 0                                ; clean box
 19322                                  
 19323                                  
 19324 0000B9BF 4983C7FF                        add r15, -1           
 19325 0000B9C3 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19326                                  
 19327 0000B9C7 4983C4FF                        add r12, -1 
 19328                                  
 19329 0000B9CB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19330 0000B9CF 75DF                    	jne .L_tc_recycle_frame_loop_04c0
 19331                                  .L_tc_recycle_frame_done_04c0:
 19332                                  ;this pop rbp in sot to the right place
 19333 0000B9D1 4D89C7                  mov r15, r8
 19334                                  
 19335 0000B9D4 4983C704                        add r15, 4
 19336                                  
 19337 0000B9D8 49C1E703                        shl r15, 3
 19338                                  
 19339 0000B9DC 4C01FC                          add rsp, r15
 19340 0000B9DF 5D                      	pop rbp                                  ; restore the old rbp
 19341                                  
 19342 0000B9E0 488B4D00                        mov rcx, qword [rbp]
 19343 0000B9E4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19344                                            ; rbx <- code(proc)
 19345                                  
 19346 0000B9E8 FFE3                            jmp rbx
 19347 0000B9EA EB04                    	jmp .L_if_end_026d
 19348                                  	.L_if_else_026d:
 19349 0000B9EC 488B4520                	mov rax, qword [rbp + 32]
 19350                                  	.L_if_end_026d:
 19351 0000B9F0 C9                      	leave
 19352 0000B9F1 C21800                  	ret 8 * (2 + 1)
 19353                                  .L_lambda_simple_end_0408:	; new closure is in rax
 19354 0000B9F4 48890425[88030000]      	mov qword [free_var_113], rax
 19355 0000B9FC 48B8-                   	mov rax, sob_void
 19355 0000B9FE [0000000000000000] 
 19356                                  
 19357 0000BA06 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19358 0000BA0B E8376E0000              	call malloc
 19359 0000BA10 50                      	push rax
 19360 0000BA11 BF08000000              	mov rdi, 8 * 1	; new rib
 19361 0000BA16 E82C6E0000              	call malloc
 19362 0000BA1B 50                      	push rax
 19363 0000BA1C BF10000000              	mov rdi, 8 * 2	; extended env
 19364 0000BA21 E8216E0000              	call malloc
 19365 0000BA26 488B7D10                	mov rdi, ENV
 19366 0000BA2A BE00000000              	mov rsi, 0
 19367 0000BA2F BA01000000              	mov rdx, 1
 19368                                  .L_lambda_simple_env_loop_0409:	; ext_env[i + 1] <-- env[i]
 19369 0000BA34 4883FE01                	cmp rsi, 1
 19370 0000BA38 7410                    	je .L_lambda_simple_env_end_0409
 19371 0000BA3A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19372 0000BA3E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19373 0000BA42 48FFC6                  	inc rsi
 19374 0000BA45 48FFC2                  	inc rdx
 19375 0000BA48 EBEA                    	jmp .L_lambda_simple_env_loop_0409
 19376                                  .L_lambda_simple_env_end_0409:
 19377 0000BA4A 5B                      	pop rbx
 19378 0000BA4B BE00000000              	mov rsi, 0
 19379                                  .L_lambda_simple_params_loop_0409:	; copy params
 19380 0000BA50 4883FE01                	cmp rsi, 1
 19381 0000BA54 740E                    	je .L_lambda_simple_params_end_0409
 19382 0000BA56 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19383 0000BA5B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19384 0000BA5F 48FFC6                  	inc rsi
 19385 0000BA62 EBEC                    	jmp .L_lambda_simple_params_loop_0409
 19386                                  .L_lambda_simple_params_end_0409:
 19387 0000BA64 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19388 0000BA67 4889C3                  	mov rbx, rax
 19389 0000BA6A 58                      	pop rax
 19390 0000BA6B C60005                  	mov byte [rax], T_closure
 19391 0000BA6E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19392 0000BA72 48C74009[7FBA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0409
 19393 0000BA7A E92B010000              	jmp .L_lambda_simple_end_0409
 19394                                  .L_lambda_simple_code_0409:	; lambda-simple body
 19395 0000BA7F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19396 0000BA85 740B                    	je .L_lambda_simple_arity_check_ok_08c9
 19397 0000BA87 FF742410                	push qword [rsp + 8 * 2]
 19398 0000BA8B 6A01                    	push 1
 19399 0000BA8D E96E6D0000              	jmp L_error_incorrect_arity_simple
 19400                                  .L_lambda_simple_arity_check_ok_08c9:
 19401 0000BA92 C8000000                	enter 0, 0
 19402 0000BA96 48B8-                   	mov rax, qword (L_constants + 347)
 19402 0000BA98 [5B01000000000000] 
 19403 0000BAA0 50                      	push rax
 19404 0000BAA1 488B4520                mov rax, qword [rbp + 32]
 19405 0000BAA5 50                      	push rax
 19406 0000BAA6 48B8-                   	mov rax, qword (L_constants + 345)
 19406 0000BAA8 [5901000000000000] 
 19407 0000BAB0 50                      	push rax
 19408 0000BAB1 6A03                    	push 3
 19409 0000BAB3 488B0425[68030000]      	mov rax, qword [free_var_109]
 19410 0000BABB 803805                  	cmp byte [rax], T_closure 
 19411 0000BABE 0F853E7D0000                    jne L_code_ptr_error
 19412                                  
 19413 0000BAC4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19414                                  
 19415 0000BAC8 53                              push rbx
 19416                                  
 19417 0000BAC9 FF5009                          call SOB_CLOSURE_CODE(rax)
 19418                                  
 19419 0000BACC 483D[02000000]                  	cmp rax, sob_boolean_false
 19420 0000BAD2 0F84CA000000            	je .L_if_else_026e
 19421 0000BAD8 488B4510                mov rax, qword [rbp + 16]
 19422 0000BADC 488B00                  mov rax, qword [rax + 0]
 19423 0000BADF 488B00                  mov rax, qword [rax + 0]
 19424 0000BAE2 50                      	push rax
 19425 0000BAE3 488B4520                mov rax, qword [rbp + 32]
 19426 0000BAE7 50                      	push rax
 19427 0000BAE8 6A01                    	push 1
 19428 0000BAEA 488B0425[C0000000]      	mov rax, qword [free_var_24]
 19429 0000BAF2 803805                  	cmp byte [rax], T_closure 
 19430 0000BAF5 0F85077D0000                    jne L_code_ptr_error
 19431                                  
 19432 0000BAFB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19433                                  
 19434 0000BAFF 53                              push rbx
 19435                                  
 19436 0000BB00 FF5009                          call SOB_CLOSURE_CODE(rax)
 19437                                  
 19438 0000BB03 50                              	push rax
 19439 0000BB04 6A02                    	push 2
 19440 0000BB06 488B0425[10030000]      	mov rax, qword [free_var_98]
 19441 0000BB0E 803805                  	cmp byte [rax], T_closure 
 19442 0000BB11 0F85EB7C0000                    jne L_code_ptr_error
 19443                                  
 19444 0000BB17 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19445                                  
 19446 0000BB1B 53                              push rbx
 19447                                  
 19448 0000BB1C FF5009                          call SOB_CLOSURE_CODE(rax)
 19449                                  
 19450 0000BB1F 50                              	push rax
 19451 0000BB20 6A01                    	push 1
 19452 0000BB22 488B0425[C8000000]      	mov rax, qword [free_var_25]
 19453                                  .L_lambda_simple_arity_check_ok_08ca:
 19454 0000BB2A 803805                  	cmp byte [rax], T_closure
 19455                                  
 19456 0000BB2D 0F85CF7C0000                    jne L_code_ptr_error                      ; rax <- proc
 19457                                  
 19458                                  
 19459 0000BB33 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19460                                  
 19461 0000BB37 53                              push rbx                                  ; env pushed
 19462                                  
 19463 0000BB38 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19464                                  
 19465                                          ; sagydebug
 19466                                  
 19467 0000BB3B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19468                                  
 19469                                          
 19470                                          
 19471 0000BB3E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19472                                  
 19473 0000BB42 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19474                                  
 19475                                  
 19476 0000BB47 4D89CA                          mov r10, r9
 19477 0000BB4A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 19478                                          
 19479 0000BB4E 4D89D7                          mov r15, r10
 19480 0000BB51 4983C7FF                        add r15, -1
 19481                                                                                         
 19482 0000BB55 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19483 0000BB58 4983C404                        add r12, 4
 19484 0000BB5C 4983C4FF                        add r12, -1
 19485                                  
 19486 0000BB60 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19487                                  .L_tc_recycle_frame_loop_04c1:
 19488 0000BB66 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 19489                                  
 19490 0000BB6A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19491                                  
 19492                                  
 19493                                  
 19494 0000BB6F 41BE00000000                    mov r14, 0                                ; clean box
 19495                                  
 19496                                  
 19497 0000BB75 4983C7FF                        add r15, -1           
 19498 0000BB79 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19499                                  
 19500 0000BB7D 4983C4FF                        add r12, -1 
 19501                                  
 19502 0000BB81 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19503 0000BB85 75DF                    	jne .L_tc_recycle_frame_loop_04c1
 19504                                  .L_tc_recycle_frame_done_04c1:
 19505                                  ;this pop rbp in sot to the right place
 19506 0000BB87 4D89C7                  mov r15, r8
 19507                                  
 19508 0000BB8A 4983C704                        add r15, 4
 19509                                  
 19510 0000BB8E 49C1E703                        shl r15, 3
 19511                                  
 19512 0000BB92 4C01FC                          add rsp, r15
 19513 0000BB95 5D                      	pop rbp                                  ; restore the old rbp
 19514                                  
 19515 0000BB96 488B4D00                        mov rcx, qword [rbp]
 19516 0000BB9A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19517                                            ; rbx <- code(proc)
 19518                                  
 19519 0000BB9E FFE3                            jmp rbx
 19520 0000BBA0 EB04                    	jmp .L_if_end_026e
 19521                                  	.L_if_else_026e:
 19522 0000BBA2 488B4520                	mov rax, qword [rbp + 32]
 19523                                  	.L_if_end_026e:
 19524 0000BBA6 C9                      	leave
 19525 0000BBA7 C21800                  	ret 8 * (2 + 1)
 19526                                  .L_lambda_simple_end_0409:	; new closure is in rax
 19527 0000BBAA 48890425[90030000]      	mov qword [free_var_114], rax
 19528 0000BBB2 48B8-                   	mov rax, sob_void
 19528 0000BBB4 [0000000000000000] 
 19529 0000BBBC C9                      	leave
 19530 0000BBBD C21800                  	ret 8 * (2 + 1)
 19531                                  .L_lambda_simple_end_0407:	; new closure is in rax
 19532 0000BBC0 803805                  	cmp byte [rax], T_closure 
 19533 0000BBC3 0F85397C0000                    jne L_code_ptr_error
 19534                                  
 19535 0000BBC9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19536                                  
 19537 0000BBCD 53                              push rbx
 19538                                  
 19539 0000BBCE FF5009                          call SOB_CLOSURE_CODE(rax)
 19540                                  
 19541                                          
 19542 0000BBD1 4889C7                  	mov rdi, rax
 19543 0000BBD4 E87F6C0000              	call print_sexpr_if_not_void
 19544                                  
 19545 0000BBD9 48B8-                   	mov rax, qword (L_constants + 0)
 19545 0000BBDB [0000000000000000] 
 19546 0000BBE3 48890425[98030000]      	mov qword [free_var_115], rax
 19547 0000BBEB 48B8-                   	mov rax, sob_void
 19547 0000BBED [0000000000000000] 
 19548                                  
 19549 0000BBF5 4889C7                  	mov rdi, rax
 19550 0000BBF8 E85B6C0000              	call print_sexpr_if_not_void
 19551                                  
 19552 0000BBFD 48B8-                   	mov rax, qword (L_constants + 0)
 19552 0000BBFF [0000000000000000] 
 19553 0000BC07 48890425[A0030000]      	mov qword [free_var_116], rax
 19554 0000BC0F 48B8-                   	mov rax, sob_void
 19554 0000BC11 [0000000000000000] 
 19555                                  
 19556 0000BC19 4889C7                  	mov rdi, rax
 19557 0000BC1C E8376C0000              	call print_sexpr_if_not_void
 19558                                  
 19559 0000BC21 48B8-                   	mov rax, qword (L_constants + 0)
 19559 0000BC23 [0000000000000000] 
 19560 0000BC2B 48890425[A8030000]      	mov qword [free_var_117], rax
 19561 0000BC33 48B8-                   	mov rax, sob_void
 19561 0000BC35 [0000000000000000] 
 19562                                  
 19563 0000BC3D 4889C7                  	mov rdi, rax
 19564 0000BC40 E8136C0000              	call print_sexpr_if_not_void
 19565                                  
 19566 0000BC45 48B8-                   	mov rax, qword (L_constants + 0)
 19566 0000BC47 [0000000000000000] 
 19567 0000BC4F 48890425[B0030000]      	mov qword [free_var_118], rax
 19568 0000BC57 48B8-                   	mov rax, sob_void
 19568 0000BC59 [0000000000000000] 
 19569                                  
 19570 0000BC61 4889C7                  	mov rdi, rax
 19571 0000BC64 E8EF6B0000              	call print_sexpr_if_not_void
 19572                                  
 19573 0000BC69 48B8-                   	mov rax, qword (L_constants + 0)
 19573 0000BC6B [0000000000000000] 
 19574 0000BC73 48890425[B8030000]      	mov qword [free_var_119], rax
 19575 0000BC7B 48B8-                   	mov rax, sob_void
 19575 0000BC7D [0000000000000000] 
 19576                                  
 19577 0000BC85 4889C7                  	mov rdi, rax
 19578 0000BC88 E8CB6B0000              	call print_sexpr_if_not_void
 19579                                  
 19580 0000BC8D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19581 0000BC92 E8B06B0000              	call malloc
 19582 0000BC97 50                      	push rax
 19583 0000BC98 BF00000000              	mov rdi, 8 * 0	; new rib
 19584 0000BC9D E8A56B0000              	call malloc
 19585 0000BCA2 50                      	push rax
 19586 0000BCA3 BF08000000              	mov rdi, 8 * 1	; extended env
 19587 0000BCA8 E89A6B0000              	call malloc
 19588 0000BCAD 488B7D10                	mov rdi, ENV
 19589 0000BCB1 BE00000000              	mov rsi, 0
 19590 0000BCB6 BA01000000              	mov rdx, 1
 19591                                  .L_lambda_simple_env_loop_040a:	; ext_env[i + 1] <-- env[i]
 19592 0000BCBB 4883FE00                	cmp rsi, 0
 19593 0000BCBF 7410                    	je .L_lambda_simple_env_end_040a
 19594 0000BCC1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19595 0000BCC5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19596 0000BCC9 48FFC6                  	inc rsi
 19597 0000BCCC 48FFC2                  	inc rdx
 19598 0000BCCF EBEA                    	jmp .L_lambda_simple_env_loop_040a
 19599                                  .L_lambda_simple_env_end_040a:
 19600 0000BCD1 5B                      	pop rbx
 19601 0000BCD2 BE00000000              	mov rsi, 0
 19602                                  .L_lambda_simple_params_loop_040a:	; copy params
 19603 0000BCD7 4883FE00                	cmp rsi, 0
 19604 0000BCDB 740E                    	je .L_lambda_simple_params_end_040a
 19605 0000BCDD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19606 0000BCE2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19607 0000BCE6 48FFC6                  	inc rsi
 19608 0000BCE9 EBEC                    	jmp .L_lambda_simple_params_loop_040a
 19609                                  .L_lambda_simple_params_end_040a:
 19610 0000BCEB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19611 0000BCEE 4889C3                  	mov rbx, rax
 19612 0000BCF1 58                      	pop rax
 19613 0000BCF2 C60005                  	mov byte [rax], T_closure
 19614 0000BCF5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19615 0000BCF9 48C74009[06BD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040a
 19616 0000BD01 E971030000              	jmp .L_lambda_simple_end_040a
 19617                                  .L_lambda_simple_code_040a:	; lambda-simple body
 19618 0000BD06 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19619 0000BD0C 740B                    	je .L_lambda_simple_arity_check_ok_08cb
 19620 0000BD0E FF742410                	push qword [rsp + 8 * 2]
 19621 0000BD12 6A01                    	push 1
 19622 0000BD14 E9E76A0000              	jmp L_error_incorrect_arity_simple
 19623                                  .L_lambda_simple_arity_check_ok_08cb:
 19624 0000BD19 C8000000                	enter 0, 0
 19625 0000BD1D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19626 0000BD22 E8206B0000              	call malloc
 19627 0000BD27 50                      	push rax
 19628 0000BD28 BF08000000              	mov rdi, 8 * 1	; new rib
 19629 0000BD2D E8156B0000              	call malloc
 19630 0000BD32 50                      	push rax
 19631 0000BD33 BF10000000              	mov rdi, 8 * 2	; extended env
 19632 0000BD38 E80A6B0000              	call malloc
 19633 0000BD3D 488B7D10                	mov rdi, ENV
 19634 0000BD41 BE00000000              	mov rsi, 0
 19635 0000BD46 BA01000000              	mov rdx, 1
 19636                                  .L_lambda_opt_env_loop_009b:	; ext_env[i + 1] <-- env[i]
 19637 0000BD4B 4883FE01                	cmp rsi, 1
 19638 0000BD4F 7410                    	je .L_lambda_opt_env_end_009b
 19639 0000BD51 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19640 0000BD55 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19641 0000BD59 48FFC6                  	inc rsi
 19642 0000BD5C 48FFC2                  	inc rdx
 19643 0000BD5F EBEA                    	jmp .L_lambda_opt_env_loop_009b
 19644                                  .L_lambda_opt_env_end_009b:
 19645 0000BD61 5B                      	pop rbx
 19646 0000BD62 BE00000000              	mov rsi, 0
 19647                                  .L_lambda_opt_params_loop_01cf:	; copy params
 19648 0000BD67 4883FE01                	cmp rsi, 1
 19649 0000BD6B 740E                    	je .L_lambda_opt_params_end_01cf
 19650 0000BD6D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19651 0000BD72 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19652 0000BD76 48FFC6                  	inc rsi
 19653 0000BD79 EBEC                    	jmp .L_lambda_opt_params_loop_01cf
 19654                                  .L_lambda_opt_params_end_01cf:
 19655 0000BD7B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19656 0000BD7E 4889C3                  	mov rbx, rax
 19657 0000BD81 58                      	pop rax
 19658 0000BD82 C60005                  	mov byte [rax], T_closure
 19659 0000BD85 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19660 0000BD89 48C74009[96BD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_009b
 19661 0000BD91 E9DD020000              	jmp .L_lambda_opt_end_009b
 19662                                  .L_lambda_opt_code_009b:
 19663 0000BD96 4C8B542410              mov r10, qword [rsp+8*2]
 19664 0000BD9B 4983FA00                cmp r10, 0
 19665 0000BD9F 740B                    je .L_lambda_opt_arity_check_exact_009b
 19666 0000BDA1 4983FA00                cmp r10, 0
 19667 0000BDA5 7F44                    jg .L_lambda_opt_arity_check_more_009b
 19668 0000BDA7 E9686A0000              jmp L_error_incorrect_arity_opt
 19669                                  .L_lambda_opt_arity_check_exact_009b:
 19670 0000BDAC 4883EC08                sub rsp, 8
 19671 0000BDB0 BA03000000              mov rdx, 3+0
 19672 0000BDB5 4889E3                  mov qword rbx, rsp
 19673                                  .L_lambda_opt_params_loop_01d0:
 19674 0000BDB8 488B4B08                mov qword rcx, [rbx+8]
 19675 0000BDBC 48890B                  mov qword [rbx], rcx
 19676 0000BDBF 48FFCA                  dec rdx
 19677 0000BDC2 4883C308                add rbx, 8
 19678 0000BDC6 4883FA00                cmp rdx, 0
 19679 0000BDCA 7402                    je .L_lambda_opt_params_end_01d0
 19680 0000BDCC EBEA                    jmp .L_lambda_opt_params_loop_01d0
 19681                                  .L_lambda_opt_params_end_01d0:
 19682 0000BDCE 49FFC2                  inc r10
 19683 0000BDD1 4C89542410              mov qword [rsp+8*2], r10
 19684 0000BDD6 4983C202                add r10, 2
 19685 0000BDDA 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 19686 0000BDE2 4C8B4D00                mov r9, [rbp]
 19687 0000BDE6 E996000000              jmp .L_lambda_opt_stack_adjusted_009b
 19688                                  .L_lambda_opt_arity_check_more_009b:
 19689 0000BDEB 4C8B6C2410              mov r13, [rsp+2*8]
 19690 0000BDF0 48B8-                   mov rax, sob_nil
 19690 0000BDF2 [0100000000000000] 
 19691 0000BDFA 4C8B542410              mov r10, [rsp+2*8]
 19692 0000BDFF 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 19693 0000BE04 4983EA00                sub r10, 0
 19694                                  .L_lambda_opt_stack_shrink_loop_009b:
 19695 0000BE08 4983FA00                cmp r10, 0
 19696 0000BE0C 7424                    je .L_lambda_opt_stack_shrink_loop_exit_009b
 19697 0000BE0E 4889C1                  mov rcx, rax
 19698 0000BE11 498B10                  mov rdx, [r8]
 19699 0000BE14 BF11000000              mov rdi, 17
 19700 0000BE19 E8296A0000              call malloc
 19701 0000BE1E C60021                  mov byte [rax], T_pair
 19702 0000BE21 48894809                mov SOB_PAIR_CDR(rax), rcx
 19703 0000BE25 48895001                mov SOB_PAIR_CAR(rax), rdx
 19704 0000BE29 4983E808                sub r8, 8
 19705 0000BE2D 49FFCA                  dec r10
 19706 0000BE30 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_009b
 19707                                  .L_lambda_opt_stack_shrink_loop_exit_009b:
 19708 0000BE32 4889442418              mov [rsp+8*(2+1)], rax
 19709 0000BE37 41BA01000000            mov r10, 1
 19710 0000BE3D 4C89542410              mov [rsp+16], r10
 19711 0000BE42 4989E4                  mov r12, rsp
 19712 0000BE45 4983C418                add r12, 8*(2+1)
 19713 0000BE49 4C2B6C2410              sub r13, [rsp+16]
 19714 0000BE4E 4D89EA                  mov r10, r13
 19715 0000BE51 49C1E203                shl r10, 3
 19716 0000BE55 4D89D7                  mov r15, r10
 19717 0000BE58 4D01E2                  add r10, r12
 19718 0000BE5B 4C8B4C2410              mov r9, [rsp+16]
 19719 0000BE60 4983C103                add r9, 3
 19720                                  .L_lambda_opt_params_loop_01d1:
 19721 0000BE64 4983F900                cmp r9, 0
 19722 0000BE68 7414                    je .L_lambda_opt_params_end_01d1
 19723 0000BE6A 4D8B3424                mov r14, [r12]
 19724 0000BE6E 4D8932                  mov [r10], r14
 19725 0000BE71 4983EC08                sub r12, 8
 19726 0000BE75 4983EA08                sub r10, 8
 19727 0000BE79 49FFC9                  dec r9
 19728 0000BE7C EBE6                    jmp .L_lambda_opt_params_loop_01d1
 19729                                  .L_lambda_opt_params_end_01d1:
 19730 0000BE7E 4C01FC                  add rsp, r15
 19731                                  .L_lambda_opt_stack_adjusted_009b:
 19732 0000BE81 4C8B4D00                mov r9, [rbp]
 19733 0000BE85 C8000000                enter 0, 0
 19734 0000BE89 488B4520                mov rax, qword [rbp + 32]
 19735 0000BE8D 50                      	push rax
 19736 0000BE8E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19737 0000BE93 E8AF690000              	call malloc
 19738 0000BE98 50                      	push rax
 19739 0000BE99 BF08000000              	mov rdi, 8 * 1	; new rib
 19740 0000BE9E E8A4690000              	call malloc
 19741 0000BEA3 50                      	push rax
 19742 0000BEA4 BF18000000              	mov rdi, 8 * 3	; extended env
 19743 0000BEA9 E899690000              	call malloc
 19744 0000BEAE 488B7D10                	mov rdi, ENV
 19745 0000BEB2 BE00000000              	mov rsi, 0
 19746 0000BEB7 BA01000000              	mov rdx, 1
 19747                                  .L_lambda_simple_env_loop_040b:	; ext_env[i + 1] <-- env[i]
 19748 0000BEBC 4883FE02                	cmp rsi, 2
 19749 0000BEC0 7410                    	je .L_lambda_simple_env_end_040b
 19750 0000BEC2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19751 0000BEC6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19752 0000BECA 48FFC6                  	inc rsi
 19753 0000BECD 48FFC2                  	inc rdx
 19754 0000BED0 EBEA                    	jmp .L_lambda_simple_env_loop_040b
 19755                                  .L_lambda_simple_env_end_040b:
 19756 0000BED2 5B                      	pop rbx
 19757 0000BED3 BE00000000              	mov rsi, 0
 19758                                  .L_lambda_simple_params_loop_040b:	; copy params
 19759 0000BED8 4883FE01                	cmp rsi, 1
 19760 0000BEDC 740E                    	je .L_lambda_simple_params_end_040b
 19761 0000BEDE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19762 0000BEE3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19763 0000BEE7 48FFC6                  	inc rsi
 19764 0000BEEA EBEC                    	jmp .L_lambda_simple_params_loop_040b
 19765                                  .L_lambda_simple_params_end_040b:
 19766 0000BEEC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19767 0000BEEF 4889C3                  	mov rbx, rax
 19768 0000BEF2 58                      	pop rax
 19769 0000BEF3 C60005                  	mov byte [rax], T_closure
 19770 0000BEF6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19771 0000BEFA 48C74009[07BF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040b
 19772 0000BF02 E9BC000000              	jmp .L_lambda_simple_end_040b
 19773                                  .L_lambda_simple_code_040b:	; lambda-simple body
 19774 0000BF07 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19775 0000BF0D 740B                    	je .L_lambda_simple_arity_check_ok_08cc
 19776 0000BF0F FF742410                	push qword [rsp + 8 * 2]
 19777 0000BF13 6A01                    	push 1
 19778 0000BF15 E9E6680000              	jmp L_error_incorrect_arity_simple
 19779                                  .L_lambda_simple_arity_check_ok_08cc:
 19780 0000BF1A C8000000                	enter 0, 0
 19781 0000BF1E 488B4520                mov rax, qword [rbp + 32]
 19782 0000BF22 50                      	push rax
 19783 0000BF23 6A01                    	push 1
 19784 0000BF25 488B0425[88030000]      	mov rax, qword [free_var_113]
 19785 0000BF2D 803805                  	cmp byte [rax], T_closure 
 19786 0000BF30 0F85CC780000                    jne L_code_ptr_error
 19787                                  
 19788 0000BF36 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19789                                  
 19790 0000BF3A 53                              push rbx
 19791                                  
 19792 0000BF3B FF5009                          call SOB_CLOSURE_CODE(rax)
 19793                                  
 19794 0000BF3E 50                              	push rax
 19795 0000BF3F 6A01                    	push 1
 19796 0000BF41 488B0425[C0000000]      	mov rax, qword [free_var_24]
 19797                                  .L_lambda_simple_arity_check_ok_08cd:
 19798 0000BF49 803805                  	cmp byte [rax], T_closure
 19799                                  
 19800 0000BF4C 0F85B0780000                    jne L_code_ptr_error                      ; rax <- proc
 19801                                  
 19802                                  
 19803 0000BF52 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19804                                  
 19805 0000BF56 53                              push rbx                                  ; env pushed
 19806                                  
 19807 0000BF57 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19808                                  
 19809                                          ; sagydebug
 19810                                  
 19811 0000BF5A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19812                                  
 19813                                          
 19814                                          
 19815 0000BF5D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19816                                  
 19817 0000BF61 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19818                                  
 19819                                  
 19820 0000BF66 4D89CA                          mov r10, r9
 19821 0000BF69 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 19822                                          
 19823 0000BF6D 4D89D7                          mov r15, r10
 19824 0000BF70 4983C7FF                        add r15, -1
 19825                                                                                         
 19826 0000BF74 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19827 0000BF77 4983C404                        add r12, 4
 19828 0000BF7B 4983C4FF                        add r12, -1
 19829                                  
 19830 0000BF7F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19831                                  .L_tc_recycle_frame_loop_04c2:
 19832 0000BF85 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 19833                                  
 19834 0000BF89 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19835                                  
 19836                                  
 19837                                  
 19838 0000BF8E 41BE00000000                    mov r14, 0                                ; clean box
 19839                                  
 19840                                  
 19841 0000BF94 4983C7FF                        add r15, -1           
 19842 0000BF98 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19843                                  
 19844 0000BF9C 4983C4FF                        add r12, -1 
 19845                                  
 19846 0000BFA0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19847 0000BFA4 75DF                    	jne .L_tc_recycle_frame_loop_04c2
 19848                                  .L_tc_recycle_frame_done_04c2:
 19849                                  ;this pop rbp in sot to the right place
 19850 0000BFA6 4D89C7                  mov r15, r8
 19851                                  
 19852 0000BFA9 4983C704                        add r15, 4
 19853                                  
 19854 0000BFAD 49C1E703                        shl r15, 3
 19855                                  
 19856 0000BFB1 4C01FC                          add rsp, r15
 19857 0000BFB4 5D                      	pop rbp                                  ; restore the old rbp
 19858                                  
 19859 0000BFB5 488B4D00                        mov rcx, qword [rbp]
 19860 0000BFB9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19861                                            ; rbx <- code(proc)
 19862                                  
 19863 0000BFBD FFE3                            jmp rbx
 19864 0000BFBF C9                      	leave
 19865 0000BFC0 C21800                  	ret 8 * (2 + 1)
 19866                                  .L_lambda_simple_end_040b:	; new closure is in rax
 19867 0000BFC3 50                      	push rax
 19868 0000BFC4 6A02                    	push 2
 19869 0000BFC6 488B0425[D8020000]      	mov rax, qword [free_var_91]
 19870 0000BFCE 803805                  	cmp byte [rax], T_closure 
 19871 0000BFD1 0F852B780000                    jne L_code_ptr_error
 19872                                  
 19873 0000BFD7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19874                                  
 19875 0000BFDB 53                              push rbx
 19876                                  
 19877 0000BFDC FF5009                          call SOB_CLOSURE_CODE(rax)
 19878                                  
 19879 0000BFDF 50                              	push rax
 19880 0000BFE0 488B4510                mov rax, qword [rbp + 16]
 19881 0000BFE4 488B00                  mov rax, qword [rax + 0]
 19882 0000BFE7 488B00                  mov rax, qword [rax + 0]
 19883 0000BFEA 50                      	push rax
 19884 0000BFEB 6A02                    	push 2
 19885 0000BFED 488B0425[C8020000]      	mov rax, qword [free_var_89]
 19886                                  .L_lambda_simple_arity_check_ok_08ce:
 19887 0000BFF5 803805                  	cmp byte [rax], T_closure
 19888                                  
 19889 0000BFF8 0F8504780000                    jne L_code_ptr_error                      ; rax <- proc
 19890                                  
 19891                                  
 19892 0000BFFE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19893                                  
 19894 0000C002 53                              push rbx                                  ; env pushed
 19895                                  
 19896 0000C003 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19897                                  
 19898                                          ; sagydebug
 19899                                  
 19900 0000C006 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19901                                  
 19902                                          
 19903                                          
 19904 0000C009 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19905                                  
 19906 0000C00D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19907                                  
 19908                                  
 19909 0000C012 4D89CA                          mov r10, r9
 19910 0000C015 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 19911                                          
 19912 0000C019 4D89D7                          mov r15, r10
 19913 0000C01C 4983C7FF                        add r15, -1
 19914                                                                                         
 19915 0000C020 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19916 0000C023 4983C404                        add r12, 4
 19917 0000C027 4983C4FF                        add r12, -1
 19918                                  
 19919 0000C02B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19920                                  .L_tc_recycle_frame_loop_04c3:
 19921 0000C031 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 19922                                  
 19923 0000C035 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19924                                  
 19925                                  
 19926                                  
 19927 0000C03A 41BE00000000                    mov r14, 0                                ; clean box
 19928                                  
 19929                                  
 19930 0000C040 4983C7FF                        add r15, -1           
 19931 0000C044 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19932                                  
 19933 0000C048 4983C4FF                        add r12, -1 
 19934                                  
 19935 0000C04C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19936 0000C050 75DF                    	jne .L_tc_recycle_frame_loop_04c3
 19937                                  .L_tc_recycle_frame_done_04c3:
 19938                                  ;this pop rbp in sot to the right place
 19939 0000C052 4D89C7                  mov r15, r8
 19940                                  
 19941 0000C055 4983C704                        add r15, 4
 19942                                  
 19943 0000C059 49C1E703                        shl r15, 3
 19944                                  
 19945 0000C05D 4C01FC                          add rsp, r15
 19946 0000C060 5D                      	pop rbp                                  ; restore the old rbp
 19947                                  
 19948 0000C061 488B4D00                        mov rcx, qword [rbp]
 19949 0000C065 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19950                                            ; rbx <- code(proc)
 19951                                  
 19952 0000C069 FFE3                            jmp rbx
 19953 0000C06B C9                      leave
 19954 0000C06C 4C8B4D00                mov r9, [rbp]
 19955 0000C070 C21800                  ret 8 * (3 + 0)
 19956                                  .L_lambda_opt_end_009b:	; new closure is in rax
 19957 0000C073 C9                      	leave
 19958 0000C074 C21800                  	ret 8 * (2 + 1)
 19959                                  .L_lambda_simple_end_040a:	; new closure is in rax
 19960 0000C077 50                      	push rax
 19961 0000C078 6A01                    	push 1
 19962 0000C07A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19963 0000C07F E8C3670000              	call malloc
 19964 0000C084 50                      	push rax
 19965 0000C085 BF00000000              	mov rdi, 8 * 0	; new rib
 19966 0000C08A E8B8670000              	call malloc
 19967 0000C08F 50                      	push rax
 19968 0000C090 BF08000000              	mov rdi, 8 * 1	; extended env
 19969 0000C095 E8AD670000              	call malloc
 19970 0000C09A 488B7D10                	mov rdi, ENV
 19971 0000C09E BE00000000              	mov rsi, 0
 19972 0000C0A3 BA01000000              	mov rdx, 1
 19973                                  .L_lambda_simple_env_loop_040c:	; ext_env[i + 1] <-- env[i]
 19974 0000C0A8 4883FE00                	cmp rsi, 0
 19975 0000C0AC 7410                    	je .L_lambda_simple_env_end_040c
 19976 0000C0AE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19977 0000C0B2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19978 0000C0B6 48FFC6                  	inc rsi
 19979 0000C0B9 48FFC2                  	inc rdx
 19980 0000C0BC EBEA                    	jmp .L_lambda_simple_env_loop_040c
 19981                                  .L_lambda_simple_env_end_040c:
 19982 0000C0BE 5B                      	pop rbx
 19983 0000C0BF BE00000000              	mov rsi, 0
 19984                                  .L_lambda_simple_params_loop_040c:	; copy params
 19985 0000C0C4 4883FE00                	cmp rsi, 0
 19986 0000C0C8 740E                    	je .L_lambda_simple_params_end_040c
 19987 0000C0CA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19988 0000C0CF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19989 0000C0D3 48FFC6                  	inc rsi
 19990 0000C0D6 EBEC                    	jmp .L_lambda_simple_params_loop_040c
 19991                                  .L_lambda_simple_params_end_040c:
 19992 0000C0D8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19993 0000C0DB 4889C3                  	mov rbx, rax
 19994 0000C0DE 58                      	pop rax
 19995 0000C0DF C60005                  	mov byte [rax], T_closure
 19996 0000C0E2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19997 0000C0E6 48C74009[F3C00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040c
 19998 0000C0EE E915010000              	jmp .L_lambda_simple_end_040c
 19999                                  .L_lambda_simple_code_040c:	; lambda-simple body
 20000 0000C0F3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20001 0000C0F9 740B                    	je .L_lambda_simple_arity_check_ok_08cf
 20002 0000C0FB FF742410                	push qword [rsp + 8 * 2]
 20003 0000C0FF 6A01                    	push 1
 20004 0000C101 E9FA660000              	jmp L_error_incorrect_arity_simple
 20005                                  .L_lambda_simple_arity_check_ok_08cf:
 20006 0000C106 C8000000                	enter 0, 0
 20007 0000C10A 488B0425[30030000]      	mov rax, qword [free_var_102]
 20008 0000C112 50                      	push rax
 20009 0000C113 6A01                    	push 1
 20010 0000C115 488B4520                mov rax, qword [rbp + 32]
 20011 0000C119 803805                  	cmp byte [rax], T_closure 
 20012 0000C11C 0F85E0760000                    jne L_code_ptr_error
 20013                                  
 20014 0000C122 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20015                                  
 20016 0000C126 53                              push rbx
 20017                                  
 20018 0000C127 FF5009                          call SOB_CLOSURE_CODE(rax)
 20019                                  
 20020 0000C12A 48890425[98030000]              	mov qword [free_var_115], rax
 20021 0000C132 48B8-                   	mov rax, sob_void
 20021 0000C134 [0000000000000000] 
 20022                                  
 20023 0000C13C 488B0425[38030000]      	mov rax, qword [free_var_103]
 20024 0000C144 50                      	push rax
 20025 0000C145 6A01                    	push 1
 20026 0000C147 488B4520                mov rax, qword [rbp + 32]
 20027 0000C14B 803805                  	cmp byte [rax], T_closure 
 20028 0000C14E 0F85AE760000                    jne L_code_ptr_error
 20029                                  
 20030 0000C154 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20031                                  
 20032 0000C158 53                              push rbx
 20033                                  
 20034 0000C159 FF5009                          call SOB_CLOSURE_CODE(rax)
 20035                                  
 20036 0000C15C 48890425[A0030000]              	mov qword [free_var_116], rax
 20037 0000C164 48B8-                   	mov rax, sob_void
 20037 0000C166 [0000000000000000] 
 20038                                  
 20039 0000C16E 488B0425[50030000]      	mov rax, qword [free_var_106]
 20040 0000C176 50                      	push rax
 20041 0000C177 6A01                    	push 1
 20042 0000C179 488B4520                mov rax, qword [rbp + 32]
 20043 0000C17D 803805                  	cmp byte [rax], T_closure 
 20044 0000C180 0F857C760000                    jne L_code_ptr_error
 20045                                  
 20046 0000C186 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20047                                  
 20048 0000C18A 53                              push rbx
 20049                                  
 20050 0000C18B FF5009                          call SOB_CLOSURE_CODE(rax)
 20051                                  
 20052 0000C18E 48890425[A8030000]              	mov qword [free_var_117], rax
 20053 0000C196 48B8-                   	mov rax, sob_void
 20053 0000C198 [0000000000000000] 
 20054                                  
 20055 0000C1A0 488B0425[40030000]      	mov rax, qword [free_var_104]
 20056 0000C1A8 50                      	push rax
 20057 0000C1A9 6A01                    	push 1
 20058 0000C1AB 488B4520                mov rax, qword [rbp + 32]
 20059 0000C1AF 803805                  	cmp byte [rax], T_closure 
 20060 0000C1B2 0F854A760000                    jne L_code_ptr_error
 20061                                  
 20062 0000C1B8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20063                                  
 20064 0000C1BC 53                              push rbx
 20065                                  
 20066 0000C1BD FF5009                          call SOB_CLOSURE_CODE(rax)
 20067                                  
 20068 0000C1C0 48890425[B0030000]              	mov qword [free_var_118], rax
 20069 0000C1C8 48B8-                   	mov rax, sob_void
 20069 0000C1CA [0000000000000000] 
 20070                                  
 20071 0000C1D2 488B0425[48030000]      	mov rax, qword [free_var_105]
 20072 0000C1DA 50                      	push rax
 20073 0000C1DB 6A01                    	push 1
 20074 0000C1DD 488B4520                mov rax, qword [rbp + 32]
 20075 0000C1E1 803805                  	cmp byte [rax], T_closure 
 20076 0000C1E4 0F8518760000                    jne L_code_ptr_error
 20077                                  
 20078 0000C1EA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20079                                  
 20080 0000C1EE 53                              push rbx
 20081                                  
 20082 0000C1EF FF5009                          call SOB_CLOSURE_CODE(rax)
 20083                                  
 20084 0000C1F2 48890425[B8030000]              	mov qword [free_var_119], rax
 20085 0000C1FA 48B8-                   	mov rax, sob_void
 20085 0000C1FC [0000000000000000] 
 20086 0000C204 C9                      	leave
 20087 0000C205 C21800                  	ret 8 * (2 + 1)
 20088                                  .L_lambda_simple_end_040c:	; new closure is in rax
 20089 0000C208 803805                  	cmp byte [rax], T_closure 
 20090 0000C20B 0F85F1750000                    jne L_code_ptr_error
 20091                                  
 20092 0000C211 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20093                                  
 20094 0000C215 53                              push rbx
 20095                                  
 20096 0000C216 FF5009                          call SOB_CLOSURE_CODE(rax)
 20097                                  
 20098                                          
 20099 0000C219 4889C7                  	mov rdi, rax
 20100 0000C21C E837660000              	call print_sexpr_if_not_void
 20101                                  
 20102 0000C221 48B8-                   	mov rax, qword (L_constants + 0)
 20102 0000C223 [0000000000000000] 
 20103 0000C22B 48890425[C0030000]      	mov qword [free_var_120], rax
 20104 0000C233 48B8-                   	mov rax, sob_void
 20104 0000C235 [0000000000000000] 
 20105                                  
 20106 0000C23D 4889C7                  	mov rdi, rax
 20107 0000C240 E813660000              	call print_sexpr_if_not_void
 20108                                  
 20109 0000C245 48B8-                   	mov rax, qword (L_constants + 0)
 20109 0000C247 [0000000000000000] 
 20110 0000C24F 48890425[C8030000]      	mov qword [free_var_121], rax
 20111 0000C257 48B8-                   	mov rax, sob_void
 20111 0000C259 [0000000000000000] 
 20112                                  
 20113 0000C261 4889C7                  	mov rdi, rax
 20114 0000C264 E8EF650000              	call print_sexpr_if_not_void
 20115                                  
 20116 0000C269 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20117 0000C26E E8D4650000              	call malloc
 20118 0000C273 50                      	push rax
 20119 0000C274 BF00000000              	mov rdi, 8 * 0	; new rib
 20120 0000C279 E8C9650000              	call malloc
 20121 0000C27E 50                      	push rax
 20122 0000C27F BF08000000              	mov rdi, 8 * 1	; extended env
 20123 0000C284 E8BE650000              	call malloc
 20124 0000C289 488B7D10                	mov rdi, ENV
 20125 0000C28D BE00000000              	mov rsi, 0
 20126 0000C292 BA01000000              	mov rdx, 1
 20127                                  .L_lambda_simple_env_loop_040d:	; ext_env[i + 1] <-- env[i]
 20128 0000C297 4883FE00                	cmp rsi, 0
 20129 0000C29B 7410                    	je .L_lambda_simple_env_end_040d
 20130 0000C29D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20131 0000C2A1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20132 0000C2A5 48FFC6                  	inc rsi
 20133 0000C2A8 48FFC2                  	inc rdx
 20134 0000C2AB EBEA                    	jmp .L_lambda_simple_env_loop_040d
 20135                                  .L_lambda_simple_env_end_040d:
 20136 0000C2AD 5B                      	pop rbx
 20137 0000C2AE BE00000000              	mov rsi, 0
 20138                                  .L_lambda_simple_params_loop_040d:	; copy params
 20139 0000C2B3 4883FE00                	cmp rsi, 0
 20140 0000C2B7 740E                    	je .L_lambda_simple_params_end_040d
 20141 0000C2B9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20142 0000C2BE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20143 0000C2C2 48FFC6                  	inc rsi
 20144 0000C2C5 EBEC                    	jmp .L_lambda_simple_params_loop_040d
 20145                                  .L_lambda_simple_params_end_040d:
 20146 0000C2C7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20147 0000C2CA 4889C3                  	mov rbx, rax
 20148 0000C2CD 58                      	pop rax
 20149 0000C2CE C60005                  	mov byte [rax], T_closure
 20150 0000C2D1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20151 0000C2D5 48C74009[E2C20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040d
 20152 0000C2DD E977010000              	jmp .L_lambda_simple_end_040d
 20153                                  .L_lambda_simple_code_040d:	; lambda-simple body
 20154 0000C2E2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20155 0000C2E8 740B                    	je .L_lambda_simple_arity_check_ok_08d0
 20156 0000C2EA FF742410                	push qword [rsp + 8 * 2]
 20157 0000C2EE 6A01                    	push 1
 20158 0000C2F0 E90B650000              	jmp L_error_incorrect_arity_simple
 20159                                  .L_lambda_simple_arity_check_ok_08d0:
 20160 0000C2F5 C8000000                	enter 0, 0
 20161 0000C2F9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20162 0000C2FE E844650000              	call malloc
 20163 0000C303 50                      	push rax
 20164 0000C304 BF08000000              	mov rdi, 8 * 1	; new rib
 20165 0000C309 E839650000              	call malloc
 20166 0000C30E 50                      	push rax
 20167 0000C30F BF10000000              	mov rdi, 8 * 2	; extended env
 20168 0000C314 E82E650000              	call malloc
 20169 0000C319 488B7D10                	mov rdi, ENV
 20170 0000C31D BE00000000              	mov rsi, 0
 20171 0000C322 BA01000000              	mov rdx, 1
 20172                                  .L_lambda_simple_env_loop_040e:	; ext_env[i + 1] <-- env[i]
 20173 0000C327 4883FE01                	cmp rsi, 1
 20174 0000C32B 7410                    	je .L_lambda_simple_env_end_040e
 20175 0000C32D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20176 0000C331 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20177 0000C335 48FFC6                  	inc rsi
 20178 0000C338 48FFC2                  	inc rdx
 20179 0000C33B EBEA                    	jmp .L_lambda_simple_env_loop_040e
 20180                                  .L_lambda_simple_env_end_040e:
 20181 0000C33D 5B                      	pop rbx
 20182 0000C33E BE00000000              	mov rsi, 0
 20183                                  .L_lambda_simple_params_loop_040e:	; copy params
 20184 0000C343 4883FE01                	cmp rsi, 1
 20185 0000C347 740E                    	je .L_lambda_simple_params_end_040e
 20186 0000C349 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20187 0000C34E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20188 0000C352 48FFC6                  	inc rsi
 20189 0000C355 EBEC                    	jmp .L_lambda_simple_params_loop_040e
 20190                                  .L_lambda_simple_params_end_040e:
 20191 0000C357 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20192 0000C35A 4889C3                  	mov rbx, rax
 20193 0000C35D 58                      	pop rax
 20194 0000C35E C60005                  	mov byte [rax], T_closure
 20195 0000C361 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20196 0000C365 48C74009[72C30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040e
 20197 0000C36D E9E3000000              	jmp .L_lambda_simple_end_040e
 20198                                  .L_lambda_simple_code_040e:	; lambda-simple body
 20199 0000C372 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20200 0000C378 740B                    	je .L_lambda_simple_arity_check_ok_08d1
 20201 0000C37A FF742410                	push qword [rsp + 8 * 2]
 20202 0000C37E 6A01                    	push 1
 20203 0000C380 E97B640000              	jmp L_error_incorrect_arity_simple
 20204                                  .L_lambda_simple_arity_check_ok_08d1:
 20205 0000C385 C8000000                	enter 0, 0
 20206 0000C389 488B4520                mov rax, qword [rbp + 32]
 20207 0000C38D 50                      	push rax
 20208 0000C38E 6A01                    	push 1
 20209 0000C390 488B0425[D8030000]      	mov rax, qword [free_var_123]
 20210 0000C398 803805                  	cmp byte [rax], T_closure 
 20211 0000C39B 0F8561740000                    jne L_code_ptr_error
 20212                                  
 20213 0000C3A1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20214                                  
 20215 0000C3A5 53                              push rbx
 20216                                  
 20217 0000C3A6 FF5009                          call SOB_CLOSURE_CODE(rax)
 20218                                  
 20219 0000C3A9 50                              	push rax
 20220 0000C3AA 488B4510                mov rax, qword [rbp + 16]
 20221 0000C3AE 488B00                  mov rax, qword [rax + 0]
 20222 0000C3B1 488B00                  mov rax, qword [rax + 0]
 20223 0000C3B4 50                      	push rax
 20224 0000C3B5 6A02                    	push 2
 20225 0000C3B7 488B0425[D8020000]      	mov rax, qword [free_var_91]
 20226 0000C3BF 803805                  	cmp byte [rax], T_closure 
 20227 0000C3C2 0F853A740000                    jne L_code_ptr_error
 20228                                  
 20229 0000C3C8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20230                                  
 20231 0000C3CC 53                              push rbx
 20232                                  
 20233 0000C3CD FF5009                          call SOB_CLOSURE_CODE(rax)
 20234                                  
 20235 0000C3D0 50                              	push rax
 20236 0000C3D1 6A01                    	push 1
 20237 0000C3D3 488B0425[D0030000]      	mov rax, qword [free_var_122]
 20238                                  .L_lambda_simple_arity_check_ok_08d2:
 20239 0000C3DB 803805                  	cmp byte [rax], T_closure
 20240                                  
 20241 0000C3DE 0F851E740000                    jne L_code_ptr_error                      ; rax <- proc
 20242                                  
 20243                                  
 20244 0000C3E4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 20245                                  
 20246 0000C3E8 53                              push rbx                                  ; env pushed
 20247                                  
 20248 0000C3E9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 20249                                  
 20250                                          ; sagydebug
 20251                                  
 20252 0000C3EC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 20253                                  
 20254                                          
 20255                                          
 20256 0000C3EF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 20257                                  
 20258 0000C3F3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 20259                                  
 20260                                  
 20261 0000C3F8 4D89CA                          mov r10, r9
 20262 0000C3FB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 20263                                          
 20264 0000C3FF 4D89D7                          mov r15, r10
 20265 0000C402 4983C7FF                        add r15, -1
 20266                                                                                         
 20267 0000C406 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 20268 0000C409 4983C404                        add r12, 4
 20269 0000C40D 4983C4FF                        add r12, -1
 20270                                  
 20271 0000C411 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 20272                                  .L_tc_recycle_frame_loop_04c4:
 20273 0000C417 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 20274                                  
 20275 0000C41B 4E8974E500                      mov [rbp + (r12 * 8)], r14
 20276                                  
 20277                                  
 20278                                  
 20279 0000C420 41BE00000000                    mov r14, 0                                ; clean box
 20280                                  
 20281                                  
 20282 0000C426 4983C7FF                        add r15, -1           
 20283 0000C42A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 20284                                  
 20285 0000C42E 4983C4FF                        add r12, -1 
 20286                                  
 20287 0000C432 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 20288 0000C436 75DF                    	jne .L_tc_recycle_frame_loop_04c4
 20289                                  .L_tc_recycle_frame_done_04c4:
 20290                                  ;this pop rbp in sot to the right place
 20291 0000C438 4D89C7                  mov r15, r8
 20292                                  
 20293 0000C43B 4983C704                        add r15, 4
 20294                                  
 20295 0000C43F 49C1E703                        shl r15, 3
 20296                                  
 20297 0000C443 4C01FC                          add rsp, r15
 20298 0000C446 5D                      	pop rbp                                  ; restore the old rbp
 20299                                  
 20300 0000C447 488B4D00                        mov rcx, qword [rbp]
 20301 0000C44B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 20302                                            ; rbx <- code(proc)
 20303                                  
 20304 0000C44F FFE3                            jmp rbx
 20305 0000C451 C9                      	leave
 20306 0000C452 C21800                  	ret 8 * (2 + 1)
 20307                                  .L_lambda_simple_end_040e:	; new closure is in rax
 20308 0000C455 C9                      	leave
 20309 0000C456 C21800                  	ret 8 * (2 + 1)
 20310                                  .L_lambda_simple_end_040d:	; new closure is in rax
 20311 0000C459 50                      	push rax
 20312 0000C45A 6A01                    	push 1
 20313 0000C45C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20314 0000C461 E8E1630000              	call malloc
 20315 0000C466 50                      	push rax
 20316 0000C467 BF00000000              	mov rdi, 8 * 0	; new rib
 20317 0000C46C E8D6630000              	call malloc
 20318 0000C471 50                      	push rax
 20319 0000C472 BF08000000              	mov rdi, 8 * 1	; extended env
 20320 0000C477 E8CB630000              	call malloc
 20321 0000C47C 488B7D10                	mov rdi, ENV
 20322 0000C480 BE00000000              	mov rsi, 0
 20323 0000C485 BA01000000              	mov rdx, 1
 20324                                  .L_lambda_simple_env_loop_040f:	; ext_env[i + 1] <-- env[i]
 20325 0000C48A 4883FE00                	cmp rsi, 0
 20326 0000C48E 7410                    	je .L_lambda_simple_env_end_040f
 20327 0000C490 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20328 0000C494 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20329 0000C498 48FFC6                  	inc rsi
 20330 0000C49B 48FFC2                  	inc rdx
 20331 0000C49E EBEA                    	jmp .L_lambda_simple_env_loop_040f
 20332                                  .L_lambda_simple_env_end_040f:
 20333 0000C4A0 5B                      	pop rbx
 20334 0000C4A1 BE00000000              	mov rsi, 0
 20335                                  .L_lambda_simple_params_loop_040f:	; copy params
 20336 0000C4A6 4883FE00                	cmp rsi, 0
 20337 0000C4AA 740E                    	je .L_lambda_simple_params_end_040f
 20338 0000C4AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20339 0000C4B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20340 0000C4B5 48FFC6                  	inc rsi
 20341 0000C4B8 EBEC                    	jmp .L_lambda_simple_params_loop_040f
 20342                                  .L_lambda_simple_params_end_040f:
 20343 0000C4BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20344 0000C4BD 4889C3                  	mov rbx, rax
 20345 0000C4C0 58                      	pop rax
 20346 0000C4C1 C60005                  	mov byte [rax], T_closure
 20347 0000C4C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20348 0000C4C8 48C74009[D5C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_040f
 20349 0000C4D0 E97F000000              	jmp .L_lambda_simple_end_040f
 20350                                  .L_lambda_simple_code_040f:	; lambda-simple body
 20351 0000C4D5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20352 0000C4DB 740B                    	je .L_lambda_simple_arity_check_ok_08d3
 20353 0000C4DD FF742410                	push qword [rsp + 8 * 2]
 20354 0000C4E1 6A01                    	push 1
 20355 0000C4E3 E918630000              	jmp L_error_incorrect_arity_simple
 20356                                  .L_lambda_simple_arity_check_ok_08d3:
 20357 0000C4E8 C8000000                	enter 0, 0
 20358 0000C4EC 488B0425[88030000]      	mov rax, qword [free_var_113]
 20359 0000C4F4 50                      	push rax
 20360 0000C4F5 6A01                    	push 1
 20361 0000C4F7 488B4520                mov rax, qword [rbp + 32]
 20362 0000C4FB 803805                  	cmp byte [rax], T_closure 
 20363 0000C4FE 0F85FE720000                    jne L_code_ptr_error
 20364                                  
 20365 0000C504 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20366                                  
 20367 0000C508 53                              push rbx
 20368                                  
 20369 0000C509 FF5009                          call SOB_CLOSURE_CODE(rax)
 20370                                  
 20371 0000C50C 48890425[C0030000]              	mov qword [free_var_120], rax
 20372 0000C514 48B8-                   	mov rax, sob_void
 20372 0000C516 [0000000000000000] 
 20373                                  
 20374 0000C51E 488B0425[90030000]      	mov rax, qword [free_var_114]
 20375 0000C526 50                      	push rax
 20376 0000C527 6A01                    	push 1
 20377 0000C529 488B4520                mov rax, qword [rbp + 32]
 20378 0000C52D 803805                  	cmp byte [rax], T_closure 
 20379 0000C530 0F85CC720000                    jne L_code_ptr_error
 20380                                  
 20381 0000C536 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20382                                  
 20383 0000C53A 53                              push rbx
 20384                                  
 20385 0000C53B FF5009                          call SOB_CLOSURE_CODE(rax)
 20386                                  
 20387 0000C53E 48890425[C8030000]              	mov qword [free_var_121], rax
 20388 0000C546 48B8-                   	mov rax, sob_void
 20388 0000C548 [0000000000000000] 
 20389 0000C550 C9                      	leave
 20390 0000C551 C21800                  	ret 8 * (2 + 1)
 20391                                  .L_lambda_simple_end_040f:	; new closure is in rax
 20392 0000C554 803805                  	cmp byte [rax], T_closure 
 20393 0000C557 0F85A5720000                    jne L_code_ptr_error
 20394                                  
 20395 0000C55D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20396                                  
 20397 0000C561 53                              push rbx
 20398                                  
 20399 0000C562 FF5009                          call SOB_CLOSURE_CODE(rax)
 20400                                  
 20401                                          
 20402 0000C565 4889C7                  	mov rdi, rax
 20403 0000C568 E8EB620000              	call print_sexpr_if_not_void
 20404                                  
 20405 0000C56D 48B8-                   	mov rax, qword (L_constants + 0)
 20405 0000C56F [0000000000000000] 
 20406 0000C577 48890425[E0030000]      	mov qword [free_var_124], rax
 20407 0000C57F 48B8-                   	mov rax, sob_void
 20407 0000C581 [0000000000000000] 
 20408                                  
 20409 0000C589 4889C7                  	mov rdi, rax
 20410 0000C58C E8C7620000              	call print_sexpr_if_not_void
 20411                                  
 20412 0000C591 48B8-                   	mov rax, qword (L_constants + 0)
 20412 0000C593 [0000000000000000] 
 20413 0000C59B 48890425[E8030000]      	mov qword [free_var_125], rax
 20414 0000C5A3 48B8-                   	mov rax, sob_void
 20414 0000C5A5 [0000000000000000] 
 20415                                  
 20416 0000C5AD 4889C7                  	mov rdi, rax
 20417 0000C5B0 E8A3620000              	call print_sexpr_if_not_void
 20418                                  
 20419 0000C5B5 48B8-                   	mov rax, qword (L_constants + 0)
 20419 0000C5B7 [0000000000000000] 
 20420 0000C5BF 48890425[F0030000]      	mov qword [free_var_126], rax
 20421 0000C5C7 48B8-                   	mov rax, sob_void
 20421 0000C5C9 [0000000000000000] 
 20422                                  
 20423 0000C5D1 4889C7                  	mov rdi, rax
 20424 0000C5D4 E87F620000              	call print_sexpr_if_not_void
 20425                                  
 20426 0000C5D9 48B8-                   	mov rax, qword (L_constants + 0)
 20426 0000C5DB [0000000000000000] 
 20427 0000C5E3 48890425[F8030000]      	mov qword [free_var_127], rax
 20428 0000C5EB 48B8-                   	mov rax, sob_void
 20428 0000C5ED [0000000000000000] 
 20429                                  
 20430 0000C5F5 4889C7                  	mov rdi, rax
 20431 0000C5F8 E85B620000              	call print_sexpr_if_not_void
 20432                                  
 20433 0000C5FD 48B8-                   	mov rax, qword (L_constants + 0)
 20433 0000C5FF [0000000000000000] 
 20434 0000C607 48890425[00040000]      	mov qword [free_var_128], rax
 20435 0000C60F 48B8-                   	mov rax, sob_void
 20435 0000C611 [0000000000000000] 
 20436                                  
 20437 0000C619 4889C7                  	mov rdi, rax
 20438 0000C61C E837620000              	call print_sexpr_if_not_void
 20439                                  
 20440 0000C621 48B8-                   	mov rax, qword (L_constants + 0)
 20440 0000C623 [0000000000000000] 
 20441 0000C62B 48890425[08040000]      	mov qword [free_var_129], rax
 20442 0000C633 48B8-                   	mov rax, sob_void
 20442 0000C635 [0000000000000000] 
 20443                                  
 20444 0000C63D 4889C7                  	mov rdi, rax
 20445 0000C640 E813620000              	call print_sexpr_if_not_void
 20446                                  
 20447 0000C645 48B8-                   	mov rax, qword (L_constants + 0)
 20447 0000C647 [0000000000000000] 
 20448 0000C64F 48890425[10040000]      	mov qword [free_var_130], rax
 20449 0000C657 48B8-                   	mov rax, sob_void
 20449 0000C659 [0000000000000000] 
 20450                                  
 20451 0000C661 4889C7                  	mov rdi, rax
 20452 0000C664 E8EF610000              	call print_sexpr_if_not_void
 20453                                  
 20454 0000C669 48B8-                   	mov rax, qword (L_constants + 0)
 20454 0000C66B [0000000000000000] 
 20455 0000C673 48890425[18040000]      	mov qword [free_var_131], rax
 20456 0000C67B 48B8-                   	mov rax, sob_void
 20456 0000C67D [0000000000000000] 
 20457                                  
 20458 0000C685 4889C7                  	mov rdi, rax
 20459 0000C688 E8CB610000              	call print_sexpr_if_not_void
 20460                                  
 20461 0000C68D 48B8-                   	mov rax, qword (L_constants + 0)
 20461 0000C68F [0000000000000000] 
 20462 0000C697 48890425[20040000]      	mov qword [free_var_132], rax
 20463 0000C69F 48B8-                   	mov rax, sob_void
 20463 0000C6A1 [0000000000000000] 
 20464                                  
 20465 0000C6A9 4889C7                  	mov rdi, rax
 20466 0000C6AC E8A7610000              	call print_sexpr_if_not_void
 20467                                  
 20468 0000C6B1 48B8-                   	mov rax, qword (L_constants + 0)
 20468 0000C6B3 [0000000000000000] 
 20469 0000C6BB 48890425[28040000]      	mov qword [free_var_133], rax
 20470 0000C6C3 48B8-                   	mov rax, sob_void
 20470 0000C6C5 [0000000000000000] 
 20471                                  
 20472 0000C6CD 4889C7                  	mov rdi, rax
 20473 0000C6D0 E883610000              	call print_sexpr_if_not_void
 20474                                  
 20475 0000C6D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20476 0000C6DA E868610000              	call malloc
 20477 0000C6DF 50                      	push rax
 20478 0000C6E0 BF00000000              	mov rdi, 8 * 0	; new rib
 20479 0000C6E5 E85D610000              	call malloc
 20480 0000C6EA 50                      	push rax
 20481 0000C6EB BF08000000              	mov rdi, 8 * 1	; extended env
 20482 0000C6F0 E852610000              	call malloc
 20483 0000C6F5 488B7D10                	mov rdi, ENV
 20484 0000C6F9 BE00000000              	mov rsi, 0
 20485 0000C6FE BA01000000              	mov rdx, 1
 20486                                  .L_lambda_simple_env_loop_0410:	; ext_env[i + 1] <-- env[i]
 20487 0000C703 4883FE00                	cmp rsi, 0
 20488 0000C707 7410                    	je .L_lambda_simple_env_end_0410
 20489 0000C709 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20490 0000C70D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20491 0000C711 48FFC6                  	inc rsi
 20492 0000C714 48FFC2                  	inc rdx
 20493 0000C717 EBEA                    	jmp .L_lambda_simple_env_loop_0410
 20494                                  .L_lambda_simple_env_end_0410:
 20495 0000C719 5B                      	pop rbx
 20496 0000C71A BE00000000              	mov rsi, 0
 20497                                  .L_lambda_simple_params_loop_0410:	; copy params
 20498 0000C71F 4883FE00                	cmp rsi, 0
 20499 0000C723 740E                    	je .L_lambda_simple_params_end_0410
 20500 0000C725 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20501 0000C72A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20502 0000C72E 48FFC6                  	inc rsi
 20503 0000C731 EBEC                    	jmp .L_lambda_simple_params_loop_0410
 20504                                  .L_lambda_simple_params_end_0410:
 20505 0000C733 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20506 0000C736 4889C3                  	mov rbx, rax
 20507 0000C739 58                      	pop rax
 20508 0000C73A C60005                  	mov byte [rax], T_closure
 20509 0000C73D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20510 0000C741 48C74009[4EC70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0410
 20511 0000C749 E9170E0000              	jmp .L_lambda_simple_end_0410
 20512                                  .L_lambda_simple_code_0410:	; lambda-simple body
 20513 0000C74E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20514 0000C754 740B                    	je .L_lambda_simple_arity_check_ok_08d4
 20515 0000C756 FF742410                	push qword [rsp + 8 * 2]
 20516 0000C75A 6A02                    	push 2
 20517 0000C75C E99F600000              	jmp L_error_incorrect_arity_simple
 20518                                  .L_lambda_simple_arity_check_ok_08d4:
 20519 0000C761 C8000000                	enter 0, 0
 20520 0000C765 48B8-                   	mov rax, qword (L_constants + 22)
 20520 0000C767 [1600000000000000] 
 20521 0000C76F 50                      	push rax
 20522 0000C770 6A01                    	push 1
 20523 0000C772 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20524 0000C777 E8CB600000              	call malloc
 20525 0000C77C 50                      	push rax
 20526 0000C77D BF10000000              	mov rdi, 8 * 2	; new rib
 20527 0000C782 E8C0600000              	call malloc
 20528 0000C787 50                      	push rax
 20529 0000C788 BF10000000              	mov rdi, 8 * 2	; extended env
 20530 0000C78D E8B5600000              	call malloc
 20531 0000C792 488B7D10                	mov rdi, ENV
 20532 0000C796 BE00000000              	mov rsi, 0
 20533 0000C79B BA01000000              	mov rdx, 1
 20534                                  .L_lambda_simple_env_loop_0411:	; ext_env[i + 1] <-- env[i]
 20535 0000C7A0 4883FE01                	cmp rsi, 1
 20536 0000C7A4 7410                    	je .L_lambda_simple_env_end_0411
 20537 0000C7A6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20538 0000C7AA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20539 0000C7AE 48FFC6                  	inc rsi
 20540 0000C7B1 48FFC2                  	inc rdx
 20541 0000C7B4 EBEA                    	jmp .L_lambda_simple_env_loop_0411
 20542                                  .L_lambda_simple_env_end_0411:
 20543 0000C7B6 5B                      	pop rbx
 20544 0000C7B7 BE00000000              	mov rsi, 0
 20545                                  .L_lambda_simple_params_loop_0411:	; copy params
 20546 0000C7BC 4883FE02                	cmp rsi, 2
 20547 0000C7C0 740E                    	je .L_lambda_simple_params_end_0411
 20548 0000C7C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20549 0000C7C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20550 0000C7CB 48FFC6                  	inc rsi
 20551 0000C7CE EBEC                    	jmp .L_lambda_simple_params_loop_0411
 20552                                  .L_lambda_simple_params_end_0411:
 20553 0000C7D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20554 0000C7D3 4889C3                  	mov rbx, rax
 20555 0000C7D6 58                      	pop rax
 20556 0000C7D7 C60005                  	mov byte [rax], T_closure
 20557 0000C7DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20558 0000C7DE 48C74009[EBC70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0411
 20559 0000C7E6 E9000D0000              	jmp .L_lambda_simple_end_0411
 20560                                  .L_lambda_simple_code_0411:	; lambda-simple body
 20561 0000C7EB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20562 0000C7F1 740B                    	je .L_lambda_simple_arity_check_ok_08d5
 20563 0000C7F3 FF742410                	push qword [rsp + 8 * 2]
 20564 0000C7F7 6A01                    	push 1
 20565 0000C7F9 E902600000              	jmp L_error_incorrect_arity_simple
 20566                                  .L_lambda_simple_arity_check_ok_08d5:
 20567 0000C7FE C8000000                	enter 0, 0
 20568 0000C802 488B4520                mov rax, qword [rbp + 32]
 20569 0000C806 BF08000000              mov rdi, 8
 20570 0000C80B 4889C3                  mov rbx, rax
 20571 0000C80E E834600000              call malloc
 20572 0000C813 488918                  mov qword [rax], rbx
 20573 0000C816 48894520                mov qword [rbp + 32], rax
 20574 0000C81A 48B8-                   mov rax, sob_void
 20574 0000C81C [0000000000000000] 
 20575 0000C824 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20576 0000C829 E819600000              	call malloc
 20577 0000C82E 50                      	push rax
 20578 0000C82F BF08000000              	mov rdi, 8 * 1	; new rib
 20579 0000C834 E80E600000              	call malloc
 20580 0000C839 50                      	push rax
 20581 0000C83A BF18000000              	mov rdi, 8 * 3	; extended env
 20582 0000C83F E803600000              	call malloc
 20583 0000C844 488B7D10                	mov rdi, ENV
 20584 0000C848 BE00000000              	mov rsi, 0
 20585 0000C84D BA01000000              	mov rdx, 1
 20586                                  .L_lambda_simple_env_loop_0412:	; ext_env[i + 1] <-- env[i]
 20587 0000C852 4883FE02                	cmp rsi, 2
 20588 0000C856 7410                    	je .L_lambda_simple_env_end_0412
 20589 0000C858 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20590 0000C85C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20591 0000C860 48FFC6                  	inc rsi
 20592 0000C863 48FFC2                  	inc rdx
 20593 0000C866 EBEA                    	jmp .L_lambda_simple_env_loop_0412
 20594                                  .L_lambda_simple_env_end_0412:
 20595 0000C868 5B                      	pop rbx
 20596 0000C869 BE00000000              	mov rsi, 0
 20597                                  .L_lambda_simple_params_loop_0412:	; copy params
 20598 0000C86E 4883FE01                	cmp rsi, 1
 20599 0000C872 740E                    	je .L_lambda_simple_params_end_0412
 20600 0000C874 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20601 0000C879 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20602 0000C87D 48FFC6                  	inc rsi
 20603 0000C880 EBEC                    	jmp .L_lambda_simple_params_loop_0412
 20604                                  .L_lambda_simple_params_end_0412:
 20605 0000C882 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20606 0000C885 4889C3                  	mov rbx, rax
 20607 0000C888 58                      	pop rax
 20608 0000C889 C60005                  	mov byte [rax], T_closure
 20609 0000C88C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20610 0000C890 48C74009[9DC80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0412
 20611 0000C898 E980020000              	jmp .L_lambda_simple_end_0412
 20612                                  .L_lambda_simple_code_0412:	; lambda-simple body
 20613 0000C89D 48837C241005            	cmp qword [rsp + 8 * 2], 5
 20614 0000C8A3 740B                    	je .L_lambda_simple_arity_check_ok_08d6
 20615 0000C8A5 FF742410                	push qword [rsp + 8 * 2]
 20616 0000C8A9 6A05                    	push 5
 20617 0000C8AB E9505F0000              	jmp L_error_incorrect_arity_simple
 20618                                  .L_lambda_simple_arity_check_ok_08d6:
 20619 0000C8B0 C8000000                	enter 0, 0
 20620 0000C8B4 488B4530                mov rax, qword [rbp + 48]
 20621 0000C8B8 50                      	push rax
 20622 0000C8B9 488B4520                mov rax, qword [rbp + 32]
 20623 0000C8BD 50                      	push rax
 20624 0000C8BE 6A02                    	push 2
 20625 0000C8C0 488B0425[50030000]      	mov rax, qword [free_var_106]
 20626 0000C8C8 803805                  	cmp byte [rax], T_closure 
 20627 0000C8CB 0F85316F0000                    jne L_code_ptr_error
 20628                                  
 20629 0000C8D1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20630                                  
 20631 0000C8D5 53                              push rbx
 20632                                  
 20633 0000C8D6 FF5009                          call SOB_CLOSURE_CODE(rax)
 20634                                  
 20635 0000C8D9 483D[02000000]                  	cmp rax, sob_boolean_false
 20636 0000C8DF 7427                    	je .L_if_else_026f
 20637 0000C8E1 488B4540                mov rax, qword [rbp + 64]
 20638 0000C8E5 50                      	push rax
 20639 0000C8E6 488B4530                mov rax, qword [rbp + 48]
 20640 0000C8EA 50                      	push rax
 20641 0000C8EB 6A02                    	push 2
 20642 0000C8ED 488B0425[30030000]      	mov rax, qword [free_var_102]
 20643 0000C8F5 803805                  	cmp byte [rax], T_closure 
 20644 0000C8F8 0F85046F0000                    jne L_code_ptr_error
 20645                                  
 20646 0000C8FE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20647                                  
 20648 0000C902 53                              push rbx
 20649                                  
 20650 0000C903 FF5009                          call SOB_CLOSURE_CODE(rax)
 20651                                  
 20652 0000C906 EB0A                            	jmp .L_if_end_026f
 20653                                  	.L_if_else_026f:
 20654 0000C908 48B8-                   		mov rax, qword (L_constants + 2)
 20654 0000C90A [0200000000000000] 
 20655                                  	.L_if_end_026f:
 20656 0000C912 483D[02000000]          	cmp rax, sob_boolean_false
 20657 0000C918 0F85FB010000            	jne .L_or_end_004d
 20658 0000C91E 488B4530                mov rax, qword [rbp + 48]
 20659 0000C922 50                      	push rax
 20660 0000C923 488B4520                mov rax, qword [rbp + 32]
 20661 0000C927 50                      	push rax
 20662 0000C928 6A02                    	push 2
 20663 0000C92A 488B0425[30030000]      	mov rax, qword [free_var_102]
 20664 0000C932 803805                  	cmp byte [rax], T_closure 
 20665 0000C935 0F85C76E0000                    jne L_code_ptr_error
 20666                                  
 20667 0000C93B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20668                                  
 20669 0000C93F 53                              push rbx
 20670                                  
 20671 0000C940 FF5009                          call SOB_CLOSURE_CODE(rax)
 20672                                  
 20673 0000C943 483D[02000000]                  	cmp rax, sob_boolean_false
 20674 0000C949 0F84C0010000            	je .L_if_else_0270
 20675 0000C94F 488B4520                mov rax, qword [rbp + 32]
 20676 0000C953 50                      	push rax
 20677 0000C954 488B4538                mov rax, qword [rbp + 56]
 20678 0000C958 50                      	push rax
 20679 0000C959 6A02                    	push 2
 20680 0000C95B 488B0425[78010000]      	mov rax, qword [free_var_47]
 20681 0000C963 803805                  	cmp byte [rax], T_closure 
 20682 0000C966 0F85966E0000                    jne L_code_ptr_error
 20683                                  
 20684 0000C96C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20685                                  
 20686 0000C970 53                              push rbx
 20687                                  
 20688 0000C971 FF5009                          call SOB_CLOSURE_CODE(rax)
 20689                                  
 20690 0000C974 50                              	push rax
 20691 0000C975 488B4520                mov rax, qword [rbp + 32]
 20692 0000C979 50                      	push rax
 20693 0000C97A 488B4528                mov rax, qword [rbp + 40]
 20694 0000C97E 50                      	push rax
 20695 0000C97F 6A02                    	push 2
 20696 0000C981 488B0425[78010000]      	mov rax, qword [free_var_47]
 20697 0000C989 803805                  	cmp byte [rax], T_closure 
 20698 0000C98C 0F85706E0000                    jne L_code_ptr_error
 20699                                  
 20700 0000C992 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20701                                  
 20702 0000C996 53                              push rbx
 20703                                  
 20704 0000C997 FF5009                          call SOB_CLOSURE_CODE(rax)
 20705                                  
 20706 0000C99A 50                              	push rax
 20707 0000C99B 6A02                    	push 2
 20708 0000C99D 488B4510                mov rax, qword [rbp + 16]
 20709 0000C9A1 488B4008                mov rax, qword [rax + 8]
 20710 0000C9A5 488B00                  mov rax, qword [rax + 0]
 20711 0000C9A8 803805                  	cmp byte [rax], T_closure 
 20712 0000C9AB 0F85516E0000                    jne L_code_ptr_error
 20713                                  
 20714 0000C9B1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20715                                  
 20716 0000C9B5 53                              push rbx
 20717                                  
 20718 0000C9B6 FF5009                          call SOB_CLOSURE_CODE(rax)
 20719                                  
 20720 0000C9B9 483D[02000000]                  	cmp rax, sob_boolean_false
 20721 0000C9BF 0F8548010000            	jne .L_or_end_004e
 20722 0000C9C5 488B4520                mov rax, qword [rbp + 32]
 20723 0000C9C9 50                      	push rax
 20724 0000C9CA 488B4538                mov rax, qword [rbp + 56]
 20725 0000C9CE 50                      	push rax
 20726 0000C9CF 6A02                    	push 2
 20727 0000C9D1 488B0425[78010000]      	mov rax, qword [free_var_47]
 20728 0000C9D9 803805                  	cmp byte [rax], T_closure 
 20729 0000C9DC 0F85206E0000                    jne L_code_ptr_error
 20730                                  
 20731 0000C9E2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20732                                  
 20733 0000C9E6 53                              push rbx
 20734                                  
 20735 0000C9E7 FF5009                          call SOB_CLOSURE_CODE(rax)
 20736                                  
 20737 0000C9EA 50                              	push rax
 20738 0000C9EB 488B4520                mov rax, qword [rbp + 32]
 20739 0000C9EF 50                      	push rax
 20740 0000C9F0 488B4528                mov rax, qword [rbp + 40]
 20741 0000C9F4 50                      	push rax
 20742 0000C9F5 6A02                    	push 2
 20743 0000C9F7 488B0425[78010000]      	mov rax, qword [free_var_47]
 20744 0000C9FF 803805                  	cmp byte [rax], T_closure 
 20745 0000CA02 0F85FA6D0000                    jne L_code_ptr_error
 20746                                  
 20747 0000CA08 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20748                                  
 20749 0000CA0C 53                              push rbx
 20750                                  
 20751 0000CA0D FF5009                          call SOB_CLOSURE_CODE(rax)
 20752                                  
 20753 0000CA10 50                              	push rax
 20754 0000CA11 6A02                    	push 2
 20755 0000CA13 488B4510                mov rax, qword [rbp + 16]
 20756 0000CA17 488B4008                mov rax, qword [rax + 8]
 20757 0000CA1B 488B4008                mov rax, qword [rax + 8]
 20758 0000CA1F 803805                  	cmp byte [rax], T_closure 
 20759 0000CA22 0F85DA6D0000                    jne L_code_ptr_error
 20760                                  
 20761 0000CA28 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20762                                  
 20763 0000CA2C 53                              push rbx
 20764                                  
 20765 0000CA2D FF5009                          call SOB_CLOSURE_CODE(rax)
 20766                                  
 20767 0000CA30 483D[02000000]                  	cmp rax, sob_boolean_false
 20768 0000CA36 0F84C7000000            	je .L_if_else_0271
 20769 0000CA3C 488B4540                mov rax, qword [rbp + 64]
 20770 0000CA40 50                      	push rax
 20771 0000CA41 488B4538                mov rax, qword [rbp + 56]
 20772 0000CA45 50                      	push rax
 20773 0000CA46 488B4530                mov rax, qword [rbp + 48]
 20774 0000CA4A 50                      	push rax
 20775 0000CA4B 488B4528                mov rax, qword [rbp + 40]
 20776 0000CA4F 50                      	push rax
 20777 0000CA50 48B8-                   	mov rax, qword (L_constants + 127)
 20777 0000CA52 [7F00000000000000] 
 20778 0000CA5A 50                      	push rax
 20779 0000CA5B 488B4520                mov rax, qword [rbp + 32]
 20780 0000CA5F 50                      	push rax
 20781 0000CA60 6A02                    	push 2
 20782 0000CA62 488B0425[08030000]      	mov rax, qword [free_var_97]
 20783 0000CA6A 803805                  	cmp byte [rax], T_closure 
 20784 0000CA6D 0F858F6D0000                    jne L_code_ptr_error
 20785                                  
 20786 0000CA73 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20787                                  
 20788 0000CA77 53                              push rbx
 20789                                  
 20790 0000CA78 FF5009                          call SOB_CLOSURE_CODE(rax)
 20791                                  
 20792 0000CA7B 50                              	push rax
 20793 0000CA7C 6A05                    	push 5
 20794 0000CA7E 488B4510                mov rax, qword [rbp + 16]
 20795 0000CA82 488B00                  mov rax, qword [rax + 0]
 20796 0000CA85 488B00                  mov rax, qword [rax + 0]
 20797 0000CA88 488B00                  	mov rax, qword [rax]
 20798                                  .L_lambda_simple_arity_check_ok_08d7:
 20799 0000CA8B 803805                  	cmp byte [rax], T_closure
 20800                                  
 20801 0000CA8E 0F856E6D0000                    jne L_code_ptr_error                      ; rax <- proc
 20802                                  
 20803                                  
 20804 0000CA94 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 20805                                  
 20806 0000CA98 53                              push rbx                                  ; env pushed
 20807                                  
 20808 0000CA99 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 20809                                  
 20810                                          ; sagydebug
 20811                                  
 20812 0000CA9C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 20813                                  
 20814                                          
 20815                                          
 20816 0000CA9F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 20817                                  
 20818 0000CAA3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 20819                                  
 20820                                  
 20821 0000CAA8 4D89CA                          mov r10, r9
 20822 0000CAAB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 20823                                          
 20824 0000CAAF 4D89D7                          mov r15, r10
 20825 0000CAB2 4983C7FF                        add r15, -1
 20826                                                                                         
 20827 0000CAB6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 20828 0000CAB9 4983C404                        add r12, 4
 20829 0000CABD 4983C4FF                        add r12, -1
 20830                                  
 20831 0000CAC1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 20832                                  .L_tc_recycle_frame_loop_04c5:
 20833 0000CAC7 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 20834                                  
 20835 0000CACB 4E8974E500                      mov [rbp + (r12 * 8)], r14
 20836                                  
 20837                                  
 20838                                  
 20839 0000CAD0 41BE00000000                    mov r14, 0                                ; clean box
 20840                                  
 20841                                  
 20842 0000CAD6 4983C7FF                        add r15, -1           
 20843 0000CADA 4983C2FF                        add r10, -1                               ; args_copied_counter--
 20844                                  
 20845 0000CADE 4983C4FF                        add r12, -1 
 20846                                  
 20847 0000CAE2 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 20848 0000CAE6 75DF                    	jne .L_tc_recycle_frame_loop_04c5
 20849                                  .L_tc_recycle_frame_done_04c5:
 20850                                  ;this pop rbp in sot to the right place
 20851 0000CAE8 4D89C7                  mov r15, r8
 20852                                  
 20853 0000CAEB 4983C704                        add r15, 4
 20854                                  
 20855 0000CAEF 49C1E703                        shl r15, 3
 20856                                  
 20857 0000CAF3 4C01FC                          add rsp, r15
 20858 0000CAF6 5D                      	pop rbp                                  ; restore the old rbp
 20859                                  
 20860 0000CAF7 488B4D00                        mov rcx, qword [rbp]
 20861 0000CAFB 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 20862                                            ; rbx <- code(proc)
 20863                                  
 20864 0000CAFF FFE3                            jmp rbx
 20865 0000CB01 EB0A                    	jmp .L_if_end_0271
 20866                                  	.L_if_else_0271:
 20867 0000CB03 48B8-                   		mov rax, qword (L_constants + 2)
 20867 0000CB05 [0200000000000000] 
 20868                                  	.L_if_end_0271:
 20869                                  .L_or_end_004e:
 20870 0000CB0D EB0A                    	jmp .L_if_end_0270
 20871                                  	.L_if_else_0270:
 20872 0000CB0F 48B8-                   		mov rax, qword (L_constants + 2)
 20872 0000CB11 [0200000000000000] 
 20873                                  	.L_if_end_0270:
 20874                                  .L_or_end_004d:
 20875 0000CB19 C9                      	leave
 20876 0000CB1A C23800                  	ret 8 * (2 + 5)
 20877                                  .L_lambda_simple_end_0412:	; new closure is in rax
 20878 0000CB1D 50                      push rax
 20879 0000CB1E 488B4520                mov rax, qword [rbp + 32]
 20880 0000CB22 8F00                    pop qword [rax]
 20881 0000CB24 48B8-                   mov rax, sob_void
 20881 0000CB26 [0000000000000000] 
 20882                                  
 20883 0000CB2E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20884 0000CB33 E80F5D0000              	call malloc
 20885 0000CB38 50                      	push rax
 20886 0000CB39 BF08000000              	mov rdi, 8 * 1	; new rib
 20887 0000CB3E E8045D0000              	call malloc
 20888 0000CB43 50                      	push rax
 20889 0000CB44 BF18000000              	mov rdi, 8 * 3	; extended env
 20890 0000CB49 E8F95C0000              	call malloc
 20891 0000CB4E 488B7D10                	mov rdi, ENV
 20892 0000CB52 BE00000000              	mov rsi, 0
 20893 0000CB57 BA01000000              	mov rdx, 1
 20894                                  .L_lambda_simple_env_loop_0413:	; ext_env[i + 1] <-- env[i]
 20895 0000CB5C 4883FE02                	cmp rsi, 2
 20896 0000CB60 7410                    	je .L_lambda_simple_env_end_0413
 20897 0000CB62 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20898 0000CB66 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20899 0000CB6A 48FFC6                  	inc rsi
 20900 0000CB6D 48FFC2                  	inc rdx
 20901 0000CB70 EBEA                    	jmp .L_lambda_simple_env_loop_0413
 20902                                  .L_lambda_simple_env_end_0413:
 20903 0000CB72 5B                      	pop rbx
 20904 0000CB73 BE00000000              	mov rsi, 0
 20905                                  .L_lambda_simple_params_loop_0413:	; copy params
 20906 0000CB78 4883FE01                	cmp rsi, 1
 20907 0000CB7C 740E                    	je .L_lambda_simple_params_end_0413
 20908 0000CB7E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20909 0000CB83 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20910 0000CB87 48FFC6                  	inc rsi
 20911 0000CB8A EBEC                    	jmp .L_lambda_simple_params_loop_0413
 20912                                  .L_lambda_simple_params_end_0413:
 20913 0000CB8C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20914 0000CB8F 4889C3                  	mov rbx, rax
 20915 0000CB92 58                      	pop rax
 20916 0000CB93 C60005                  	mov byte [rax], T_closure
 20917 0000CB96 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20918 0000CB9A 48C74009[A7CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0413
 20919 0000CBA2 E903030000              	jmp .L_lambda_simple_end_0413
 20920                                  .L_lambda_simple_code_0413:	; lambda-simple body
 20921 0000CBA7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20922 0000CBAD 740B                    	je .L_lambda_simple_arity_check_ok_08d8
 20923 0000CBAF FF742410                	push qword [rsp + 8 * 2]
 20924 0000CBB3 6A02                    	push 2
 20925 0000CBB5 E9465C0000              	jmp L_error_incorrect_arity_simple
 20926                                  .L_lambda_simple_arity_check_ok_08d8:
 20927 0000CBBA C8000000                	enter 0, 0
 20928 0000CBBE 488B4528                mov rax, qword [rbp + 40]
 20929 0000CBC2 50                      	push rax
 20930 0000CBC3 6A01                    	push 1
 20931 0000CBC5 488B0425[90000000]      	mov rax, qword [free_var_18]
 20932 0000CBCD 803805                  	cmp byte [rax], T_closure 
 20933 0000CBD0 0F852C6C0000                    jne L_code_ptr_error
 20934                                  
 20935 0000CBD6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20936                                  
 20937 0000CBDA 53                              push rbx
 20938                                  
 20939 0000CBDB FF5009                          call SOB_CLOSURE_CODE(rax)
 20940                                  
 20941 0000CBDE 50                              	push rax
 20942 0000CBDF 488B4520                mov rax, qword [rbp + 32]
 20943 0000CBE3 50                      	push rax
 20944 0000CBE4 6A01                    	push 1
 20945 0000CBE6 488B0425[90000000]      	mov rax, qword [free_var_18]
 20946 0000CBEE 803805                  	cmp byte [rax], T_closure 
 20947 0000CBF1 0F850B6C0000                    jne L_code_ptr_error
 20948                                  
 20949 0000CBF7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20950                                  
 20951 0000CBFB 53                              push rbx
 20952                                  
 20953 0000CBFC FF5009                          call SOB_CLOSURE_CODE(rax)
 20954                                  
 20955 0000CBFF 50                              	push rax
 20956 0000CC00 6A02                    	push 2
 20957 0000CC02 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20958 0000CC07 E83B5C0000              	call malloc
 20959 0000CC0C 50                      	push rax
 20960 0000CC0D BF10000000              	mov rdi, 8 * 2	; new rib
 20961 0000CC12 E8305C0000              	call malloc
 20962 0000CC17 50                      	push rax
 20963 0000CC18 BF20000000              	mov rdi, 8 * 4	; extended env
 20964 0000CC1D E8255C0000              	call malloc
 20965 0000CC22 488B7D10                	mov rdi, ENV
 20966 0000CC26 BE00000000              	mov rsi, 0
 20967 0000CC2B BA01000000              	mov rdx, 1
 20968                                  .L_lambda_simple_env_loop_0414:	; ext_env[i + 1] <-- env[i]
 20969 0000CC30 4883FE03                	cmp rsi, 3
 20970 0000CC34 7410                    	je .L_lambda_simple_env_end_0414
 20971 0000CC36 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20972 0000CC3A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20973 0000CC3E 48FFC6                  	inc rsi
 20974 0000CC41 48FFC2                  	inc rdx
 20975 0000CC44 EBEA                    	jmp .L_lambda_simple_env_loop_0414
 20976                                  .L_lambda_simple_env_end_0414:
 20977 0000CC46 5B                      	pop rbx
 20978 0000CC47 BE00000000              	mov rsi, 0
 20979                                  .L_lambda_simple_params_loop_0414:	; copy params
 20980 0000CC4C 4883FE02                	cmp rsi, 2
 20981 0000CC50 740E                    	je .L_lambda_simple_params_end_0414
 20982 0000CC52 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20983 0000CC57 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20984 0000CC5B 48FFC6                  	inc rsi
 20985 0000CC5E EBEC                    	jmp .L_lambda_simple_params_loop_0414
 20986                                  .L_lambda_simple_params_end_0414:
 20987 0000CC60 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20988 0000CC63 4889C3                  	mov rbx, rax
 20989 0000CC66 58                      	pop rax
 20990 0000CC67 C60005                  	mov byte [rax], T_closure
 20991 0000CC6A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20992 0000CC6E 48C74009[7BCC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0414
 20993 0000CC76 E9B5010000              	jmp .L_lambda_simple_end_0414
 20994                                  .L_lambda_simple_code_0414:	; lambda-simple body
 20995 0000CC7B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20996 0000CC81 740B                    	je .L_lambda_simple_arity_check_ok_08d9
 20997 0000CC83 FF742410                	push qword [rsp + 8 * 2]
 20998 0000CC87 6A02                    	push 2
 20999 0000CC89 E9725B0000              	jmp L_error_incorrect_arity_simple
 21000                                  .L_lambda_simple_arity_check_ok_08d9:
 21001 0000CC8E C8000000                	enter 0, 0
 21002 0000CC92 488B4528                mov rax, qword [rbp + 40]
 21003 0000CC96 50                      	push rax
 21004 0000CC97 488B4520                mov rax, qword [rbp + 32]
 21005 0000CC9B 50                      	push rax
 21006 0000CC9C 6A02                    	push 2
 21007 0000CC9E 488B0425[38030000]      	mov rax, qword [free_var_103]
 21008 0000CCA6 803805                  	cmp byte [rax], T_closure 
 21009 0000CCA9 0F85536B0000                    jne L_code_ptr_error
 21010                                  
 21011 0000CCAF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21012                                  
 21013 0000CCB3 53                              push rbx
 21014                                  
 21015 0000CCB4 FF5009                          call SOB_CLOSURE_CODE(rax)
 21016                                  
 21017 0000CCB7 483D[02000000]                  	cmp rax, sob_boolean_false
 21018 0000CCBD 0F84B7000000            	je .L_if_else_0272
 21019 0000CCC3 488B4528                mov rax, qword [rbp + 40]
 21020 0000CCC7 50                      	push rax
 21021 0000CCC8 488B4510                mov rax, qword [rbp + 16]
 21022 0000CCCC 488B00                  mov rax, qword [rax + 0]
 21023 0000CCCF 488B4008                mov rax, qword [rax + 8]
 21024 0000CCD3 50                      	push rax
 21025 0000CCD4 488B4520                mov rax, qword [rbp + 32]
 21026 0000CCD8 50                      	push rax
 21027 0000CCD9 488B4510                mov rax, qword [rbp + 16]
 21028 0000CCDD 488B00                  mov rax, qword [rax + 0]
 21029 0000CCE0 488B00                  mov rax, qword [rax + 0]
 21030 0000CCE3 50                      	push rax
 21031 0000CCE4 48B8-                   	mov rax, qword (L_constants + 31)
 21031 0000CCE6 [1F00000000000000] 
 21032 0000CCEE 50                      	push rax
 21033 0000CCEF 6A05                    	push 5
 21034 0000CCF1 488B4510                mov rax, qword [rbp + 16]
 21035 0000CCF5 488B4008                mov rax, qword [rax + 8]
 21036 0000CCF9 488B00                  mov rax, qword [rax + 0]
 21037 0000CCFC 488B00                  	mov rax, qword [rax]
 21038                                  .L_lambda_simple_arity_check_ok_08db:
 21039 0000CCFF 803805                  	cmp byte [rax], T_closure
 21040                                  
 21041 0000CD02 0F85FA6A0000                    jne L_code_ptr_error                      ; rax <- proc
 21042                                  
 21043                                  
 21044 0000CD08 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21045                                  
 21046 0000CD0C 53                              push rbx                                  ; env pushed
 21047                                  
 21048 0000CD0D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21049                                  
 21050                                          ; sagydebug
 21051                                  
 21052 0000CD10 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21053                                  
 21054                                          
 21055                                          
 21056 0000CD13 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21057                                  
 21058 0000CD17 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21059                                  
 21060                                  
 21061 0000CD1C 4D89CA                          mov r10, r9
 21062 0000CD1F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 21063                                          
 21064 0000CD23 4D89D7                          mov r15, r10
 21065 0000CD26 4983C7FF                        add r15, -1
 21066                                                                                         
 21067 0000CD2A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21068 0000CD2D 4983C404                        add r12, 4
 21069 0000CD31 4983C4FF                        add r12, -1
 21070                                  
 21071 0000CD35 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21072                                  .L_tc_recycle_frame_loop_04c7:
 21073 0000CD3B 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 21074                                  
 21075 0000CD3F 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21076                                  
 21077                                  
 21078                                  
 21079 0000CD44 41BE00000000                    mov r14, 0                                ; clean box
 21080                                  
 21081                                  
 21082 0000CD4A 4983C7FF                        add r15, -1           
 21083 0000CD4E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21084                                  
 21085 0000CD52 4983C4FF                        add r12, -1 
 21086                                  
 21087 0000CD56 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21088 0000CD5A 75DF                    	jne .L_tc_recycle_frame_loop_04c7
 21089                                  .L_tc_recycle_frame_done_04c7:
 21090                                  ;this pop rbp in sot to the right place
 21091 0000CD5C 4D89C7                  mov r15, r8
 21092                                  
 21093 0000CD5F 4983C704                        add r15, 4
 21094                                  
 21095 0000CD63 49C1E703                        shl r15, 3
 21096                                  
 21097 0000CD67 4C01FC                          add rsp, r15
 21098 0000CD6A 5D                      	pop rbp                                  ; restore the old rbp
 21099                                  
 21100 0000CD6B 488B4D00                        mov rcx, qword [rbp]
 21101 0000CD6F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21102                                            ; rbx <- code(proc)
 21103                                  
 21104 0000CD73 FFE3                            jmp rbx
 21105 0000CD75 E9B2000000              	jmp .L_if_end_0272
 21106                                  	.L_if_else_0272:
 21107 0000CD7A 488B4520                	mov rax, qword [rbp + 32]
 21108 0000CD7E 50                      	push rax
 21109 0000CD7F 488B4510                mov rax, qword [rbp + 16]
 21110 0000CD83 488B00                  mov rax, qword [rax + 0]
 21111 0000CD86 488B00                  mov rax, qword [rax + 0]
 21112 0000CD89 50                      	push rax
 21113 0000CD8A 488B4528                mov rax, qword [rbp + 40]
 21114 0000CD8E 50                      	push rax
 21115 0000CD8F 488B4510                mov rax, qword [rbp + 16]
 21116 0000CD93 488B00                  mov rax, qword [rax + 0]
 21117 0000CD96 488B4008                mov rax, qword [rax + 8]
 21118 0000CD9A 50                      	push rax
 21119 0000CD9B 48B8-                   	mov rax, qword (L_constants + 31)
 21119 0000CD9D [1F00000000000000] 
 21120 0000CDA5 50                      	push rax
 21121 0000CDA6 6A05                    	push 5
 21122 0000CDA8 488B4510                mov rax, qword [rbp + 16]
 21123 0000CDAC 488B4008                mov rax, qword [rax + 8]
 21124 0000CDB0 488B00                  mov rax, qword [rax + 0]
 21125 0000CDB3 488B00                  	mov rax, qword [rax]
 21126                                  .L_lambda_simple_arity_check_ok_08da:
 21127 0000CDB6 803805                  	cmp byte [rax], T_closure
 21128                                  
 21129 0000CDB9 0F85436A0000                    jne L_code_ptr_error                      ; rax <- proc
 21130                                  
 21131                                  
 21132 0000CDBF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21133                                  
 21134 0000CDC3 53                              push rbx                                  ; env pushed
 21135                                  
 21136 0000CDC4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21137                                  
 21138                                          ; sagydebug
 21139                                  
 21140 0000CDC7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21141                                  
 21142                                          
 21143                                          
 21144 0000CDCA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21145                                  
 21146 0000CDCE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21147                                  
 21148                                  
 21149 0000CDD3 4D89CA                          mov r10, r9
 21150 0000CDD6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 21151                                          
 21152 0000CDDA 4D89D7                          mov r15, r10
 21153 0000CDDD 4983C7FF                        add r15, -1
 21154                                                                                         
 21155 0000CDE1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21156 0000CDE4 4983C404                        add r12, 4
 21157 0000CDE8 4983C4FF                        add r12, -1
 21158                                  
 21159 0000CDEC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21160                                  .L_tc_recycle_frame_loop_04c6:
 21161 0000CDF2 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 21162                                  
 21163 0000CDF6 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21164                                  
 21165                                  
 21166                                  
 21167 0000CDFB 41BE00000000                    mov r14, 0                                ; clean box
 21168                                  
 21169                                  
 21170 0000CE01 4983C7FF                        add r15, -1           
 21171 0000CE05 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21172                                  
 21173 0000CE09 4983C4FF                        add r12, -1 
 21174                                  
 21175 0000CE0D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21176 0000CE11 75DF                    	jne .L_tc_recycle_frame_loop_04c6
 21177                                  .L_tc_recycle_frame_done_04c6:
 21178                                  ;this pop rbp in sot to the right place
 21179 0000CE13 4D89C7                  mov r15, r8
 21180                                  
 21181 0000CE16 4983C704                        add r15, 4
 21182                                  
 21183 0000CE1A 49C1E703                        shl r15, 3
 21184                                  
 21185 0000CE1E 4C01FC                          add rsp, r15
 21186 0000CE21 5D                      	pop rbp                                  ; restore the old rbp
 21187                                  
 21188 0000CE22 488B4D00                        mov rcx, qword [rbp]
 21189 0000CE26 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21190                                            ; rbx <- code(proc)
 21191                                  
 21192 0000CE2A FFE3                            jmp rbx
 21193                                  	.L_if_end_0272:
 21194 0000CE2C C9                      	leave
 21195 0000CE2D C22000                  	ret 8 * (2 + 2)
 21196                                  .L_lambda_simple_end_0414:	; new closure is in rax
 21197                                  .L_lambda_simple_arity_check_ok_08dc:
 21198 0000CE30 803805                  	cmp byte [rax], T_closure
 21199                                  
 21200 0000CE33 0F85C9690000                    jne L_code_ptr_error                      ; rax <- proc
 21201                                  
 21202                                  
 21203 0000CE39 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21204                                  
 21205 0000CE3D 53                              push rbx                                  ; env pushed
 21206                                  
 21207 0000CE3E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21208                                  
 21209                                          ; sagydebug
 21210                                  
 21211 0000CE41 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21212                                  
 21213                                          
 21214                                          
 21215 0000CE44 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21216                                  
 21217 0000CE48 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21218                                  
 21219                                  
 21220 0000CE4D 4D89CA                          mov r10, r9
 21221 0000CE50 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 21222                                          
 21223 0000CE54 4D89D7                          mov r15, r10
 21224 0000CE57 4983C7FF                        add r15, -1
 21225                                                                                         
 21226 0000CE5B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21227 0000CE5E 4983C404                        add r12, 4
 21228 0000CE62 4983C4FF                        add r12, -1
 21229                                  
 21230 0000CE66 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21231                                  .L_tc_recycle_frame_loop_04c8:
 21232 0000CE6C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 21233                                  
 21234 0000CE70 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21235                                  
 21236                                  
 21237                                  
 21238 0000CE75 41BE00000000                    mov r14, 0                                ; clean box
 21239                                  
 21240                                  
 21241 0000CE7B 4983C7FF                        add r15, -1           
 21242 0000CE7F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21243                                  
 21244 0000CE83 4983C4FF                        add r12, -1 
 21245                                  
 21246 0000CE87 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21247 0000CE8B 75DF                    	jne .L_tc_recycle_frame_loop_04c8
 21248                                  .L_tc_recycle_frame_done_04c8:
 21249                                  ;this pop rbp in sot to the right place
 21250 0000CE8D 4D89C7                  mov r15, r8
 21251                                  
 21252 0000CE90 4983C704                        add r15, 4
 21253                                  
 21254 0000CE94 49C1E703                        shl r15, 3
 21255                                  
 21256 0000CE98 4C01FC                          add rsp, r15
 21257 0000CE9B 5D                      	pop rbp                                  ; restore the old rbp
 21258                                  
 21259 0000CE9C 488B4D00                        mov rcx, qword [rbp]
 21260 0000CEA0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21261                                            ; rbx <- code(proc)
 21262                                  
 21263 0000CEA4 FFE3                            jmp rbx
 21264 0000CEA6 C9                      	leave
 21265 0000CEA7 C22000                  	ret 8 * (2 + 2)
 21266                                  .L_lambda_simple_end_0413:	; new closure is in rax
 21267 0000CEAA 50                      	push rax
 21268 0000CEAB 6A01                    	push 1
 21269 0000CEAD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21270 0000CEB2 E890590000              	call malloc
 21271 0000CEB7 50                      	push rax
 21272 0000CEB8 BF08000000              	mov rdi, 8 * 1	; new rib
 21273 0000CEBD E885590000              	call malloc
 21274 0000CEC2 50                      	push rax
 21275 0000CEC3 BF18000000              	mov rdi, 8 * 3	; extended env
 21276 0000CEC8 E87A590000              	call malloc
 21277 0000CECD 488B7D10                	mov rdi, ENV
 21278 0000CED1 BE00000000              	mov rsi, 0
 21279 0000CED6 BA01000000              	mov rdx, 1
 21280                                  .L_lambda_simple_env_loop_0415:	; ext_env[i + 1] <-- env[i]
 21281 0000CEDB 4883FE02                	cmp rsi, 2
 21282 0000CEDF 7410                    	je .L_lambda_simple_env_end_0415
 21283 0000CEE1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21284 0000CEE5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21285 0000CEE9 48FFC6                  	inc rsi
 21286 0000CEEC 48FFC2                  	inc rdx
 21287 0000CEEF EBEA                    	jmp .L_lambda_simple_env_loop_0415
 21288                                  .L_lambda_simple_env_end_0415:
 21289 0000CEF1 5B                      	pop rbx
 21290 0000CEF2 BE00000000              	mov rsi, 0
 21291                                  .L_lambda_simple_params_loop_0415:	; copy params
 21292 0000CEF7 4883FE01                	cmp rsi, 1
 21293 0000CEFB 740E                    	je .L_lambda_simple_params_end_0415
 21294 0000CEFD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21295 0000CF02 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21296 0000CF06 48FFC6                  	inc rsi
 21297 0000CF09 EBEC                    	jmp .L_lambda_simple_params_loop_0415
 21298                                  .L_lambda_simple_params_end_0415:
 21299 0000CF0B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21300 0000CF0E 4889C3                  	mov rbx, rax
 21301 0000CF11 58                      	pop rax
 21302 0000CF12 C60005                  	mov byte [rax], T_closure
 21303 0000CF15 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21304 0000CF19 48C74009[26CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0415
 21305 0000CF21 E94B050000              	jmp .L_lambda_simple_end_0415
 21306                                  .L_lambda_simple_code_0415:	; lambda-simple body
 21307 0000CF26 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21308 0000CF2C 740B                    	je .L_lambda_simple_arity_check_ok_08dd
 21309 0000CF2E FF742410                	push qword [rsp + 8 * 2]
 21310 0000CF32 6A01                    	push 1
 21311 0000CF34 E9C7580000              	jmp L_error_incorrect_arity_simple
 21312                                  .L_lambda_simple_arity_check_ok_08dd:
 21313 0000CF39 C8000000                	enter 0, 0
 21314 0000CF3D 48B8-                   	mov rax, qword (L_constants + 22)
 21314 0000CF3F [1600000000000000] 
 21315 0000CF47 50                      	push rax
 21316 0000CF48 6A01                    	push 1
 21317 0000CF4A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21318 0000CF4F E8F3580000              	call malloc
 21319 0000CF54 50                      	push rax
 21320 0000CF55 BF08000000              	mov rdi, 8 * 1	; new rib
 21321 0000CF5A E8E8580000              	call malloc
 21322 0000CF5F 50                      	push rax
 21323 0000CF60 BF20000000              	mov rdi, 8 * 4	; extended env
 21324 0000CF65 E8DD580000              	call malloc
 21325 0000CF6A 488B7D10                	mov rdi, ENV
 21326 0000CF6E BE00000000              	mov rsi, 0
 21327 0000CF73 BA01000000              	mov rdx, 1
 21328                                  .L_lambda_simple_env_loop_0416:	; ext_env[i + 1] <-- env[i]
 21329 0000CF78 4883FE03                	cmp rsi, 3
 21330 0000CF7C 7410                    	je .L_lambda_simple_env_end_0416
 21331 0000CF7E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21332 0000CF82 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21333 0000CF86 48FFC6                  	inc rsi
 21334 0000CF89 48FFC2                  	inc rdx
 21335 0000CF8C EBEA                    	jmp .L_lambda_simple_env_loop_0416
 21336                                  .L_lambda_simple_env_end_0416:
 21337 0000CF8E 5B                      	pop rbx
 21338 0000CF8F BE00000000              	mov rsi, 0
 21339                                  .L_lambda_simple_params_loop_0416:	; copy params
 21340 0000CF94 4883FE01                	cmp rsi, 1
 21341 0000CF98 740E                    	je .L_lambda_simple_params_end_0416
 21342 0000CF9A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21343 0000CF9F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21344 0000CFA3 48FFC6                  	inc rsi
 21345 0000CFA6 EBEC                    	jmp .L_lambda_simple_params_loop_0416
 21346                                  .L_lambda_simple_params_end_0416:
 21347 0000CFA8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21348 0000CFAB 4889C3                  	mov rbx, rax
 21349 0000CFAE 58                      	pop rax
 21350 0000CFAF C60005                  	mov byte [rax], T_closure
 21351 0000CFB2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21352 0000CFB6 48C74009[C3CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0416
 21353 0000CFBE E934040000              	jmp .L_lambda_simple_end_0416
 21354                                  .L_lambda_simple_code_0416:	; lambda-simple body
 21355 0000CFC3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21356 0000CFC9 740B                    	je .L_lambda_simple_arity_check_ok_08de
 21357 0000CFCB FF742410                	push qword [rsp + 8 * 2]
 21358 0000CFCF 6A01                    	push 1
 21359 0000CFD1 E92A580000              	jmp L_error_incorrect_arity_simple
 21360                                  .L_lambda_simple_arity_check_ok_08de:
 21361 0000CFD6 C8000000                	enter 0, 0
 21362 0000CFDA 488B4520                mov rax, qword [rbp + 32]
 21363 0000CFDE BF08000000              mov rdi, 8
 21364 0000CFE3 4889C3                  mov rbx, rax
 21365 0000CFE6 E85C580000              call malloc
 21366 0000CFEB 488918                  mov qword [rax], rbx
 21367 0000CFEE 48894520                mov qword [rbp + 32], rax
 21368 0000CFF2 48B8-                   mov rax, sob_void
 21368 0000CFF4 [0000000000000000] 
 21369 0000CFFC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21370 0000D001 E841580000              	call malloc
 21371 0000D006 50                      	push rax
 21372 0000D007 BF08000000              	mov rdi, 8 * 1	; new rib
 21373 0000D00C E836580000              	call malloc
 21374 0000D011 50                      	push rax
 21375 0000D012 BF28000000              	mov rdi, 8 * 5	; extended env
 21376 0000D017 E82B580000              	call malloc
 21377 0000D01C 488B7D10                	mov rdi, ENV
 21378 0000D020 BE00000000              	mov rsi, 0
 21379 0000D025 BA01000000              	mov rdx, 1
 21380                                  .L_lambda_simple_env_loop_0417:	; ext_env[i + 1] <-- env[i]
 21381 0000D02A 4883FE04                	cmp rsi, 4
 21382 0000D02E 7410                    	je .L_lambda_simple_env_end_0417
 21383 0000D030 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21384 0000D034 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21385 0000D038 48FFC6                  	inc rsi
 21386 0000D03B 48FFC2                  	inc rdx
 21387 0000D03E EBEA                    	jmp .L_lambda_simple_env_loop_0417
 21388                                  .L_lambda_simple_env_end_0417:
 21389 0000D040 5B                      	pop rbx
 21390 0000D041 BE00000000              	mov rsi, 0
 21391                                  .L_lambda_simple_params_loop_0417:	; copy params
 21392 0000D046 4883FE01                	cmp rsi, 1
 21393 0000D04A 740E                    	je .L_lambda_simple_params_end_0417
 21394 0000D04C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21395 0000D051 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21396 0000D055 48FFC6                  	inc rsi
 21397 0000D058 EBEC                    	jmp .L_lambda_simple_params_loop_0417
 21398                                  .L_lambda_simple_params_end_0417:
 21399 0000D05A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21400 0000D05D 4889C3                  	mov rbx, rax
 21401 0000D060 58                      	pop rax
 21402 0000D061 C60005                  	mov byte [rax], T_closure
 21403 0000D064 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21404 0000D068 48C74009[75D00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0417
 21405 0000D070 E96A010000              	jmp .L_lambda_simple_end_0417
 21406                                  .L_lambda_simple_code_0417:	; lambda-simple body
 21407 0000D075 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21408 0000D07B 740B                    	je .L_lambda_simple_arity_check_ok_08df
 21409 0000D07D FF742410                	push qword [rsp + 8 * 2]
 21410 0000D081 6A02                    	push 2
 21411 0000D083 E978570000              	jmp L_error_incorrect_arity_simple
 21412                                  .L_lambda_simple_arity_check_ok_08df:
 21413 0000D088 C8000000                	enter 0, 0
 21414 0000D08C 488B4528                mov rax, qword [rbp + 40]
 21415 0000D090 50                      	push rax
 21416 0000D091 6A01                    	push 1
 21417 0000D093 488B0425[00000000]      	mov rax, qword [free_var_0]
 21418 0000D09B 803805                  	cmp byte [rax], T_closure 
 21419 0000D09E 0F855E670000                    jne L_code_ptr_error
 21420                                  
 21421 0000D0A4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21422                                  
 21423 0000D0A8 53                              push rbx
 21424                                  
 21425 0000D0A9 FF5009                          call SOB_CLOSURE_CODE(rax)
 21426                                  
 21427 0000D0AC 483D[02000000]                  	cmp rax, sob_boolean_false
 21428 0000D0B2 0F8523010000            	jne .L_or_end_004f
 21429 0000D0B8 488B4528                mov rax, qword [rbp + 40]
 21430 0000D0BC 50                      	push rax
 21431 0000D0BD 6A01                    	push 1
 21432 0000D0BF 488B0425[80000000]      	mov rax, qword [free_var_16]
 21433 0000D0C7 803805                  	cmp byte [rax], T_closure 
 21434 0000D0CA 0F8532670000                    jne L_code_ptr_error
 21435                                  
 21436 0000D0D0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21437                                  
 21438 0000D0D4 53                              push rbx
 21439                                  
 21440 0000D0D5 FF5009                          call SOB_CLOSURE_CODE(rax)
 21441                                  
 21442 0000D0D8 50                              	push rax
 21443 0000D0D9 488B4520                mov rax, qword [rbp + 32]
 21444 0000D0DD 50                      	push rax
 21445 0000D0DE 6A02                    	push 2
 21446 0000D0E0 488B4510                mov rax, qword [rbp + 16]
 21447 0000D0E4 488B4008                mov rax, qword [rax + 8]
 21448 0000D0E8 488B00                  mov rax, qword [rax + 0]
 21449 0000D0EB 803805                  	cmp byte [rax], T_closure 
 21450 0000D0EE 0F850E670000                    jne L_code_ptr_error
 21451                                  
 21452 0000D0F4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21453                                  
 21454 0000D0F8 53                              push rbx
 21455                                  
 21456 0000D0F9 FF5009                          call SOB_CLOSURE_CODE(rax)
 21457                                  
 21458 0000D0FC 483D[02000000]                  	cmp rax, sob_boolean_false
 21459 0000D102 0F84C9000000            	je .L_if_else_0273
 21460 0000D108 488B4528                mov rax, qword [rbp + 40]
 21461 0000D10C 50                      	push rax
 21462 0000D10D 6A01                    	push 1
 21463 0000D10F 488B0425[88000000]      	mov rax, qword [free_var_17]
 21464 0000D117 803805                  	cmp byte [rax], T_closure 
 21465 0000D11A 0F85E2660000                    jne L_code_ptr_error
 21466                                  
 21467 0000D120 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21468                                  
 21469 0000D124 53                              push rbx
 21470                                  
 21471 0000D125 FF5009                          call SOB_CLOSURE_CODE(rax)
 21472                                  
 21473 0000D128 50                              	push rax
 21474 0000D129 488B4528                mov rax, qword [rbp + 40]
 21475 0000D12D 50                      	push rax
 21476 0000D12E 6A01                    	push 1
 21477 0000D130 488B0425[80000000]      	mov rax, qword [free_var_16]
 21478 0000D138 803805                  	cmp byte [rax], T_closure 
 21479 0000D13B 0F85C1660000                    jne L_code_ptr_error
 21480                                  
 21481 0000D141 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21482                                  
 21483 0000D145 53                              push rbx
 21484                                  
 21485 0000D146 FF5009                          call SOB_CLOSURE_CODE(rax)
 21486                                  
 21487 0000D149 50                              	push rax
 21488 0000D14A 6A02                    	push 2
 21489 0000D14C 488B4510                mov rax, qword [rbp + 16]
 21490 0000D150 488B00                  mov rax, qword [rax + 0]
 21491 0000D153 488B00                  mov rax, qword [rax + 0]
 21492 0000D156 488B00                  	mov rax, qword [rax]
 21493                                  .L_lambda_simple_arity_check_ok_08e0:
 21494 0000D159 803805                  	cmp byte [rax], T_closure
 21495                                  
 21496 0000D15C 0F85A0660000                    jne L_code_ptr_error                      ; rax <- proc
 21497                                  
 21498                                  
 21499 0000D162 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21500                                  
 21501 0000D166 53                              push rbx                                  ; env pushed
 21502                                  
 21503 0000D167 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21504                                  
 21505                                          ; sagydebug
 21506                                  
 21507 0000D16A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21508                                  
 21509                                          
 21510                                          
 21511 0000D16D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21512                                  
 21513 0000D171 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21514                                  
 21515                                  
 21516 0000D176 4D89CA                          mov r10, r9
 21517 0000D179 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 21518                                          
 21519 0000D17D 4D89D7                          mov r15, r10
 21520 0000D180 4983C7FF                        add r15, -1
 21521                                                                                         
 21522 0000D184 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21523 0000D187 4983C404                        add r12, 4
 21524 0000D18B 4983C4FF                        add r12, -1
 21525                                  
 21526 0000D18F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21527                                  .L_tc_recycle_frame_loop_04c9:
 21528 0000D195 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 21529                                  
 21530 0000D199 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21531                                  
 21532                                  
 21533                                  
 21534 0000D19E 41BE00000000                    mov r14, 0                                ; clean box
 21535                                  
 21536                                  
 21537 0000D1A4 4983C7FF                        add r15, -1           
 21538 0000D1A8 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21539                                  
 21540 0000D1AC 4983C4FF                        add r12, -1 
 21541                                  
 21542 0000D1B0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21543 0000D1B4 75DF                    	jne .L_tc_recycle_frame_loop_04c9
 21544                                  .L_tc_recycle_frame_done_04c9:
 21545                                  ;this pop rbp in sot to the right place
 21546 0000D1B6 4D89C7                  mov r15, r8
 21547                                  
 21548 0000D1B9 4983C704                        add r15, 4
 21549                                  
 21550 0000D1BD 49C1E703                        shl r15, 3
 21551                                  
 21552 0000D1C1 4C01FC                          add rsp, r15
 21553 0000D1C4 5D                      	pop rbp                                  ; restore the old rbp
 21554                                  
 21555 0000D1C5 488B4D00                        mov rcx, qword [rbp]
 21556 0000D1C9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21557                                            ; rbx <- code(proc)
 21558                                  
 21559 0000D1CD FFE3                            jmp rbx
 21560 0000D1CF EB0A                    	jmp .L_if_end_0273
 21561                                  	.L_if_else_0273:
 21562 0000D1D1 48B8-                   		mov rax, qword (L_constants + 2)
 21562 0000D1D3 [0200000000000000] 
 21563                                  	.L_if_end_0273:
 21564                                  .L_or_end_004f:
 21565 0000D1DB C9                      	leave
 21566 0000D1DC C22000                  	ret 8 * (2 + 2)
 21567                                  .L_lambda_simple_end_0417:	; new closure is in rax
 21568 0000D1DF 50                      push rax
 21569 0000D1E0 488B4520                mov rax, qword [rbp + 32]
 21570 0000D1E4 8F00                    pop qword [rax]
 21571 0000D1E6 48B8-                   mov rax, sob_void
 21571 0000D1E8 [0000000000000000] 
 21572                                  
 21573 0000D1F0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21574 0000D1F5 E84D560000              	call malloc
 21575 0000D1FA 50                      	push rax
 21576 0000D1FB BF08000000              	mov rdi, 8 * 1	; new rib
 21577 0000D200 E842560000              	call malloc
 21578 0000D205 50                      	push rax
 21579 0000D206 BF28000000              	mov rdi, 8 * 5	; extended env
 21580 0000D20B E837560000              	call malloc
 21581 0000D210 488B7D10                	mov rdi, ENV
 21582 0000D214 BE00000000              	mov rsi, 0
 21583 0000D219 BA01000000              	mov rdx, 1
 21584                                  .L_lambda_opt_env_loop_009c:	; ext_env[i + 1] <-- env[i]
 21585 0000D21E 4883FE04                	cmp rsi, 4
 21586 0000D222 7410                    	je .L_lambda_opt_env_end_009c
 21587 0000D224 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21588 0000D228 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21589 0000D22C 48FFC6                  	inc rsi
 21590 0000D22F 48FFC2                  	inc rdx
 21591 0000D232 EBEA                    	jmp .L_lambda_opt_env_loop_009c
 21592                                  .L_lambda_opt_env_end_009c:
 21593 0000D234 5B                      	pop rbx
 21594 0000D235 BE00000000              	mov rsi, 0
 21595                                  .L_lambda_opt_params_loop_01d2:	; copy params
 21596 0000D23A 4883FE01                	cmp rsi, 1
 21597 0000D23E 740E                    	je .L_lambda_opt_params_end_01d2
 21598 0000D240 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21599 0000D245 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21600 0000D249 48FFC6                  	inc rsi
 21601 0000D24C EBEC                    	jmp .L_lambda_opt_params_loop_01d2
 21602                                  .L_lambda_opt_params_end_01d2:
 21603 0000D24E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21604 0000D251 4889C3                  	mov rbx, rax
 21605 0000D254 58                      	pop rax
 21606 0000D255 C60005                  	mov byte [rax], T_closure
 21607 0000D258 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21608 0000D25C 48C74009[69D20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_009c
 21609 0000D264 E98A010000              	jmp .L_lambda_opt_end_009c
 21610                                  .L_lambda_opt_code_009c:
 21611 0000D269 4C8B542410              mov r10, qword [rsp+8*2]
 21612 0000D26E 4983FA01                cmp r10, 1
 21613 0000D272 740B                    je .L_lambda_opt_arity_check_exact_009c
 21614 0000D274 4983FA01                cmp r10, 1
 21615 0000D278 7F44                    jg .L_lambda_opt_arity_check_more_009c
 21616 0000D27A E995550000              jmp L_error_incorrect_arity_opt
 21617                                  .L_lambda_opt_arity_check_exact_009c:
 21618 0000D27F 4883EC08                sub rsp, 8
 21619 0000D283 BA04000000              mov rdx, 3+1
 21620 0000D288 4889E3                  mov qword rbx, rsp
 21621                                  .L_lambda_opt_params_loop_01d3:
 21622 0000D28B 488B4B08                mov qword rcx, [rbx+8]
 21623 0000D28F 48890B                  mov qword [rbx], rcx
 21624 0000D292 48FFCA                  dec rdx
 21625 0000D295 4883C308                add rbx, 8
 21626 0000D299 4883FA00                cmp rdx, 0
 21627 0000D29D 7402                    je .L_lambda_opt_params_end_01d3
 21628 0000D29F EBEA                    jmp .L_lambda_opt_params_loop_01d3
 21629                                  .L_lambda_opt_params_end_01d3:
 21630 0000D2A1 49FFC2                  inc r10
 21631 0000D2A4 4C89542410              mov qword [rsp+8*2], r10
 21632 0000D2A9 4983C202                add r10, 2
 21633 0000D2AD 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 21634 0000D2B5 4C8B4D00                mov r9, [rbp]
 21635 0000D2B9 E996000000              jmp .L_lambda_opt_stack_adjusted_009c
 21636                                  .L_lambda_opt_arity_check_more_009c:
 21637 0000D2BE 4C8B6C2410              mov r13, [rsp+2*8]
 21638 0000D2C3 48B8-                   mov rax, sob_nil
 21638 0000D2C5 [0100000000000000] 
 21639 0000D2CD 4C8B542410              mov r10, [rsp+2*8]
 21640 0000D2D2 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 21641 0000D2D7 4983EA01                sub r10, 1
 21642                                  .L_lambda_opt_stack_shrink_loop_009c:
 21643 0000D2DB 4983FA00                cmp r10, 0
 21644 0000D2DF 7424                    je .L_lambda_opt_stack_shrink_loop_exit_009c
 21645 0000D2E1 4889C1                  mov rcx, rax
 21646 0000D2E4 498B10                  mov rdx, [r8]
 21647 0000D2E7 BF11000000              mov rdi, 17
 21648 0000D2EC E856550000              call malloc
 21649 0000D2F1 C60021                  mov byte [rax], T_pair
 21650 0000D2F4 48894809                mov SOB_PAIR_CDR(rax), rcx
 21651 0000D2F8 48895001                mov SOB_PAIR_CAR(rax), rdx
 21652 0000D2FC 4983E808                sub r8, 8
 21653 0000D300 49FFCA                  dec r10
 21654 0000D303 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_009c
 21655                                  .L_lambda_opt_stack_shrink_loop_exit_009c:
 21656 0000D305 4889442420              mov [rsp+8*(2+2)], rax
 21657 0000D30A 41BA02000000            mov r10, 2
 21658 0000D310 4C89542410              mov [rsp+16], r10
 21659 0000D315 4989E4                  mov r12, rsp
 21660 0000D318 4983C420                add r12, 8*(2+2)
 21661 0000D31C 4C2B6C2410              sub r13, [rsp+16]
 21662 0000D321 4D89EA                  mov r10, r13
 21663 0000D324 49C1E203                shl r10, 3
 21664 0000D328 4D89D7                  mov r15, r10
 21665 0000D32B 4D01E2                  add r10, r12
 21666 0000D32E 4C8B4C2410              mov r9, [rsp+16]
 21667 0000D333 4983C103                add r9, 3
 21668                                  .L_lambda_opt_params_loop_01d4:
 21669 0000D337 4983F900                cmp r9, 0
 21670 0000D33B 7414                    je .L_lambda_opt_params_end_01d4
 21671 0000D33D 4D8B3424                mov r14, [r12]
 21672 0000D341 4D8932                  mov [r10], r14
 21673 0000D344 4983EC08                sub r12, 8
 21674 0000D348 4983EA08                sub r10, 8
 21675 0000D34C 49FFC9                  dec r9
 21676 0000D34F EBE6                    jmp .L_lambda_opt_params_loop_01d4
 21677                                  .L_lambda_opt_params_end_01d4:
 21678 0000D351 4C01FC                  add rsp, r15
 21679                                  .L_lambda_opt_stack_adjusted_009c:
 21680 0000D354 4C8B4D00                mov r9, [rbp]
 21681 0000D358 C8000000                enter 0, 0
 21682 0000D35C 488B4528                mov rax, qword [rbp + 40]
 21683 0000D360 50                      	push rax
 21684 0000D361 488B4520                mov rax, qword [rbp + 32]
 21685 0000D365 50                      	push rax
 21686 0000D366 6A02                    	push 2
 21687 0000D368 488B4510                mov rax, qword [rbp + 16]
 21688 0000D36C 488B00                  mov rax, qword [rax + 0]
 21689 0000D36F 488B00                  mov rax, qword [rax + 0]
 21690 0000D372 488B00                  	mov rax, qword [rax]
 21691                                  .L_lambda_simple_arity_check_ok_08e1:
 21692 0000D375 803805                  	cmp byte [rax], T_closure
 21693                                  
 21694 0000D378 0F8584640000                    jne L_code_ptr_error                      ; rax <- proc
 21695                                  
 21696                                  
 21697 0000D37E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21698                                  
 21699 0000D382 53                              push rbx                                  ; env pushed
 21700                                  
 21701 0000D383 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21702                                  
 21703                                          ; sagydebug
 21704                                  
 21705 0000D386 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21706                                  
 21707                                          
 21708                                          
 21709 0000D389 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21710                                  
 21711 0000D38D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21712                                  
 21713                                  
 21714 0000D392 4D89CA                          mov r10, r9
 21715 0000D395 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 21716                                          
 21717 0000D399 4D89D7                          mov r15, r10
 21718 0000D39C 4983C7FF                        add r15, -1
 21719                                                                                         
 21720 0000D3A0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21721 0000D3A3 4983C404                        add r12, 4
 21722 0000D3A7 4983C4FF                        add r12, -1
 21723                                  
 21724 0000D3AB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21725                                  .L_tc_recycle_frame_loop_04ca:
 21726 0000D3B1 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 21727                                  
 21728 0000D3B5 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21729                                  
 21730                                  
 21731                                  
 21732 0000D3BA 41BE00000000                    mov r14, 0                                ; clean box
 21733                                  
 21734                                  
 21735 0000D3C0 4983C7FF                        add r15, -1           
 21736 0000D3C4 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21737                                  
 21738 0000D3C8 4983C4FF                        add r12, -1 
 21739                                  
 21740 0000D3CC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21741 0000D3D0 75DF                    	jne .L_tc_recycle_frame_loop_04ca
 21742                                  .L_tc_recycle_frame_done_04ca:
 21743                                  ;this pop rbp in sot to the right place
 21744 0000D3D2 4D89C7                  mov r15, r8
 21745                                  
 21746 0000D3D5 4983C704                        add r15, 4
 21747                                  
 21748 0000D3D9 49C1E703                        shl r15, 3
 21749                                  
 21750 0000D3DD 4C01FC                          add rsp, r15
 21751 0000D3E0 5D                      	pop rbp                                  ; restore the old rbp
 21752                                  
 21753 0000D3E1 488B4D00                        mov rcx, qword [rbp]
 21754 0000D3E5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21755                                            ; rbx <- code(proc)
 21756                                  
 21757 0000D3E9 FFE3                            jmp rbx
 21758 0000D3EB C9                      leave
 21759 0000D3EC 4C8B4D00                mov r9, [rbp]
 21760 0000D3F0 C22000                  ret 8 * (3 + 1)
 21761                                  .L_lambda_opt_end_009c:	; new closure is in rax
 21762 0000D3F3 C9                      	leave
 21763 0000D3F4 C21800                  	ret 8 * (2 + 1)
 21764                                  .L_lambda_simple_end_0416:	; new closure is in rax
 21765                                  .L_lambda_simple_arity_check_ok_08e2:
 21766 0000D3F7 803805                  	cmp byte [rax], T_closure
 21767                                  
 21768 0000D3FA 0F8502640000                    jne L_code_ptr_error                      ; rax <- proc
 21769                                  
 21770                                  
 21771 0000D400 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21772                                  
 21773 0000D404 53                              push rbx                                  ; env pushed
 21774                                  
 21775 0000D405 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21776                                  
 21777                                          ; sagydebug
 21778                                  
 21779 0000D408 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21780                                  
 21781                                          
 21782                                          
 21783 0000D40B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21784                                  
 21785 0000D40F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21786                                  
 21787                                  
 21788 0000D414 4D89CA                          mov r10, r9
 21789 0000D417 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 21790                                          
 21791 0000D41B 4D89D7                          mov r15, r10
 21792 0000D41E 4983C7FF                        add r15, -1
 21793                                                                                         
 21794 0000D422 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21795 0000D425 4983C404                        add r12, 4
 21796 0000D429 4983C4FF                        add r12, -1
 21797                                  
 21798 0000D42D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21799                                  .L_tc_recycle_frame_loop_04cb:
 21800 0000D433 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 21801                                  
 21802 0000D437 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21803                                  
 21804                                  
 21805                                  
 21806 0000D43C 41BE00000000                    mov r14, 0                                ; clean box
 21807                                  
 21808                                  
 21809 0000D442 4983C7FF                        add r15, -1           
 21810 0000D446 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21811                                  
 21812 0000D44A 4983C4FF                        add r12, -1 
 21813                                  
 21814 0000D44E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21815 0000D452 75DF                    	jne .L_tc_recycle_frame_loop_04cb
 21816                                  .L_tc_recycle_frame_done_04cb:
 21817                                  ;this pop rbp in sot to the right place
 21818 0000D454 4D89C7                  mov r15, r8
 21819                                  
 21820 0000D457 4983C704                        add r15, 4
 21821                                  
 21822 0000D45B 49C1E703                        shl r15, 3
 21823                                  
 21824 0000D45F 4C01FC                          add rsp, r15
 21825 0000D462 5D                      	pop rbp                                  ; restore the old rbp
 21826                                  
 21827 0000D463 488B4D00                        mov rcx, qword [rbp]
 21828 0000D467 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21829                                            ; rbx <- code(proc)
 21830                                  
 21831 0000D46B FFE3                            jmp rbx
 21832 0000D46D C9                      	leave
 21833 0000D46E C21800                  	ret 8 * (2 + 1)
 21834                                  .L_lambda_simple_end_0415:	; new closure is in rax
 21835                                  .L_lambda_simple_arity_check_ok_08e3:
 21836 0000D471 803805                  	cmp byte [rax], T_closure
 21837                                  
 21838 0000D474 0F8588630000                    jne L_code_ptr_error                      ; rax <- proc
 21839                                  
 21840                                  
 21841 0000D47A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21842                                  
 21843 0000D47E 53                              push rbx                                  ; env pushed
 21844                                  
 21845 0000D47F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21846                                  
 21847                                          ; sagydebug
 21848                                  
 21849 0000D482 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21850                                  
 21851                                          
 21852                                          
 21853 0000D485 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21854                                  
 21855 0000D489 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21856                                  
 21857                                  
 21858 0000D48E 4D89CA                          mov r10, r9
 21859 0000D491 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 21860                                          
 21861 0000D495 4D89D7                          mov r15, r10
 21862 0000D498 4983C7FF                        add r15, -1
 21863                                                                                         
 21864 0000D49C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21865 0000D49F 4983C404                        add r12, 4
 21866 0000D4A3 4983C4FF                        add r12, -1
 21867                                  
 21868 0000D4A7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21869                                  .L_tc_recycle_frame_loop_04cc:
 21870 0000D4AD 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 21871                                  
 21872 0000D4B1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21873                                  
 21874                                  
 21875                                  
 21876 0000D4B6 41BE00000000                    mov r14, 0                                ; clean box
 21877                                  
 21878                                  
 21879 0000D4BC 4983C7FF                        add r15, -1           
 21880 0000D4C0 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21881                                  
 21882 0000D4C4 4983C4FF                        add r12, -1 
 21883                                  
 21884 0000D4C8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21885 0000D4CC 75DF                    	jne .L_tc_recycle_frame_loop_04cc
 21886                                  .L_tc_recycle_frame_done_04cc:
 21887                                  ;this pop rbp in sot to the right place
 21888 0000D4CE 4D89C7                  mov r15, r8
 21889                                  
 21890 0000D4D1 4983C704                        add r15, 4
 21891                                  
 21892 0000D4D5 49C1E703                        shl r15, 3
 21893                                  
 21894 0000D4D9 4C01FC                          add rsp, r15
 21895 0000D4DC 5D                      	pop rbp                                  ; restore the old rbp
 21896                                  
 21897 0000D4DD 488B4D00                        mov rcx, qword [rbp]
 21898 0000D4E1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21899                                            ; rbx <- code(proc)
 21900                                  
 21901 0000D4E5 FFE3                            jmp rbx
 21902 0000D4E7 C9                      	leave
 21903 0000D4E8 C21800                  	ret 8 * (2 + 1)
 21904                                  .L_lambda_simple_end_0411:	; new closure is in rax
 21905                                  .L_lambda_simple_arity_check_ok_08e4:
 21906 0000D4EB 803805                  	cmp byte [rax], T_closure
 21907                                  
 21908 0000D4EE 0F850E630000                    jne L_code_ptr_error                      ; rax <- proc
 21909                                  
 21910                                  
 21911 0000D4F4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21912                                  
 21913 0000D4F8 53                              push rbx                                  ; env pushed
 21914                                  
 21915 0000D4F9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21916                                  
 21917                                          ; sagydebug
 21918                                  
 21919 0000D4FC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21920                                  
 21921                                          
 21922                                          
 21923 0000D4FF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21924                                  
 21925 0000D503 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21926                                  
 21927                                  
 21928 0000D508 4D89CA                          mov r10, r9
 21929 0000D50B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 21930                                          
 21931 0000D50F 4D89D7                          mov r15, r10
 21932 0000D512 4983C7FF                        add r15, -1
 21933                                                                                         
 21934 0000D516 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21935 0000D519 4983C404                        add r12, 4
 21936 0000D51D 4983C4FF                        add r12, -1
 21937                                  
 21938 0000D521 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21939                                  .L_tc_recycle_frame_loop_04cd:
 21940 0000D527 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 21941                                  
 21942 0000D52B 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21943                                  
 21944                                  
 21945                                  
 21946 0000D530 41BE00000000                    mov r14, 0                                ; clean box
 21947                                  
 21948                                  
 21949 0000D536 4983C7FF                        add r15, -1           
 21950 0000D53A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21951                                  
 21952 0000D53E 4983C4FF                        add r12, -1 
 21953                                  
 21954 0000D542 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21955 0000D546 75DF                    	jne .L_tc_recycle_frame_loop_04cd
 21956                                  .L_tc_recycle_frame_done_04cd:
 21957                                  ;this pop rbp in sot to the right place
 21958 0000D548 4D89C7                  mov r15, r8
 21959                                  
 21960 0000D54B 4983C704                        add r15, 4
 21961                                  
 21962 0000D54F 49C1E703                        shl r15, 3
 21963                                  
 21964 0000D553 4C01FC                          add rsp, r15
 21965 0000D556 5D                      	pop rbp                                  ; restore the old rbp
 21966                                  
 21967 0000D557 488B4D00                        mov rcx, qword [rbp]
 21968 0000D55B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21969                                            ; rbx <- code(proc)
 21970                                  
 21971 0000D55F FFE3                            jmp rbx
 21972 0000D561 C9                      	leave
 21973 0000D562 C22000                  	ret 8 * (2 + 2)
 21974                                  .L_lambda_simple_end_0410:	; new closure is in rax
 21975 0000D565 50                      	push rax
 21976 0000D566 6A01                    	push 1
 21977 0000D568 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21978 0000D56D E8D5520000              	call malloc
 21979 0000D572 50                      	push rax
 21980 0000D573 BF00000000              	mov rdi, 8 * 0	; new rib
 21981 0000D578 E8CA520000              	call malloc
 21982 0000D57D 50                      	push rax
 21983 0000D57E BF08000000              	mov rdi, 8 * 1	; extended env
 21984 0000D583 E8BF520000              	call malloc
 21985 0000D588 488B7D10                	mov rdi, ENV
 21986 0000D58C BE00000000              	mov rsi, 0
 21987 0000D591 BA01000000              	mov rdx, 1
 21988                                  .L_lambda_simple_env_loop_0418:	; ext_env[i + 1] <-- env[i]
 21989 0000D596 4883FE00                	cmp rsi, 0
 21990 0000D59A 7410                    	je .L_lambda_simple_env_end_0418
 21991 0000D59C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21992 0000D5A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21993 0000D5A4 48FFC6                  	inc rsi
 21994 0000D5A7 48FFC2                  	inc rdx
 21995 0000D5AA EBEA                    	jmp .L_lambda_simple_env_loop_0418
 21996                                  .L_lambda_simple_env_end_0418:
 21997 0000D5AC 5B                      	pop rbx
 21998 0000D5AD BE00000000              	mov rsi, 0
 21999                                  .L_lambda_simple_params_loop_0418:	; copy params
 22000 0000D5B2 4883FE00                	cmp rsi, 0
 22001 0000D5B6 740E                    	je .L_lambda_simple_params_end_0418
 22002 0000D5B8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22003 0000D5BD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22004 0000D5C1 48FFC6                  	inc rsi
 22005 0000D5C4 EBEC                    	jmp .L_lambda_simple_params_loop_0418
 22006                                  .L_lambda_simple_params_end_0418:
 22007 0000D5C6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22008 0000D5C9 4889C3                  	mov rbx, rax
 22009 0000D5CC 58                      	pop rax
 22010 0000D5CD C60005                  	mov byte [rax], T_closure
 22011 0000D5D0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22012 0000D5D4 48C74009[E1D50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0418
 22013 0000D5DC E907010000              	jmp .L_lambda_simple_end_0418
 22014                                  .L_lambda_simple_code_0418:	; lambda-simple body
 22015 0000D5E1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22016 0000D5E7 740B                    	je .L_lambda_simple_arity_check_ok_08e5
 22017 0000D5E9 FF742410                	push qword [rsp + 8 * 2]
 22018 0000D5ED 6A01                    	push 1
 22019 0000D5EF E90C520000              	jmp L_error_incorrect_arity_simple
 22020                                  .L_lambda_simple_arity_check_ok_08e5:
 22021 0000D5F4 C8000000                	enter 0, 0
 22022 0000D5F8 488B0425[70030000]      	mov rax, qword [free_var_110]
 22023 0000D600 50                      	push rax
 22024 0000D601 488B0425[60030000]      	mov rax, qword [free_var_108]
 22025 0000D609 50                      	push rax
 22026 0000D60A 6A02                    	push 2
 22027 0000D60C 488B4520                mov rax, qword [rbp + 32]
 22028 0000D610 803805                  	cmp byte [rax], T_closure 
 22029 0000D613 0F85E9610000                    jne L_code_ptr_error
 22030                                  
 22031 0000D619 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22032                                  
 22033 0000D61D 53                              push rbx
 22034                                  
 22035 0000D61E FF5009                          call SOB_CLOSURE_CODE(rax)
 22036                                  
 22037 0000D621 48890425[E0030000]              	mov qword [free_var_124], rax
 22038 0000D629 48B8-                   	mov rax, sob_void
 22038 0000D62B [0000000000000000] 
 22039                                  
 22040 0000D633 488B0425[A8030000]      	mov rax, qword [free_var_117]
 22041 0000D63B 50                      	push rax
 22042 0000D63C 488B0425[98030000]      	mov rax, qword [free_var_115]
 22043 0000D644 50                      	push rax
 22044 0000D645 6A02                    	push 2
 22045 0000D647 488B4520                mov rax, qword [rbp + 32]
 22046 0000D64B 803805                  	cmp byte [rax], T_closure 
 22047 0000D64E 0F85AE610000                    jne L_code_ptr_error
 22048                                  
 22049 0000D654 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22050                                  
 22051 0000D658 53                              push rbx
 22052                                  
 22053 0000D659 FF5009                          call SOB_CLOSURE_CODE(rax)
 22054                                  
 22055 0000D65C 48890425[08040000]              	mov qword [free_var_129], rax
 22056 0000D664 48B8-                   	mov rax, sob_void
 22056 0000D666 [0000000000000000] 
 22057                                  
 22058 0000D66E 488B0425[70030000]      	mov rax, qword [free_var_110]
 22059 0000D676 50                      	push rax
 22060 0000D677 488B0425[78030000]      	mov rax, qword [free_var_111]
 22061 0000D67F 50                      	push rax
 22062 0000D680 6A02                    	push 2
 22063 0000D682 488B4520                mov rax, qword [rbp + 32]
 22064 0000D686 803805                  	cmp byte [rax], T_closure 
 22065 0000D689 0F8573610000                    jne L_code_ptr_error
 22066                                  
 22067 0000D68F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22068                                  
 22069 0000D693 53                              push rbx
 22070                                  
 22071 0000D694 FF5009                          call SOB_CLOSURE_CODE(rax)
 22072                                  
 22073 0000D697 48890425[00040000]              	mov qword [free_var_128], rax
 22074 0000D69F 48B8-                   	mov rax, sob_void
 22074 0000D6A1 [0000000000000000] 
 22075                                  
 22076 0000D6A9 488B0425[A8030000]      	mov rax, qword [free_var_117]
 22077 0000D6B1 50                      	push rax
 22078 0000D6B2 488B0425[B0030000]      	mov rax, qword [free_var_118]
 22079 0000D6BA 50                      	push rax
 22080 0000D6BB 6A02                    	push 2
 22081 0000D6BD 488B4520                mov rax, qword [rbp + 32]
 22082 0000D6C1 803805                  	cmp byte [rax], T_closure 
 22083 0000D6C4 0F8538610000                    jne L_code_ptr_error
 22084                                  
 22085 0000D6CA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22086                                  
 22087 0000D6CE 53                              push rbx
 22088                                  
 22089 0000D6CF FF5009                          call SOB_CLOSURE_CODE(rax)
 22090                                  
 22091 0000D6D2 48890425[28040000]              	mov qword [free_var_133], rax
 22092 0000D6DA 48B8-                   	mov rax, sob_void
 22092 0000D6DC [0000000000000000] 
 22093 0000D6E4 C9                      	leave
 22094 0000D6E5 C21800                  	ret 8 * (2 + 1)
 22095                                  .L_lambda_simple_end_0418:	; new closure is in rax
 22096 0000D6E8 803805                  	cmp byte [rax], T_closure 
 22097 0000D6EB 0F8511610000                    jne L_code_ptr_error
 22098                                  
 22099 0000D6F1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22100                                  
 22101 0000D6F5 53                              push rbx
 22102                                  
 22103 0000D6F6 FF5009                          call SOB_CLOSURE_CODE(rax)
 22104                                  
 22105                                          
 22106 0000D6F9 4889C7                  	mov rdi, rax
 22107 0000D6FC E857510000              	call print_sexpr_if_not_void
 22108                                  
 22109 0000D701 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22110 0000D706 E83C510000              	call malloc
 22111 0000D70B 50                      	push rax
 22112 0000D70C BF00000000              	mov rdi, 8 * 0	; new rib
 22113 0000D711 E831510000              	call malloc
 22114 0000D716 50                      	push rax
 22115 0000D717 BF08000000              	mov rdi, 8 * 1	; extended env
 22116 0000D71C E826510000              	call malloc
 22117 0000D721 488B7D10                	mov rdi, ENV
 22118 0000D725 BE00000000              	mov rsi, 0
 22119 0000D72A BA01000000              	mov rdx, 1
 22120                                  .L_lambda_simple_env_loop_0419:	; ext_env[i + 1] <-- env[i]
 22121 0000D72F 4883FE00                	cmp rsi, 0
 22122 0000D733 7410                    	je .L_lambda_simple_env_end_0419
 22123 0000D735 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22124 0000D739 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22125 0000D73D 48FFC6                  	inc rsi
 22126 0000D740 48FFC2                  	inc rdx
 22127 0000D743 EBEA                    	jmp .L_lambda_simple_env_loop_0419
 22128                                  .L_lambda_simple_env_end_0419:
 22129 0000D745 5B                      	pop rbx
 22130 0000D746 BE00000000              	mov rsi, 0
 22131                                  .L_lambda_simple_params_loop_0419:	; copy params
 22132 0000D74B 4883FE00                	cmp rsi, 0
 22133 0000D74F 740E                    	je .L_lambda_simple_params_end_0419
 22134 0000D751 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22135 0000D756 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22136 0000D75A 48FFC6                  	inc rsi
 22137 0000D75D EBEC                    	jmp .L_lambda_simple_params_loop_0419
 22138                                  .L_lambda_simple_params_end_0419:
 22139 0000D75F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22140 0000D762 4889C3                  	mov rbx, rax
 22141 0000D765 58                      	pop rax
 22142 0000D766 C60005                  	mov byte [rax], T_closure
 22143 0000D769 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22144 0000D76D 48C74009[7AD70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0419
 22145 0000D775 E9DE0D0000              	jmp .L_lambda_simple_end_0419
 22146                                  .L_lambda_simple_code_0419:	; lambda-simple body
 22147 0000D77A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22148 0000D780 740B                    	je .L_lambda_simple_arity_check_ok_08e6
 22149 0000D782 FF742410                	push qword [rsp + 8 * 2]
 22150 0000D786 6A02                    	push 2
 22151 0000D788 E973500000              	jmp L_error_incorrect_arity_simple
 22152                                  .L_lambda_simple_arity_check_ok_08e6:
 22153 0000D78D C8000000                	enter 0, 0
 22154 0000D791 48B8-                   	mov rax, qword (L_constants + 22)
 22154 0000D793 [1600000000000000] 
 22155 0000D79B 50                      	push rax
 22156 0000D79C 6A01                    	push 1
 22157 0000D79E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22158 0000D7A3 E89F500000              	call malloc
 22159 0000D7A8 50                      	push rax
 22160 0000D7A9 BF10000000              	mov rdi, 8 * 2	; new rib
 22161 0000D7AE E894500000              	call malloc
 22162 0000D7B3 50                      	push rax
 22163 0000D7B4 BF10000000              	mov rdi, 8 * 2	; extended env
 22164 0000D7B9 E889500000              	call malloc
 22165 0000D7BE 488B7D10                	mov rdi, ENV
 22166 0000D7C2 BE00000000              	mov rsi, 0
 22167 0000D7C7 BA01000000              	mov rdx, 1
 22168                                  .L_lambda_simple_env_loop_041a:	; ext_env[i + 1] <-- env[i]
 22169 0000D7CC 4883FE01                	cmp rsi, 1
 22170 0000D7D0 7410                    	je .L_lambda_simple_env_end_041a
 22171 0000D7D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22172 0000D7D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22173 0000D7DA 48FFC6                  	inc rsi
 22174 0000D7DD 48FFC2                  	inc rdx
 22175 0000D7E0 EBEA                    	jmp .L_lambda_simple_env_loop_041a
 22176                                  .L_lambda_simple_env_end_041a:
 22177 0000D7E2 5B                      	pop rbx
 22178 0000D7E3 BE00000000              	mov rsi, 0
 22179                                  .L_lambda_simple_params_loop_041a:	; copy params
 22180 0000D7E8 4883FE02                	cmp rsi, 2
 22181 0000D7EC 740E                    	je .L_lambda_simple_params_end_041a
 22182 0000D7EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22183 0000D7F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22184 0000D7F7 48FFC6                  	inc rsi
 22185 0000D7FA EBEC                    	jmp .L_lambda_simple_params_loop_041a
 22186                                  .L_lambda_simple_params_end_041a:
 22187 0000D7FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22188 0000D7FF 4889C3                  	mov rbx, rax
 22189 0000D802 58                      	pop rax
 22190 0000D803 C60005                  	mov byte [rax], T_closure
 22191 0000D806 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22192 0000D80A 48C74009[17D80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041a
 22193 0000D812 E9C70C0000              	jmp .L_lambda_simple_end_041a
 22194                                  .L_lambda_simple_code_041a:	; lambda-simple body
 22195 0000D817 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22196 0000D81D 740B                    	je .L_lambda_simple_arity_check_ok_08e7
 22197 0000D81F FF742410                	push qword [rsp + 8 * 2]
 22198 0000D823 6A01                    	push 1
 22199 0000D825 E9D64F0000              	jmp L_error_incorrect_arity_simple
 22200                                  .L_lambda_simple_arity_check_ok_08e7:
 22201 0000D82A C8000000                	enter 0, 0
 22202 0000D82E 488B4520                mov rax, qword [rbp + 32]
 22203 0000D832 BF08000000              mov rdi, 8
 22204 0000D837 4889C3                  mov rbx, rax
 22205 0000D83A E808500000              call malloc
 22206 0000D83F 488918                  mov qword [rax], rbx
 22207 0000D842 48894520                mov qword [rbp + 32], rax
 22208 0000D846 48B8-                   mov rax, sob_void
 22208 0000D848 [0000000000000000] 
 22209 0000D850 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22210 0000D855 E8ED4F0000              	call malloc
 22211 0000D85A 50                      	push rax
 22212 0000D85B BF08000000              	mov rdi, 8 * 1	; new rib
 22213 0000D860 E8E24F0000              	call malloc
 22214 0000D865 50                      	push rax
 22215 0000D866 BF18000000              	mov rdi, 8 * 3	; extended env
 22216 0000D86B E8D74F0000              	call malloc
 22217 0000D870 488B7D10                	mov rdi, ENV
 22218 0000D874 BE00000000              	mov rsi, 0
 22219 0000D879 BA01000000              	mov rdx, 1
 22220                                  .L_lambda_simple_env_loop_041b:	; ext_env[i + 1] <-- env[i]
 22221 0000D87E 4883FE02                	cmp rsi, 2
 22222 0000D882 7410                    	je .L_lambda_simple_env_end_041b
 22223 0000D884 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22224 0000D888 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22225 0000D88C 48FFC6                  	inc rsi
 22226 0000D88F 48FFC2                  	inc rdx
 22227 0000D892 EBEA                    	jmp .L_lambda_simple_env_loop_041b
 22228                                  .L_lambda_simple_env_end_041b:
 22229 0000D894 5B                      	pop rbx
 22230 0000D895 BE00000000              	mov rsi, 0
 22231                                  .L_lambda_simple_params_loop_041b:	; copy params
 22232 0000D89A 4883FE01                	cmp rsi, 1
 22233 0000D89E 740E                    	je .L_lambda_simple_params_end_041b
 22234 0000D8A0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22235 0000D8A5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22236 0000D8A9 48FFC6                  	inc rsi
 22237 0000D8AC EBEC                    	jmp .L_lambda_simple_params_loop_041b
 22238                                  .L_lambda_simple_params_end_041b:
 22239 0000D8AE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22240 0000D8B1 4889C3                  	mov rbx, rax
 22241 0000D8B4 58                      	pop rax
 22242 0000D8B5 C60005                  	mov byte [rax], T_closure
 22243 0000D8B8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22244 0000D8BC 48C74009[C9D80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041b
 22245 0000D8C4 E947020000              	jmp .L_lambda_simple_end_041b
 22246                                  .L_lambda_simple_code_041b:	; lambda-simple body
 22247 0000D8C9 48837C241005            	cmp qword [rsp + 8 * 2], 5
 22248 0000D8CF 740B                    	je .L_lambda_simple_arity_check_ok_08e8
 22249 0000D8D1 FF742410                	push qword [rsp + 8 * 2]
 22250 0000D8D5 6A05                    	push 5
 22251 0000D8D7 E9244F0000              	jmp L_error_incorrect_arity_simple
 22252                                  .L_lambda_simple_arity_check_ok_08e8:
 22253 0000D8DC C8000000                	enter 0, 0
 22254 0000D8E0 488B4530                mov rax, qword [rbp + 48]
 22255 0000D8E4 50                      	push rax
 22256 0000D8E5 488B4520                mov rax, qword [rbp + 32]
 22257 0000D8E9 50                      	push rax
 22258 0000D8EA 6A02                    	push 2
 22259 0000D8EC 488B0425[50030000]      	mov rax, qword [free_var_106]
 22260 0000D8F4 803805                  	cmp byte [rax], T_closure 
 22261 0000D8F7 0F85055F0000                    jne L_code_ptr_error
 22262                                  
 22263 0000D8FD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22264                                  
 22265 0000D901 53                              push rbx
 22266                                  
 22267 0000D902 FF5009                          call SOB_CLOSURE_CODE(rax)
 22268                                  
 22269 0000D905 483D[02000000]                  	cmp rax, sob_boolean_false
 22270 0000D90B 0F85FB010000            	jne .L_or_end_0050
 22271 0000D911 488B4520                mov rax, qword [rbp + 32]
 22272 0000D915 50                      	push rax
 22273 0000D916 488B4538                mov rax, qword [rbp + 56]
 22274 0000D91A 50                      	push rax
 22275 0000D91B 6A02                    	push 2
 22276 0000D91D 488B0425[78010000]      	mov rax, qword [free_var_47]
 22277 0000D925 803805                  	cmp byte [rax], T_closure 
 22278 0000D928 0F85D45E0000                    jne L_code_ptr_error
 22279                                  
 22280 0000D92E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22281                                  
 22282 0000D932 53                              push rbx
 22283                                  
 22284 0000D933 FF5009                          call SOB_CLOSURE_CODE(rax)
 22285                                  
 22286 0000D936 50                              	push rax
 22287 0000D937 488B4520                mov rax, qword [rbp + 32]
 22288 0000D93B 50                      	push rax
 22289 0000D93C 488B4528                mov rax, qword [rbp + 40]
 22290 0000D940 50                      	push rax
 22291 0000D941 6A02                    	push 2
 22292 0000D943 488B0425[78010000]      	mov rax, qword [free_var_47]
 22293 0000D94B 803805                  	cmp byte [rax], T_closure 
 22294 0000D94E 0F85AE5E0000                    jne L_code_ptr_error
 22295                                  
 22296 0000D954 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22297                                  
 22298 0000D958 53                              push rbx
 22299                                  
 22300 0000D959 FF5009                          call SOB_CLOSURE_CODE(rax)
 22301                                  
 22302 0000D95C 50                              	push rax
 22303 0000D95D 6A02                    	push 2
 22304 0000D95F 488B4510                mov rax, qword [rbp + 16]
 22305 0000D963 488B4008                mov rax, qword [rax + 8]
 22306 0000D967 488B00                  mov rax, qword [rax + 0]
 22307 0000D96A 803805                  	cmp byte [rax], T_closure 
 22308 0000D96D 0F858F5E0000                    jne L_code_ptr_error
 22309                                  
 22310 0000D973 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22311                                  
 22312 0000D977 53                              push rbx
 22313                                  
 22314 0000D978 FF5009                          call SOB_CLOSURE_CODE(rax)
 22315                                  
 22316 0000D97B 483D[02000000]                  	cmp rax, sob_boolean_false
 22317 0000D981 0F8585010000            	jne .L_or_end_0050
 22318 0000D987 488B4530                mov rax, qword [rbp + 48]
 22319 0000D98B 50                      	push rax
 22320 0000D98C 488B4520                mov rax, qword [rbp + 32]
 22321 0000D990 50                      	push rax
 22322 0000D991 6A02                    	push 2
 22323 0000D993 488B0425[30030000]      	mov rax, qword [free_var_102]
 22324 0000D99B 803805                  	cmp byte [rax], T_closure 
 22325 0000D99E 0F855E5E0000                    jne L_code_ptr_error
 22326                                  
 22327 0000D9A4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22328                                  
 22329 0000D9A8 53                              push rbx
 22330                                  
 22331 0000D9A9 FF5009                          call SOB_CLOSURE_CODE(rax)
 22332                                  
 22333 0000D9AC 483D[02000000]                  	cmp rax, sob_boolean_false
 22334 0000D9B2 0F844A010000            	je .L_if_else_0274
 22335 0000D9B8 488B4520                mov rax, qword [rbp + 32]
 22336 0000D9BC 50                      	push rax
 22337 0000D9BD 488B4538                mov rax, qword [rbp + 56]
 22338 0000D9C1 50                      	push rax
 22339 0000D9C2 6A02                    	push 2
 22340 0000D9C4 488B0425[78010000]      	mov rax, qword [free_var_47]
 22341 0000D9CC 803805                  	cmp byte [rax], T_closure 
 22342 0000D9CF 0F852D5E0000                    jne L_code_ptr_error
 22343                                  
 22344 0000D9D5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22345                                  
 22346 0000D9D9 53                              push rbx
 22347                                  
 22348 0000D9DA FF5009                          call SOB_CLOSURE_CODE(rax)
 22349                                  
 22350 0000D9DD 50                              	push rax
 22351 0000D9DE 488B4520                mov rax, qword [rbp + 32]
 22352 0000D9E2 50                      	push rax
 22353 0000D9E3 488B4528                mov rax, qword [rbp + 40]
 22354 0000D9E7 50                      	push rax
 22355 0000D9E8 6A02                    	push 2
 22356 0000D9EA 488B0425[78010000]      	mov rax, qword [free_var_47]
 22357 0000D9F2 803805                  	cmp byte [rax], T_closure 
 22358 0000D9F5 0F85075E0000                    jne L_code_ptr_error
 22359                                  
 22360 0000D9FB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22361                                  
 22362 0000D9FF 53                              push rbx
 22363                                  
 22364 0000DA00 FF5009                          call SOB_CLOSURE_CODE(rax)
 22365                                  
 22366 0000DA03 50                              	push rax
 22367 0000DA04 6A02                    	push 2
 22368 0000DA06 488B4510                mov rax, qword [rbp + 16]
 22369 0000DA0A 488B4008                mov rax, qword [rax + 8]
 22370 0000DA0E 488B4008                mov rax, qword [rax + 8]
 22371 0000DA12 803805                  	cmp byte [rax], T_closure 
 22372 0000DA15 0F85E75D0000                    jne L_code_ptr_error
 22373                                  
 22374 0000DA1B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22375                                  
 22376 0000DA1F 53                              push rbx
 22377                                  
 22378 0000DA20 FF5009                          call SOB_CLOSURE_CODE(rax)
 22379                                  
 22380 0000DA23 483D[02000000]                  	cmp rax, sob_boolean_false
 22381 0000DA29 0F84C7000000            	je .L_if_else_0275
 22382 0000DA2F 488B4540                mov rax, qword [rbp + 64]
 22383 0000DA33 50                      	push rax
 22384 0000DA34 488B4538                mov rax, qword [rbp + 56]
 22385 0000DA38 50                      	push rax
 22386 0000DA39 488B4530                mov rax, qword [rbp + 48]
 22387 0000DA3D 50                      	push rax
 22388 0000DA3E 488B4528                mov rax, qword [rbp + 40]
 22389 0000DA42 50                      	push rax
 22390 0000DA43 48B8-                   	mov rax, qword (L_constants + 127)
 22390 0000DA45 [7F00000000000000] 
 22391 0000DA4D 50                      	push rax
 22392 0000DA4E 488B4520                mov rax, qword [rbp + 32]
 22393 0000DA52 50                      	push rax
 22394 0000DA53 6A02                    	push 2
 22395 0000DA55 488B0425[08030000]      	mov rax, qword [free_var_97]
 22396 0000DA5D 803805                  	cmp byte [rax], T_closure 
 22397 0000DA60 0F859C5D0000                    jne L_code_ptr_error
 22398                                  
 22399 0000DA66 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22400                                  
 22401 0000DA6A 53                              push rbx
 22402                                  
 22403 0000DA6B FF5009                          call SOB_CLOSURE_CODE(rax)
 22404                                  
 22405 0000DA6E 50                              	push rax
 22406 0000DA6F 6A05                    	push 5
 22407 0000DA71 488B4510                mov rax, qword [rbp + 16]
 22408 0000DA75 488B00                  mov rax, qword [rax + 0]
 22409 0000DA78 488B00                  mov rax, qword [rax + 0]
 22410 0000DA7B 488B00                  	mov rax, qword [rax]
 22411                                  .L_lambda_simple_arity_check_ok_08e9:
 22412 0000DA7E 803805                  	cmp byte [rax], T_closure
 22413                                  
 22414 0000DA81 0F857B5D0000                    jne L_code_ptr_error                      ; rax <- proc
 22415                                  
 22416                                  
 22417 0000DA87 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22418                                  
 22419 0000DA8B 53                              push rbx                                  ; env pushed
 22420                                  
 22421 0000DA8C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22422                                  
 22423                                          ; sagydebug
 22424                                  
 22425 0000DA8F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22426                                  
 22427                                          
 22428                                          
 22429 0000DA92 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22430                                  
 22431 0000DA96 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22432                                  
 22433                                  
 22434 0000DA9B 4D89CA                          mov r10, r9
 22435 0000DA9E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 22436                                          
 22437 0000DAA2 4D89D7                          mov r15, r10
 22438 0000DAA5 4983C7FF                        add r15, -1
 22439                                                                                         
 22440 0000DAA9 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22441 0000DAAC 4983C404                        add r12, 4
 22442 0000DAB0 4983C4FF                        add r12, -1
 22443                                  
 22444 0000DAB4 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22445                                  .L_tc_recycle_frame_loop_04ce:
 22446 0000DABA 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 22447                                  
 22448 0000DABE 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22449                                  
 22450                                  
 22451                                  
 22452 0000DAC3 41BE00000000                    mov r14, 0                                ; clean box
 22453                                  
 22454                                  
 22455 0000DAC9 4983C7FF                        add r15, -1           
 22456 0000DACD 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22457                                  
 22458 0000DAD1 4983C4FF                        add r12, -1 
 22459                                  
 22460 0000DAD5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22461 0000DAD9 75DF                    	jne .L_tc_recycle_frame_loop_04ce
 22462                                  .L_tc_recycle_frame_done_04ce:
 22463                                  ;this pop rbp in sot to the right place
 22464 0000DADB 4D89C7                  mov r15, r8
 22465                                  
 22466 0000DADE 4983C704                        add r15, 4
 22467                                  
 22468 0000DAE2 49C1E703                        shl r15, 3
 22469                                  
 22470 0000DAE6 4C01FC                          add rsp, r15
 22471 0000DAE9 5D                      	pop rbp                                  ; restore the old rbp
 22472                                  
 22473 0000DAEA 488B4D00                        mov rcx, qword [rbp]
 22474 0000DAEE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22475                                            ; rbx <- code(proc)
 22476                                  
 22477 0000DAF2 FFE3                            jmp rbx
 22478 0000DAF4 EB0A                    	jmp .L_if_end_0275
 22479                                  	.L_if_else_0275:
 22480 0000DAF6 48B8-                   		mov rax, qword (L_constants + 2)
 22480 0000DAF8 [0200000000000000] 
 22481                                  	.L_if_end_0275:
 22482 0000DB00 EB0A                    	jmp .L_if_end_0274
 22483                                  	.L_if_else_0274:
 22484 0000DB02 48B8-                   		mov rax, qword (L_constants + 2)
 22484 0000DB04 [0200000000000000] 
 22485                                  	.L_if_end_0274:
 22486                                  .L_or_end_0050:
 22487 0000DB0C C9                      	leave
 22488 0000DB0D C23800                  	ret 8 * (2 + 5)
 22489                                  .L_lambda_simple_end_041b:	; new closure is in rax
 22490 0000DB10 50                      push rax
 22491 0000DB11 488B4520                mov rax, qword [rbp + 32]
 22492 0000DB15 8F00                    pop qword [rax]
 22493 0000DB17 48B8-                   mov rax, sob_void
 22493 0000DB19 [0000000000000000] 
 22494                                  
 22495 0000DB21 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22496 0000DB26 E81C4D0000              	call malloc
 22497 0000DB2B 50                      	push rax
 22498 0000DB2C BF08000000              	mov rdi, 8 * 1	; new rib
 22499 0000DB31 E8114D0000              	call malloc
 22500 0000DB36 50                      	push rax
 22501 0000DB37 BF18000000              	mov rdi, 8 * 3	; extended env
 22502 0000DB3C E8064D0000              	call malloc
 22503 0000DB41 488B7D10                	mov rdi, ENV
 22504 0000DB45 BE00000000              	mov rsi, 0
 22505 0000DB4A BA01000000              	mov rdx, 1
 22506                                  .L_lambda_simple_env_loop_041c:	; ext_env[i + 1] <-- env[i]
 22507 0000DB4F 4883FE02                	cmp rsi, 2
 22508 0000DB53 7410                    	je .L_lambda_simple_env_end_041c
 22509 0000DB55 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22510 0000DB59 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22511 0000DB5D 48FFC6                  	inc rsi
 22512 0000DB60 48FFC2                  	inc rdx
 22513 0000DB63 EBEA                    	jmp .L_lambda_simple_env_loop_041c
 22514                                  .L_lambda_simple_env_end_041c:
 22515 0000DB65 5B                      	pop rbx
 22516 0000DB66 BE00000000              	mov rsi, 0
 22517                                  .L_lambda_simple_params_loop_041c:	; copy params
 22518 0000DB6B 4883FE01                	cmp rsi, 1
 22519 0000DB6F 740E                    	je .L_lambda_simple_params_end_041c
 22520 0000DB71 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22521 0000DB76 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22522 0000DB7A 48FFC6                  	inc rsi
 22523 0000DB7D EBEC                    	jmp .L_lambda_simple_params_loop_041c
 22524                                  .L_lambda_simple_params_end_041c:
 22525 0000DB7F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22526 0000DB82 4889C3                  	mov rbx, rax
 22527 0000DB85 58                      	pop rax
 22528 0000DB86 C60005                  	mov byte [rax], T_closure
 22529 0000DB89 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22530 0000DB8D 48C74009[9ADB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041c
 22531 0000DB95 E903030000              	jmp .L_lambda_simple_end_041c
 22532                                  .L_lambda_simple_code_041c:	; lambda-simple body
 22533 0000DB9A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22534 0000DBA0 740B                    	je .L_lambda_simple_arity_check_ok_08ea
 22535 0000DBA2 FF742410                	push qword [rsp + 8 * 2]
 22536 0000DBA6 6A02                    	push 2
 22537 0000DBA8 E9534C0000              	jmp L_error_incorrect_arity_simple
 22538                                  .L_lambda_simple_arity_check_ok_08ea:
 22539 0000DBAD C8000000                	enter 0, 0
 22540 0000DBB1 488B4528                mov rax, qword [rbp + 40]
 22541 0000DBB5 50                      	push rax
 22542 0000DBB6 6A01                    	push 1
 22543 0000DBB8 488B0425[90000000]      	mov rax, qword [free_var_18]
 22544 0000DBC0 803805                  	cmp byte [rax], T_closure 
 22545 0000DBC3 0F85395C0000                    jne L_code_ptr_error
 22546                                  
 22547 0000DBC9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22548                                  
 22549 0000DBCD 53                              push rbx
 22550                                  
 22551 0000DBCE FF5009                          call SOB_CLOSURE_CODE(rax)
 22552                                  
 22553 0000DBD1 50                              	push rax
 22554 0000DBD2 488B4520                mov rax, qword [rbp + 32]
 22555 0000DBD6 50                      	push rax
 22556 0000DBD7 6A01                    	push 1
 22557 0000DBD9 488B0425[90000000]      	mov rax, qword [free_var_18]
 22558 0000DBE1 803805                  	cmp byte [rax], T_closure 
 22559 0000DBE4 0F85185C0000                    jne L_code_ptr_error
 22560                                  
 22561 0000DBEA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22562                                  
 22563 0000DBEE 53                              push rbx
 22564                                  
 22565 0000DBEF FF5009                          call SOB_CLOSURE_CODE(rax)
 22566                                  
 22567 0000DBF2 50                              	push rax
 22568 0000DBF3 6A02                    	push 2
 22569 0000DBF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22570 0000DBFA E8484C0000              	call malloc
 22571 0000DBFF 50                      	push rax
 22572 0000DC00 BF10000000              	mov rdi, 8 * 2	; new rib
 22573 0000DC05 E83D4C0000              	call malloc
 22574 0000DC0A 50                      	push rax
 22575 0000DC0B BF20000000              	mov rdi, 8 * 4	; extended env
 22576 0000DC10 E8324C0000              	call malloc
 22577 0000DC15 488B7D10                	mov rdi, ENV
 22578 0000DC19 BE00000000              	mov rsi, 0
 22579 0000DC1E BA01000000              	mov rdx, 1
 22580                                  .L_lambda_simple_env_loop_041d:	; ext_env[i + 1] <-- env[i]
 22581 0000DC23 4883FE03                	cmp rsi, 3
 22582 0000DC27 7410                    	je .L_lambda_simple_env_end_041d
 22583 0000DC29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22584 0000DC2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22585 0000DC31 48FFC6                  	inc rsi
 22586 0000DC34 48FFC2                  	inc rdx
 22587 0000DC37 EBEA                    	jmp .L_lambda_simple_env_loop_041d
 22588                                  .L_lambda_simple_env_end_041d:
 22589 0000DC39 5B                      	pop rbx
 22590 0000DC3A BE00000000              	mov rsi, 0
 22591                                  .L_lambda_simple_params_loop_041d:	; copy params
 22592 0000DC3F 4883FE02                	cmp rsi, 2
 22593 0000DC43 740E                    	je .L_lambda_simple_params_end_041d
 22594 0000DC45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22595 0000DC4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22596 0000DC4E 48FFC6                  	inc rsi
 22597 0000DC51 EBEC                    	jmp .L_lambda_simple_params_loop_041d
 22598                                  .L_lambda_simple_params_end_041d:
 22599 0000DC53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22600 0000DC56 4889C3                  	mov rbx, rax
 22601 0000DC59 58                      	pop rax
 22602 0000DC5A C60005                  	mov byte [rax], T_closure
 22603 0000DC5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22604 0000DC61 48C74009[6EDC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041d
 22605 0000DC69 E9B5010000              	jmp .L_lambda_simple_end_041d
 22606                                  .L_lambda_simple_code_041d:	; lambda-simple body
 22607 0000DC6E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22608 0000DC74 740B                    	je .L_lambda_simple_arity_check_ok_08eb
 22609 0000DC76 FF742410                	push qword [rsp + 8 * 2]
 22610 0000DC7A 6A02                    	push 2
 22611 0000DC7C E97F4B0000              	jmp L_error_incorrect_arity_simple
 22612                                  .L_lambda_simple_arity_check_ok_08eb:
 22613 0000DC81 C8000000                	enter 0, 0
 22614 0000DC85 488B4528                mov rax, qword [rbp + 40]
 22615 0000DC89 50                      	push rax
 22616 0000DC8A 488B4520                mov rax, qword [rbp + 32]
 22617 0000DC8E 50                      	push rax
 22618 0000DC8F 6A02                    	push 2
 22619 0000DC91 488B0425[38030000]      	mov rax, qword [free_var_103]
 22620 0000DC99 803805                  	cmp byte [rax], T_closure 
 22621 0000DC9C 0F85605B0000                    jne L_code_ptr_error
 22622                                  
 22623 0000DCA2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22624                                  
 22625 0000DCA6 53                              push rbx
 22626                                  
 22627 0000DCA7 FF5009                          call SOB_CLOSURE_CODE(rax)
 22628                                  
 22629 0000DCAA 483D[02000000]                  	cmp rax, sob_boolean_false
 22630 0000DCB0 0F84B7000000            	je .L_if_else_0276
 22631 0000DCB6 488B4528                mov rax, qword [rbp + 40]
 22632 0000DCBA 50                      	push rax
 22633 0000DCBB 488B4510                mov rax, qword [rbp + 16]
 22634 0000DCBF 488B00                  mov rax, qword [rax + 0]
 22635 0000DCC2 488B4008                mov rax, qword [rax + 8]
 22636 0000DCC6 50                      	push rax
 22637 0000DCC7 488B4520                mov rax, qword [rbp + 32]
 22638 0000DCCB 50                      	push rax
 22639 0000DCCC 488B4510                mov rax, qword [rbp + 16]
 22640 0000DCD0 488B00                  mov rax, qword [rax + 0]
 22641 0000DCD3 488B00                  mov rax, qword [rax + 0]
 22642 0000DCD6 50                      	push rax
 22643 0000DCD7 48B8-                   	mov rax, qword (L_constants + 31)
 22643 0000DCD9 [1F00000000000000] 
 22644 0000DCE1 50                      	push rax
 22645 0000DCE2 6A05                    	push 5
 22646 0000DCE4 488B4510                mov rax, qword [rbp + 16]
 22647 0000DCE8 488B4008                mov rax, qword [rax + 8]
 22648 0000DCEC 488B00                  mov rax, qword [rax + 0]
 22649 0000DCEF 488B00                  	mov rax, qword [rax]
 22650                                  .L_lambda_simple_arity_check_ok_08ed:
 22651 0000DCF2 803805                  	cmp byte [rax], T_closure
 22652                                  
 22653 0000DCF5 0F85075B0000                    jne L_code_ptr_error                      ; rax <- proc
 22654                                  
 22655                                  
 22656 0000DCFB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22657                                  
 22658 0000DCFF 53                              push rbx                                  ; env pushed
 22659                                  
 22660 0000DD00 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22661                                  
 22662                                          ; sagydebug
 22663                                  
 22664 0000DD03 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22665                                  
 22666                                          
 22667                                          
 22668 0000DD06 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22669                                  
 22670 0000DD0A 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22671                                  
 22672                                  
 22673 0000DD0F 4D89CA                          mov r10, r9
 22674 0000DD12 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 22675                                          
 22676 0000DD16 4D89D7                          mov r15, r10
 22677 0000DD19 4983C7FF                        add r15, -1
 22678                                                                                         
 22679 0000DD1D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22680 0000DD20 4983C404                        add r12, 4
 22681 0000DD24 4983C4FF                        add r12, -1
 22682                                  
 22683 0000DD28 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22684                                  .L_tc_recycle_frame_loop_04d0:
 22685 0000DD2E 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 22686                                  
 22687 0000DD32 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22688                                  
 22689                                  
 22690                                  
 22691 0000DD37 41BE00000000                    mov r14, 0                                ; clean box
 22692                                  
 22693                                  
 22694 0000DD3D 4983C7FF                        add r15, -1           
 22695 0000DD41 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22696                                  
 22697 0000DD45 4983C4FF                        add r12, -1 
 22698                                  
 22699 0000DD49 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22700 0000DD4D 75DF                    	jne .L_tc_recycle_frame_loop_04d0
 22701                                  .L_tc_recycle_frame_done_04d0:
 22702                                  ;this pop rbp in sot to the right place
 22703 0000DD4F 4D89C7                  mov r15, r8
 22704                                  
 22705 0000DD52 4983C704                        add r15, 4
 22706                                  
 22707 0000DD56 49C1E703                        shl r15, 3
 22708                                  
 22709 0000DD5A 4C01FC                          add rsp, r15
 22710 0000DD5D 5D                      	pop rbp                                  ; restore the old rbp
 22711                                  
 22712 0000DD5E 488B4D00                        mov rcx, qword [rbp]
 22713 0000DD62 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22714                                            ; rbx <- code(proc)
 22715                                  
 22716 0000DD66 FFE3                            jmp rbx
 22717 0000DD68 E9B2000000              	jmp .L_if_end_0276
 22718                                  	.L_if_else_0276:
 22719 0000DD6D 488B4520                	mov rax, qword [rbp + 32]
 22720 0000DD71 50                      	push rax
 22721 0000DD72 488B4510                mov rax, qword [rbp + 16]
 22722 0000DD76 488B00                  mov rax, qword [rax + 0]
 22723 0000DD79 488B00                  mov rax, qword [rax + 0]
 22724 0000DD7C 50                      	push rax
 22725 0000DD7D 488B4528                mov rax, qword [rbp + 40]
 22726 0000DD81 50                      	push rax
 22727 0000DD82 488B4510                mov rax, qword [rbp + 16]
 22728 0000DD86 488B00                  mov rax, qword [rax + 0]
 22729 0000DD89 488B4008                mov rax, qword [rax + 8]
 22730 0000DD8D 50                      	push rax
 22731 0000DD8E 48B8-                   	mov rax, qword (L_constants + 31)
 22731 0000DD90 [1F00000000000000] 
 22732 0000DD98 50                      	push rax
 22733 0000DD99 6A05                    	push 5
 22734 0000DD9B 488B4510                mov rax, qword [rbp + 16]
 22735 0000DD9F 488B4008                mov rax, qword [rax + 8]
 22736 0000DDA3 488B00                  mov rax, qword [rax + 0]
 22737 0000DDA6 488B00                  	mov rax, qword [rax]
 22738                                  .L_lambda_simple_arity_check_ok_08ec:
 22739 0000DDA9 803805                  	cmp byte [rax], T_closure
 22740                                  
 22741 0000DDAC 0F85505A0000                    jne L_code_ptr_error                      ; rax <- proc
 22742                                  
 22743                                  
 22744 0000DDB2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22745                                  
 22746 0000DDB6 53                              push rbx                                  ; env pushed
 22747                                  
 22748 0000DDB7 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22749                                  
 22750                                          ; sagydebug
 22751                                  
 22752 0000DDBA FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22753                                  
 22754                                          
 22755                                          
 22756 0000DDBD 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22757                                  
 22758 0000DDC1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22759                                  
 22760                                  
 22761 0000DDC6 4D89CA                          mov r10, r9
 22762 0000DDC9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 22763                                          
 22764 0000DDCD 4D89D7                          mov r15, r10
 22765 0000DDD0 4983C7FF                        add r15, -1
 22766                                                                                         
 22767 0000DDD4 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22768 0000DDD7 4983C404                        add r12, 4
 22769 0000DDDB 4983C4FF                        add r12, -1
 22770                                  
 22771 0000DDDF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22772                                  .L_tc_recycle_frame_loop_04cf:
 22773 0000DDE5 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 22774                                  
 22775 0000DDE9 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22776                                  
 22777                                  
 22778                                  
 22779 0000DDEE 41BE00000000                    mov r14, 0                                ; clean box
 22780                                  
 22781                                  
 22782 0000DDF4 4983C7FF                        add r15, -1           
 22783 0000DDF8 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22784                                  
 22785 0000DDFC 4983C4FF                        add r12, -1 
 22786                                  
 22787 0000DE00 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22788 0000DE04 75DF                    	jne .L_tc_recycle_frame_loop_04cf
 22789                                  .L_tc_recycle_frame_done_04cf:
 22790                                  ;this pop rbp in sot to the right place
 22791 0000DE06 4D89C7                  mov r15, r8
 22792                                  
 22793 0000DE09 4983C704                        add r15, 4
 22794                                  
 22795 0000DE0D 49C1E703                        shl r15, 3
 22796                                  
 22797 0000DE11 4C01FC                          add rsp, r15
 22798 0000DE14 5D                      	pop rbp                                  ; restore the old rbp
 22799                                  
 22800 0000DE15 488B4D00                        mov rcx, qword [rbp]
 22801 0000DE19 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22802                                            ; rbx <- code(proc)
 22803                                  
 22804 0000DE1D FFE3                            jmp rbx
 22805                                  	.L_if_end_0276:
 22806 0000DE1F C9                      	leave
 22807 0000DE20 C22000                  	ret 8 * (2 + 2)
 22808                                  .L_lambda_simple_end_041d:	; new closure is in rax
 22809                                  .L_lambda_simple_arity_check_ok_08ee:
 22810 0000DE23 803805                  	cmp byte [rax], T_closure
 22811                                  
 22812 0000DE26 0F85D6590000                    jne L_code_ptr_error                      ; rax <- proc
 22813                                  
 22814                                  
 22815 0000DE2C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22816                                  
 22817 0000DE30 53                              push rbx                                  ; env pushed
 22818                                  
 22819 0000DE31 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22820                                  
 22821                                          ; sagydebug
 22822                                  
 22823 0000DE34 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22824                                  
 22825                                          
 22826                                          
 22827 0000DE37 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22828                                  
 22829 0000DE3B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22830                                  
 22831                                  
 22832 0000DE40 4D89CA                          mov r10, r9
 22833 0000DE43 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 22834                                          
 22835 0000DE47 4D89D7                          mov r15, r10
 22836 0000DE4A 4983C7FF                        add r15, -1
 22837                                                                                         
 22838 0000DE4E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22839 0000DE51 4983C404                        add r12, 4
 22840 0000DE55 4983C4FF                        add r12, -1
 22841                                  
 22842 0000DE59 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22843                                  .L_tc_recycle_frame_loop_04d1:
 22844 0000DE5F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 22845                                  
 22846 0000DE63 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22847                                  
 22848                                  
 22849                                  
 22850 0000DE68 41BE00000000                    mov r14, 0                                ; clean box
 22851                                  
 22852                                  
 22853 0000DE6E 4983C7FF                        add r15, -1           
 22854 0000DE72 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22855                                  
 22856 0000DE76 4983C4FF                        add r12, -1 
 22857                                  
 22858 0000DE7A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22859 0000DE7E 75DF                    	jne .L_tc_recycle_frame_loop_04d1
 22860                                  .L_tc_recycle_frame_done_04d1:
 22861                                  ;this pop rbp in sot to the right place
 22862 0000DE80 4D89C7                  mov r15, r8
 22863                                  
 22864 0000DE83 4983C704                        add r15, 4
 22865                                  
 22866 0000DE87 49C1E703                        shl r15, 3
 22867                                  
 22868 0000DE8B 4C01FC                          add rsp, r15
 22869 0000DE8E 5D                      	pop rbp                                  ; restore the old rbp
 22870                                  
 22871 0000DE8F 488B4D00                        mov rcx, qword [rbp]
 22872 0000DE93 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22873                                            ; rbx <- code(proc)
 22874                                  
 22875 0000DE97 FFE3                            jmp rbx
 22876 0000DE99 C9                      	leave
 22877 0000DE9A C22000                  	ret 8 * (2 + 2)
 22878                                  .L_lambda_simple_end_041c:	; new closure is in rax
 22879 0000DE9D 50                      	push rax
 22880 0000DE9E 6A01                    	push 1
 22881 0000DEA0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22882 0000DEA5 E89D490000              	call malloc
 22883 0000DEAA 50                      	push rax
 22884 0000DEAB BF08000000              	mov rdi, 8 * 1	; new rib
 22885 0000DEB0 E892490000              	call malloc
 22886 0000DEB5 50                      	push rax
 22887 0000DEB6 BF18000000              	mov rdi, 8 * 3	; extended env
 22888 0000DEBB E887490000              	call malloc
 22889 0000DEC0 488B7D10                	mov rdi, ENV
 22890 0000DEC4 BE00000000              	mov rsi, 0
 22891 0000DEC9 BA01000000              	mov rdx, 1
 22892                                  .L_lambda_simple_env_loop_041e:	; ext_env[i + 1] <-- env[i]
 22893 0000DECE 4883FE02                	cmp rsi, 2
 22894 0000DED2 7410                    	je .L_lambda_simple_env_end_041e
 22895 0000DED4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22896 0000DED8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22897 0000DEDC 48FFC6                  	inc rsi
 22898 0000DEDF 48FFC2                  	inc rdx
 22899 0000DEE2 EBEA                    	jmp .L_lambda_simple_env_loop_041e
 22900                                  .L_lambda_simple_env_end_041e:
 22901 0000DEE4 5B                      	pop rbx
 22902 0000DEE5 BE00000000              	mov rsi, 0
 22903                                  .L_lambda_simple_params_loop_041e:	; copy params
 22904 0000DEEA 4883FE01                	cmp rsi, 1
 22905 0000DEEE 740E                    	je .L_lambda_simple_params_end_041e
 22906 0000DEF0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22907 0000DEF5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22908 0000DEF9 48FFC6                  	inc rsi
 22909 0000DEFC EBEC                    	jmp .L_lambda_simple_params_loop_041e
 22910                                  .L_lambda_simple_params_end_041e:
 22911 0000DEFE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22912 0000DF01 4889C3                  	mov rbx, rax
 22913 0000DF04 58                      	pop rax
 22914 0000DF05 C60005                  	mov byte [rax], T_closure
 22915 0000DF08 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22916 0000DF0C 48C74009[19DF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041e
 22917 0000DF14 E94B050000              	jmp .L_lambda_simple_end_041e
 22918                                  .L_lambda_simple_code_041e:	; lambda-simple body
 22919 0000DF19 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22920 0000DF1F 740B                    	je .L_lambda_simple_arity_check_ok_08ef
 22921 0000DF21 FF742410                	push qword [rsp + 8 * 2]
 22922 0000DF25 6A01                    	push 1
 22923 0000DF27 E9D4480000              	jmp L_error_incorrect_arity_simple
 22924                                  .L_lambda_simple_arity_check_ok_08ef:
 22925 0000DF2C C8000000                	enter 0, 0
 22926 0000DF30 48B8-                   	mov rax, qword (L_constants + 22)
 22926 0000DF32 [1600000000000000] 
 22927 0000DF3A 50                      	push rax
 22928 0000DF3B 6A01                    	push 1
 22929 0000DF3D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22930 0000DF42 E800490000              	call malloc
 22931 0000DF47 50                      	push rax
 22932 0000DF48 BF08000000              	mov rdi, 8 * 1	; new rib
 22933 0000DF4D E8F5480000              	call malloc
 22934 0000DF52 50                      	push rax
 22935 0000DF53 BF20000000              	mov rdi, 8 * 4	; extended env
 22936 0000DF58 E8EA480000              	call malloc
 22937 0000DF5D 488B7D10                	mov rdi, ENV
 22938 0000DF61 BE00000000              	mov rsi, 0
 22939 0000DF66 BA01000000              	mov rdx, 1
 22940                                  .L_lambda_simple_env_loop_041f:	; ext_env[i + 1] <-- env[i]
 22941 0000DF6B 4883FE03                	cmp rsi, 3
 22942 0000DF6F 7410                    	je .L_lambda_simple_env_end_041f
 22943 0000DF71 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22944 0000DF75 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22945 0000DF79 48FFC6                  	inc rsi
 22946 0000DF7C 48FFC2                  	inc rdx
 22947 0000DF7F EBEA                    	jmp .L_lambda_simple_env_loop_041f
 22948                                  .L_lambda_simple_env_end_041f:
 22949 0000DF81 5B                      	pop rbx
 22950 0000DF82 BE00000000              	mov rsi, 0
 22951                                  .L_lambda_simple_params_loop_041f:	; copy params
 22952 0000DF87 4883FE01                	cmp rsi, 1
 22953 0000DF8B 740E                    	je .L_lambda_simple_params_end_041f
 22954 0000DF8D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22955 0000DF92 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22956 0000DF96 48FFC6                  	inc rsi
 22957 0000DF99 EBEC                    	jmp .L_lambda_simple_params_loop_041f
 22958                                  .L_lambda_simple_params_end_041f:
 22959 0000DF9B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22960 0000DF9E 4889C3                  	mov rbx, rax
 22961 0000DFA1 58                      	pop rax
 22962 0000DFA2 C60005                  	mov byte [rax], T_closure
 22963 0000DFA5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22964 0000DFA9 48C74009[B6DF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_041f
 22965 0000DFB1 E934040000              	jmp .L_lambda_simple_end_041f
 22966                                  .L_lambda_simple_code_041f:	; lambda-simple body
 22967 0000DFB6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22968 0000DFBC 740B                    	je .L_lambda_simple_arity_check_ok_08f0
 22969 0000DFBE FF742410                	push qword [rsp + 8 * 2]
 22970 0000DFC2 6A01                    	push 1
 22971 0000DFC4 E937480000              	jmp L_error_incorrect_arity_simple
 22972                                  .L_lambda_simple_arity_check_ok_08f0:
 22973 0000DFC9 C8000000                	enter 0, 0
 22974 0000DFCD 488B4520                mov rax, qword [rbp + 32]
 22975 0000DFD1 BF08000000              mov rdi, 8
 22976 0000DFD6 4889C3                  mov rbx, rax
 22977 0000DFD9 E869480000              call malloc
 22978 0000DFDE 488918                  mov qword [rax], rbx
 22979 0000DFE1 48894520                mov qword [rbp + 32], rax
 22980 0000DFE5 48B8-                   mov rax, sob_void
 22980 0000DFE7 [0000000000000000] 
 22981 0000DFEF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22982 0000DFF4 E84E480000              	call malloc
 22983 0000DFF9 50                      	push rax
 22984 0000DFFA BF08000000              	mov rdi, 8 * 1	; new rib
 22985 0000DFFF E843480000              	call malloc
 22986 0000E004 50                      	push rax
 22987 0000E005 BF28000000              	mov rdi, 8 * 5	; extended env
 22988 0000E00A E838480000              	call malloc
 22989 0000E00F 488B7D10                	mov rdi, ENV
 22990 0000E013 BE00000000              	mov rsi, 0
 22991 0000E018 BA01000000              	mov rdx, 1
 22992                                  .L_lambda_simple_env_loop_0420:	; ext_env[i + 1] <-- env[i]
 22993 0000E01D 4883FE04                	cmp rsi, 4
 22994 0000E021 7410                    	je .L_lambda_simple_env_end_0420
 22995 0000E023 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22996 0000E027 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22997 0000E02B 48FFC6                  	inc rsi
 22998 0000E02E 48FFC2                  	inc rdx
 22999 0000E031 EBEA                    	jmp .L_lambda_simple_env_loop_0420
 23000                                  .L_lambda_simple_env_end_0420:
 23001 0000E033 5B                      	pop rbx
 23002 0000E034 BE00000000              	mov rsi, 0
 23003                                  .L_lambda_simple_params_loop_0420:	; copy params
 23004 0000E039 4883FE01                	cmp rsi, 1
 23005 0000E03D 740E                    	je .L_lambda_simple_params_end_0420
 23006 0000E03F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23007 0000E044 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23008 0000E048 48FFC6                  	inc rsi
 23009 0000E04B EBEC                    	jmp .L_lambda_simple_params_loop_0420
 23010                                  .L_lambda_simple_params_end_0420:
 23011 0000E04D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23012 0000E050 4889C3                  	mov rbx, rax
 23013 0000E053 58                      	pop rax
 23014 0000E054 C60005                  	mov byte [rax], T_closure
 23015 0000E057 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23016 0000E05B 48C74009[68E00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0420
 23017 0000E063 E96A010000              	jmp .L_lambda_simple_end_0420
 23018                                  .L_lambda_simple_code_0420:	; lambda-simple body
 23019 0000E068 48837C241002            	cmp qword [rsp + 8 * 2], 2
 23020 0000E06E 740B                    	je .L_lambda_simple_arity_check_ok_08f1
 23021 0000E070 FF742410                	push qword [rsp + 8 * 2]
 23022 0000E074 6A02                    	push 2
 23023 0000E076 E985470000              	jmp L_error_incorrect_arity_simple
 23024                                  .L_lambda_simple_arity_check_ok_08f1:
 23025 0000E07B C8000000                	enter 0, 0
 23026 0000E07F 488B4528                mov rax, qword [rbp + 40]
 23027 0000E083 50                      	push rax
 23028 0000E084 6A01                    	push 1
 23029 0000E086 488B0425[00000000]      	mov rax, qword [free_var_0]
 23030 0000E08E 803805                  	cmp byte [rax], T_closure 
 23031 0000E091 0F856B570000                    jne L_code_ptr_error
 23032                                  
 23033 0000E097 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23034                                  
 23035 0000E09B 53                              push rbx
 23036                                  
 23037 0000E09C FF5009                          call SOB_CLOSURE_CODE(rax)
 23038                                  
 23039 0000E09F 483D[02000000]                  	cmp rax, sob_boolean_false
 23040 0000E0A5 0F8523010000            	jne .L_or_end_0051
 23041 0000E0AB 488B4528                mov rax, qword [rbp + 40]
 23042 0000E0AF 50                      	push rax
 23043 0000E0B0 6A01                    	push 1
 23044 0000E0B2 488B0425[80000000]      	mov rax, qword [free_var_16]
 23045 0000E0BA 803805                  	cmp byte [rax], T_closure 
 23046 0000E0BD 0F853F570000                    jne L_code_ptr_error
 23047                                  
 23048 0000E0C3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23049                                  
 23050 0000E0C7 53                              push rbx
 23051                                  
 23052 0000E0C8 FF5009                          call SOB_CLOSURE_CODE(rax)
 23053                                  
 23054 0000E0CB 50                              	push rax
 23055 0000E0CC 488B4520                mov rax, qword [rbp + 32]
 23056 0000E0D0 50                      	push rax
 23057 0000E0D1 6A02                    	push 2
 23058 0000E0D3 488B4510                mov rax, qword [rbp + 16]
 23059 0000E0D7 488B4008                mov rax, qword [rax + 8]
 23060 0000E0DB 488B00                  mov rax, qword [rax + 0]
 23061 0000E0DE 803805                  	cmp byte [rax], T_closure 
 23062 0000E0E1 0F851B570000                    jne L_code_ptr_error
 23063                                  
 23064 0000E0E7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23065                                  
 23066 0000E0EB 53                              push rbx
 23067                                  
 23068 0000E0EC FF5009                          call SOB_CLOSURE_CODE(rax)
 23069                                  
 23070 0000E0EF 483D[02000000]                  	cmp rax, sob_boolean_false
 23071 0000E0F5 0F84C9000000            	je .L_if_else_0277
 23072 0000E0FB 488B4528                mov rax, qword [rbp + 40]
 23073 0000E0FF 50                      	push rax
 23074 0000E100 6A01                    	push 1
 23075 0000E102 488B0425[88000000]      	mov rax, qword [free_var_17]
 23076 0000E10A 803805                  	cmp byte [rax], T_closure 
 23077 0000E10D 0F85EF560000                    jne L_code_ptr_error
 23078                                  
 23079 0000E113 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23080                                  
 23081 0000E117 53                              push rbx
 23082                                  
 23083 0000E118 FF5009                          call SOB_CLOSURE_CODE(rax)
 23084                                  
 23085 0000E11B 50                              	push rax
 23086 0000E11C 488B4528                mov rax, qword [rbp + 40]
 23087 0000E120 50                      	push rax
 23088 0000E121 6A01                    	push 1
 23089 0000E123 488B0425[80000000]      	mov rax, qword [free_var_16]
 23090 0000E12B 803805                  	cmp byte [rax], T_closure 
 23091 0000E12E 0F85CE560000                    jne L_code_ptr_error
 23092                                  
 23093 0000E134 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23094                                  
 23095 0000E138 53                              push rbx
 23096                                  
 23097 0000E139 FF5009                          call SOB_CLOSURE_CODE(rax)
 23098                                  
 23099 0000E13C 50                              	push rax
 23100 0000E13D 6A02                    	push 2
 23101 0000E13F 488B4510                mov rax, qword [rbp + 16]
 23102 0000E143 488B00                  mov rax, qword [rax + 0]
 23103 0000E146 488B00                  mov rax, qword [rax + 0]
 23104 0000E149 488B00                  	mov rax, qword [rax]
 23105                                  .L_lambda_simple_arity_check_ok_08f2:
 23106 0000E14C 803805                  	cmp byte [rax], T_closure
 23107                                  
 23108 0000E14F 0F85AD560000                    jne L_code_ptr_error                      ; rax <- proc
 23109                                  
 23110                                  
 23111 0000E155 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23112                                  
 23113 0000E159 53                              push rbx                                  ; env pushed
 23114                                  
 23115 0000E15A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23116                                  
 23117                                          ; sagydebug
 23118                                  
 23119 0000E15D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23120                                  
 23121                                          
 23122                                          
 23123 0000E160 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23124                                  
 23125 0000E164 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23126                                  
 23127                                  
 23128 0000E169 4D89CA                          mov r10, r9
 23129 0000E16C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 23130                                          
 23131 0000E170 4D89D7                          mov r15, r10
 23132 0000E173 4983C7FF                        add r15, -1
 23133                                                                                         
 23134 0000E177 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23135 0000E17A 4983C404                        add r12, 4
 23136 0000E17E 4983C4FF                        add r12, -1
 23137                                  
 23138 0000E182 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23139                                  .L_tc_recycle_frame_loop_04d2:
 23140 0000E188 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 23141                                  
 23142 0000E18C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23143                                  
 23144                                  
 23145                                  
 23146 0000E191 41BE00000000                    mov r14, 0                                ; clean box
 23147                                  
 23148                                  
 23149 0000E197 4983C7FF                        add r15, -1           
 23150 0000E19B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23151                                  
 23152 0000E19F 4983C4FF                        add r12, -1 
 23153                                  
 23154 0000E1A3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23155 0000E1A7 75DF                    	jne .L_tc_recycle_frame_loop_04d2
 23156                                  .L_tc_recycle_frame_done_04d2:
 23157                                  ;this pop rbp in sot to the right place
 23158 0000E1A9 4D89C7                  mov r15, r8
 23159                                  
 23160 0000E1AC 4983C704                        add r15, 4
 23161                                  
 23162 0000E1B0 49C1E703                        shl r15, 3
 23163                                  
 23164 0000E1B4 4C01FC                          add rsp, r15
 23165 0000E1B7 5D                      	pop rbp                                  ; restore the old rbp
 23166                                  
 23167 0000E1B8 488B4D00                        mov rcx, qword [rbp]
 23168 0000E1BC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23169                                            ; rbx <- code(proc)
 23170                                  
 23171 0000E1C0 FFE3                            jmp rbx
 23172 0000E1C2 EB0A                    	jmp .L_if_end_0277
 23173                                  	.L_if_else_0277:
 23174 0000E1C4 48B8-                   		mov rax, qword (L_constants + 2)
 23174 0000E1C6 [0200000000000000] 
 23175                                  	.L_if_end_0277:
 23176                                  .L_or_end_0051:
 23177 0000E1CE C9                      	leave
 23178 0000E1CF C22000                  	ret 8 * (2 + 2)
 23179                                  .L_lambda_simple_end_0420:	; new closure is in rax
 23180 0000E1D2 50                      push rax
 23181 0000E1D3 488B4520                mov rax, qword [rbp + 32]
 23182 0000E1D7 8F00                    pop qword [rax]
 23183 0000E1D9 48B8-                   mov rax, sob_void
 23183 0000E1DB [0000000000000000] 
 23184                                  
 23185 0000E1E3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23186 0000E1E8 E85A460000              	call malloc
 23187 0000E1ED 50                      	push rax
 23188 0000E1EE BF08000000              	mov rdi, 8 * 1	; new rib
 23189 0000E1F3 E84F460000              	call malloc
 23190 0000E1F8 50                      	push rax
 23191 0000E1F9 BF28000000              	mov rdi, 8 * 5	; extended env
 23192 0000E1FE E844460000              	call malloc
 23193 0000E203 488B7D10                	mov rdi, ENV
 23194 0000E207 BE00000000              	mov rsi, 0
 23195 0000E20C BA01000000              	mov rdx, 1
 23196                                  .L_lambda_opt_env_loop_009d:	; ext_env[i + 1] <-- env[i]
 23197 0000E211 4883FE04                	cmp rsi, 4
 23198 0000E215 7410                    	je .L_lambda_opt_env_end_009d
 23199 0000E217 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23200 0000E21B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23201 0000E21F 48FFC6                  	inc rsi
 23202 0000E222 48FFC2                  	inc rdx
 23203 0000E225 EBEA                    	jmp .L_lambda_opt_env_loop_009d
 23204                                  .L_lambda_opt_env_end_009d:
 23205 0000E227 5B                      	pop rbx
 23206 0000E228 BE00000000              	mov rsi, 0
 23207                                  .L_lambda_opt_params_loop_01d5:	; copy params
 23208 0000E22D 4883FE01                	cmp rsi, 1
 23209 0000E231 740E                    	je .L_lambda_opt_params_end_01d5
 23210 0000E233 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23211 0000E238 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23212 0000E23C 48FFC6                  	inc rsi
 23213 0000E23F EBEC                    	jmp .L_lambda_opt_params_loop_01d5
 23214                                  .L_lambda_opt_params_end_01d5:
 23215 0000E241 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23216 0000E244 4889C3                  	mov rbx, rax
 23217 0000E247 58                      	pop rax
 23218 0000E248 C60005                  	mov byte [rax], T_closure
 23219 0000E24B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23220 0000E24F 48C74009[5CE20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_009d
 23221 0000E257 E98A010000              	jmp .L_lambda_opt_end_009d
 23222                                  .L_lambda_opt_code_009d:
 23223 0000E25C 4C8B542410              mov r10, qword [rsp+8*2]
 23224 0000E261 4983FA01                cmp r10, 1
 23225 0000E265 740B                    je .L_lambda_opt_arity_check_exact_009d
 23226 0000E267 4983FA01                cmp r10, 1
 23227 0000E26B 7F44                    jg .L_lambda_opt_arity_check_more_009d
 23228 0000E26D E9A2450000              jmp L_error_incorrect_arity_opt
 23229                                  .L_lambda_opt_arity_check_exact_009d:
 23230 0000E272 4883EC08                sub rsp, 8
 23231 0000E276 BA04000000              mov rdx, 3+1
 23232 0000E27B 4889E3                  mov qword rbx, rsp
 23233                                  .L_lambda_opt_params_loop_01d6:
 23234 0000E27E 488B4B08                mov qword rcx, [rbx+8]
 23235 0000E282 48890B                  mov qword [rbx], rcx
 23236 0000E285 48FFCA                  dec rdx
 23237 0000E288 4883C308                add rbx, 8
 23238 0000E28C 4883FA00                cmp rdx, 0
 23239 0000E290 7402                    je .L_lambda_opt_params_end_01d6
 23240 0000E292 EBEA                    jmp .L_lambda_opt_params_loop_01d6
 23241                                  .L_lambda_opt_params_end_01d6:
 23242 0000E294 49FFC2                  inc r10
 23243 0000E297 4C89542410              mov qword [rsp+8*2], r10
 23244 0000E29C 4983C202                add r10, 2
 23245 0000E2A0 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 23246 0000E2A8 4C8B4D00                mov r9, [rbp]
 23247 0000E2AC E996000000              jmp .L_lambda_opt_stack_adjusted_009d
 23248                                  .L_lambda_opt_arity_check_more_009d:
 23249 0000E2B1 4C8B6C2410              mov r13, [rsp+2*8]
 23250 0000E2B6 48B8-                   mov rax, sob_nil
 23250 0000E2B8 [0100000000000000] 
 23251 0000E2C0 4C8B542410              mov r10, [rsp+2*8]
 23252 0000E2C5 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 23253 0000E2CA 4983EA01                sub r10, 1
 23254                                  .L_lambda_opt_stack_shrink_loop_009d:
 23255 0000E2CE 4983FA00                cmp r10, 0
 23256 0000E2D2 7424                    je .L_lambda_opt_stack_shrink_loop_exit_009d
 23257 0000E2D4 4889C1                  mov rcx, rax
 23258 0000E2D7 498B10                  mov rdx, [r8]
 23259 0000E2DA BF11000000              mov rdi, 17
 23260 0000E2DF E863450000              call malloc
 23261 0000E2E4 C60021                  mov byte [rax], T_pair
 23262 0000E2E7 48894809                mov SOB_PAIR_CDR(rax), rcx
 23263 0000E2EB 48895001                mov SOB_PAIR_CAR(rax), rdx
 23264 0000E2EF 4983E808                sub r8, 8
 23265 0000E2F3 49FFCA                  dec r10
 23266 0000E2F6 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_009d
 23267                                  .L_lambda_opt_stack_shrink_loop_exit_009d:
 23268 0000E2F8 4889442420              mov [rsp+8*(2+2)], rax
 23269 0000E2FD 41BA02000000            mov r10, 2
 23270 0000E303 4C89542410              mov [rsp+16], r10
 23271 0000E308 4989E4                  mov r12, rsp
 23272 0000E30B 4983C420                add r12, 8*(2+2)
 23273 0000E30F 4C2B6C2410              sub r13, [rsp+16]
 23274 0000E314 4D89EA                  mov r10, r13
 23275 0000E317 49C1E203                shl r10, 3
 23276 0000E31B 4D89D7                  mov r15, r10
 23277 0000E31E 4D01E2                  add r10, r12
 23278 0000E321 4C8B4C2410              mov r9, [rsp+16]
 23279 0000E326 4983C103                add r9, 3
 23280                                  .L_lambda_opt_params_loop_01d7:
 23281 0000E32A 4983F900                cmp r9, 0
 23282 0000E32E 7414                    je .L_lambda_opt_params_end_01d7
 23283 0000E330 4D8B3424                mov r14, [r12]
 23284 0000E334 4D8932                  mov [r10], r14
 23285 0000E337 4983EC08                sub r12, 8
 23286 0000E33B 4983EA08                sub r10, 8
 23287 0000E33F 49FFC9                  dec r9
 23288 0000E342 EBE6                    jmp .L_lambda_opt_params_loop_01d7
 23289                                  .L_lambda_opt_params_end_01d7:
 23290 0000E344 4C01FC                  add rsp, r15
 23291                                  .L_lambda_opt_stack_adjusted_009d:
 23292 0000E347 4C8B4D00                mov r9, [rbp]
 23293 0000E34B C8000000                enter 0, 0
 23294 0000E34F 488B4528                mov rax, qword [rbp + 40]
 23295 0000E353 50                      	push rax
 23296 0000E354 488B4520                mov rax, qword [rbp + 32]
 23297 0000E358 50                      	push rax
 23298 0000E359 6A02                    	push 2
 23299 0000E35B 488B4510                mov rax, qword [rbp + 16]
 23300 0000E35F 488B00                  mov rax, qword [rax + 0]
 23301 0000E362 488B00                  mov rax, qword [rax + 0]
 23302 0000E365 488B00                  	mov rax, qword [rax]
 23303                                  .L_lambda_simple_arity_check_ok_08f3:
 23304 0000E368 803805                  	cmp byte [rax], T_closure
 23305                                  
 23306 0000E36B 0F8591540000                    jne L_code_ptr_error                      ; rax <- proc
 23307                                  
 23308                                  
 23309 0000E371 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23310                                  
 23311 0000E375 53                              push rbx                                  ; env pushed
 23312                                  
 23313 0000E376 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23314                                  
 23315                                          ; sagydebug
 23316                                  
 23317 0000E379 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23318                                  
 23319                                          
 23320                                          
 23321 0000E37C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23322                                  
 23323 0000E380 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23324                                  
 23325                                  
 23326 0000E385 4D89CA                          mov r10, r9
 23327 0000E388 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 23328                                          
 23329 0000E38C 4D89D7                          mov r15, r10
 23330 0000E38F 4983C7FF                        add r15, -1
 23331                                                                                         
 23332 0000E393 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23333 0000E396 4983C404                        add r12, 4
 23334 0000E39A 4983C4FF                        add r12, -1
 23335                                  
 23336 0000E39E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23337                                  .L_tc_recycle_frame_loop_04d3:
 23338 0000E3A4 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 23339                                  
 23340 0000E3A8 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23341                                  
 23342                                  
 23343                                  
 23344 0000E3AD 41BE00000000                    mov r14, 0                                ; clean box
 23345                                  
 23346                                  
 23347 0000E3B3 4983C7FF                        add r15, -1           
 23348 0000E3B7 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23349                                  
 23350 0000E3BB 4983C4FF                        add r12, -1 
 23351                                  
 23352 0000E3BF 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23353 0000E3C3 75DF                    	jne .L_tc_recycle_frame_loop_04d3
 23354                                  .L_tc_recycle_frame_done_04d3:
 23355                                  ;this pop rbp in sot to the right place
 23356 0000E3C5 4D89C7                  mov r15, r8
 23357                                  
 23358 0000E3C8 4983C704                        add r15, 4
 23359                                  
 23360 0000E3CC 49C1E703                        shl r15, 3
 23361                                  
 23362 0000E3D0 4C01FC                          add rsp, r15
 23363 0000E3D3 5D                      	pop rbp                                  ; restore the old rbp
 23364                                  
 23365 0000E3D4 488B4D00                        mov rcx, qword [rbp]
 23366 0000E3D8 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23367                                            ; rbx <- code(proc)
 23368                                  
 23369 0000E3DC FFE3                            jmp rbx
 23370 0000E3DE C9                      leave
 23371 0000E3DF 4C8B4D00                mov r9, [rbp]
 23372 0000E3E3 C22000                  ret 8 * (3 + 1)
 23373                                  .L_lambda_opt_end_009d:	; new closure is in rax
 23374 0000E3E6 C9                      	leave
 23375 0000E3E7 C21800                  	ret 8 * (2 + 1)
 23376                                  .L_lambda_simple_end_041f:	; new closure is in rax
 23377                                  .L_lambda_simple_arity_check_ok_08f4:
 23378 0000E3EA 803805                  	cmp byte [rax], T_closure
 23379                                  
 23380 0000E3ED 0F850F540000                    jne L_code_ptr_error                      ; rax <- proc
 23381                                  
 23382                                  
 23383 0000E3F3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23384                                  
 23385 0000E3F7 53                              push rbx                                  ; env pushed
 23386                                  
 23387 0000E3F8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23388                                  
 23389                                          ; sagydebug
 23390                                  
 23391 0000E3FB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23392                                  
 23393                                          
 23394                                          
 23395 0000E3FE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23396                                  
 23397 0000E402 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23398                                  
 23399                                  
 23400 0000E407 4D89CA                          mov r10, r9
 23401 0000E40A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 23402                                          
 23403 0000E40E 4D89D7                          mov r15, r10
 23404 0000E411 4983C7FF                        add r15, -1
 23405                                                                                         
 23406 0000E415 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23407 0000E418 4983C404                        add r12, 4
 23408 0000E41C 4983C4FF                        add r12, -1
 23409                                  
 23410 0000E420 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23411                                  .L_tc_recycle_frame_loop_04d4:
 23412 0000E426 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 23413                                  
 23414 0000E42A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23415                                  
 23416                                  
 23417                                  
 23418 0000E42F 41BE00000000                    mov r14, 0                                ; clean box
 23419                                  
 23420                                  
 23421 0000E435 4983C7FF                        add r15, -1           
 23422 0000E439 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23423                                  
 23424 0000E43D 4983C4FF                        add r12, -1 
 23425                                  
 23426 0000E441 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23427 0000E445 75DF                    	jne .L_tc_recycle_frame_loop_04d4
 23428                                  .L_tc_recycle_frame_done_04d4:
 23429                                  ;this pop rbp in sot to the right place
 23430 0000E447 4D89C7                  mov r15, r8
 23431                                  
 23432 0000E44A 4983C704                        add r15, 4
 23433                                  
 23434 0000E44E 49C1E703                        shl r15, 3
 23435                                  
 23436 0000E452 4C01FC                          add rsp, r15
 23437 0000E455 5D                      	pop rbp                                  ; restore the old rbp
 23438                                  
 23439 0000E456 488B4D00                        mov rcx, qword [rbp]
 23440 0000E45A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23441                                            ; rbx <- code(proc)
 23442                                  
 23443 0000E45E FFE3                            jmp rbx
 23444 0000E460 C9                      	leave
 23445 0000E461 C21800                  	ret 8 * (2 + 1)
 23446                                  .L_lambda_simple_end_041e:	; new closure is in rax
 23447                                  .L_lambda_simple_arity_check_ok_08f5:
 23448 0000E464 803805                  	cmp byte [rax], T_closure
 23449                                  
 23450 0000E467 0F8595530000                    jne L_code_ptr_error                      ; rax <- proc
 23451                                  
 23452                                  
 23453 0000E46D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23454                                  
 23455 0000E471 53                              push rbx                                  ; env pushed
 23456                                  
 23457 0000E472 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23458                                  
 23459                                          ; sagydebug
 23460                                  
 23461 0000E475 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23462                                  
 23463                                          
 23464                                          
 23465 0000E478 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23466                                  
 23467 0000E47C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23468                                  
 23469                                  
 23470 0000E481 4D89CA                          mov r10, r9
 23471 0000E484 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 23472                                          
 23473 0000E488 4D89D7                          mov r15, r10
 23474 0000E48B 4983C7FF                        add r15, -1
 23475                                                                                         
 23476 0000E48F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23477 0000E492 4983C404                        add r12, 4
 23478 0000E496 4983C4FF                        add r12, -1
 23479                                  
 23480 0000E49A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23481                                  .L_tc_recycle_frame_loop_04d5:
 23482 0000E4A0 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 23483                                  
 23484 0000E4A4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23485                                  
 23486                                  
 23487                                  
 23488 0000E4A9 41BE00000000                    mov r14, 0                                ; clean box
 23489                                  
 23490                                  
 23491 0000E4AF 4983C7FF                        add r15, -1           
 23492 0000E4B3 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23493                                  
 23494 0000E4B7 4983C4FF                        add r12, -1 
 23495                                  
 23496 0000E4BB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23497 0000E4BF 75DF                    	jne .L_tc_recycle_frame_loop_04d5
 23498                                  .L_tc_recycle_frame_done_04d5:
 23499                                  ;this pop rbp in sot to the right place
 23500 0000E4C1 4D89C7                  mov r15, r8
 23501                                  
 23502 0000E4C4 4983C704                        add r15, 4
 23503                                  
 23504 0000E4C8 49C1E703                        shl r15, 3
 23505                                  
 23506 0000E4CC 4C01FC                          add rsp, r15
 23507 0000E4CF 5D                      	pop rbp                                  ; restore the old rbp
 23508                                  
 23509 0000E4D0 488B4D00                        mov rcx, qword [rbp]
 23510 0000E4D4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23511                                            ; rbx <- code(proc)
 23512                                  
 23513 0000E4D8 FFE3                            jmp rbx
 23514 0000E4DA C9                      	leave
 23515 0000E4DB C21800                  	ret 8 * (2 + 1)
 23516                                  .L_lambda_simple_end_041a:	; new closure is in rax
 23517                                  .L_lambda_simple_arity_check_ok_08f6:
 23518 0000E4DE 803805                  	cmp byte [rax], T_closure
 23519                                  
 23520 0000E4E1 0F851B530000                    jne L_code_ptr_error                      ; rax <- proc
 23521                                  
 23522                                  
 23523 0000E4E7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23524                                  
 23525 0000E4EB 53                              push rbx                                  ; env pushed
 23526                                  
 23527 0000E4EC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23528                                  
 23529                                          ; sagydebug
 23530                                  
 23531 0000E4EF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23532                                  
 23533                                          
 23534                                          
 23535 0000E4F2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23536                                  
 23537 0000E4F6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23538                                  
 23539                                  
 23540 0000E4FB 4D89CA                          mov r10, r9
 23541 0000E4FE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 23542                                          
 23543 0000E502 4D89D7                          mov r15, r10
 23544 0000E505 4983C7FF                        add r15, -1
 23545                                                                                         
 23546 0000E509 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23547 0000E50C 4983C404                        add r12, 4
 23548 0000E510 4983C4FF                        add r12, -1
 23549                                  
 23550 0000E514 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23551                                  .L_tc_recycle_frame_loop_04d6:
 23552 0000E51A 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 23553                                  
 23554 0000E51E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23555                                  
 23556                                  
 23557                                  
 23558 0000E523 41BE00000000                    mov r14, 0                                ; clean box
 23559                                  
 23560                                  
 23561 0000E529 4983C7FF                        add r15, -1           
 23562 0000E52D 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23563                                  
 23564 0000E531 4983C4FF                        add r12, -1 
 23565                                  
 23566 0000E535 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23567 0000E539 75DF                    	jne .L_tc_recycle_frame_loop_04d6
 23568                                  .L_tc_recycle_frame_done_04d6:
 23569                                  ;this pop rbp in sot to the right place
 23570 0000E53B 4D89C7                  mov r15, r8
 23571                                  
 23572 0000E53E 4983C704                        add r15, 4
 23573                                  
 23574 0000E542 49C1E703                        shl r15, 3
 23575                                  
 23576 0000E546 4C01FC                          add rsp, r15
 23577 0000E549 5D                      	pop rbp                                  ; restore the old rbp
 23578                                  
 23579 0000E54A 488B4D00                        mov rcx, qword [rbp]
 23580 0000E54E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23581                                            ; rbx <- code(proc)
 23582                                  
 23583 0000E552 FFE3                            jmp rbx
 23584 0000E554 C9                      	leave
 23585 0000E555 C22000                  	ret 8 * (2 + 2)
 23586                                  .L_lambda_simple_end_0419:	; new closure is in rax
 23587 0000E558 50                      	push rax
 23588 0000E559 6A01                    	push 1
 23589 0000E55B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23590 0000E560 E8E2420000              	call malloc
 23591 0000E565 50                      	push rax
 23592 0000E566 BF00000000              	mov rdi, 8 * 0	; new rib
 23593 0000E56B E8D7420000              	call malloc
 23594 0000E570 50                      	push rax
 23595 0000E571 BF08000000              	mov rdi, 8 * 1	; extended env
 23596 0000E576 E8CC420000              	call malloc
 23597 0000E57B 488B7D10                	mov rdi, ENV
 23598 0000E57F BE00000000              	mov rsi, 0
 23599 0000E584 BA01000000              	mov rdx, 1
 23600                                  .L_lambda_simple_env_loop_0421:	; ext_env[i + 1] <-- env[i]
 23601 0000E589 4883FE00                	cmp rsi, 0
 23602 0000E58D 7410                    	je .L_lambda_simple_env_end_0421
 23603 0000E58F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23604 0000E593 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23605 0000E597 48FFC6                  	inc rsi
 23606 0000E59A 48FFC2                  	inc rdx
 23607 0000E59D EBEA                    	jmp .L_lambda_simple_env_loop_0421
 23608                                  .L_lambda_simple_env_end_0421:
 23609 0000E59F 5B                      	pop rbx
 23610 0000E5A0 BE00000000              	mov rsi, 0
 23611                                  .L_lambda_simple_params_loop_0421:	; copy params
 23612 0000E5A5 4883FE00                	cmp rsi, 0
 23613 0000E5A9 740E                    	je .L_lambda_simple_params_end_0421
 23614 0000E5AB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23615 0000E5B0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23616 0000E5B4 48FFC6                  	inc rsi
 23617 0000E5B7 EBEC                    	jmp .L_lambda_simple_params_loop_0421
 23618                                  .L_lambda_simple_params_end_0421:
 23619 0000E5B9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23620 0000E5BC 4889C3                  	mov rbx, rax
 23621 0000E5BF 58                      	pop rax
 23622 0000E5C0 C60005                  	mov byte [rax], T_closure
 23623 0000E5C3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23624 0000E5C7 48C74009[D4E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0421
 23625 0000E5CF E907010000              	jmp .L_lambda_simple_end_0421
 23626                                  .L_lambda_simple_code_0421:	; lambda-simple body
 23627 0000E5D4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23628 0000E5DA 740B                    	je .L_lambda_simple_arity_check_ok_08f7
 23629 0000E5DC FF742410                	push qword [rsp + 8 * 2]
 23630 0000E5E0 6A01                    	push 1
 23631 0000E5E2 E919420000              	jmp L_error_incorrect_arity_simple
 23632                                  .L_lambda_simple_arity_check_ok_08f7:
 23633 0000E5E7 C8000000                	enter 0, 0
 23634 0000E5EB 488B0425[70030000]      	mov rax, qword [free_var_110]
 23635 0000E5F3 50                      	push rax
 23636 0000E5F4 488B0425[60030000]      	mov rax, qword [free_var_108]
 23637 0000E5FC 50                      	push rax
 23638 0000E5FD 6A02                    	push 2
 23639 0000E5FF 488B4520                mov rax, qword [rbp + 32]
 23640 0000E603 803805                  	cmp byte [rax], T_closure 
 23641 0000E606 0F85F6510000                    jne L_code_ptr_error
 23642                                  
 23643 0000E60C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23644                                  
 23645 0000E610 53                              push rbx
 23646                                  
 23647 0000E611 FF5009                          call SOB_CLOSURE_CODE(rax)
 23648                                  
 23649 0000E614 48890425[E8030000]              	mov qword [free_var_125], rax
 23650 0000E61C 48B8-                   	mov rax, sob_void
 23650 0000E61E [0000000000000000] 
 23651                                  
 23652 0000E626 488B0425[70030000]      	mov rax, qword [free_var_110]
 23653 0000E62E 50                      	push rax
 23654 0000E62F 488B0425[60030000]      	mov rax, qword [free_var_108]
 23655 0000E637 50                      	push rax
 23656 0000E638 6A02                    	push 2
 23657 0000E63A 488B4520                mov rax, qword [rbp + 32]
 23658 0000E63E 803805                  	cmp byte [rax], T_closure 
 23659 0000E641 0F85BB510000                    jne L_code_ptr_error
 23660                                  
 23661 0000E647 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23662                                  
 23663 0000E64B 53                              push rbx
 23664                                  
 23665 0000E64C FF5009                          call SOB_CLOSURE_CODE(rax)
 23666                                  
 23667 0000E64F 48890425[10040000]              	mov qword [free_var_130], rax
 23668 0000E657 48B8-                   	mov rax, sob_void
 23668 0000E659 [0000000000000000] 
 23669                                  
 23670 0000E661 488B0425[70030000]      	mov rax, qword [free_var_110]
 23671 0000E669 50                      	push rax
 23672 0000E66A 488B0425[78030000]      	mov rax, qword [free_var_111]
 23673 0000E672 50                      	push rax
 23674 0000E673 6A02                    	push 2
 23675 0000E675 488B4520                mov rax, qword [rbp + 32]
 23676 0000E679 803805                  	cmp byte [rax], T_closure 
 23677 0000E67C 0F8580510000                    jne L_code_ptr_error
 23678                                  
 23679 0000E682 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23680                                  
 23681 0000E686 53                              push rbx
 23682                                  
 23683 0000E687 FF5009                          call SOB_CLOSURE_CODE(rax)
 23684                                  
 23685 0000E68A 48890425[F8030000]              	mov qword [free_var_127], rax
 23686 0000E692 48B8-                   	mov rax, sob_void
 23686 0000E694 [0000000000000000] 
 23687                                  
 23688 0000E69C 488B0425[A8030000]      	mov rax, qword [free_var_117]
 23689 0000E6A4 50                      	push rax
 23690 0000E6A5 488B0425[B0030000]      	mov rax, qword [free_var_118]
 23691 0000E6AD 50                      	push rax
 23692 0000E6AE 6A02                    	push 2
 23693 0000E6B0 488B4520                mov rax, qword [rbp + 32]
 23694 0000E6B4 803805                  	cmp byte [rax], T_closure 
 23695 0000E6B7 0F8545510000                    jne L_code_ptr_error
 23696                                  
 23697 0000E6BD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23698                                  
 23699 0000E6C1 53                              push rbx
 23700                                  
 23701 0000E6C2 FF5009                          call SOB_CLOSURE_CODE(rax)
 23702                                  
 23703 0000E6C5 48890425[20040000]              	mov qword [free_var_132], rax
 23704 0000E6CD 48B8-                   	mov rax, sob_void
 23704 0000E6CF [0000000000000000] 
 23705 0000E6D7 C9                      	leave
 23706 0000E6D8 C21800                  	ret 8 * (2 + 1)
 23707                                  .L_lambda_simple_end_0421:	; new closure is in rax
 23708 0000E6DB 803805                  	cmp byte [rax], T_closure 
 23709 0000E6DE 0F851E510000                    jne L_code_ptr_error
 23710                                  
 23711 0000E6E4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23712                                  
 23713 0000E6E8 53                              push rbx
 23714                                  
 23715 0000E6E9 FF5009                          call SOB_CLOSURE_CODE(rax)
 23716                                  
 23717                                          
 23718 0000E6EC 4889C7                  	mov rdi, rax
 23719 0000E6EF E864410000              	call print_sexpr_if_not_void
 23720                                  
 23721 0000E6F4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23722 0000E6F9 E849410000              	call malloc
 23723 0000E6FE 50                      	push rax
 23724 0000E6FF BF00000000              	mov rdi, 8 * 0	; new rib
 23725 0000E704 E83E410000              	call malloc
 23726 0000E709 50                      	push rax
 23727 0000E70A BF08000000              	mov rdi, 8 * 1	; extended env
 23728 0000E70F E833410000              	call malloc
 23729 0000E714 488B7D10                	mov rdi, ENV
 23730 0000E718 BE00000000              	mov rsi, 0
 23731 0000E71D BA01000000              	mov rdx, 1
 23732                                  .L_lambda_simple_env_loop_0422:	; ext_env[i + 1] <-- env[i]
 23733 0000E722 4883FE00                	cmp rsi, 0
 23734 0000E726 7410                    	je .L_lambda_simple_env_end_0422
 23735 0000E728 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23736 0000E72C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23737 0000E730 48FFC6                  	inc rsi
 23738 0000E733 48FFC2                  	inc rdx
 23739 0000E736 EBEA                    	jmp .L_lambda_simple_env_loop_0422
 23740                                  .L_lambda_simple_env_end_0422:
 23741 0000E738 5B                      	pop rbx
 23742 0000E739 BE00000000              	mov rsi, 0
 23743                                  .L_lambda_simple_params_loop_0422:	; copy params
 23744 0000E73E 4883FE00                	cmp rsi, 0
 23745 0000E742 740E                    	je .L_lambda_simple_params_end_0422
 23746 0000E744 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23747 0000E749 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23748 0000E74D 48FFC6                  	inc rsi
 23749 0000E750 EBEC                    	jmp .L_lambda_simple_params_loop_0422
 23750                                  .L_lambda_simple_params_end_0422:
 23751 0000E752 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23752 0000E755 4889C3                  	mov rbx, rax
 23753 0000E758 58                      	pop rax
 23754 0000E759 C60005                  	mov byte [rax], T_closure
 23755 0000E75C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23756 0000E760 48C74009[6DE70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0422
 23757 0000E768 E9B20C0000              	jmp .L_lambda_simple_end_0422
 23758                                  .L_lambda_simple_code_0422:	; lambda-simple body
 23759 0000E76D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23760 0000E773 740B                    	je .L_lambda_simple_arity_check_ok_08f8
 23761 0000E775 FF742410                	push qword [rsp + 8 * 2]
 23762 0000E779 6A01                    	push 1
 23763 0000E77B E980400000              	jmp L_error_incorrect_arity_simple
 23764                                  .L_lambda_simple_arity_check_ok_08f8:
 23765 0000E780 C8000000                	enter 0, 0
 23766 0000E784 48B8-                   	mov rax, qword (L_constants + 22)
 23766 0000E786 [1600000000000000] 
 23767 0000E78E 50                      	push rax
 23768 0000E78F 6A01                    	push 1
 23769 0000E791 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23770 0000E796 E8AC400000              	call malloc
 23771 0000E79B 50                      	push rax
 23772 0000E79C BF08000000              	mov rdi, 8 * 1	; new rib
 23773 0000E7A1 E8A1400000              	call malloc
 23774 0000E7A6 50                      	push rax
 23775 0000E7A7 BF10000000              	mov rdi, 8 * 2	; extended env
 23776 0000E7AC E896400000              	call malloc
 23777 0000E7B1 488B7D10                	mov rdi, ENV
 23778 0000E7B5 BE00000000              	mov rsi, 0
 23779 0000E7BA BA01000000              	mov rdx, 1
 23780                                  .L_lambda_simple_env_loop_0423:	; ext_env[i + 1] <-- env[i]
 23781 0000E7BF 4883FE01                	cmp rsi, 1
 23782 0000E7C3 7410                    	je .L_lambda_simple_env_end_0423
 23783 0000E7C5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23784 0000E7C9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23785 0000E7CD 48FFC6                  	inc rsi
 23786 0000E7D0 48FFC2                  	inc rdx
 23787 0000E7D3 EBEA                    	jmp .L_lambda_simple_env_loop_0423
 23788                                  .L_lambda_simple_env_end_0423:
 23789 0000E7D5 5B                      	pop rbx
 23790 0000E7D6 BE00000000              	mov rsi, 0
 23791                                  .L_lambda_simple_params_loop_0423:	; copy params
 23792 0000E7DB 4883FE01                	cmp rsi, 1
 23793 0000E7DF 740E                    	je .L_lambda_simple_params_end_0423
 23794 0000E7E1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23795 0000E7E6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23796 0000E7EA 48FFC6                  	inc rsi
 23797 0000E7ED EBEC                    	jmp .L_lambda_simple_params_loop_0423
 23798                                  .L_lambda_simple_params_end_0423:
 23799 0000E7EF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23800 0000E7F2 4889C3                  	mov rbx, rax
 23801 0000E7F5 58                      	pop rax
 23802 0000E7F6 C60005                  	mov byte [rax], T_closure
 23803 0000E7F9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23804 0000E7FD 48C74009[0AE80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0423
 23805 0000E805 E99B0B0000              	jmp .L_lambda_simple_end_0423
 23806                                  .L_lambda_simple_code_0423:	; lambda-simple body
 23807 0000E80A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23808 0000E810 740B                    	je .L_lambda_simple_arity_check_ok_08f9
 23809 0000E812 FF742410                	push qword [rsp + 8 * 2]
 23810 0000E816 6A01                    	push 1
 23811 0000E818 E9E33F0000              	jmp L_error_incorrect_arity_simple
 23812                                  .L_lambda_simple_arity_check_ok_08f9:
 23813 0000E81D C8000000                	enter 0, 0
 23814 0000E821 488B4520                mov rax, qword [rbp + 32]
 23815 0000E825 BF08000000              mov rdi, 8
 23816 0000E82A 4889C3                  mov rbx, rax
 23817 0000E82D E815400000              call malloc
 23818 0000E832 488918                  mov qword [rax], rbx
 23819 0000E835 48894520                mov qword [rbp + 32], rax
 23820 0000E839 48B8-                   mov rax, sob_void
 23820 0000E83B [0000000000000000] 
 23821 0000E843 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23822 0000E848 E8FA3F0000              	call malloc
 23823 0000E84D 50                      	push rax
 23824 0000E84E BF08000000              	mov rdi, 8 * 1	; new rib
 23825 0000E853 E8EF3F0000              	call malloc
 23826 0000E858 50                      	push rax
 23827 0000E859 BF18000000              	mov rdi, 8 * 3	; extended env
 23828 0000E85E E8E43F0000              	call malloc
 23829 0000E863 488B7D10                	mov rdi, ENV
 23830 0000E867 BE00000000              	mov rsi, 0
 23831 0000E86C BA01000000              	mov rdx, 1
 23832                                  .L_lambda_simple_env_loop_0424:	; ext_env[i + 1] <-- env[i]
 23833 0000E871 4883FE02                	cmp rsi, 2
 23834 0000E875 7410                    	je .L_lambda_simple_env_end_0424
 23835 0000E877 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23836 0000E87B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23837 0000E87F 48FFC6                  	inc rsi
 23838 0000E882 48FFC2                  	inc rdx
 23839 0000E885 EBEA                    	jmp .L_lambda_simple_env_loop_0424
 23840                                  .L_lambda_simple_env_end_0424:
 23841 0000E887 5B                      	pop rbx
 23842 0000E888 BE00000000              	mov rsi, 0
 23843                                  .L_lambda_simple_params_loop_0424:	; copy params
 23844 0000E88D 4883FE01                	cmp rsi, 1
 23845 0000E891 740E                    	je .L_lambda_simple_params_end_0424
 23846 0000E893 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23847 0000E898 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23848 0000E89C 48FFC6                  	inc rsi
 23849 0000E89F EBEC                    	jmp .L_lambda_simple_params_loop_0424
 23850                                  .L_lambda_simple_params_end_0424:
 23851 0000E8A1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23852 0000E8A4 4889C3                  	mov rbx, rax
 23853 0000E8A7 58                      	pop rax
 23854 0000E8A8 C60005                  	mov byte [rax], T_closure
 23855 0000E8AB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23856 0000E8AF 48C74009[BCE80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0424
 23857 0000E8B7 E9CB010000              	jmp .L_lambda_simple_end_0424
 23858                                  .L_lambda_simple_code_0424:	; lambda-simple body
 23859 0000E8BC 48837C241004            	cmp qword [rsp + 8 * 2], 4
 23860 0000E8C2 740B                    	je .L_lambda_simple_arity_check_ok_08fa
 23861 0000E8C4 FF742410                	push qword [rsp + 8 * 2]
 23862 0000E8C8 6A04                    	push 4
 23863 0000E8CA E9313F0000              	jmp L_error_incorrect_arity_simple
 23864                                  .L_lambda_simple_arity_check_ok_08fa:
 23865 0000E8CF C8000000                	enter 0, 0
 23866 0000E8D3 488B4538                mov rax, qword [rbp + 56]
 23867 0000E8D7 50                      	push rax
 23868 0000E8D8 488B4520                mov rax, qword [rbp + 32]
 23869 0000E8DC 50                      	push rax
 23870 0000E8DD 6A02                    	push 2
 23871 0000E8DF 488B0425[50030000]      	mov rax, qword [free_var_106]
 23872 0000E8E7 803805                  	cmp byte [rax], T_closure 
 23873 0000E8EA 0F85124F0000                    jne L_code_ptr_error
 23874                                  
 23875 0000E8F0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23876                                  
 23877 0000E8F4 53                              push rbx
 23878                                  
 23879 0000E8F5 FF5009                          call SOB_CLOSURE_CODE(rax)
 23880                                  
 23881 0000E8F8 483D[02000000]                  	cmp rax, sob_boolean_false
 23882 0000E8FE 0F857F010000            	jne .L_or_end_0052
 23883 0000E904 488B4538                mov rax, qword [rbp + 56]
 23884 0000E908 50                      	push rax
 23885 0000E909 488B4520                mov rax, qword [rbp + 32]
 23886 0000E90D 50                      	push rax
 23887 0000E90E 6A02                    	push 2
 23888 0000E910 488B0425[30030000]      	mov rax, qword [free_var_102]
 23889 0000E918 803805                  	cmp byte [rax], T_closure 
 23890 0000E91B 0F85E14E0000                    jne L_code_ptr_error
 23891                                  
 23892 0000E921 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23893                                  
 23894 0000E925 53                              push rbx
 23895                                  
 23896 0000E926 FF5009                          call SOB_CLOSURE_CODE(rax)
 23897                                  
 23898 0000E929 483D[02000000]                  	cmp rax, sob_boolean_false
 23899 0000E92F 0F8444010000            	je .L_if_else_0278
 23900 0000E935 488B4520                mov rax, qword [rbp + 32]
 23901 0000E939 50                      	push rax
 23902 0000E93A 488B4530                mov rax, qword [rbp + 48]
 23903 0000E93E 50                      	push rax
 23904 0000E93F 6A02                    	push 2
 23905 0000E941 488B0425[78010000]      	mov rax, qword [free_var_47]
 23906 0000E949 803805                  	cmp byte [rax], T_closure 
 23907 0000E94C 0F85B04E0000                    jne L_code_ptr_error
 23908                                  
 23909 0000E952 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23910                                  
 23911 0000E956 53                              push rbx
 23912                                  
 23913 0000E957 FF5009                          call SOB_CLOSURE_CODE(rax)
 23914                                  
 23915 0000E95A 50                              	push rax
 23916 0000E95B 488B4520                mov rax, qword [rbp + 32]
 23917 0000E95F 50                      	push rax
 23918 0000E960 488B4528                mov rax, qword [rbp + 40]
 23919 0000E964 50                      	push rax
 23920 0000E965 6A02                    	push 2
 23921 0000E967 488B0425[78010000]      	mov rax, qword [free_var_47]
 23922 0000E96F 803805                  	cmp byte [rax], T_closure 
 23923 0000E972 0F858A4E0000                    jne L_code_ptr_error
 23924                                  
 23925 0000E978 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23926                                  
 23927 0000E97C 53                              push rbx
 23928                                  
 23929 0000E97D FF5009                          call SOB_CLOSURE_CODE(rax)
 23930                                  
 23931 0000E980 50                              	push rax
 23932 0000E981 6A02                    	push 2
 23933 0000E983 488B4510                mov rax, qword [rbp + 16]
 23934 0000E987 488B4008                mov rax, qword [rax + 8]
 23935 0000E98B 488B00                  mov rax, qword [rax + 0]
 23936 0000E98E 803805                  	cmp byte [rax], T_closure 
 23937 0000E991 0F856B4E0000                    jne L_code_ptr_error
 23938                                  
 23939 0000E997 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23940                                  
 23941 0000E99B 53                              push rbx
 23942                                  
 23943 0000E99C FF5009                          call SOB_CLOSURE_CODE(rax)
 23944                                  
 23945 0000E99F 483D[02000000]                  	cmp rax, sob_boolean_false
 23946 0000E9A5 0F84C2000000            	je .L_if_else_0279
 23947 0000E9AB 488B4538                mov rax, qword [rbp + 56]
 23948 0000E9AF 50                      	push rax
 23949 0000E9B0 488B4530                mov rax, qword [rbp + 48]
 23950 0000E9B4 50                      	push rax
 23951 0000E9B5 488B4528                mov rax, qword [rbp + 40]
 23952 0000E9B9 50                      	push rax
 23953 0000E9BA 48B8-                   	mov rax, qword (L_constants + 127)
 23953 0000E9BC [7F00000000000000] 
 23954 0000E9C4 50                      	push rax
 23955 0000E9C5 488B4520                mov rax, qword [rbp + 32]
 23956 0000E9C9 50                      	push rax
 23957 0000E9CA 6A02                    	push 2
 23958 0000E9CC 488B0425[08030000]      	mov rax, qword [free_var_97]
 23959 0000E9D4 803805                  	cmp byte [rax], T_closure 
 23960 0000E9D7 0F85254E0000                    jne L_code_ptr_error
 23961                                  
 23962 0000E9DD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23963                                  
 23964 0000E9E1 53                              push rbx
 23965                                  
 23966 0000E9E2 FF5009                          call SOB_CLOSURE_CODE(rax)
 23967                                  
 23968 0000E9E5 50                              	push rax
 23969 0000E9E6 6A04                    	push 4
 23970 0000E9E8 488B4510                mov rax, qword [rbp + 16]
 23971 0000E9EC 488B00                  mov rax, qword [rax + 0]
 23972 0000E9EF 488B00                  mov rax, qword [rax + 0]
 23973 0000E9F2 488B00                  	mov rax, qword [rax]
 23974                                  .L_lambda_simple_arity_check_ok_08fb:
 23975 0000E9F5 803805                  	cmp byte [rax], T_closure
 23976                                  
 23977 0000E9F8 0F85044E0000                    jne L_code_ptr_error                      ; rax <- proc
 23978                                  
 23979                                  
 23980 0000E9FE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23981                                  
 23982 0000EA02 53                              push rbx                                  ; env pushed
 23983                                  
 23984 0000EA03 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23985                                  
 23986                                          ; sagydebug
 23987                                  
 23988 0000EA06 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23989                                  
 23990                                          
 23991                                          
 23992 0000EA09 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23993                                  
 23994 0000EA0D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23995                                  
 23996                                  
 23997 0000EA12 4D89CA                          mov r10, r9
 23998 0000EA15 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 23999                                          
 24000 0000EA19 4D89D7                          mov r15, r10
 24001 0000EA1C 4983C7FF                        add r15, -1
 24002                                                                                         
 24003 0000EA20 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24004 0000EA23 4983C404                        add r12, 4
 24005 0000EA27 4983C4FF                        add r12, -1
 24006                                  
 24007 0000EA2B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24008                                  .L_tc_recycle_frame_loop_04d7:
 24009 0000EA31 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 24010                                  
 24011 0000EA35 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24012                                  
 24013                                  
 24014                                  
 24015 0000EA3A 41BE00000000                    mov r14, 0                                ; clean box
 24016                                  
 24017                                  
 24018 0000EA40 4983C7FF                        add r15, -1           
 24019 0000EA44 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24020                                  
 24021 0000EA48 4983C4FF                        add r12, -1 
 24022                                  
 24023 0000EA4C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24024 0000EA50 75DF                    	jne .L_tc_recycle_frame_loop_04d7
 24025                                  .L_tc_recycle_frame_done_04d7:
 24026                                  ;this pop rbp in sot to the right place
 24027 0000EA52 4D89C7                  mov r15, r8
 24028                                  
 24029 0000EA55 4983C704                        add r15, 4
 24030                                  
 24031 0000EA59 49C1E703                        shl r15, 3
 24032                                  
 24033 0000EA5D 4C01FC                          add rsp, r15
 24034 0000EA60 5D                      	pop rbp                                  ; restore the old rbp
 24035                                  
 24036 0000EA61 488B4D00                        mov rcx, qword [rbp]
 24037 0000EA65 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24038                                            ; rbx <- code(proc)
 24039                                  
 24040 0000EA69 FFE3                            jmp rbx
 24041 0000EA6B EB0A                    	jmp .L_if_end_0279
 24042                                  	.L_if_else_0279:
 24043 0000EA6D 48B8-                   		mov rax, qword (L_constants + 2)
 24043 0000EA6F [0200000000000000] 
 24044                                  	.L_if_end_0279:
 24045 0000EA77 EB0A                    	jmp .L_if_end_0278
 24046                                  	.L_if_else_0278:
 24047 0000EA79 48B8-                   		mov rax, qword (L_constants + 2)
 24047 0000EA7B [0200000000000000] 
 24048                                  	.L_if_end_0278:
 24049                                  .L_or_end_0052:
 24050 0000EA83 C9                      	leave
 24051 0000EA84 C23000                  	ret 8 * (2 + 4)
 24052                                  .L_lambda_simple_end_0424:	; new closure is in rax
 24053 0000EA87 50                      push rax
 24054 0000EA88 488B4520                mov rax, qword [rbp + 32]
 24055 0000EA8C 8F00                    pop qword [rax]
 24056 0000EA8E 48B8-                   mov rax, sob_void
 24056 0000EA90 [0000000000000000] 
 24057                                  
 24058 0000EA98 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24059 0000EA9D E8A53D0000              	call malloc
 24060 0000EAA2 50                      	push rax
 24061 0000EAA3 BF08000000              	mov rdi, 8 * 1	; new rib
 24062 0000EAA8 E89A3D0000              	call malloc
 24063 0000EAAD 50                      	push rax
 24064 0000EAAE BF18000000              	mov rdi, 8 * 3	; extended env
 24065 0000EAB3 E88F3D0000              	call malloc
 24066 0000EAB8 488B7D10                	mov rdi, ENV
 24067 0000EABC BE00000000              	mov rsi, 0
 24068 0000EAC1 BA01000000              	mov rdx, 1
 24069                                  .L_lambda_simple_env_loop_0425:	; ext_env[i + 1] <-- env[i]
 24070 0000EAC6 4883FE02                	cmp rsi, 2
 24071 0000EACA 7410                    	je .L_lambda_simple_env_end_0425
 24072 0000EACC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24073 0000EAD0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24074 0000EAD4 48FFC6                  	inc rsi
 24075 0000EAD7 48FFC2                  	inc rdx
 24076 0000EADA EBEA                    	jmp .L_lambda_simple_env_loop_0425
 24077                                  .L_lambda_simple_env_end_0425:
 24078 0000EADC 5B                      	pop rbx
 24079 0000EADD BE00000000              	mov rsi, 0
 24080                                  .L_lambda_simple_params_loop_0425:	; copy params
 24081 0000EAE2 4883FE01                	cmp rsi, 1
 24082 0000EAE6 740E                    	je .L_lambda_simple_params_end_0425
 24083 0000EAE8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24084 0000EAED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24085 0000EAF1 48FFC6                  	inc rsi
 24086 0000EAF4 EBEC                    	jmp .L_lambda_simple_params_loop_0425
 24087                                  .L_lambda_simple_params_end_0425:
 24088 0000EAF6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24089 0000EAF9 4889C3                  	mov rbx, rax
 24090 0000EAFC 58                      	pop rax
 24091 0000EAFD C60005                  	mov byte [rax], T_closure
 24092 0000EB00 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24093 0000EB04 48C74009[11EB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0425
 24094 0000EB0C E953020000              	jmp .L_lambda_simple_end_0425
 24095                                  .L_lambda_simple_code_0425:	; lambda-simple body
 24096 0000EB11 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24097 0000EB17 740B                    	je .L_lambda_simple_arity_check_ok_08fc
 24098 0000EB19 FF742410                	push qword [rsp + 8 * 2]
 24099 0000EB1D 6A02                    	push 2
 24100 0000EB1F E9DC3C0000              	jmp L_error_incorrect_arity_simple
 24101                                  .L_lambda_simple_arity_check_ok_08fc:
 24102 0000EB24 C8000000                	enter 0, 0
 24103 0000EB28 488B4528                mov rax, qword [rbp + 40]
 24104 0000EB2C 50                      	push rax
 24105 0000EB2D 6A01                    	push 1
 24106 0000EB2F 488B0425[90000000]      	mov rax, qword [free_var_18]
 24107 0000EB37 803805                  	cmp byte [rax], T_closure 
 24108 0000EB3A 0F85C24C0000                    jne L_code_ptr_error
 24109                                  
 24110 0000EB40 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24111                                  
 24112 0000EB44 53                              push rbx
 24113                                  
 24114 0000EB45 FF5009                          call SOB_CLOSURE_CODE(rax)
 24115                                  
 24116 0000EB48 50                              	push rax
 24117 0000EB49 488B4520                mov rax, qword [rbp + 32]
 24118 0000EB4D 50                      	push rax
 24119 0000EB4E 6A01                    	push 1
 24120 0000EB50 488B0425[90000000]      	mov rax, qword [free_var_18]
 24121 0000EB58 803805                  	cmp byte [rax], T_closure 
 24122 0000EB5B 0F85A14C0000                    jne L_code_ptr_error
 24123                                  
 24124 0000EB61 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24125                                  
 24126 0000EB65 53                              push rbx
 24127                                  
 24128 0000EB66 FF5009                          call SOB_CLOSURE_CODE(rax)
 24129                                  
 24130 0000EB69 50                              	push rax
 24131 0000EB6A 6A02                    	push 2
 24132 0000EB6C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24133 0000EB71 E8D13C0000              	call malloc
 24134 0000EB76 50                      	push rax
 24135 0000EB77 BF10000000              	mov rdi, 8 * 2	; new rib
 24136 0000EB7C E8C63C0000              	call malloc
 24137 0000EB81 50                      	push rax
 24138 0000EB82 BF20000000              	mov rdi, 8 * 4	; extended env
 24139 0000EB87 E8BB3C0000              	call malloc
 24140 0000EB8C 488B7D10                	mov rdi, ENV
 24141 0000EB90 BE00000000              	mov rsi, 0
 24142 0000EB95 BA01000000              	mov rdx, 1
 24143                                  .L_lambda_simple_env_loop_0426:	; ext_env[i + 1] <-- env[i]
 24144 0000EB9A 4883FE03                	cmp rsi, 3
 24145 0000EB9E 7410                    	je .L_lambda_simple_env_end_0426
 24146 0000EBA0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24147 0000EBA4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24148 0000EBA8 48FFC6                  	inc rsi
 24149 0000EBAB 48FFC2                  	inc rdx
 24150 0000EBAE EBEA                    	jmp .L_lambda_simple_env_loop_0426
 24151                                  .L_lambda_simple_env_end_0426:
 24152 0000EBB0 5B                      	pop rbx
 24153 0000EBB1 BE00000000              	mov rsi, 0
 24154                                  .L_lambda_simple_params_loop_0426:	; copy params
 24155 0000EBB6 4883FE02                	cmp rsi, 2
 24156 0000EBBA 740E                    	je .L_lambda_simple_params_end_0426
 24157 0000EBBC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24158 0000EBC1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24159 0000EBC5 48FFC6                  	inc rsi
 24160 0000EBC8 EBEC                    	jmp .L_lambda_simple_params_loop_0426
 24161                                  .L_lambda_simple_params_end_0426:
 24162 0000EBCA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24163 0000EBCD 4889C3                  	mov rbx, rax
 24164 0000EBD0 58                      	pop rax
 24165 0000EBD1 C60005                  	mov byte [rax], T_closure
 24166 0000EBD4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24167 0000EBD8 48C74009[E5EB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0426
 24168 0000EBE0 E905010000              	jmp .L_lambda_simple_end_0426
 24169                                  .L_lambda_simple_code_0426:	; lambda-simple body
 24170 0000EBE5 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24171 0000EBEB 740B                    	je .L_lambda_simple_arity_check_ok_08fd
 24172 0000EBED FF742410                	push qword [rsp + 8 * 2]
 24173 0000EBF1 6A02                    	push 2
 24174 0000EBF3 E9083C0000              	jmp L_error_incorrect_arity_simple
 24175                                  .L_lambda_simple_arity_check_ok_08fd:
 24176 0000EBF8 C8000000                	enter 0, 0
 24177 0000EBFC 488B4528                mov rax, qword [rbp + 40]
 24178 0000EC00 50                      	push rax
 24179 0000EC01 488B4520                mov rax, qword [rbp + 32]
 24180 0000EC05 50                      	push rax
 24181 0000EC06 6A02                    	push 2
 24182 0000EC08 488B0425[50030000]      	mov rax, qword [free_var_106]
 24183 0000EC10 803805                  	cmp byte [rax], T_closure 
 24184 0000EC13 0F85E94B0000                    jne L_code_ptr_error
 24185                                  
 24186 0000EC19 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24187                                  
 24188 0000EC1D 53                              push rbx
 24189                                  
 24190 0000EC1E FF5009                          call SOB_CLOSURE_CODE(rax)
 24191                                  
 24192 0000EC21 483D[02000000]                  	cmp rax, sob_boolean_false
 24193 0000EC27 0F84AF000000            	je .L_if_else_027a
 24194 0000EC2D 488B4520                mov rax, qword [rbp + 32]
 24195 0000EC31 50                      	push rax
 24196 0000EC32 488B4510                mov rax, qword [rbp + 16]
 24197 0000EC36 488B00                  mov rax, qword [rax + 0]
 24198 0000EC39 488B4008                mov rax, qword [rax + 8]
 24199 0000EC3D 50                      	push rax
 24200 0000EC3E 488B4510                mov rax, qword [rbp + 16]
 24201 0000EC42 488B00                  mov rax, qword [rax + 0]
 24202 0000EC45 488B00                  mov rax, qword [rax + 0]
 24203 0000EC48 50                      	push rax
 24204 0000EC49 48B8-                   	mov rax, qword (L_constants + 31)
 24204 0000EC4B [1F00000000000000] 
 24205 0000EC53 50                      	push rax
 24206 0000EC54 6A04                    	push 4
 24207 0000EC56 488B4510                mov rax, qword [rbp + 16]
 24208 0000EC5A 488B4008                mov rax, qword [rax + 8]
 24209 0000EC5E 488B00                  mov rax, qword [rax + 0]
 24210 0000EC61 488B00                  	mov rax, qword [rax]
 24211                                  .L_lambda_simple_arity_check_ok_08fe:
 24212 0000EC64 803805                  	cmp byte [rax], T_closure
 24213                                  
 24214 0000EC67 0F85954B0000                    jne L_code_ptr_error                      ; rax <- proc
 24215                                  
 24216                                  
 24217 0000EC6D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24218                                  
 24219 0000EC71 53                              push rbx                                  ; env pushed
 24220                                  
 24221 0000EC72 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24222                                  
 24223                                          ; sagydebug
 24224                                  
 24225 0000EC75 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24226                                  
 24227                                          
 24228                                          
 24229 0000EC78 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24230                                  
 24231 0000EC7C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24232                                  
 24233                                  
 24234 0000EC81 4D89CA                          mov r10, r9
 24235 0000EC84 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 24236                                          
 24237 0000EC88 4D89D7                          mov r15, r10
 24238 0000EC8B 4983C7FF                        add r15, -1
 24239                                                                                         
 24240 0000EC8F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24241 0000EC92 4983C404                        add r12, 4
 24242 0000EC96 4983C4FF                        add r12, -1
 24243                                  
 24244 0000EC9A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24245                                  .L_tc_recycle_frame_loop_04d8:
 24246 0000ECA0 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 24247                                  
 24248 0000ECA4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24249                                  
 24250                                  
 24251                                  
 24252 0000ECA9 41BE00000000                    mov r14, 0                                ; clean box
 24253                                  
 24254                                  
 24255 0000ECAF 4983C7FF                        add r15, -1           
 24256 0000ECB3 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24257                                  
 24258 0000ECB7 4983C4FF                        add r12, -1 
 24259                                  
 24260 0000ECBB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24261 0000ECBF 75DF                    	jne .L_tc_recycle_frame_loop_04d8
 24262                                  .L_tc_recycle_frame_done_04d8:
 24263                                  ;this pop rbp in sot to the right place
 24264 0000ECC1 4D89C7                  mov r15, r8
 24265                                  
 24266 0000ECC4 4983C704                        add r15, 4
 24267                                  
 24268 0000ECC8 49C1E703                        shl r15, 3
 24269                                  
 24270 0000ECCC 4C01FC                          add rsp, r15
 24271 0000ECCF 5D                      	pop rbp                                  ; restore the old rbp
 24272                                  
 24273 0000ECD0 488B4D00                        mov rcx, qword [rbp]
 24274 0000ECD4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24275                                            ; rbx <- code(proc)
 24276                                  
 24277 0000ECD8 FFE3                            jmp rbx
 24278 0000ECDA EB0A                    	jmp .L_if_end_027a
 24279                                  	.L_if_else_027a:
 24280 0000ECDC 48B8-                   		mov rax, qword (L_constants + 2)
 24280 0000ECDE [0200000000000000] 
 24281                                  	.L_if_end_027a:
 24282 0000ECE6 C9                      	leave
 24283 0000ECE7 C22000                  	ret 8 * (2 + 2)
 24284                                  .L_lambda_simple_end_0426:	; new closure is in rax
 24285                                  .L_lambda_simple_arity_check_ok_08ff:
 24286 0000ECEA 803805                  	cmp byte [rax], T_closure
 24287                                  
 24288 0000ECED 0F850F4B0000                    jne L_code_ptr_error                      ; rax <- proc
 24289                                  
 24290                                  
 24291 0000ECF3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24292                                  
 24293 0000ECF7 53                              push rbx                                  ; env pushed
 24294                                  
 24295 0000ECF8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24296                                  
 24297                                          ; sagydebug
 24298                                  
 24299 0000ECFB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24300                                  
 24301                                          
 24302                                          
 24303 0000ECFE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24304                                  
 24305 0000ED02 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24306                                  
 24307                                  
 24308 0000ED07 4D89CA                          mov r10, r9
 24309 0000ED0A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 24310                                          
 24311 0000ED0E 4D89D7                          mov r15, r10
 24312 0000ED11 4983C7FF                        add r15, -1
 24313                                                                                         
 24314 0000ED15 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24315 0000ED18 4983C404                        add r12, 4
 24316 0000ED1C 4983C4FF                        add r12, -1
 24317                                  
 24318 0000ED20 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24319                                  .L_tc_recycle_frame_loop_04d9:
 24320 0000ED26 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 24321                                  
 24322 0000ED2A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24323                                  
 24324                                  
 24325                                  
 24326 0000ED2F 41BE00000000                    mov r14, 0                                ; clean box
 24327                                  
 24328                                  
 24329 0000ED35 4983C7FF                        add r15, -1           
 24330 0000ED39 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24331                                  
 24332 0000ED3D 4983C4FF                        add r12, -1 
 24333                                  
 24334 0000ED41 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24335 0000ED45 75DF                    	jne .L_tc_recycle_frame_loop_04d9
 24336                                  .L_tc_recycle_frame_done_04d9:
 24337                                  ;this pop rbp in sot to the right place
 24338 0000ED47 4D89C7                  mov r15, r8
 24339                                  
 24340 0000ED4A 4983C704                        add r15, 4
 24341                                  
 24342 0000ED4E 49C1E703                        shl r15, 3
 24343                                  
 24344 0000ED52 4C01FC                          add rsp, r15
 24345 0000ED55 5D                      	pop rbp                                  ; restore the old rbp
 24346                                  
 24347 0000ED56 488B4D00                        mov rcx, qword [rbp]
 24348 0000ED5A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24349                                            ; rbx <- code(proc)
 24350                                  
 24351 0000ED5E FFE3                            jmp rbx
 24352 0000ED60 C9                      	leave
 24353 0000ED61 C22000                  	ret 8 * (2 + 2)
 24354                                  .L_lambda_simple_end_0425:	; new closure is in rax
 24355 0000ED64 50                      	push rax
 24356 0000ED65 6A01                    	push 1
 24357 0000ED67 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24358 0000ED6C E8D63A0000              	call malloc
 24359 0000ED71 50                      	push rax
 24360 0000ED72 BF08000000              	mov rdi, 8 * 1	; new rib
 24361 0000ED77 E8CB3A0000              	call malloc
 24362 0000ED7C 50                      	push rax
 24363 0000ED7D BF18000000              	mov rdi, 8 * 3	; extended env
 24364 0000ED82 E8C03A0000              	call malloc
 24365 0000ED87 488B7D10                	mov rdi, ENV
 24366 0000ED8B BE00000000              	mov rsi, 0
 24367 0000ED90 BA01000000              	mov rdx, 1
 24368                                  .L_lambda_simple_env_loop_0427:	; ext_env[i + 1] <-- env[i]
 24369 0000ED95 4883FE02                	cmp rsi, 2
 24370 0000ED99 7410                    	je .L_lambda_simple_env_end_0427
 24371 0000ED9B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24372 0000ED9F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24373 0000EDA3 48FFC6                  	inc rsi
 24374 0000EDA6 48FFC2                  	inc rdx
 24375 0000EDA9 EBEA                    	jmp .L_lambda_simple_env_loop_0427
 24376                                  .L_lambda_simple_env_end_0427:
 24377 0000EDAB 5B                      	pop rbx
 24378 0000EDAC BE00000000              	mov rsi, 0
 24379                                  .L_lambda_simple_params_loop_0427:	; copy params
 24380 0000EDB1 4883FE01                	cmp rsi, 1
 24381 0000EDB5 740E                    	je .L_lambda_simple_params_end_0427
 24382 0000EDB7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24383 0000EDBC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24384 0000EDC0 48FFC6                  	inc rsi
 24385 0000EDC3 EBEC                    	jmp .L_lambda_simple_params_loop_0427
 24386                                  .L_lambda_simple_params_end_0427:
 24387 0000EDC5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24388 0000EDC8 4889C3                  	mov rbx, rax
 24389 0000EDCB 58                      	pop rax
 24390 0000EDCC C60005                  	mov byte [rax], T_closure
 24391 0000EDCF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24392 0000EDD3 48C74009[E0ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0427
 24393 0000EDDB E94B050000              	jmp .L_lambda_simple_end_0427
 24394                                  .L_lambda_simple_code_0427:	; lambda-simple body
 24395 0000EDE0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24396 0000EDE6 740B                    	je .L_lambda_simple_arity_check_ok_0900
 24397 0000EDE8 FF742410                	push qword [rsp + 8 * 2]
 24398 0000EDEC 6A01                    	push 1
 24399 0000EDEE E90D3A0000              	jmp L_error_incorrect_arity_simple
 24400                                  .L_lambda_simple_arity_check_ok_0900:
 24401 0000EDF3 C8000000                	enter 0, 0
 24402 0000EDF7 48B8-                   	mov rax, qword (L_constants + 22)
 24402 0000EDF9 [1600000000000000] 
 24403 0000EE01 50                      	push rax
 24404 0000EE02 6A01                    	push 1
 24405 0000EE04 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24406 0000EE09 E8393A0000              	call malloc
 24407 0000EE0E 50                      	push rax
 24408 0000EE0F BF08000000              	mov rdi, 8 * 1	; new rib
 24409 0000EE14 E82E3A0000              	call malloc
 24410 0000EE19 50                      	push rax
 24411 0000EE1A BF20000000              	mov rdi, 8 * 4	; extended env
 24412 0000EE1F E8233A0000              	call malloc
 24413 0000EE24 488B7D10                	mov rdi, ENV
 24414 0000EE28 BE00000000              	mov rsi, 0
 24415 0000EE2D BA01000000              	mov rdx, 1
 24416                                  .L_lambda_simple_env_loop_0428:	; ext_env[i + 1] <-- env[i]
 24417 0000EE32 4883FE03                	cmp rsi, 3
 24418 0000EE36 7410                    	je .L_lambda_simple_env_end_0428
 24419 0000EE38 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24420 0000EE3C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24421 0000EE40 48FFC6                  	inc rsi
 24422 0000EE43 48FFC2                  	inc rdx
 24423 0000EE46 EBEA                    	jmp .L_lambda_simple_env_loop_0428
 24424                                  .L_lambda_simple_env_end_0428:
 24425 0000EE48 5B                      	pop rbx
 24426 0000EE49 BE00000000              	mov rsi, 0
 24427                                  .L_lambda_simple_params_loop_0428:	; copy params
 24428 0000EE4E 4883FE01                	cmp rsi, 1
 24429 0000EE52 740E                    	je .L_lambda_simple_params_end_0428
 24430 0000EE54 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24431 0000EE59 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24432 0000EE5D 48FFC6                  	inc rsi
 24433 0000EE60 EBEC                    	jmp .L_lambda_simple_params_loop_0428
 24434                                  .L_lambda_simple_params_end_0428:
 24435 0000EE62 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24436 0000EE65 4889C3                  	mov rbx, rax
 24437 0000EE68 58                      	pop rax
 24438 0000EE69 C60005                  	mov byte [rax], T_closure
 24439 0000EE6C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24440 0000EE70 48C74009[7DEE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0428
 24441 0000EE78 E934040000              	jmp .L_lambda_simple_end_0428
 24442                                  .L_lambda_simple_code_0428:	; lambda-simple body
 24443 0000EE7D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24444 0000EE83 740B                    	je .L_lambda_simple_arity_check_ok_0901
 24445 0000EE85 FF742410                	push qword [rsp + 8 * 2]
 24446 0000EE89 6A01                    	push 1
 24447 0000EE8B E970390000              	jmp L_error_incorrect_arity_simple
 24448                                  .L_lambda_simple_arity_check_ok_0901:
 24449 0000EE90 C8000000                	enter 0, 0
 24450 0000EE94 488B4520                mov rax, qword [rbp + 32]
 24451 0000EE98 BF08000000              mov rdi, 8
 24452 0000EE9D 4889C3                  mov rbx, rax
 24453 0000EEA0 E8A2390000              call malloc
 24454 0000EEA5 488918                  mov qword [rax], rbx
 24455 0000EEA8 48894520                mov qword [rbp + 32], rax
 24456 0000EEAC 48B8-                   mov rax, sob_void
 24456 0000EEAE [0000000000000000] 
 24457 0000EEB6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24458 0000EEBB E887390000              	call malloc
 24459 0000EEC0 50                      	push rax
 24460 0000EEC1 BF08000000              	mov rdi, 8 * 1	; new rib
 24461 0000EEC6 E87C390000              	call malloc
 24462 0000EECB 50                      	push rax
 24463 0000EECC BF28000000              	mov rdi, 8 * 5	; extended env
 24464 0000EED1 E871390000              	call malloc
 24465 0000EED6 488B7D10                	mov rdi, ENV
 24466 0000EEDA BE00000000              	mov rsi, 0
 24467 0000EEDF BA01000000              	mov rdx, 1
 24468                                  .L_lambda_simple_env_loop_0429:	; ext_env[i + 1] <-- env[i]
 24469 0000EEE4 4883FE04                	cmp rsi, 4
 24470 0000EEE8 7410                    	je .L_lambda_simple_env_end_0429
 24471 0000EEEA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24472 0000EEEE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24473 0000EEF2 48FFC6                  	inc rsi
 24474 0000EEF5 48FFC2                  	inc rdx
 24475 0000EEF8 EBEA                    	jmp .L_lambda_simple_env_loop_0429
 24476                                  .L_lambda_simple_env_end_0429:
 24477 0000EEFA 5B                      	pop rbx
 24478 0000EEFB BE00000000              	mov rsi, 0
 24479                                  .L_lambda_simple_params_loop_0429:	; copy params
 24480 0000EF00 4883FE01                	cmp rsi, 1
 24481 0000EF04 740E                    	je .L_lambda_simple_params_end_0429
 24482 0000EF06 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24483 0000EF0B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24484 0000EF0F 48FFC6                  	inc rsi
 24485 0000EF12 EBEC                    	jmp .L_lambda_simple_params_loop_0429
 24486                                  .L_lambda_simple_params_end_0429:
 24487 0000EF14 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24488 0000EF17 4889C3                  	mov rbx, rax
 24489 0000EF1A 58                      	pop rax
 24490 0000EF1B C60005                  	mov byte [rax], T_closure
 24491 0000EF1E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24492 0000EF22 48C74009[2FEF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0429
 24493 0000EF2A E96A010000              	jmp .L_lambda_simple_end_0429
 24494                                  .L_lambda_simple_code_0429:	; lambda-simple body
 24495 0000EF2F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24496 0000EF35 740B                    	je .L_lambda_simple_arity_check_ok_0902
 24497 0000EF37 FF742410                	push qword [rsp + 8 * 2]
 24498 0000EF3B 6A02                    	push 2
 24499 0000EF3D E9BE380000              	jmp L_error_incorrect_arity_simple
 24500                                  .L_lambda_simple_arity_check_ok_0902:
 24501 0000EF42 C8000000                	enter 0, 0
 24502 0000EF46 488B4528                mov rax, qword [rbp + 40]
 24503 0000EF4A 50                      	push rax
 24504 0000EF4B 6A01                    	push 1
 24505 0000EF4D 488B0425[00000000]      	mov rax, qword [free_var_0]
 24506 0000EF55 803805                  	cmp byte [rax], T_closure 
 24507 0000EF58 0F85A4480000                    jne L_code_ptr_error
 24508                                  
 24509 0000EF5E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24510                                  
 24511 0000EF62 53                              push rbx
 24512                                  
 24513 0000EF63 FF5009                          call SOB_CLOSURE_CODE(rax)
 24514                                  
 24515 0000EF66 483D[02000000]                  	cmp rax, sob_boolean_false
 24516 0000EF6C 0F8523010000            	jne .L_or_end_0053
 24517 0000EF72 488B4528                mov rax, qword [rbp + 40]
 24518 0000EF76 50                      	push rax
 24519 0000EF77 6A01                    	push 1
 24520 0000EF79 488B0425[80000000]      	mov rax, qword [free_var_16]
 24521 0000EF81 803805                  	cmp byte [rax], T_closure 
 24522 0000EF84 0F8578480000                    jne L_code_ptr_error
 24523                                  
 24524 0000EF8A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24525                                  
 24526 0000EF8E 53                              push rbx
 24527                                  
 24528 0000EF8F FF5009                          call SOB_CLOSURE_CODE(rax)
 24529                                  
 24530 0000EF92 50                              	push rax
 24531 0000EF93 488B4520                mov rax, qword [rbp + 32]
 24532 0000EF97 50                      	push rax
 24533 0000EF98 6A02                    	push 2
 24534 0000EF9A 488B4510                mov rax, qword [rbp + 16]
 24535 0000EF9E 488B4008                mov rax, qword [rax + 8]
 24536 0000EFA2 488B00                  mov rax, qword [rax + 0]
 24537 0000EFA5 803805                  	cmp byte [rax], T_closure 
 24538 0000EFA8 0F8554480000                    jne L_code_ptr_error
 24539                                  
 24540 0000EFAE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24541                                  
 24542 0000EFB2 53                              push rbx
 24543                                  
 24544 0000EFB3 FF5009                          call SOB_CLOSURE_CODE(rax)
 24545                                  
 24546 0000EFB6 483D[02000000]                  	cmp rax, sob_boolean_false
 24547 0000EFBC 0F84C9000000            	je .L_if_else_027b
 24548 0000EFC2 488B4528                mov rax, qword [rbp + 40]
 24549 0000EFC6 50                      	push rax
 24550 0000EFC7 6A01                    	push 1
 24551 0000EFC9 488B0425[88000000]      	mov rax, qword [free_var_17]
 24552 0000EFD1 803805                  	cmp byte [rax], T_closure 
 24553 0000EFD4 0F8528480000                    jne L_code_ptr_error
 24554                                  
 24555 0000EFDA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24556                                  
 24557 0000EFDE 53                              push rbx
 24558                                  
 24559 0000EFDF FF5009                          call SOB_CLOSURE_CODE(rax)
 24560                                  
 24561 0000EFE2 50                              	push rax
 24562 0000EFE3 488B4528                mov rax, qword [rbp + 40]
 24563 0000EFE7 50                      	push rax
 24564 0000EFE8 6A01                    	push 1
 24565 0000EFEA 488B0425[80000000]      	mov rax, qword [free_var_16]
 24566 0000EFF2 803805                  	cmp byte [rax], T_closure 
 24567 0000EFF5 0F8507480000                    jne L_code_ptr_error
 24568                                  
 24569 0000EFFB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24570                                  
 24571 0000EFFF 53                              push rbx
 24572                                  
 24573 0000F000 FF5009                          call SOB_CLOSURE_CODE(rax)
 24574                                  
 24575 0000F003 50                              	push rax
 24576 0000F004 6A02                    	push 2
 24577 0000F006 488B4510                mov rax, qword [rbp + 16]
 24578 0000F00A 488B00                  mov rax, qword [rax + 0]
 24579 0000F00D 488B00                  mov rax, qword [rax + 0]
 24580 0000F010 488B00                  	mov rax, qword [rax]
 24581                                  .L_lambda_simple_arity_check_ok_0903:
 24582 0000F013 803805                  	cmp byte [rax], T_closure
 24583                                  
 24584 0000F016 0F85E6470000                    jne L_code_ptr_error                      ; rax <- proc
 24585                                  
 24586                                  
 24587 0000F01C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24588                                  
 24589 0000F020 53                              push rbx                                  ; env pushed
 24590                                  
 24591 0000F021 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24592                                  
 24593                                          ; sagydebug
 24594                                  
 24595 0000F024 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24596                                  
 24597                                          
 24598                                          
 24599 0000F027 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24600                                  
 24601 0000F02B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24602                                  
 24603                                  
 24604 0000F030 4D89CA                          mov r10, r9
 24605 0000F033 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 24606                                          
 24607 0000F037 4D89D7                          mov r15, r10
 24608 0000F03A 4983C7FF                        add r15, -1
 24609                                                                                         
 24610 0000F03E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24611 0000F041 4983C404                        add r12, 4
 24612 0000F045 4983C4FF                        add r12, -1
 24613                                  
 24614 0000F049 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24615                                  .L_tc_recycle_frame_loop_04da:
 24616 0000F04F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 24617                                  
 24618 0000F053 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24619                                  
 24620                                  
 24621                                  
 24622 0000F058 41BE00000000                    mov r14, 0                                ; clean box
 24623                                  
 24624                                  
 24625 0000F05E 4983C7FF                        add r15, -1           
 24626 0000F062 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24627                                  
 24628 0000F066 4983C4FF                        add r12, -1 
 24629                                  
 24630 0000F06A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24631 0000F06E 75DF                    	jne .L_tc_recycle_frame_loop_04da
 24632                                  .L_tc_recycle_frame_done_04da:
 24633                                  ;this pop rbp in sot to the right place
 24634 0000F070 4D89C7                  mov r15, r8
 24635                                  
 24636 0000F073 4983C704                        add r15, 4
 24637                                  
 24638 0000F077 49C1E703                        shl r15, 3
 24639                                  
 24640 0000F07B 4C01FC                          add rsp, r15
 24641 0000F07E 5D                      	pop rbp                                  ; restore the old rbp
 24642                                  
 24643 0000F07F 488B4D00                        mov rcx, qword [rbp]
 24644 0000F083 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24645                                            ; rbx <- code(proc)
 24646                                  
 24647 0000F087 FFE3                            jmp rbx
 24648 0000F089 EB0A                    	jmp .L_if_end_027b
 24649                                  	.L_if_else_027b:
 24650 0000F08B 48B8-                   		mov rax, qword (L_constants + 2)
 24650 0000F08D [0200000000000000] 
 24651                                  	.L_if_end_027b:
 24652                                  .L_or_end_0053:
 24653 0000F095 C9                      	leave
 24654 0000F096 C22000                  	ret 8 * (2 + 2)
 24655                                  .L_lambda_simple_end_0429:	; new closure is in rax
 24656 0000F099 50                      push rax
 24657 0000F09A 488B4520                mov rax, qword [rbp + 32]
 24658 0000F09E 8F00                    pop qword [rax]
 24659 0000F0A0 48B8-                   mov rax, sob_void
 24659 0000F0A2 [0000000000000000] 
 24660                                  
 24661 0000F0AA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24662 0000F0AF E893370000              	call malloc
 24663 0000F0B4 50                      	push rax
 24664 0000F0B5 BF08000000              	mov rdi, 8 * 1	; new rib
 24665 0000F0BA E888370000              	call malloc
 24666 0000F0BF 50                      	push rax
 24667 0000F0C0 BF28000000              	mov rdi, 8 * 5	; extended env
 24668 0000F0C5 E87D370000              	call malloc
 24669 0000F0CA 488B7D10                	mov rdi, ENV
 24670 0000F0CE BE00000000              	mov rsi, 0
 24671 0000F0D3 BA01000000              	mov rdx, 1
 24672                                  .L_lambda_opt_env_loop_009e:	; ext_env[i + 1] <-- env[i]
 24673 0000F0D8 4883FE04                	cmp rsi, 4
 24674 0000F0DC 7410                    	je .L_lambda_opt_env_end_009e
 24675 0000F0DE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24676 0000F0E2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24677 0000F0E6 48FFC6                  	inc rsi
 24678 0000F0E9 48FFC2                  	inc rdx
 24679 0000F0EC EBEA                    	jmp .L_lambda_opt_env_loop_009e
 24680                                  .L_lambda_opt_env_end_009e:
 24681 0000F0EE 5B                      	pop rbx
 24682 0000F0EF BE00000000              	mov rsi, 0
 24683                                  .L_lambda_opt_params_loop_01d8:	; copy params
 24684 0000F0F4 4883FE01                	cmp rsi, 1
 24685 0000F0F8 740E                    	je .L_lambda_opt_params_end_01d8
 24686 0000F0FA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24687 0000F0FF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24688 0000F103 48FFC6                  	inc rsi
 24689 0000F106 EBEC                    	jmp .L_lambda_opt_params_loop_01d8
 24690                                  .L_lambda_opt_params_end_01d8:
 24691 0000F108 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24692 0000F10B 4889C3                  	mov rbx, rax
 24693 0000F10E 58                      	pop rax
 24694 0000F10F C60005                  	mov byte [rax], T_closure
 24695 0000F112 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24696 0000F116 48C74009[23F10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_009e
 24697 0000F11E E98A010000              	jmp .L_lambda_opt_end_009e
 24698                                  .L_lambda_opt_code_009e:
 24699 0000F123 4C8B542410              mov r10, qword [rsp+8*2]
 24700 0000F128 4983FA01                cmp r10, 1
 24701 0000F12C 740B                    je .L_lambda_opt_arity_check_exact_009e
 24702 0000F12E 4983FA01                cmp r10, 1
 24703 0000F132 7F44                    jg .L_lambda_opt_arity_check_more_009e
 24704 0000F134 E9DB360000              jmp L_error_incorrect_arity_opt
 24705                                  .L_lambda_opt_arity_check_exact_009e:
 24706 0000F139 4883EC08                sub rsp, 8
 24707 0000F13D BA04000000              mov rdx, 3+1
 24708 0000F142 4889E3                  mov qword rbx, rsp
 24709                                  .L_lambda_opt_params_loop_01d9:
 24710 0000F145 488B4B08                mov qword rcx, [rbx+8]
 24711 0000F149 48890B                  mov qword [rbx], rcx
 24712 0000F14C 48FFCA                  dec rdx
 24713 0000F14F 4883C308                add rbx, 8
 24714 0000F153 4883FA00                cmp rdx, 0
 24715 0000F157 7402                    je .L_lambda_opt_params_end_01d9
 24716 0000F159 EBEA                    jmp .L_lambda_opt_params_loop_01d9
 24717                                  .L_lambda_opt_params_end_01d9:
 24718 0000F15B 49FFC2                  inc r10
 24719 0000F15E 4C89542410              mov qword [rsp+8*2], r10
 24720 0000F163 4983C202                add r10, 2
 24721 0000F167 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 24722 0000F16F 4C8B4D00                mov r9, [rbp]
 24723 0000F173 E996000000              jmp .L_lambda_opt_stack_adjusted_009e
 24724                                  .L_lambda_opt_arity_check_more_009e:
 24725 0000F178 4C8B6C2410              mov r13, [rsp+2*8]
 24726 0000F17D 48B8-                   mov rax, sob_nil
 24726 0000F17F [0100000000000000] 
 24727 0000F187 4C8B542410              mov r10, [rsp+2*8]
 24728 0000F18C 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 24729 0000F191 4983EA01                sub r10, 1
 24730                                  .L_lambda_opt_stack_shrink_loop_009e:
 24731 0000F195 4983FA00                cmp r10, 0
 24732 0000F199 7424                    je .L_lambda_opt_stack_shrink_loop_exit_009e
 24733 0000F19B 4889C1                  mov rcx, rax
 24734 0000F19E 498B10                  mov rdx, [r8]
 24735 0000F1A1 BF11000000              mov rdi, 17
 24736 0000F1A6 E89C360000              call malloc
 24737 0000F1AB C60021                  mov byte [rax], T_pair
 24738 0000F1AE 48894809                mov SOB_PAIR_CDR(rax), rcx
 24739 0000F1B2 48895001                mov SOB_PAIR_CAR(rax), rdx
 24740 0000F1B6 4983E808                sub r8, 8
 24741 0000F1BA 49FFCA                  dec r10
 24742 0000F1BD EBD6                    jmp .L_lambda_opt_stack_shrink_loop_009e
 24743                                  .L_lambda_opt_stack_shrink_loop_exit_009e:
 24744 0000F1BF 4889442420              mov [rsp+8*(2+2)], rax
 24745 0000F1C4 41BA02000000            mov r10, 2
 24746 0000F1CA 4C89542410              mov [rsp+16], r10
 24747 0000F1CF 4989E4                  mov r12, rsp
 24748 0000F1D2 4983C420                add r12, 8*(2+2)
 24749 0000F1D6 4C2B6C2410              sub r13, [rsp+16]
 24750 0000F1DB 4D89EA                  mov r10, r13
 24751 0000F1DE 49C1E203                shl r10, 3
 24752 0000F1E2 4D89D7                  mov r15, r10
 24753 0000F1E5 4D01E2                  add r10, r12
 24754 0000F1E8 4C8B4C2410              mov r9, [rsp+16]
 24755 0000F1ED 4983C103                add r9, 3
 24756                                  .L_lambda_opt_params_loop_01da:
 24757 0000F1F1 4983F900                cmp r9, 0
 24758 0000F1F5 7414                    je .L_lambda_opt_params_end_01da
 24759 0000F1F7 4D8B3424                mov r14, [r12]
 24760 0000F1FB 4D8932                  mov [r10], r14
 24761 0000F1FE 4983EC08                sub r12, 8
 24762 0000F202 4983EA08                sub r10, 8
 24763 0000F206 49FFC9                  dec r9
 24764 0000F209 EBE6                    jmp .L_lambda_opt_params_loop_01da
 24765                                  .L_lambda_opt_params_end_01da:
 24766 0000F20B 4C01FC                  add rsp, r15
 24767                                  .L_lambda_opt_stack_adjusted_009e:
 24768 0000F20E 4C8B4D00                mov r9, [rbp]
 24769 0000F212 C8000000                enter 0, 0
 24770 0000F216 488B4528                mov rax, qword [rbp + 40]
 24771 0000F21A 50                      	push rax
 24772 0000F21B 488B4520                mov rax, qword [rbp + 32]
 24773 0000F21F 50                      	push rax
 24774 0000F220 6A02                    	push 2
 24775 0000F222 488B4510                mov rax, qword [rbp + 16]
 24776 0000F226 488B00                  mov rax, qword [rax + 0]
 24777 0000F229 488B00                  mov rax, qword [rax + 0]
 24778 0000F22C 488B00                  	mov rax, qword [rax]
 24779                                  .L_lambda_simple_arity_check_ok_0904:
 24780 0000F22F 803805                  	cmp byte [rax], T_closure
 24781                                  
 24782 0000F232 0F85CA450000                    jne L_code_ptr_error                      ; rax <- proc
 24783                                  
 24784                                  
 24785 0000F238 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24786                                  
 24787 0000F23C 53                              push rbx                                  ; env pushed
 24788                                  
 24789 0000F23D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24790                                  
 24791                                          ; sagydebug
 24792                                  
 24793 0000F240 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24794                                  
 24795                                          
 24796                                          
 24797 0000F243 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24798                                  
 24799 0000F247 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24800                                  
 24801                                  
 24802 0000F24C 4D89CA                          mov r10, r9
 24803 0000F24F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 24804                                          
 24805 0000F253 4D89D7                          mov r15, r10
 24806 0000F256 4983C7FF                        add r15, -1
 24807                                                                                         
 24808 0000F25A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24809 0000F25D 4983C404                        add r12, 4
 24810 0000F261 4983C4FF                        add r12, -1
 24811                                  
 24812 0000F265 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24813                                  .L_tc_recycle_frame_loop_04db:
 24814 0000F26B 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 24815                                  
 24816 0000F26F 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24817                                  
 24818                                  
 24819                                  
 24820 0000F274 41BE00000000                    mov r14, 0                                ; clean box
 24821                                  
 24822                                  
 24823 0000F27A 4983C7FF                        add r15, -1           
 24824 0000F27E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24825                                  
 24826 0000F282 4983C4FF                        add r12, -1 
 24827                                  
 24828 0000F286 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24829 0000F28A 75DF                    	jne .L_tc_recycle_frame_loop_04db
 24830                                  .L_tc_recycle_frame_done_04db:
 24831                                  ;this pop rbp in sot to the right place
 24832 0000F28C 4D89C7                  mov r15, r8
 24833                                  
 24834 0000F28F 4983C704                        add r15, 4
 24835                                  
 24836 0000F293 49C1E703                        shl r15, 3
 24837                                  
 24838 0000F297 4C01FC                          add rsp, r15
 24839 0000F29A 5D                      	pop rbp                                  ; restore the old rbp
 24840                                  
 24841 0000F29B 488B4D00                        mov rcx, qword [rbp]
 24842 0000F29F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24843                                            ; rbx <- code(proc)
 24844                                  
 24845 0000F2A3 FFE3                            jmp rbx
 24846 0000F2A5 C9                      leave
 24847 0000F2A6 4C8B4D00                mov r9, [rbp]
 24848 0000F2AA C22000                  ret 8 * (3 + 1)
 24849                                  .L_lambda_opt_end_009e:	; new closure is in rax
 24850 0000F2AD C9                      	leave
 24851 0000F2AE C21800                  	ret 8 * (2 + 1)
 24852                                  .L_lambda_simple_end_0428:	; new closure is in rax
 24853                                  .L_lambda_simple_arity_check_ok_0905:
 24854 0000F2B1 803805                  	cmp byte [rax], T_closure
 24855                                  
 24856 0000F2B4 0F8548450000                    jne L_code_ptr_error                      ; rax <- proc
 24857                                  
 24858                                  
 24859 0000F2BA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24860                                  
 24861 0000F2BE 53                              push rbx                                  ; env pushed
 24862                                  
 24863 0000F2BF FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24864                                  
 24865                                          ; sagydebug
 24866                                  
 24867 0000F2C2 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24868                                  
 24869                                          
 24870                                          
 24871 0000F2C5 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24872                                  
 24873 0000F2C9 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24874                                  
 24875                                  
 24876 0000F2CE 4D89CA                          mov r10, r9
 24877 0000F2D1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 24878                                          
 24879 0000F2D5 4D89D7                          mov r15, r10
 24880 0000F2D8 4983C7FF                        add r15, -1
 24881                                                                                         
 24882 0000F2DC 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24883 0000F2DF 4983C404                        add r12, 4
 24884 0000F2E3 4983C4FF                        add r12, -1
 24885                                  
 24886 0000F2E7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24887                                  .L_tc_recycle_frame_loop_04dc:
 24888 0000F2ED 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 24889                                  
 24890 0000F2F1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24891                                  
 24892                                  
 24893                                  
 24894 0000F2F6 41BE00000000                    mov r14, 0                                ; clean box
 24895                                  
 24896                                  
 24897 0000F2FC 4983C7FF                        add r15, -1           
 24898 0000F300 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24899                                  
 24900 0000F304 4983C4FF                        add r12, -1 
 24901                                  
 24902 0000F308 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24903 0000F30C 75DF                    	jne .L_tc_recycle_frame_loop_04dc
 24904                                  .L_tc_recycle_frame_done_04dc:
 24905                                  ;this pop rbp in sot to the right place
 24906 0000F30E 4D89C7                  mov r15, r8
 24907                                  
 24908 0000F311 4983C704                        add r15, 4
 24909                                  
 24910 0000F315 49C1E703                        shl r15, 3
 24911                                  
 24912 0000F319 4C01FC                          add rsp, r15
 24913 0000F31C 5D                      	pop rbp                                  ; restore the old rbp
 24914                                  
 24915 0000F31D 488B4D00                        mov rcx, qword [rbp]
 24916 0000F321 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24917                                            ; rbx <- code(proc)
 24918                                  
 24919 0000F325 FFE3                            jmp rbx
 24920 0000F327 C9                      	leave
 24921 0000F328 C21800                  	ret 8 * (2 + 1)
 24922                                  .L_lambda_simple_end_0427:	; new closure is in rax
 24923                                  .L_lambda_simple_arity_check_ok_0906:
 24924 0000F32B 803805                  	cmp byte [rax], T_closure
 24925                                  
 24926 0000F32E 0F85CE440000                    jne L_code_ptr_error                      ; rax <- proc
 24927                                  
 24928                                  
 24929 0000F334 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24930                                  
 24931 0000F338 53                              push rbx                                  ; env pushed
 24932                                  
 24933 0000F339 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24934                                  
 24935                                          ; sagydebug
 24936                                  
 24937 0000F33C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24938                                  
 24939                                          
 24940                                          
 24941 0000F33F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24942                                  
 24943 0000F343 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24944                                  
 24945                                  
 24946 0000F348 4D89CA                          mov r10, r9
 24947 0000F34B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 24948                                          
 24949 0000F34F 4D89D7                          mov r15, r10
 24950 0000F352 4983C7FF                        add r15, -1
 24951                                                                                         
 24952 0000F356 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24953 0000F359 4983C404                        add r12, 4
 24954 0000F35D 4983C4FF                        add r12, -1
 24955                                  
 24956 0000F361 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24957                                  .L_tc_recycle_frame_loop_04dd:
 24958 0000F367 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 24959                                  
 24960 0000F36B 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24961                                  
 24962                                  
 24963                                  
 24964 0000F370 41BE00000000                    mov r14, 0                                ; clean box
 24965                                  
 24966                                  
 24967 0000F376 4983C7FF                        add r15, -1           
 24968 0000F37A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24969                                  
 24970 0000F37E 4983C4FF                        add r12, -1 
 24971                                  
 24972 0000F382 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24973 0000F386 75DF                    	jne .L_tc_recycle_frame_loop_04dd
 24974                                  .L_tc_recycle_frame_done_04dd:
 24975                                  ;this pop rbp in sot to the right place
 24976 0000F388 4D89C7                  mov r15, r8
 24977                                  
 24978 0000F38B 4983C704                        add r15, 4
 24979                                  
 24980 0000F38F 49C1E703                        shl r15, 3
 24981                                  
 24982 0000F393 4C01FC                          add rsp, r15
 24983 0000F396 5D                      	pop rbp                                  ; restore the old rbp
 24984                                  
 24985 0000F397 488B4D00                        mov rcx, qword [rbp]
 24986 0000F39B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24987                                            ; rbx <- code(proc)
 24988                                  
 24989 0000F39F FFE3                            jmp rbx
 24990 0000F3A1 C9                      	leave
 24991 0000F3A2 C21800                  	ret 8 * (2 + 1)
 24992                                  .L_lambda_simple_end_0423:	; new closure is in rax
 24993                                  .L_lambda_simple_arity_check_ok_0907:
 24994 0000F3A5 803805                  	cmp byte [rax], T_closure
 24995                                  
 24996 0000F3A8 0F8554440000                    jne L_code_ptr_error                      ; rax <- proc
 24997                                  
 24998                                  
 24999 0000F3AE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25000                                  
 25001 0000F3B2 53                              push rbx                                  ; env pushed
 25002                                  
 25003 0000F3B3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25004                                  
 25005                                          ; sagydebug
 25006                                  
 25007 0000F3B6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25008                                  
 25009                                          
 25010                                          
 25011 0000F3B9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25012                                  
 25013 0000F3BD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25014                                  
 25015                                  
 25016 0000F3C2 4D89CA                          mov r10, r9
 25017 0000F3C5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 25018                                          
 25019 0000F3C9 4D89D7                          mov r15, r10
 25020 0000F3CC 4983C7FF                        add r15, -1
 25021                                                                                         
 25022 0000F3D0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25023 0000F3D3 4983C404                        add r12, 4
 25024 0000F3D7 4983C4FF                        add r12, -1
 25025                                  
 25026 0000F3DB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25027                                  .L_tc_recycle_frame_loop_04de:
 25028 0000F3E1 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 25029                                  
 25030 0000F3E5 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25031                                  
 25032                                  
 25033                                  
 25034 0000F3EA 41BE00000000                    mov r14, 0                                ; clean box
 25035                                  
 25036                                  
 25037 0000F3F0 4983C7FF                        add r15, -1           
 25038 0000F3F4 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25039                                  
 25040 0000F3F8 4983C4FF                        add r12, -1 
 25041                                  
 25042 0000F3FC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25043 0000F400 75DF                    	jne .L_tc_recycle_frame_loop_04de
 25044                                  .L_tc_recycle_frame_done_04de:
 25045                                  ;this pop rbp in sot to the right place
 25046 0000F402 4D89C7                  mov r15, r8
 25047                                  
 25048 0000F405 4983C704                        add r15, 4
 25049                                  
 25050 0000F409 49C1E703                        shl r15, 3
 25051                                  
 25052 0000F40D 4C01FC                          add rsp, r15
 25053 0000F410 5D                      	pop rbp                                  ; restore the old rbp
 25054                                  
 25055 0000F411 488B4D00                        mov rcx, qword [rbp]
 25056 0000F415 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25057                                            ; rbx <- code(proc)
 25058                                  
 25059 0000F419 FFE3                            jmp rbx
 25060 0000F41B C9                      	leave
 25061 0000F41C C21800                  	ret 8 * (2 + 1)
 25062                                  .L_lambda_simple_end_0422:	; new closure is in rax
 25063 0000F41F 50                      	push rax
 25064 0000F420 6A01                    	push 1
 25065 0000F422 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25066 0000F427 E81B340000              	call malloc
 25067 0000F42C 50                      	push rax
 25068 0000F42D BF00000000              	mov rdi, 8 * 0	; new rib
 25069 0000F432 E810340000              	call malloc
 25070 0000F437 50                      	push rax
 25071 0000F438 BF08000000              	mov rdi, 8 * 1	; extended env
 25072 0000F43D E805340000              	call malloc
 25073 0000F442 488B7D10                	mov rdi, ENV
 25074 0000F446 BE00000000              	mov rsi, 0
 25075 0000F44B BA01000000              	mov rdx, 1
 25076                                  .L_lambda_simple_env_loop_042a:	; ext_env[i + 1] <-- env[i]
 25077 0000F450 4883FE00                	cmp rsi, 0
 25078 0000F454 7410                    	je .L_lambda_simple_env_end_042a
 25079 0000F456 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25080 0000F45A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25081 0000F45E 48FFC6                  	inc rsi
 25082 0000F461 48FFC2                  	inc rdx
 25083 0000F464 EBEA                    	jmp .L_lambda_simple_env_loop_042a
 25084                                  .L_lambda_simple_env_end_042a:
 25085 0000F466 5B                      	pop rbx
 25086 0000F467 BE00000000              	mov rsi, 0
 25087                                  .L_lambda_simple_params_loop_042a:	; copy params
 25088 0000F46C 4883FE00                	cmp rsi, 0
 25089 0000F470 740E                    	je .L_lambda_simple_params_end_042a
 25090 0000F472 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25091 0000F477 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25092 0000F47B 48FFC6                  	inc rsi
 25093 0000F47E EBEC                    	jmp .L_lambda_simple_params_loop_042a
 25094                                  .L_lambda_simple_params_end_042a:
 25095 0000F480 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25096 0000F483 4889C3                  	mov rbx, rax
 25097 0000F486 58                      	pop rax
 25098 0000F487 C60005                  	mov byte [rax], T_closure
 25099 0000F48A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25100 0000F48E 48C74009[9BF40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042a
 25101 0000F496 E97F000000              	jmp .L_lambda_simple_end_042a
 25102                                  .L_lambda_simple_code_042a:	; lambda-simple body
 25103 0000F49B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25104 0000F4A1 740B                    	je .L_lambda_simple_arity_check_ok_0908
 25105 0000F4A3 FF742410                	push qword [rsp + 8 * 2]
 25106 0000F4A7 6A01                    	push 1
 25107 0000F4A9 E952330000              	jmp L_error_incorrect_arity_simple
 25108                                  .L_lambda_simple_arity_check_ok_0908:
 25109 0000F4AE C8000000                	enter 0, 0
 25110 0000F4B2 488B0425[70030000]      	mov rax, qword [free_var_110]
 25111 0000F4BA 50                      	push rax
 25112 0000F4BB 6A01                    	push 1
 25113 0000F4BD 488B4520                mov rax, qword [rbp + 32]
 25114 0000F4C1 803805                  	cmp byte [rax], T_closure 
 25115 0000F4C4 0F8538430000                    jne L_code_ptr_error
 25116                                  
 25117 0000F4CA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25118                                  
 25119 0000F4CE 53                              push rbx
 25120                                  
 25121 0000F4CF FF5009                          call SOB_CLOSURE_CODE(rax)
 25122                                  
 25123 0000F4D2 48890425[F0030000]              	mov qword [free_var_126], rax
 25124 0000F4DA 48B8-                   	mov rax, sob_void
 25124 0000F4DC [0000000000000000] 
 25125                                  
 25126 0000F4E4 488B0425[A8030000]      	mov rax, qword [free_var_117]
 25127 0000F4EC 50                      	push rax
 25128 0000F4ED 6A01                    	push 1
 25129 0000F4EF 488B4520                mov rax, qword [rbp + 32]
 25130 0000F4F3 803805                  	cmp byte [rax], T_closure 
 25131 0000F4F6 0F8506430000                    jne L_code_ptr_error
 25132                                  
 25133 0000F4FC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25134                                  
 25135 0000F500 53                              push rbx
 25136                                  
 25137 0000F501 FF5009                          call SOB_CLOSURE_CODE(rax)
 25138                                  
 25139 0000F504 48890425[18040000]              	mov qword [free_var_131], rax
 25140 0000F50C 48B8-                   	mov rax, sob_void
 25140 0000F50E [0000000000000000] 
 25141 0000F516 C9                      	leave
 25142 0000F517 C21800                  	ret 8 * (2 + 1)
 25143                                  .L_lambda_simple_end_042a:	; new closure is in rax
 25144 0000F51A 803805                  	cmp byte [rax], T_closure 
 25145 0000F51D 0F85DF420000                    jne L_code_ptr_error
 25146                                  
 25147 0000F523 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25148                                  
 25149 0000F527 53                              push rbx
 25150                                  
 25151 0000F528 FF5009                          call SOB_CLOSURE_CODE(rax)
 25152                                  
 25153                                          
 25154 0000F52B 4889C7                  	mov rdi, rax
 25155 0000F52E E825330000              	call print_sexpr_if_not_void
 25156                                  
 25157 0000F533 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25158 0000F538 E80A330000              	call malloc
 25159 0000F53D 50                      	push rax
 25160 0000F53E BF00000000              	mov rdi, 8 * 0	; new rib
 25161 0000F543 E8FF320000              	call malloc
 25162 0000F548 50                      	push rax
 25163 0000F549 BF08000000              	mov rdi, 8 * 1	; extended env
 25164 0000F54E E8F4320000              	call malloc
 25165 0000F553 488B7D10                	mov rdi, ENV
 25166 0000F557 BE00000000              	mov rsi, 0
 25167 0000F55C BA01000000              	mov rdx, 1
 25168                                  .L_lambda_simple_env_loop_042b:	; ext_env[i + 1] <-- env[i]
 25169 0000F561 4883FE00                	cmp rsi, 0
 25170 0000F565 7410                    	je .L_lambda_simple_env_end_042b
 25171 0000F567 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25172 0000F56B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25173 0000F56F 48FFC6                  	inc rsi
 25174 0000F572 48FFC2                  	inc rdx
 25175 0000F575 EBEA                    	jmp .L_lambda_simple_env_loop_042b
 25176                                  .L_lambda_simple_env_end_042b:
 25177 0000F577 5B                      	pop rbx
 25178 0000F578 BE00000000              	mov rsi, 0
 25179                                  .L_lambda_simple_params_loop_042b:	; copy params
 25180 0000F57D 4883FE00                	cmp rsi, 0
 25181 0000F581 740E                    	je .L_lambda_simple_params_end_042b
 25182 0000F583 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25183 0000F588 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25184 0000F58C 48FFC6                  	inc rsi
 25185 0000F58F EBEC                    	jmp .L_lambda_simple_params_loop_042b
 25186                                  .L_lambda_simple_params_end_042b:
 25187 0000F591 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25188 0000F594 4889C3                  	mov rbx, rax
 25189 0000F597 58                      	pop rax
 25190 0000F598 C60005                  	mov byte [rax], T_closure
 25191 0000F59B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25192 0000F59F 48C74009[ACF50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042b
 25193 0000F5A7 E91A010000              	jmp .L_lambda_simple_end_042b
 25194                                  .L_lambda_simple_code_042b:	; lambda-simple body
 25195 0000F5AC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25196 0000F5B2 740B                    	je .L_lambda_simple_arity_check_ok_0909
 25197 0000F5B4 FF742410                	push qword [rsp + 8 * 2]
 25198 0000F5B8 6A01                    	push 1
 25199 0000F5BA E941320000              	jmp L_error_incorrect_arity_simple
 25200                                  .L_lambda_simple_arity_check_ok_0909:
 25201 0000F5BF C8000000                	enter 0, 0
 25202 0000F5C3 488B4520                mov rax, qword [rbp + 32]
 25203 0000F5C7 50                      	push rax
 25204 0000F5C8 6A01                    	push 1
 25205 0000F5CA 488B0425[00000000]      	mov rax, qword [free_var_0]
 25206 0000F5D2 803805                  	cmp byte [rax], T_closure 
 25207 0000F5D5 0F8527420000                    jne L_code_ptr_error
 25208                                  
 25209 0000F5DB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25210                                  
 25211 0000F5DF 53                              push rbx
 25212                                  
 25213 0000F5E0 FF5009                          call SOB_CLOSURE_CODE(rax)
 25214                                  
 25215 0000F5E3 483D[02000000]                  	cmp rax, sob_boolean_false
 25216 0000F5E9 740F                    	je .L_if_else_027c
 25217 0000F5EB 48B8-                   	mov rax, qword (L_constants + 31)
 25217 0000F5ED [1F00000000000000] 
 25218 0000F5F5 E9C8000000              	jmp .L_if_end_027c
 25219                                  	.L_if_else_027c:
 25220 0000F5FA 488B4520                	mov rax, qword [rbp + 32]
 25221 0000F5FE 50                      	push rax
 25222 0000F5FF 6A01                    	push 1
 25223 0000F601 488B0425[88000000]      	mov rax, qword [free_var_17]
 25224 0000F609 803805                  	cmp byte [rax], T_closure 
 25225 0000F60C 0F85F0410000                    jne L_code_ptr_error
 25226                                  
 25227 0000F612 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25228                                  
 25229 0000F616 53                              push rbx
 25230                                  
 25231 0000F617 FF5009                          call SOB_CLOSURE_CODE(rax)
 25232                                  
 25233 0000F61A 50                              	push rax
 25234 0000F61B 6A01                    	push 1
 25235 0000F61D 488B0425[30040000]      	mov rax, qword [free_var_134]
 25236 0000F625 803805                  	cmp byte [rax], T_closure 
 25237 0000F628 0F85D4410000                    jne L_code_ptr_error
 25238                                  
 25239 0000F62E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25240                                  
 25241 0000F632 53                              push rbx
 25242                                  
 25243 0000F633 FF5009                          call SOB_CLOSURE_CODE(rax)
 25244                                  
 25245 0000F636 50                              	push rax
 25246 0000F637 48B8-                   	mov rax, qword (L_constants + 127)
 25246 0000F639 [7F00000000000000] 
 25247 0000F641 50                      	push rax
 25248 0000F642 6A02                    	push 2
 25249 0000F644 488B0425[08030000]      	mov rax, qword [free_var_97]
 25250                                  .L_lambda_simple_arity_check_ok_090a:
 25251 0000F64C 803805                  	cmp byte [rax], T_closure
 25252                                  
 25253 0000F64F 0F85AD410000                    jne L_code_ptr_error                      ; rax <- proc
 25254                                  
 25255                                  
 25256 0000F655 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25257                                  
 25258 0000F659 53                              push rbx                                  ; env pushed
 25259                                  
 25260 0000F65A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25261                                  
 25262                                          ; sagydebug
 25263                                  
 25264 0000F65D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25265                                  
 25266                                          
 25267                                          
 25268 0000F660 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25269                                  
 25270 0000F664 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25271                                  
 25272                                  
 25273 0000F669 4D89CA                          mov r10, r9
 25274 0000F66C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 25275                                          
 25276 0000F670 4D89D7                          mov r15, r10
 25277 0000F673 4983C7FF                        add r15, -1
 25278                                                                                         
 25279 0000F677 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25280 0000F67A 4983C404                        add r12, 4
 25281 0000F67E 4983C4FF                        add r12, -1
 25282                                  
 25283 0000F682 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25284                                  .L_tc_recycle_frame_loop_04df:
 25285 0000F688 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 25286                                  
 25287 0000F68C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25288                                  
 25289                                  
 25290                                  
 25291 0000F691 41BE00000000                    mov r14, 0                                ; clean box
 25292                                  
 25293                                  
 25294 0000F697 4983C7FF                        add r15, -1           
 25295 0000F69B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25296                                  
 25297 0000F69F 4983C4FF                        add r12, -1 
 25298                                  
 25299 0000F6A3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25300 0000F6A7 75DF                    	jne .L_tc_recycle_frame_loop_04df
 25301                                  .L_tc_recycle_frame_done_04df:
 25302                                  ;this pop rbp in sot to the right place
 25303 0000F6A9 4D89C7                  mov r15, r8
 25304                                  
 25305 0000F6AC 4983C704                        add r15, 4
 25306                                  
 25307 0000F6B0 49C1E703                        shl r15, 3
 25308                                  
 25309 0000F6B4 4C01FC                          add rsp, r15
 25310 0000F6B7 5D                      	pop rbp                                  ; restore the old rbp
 25311                                  
 25312 0000F6B8 488B4D00                        mov rcx, qword [rbp]
 25313 0000F6BC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25314                                            ; rbx <- code(proc)
 25315                                  
 25316 0000F6C0 FFE3                            jmp rbx
 25317                                  	.L_if_end_027c:
 25318 0000F6C2 C9                      	leave
 25319 0000F6C3 C21800                  	ret 8 * (2 + 1)
 25320                                  .L_lambda_simple_end_042b:	; new closure is in rax
 25321 0000F6C6 48890425[30040000]      	mov qword [free_var_134], rax
 25322 0000F6CE 48B8-                   	mov rax, sob_void
 25322 0000F6D0 [0000000000000000] 
 25323                                  
 25324 0000F6D8 4889C7                  	mov rdi, rax
 25325 0000F6DB E878310000              	call print_sexpr_if_not_void
 25326                                  
 25327 0000F6E0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25328 0000F6E5 E85D310000              	call malloc
 25329 0000F6EA 50                      	push rax
 25330 0000F6EB BF00000000              	mov rdi, 8 * 0	; new rib
 25331 0000F6F0 E852310000              	call malloc
 25332 0000F6F5 50                      	push rax
 25333 0000F6F6 BF08000000              	mov rdi, 8 * 1	; extended env
 25334 0000F6FB E847310000              	call malloc
 25335 0000F700 488B7D10                	mov rdi, ENV
 25336 0000F704 BE00000000              	mov rsi, 0
 25337 0000F709 BA01000000              	mov rdx, 1
 25338                                  .L_lambda_simple_env_loop_042c:	; ext_env[i + 1] <-- env[i]
 25339 0000F70E 4883FE00                	cmp rsi, 0
 25340 0000F712 7410                    	je .L_lambda_simple_env_end_042c
 25341 0000F714 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25342 0000F718 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25343 0000F71C 48FFC6                  	inc rsi
 25344 0000F71F 48FFC2                  	inc rdx
 25345 0000F722 EBEA                    	jmp .L_lambda_simple_env_loop_042c
 25346                                  .L_lambda_simple_env_end_042c:
 25347 0000F724 5B                      	pop rbx
 25348 0000F725 BE00000000              	mov rsi, 0
 25349                                  .L_lambda_simple_params_loop_042c:	; copy params
 25350 0000F72A 4883FE00                	cmp rsi, 0
 25351 0000F72E 740E                    	je .L_lambda_simple_params_end_042c
 25352 0000F730 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25353 0000F735 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25354 0000F739 48FFC6                  	inc rsi
 25355 0000F73C EBEC                    	jmp .L_lambda_simple_params_loop_042c
 25356                                  .L_lambda_simple_params_end_042c:
 25357 0000F73E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25358 0000F741 4889C3                  	mov rbx, rax
 25359 0000F744 58                      	pop rax
 25360 0000F745 C60005                  	mov byte [rax], T_closure
 25361 0000F748 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25362 0000F74C 48C74009[59F70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042c
 25363 0000F754 E920010000              	jmp .L_lambda_simple_end_042c
 25364                                  .L_lambda_simple_code_042c:	; lambda-simple body
 25365 0000F759 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25366 0000F75F 740B                    	je .L_lambda_simple_arity_check_ok_090b
 25367 0000F761 FF742410                	push qword [rsp + 8 * 2]
 25368 0000F765 6A01                    	push 1
 25369 0000F767 E994300000              	jmp L_error_incorrect_arity_simple
 25370                                  .L_lambda_simple_arity_check_ok_090b:
 25371 0000F76C C8000000                	enter 0, 0
 25372 0000F770 488B4520                mov rax, qword [rbp + 32]
 25373 0000F774 50                      	push rax
 25374 0000F775 6A01                    	push 1
 25375 0000F777 488B0425[00000000]      	mov rax, qword [free_var_0]
 25376 0000F77F 803805                  	cmp byte [rax], T_closure 
 25377 0000F782 0F857A400000                    jne L_code_ptr_error
 25378                                  
 25379 0000F788 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25380                                  
 25381 0000F78C 53                              push rbx
 25382                                  
 25383 0000F78D FF5009                          call SOB_CLOSURE_CODE(rax)
 25384                                  
 25385 0000F790 483D[02000000]                  	cmp rax, sob_boolean_false
 25386 0000F796 0F85D9000000            	jne .L_or_end_0054
 25387 0000F79C 488B4520                mov rax, qword [rbp + 32]
 25388 0000F7A0 50                      	push rax
 25389 0000F7A1 6A01                    	push 1
 25390 0000F7A3 488B0425[08000000]      	mov rax, qword [free_var_1]
 25391 0000F7AB 803805                  	cmp byte [rax], T_closure 
 25392 0000F7AE 0F854E400000                    jne L_code_ptr_error
 25393                                  
 25394 0000F7B4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25395                                  
 25396 0000F7B8 53                              push rbx
 25397                                  
 25398 0000F7B9 FF5009                          call SOB_CLOSURE_CODE(rax)
 25399                                  
 25400 0000F7BC 483D[02000000]                  	cmp rax, sob_boolean_false
 25401 0000F7C2 0F84A3000000            	je .L_if_else_027d
 25402 0000F7C8 488B4520                mov rax, qword [rbp + 32]
 25403 0000F7CC 50                      	push rax
 25404 0000F7CD 6A01                    	push 1
 25405 0000F7CF 488B0425[88000000]      	mov rax, qword [free_var_17]
 25406 0000F7D7 803805                  	cmp byte [rax], T_closure 
 25407 0000F7DA 0F8522400000                    jne L_code_ptr_error
 25408                                  
 25409 0000F7E0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25410                                  
 25411 0000F7E4 53                              push rbx
 25412                                  
 25413 0000F7E5 FF5009                          call SOB_CLOSURE_CODE(rax)
 25414                                  
 25415 0000F7E8 50                              	push rax
 25416 0000F7E9 6A01                    	push 1
 25417 0000F7EB 488B0425[A0020000]      	mov rax, qword [free_var_84]
 25418                                  .L_lambda_simple_arity_check_ok_090c:
 25419 0000F7F3 803805                  	cmp byte [rax], T_closure
 25420                                  
 25421 0000F7F6 0F8506400000                    jne L_code_ptr_error                      ; rax <- proc
 25422                                  
 25423                                  
 25424 0000F7FC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25425                                  
 25426 0000F800 53                              push rbx                                  ; env pushed
 25427                                  
 25428 0000F801 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25429                                  
 25430                                          ; sagydebug
 25431                                  
 25432 0000F804 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25433                                  
 25434                                          
 25435                                          
 25436 0000F807 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25437                                  
 25438 0000F80B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25439                                  
 25440                                  
 25441 0000F810 4D89CA                          mov r10, r9
 25442 0000F813 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 25443                                          
 25444 0000F817 4D89D7                          mov r15, r10
 25445 0000F81A 4983C7FF                        add r15, -1
 25446                                                                                         
 25447 0000F81E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25448 0000F821 4983C404                        add r12, 4
 25449 0000F825 4983C4FF                        add r12, -1
 25450                                  
 25451 0000F829 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25452                                  .L_tc_recycle_frame_loop_04e0:
 25453 0000F82F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 25454                                  
 25455 0000F833 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25456                                  
 25457                                  
 25458                                  
 25459 0000F838 41BE00000000                    mov r14, 0                                ; clean box
 25460                                  
 25461                                  
 25462 0000F83E 4983C7FF                        add r15, -1           
 25463 0000F842 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25464                                  
 25465 0000F846 4983C4FF                        add r12, -1 
 25466                                  
 25467 0000F84A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25468 0000F84E 75DF                    	jne .L_tc_recycle_frame_loop_04e0
 25469                                  .L_tc_recycle_frame_done_04e0:
 25470                                  ;this pop rbp in sot to the right place
 25471 0000F850 4D89C7                  mov r15, r8
 25472                                  
 25473 0000F853 4983C704                        add r15, 4
 25474                                  
 25475 0000F857 49C1E703                        shl r15, 3
 25476                                  
 25477 0000F85B 4C01FC                          add rsp, r15
 25478 0000F85E 5D                      	pop rbp                                  ; restore the old rbp
 25479                                  
 25480 0000F85F 488B4D00                        mov rcx, qword [rbp]
 25481 0000F863 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25482                                            ; rbx <- code(proc)
 25483                                  
 25484 0000F867 FFE3                            jmp rbx
 25485 0000F869 EB0A                    	jmp .L_if_end_027d
 25486                                  	.L_if_else_027d:
 25487 0000F86B 48B8-                   		mov rax, qword (L_constants + 2)
 25487 0000F86D [0200000000000000] 
 25488                                  	.L_if_end_027d:
 25489                                  .L_or_end_0054:
 25490 0000F875 C9                      	leave
 25491 0000F876 C21800                  	ret 8 * (2 + 1)
 25492                                  .L_lambda_simple_end_042c:	; new closure is in rax
 25493 0000F879 48890425[A0020000]      	mov qword [free_var_84], rax
 25494 0000F881 48B8-                   	mov rax, sob_void
 25494 0000F883 [0000000000000000] 
 25495                                  
 25496 0000F88B 4889C7                  	mov rdi, rax
 25497 0000F88E E8C52F0000              	call print_sexpr_if_not_void
 25498                                  
 25499 0000F893 488B0425[98010000]      	mov rax, qword [free_var_51]
 25500 0000F89B 50                      	push rax
 25501 0000F89C 6A01                    	push 1
 25502 0000F89E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25503 0000F8A3 E89F2F0000              	call malloc
 25504 0000F8A8 50                      	push rax
 25505 0000F8A9 BF00000000              	mov rdi, 8 * 0	; new rib
 25506 0000F8AE E8942F0000              	call malloc
 25507 0000F8B3 50                      	push rax
 25508 0000F8B4 BF08000000              	mov rdi, 8 * 1	; extended env
 25509 0000F8B9 E8892F0000              	call malloc
 25510 0000F8BE 488B7D10                	mov rdi, ENV
 25511 0000F8C2 BE00000000              	mov rsi, 0
 25512 0000F8C7 BA01000000              	mov rdx, 1
 25513                                  .L_lambda_simple_env_loop_042d:	; ext_env[i + 1] <-- env[i]
 25514 0000F8CC 4883FE00                	cmp rsi, 0
 25515 0000F8D0 7410                    	je .L_lambda_simple_env_end_042d
 25516 0000F8D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25517 0000F8D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25518 0000F8DA 48FFC6                  	inc rsi
 25519 0000F8DD 48FFC2                  	inc rdx
 25520 0000F8E0 EBEA                    	jmp .L_lambda_simple_env_loop_042d
 25521                                  .L_lambda_simple_env_end_042d:
 25522 0000F8E2 5B                      	pop rbx
 25523 0000F8E3 BE00000000              	mov rsi, 0
 25524                                  .L_lambda_simple_params_loop_042d:	; copy params
 25525 0000F8E8 4883FE00                	cmp rsi, 0
 25526 0000F8EC 740E                    	je .L_lambda_simple_params_end_042d
 25527 0000F8EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25528 0000F8F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25529 0000F8F7 48FFC6                  	inc rsi
 25530 0000F8FA EBEC                    	jmp .L_lambda_simple_params_loop_042d
 25531                                  .L_lambda_simple_params_end_042d:
 25532 0000F8FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25533 0000F8FF 4889C3                  	mov rbx, rax
 25534 0000F902 58                      	pop rax
 25535 0000F903 C60005                  	mov byte [rax], T_closure
 25536 0000F906 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25537 0000F90A 48C74009[17F90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042d
 25538 0000F912 E931040000              	jmp .L_lambda_simple_end_042d
 25539                                  .L_lambda_simple_code_042d:	; lambda-simple body
 25540 0000F917 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25541 0000F91D 740B                    	je .L_lambda_simple_arity_check_ok_090d
 25542 0000F91F FF742410                	push qword [rsp + 8 * 2]
 25543 0000F923 6A01                    	push 1
 25544 0000F925 E9D62E0000              	jmp L_error_incorrect_arity_simple
 25545                                  .L_lambda_simple_arity_check_ok_090d:
 25546 0000F92A C8000000                	enter 0, 0
 25547 0000F92E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25548 0000F933 E80F2F0000              	call malloc
 25549 0000F938 50                      	push rax
 25550 0000F939 BF08000000              	mov rdi, 8 * 1	; new rib
 25551 0000F93E E8042F0000              	call malloc
 25552 0000F943 50                      	push rax
 25553 0000F944 BF10000000              	mov rdi, 8 * 2	; extended env
 25554 0000F949 E8F92E0000              	call malloc
 25555 0000F94E 488B7D10                	mov rdi, ENV
 25556 0000F952 BE00000000              	mov rsi, 0
 25557 0000F957 BA01000000              	mov rdx, 1
 25558                                  .L_lambda_opt_env_loop_009f:	; ext_env[i + 1] <-- env[i]
 25559 0000F95C 4883FE01                	cmp rsi, 1
 25560 0000F960 7410                    	je .L_lambda_opt_env_end_009f
 25561 0000F962 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25562 0000F966 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25563 0000F96A 48FFC6                  	inc rsi
 25564 0000F96D 48FFC2                  	inc rdx
 25565 0000F970 EBEA                    	jmp .L_lambda_opt_env_loop_009f
 25566                                  .L_lambda_opt_env_end_009f:
 25567 0000F972 5B                      	pop rbx
 25568 0000F973 BE00000000              	mov rsi, 0
 25569                                  .L_lambda_opt_params_loop_01db:	; copy params
 25570 0000F978 4883FE01                	cmp rsi, 1
 25571 0000F97C 740E                    	je .L_lambda_opt_params_end_01db
 25572 0000F97E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25573 0000F983 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25574 0000F987 48FFC6                  	inc rsi
 25575 0000F98A EBEC                    	jmp .L_lambda_opt_params_loop_01db
 25576                                  .L_lambda_opt_params_end_01db:
 25577 0000F98C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25578 0000F98F 4889C3                  	mov rbx, rax
 25579 0000F992 58                      	pop rax
 25580 0000F993 C60005                  	mov byte [rax], T_closure
 25581 0000F996 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25582 0000F99A 48C74009[A7F90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_009f
 25583 0000F9A2 E99D030000              	jmp .L_lambda_opt_end_009f
 25584                                  .L_lambda_opt_code_009f:
 25585 0000F9A7 4C8B542410              mov r10, qword [rsp+8*2]
 25586 0000F9AC 4983FA01                cmp r10, 1
 25587 0000F9B0 740B                    je .L_lambda_opt_arity_check_exact_009f
 25588 0000F9B2 4983FA01                cmp r10, 1
 25589 0000F9B6 7F44                    jg .L_lambda_opt_arity_check_more_009f
 25590 0000F9B8 E9572E0000              jmp L_error_incorrect_arity_opt
 25591                                  .L_lambda_opt_arity_check_exact_009f:
 25592 0000F9BD 4883EC08                sub rsp, 8
 25593 0000F9C1 BA04000000              mov rdx, 3+1
 25594 0000F9C6 4889E3                  mov qword rbx, rsp
 25595                                  .L_lambda_opt_params_loop_01dc:
 25596 0000F9C9 488B4B08                mov qword rcx, [rbx+8]
 25597 0000F9CD 48890B                  mov qword [rbx], rcx
 25598 0000F9D0 48FFCA                  dec rdx
 25599 0000F9D3 4883C308                add rbx, 8
 25600 0000F9D7 4883FA00                cmp rdx, 0
 25601 0000F9DB 7402                    je .L_lambda_opt_params_end_01dc
 25602 0000F9DD EBEA                    jmp .L_lambda_opt_params_loop_01dc
 25603                                  .L_lambda_opt_params_end_01dc:
 25604 0000F9DF 49FFC2                  inc r10
 25605 0000F9E2 4C89542410              mov qword [rsp+8*2], r10
 25606 0000F9E7 4983C202                add r10, 2
 25607 0000F9EB 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 25608 0000F9F3 4C8B4D00                mov r9, [rbp]
 25609 0000F9F7 E996000000              jmp .L_lambda_opt_stack_adjusted_009f
 25610                                  .L_lambda_opt_arity_check_more_009f:
 25611 0000F9FC 4C8B6C2410              mov r13, [rsp+2*8]
 25612 0000FA01 48B8-                   mov rax, sob_nil
 25612 0000FA03 [0100000000000000] 
 25613 0000FA0B 4C8B542410              mov r10, [rsp+2*8]
 25614 0000FA10 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 25615 0000FA15 4983EA01                sub r10, 1
 25616                                  .L_lambda_opt_stack_shrink_loop_009f:
 25617 0000FA19 4983FA00                cmp r10, 0
 25618 0000FA1D 7424                    je .L_lambda_opt_stack_shrink_loop_exit_009f
 25619 0000FA1F 4889C1                  mov rcx, rax
 25620 0000FA22 498B10                  mov rdx, [r8]
 25621 0000FA25 BF11000000              mov rdi, 17
 25622 0000FA2A E8182E0000              call malloc
 25623 0000FA2F C60021                  mov byte [rax], T_pair
 25624 0000FA32 48894809                mov SOB_PAIR_CDR(rax), rcx
 25625 0000FA36 48895001                mov SOB_PAIR_CAR(rax), rdx
 25626 0000FA3A 4983E808                sub r8, 8
 25627 0000FA3E 49FFCA                  dec r10
 25628 0000FA41 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_009f
 25629                                  .L_lambda_opt_stack_shrink_loop_exit_009f:
 25630 0000FA43 4889442420              mov [rsp+8*(2+2)], rax
 25631 0000FA48 41BA02000000            mov r10, 2
 25632 0000FA4E 4C89542410              mov [rsp+16], r10
 25633 0000FA53 4989E4                  mov r12, rsp
 25634 0000FA56 4983C420                add r12, 8*(2+2)
 25635 0000FA5A 4C2B6C2410              sub r13, [rsp+16]
 25636 0000FA5F 4D89EA                  mov r10, r13
 25637 0000FA62 49C1E203                shl r10, 3
 25638 0000FA66 4D89D7                  mov r15, r10
 25639 0000FA69 4D01E2                  add r10, r12
 25640 0000FA6C 4C8B4C2410              mov r9, [rsp+16]
 25641 0000FA71 4983C103                add r9, 3
 25642                                  .L_lambda_opt_params_loop_01dd:
 25643 0000FA75 4983F900                cmp r9, 0
 25644 0000FA79 7414                    je .L_lambda_opt_params_end_01dd
 25645 0000FA7B 4D8B3424                mov r14, [r12]
 25646 0000FA7F 4D8932                  mov [r10], r14
 25647 0000FA82 4983EC08                sub r12, 8
 25648 0000FA86 4983EA08                sub r10, 8
 25649 0000FA8A 49FFC9                  dec r9
 25650 0000FA8D EBE6                    jmp .L_lambda_opt_params_loop_01dd
 25651                                  .L_lambda_opt_params_end_01dd:
 25652 0000FA8F 4C01FC                  add rsp, r15
 25653                                  .L_lambda_opt_stack_adjusted_009f:
 25654 0000FA92 4C8B4D00                mov r9, [rbp]
 25655 0000FA96 C8000000                enter 0, 0
 25656 0000FA9A 488B4528                mov rax, qword [rbp + 40]
 25657 0000FA9E 50                      	push rax
 25658 0000FA9F 6A01                    	push 1
 25659 0000FAA1 488B0425[00000000]      	mov rax, qword [free_var_0]
 25660 0000FAA9 803805                  	cmp byte [rax], T_closure 
 25661 0000FAAC 0F85503D0000                    jne L_code_ptr_error
 25662                                  
 25663 0000FAB2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25664                                  
 25665 0000FAB6 53                              push rbx
 25666                                  
 25667 0000FAB7 FF5009                          call SOB_CLOSURE_CODE(rax)
 25668                                  
 25669 0000FABA 483D[02000000]                  	cmp rax, sob_boolean_false
 25670 0000FAC0 740F                    	je .L_if_else_027e
 25671 0000FAC2 48B8-                   	mov rax, qword (L_constants + 0)
 25671 0000FAC4 [0000000000000000] 
 25672 0000FACC E9CB000000              	jmp .L_if_end_027e
 25673                                  	.L_if_else_027e:
 25674 0000FAD1 488B4528                	mov rax, qword [rbp + 40]
 25675 0000FAD5 50                      	push rax
 25676 0000FAD6 6A01                    	push 1
 25677 0000FAD8 488B0425[08000000]      	mov rax, qword [free_var_1]
 25678 0000FAE0 803805                  	cmp byte [rax], T_closure 
 25679 0000FAE3 0F85193D0000                    jne L_code_ptr_error
 25680                                  
 25681 0000FAE9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25682                                  
 25683 0000FAED 53                              push rbx
 25684                                  
 25685 0000FAEE FF5009                          call SOB_CLOSURE_CODE(rax)
 25686                                  
 25687 0000FAF1 483D[02000000]                  	cmp rax, sob_boolean_false
 25688 0000FAF7 743E                    	je .L_if_else_0280
 25689 0000FAF9 488B4528                mov rax, qword [rbp + 40]
 25690 0000FAFD 50                      	push rax
 25691 0000FAFE 6A01                    	push 1
 25692 0000FB00 488B0425[88000000]      	mov rax, qword [free_var_17]
 25693 0000FB08 803805                  	cmp byte [rax], T_closure 
 25694 0000FB0B 0F85F13C0000                    jne L_code_ptr_error
 25695                                  
 25696 0000FB11 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25697                                  
 25698 0000FB15 53                              push rbx
 25699                                  
 25700 0000FB16 FF5009                          call SOB_CLOSURE_CODE(rax)
 25701                                  
 25702 0000FB19 50                              	push rax
 25703 0000FB1A 6A01                    	push 1
 25704 0000FB1C 488B0425[00000000]      	mov rax, qword [free_var_0]
 25705 0000FB24 803805                  	cmp byte [rax], T_closure 
 25706 0000FB27 0F85D53C0000                    jne L_code_ptr_error
 25707                                  
 25708 0000FB2D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25709                                  
 25710 0000FB31 53                              push rbx
 25711                                  
 25712 0000FB32 FF5009                          call SOB_CLOSURE_CODE(rax)
 25713                                  
 25714 0000FB35 EB0A                            	jmp .L_if_end_0280
 25715                                  	.L_if_else_0280:
 25716 0000FB37 48B8-                   		mov rax, qword (L_constants + 2)
 25716 0000FB39 [0200000000000000] 
 25717                                  	.L_if_end_0280:
 25718 0000FB41 483D[02000000]          	cmp rax, sob_boolean_false
 25719 0000FB47 7422                    	je .L_if_else_027f
 25720 0000FB49 488B4528                mov rax, qword [rbp + 40]
 25721 0000FB4D 50                      	push rax
 25722 0000FB4E 6A01                    	push 1
 25723 0000FB50 488B0425[80000000]      	mov rax, qword [free_var_16]
 25724 0000FB58 803805                  	cmp byte [rax], T_closure 
 25725 0000FB5B 0F85A13C0000                    jne L_code_ptr_error
 25726                                  
 25727 0000FB61 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25728                                  
 25729 0000FB65 53                              push rbx
 25730                                  
 25731 0000FB66 FF5009                          call SOB_CLOSURE_CODE(rax)
 25732                                  
 25733 0000FB69 EB31                            	jmp .L_if_end_027f
 25734                                  	.L_if_else_027f:
 25735 0000FB6B 48B8-                   		mov rax, qword (L_constants + 378)
 25735 0000FB6D [7A01000000000000] 
 25736 0000FB75 50                      	push rax
 25737 0000FB76 48B8-                   	mov rax, qword (L_constants + 369)
 25737 0000FB78 [7101000000000000] 
 25738 0000FB80 50                      	push rax
 25739 0000FB81 6A02                    	push 2
 25740 0000FB83 488B0425[30010000]      	mov rax, qword [free_var_38]
 25741 0000FB8B 803805                  	cmp byte [rax], T_closure 
 25742 0000FB8E 0F856E3C0000                    jne L_code_ptr_error
 25743                                  
 25744 0000FB94 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25745                                  
 25746 0000FB98 53                              push rbx
 25747                                  
 25748 0000FB99 FF5009                          call SOB_CLOSURE_CODE(rax)
 25749                                  
 25750                                          	.L_if_end_027f:
 25751                                  	.L_if_end_027e:
 25752 0000FB9C 50                      	push rax
 25753 0000FB9D 6A01                    	push 1
 25754 0000FB9F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25755 0000FBA4 E89E2C0000              	call malloc
 25756 0000FBA9 50                      	push rax
 25757 0000FBAA BF10000000              	mov rdi, 8 * 2	; new rib
 25758 0000FBAF E8932C0000              	call malloc
 25759 0000FBB4 50                      	push rax
 25760 0000FBB5 BF18000000              	mov rdi, 8 * 3	; extended env
 25761 0000FBBA E8882C0000              	call malloc
 25762 0000FBBF 488B7D10                	mov rdi, ENV
 25763 0000FBC3 BE00000000              	mov rsi, 0
 25764 0000FBC8 BA01000000              	mov rdx, 1
 25765                                  .L_lambda_simple_env_loop_042e:	; ext_env[i + 1] <-- env[i]
 25766 0000FBCD 4883FE02                	cmp rsi, 2
 25767 0000FBD1 7410                    	je .L_lambda_simple_env_end_042e
 25768 0000FBD3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25769 0000FBD7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25770 0000FBDB 48FFC6                  	inc rsi
 25771 0000FBDE 48FFC2                  	inc rdx
 25772 0000FBE1 EBEA                    	jmp .L_lambda_simple_env_loop_042e
 25773                                  .L_lambda_simple_env_end_042e:
 25774 0000FBE3 5B                      	pop rbx
 25775 0000FBE4 BE00000000              	mov rsi, 0
 25776                                  .L_lambda_simple_params_loop_042e:	; copy params
 25777 0000FBE9 4883FE02                	cmp rsi, 2
 25778 0000FBED 740E                    	je .L_lambda_simple_params_end_042e
 25779 0000FBEF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25780 0000FBF4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25781 0000FBF8 48FFC6                  	inc rsi
 25782 0000FBFB EBEC                    	jmp .L_lambda_simple_params_loop_042e
 25783                                  .L_lambda_simple_params_end_042e:
 25784 0000FBFD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25785 0000FC00 4889C3                  	mov rbx, rax
 25786 0000FC03 58                      	pop rax
 25787 0000FC04 C60005                  	mov byte [rax], T_closure
 25788 0000FC07 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25789 0000FC0B 48C74009[18FC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042e
 25790 0000FC13 E9AE000000              	jmp .L_lambda_simple_end_042e
 25791                                  .L_lambda_simple_code_042e:	; lambda-simple body
 25792 0000FC18 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25793 0000FC1E 740B                    	je .L_lambda_simple_arity_check_ok_090e
 25794 0000FC20 FF742410                	push qword [rsp + 8 * 2]
 25795 0000FC24 6A01                    	push 1
 25796 0000FC26 E9D52B0000              	jmp L_error_incorrect_arity_simple
 25797                                  .L_lambda_simple_arity_check_ok_090e:
 25798 0000FC2B C8000000                	enter 0, 0
 25799 0000FC2F 488B4520                mov rax, qword [rbp + 32]
 25800 0000FC33 50                      	push rax
 25801 0000FC34 488B4510                mov rax, qword [rbp + 16]
 25802 0000FC38 488B00                  mov rax, qword [rax + 0]
 25803 0000FC3B 488B00                  mov rax, qword [rax + 0]
 25804 0000FC3E 50                      	push rax
 25805 0000FC3F 6A02                    	push 2
 25806 0000FC41 488B4510                mov rax, qword [rbp + 16]
 25807 0000FC45 488B4008                mov rax, qword [rax + 8]
 25808 0000FC49 488B00                  mov rax, qword [rax + 0]
 25809                                  .L_lambda_simple_arity_check_ok_090f:
 25810 0000FC4C 803805                  	cmp byte [rax], T_closure
 25811                                  
 25812 0000FC4F 0F85AD3B0000                    jne L_code_ptr_error                      ; rax <- proc
 25813                                  
 25814                                  
 25815 0000FC55 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25816                                  
 25817 0000FC59 53                              push rbx                                  ; env pushed
 25818                                  
 25819 0000FC5A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25820                                  
 25821                                          ; sagydebug
 25822                                  
 25823 0000FC5D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25824                                  
 25825                                          
 25826                                          
 25827 0000FC60 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25828                                  
 25829 0000FC64 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25830                                  
 25831                                  
 25832 0000FC69 4D89CA                          mov r10, r9
 25833 0000FC6C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 25834                                          
 25835 0000FC70 4D89D7                          mov r15, r10
 25836 0000FC73 4983C7FF                        add r15, -1
 25837                                                                                         
 25838 0000FC77 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25839 0000FC7A 4983C404                        add r12, 4
 25840 0000FC7E 4983C4FF                        add r12, -1
 25841                                  
 25842 0000FC82 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25843                                  .L_tc_recycle_frame_loop_04e1:
 25844 0000FC88 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 25845                                  
 25846 0000FC8C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25847                                  
 25848                                  
 25849                                  
 25850 0000FC91 41BE00000000                    mov r14, 0                                ; clean box
 25851                                  
 25852                                  
 25853 0000FC97 4983C7FF                        add r15, -1           
 25854 0000FC9B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25855                                  
 25856 0000FC9F 4983C4FF                        add r12, -1 
 25857                                  
 25858 0000FCA3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25859 0000FCA7 75DF                    	jne .L_tc_recycle_frame_loop_04e1
 25860                                  .L_tc_recycle_frame_done_04e1:
 25861                                  ;this pop rbp in sot to the right place
 25862 0000FCA9 4D89C7                  mov r15, r8
 25863                                  
 25864 0000FCAC 4983C704                        add r15, 4
 25865                                  
 25866 0000FCB0 49C1E703                        shl r15, 3
 25867                                  
 25868 0000FCB4 4C01FC                          add rsp, r15
 25869 0000FCB7 5D                      	pop rbp                                  ; restore the old rbp
 25870                                  
 25871 0000FCB8 488B4D00                        mov rcx, qword [rbp]
 25872 0000FCBC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25873                                            ; rbx <- code(proc)
 25874                                  
 25875 0000FCC0 FFE3                            jmp rbx
 25876 0000FCC2 C9                      	leave
 25877 0000FCC3 C21800                  	ret 8 * (2 + 1)
 25878                                  .L_lambda_simple_end_042e:	; new closure is in rax
 25879                                  .L_lambda_simple_arity_check_ok_0910:
 25880 0000FCC6 803805                  	cmp byte [rax], T_closure
 25881                                  
 25882 0000FCC9 0F85333B0000                    jne L_code_ptr_error                      ; rax <- proc
 25883                                  
 25884                                  
 25885 0000FCCF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25886                                  
 25887 0000FCD3 53                              push rbx                                  ; env pushed
 25888                                  
 25889 0000FCD4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25890                                  
 25891                                          ; sagydebug
 25892                                  
 25893 0000FCD7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25894                                  
 25895                                          
 25896                                          
 25897 0000FCDA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25898                                  
 25899 0000FCDE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25900                                  
 25901                                  
 25902 0000FCE3 4D89CA                          mov r10, r9
 25903 0000FCE6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 25904                                          
 25905 0000FCEA 4D89D7                          mov r15, r10
 25906 0000FCED 4983C7FF                        add r15, -1
 25907                                                                                         
 25908 0000FCF1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25909 0000FCF4 4983C404                        add r12, 4
 25910 0000FCF8 4983C4FF                        add r12, -1
 25911                                  
 25912 0000FCFC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25913                                  .L_tc_recycle_frame_loop_04e2:
 25914 0000FD02 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 25915                                  
 25916 0000FD06 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25917                                  
 25918                                  
 25919                                  
 25920 0000FD0B 41BE00000000                    mov r14, 0                                ; clean box
 25921                                  
 25922                                  
 25923 0000FD11 4983C7FF                        add r15, -1           
 25924 0000FD15 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25925                                  
 25926 0000FD19 4983C4FF                        add r12, -1 
 25927                                  
 25928 0000FD1D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25929 0000FD21 75DF                    	jne .L_tc_recycle_frame_loop_04e2
 25930                                  .L_tc_recycle_frame_done_04e2:
 25931                                  ;this pop rbp in sot to the right place
 25932 0000FD23 4D89C7                  mov r15, r8
 25933                                  
 25934 0000FD26 4983C704                        add r15, 4
 25935                                  
 25936 0000FD2A 49C1E703                        shl r15, 3
 25937                                  
 25938 0000FD2E 4C01FC                          add rsp, r15
 25939 0000FD31 5D                      	pop rbp                                  ; restore the old rbp
 25940                                  
 25941 0000FD32 488B4D00                        mov rcx, qword [rbp]
 25942 0000FD36 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25943                                            ; rbx <- code(proc)
 25944                                  
 25945 0000FD3A FFE3                            jmp rbx
 25946 0000FD3C C9                      leave
 25947 0000FD3D 4C8B4D00                mov r9, [rbp]
 25948 0000FD41 C22000                  ret 8 * (3 + 1)
 25949                                  .L_lambda_opt_end_009f:	; new closure is in rax
 25950 0000FD44 C9                      	leave
 25951 0000FD45 C21800                  	ret 8 * (2 + 1)
 25952                                  .L_lambda_simple_end_042d:	; new closure is in rax
 25953 0000FD48 803805                  	cmp byte [rax], T_closure 
 25954 0000FD4B 0F85B13A0000                    jne L_code_ptr_error
 25955                                  
 25956 0000FD51 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25957                                  
 25958 0000FD55 53                              push rbx
 25959                                  
 25960 0000FD56 FF5009                          call SOB_CLOSURE_CODE(rax)
 25961                                  
 25962 0000FD59 48890425[98010000]              	mov qword [free_var_51], rax
 25963 0000FD61 48B8-                   	mov rax, sob_void
 25963 0000FD63 [0000000000000000] 
 25964                                  
 25965 0000FD6B 4889C7                  	mov rdi, rax
 25966 0000FD6E E8E52A0000              	call print_sexpr_if_not_void
 25967                                  
 25968 0000FD73 488B0425[A0010000]      	mov rax, qword [free_var_52]
 25969 0000FD7B 50                      	push rax
 25970 0000FD7C 6A01                    	push 1
 25971 0000FD7E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25972 0000FD83 E8BF2A0000              	call malloc
 25973 0000FD88 50                      	push rax
 25974 0000FD89 BF00000000              	mov rdi, 8 * 0	; new rib
 25975 0000FD8E E8B42A0000              	call malloc
 25976 0000FD93 50                      	push rax
 25977 0000FD94 BF08000000              	mov rdi, 8 * 1	; extended env
 25978 0000FD99 E8A92A0000              	call malloc
 25979 0000FD9E 488B7D10                	mov rdi, ENV
 25980 0000FDA2 BE00000000              	mov rsi, 0
 25981 0000FDA7 BA01000000              	mov rdx, 1
 25982                                  .L_lambda_simple_env_loop_042f:	; ext_env[i + 1] <-- env[i]
 25983 0000FDAC 4883FE00                	cmp rsi, 0
 25984 0000FDB0 7410                    	je .L_lambda_simple_env_end_042f
 25985 0000FDB2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25986 0000FDB6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25987 0000FDBA 48FFC6                  	inc rsi
 25988 0000FDBD 48FFC2                  	inc rdx
 25989 0000FDC0 EBEA                    	jmp .L_lambda_simple_env_loop_042f
 25990                                  .L_lambda_simple_env_end_042f:
 25991 0000FDC2 5B                      	pop rbx
 25992 0000FDC3 BE00000000              	mov rsi, 0
 25993                                  .L_lambda_simple_params_loop_042f:	; copy params
 25994 0000FDC8 4883FE00                	cmp rsi, 0
 25995 0000FDCC 740E                    	je .L_lambda_simple_params_end_042f
 25996 0000FDCE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25997 0000FDD3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25998 0000FDD7 48FFC6                  	inc rsi
 25999 0000FDDA EBEC                    	jmp .L_lambda_simple_params_loop_042f
 26000                                  .L_lambda_simple_params_end_042f:
 26001 0000FDDC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26002 0000FDDF 4889C3                  	mov rbx, rax
 26003 0000FDE2 58                      	pop rax
 26004 0000FDE3 C60005                  	mov byte [rax], T_closure
 26005 0000FDE6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26006 0000FDEA 48C74009[F7FD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_042f
 26007 0000FDF2 E931040000              	jmp .L_lambda_simple_end_042f
 26008                                  .L_lambda_simple_code_042f:	; lambda-simple body
 26009 0000FDF7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26010 0000FDFD 740B                    	je .L_lambda_simple_arity_check_ok_0911
 26011 0000FDFF FF742410                	push qword [rsp + 8 * 2]
 26012 0000FE03 6A01                    	push 1
 26013 0000FE05 E9F6290000              	jmp L_error_incorrect_arity_simple
 26014                                  .L_lambda_simple_arity_check_ok_0911:
 26015 0000FE0A C8000000                	enter 0, 0
 26016 0000FE0E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26017 0000FE13 E82F2A0000              	call malloc
 26018 0000FE18 50                      	push rax
 26019 0000FE19 BF08000000              	mov rdi, 8 * 1	; new rib
 26020 0000FE1E E8242A0000              	call malloc
 26021 0000FE23 50                      	push rax
 26022 0000FE24 BF10000000              	mov rdi, 8 * 2	; extended env
 26023 0000FE29 E8192A0000              	call malloc
 26024 0000FE2E 488B7D10                	mov rdi, ENV
 26025 0000FE32 BE00000000              	mov rsi, 0
 26026 0000FE37 BA01000000              	mov rdx, 1
 26027                                  .L_lambda_opt_env_loop_00a0:	; ext_env[i + 1] <-- env[i]
 26028 0000FE3C 4883FE01                	cmp rsi, 1
 26029 0000FE40 7410                    	je .L_lambda_opt_env_end_00a0
 26030 0000FE42 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26031 0000FE46 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26032 0000FE4A 48FFC6                  	inc rsi
 26033 0000FE4D 48FFC2                  	inc rdx
 26034 0000FE50 EBEA                    	jmp .L_lambda_opt_env_loop_00a0
 26035                                  .L_lambda_opt_env_end_00a0:
 26036 0000FE52 5B                      	pop rbx
 26037 0000FE53 BE00000000              	mov rsi, 0
 26038                                  .L_lambda_opt_params_loop_01de:	; copy params
 26039 0000FE58 4883FE01                	cmp rsi, 1
 26040 0000FE5C 740E                    	je .L_lambda_opt_params_end_01de
 26041 0000FE5E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26042 0000FE63 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26043 0000FE67 48FFC6                  	inc rsi
 26044 0000FE6A EBEC                    	jmp .L_lambda_opt_params_loop_01de
 26045                                  .L_lambda_opt_params_end_01de:
 26046 0000FE6C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26047 0000FE6F 4889C3                  	mov rbx, rax
 26048 0000FE72 58                      	pop rax
 26049 0000FE73 C60005                  	mov byte [rax], T_closure
 26050 0000FE76 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26051 0000FE7A 48C74009[87FE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00a0
 26052 0000FE82 E99D030000              	jmp .L_lambda_opt_end_00a0
 26053                                  .L_lambda_opt_code_00a0:
 26054 0000FE87 4C8B542410              mov r10, qword [rsp+8*2]
 26055 0000FE8C 4983FA01                cmp r10, 1
 26056 0000FE90 740B                    je .L_lambda_opt_arity_check_exact_00a0
 26057 0000FE92 4983FA01                cmp r10, 1
 26058 0000FE96 7F44                    jg .L_lambda_opt_arity_check_more_00a0
 26059 0000FE98 E977290000              jmp L_error_incorrect_arity_opt
 26060                                  .L_lambda_opt_arity_check_exact_00a0:
 26061 0000FE9D 4883EC08                sub rsp, 8
 26062 0000FEA1 BA04000000              mov rdx, 3+1
 26063 0000FEA6 4889E3                  mov qword rbx, rsp
 26064                                  .L_lambda_opt_params_loop_01df:
 26065 0000FEA9 488B4B08                mov qword rcx, [rbx+8]
 26066 0000FEAD 48890B                  mov qword [rbx], rcx
 26067 0000FEB0 48FFCA                  dec rdx
 26068 0000FEB3 4883C308                add rbx, 8
 26069 0000FEB7 4883FA00                cmp rdx, 0
 26070 0000FEBB 7402                    je .L_lambda_opt_params_end_01df
 26071 0000FEBD EBEA                    jmp .L_lambda_opt_params_loop_01df
 26072                                  .L_lambda_opt_params_end_01df:
 26073 0000FEBF 49FFC2                  inc r10
 26074 0000FEC2 4C89542410              mov qword [rsp+8*2], r10
 26075 0000FEC7 4983C202                add r10, 2
 26076 0000FECB 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 26077 0000FED3 4C8B4D00                mov r9, [rbp]
 26078 0000FED7 E996000000              jmp .L_lambda_opt_stack_adjusted_00a0
 26079                                  .L_lambda_opt_arity_check_more_00a0:
 26080 0000FEDC 4C8B6C2410              mov r13, [rsp+2*8]
 26081 0000FEE1 48B8-                   mov rax, sob_nil
 26081 0000FEE3 [0100000000000000] 
 26082 0000FEEB 4C8B542410              mov r10, [rsp+2*8]
 26083 0000FEF0 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 26084 0000FEF5 4983EA01                sub r10, 1
 26085                                  .L_lambda_opt_stack_shrink_loop_00a0:
 26086 0000FEF9 4983FA00                cmp r10, 0
 26087 0000FEFD 7424                    je .L_lambda_opt_stack_shrink_loop_exit_00a0
 26088 0000FEFF 4889C1                  mov rcx, rax
 26089 0000FF02 498B10                  mov rdx, [r8]
 26090 0000FF05 BF11000000              mov rdi, 17
 26091 0000FF0A E838290000              call malloc
 26092 0000FF0F C60021                  mov byte [rax], T_pair
 26093 0000FF12 48894809                mov SOB_PAIR_CDR(rax), rcx
 26094 0000FF16 48895001                mov SOB_PAIR_CAR(rax), rdx
 26095 0000FF1A 4983E808                sub r8, 8
 26096 0000FF1E 49FFCA                  dec r10
 26097 0000FF21 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_00a0
 26098                                  .L_lambda_opt_stack_shrink_loop_exit_00a0:
 26099 0000FF23 4889442420              mov [rsp+8*(2+2)], rax
 26100 0000FF28 41BA02000000            mov r10, 2
 26101 0000FF2E 4C89542410              mov [rsp+16], r10
 26102 0000FF33 4989E4                  mov r12, rsp
 26103 0000FF36 4983C420                add r12, 8*(2+2)
 26104 0000FF3A 4C2B6C2410              sub r13, [rsp+16]
 26105 0000FF3F 4D89EA                  mov r10, r13
 26106 0000FF42 49C1E203                shl r10, 3
 26107 0000FF46 4D89D7                  mov r15, r10
 26108 0000FF49 4D01E2                  add r10, r12
 26109 0000FF4C 4C8B4C2410              mov r9, [rsp+16]
 26110 0000FF51 4983C103                add r9, 3
 26111                                  .L_lambda_opt_params_loop_01e0:
 26112 0000FF55 4983F900                cmp r9, 0
 26113 0000FF59 7414                    je .L_lambda_opt_params_end_01e0
 26114 0000FF5B 4D8B3424                mov r14, [r12]
 26115 0000FF5F 4D8932                  mov [r10], r14
 26116 0000FF62 4983EC08                sub r12, 8
 26117 0000FF66 4983EA08                sub r10, 8
 26118 0000FF6A 49FFC9                  dec r9
 26119 0000FF6D EBE6                    jmp .L_lambda_opt_params_loop_01e0
 26120                                  .L_lambda_opt_params_end_01e0:
 26121 0000FF6F 4C01FC                  add rsp, r15
 26122                                  .L_lambda_opt_stack_adjusted_00a0:
 26123 0000FF72 4C8B4D00                mov r9, [rbp]
 26124 0000FF76 C8000000                enter 0, 0
 26125 0000FF7A 488B4528                mov rax, qword [rbp + 40]
 26126 0000FF7E 50                      	push rax
 26127 0000FF7F 6A01                    	push 1
 26128 0000FF81 488B0425[00000000]      	mov rax, qword [free_var_0]
 26129 0000FF89 803805                  	cmp byte [rax], T_closure 
 26130 0000FF8C 0F8570380000                    jne L_code_ptr_error
 26131                                  
 26132 0000FF92 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26133                                  
 26134 0000FF96 53                              push rbx
 26135                                  
 26136 0000FF97 FF5009                          call SOB_CLOSURE_CODE(rax)
 26137                                  
 26138 0000FF9A 483D[02000000]                  	cmp rax, sob_boolean_false
 26139 0000FFA0 740F                    	je .L_if_else_0281
 26140 0000FFA2 48B8-                   	mov rax, qword (L_constants + 4)
 26140 0000FFA4 [0400000000000000] 
 26141 0000FFAC E9CB000000              	jmp .L_if_end_0281
 26142                                  	.L_if_else_0281:
 26143 0000FFB1 488B4528                	mov rax, qword [rbp + 40]
 26144 0000FFB5 50                      	push rax
 26145 0000FFB6 6A01                    	push 1
 26146 0000FFB8 488B0425[08000000]      	mov rax, qword [free_var_1]
 26147 0000FFC0 803805                  	cmp byte [rax], T_closure 
 26148 0000FFC3 0F8539380000                    jne L_code_ptr_error
 26149                                  
 26150 0000FFC9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26151                                  
 26152 0000FFCD 53                              push rbx
 26153                                  
 26154 0000FFCE FF5009                          call SOB_CLOSURE_CODE(rax)
 26155                                  
 26156 0000FFD1 483D[02000000]                  	cmp rax, sob_boolean_false
 26157 0000FFD7 743E                    	je .L_if_else_0283
 26158 0000FFD9 488B4528                mov rax, qword [rbp + 40]
 26159 0000FFDD 50                      	push rax
 26160 0000FFDE 6A01                    	push 1
 26161 0000FFE0 488B0425[88000000]      	mov rax, qword [free_var_17]
 26162 0000FFE8 803805                  	cmp byte [rax], T_closure 
 26163 0000FFEB 0F8511380000                    jne L_code_ptr_error
 26164                                  
 26165 0000FFF1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26166                                  
 26167 0000FFF5 53                              push rbx
 26168                                  
 26169 0000FFF6 FF5009                          call SOB_CLOSURE_CODE(rax)
 26170                                  
 26171 0000FFF9 50                              	push rax
 26172 0000FFFA 6A01                    	push 1
 26173 0000FFFC 488B0425[00000000]      	mov rax, qword [free_var_0]
 26174 00010004 803805                  	cmp byte [rax], T_closure 
 26175 00010007 0F85F5370000                    jne L_code_ptr_error
 26176                                  
 26177 0001000D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26178                                  
 26179 00010011 53                              push rbx
 26180                                  
 26181 00010012 FF5009                          call SOB_CLOSURE_CODE(rax)
 26182                                  
 26183 00010015 EB0A                            	jmp .L_if_end_0283
 26184                                  	.L_if_else_0283:
 26185 00010017 48B8-                   		mov rax, qword (L_constants + 2)
 26185 00010019 [0200000000000000] 
 26186                                  	.L_if_end_0283:
 26187 00010021 483D[02000000]          	cmp rax, sob_boolean_false
 26188 00010027 7422                    	je .L_if_else_0282
 26189 00010029 488B4528                mov rax, qword [rbp + 40]
 26190 0001002D 50                      	push rax
 26191 0001002E 6A01                    	push 1
 26192 00010030 488B0425[80000000]      	mov rax, qword [free_var_16]
 26193 00010038 803805                  	cmp byte [rax], T_closure 
 26194 0001003B 0F85C1370000                    jne L_code_ptr_error
 26195                                  
 26196 00010041 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26197                                  
 26198 00010045 53                              push rbx
 26199                                  
 26200 00010046 FF5009                          call SOB_CLOSURE_CODE(rax)
 26201                                  
 26202 00010049 EB31                            	jmp .L_if_end_0282
 26203                                  	.L_if_else_0282:
 26204 0001004B 48B8-                   		mov rax, qword (L_constants + 459)
 26204 0001004D [CB01000000000000] 
 26205 00010055 50                      	push rax
 26206 00010056 48B8-                   	mov rax, qword (L_constants + 450)
 26206 00010058 [C201000000000000] 
 26207 00010060 50                      	push rax
 26208 00010061 6A02                    	push 2
 26209 00010063 488B0425[30010000]      	mov rax, qword [free_var_38]
 26210 0001006B 803805                  	cmp byte [rax], T_closure 
 26211 0001006E 0F858E370000                    jne L_code_ptr_error
 26212                                  
 26213 00010074 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26214                                  
 26215 00010078 53                              push rbx
 26216                                  
 26217 00010079 FF5009                          call SOB_CLOSURE_CODE(rax)
 26218                                  
 26219                                          	.L_if_end_0282:
 26220                                  	.L_if_end_0281:
 26221 0001007C 50                      	push rax
 26222 0001007D 6A01                    	push 1
 26223 0001007F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26224 00010084 E8BE270000              	call malloc
 26225 00010089 50                      	push rax
 26226 0001008A BF10000000              	mov rdi, 8 * 2	; new rib
 26227 0001008F E8B3270000              	call malloc
 26228 00010094 50                      	push rax
 26229 00010095 BF18000000              	mov rdi, 8 * 3	; extended env
 26230 0001009A E8A8270000              	call malloc
 26231 0001009F 488B7D10                	mov rdi, ENV
 26232 000100A3 BE00000000              	mov rsi, 0
 26233 000100A8 BA01000000              	mov rdx, 1
 26234                                  .L_lambda_simple_env_loop_0430:	; ext_env[i + 1] <-- env[i]
 26235 000100AD 4883FE02                	cmp rsi, 2
 26236 000100B1 7410                    	je .L_lambda_simple_env_end_0430
 26237 000100B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26238 000100B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26239 000100BB 48FFC6                  	inc rsi
 26240 000100BE 48FFC2                  	inc rdx
 26241 000100C1 EBEA                    	jmp .L_lambda_simple_env_loop_0430
 26242                                  .L_lambda_simple_env_end_0430:
 26243 000100C3 5B                      	pop rbx
 26244 000100C4 BE00000000              	mov rsi, 0
 26245                                  .L_lambda_simple_params_loop_0430:	; copy params
 26246 000100C9 4883FE02                	cmp rsi, 2
 26247 000100CD 740E                    	je .L_lambda_simple_params_end_0430
 26248 000100CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26249 000100D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26250 000100D8 48FFC6                  	inc rsi
 26251 000100DB EBEC                    	jmp .L_lambda_simple_params_loop_0430
 26252                                  .L_lambda_simple_params_end_0430:
 26253 000100DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26254 000100E0 4889C3                  	mov rbx, rax
 26255 000100E3 58                      	pop rax
 26256 000100E4 C60005                  	mov byte [rax], T_closure
 26257 000100E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26258 000100EB 48C74009[F8000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0430
 26259 000100F3 E9AE000000              	jmp .L_lambda_simple_end_0430
 26260                                  .L_lambda_simple_code_0430:	; lambda-simple body
 26261 000100F8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26262 000100FE 740B                    	je .L_lambda_simple_arity_check_ok_0912
 26263 00010100 FF742410                	push qword [rsp + 8 * 2]
 26264 00010104 6A01                    	push 1
 26265 00010106 E9F5260000              	jmp L_error_incorrect_arity_simple
 26266                                  .L_lambda_simple_arity_check_ok_0912:
 26267 0001010B C8000000                	enter 0, 0
 26268 0001010F 488B4520                mov rax, qword [rbp + 32]
 26269 00010113 50                      	push rax
 26270 00010114 488B4510                mov rax, qword [rbp + 16]
 26271 00010118 488B00                  mov rax, qword [rax + 0]
 26272 0001011B 488B00                  mov rax, qword [rax + 0]
 26273 0001011E 50                      	push rax
 26274 0001011F 6A02                    	push 2
 26275 00010121 488B4510                mov rax, qword [rbp + 16]
 26276 00010125 488B4008                mov rax, qword [rax + 8]
 26277 00010129 488B00                  mov rax, qword [rax + 0]
 26278                                  .L_lambda_simple_arity_check_ok_0913:
 26279 0001012C 803805                  	cmp byte [rax], T_closure
 26280                                  
 26281 0001012F 0F85CD360000                    jne L_code_ptr_error                      ; rax <- proc
 26282                                  
 26283                                  
 26284 00010135 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26285                                  
 26286 00010139 53                              push rbx                                  ; env pushed
 26287                                  
 26288 0001013A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26289                                  
 26290                                          ; sagydebug
 26291                                  
 26292 0001013D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26293                                  
 26294                                          
 26295                                          
 26296 00010140 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26297                                  
 26298 00010144 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26299                                  
 26300                                  
 26301 00010149 4D89CA                          mov r10, r9
 26302 0001014C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 26303                                          
 26304 00010150 4D89D7                          mov r15, r10
 26305 00010153 4983C7FF                        add r15, -1
 26306                                                                                         
 26307 00010157 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26308 0001015A 4983C404                        add r12, 4
 26309 0001015E 4983C4FF                        add r12, -1
 26310                                  
 26311 00010162 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26312                                  .L_tc_recycle_frame_loop_04e3:
 26313 00010168 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 26314                                  
 26315 0001016C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26316                                  
 26317                                  
 26318                                  
 26319 00010171 41BE00000000                    mov r14, 0                                ; clean box
 26320                                  
 26321                                  
 26322 00010177 4983C7FF                        add r15, -1           
 26323 0001017B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26324                                  
 26325 0001017F 4983C4FF                        add r12, -1 
 26326                                  
 26327 00010183 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26328 00010187 75DF                    	jne .L_tc_recycle_frame_loop_04e3
 26329                                  .L_tc_recycle_frame_done_04e3:
 26330                                  ;this pop rbp in sot to the right place
 26331 00010189 4D89C7                  mov r15, r8
 26332                                  
 26333 0001018C 4983C704                        add r15, 4
 26334                                  
 26335 00010190 49C1E703                        shl r15, 3
 26336                                  
 26337 00010194 4C01FC                          add rsp, r15
 26338 00010197 5D                      	pop rbp                                  ; restore the old rbp
 26339                                  
 26340 00010198 488B4D00                        mov rcx, qword [rbp]
 26341 0001019C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26342                                            ; rbx <- code(proc)
 26343                                  
 26344 000101A0 FFE3                            jmp rbx
 26345 000101A2 C9                      	leave
 26346 000101A3 C21800                  	ret 8 * (2 + 1)
 26347                                  .L_lambda_simple_end_0430:	; new closure is in rax
 26348                                  .L_lambda_simple_arity_check_ok_0914:
 26349 000101A6 803805                  	cmp byte [rax], T_closure
 26350                                  
 26351 000101A9 0F8553360000                    jne L_code_ptr_error                      ; rax <- proc
 26352                                  
 26353                                  
 26354 000101AF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26355                                  
 26356 000101B3 53                              push rbx                                  ; env pushed
 26357                                  
 26358 000101B4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26359                                  
 26360                                          ; sagydebug
 26361                                  
 26362 000101B7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26363                                  
 26364                                          
 26365                                          
 26366 000101BA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26367                                  
 26368 000101BE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26369                                  
 26370                                  
 26371 000101C3 4D89CA                          mov r10, r9
 26372 000101C6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 26373                                          
 26374 000101CA 4D89D7                          mov r15, r10
 26375 000101CD 4983C7FF                        add r15, -1
 26376                                                                                         
 26377 000101D1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26378 000101D4 4983C404                        add r12, 4
 26379 000101D8 4983C4FF                        add r12, -1
 26380                                  
 26381 000101DC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26382                                  .L_tc_recycle_frame_loop_04e4:
 26383 000101E2 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 26384                                  
 26385 000101E6 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26386                                  
 26387                                  
 26388                                  
 26389 000101EB 41BE00000000                    mov r14, 0                                ; clean box
 26390                                  
 26391                                  
 26392 000101F1 4983C7FF                        add r15, -1           
 26393 000101F5 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26394                                  
 26395 000101F9 4983C4FF                        add r12, -1 
 26396                                  
 26397 000101FD 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26398 00010201 75DF                    	jne .L_tc_recycle_frame_loop_04e4
 26399                                  .L_tc_recycle_frame_done_04e4:
 26400                                  ;this pop rbp in sot to the right place
 26401 00010203 4D89C7                  mov r15, r8
 26402                                  
 26403 00010206 4983C704                        add r15, 4
 26404                                  
 26405 0001020A 49C1E703                        shl r15, 3
 26406                                  
 26407 0001020E 4C01FC                          add rsp, r15
 26408 00010211 5D                      	pop rbp                                  ; restore the old rbp
 26409                                  
 26410 00010212 488B4D00                        mov rcx, qword [rbp]
 26411 00010216 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26412                                            ; rbx <- code(proc)
 26413                                  
 26414 0001021A FFE3                            jmp rbx
 26415 0001021C C9                      leave
 26416 0001021D 4C8B4D00                mov r9, [rbp]
 26417 00010221 C22000                  ret 8 * (3 + 1)
 26418                                  .L_lambda_opt_end_00a0:	; new closure is in rax
 26419 00010224 C9                      	leave
 26420 00010225 C21800                  	ret 8 * (2 + 1)
 26421                                  .L_lambda_simple_end_042f:	; new closure is in rax
 26422 00010228 803805                  	cmp byte [rax], T_closure 
 26423 0001022B 0F85D1350000                    jne L_code_ptr_error
 26424                                  
 26425 00010231 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26426                                  
 26427 00010235 53                              push rbx
 26428                                  
 26429 00010236 FF5009                          call SOB_CLOSURE_CODE(rax)
 26430                                  
 26431 00010239 48890425[A0010000]              	mov qword [free_var_52], rax
 26432 00010241 48B8-                   	mov rax, sob_void
 26432 00010243 [0000000000000000] 
 26433                                  
 26434 0001024B 4889C7                  	mov rdi, rax
 26435 0001024E E805260000              	call print_sexpr_if_not_void
 26436                                  
 26437 00010253 48B8-                   	mov rax, qword (L_constants + 22)
 26437 00010255 [1600000000000000] 
 26438 0001025D 50                      	push rax
 26439 0001025E 6A01                    	push 1
 26440 00010260 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26441 00010265 E8DD250000              	call malloc
 26442 0001026A 50                      	push rax
 26443 0001026B BF00000000              	mov rdi, 8 * 0	; new rib
 26444 00010270 E8D2250000              	call malloc
 26445 00010275 50                      	push rax
 26446 00010276 BF08000000              	mov rdi, 8 * 1	; extended env
 26447 0001027B E8C7250000              	call malloc
 26448 00010280 488B7D10                	mov rdi, ENV
 26449 00010284 BE00000000              	mov rsi, 0
 26450 00010289 BA01000000              	mov rdx, 1
 26451                                  .L_lambda_simple_env_loop_0431:	; ext_env[i + 1] <-- env[i]
 26452 0001028E 4883FE00                	cmp rsi, 0
 26453 00010292 7410                    	je .L_lambda_simple_env_end_0431
 26454 00010294 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26455 00010298 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26456 0001029C 48FFC6                  	inc rsi
 26457 0001029F 48FFC2                  	inc rdx
 26458 000102A2 EBEA                    	jmp .L_lambda_simple_env_loop_0431
 26459                                  .L_lambda_simple_env_end_0431:
 26460 000102A4 5B                      	pop rbx
 26461 000102A5 BE00000000              	mov rsi, 0
 26462                                  .L_lambda_simple_params_loop_0431:	; copy params
 26463 000102AA 4883FE00                	cmp rsi, 0
 26464 000102AE 740E                    	je .L_lambda_simple_params_end_0431
 26465 000102B0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26466 000102B5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26467 000102B9 48FFC6                  	inc rsi
 26468 000102BC EBEC                    	jmp .L_lambda_simple_params_loop_0431
 26469                                  .L_lambda_simple_params_end_0431:
 26470 000102BE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26471 000102C1 4889C3                  	mov rbx, rax
 26472 000102C4 58                      	pop rax
 26473 000102C5 C60005                  	mov byte [rax], T_closure
 26474 000102C8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26475 000102CC 48C74009[D9020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0431
 26476 000102D4 E99A040000              	jmp .L_lambda_simple_end_0431
 26477                                  .L_lambda_simple_code_0431:	; lambda-simple body
 26478 000102D9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26479 000102DF 740B                    	je .L_lambda_simple_arity_check_ok_0915
 26480 000102E1 FF742410                	push qword [rsp + 8 * 2]
 26481 000102E5 6A01                    	push 1
 26482 000102E7 E914250000              	jmp L_error_incorrect_arity_simple
 26483                                  .L_lambda_simple_arity_check_ok_0915:
 26484 000102EC C8000000                	enter 0, 0
 26485 000102F0 488B4520                mov rax, qword [rbp + 32]
 26486 000102F4 BF08000000              mov rdi, 8
 26487 000102F9 4889C3                  mov rbx, rax
 26488 000102FC E846250000              call malloc
 26489 00010301 488918                  mov qword [rax], rbx
 26490 00010304 48894520                mov qword [rbp + 32], rax
 26491 00010308 48B8-                   mov rax, sob_void
 26491 0001030A [0000000000000000] 
 26492 00010312 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26493 00010317 E82B250000              	call malloc
 26494 0001031C 50                      	push rax
 26495 0001031D BF08000000              	mov rdi, 8 * 1	; new rib
 26496 00010322 E820250000              	call malloc
 26497 00010327 50                      	push rax
 26498 00010328 BF10000000              	mov rdi, 8 * 2	; extended env
 26499 0001032D E815250000              	call malloc
 26500 00010332 488B7D10                	mov rdi, ENV
 26501 00010336 BE00000000              	mov rsi, 0
 26502 0001033B BA01000000              	mov rdx, 1
 26503                                  .L_lambda_simple_env_loop_0432:	; ext_env[i + 1] <-- env[i]
 26504 00010340 4883FE01                	cmp rsi, 1
 26505 00010344 7410                    	je .L_lambda_simple_env_end_0432
 26506 00010346 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26507 0001034A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26508 0001034E 48FFC6                  	inc rsi
 26509 00010351 48FFC2                  	inc rdx
 26510 00010354 EBEA                    	jmp .L_lambda_simple_env_loop_0432
 26511                                  .L_lambda_simple_env_end_0432:
 26512 00010356 5B                      	pop rbx
 26513 00010357 BE00000000              	mov rsi, 0
 26514                                  .L_lambda_simple_params_loop_0432:	; copy params
 26515 0001035C 4883FE01                	cmp rsi, 1
 26516 00010360 740E                    	je .L_lambda_simple_params_end_0432
 26517 00010362 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26518 00010367 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26519 0001036B 48FFC6                  	inc rsi
 26520 0001036E EBEC                    	jmp .L_lambda_simple_params_loop_0432
 26521                                  .L_lambda_simple_params_end_0432:
 26522 00010370 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26523 00010373 4889C3                  	mov rbx, rax
 26524 00010376 58                      	pop rax
 26525 00010377 C60005                  	mov byte [rax], T_closure
 26526 0001037A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26527 0001037E 48C74009[8B030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0432
 26528 00010386 E9AA020000              	jmp .L_lambda_simple_end_0432
 26529                                  .L_lambda_simple_code_0432:	; lambda-simple body
 26530 0001038B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 26531 00010391 740B                    	je .L_lambda_simple_arity_check_ok_0916
 26532 00010393 FF742410                	push qword [rsp + 8 * 2]
 26533 00010397 6A02                    	push 2
 26534 00010399 E962240000              	jmp L_error_incorrect_arity_simple
 26535                                  .L_lambda_simple_arity_check_ok_0916:
 26536 0001039E C8000000                	enter 0, 0
 26537 000103A2 488B4520                mov rax, qword [rbp + 32]
 26538 000103A6 50                      	push rax
 26539 000103A7 6A01                    	push 1
 26540 000103A9 488B0425[00000000]      	mov rax, qword [free_var_0]
 26541 000103B1 803805                  	cmp byte [rax], T_closure 
 26542 000103B4 0F8548340000                    jne L_code_ptr_error
 26543                                  
 26544 000103BA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26545                                  
 26546 000103BE 53                              push rbx
 26547                                  
 26548 000103BF FF5009                          call SOB_CLOSURE_CODE(rax)
 26549                                  
 26550 000103C2 483D[02000000]                  	cmp rax, sob_boolean_false
 26551 000103C8 0F8495000000            	je .L_if_else_0284
 26552 000103CE 48B8-                   	mov rax, qword (L_constants + 0)
 26552 000103D0 [0000000000000000] 
 26553 000103D8 50                      	push rax
 26554 000103D9 488B4528                mov rax, qword [rbp + 40]
 26555 000103DD 50                      	push rax
 26556 000103DE 6A02                    	push 2
 26557 000103E0 488B0425[98010000]      	mov rax, qword [free_var_51]
 26558                                  .L_lambda_simple_arity_check_ok_0919:
 26559 000103E8 803805                  	cmp byte [rax], T_closure
 26560                                  
 26561 000103EB 0F8511340000                    jne L_code_ptr_error                      ; rax <- proc
 26562                                  
 26563                                  
 26564 000103F1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26565                                  
 26566 000103F5 53                              push rbx                                  ; env pushed
 26567                                  
 26568 000103F6 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26569                                  
 26570                                          ; sagydebug
 26571                                  
 26572 000103F9 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26573                                  
 26574                                          
 26575                                          
 26576 000103FC 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26577                                  
 26578 00010400 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26579                                  
 26580                                  
 26581 00010405 4D89CA                          mov r10, r9
 26582 00010408 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 26583                                          
 26584 0001040C 4D89D7                          mov r15, r10
 26585 0001040F 4983C7FF                        add r15, -1
 26586                                                                                         
 26587 00010413 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26588 00010416 4983C404                        add r12, 4
 26589 0001041A 4983C4FF                        add r12, -1
 26590                                  
 26591 0001041E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26592                                  .L_tc_recycle_frame_loop_04e6:
 26593 00010424 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 26594                                  
 26595 00010428 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26596                                  
 26597                                  
 26598                                  
 26599 0001042D 41BE00000000                    mov r14, 0                                ; clean box
 26600                                  
 26601                                  
 26602 00010433 4983C7FF                        add r15, -1           
 26603 00010437 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26604                                  
 26605 0001043B 4983C4FF                        add r12, -1 
 26606                                  
 26607 0001043F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26608 00010443 75DF                    	jne .L_tc_recycle_frame_loop_04e6
 26609                                  .L_tc_recycle_frame_done_04e6:
 26610                                  ;this pop rbp in sot to the right place
 26611 00010445 4D89C7                  mov r15, r8
 26612                                  
 26613 00010448 4983C704                        add r15, 4
 26614                                  
 26615 0001044C 49C1E703                        shl r15, 3
 26616                                  
 26617 00010450 4C01FC                          add rsp, r15
 26618 00010453 5D                      	pop rbp                                  ; restore the old rbp
 26619                                  
 26620 00010454 488B4D00                        mov rcx, qword [rbp]
 26621 00010458 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26622                                            ; rbx <- code(proc)
 26623                                  
 26624 0001045C FFE3                            jmp rbx
 26625 0001045E E9CE010000              	jmp .L_if_end_0284
 26626                                  	.L_if_else_0284:
 26627 00010463 48B8-                   		mov rax, qword (L_constants + 127)
 26627 00010465 [7F00000000000000] 
 26628 0001046D 50                      	push rax
 26629 0001046E 488B4528                mov rax, qword [rbp + 40]
 26630 00010472 50                      	push rax
 26631 00010473 6A02                    	push 2
 26632 00010475 488B0425[08030000]      	mov rax, qword [free_var_97]
 26633 0001047D 803805                  	cmp byte [rax], T_closure 
 26634 00010480 0F857C330000                    jne L_code_ptr_error
 26635                                  
 26636 00010486 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26637                                  
 26638 0001048A 53                              push rbx
 26639                                  
 26640 0001048B FF5009                          call SOB_CLOSURE_CODE(rax)
 26641                                  
 26642 0001048E 50                              	push rax
 26643 0001048F 488B4520                mov rax, qword [rbp + 32]
 26644 00010493 50                      	push rax
 26645 00010494 6A01                    	push 1
 26646 00010496 488B0425[88000000]      	mov rax, qword [free_var_17]
 26647 0001049E 803805                  	cmp byte [rax], T_closure 
 26648 000104A1 0F855B330000                    jne L_code_ptr_error
 26649                                  
 26650 000104A7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26651                                  
 26652 000104AB 53                              push rbx
 26653                                  
 26654 000104AC FF5009                          call SOB_CLOSURE_CODE(rax)
 26655                                  
 26656 000104AF 50                              	push rax
 26657 000104B0 6A02                    	push 2
 26658 000104B2 488B4510                mov rax, qword [rbp + 16]
 26659 000104B6 488B00                  mov rax, qword [rax + 0]
 26660 000104B9 488B00                  mov rax, qword [rax + 0]
 26661 000104BC 488B00                  	mov rax, qword [rax]
 26662 000104BF 803805                  	cmp byte [rax], T_closure 
 26663 000104C2 0F853A330000                    jne L_code_ptr_error
 26664                                  
 26665 000104C8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26666                                  
 26667 000104CC 53                              push rbx
 26668                                  
 26669 000104CD FF5009                          call SOB_CLOSURE_CODE(rax)
 26670                                  
 26671 000104D0 50                              	push rax
 26672 000104D1 6A01                    	push 1
 26673 000104D3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26674 000104D8 E86A230000              	call malloc
 26675 000104DD 50                      	push rax
 26676 000104DE BF10000000              	mov rdi, 8 * 2	; new rib
 26677 000104E3 E85F230000              	call malloc
 26678 000104E8 50                      	push rax
 26679 000104E9 BF18000000              	mov rdi, 8 * 3	; extended env
 26680 000104EE E854230000              	call malloc
 26681 000104F3 488B7D10                	mov rdi, ENV
 26682 000104F7 BE00000000              	mov rsi, 0
 26683 000104FC BA01000000              	mov rdx, 1
 26684                                  .L_lambda_simple_env_loop_0433:	; ext_env[i + 1] <-- env[i]
 26685 00010501 4883FE02                	cmp rsi, 2
 26686 00010505 7410                    	je .L_lambda_simple_env_end_0433
 26687 00010507 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26688 0001050B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26689 0001050F 48FFC6                  	inc rsi
 26690 00010512 48FFC2                  	inc rdx
 26691 00010515 EBEA                    	jmp .L_lambda_simple_env_loop_0433
 26692                                  .L_lambda_simple_env_end_0433:
 26693 00010517 5B                      	pop rbx
 26694 00010518 BE00000000              	mov rsi, 0
 26695                                  .L_lambda_simple_params_loop_0433:	; copy params
 26696 0001051D 4883FE02                	cmp rsi, 2
 26697 00010521 740E                    	je .L_lambda_simple_params_end_0433
 26698 00010523 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26699 00010528 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26700 0001052C 48FFC6                  	inc rsi
 26701 0001052F EBEC                    	jmp .L_lambda_simple_params_loop_0433
 26702                                  .L_lambda_simple_params_end_0433:
 26703 00010531 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26704 00010534 4889C3                  	mov rbx, rax
 26705 00010537 58                      	pop rax
 26706 00010538 C60005                  	mov byte [rax], T_closure
 26707 0001053B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26708 0001053F 48C74009[49050100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0433
 26709 00010547 EB72                    	jmp .L_lambda_simple_end_0433
 26710                                  .L_lambda_simple_code_0433:	; lambda-simple body
 26711 00010549 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26712 0001054F 740B                    	je .L_lambda_simple_arity_check_ok_0917
 26713 00010551 FF742410                	push qword [rsp + 8 * 2]
 26714 00010555 6A01                    	push 1
 26715 00010557 E9A4220000              	jmp L_error_incorrect_arity_simple
 26716                                  .L_lambda_simple_arity_check_ok_0917:
 26717 0001055C C8000000                	enter 0, 0
 26718 00010560 488B4510                mov rax, qword [rbp + 16]
 26719 00010564 488B00                  mov rax, qword [rax + 0]
 26720 00010567 488B00                  mov rax, qword [rax + 0]
 26721 0001056A 50                      	push rax
 26722 0001056B 6A01                    	push 1
 26723 0001056D 488B0425[80000000]      	mov rax, qword [free_var_16]
 26724 00010575 803805                  	cmp byte [rax], T_closure 
 26725 00010578 0F8584320000                    jne L_code_ptr_error
 26726                                  
 26727 0001057E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26728                                  
 26729 00010582 53                              push rbx
 26730                                  
 26731 00010583 FF5009                          call SOB_CLOSURE_CODE(rax)
 26732                                  
 26733 00010586 50                              	push rax
 26734 00010587 488B4510                mov rax, qword [rbp + 16]
 26735 0001058B 488B00                  mov rax, qword [rax + 0]
 26736 0001058E 488B4008                mov rax, qword [rax + 8]
 26737 00010592 50                      	push rax
 26738 00010593 488B4520                mov rax, qword [rbp + 32]
 26739 00010597 50                      	push rax
 26740 00010598 6A03                    	push 3
 26741 0001059A 488B0425[88010000]      	mov rax, qword [free_var_49]
 26742 000105A2 803805                  	cmp byte [rax], T_closure 
 26743 000105A5 0F8557320000                    jne L_code_ptr_error
 26744                                  
 26745 000105AB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26746                                  
 26747 000105AF 53                              push rbx
 26748                                  
 26749 000105B0 FF5009                          call SOB_CLOSURE_CODE(rax)
 26750                                  
 26751                                          
 26752 000105B3 488B4520                mov rax, qword [rbp + 32]
 26753 000105B7 C9                      	leave
 26754 000105B8 C21800                  	ret 8 * (2 + 1)
 26755                                  .L_lambda_simple_end_0433:	; new closure is in rax
 26756                                  .L_lambda_simple_arity_check_ok_0918:
 26757 000105BB 803805                  	cmp byte [rax], T_closure
 26758                                  
 26759 000105BE 0F853E320000                    jne L_code_ptr_error                      ; rax <- proc
 26760                                  
 26761                                  
 26762 000105C4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26763                                  
 26764 000105C8 53                              push rbx                                  ; env pushed
 26765                                  
 26766 000105C9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26767                                  
 26768                                          ; sagydebug
 26769                                  
 26770 000105CC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26771                                  
 26772                                          
 26773                                          
 26774 000105CF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26775                                  
 26776 000105D3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26777                                  
 26778                                  
 26779 000105D8 4D89CA                          mov r10, r9
 26780 000105DB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 26781                                          
 26782 000105DF 4D89D7                          mov r15, r10
 26783 000105E2 4983C7FF                        add r15, -1
 26784                                                                                         
 26785 000105E6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26786 000105E9 4983C404                        add r12, 4
 26787 000105ED 4983C4FF                        add r12, -1
 26788                                  
 26789 000105F1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26790                                  .L_tc_recycle_frame_loop_04e5:
 26791 000105F7 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 26792                                  
 26793 000105FB 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26794                                  
 26795                                  
 26796                                  
 26797 00010600 41BE00000000                    mov r14, 0                                ; clean box
 26798                                  
 26799                                  
 26800 00010606 4983C7FF                        add r15, -1           
 26801 0001060A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26802                                  
 26803 0001060E 4983C4FF                        add r12, -1 
 26804                                  
 26805 00010612 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26806 00010616 75DF                    	jne .L_tc_recycle_frame_loop_04e5
 26807                                  .L_tc_recycle_frame_done_04e5:
 26808                                  ;this pop rbp in sot to the right place
 26809 00010618 4D89C7                  mov r15, r8
 26810                                  
 26811 0001061B 4983C704                        add r15, 4
 26812                                  
 26813 0001061F 49C1E703                        shl r15, 3
 26814                                  
 26815 00010623 4C01FC                          add rsp, r15
 26816 00010626 5D                      	pop rbp                                  ; restore the old rbp
 26817                                  
 26818 00010627 488B4D00                        mov rcx, qword [rbp]
 26819 0001062B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26820                                            ; rbx <- code(proc)
 26821                                  
 26822 0001062F FFE3                            jmp rbx
 26823                                  	.L_if_end_0284:
 26824 00010631 C9                      	leave
 26825 00010632 C22000                  	ret 8 * (2 + 2)
 26826                                  .L_lambda_simple_end_0432:	; new closure is in rax
 26827 00010635 50                      push rax
 26828 00010636 488B4520                mov rax, qword [rbp + 32]
 26829 0001063A 8F00                    pop qword [rax]
 26830 0001063C 48B8-                   mov rax, sob_void
 26830 0001063E [0000000000000000] 
 26831                                  
 26832 00010646 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26833 0001064B E8F7210000              	call malloc
 26834 00010650 50                      	push rax
 26835 00010651 BF08000000              	mov rdi, 8 * 1	; new rib
 26836 00010656 E8EC210000              	call malloc
 26837 0001065B 50                      	push rax
 26838 0001065C BF10000000              	mov rdi, 8 * 2	; extended env
 26839 00010661 E8E1210000              	call malloc
 26840 00010666 488B7D10                	mov rdi, ENV
 26841 0001066A BE00000000              	mov rsi, 0
 26842 0001066F BA01000000              	mov rdx, 1
 26843                                  .L_lambda_simple_env_loop_0434:	; ext_env[i + 1] <-- env[i]
 26844 00010674 4883FE01                	cmp rsi, 1
 26845 00010678 7410                    	je .L_lambda_simple_env_end_0434
 26846 0001067A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26847 0001067E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26848 00010682 48FFC6                  	inc rsi
 26849 00010685 48FFC2                  	inc rdx
 26850 00010688 EBEA                    	jmp .L_lambda_simple_env_loop_0434
 26851                                  .L_lambda_simple_env_end_0434:
 26852 0001068A 5B                      	pop rbx
 26853 0001068B BE00000000              	mov rsi, 0
 26854                                  .L_lambda_simple_params_loop_0434:	; copy params
 26855 00010690 4883FE01                	cmp rsi, 1
 26856 00010694 740E                    	je .L_lambda_simple_params_end_0434
 26857 00010696 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26858 0001069B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26859 0001069F 48FFC6                  	inc rsi
 26860 000106A2 EBEC                    	jmp .L_lambda_simple_params_loop_0434
 26861                                  .L_lambda_simple_params_end_0434:
 26862 000106A4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26863 000106A7 4889C3                  	mov rbx, rax
 26864 000106AA 58                      	pop rax
 26865 000106AB C60005                  	mov byte [rax], T_closure
 26866 000106AE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26867 000106B2 48C74009[BF060100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0434
 26868 000106BA E9B0000000              	jmp .L_lambda_simple_end_0434
 26869                                  .L_lambda_simple_code_0434:	; lambda-simple body
 26870 000106BF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26871 000106C5 740B                    	je .L_lambda_simple_arity_check_ok_091a
 26872 000106C7 FF742410                	push qword [rsp + 8 * 2]
 26873 000106CB 6A01                    	push 1
 26874 000106CD E92E210000              	jmp L_error_incorrect_arity_simple
 26875                                  .L_lambda_simple_arity_check_ok_091a:
 26876 000106D2 C8000000                	enter 0, 0
 26877 000106D6 48B8-                   	mov rax, qword (L_constants + 31)
 26877 000106D8 [1F00000000000000] 
 26878 000106E0 50                      	push rax
 26879 000106E1 488B4520                mov rax, qword [rbp + 32]
 26880 000106E5 50                      	push rax
 26881 000106E6 6A02                    	push 2
 26882 000106E8 488B4510                mov rax, qword [rbp + 16]
 26883 000106EC 488B00                  mov rax, qword [rax + 0]
 26884 000106EF 488B00                  mov rax, qword [rax + 0]
 26885 000106F2 488B00                  	mov rax, qword [rax]
 26886                                  .L_lambda_simple_arity_check_ok_091b:
 26887 000106F5 803805                  	cmp byte [rax], T_closure
 26888                                  
 26889 000106F8 0F8504310000                    jne L_code_ptr_error                      ; rax <- proc
 26890                                  
 26891                                  
 26892 000106FE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26893                                  
 26894 00010702 53                              push rbx                                  ; env pushed
 26895                                  
 26896 00010703 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26897                                  
 26898                                          ; sagydebug
 26899                                  
 26900 00010706 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26901                                  
 26902                                          
 26903                                          
 26904 00010709 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26905                                  
 26906 0001070D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26907                                  
 26908                                  
 26909 00010712 4D89CA                          mov r10, r9
 26910 00010715 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 26911                                          
 26912 00010719 4D89D7                          mov r15, r10
 26913 0001071C 4983C7FF                        add r15, -1
 26914                                                                                         
 26915 00010720 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26916 00010723 4983C404                        add r12, 4
 26917 00010727 4983C4FF                        add r12, -1
 26918                                  
 26919 0001072B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26920                                  .L_tc_recycle_frame_loop_04e7:
 26921 00010731 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 26922                                  
 26923 00010735 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26924                                  
 26925                                  
 26926                                  
 26927 0001073A 41BE00000000                    mov r14, 0                                ; clean box
 26928                                  
 26929                                  
 26930 00010740 4983C7FF                        add r15, -1           
 26931 00010744 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26932                                  
 26933 00010748 4983C4FF                        add r12, -1 
 26934                                  
 26935 0001074C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26936 00010750 75DF                    	jne .L_tc_recycle_frame_loop_04e7
 26937                                  .L_tc_recycle_frame_done_04e7:
 26938                                  ;this pop rbp in sot to the right place
 26939 00010752 4D89C7                  mov r15, r8
 26940                                  
 26941 00010755 4983C704                        add r15, 4
 26942                                  
 26943 00010759 49C1E703                        shl r15, 3
 26944                                  
 26945 0001075D 4C01FC                          add rsp, r15
 26946 00010760 5D                      	pop rbp                                  ; restore the old rbp
 26947                                  
 26948 00010761 488B4D00                        mov rcx, qword [rbp]
 26949 00010765 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26950                                            ; rbx <- code(proc)
 26951                                  
 26952 00010769 FFE3                            jmp rbx
 26953 0001076B C9                      	leave
 26954 0001076C C21800                  	ret 8 * (2 + 1)
 26955                                  .L_lambda_simple_end_0434:	; new closure is in rax
 26956 0001076F C9                      	leave
 26957 00010770 C21800                  	ret 8 * (2 + 1)
 26958                                  .L_lambda_simple_end_0431:	; new closure is in rax
 26959 00010773 803805                  	cmp byte [rax], T_closure 
 26960 00010776 0F8586300000                    jne L_code_ptr_error
 26961                                  
 26962 0001077C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26963                                  
 26964 00010780 53                              push rbx
 26965                                  
 26966 00010781 FF5009                          call SOB_CLOSURE_CODE(rax)
 26967                                  
 26968 00010784 48890425[38040000]              	mov qword [free_var_135], rax
 26969 0001078C 48B8-                   	mov rax, sob_void
 26969 0001078E [0000000000000000] 
 26970                                  
 26971 00010796 4889C7                  	mov rdi, rax
 26972 00010799 E8BA200000              	call print_sexpr_if_not_void
 26973                                  
 26974 0001079E 48B8-                   	mov rax, qword (L_constants + 22)
 26974 000107A0 [1600000000000000] 
 26975 000107A8 50                      	push rax
 26976 000107A9 6A01                    	push 1
 26977 000107AB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26978 000107B0 E892200000              	call malloc
 26979 000107B5 50                      	push rax
 26980 000107B6 BF00000000              	mov rdi, 8 * 0	; new rib
 26981 000107BB E887200000              	call malloc
 26982 000107C0 50                      	push rax
 26983 000107C1 BF08000000              	mov rdi, 8 * 1	; extended env
 26984 000107C6 E87C200000              	call malloc
 26985 000107CB 488B7D10                	mov rdi, ENV
 26986 000107CF BE00000000              	mov rsi, 0
 26987 000107D4 BA01000000              	mov rdx, 1
 26988                                  .L_lambda_simple_env_loop_0435:	; ext_env[i + 1] <-- env[i]
 26989 000107D9 4883FE00                	cmp rsi, 0
 26990 000107DD 7410                    	je .L_lambda_simple_env_end_0435
 26991 000107DF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26992 000107E3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26993 000107E7 48FFC6                  	inc rsi
 26994 000107EA 48FFC2                  	inc rdx
 26995 000107ED EBEA                    	jmp .L_lambda_simple_env_loop_0435
 26996                                  .L_lambda_simple_env_end_0435:
 26997 000107EF 5B                      	pop rbx
 26998 000107F0 BE00000000              	mov rsi, 0
 26999                                  .L_lambda_simple_params_loop_0435:	; copy params
 27000 000107F5 4883FE00                	cmp rsi, 0
 27001 000107F9 740E                    	je .L_lambda_simple_params_end_0435
 27002 000107FB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27003 00010800 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27004 00010804 48FFC6                  	inc rsi
 27005 00010807 EBEC                    	jmp .L_lambda_simple_params_loop_0435
 27006                                  .L_lambda_simple_params_end_0435:
 27007 00010809 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27008 0001080C 4889C3                  	mov rbx, rax
 27009 0001080F 58                      	pop rax
 27010 00010810 C60005                  	mov byte [rax], T_closure
 27011 00010813 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27012 00010817 48C74009[24080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0435
 27013 0001081F E99A040000              	jmp .L_lambda_simple_end_0435
 27014                                  .L_lambda_simple_code_0435:	; lambda-simple body
 27015 00010824 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27016 0001082A 740B                    	je .L_lambda_simple_arity_check_ok_091c
 27017 0001082C FF742410                	push qword [rsp + 8 * 2]
 27018 00010830 6A01                    	push 1
 27019 00010832 E9C91F0000              	jmp L_error_incorrect_arity_simple
 27020                                  .L_lambda_simple_arity_check_ok_091c:
 27021 00010837 C8000000                	enter 0, 0
 27022 0001083B 488B4520                mov rax, qword [rbp + 32]
 27023 0001083F BF08000000              mov rdi, 8
 27024 00010844 4889C3                  mov rbx, rax
 27025 00010847 E8FB1F0000              call malloc
 27026 0001084C 488918                  mov qword [rax], rbx
 27027 0001084F 48894520                mov qword [rbp + 32], rax
 27028 00010853 48B8-                   mov rax, sob_void
 27028 00010855 [0000000000000000] 
 27029 0001085D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27030 00010862 E8E01F0000              	call malloc
 27031 00010867 50                      	push rax
 27032 00010868 BF08000000              	mov rdi, 8 * 1	; new rib
 27033 0001086D E8D51F0000              	call malloc
 27034 00010872 50                      	push rax
 27035 00010873 BF10000000              	mov rdi, 8 * 2	; extended env
 27036 00010878 E8CA1F0000              	call malloc
 27037 0001087D 488B7D10                	mov rdi, ENV
 27038 00010881 BE00000000              	mov rsi, 0
 27039 00010886 BA01000000              	mov rdx, 1
 27040                                  .L_lambda_simple_env_loop_0436:	; ext_env[i + 1] <-- env[i]
 27041 0001088B 4883FE01                	cmp rsi, 1
 27042 0001088F 7410                    	je .L_lambda_simple_env_end_0436
 27043 00010891 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27044 00010895 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27045 00010899 48FFC6                  	inc rsi
 27046 0001089C 48FFC2                  	inc rdx
 27047 0001089F EBEA                    	jmp .L_lambda_simple_env_loop_0436
 27048                                  .L_lambda_simple_env_end_0436:
 27049 000108A1 5B                      	pop rbx
 27050 000108A2 BE00000000              	mov rsi, 0
 27051                                  .L_lambda_simple_params_loop_0436:	; copy params
 27052 000108A7 4883FE01                	cmp rsi, 1
 27053 000108AB 740E                    	je .L_lambda_simple_params_end_0436
 27054 000108AD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27055 000108B2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27056 000108B6 48FFC6                  	inc rsi
 27057 000108B9 EBEC                    	jmp .L_lambda_simple_params_loop_0436
 27058                                  .L_lambda_simple_params_end_0436:
 27059 000108BB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27060 000108BE 4889C3                  	mov rbx, rax
 27061 000108C1 58                      	pop rax
 27062 000108C2 C60005                  	mov byte [rax], T_closure
 27063 000108C5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27064 000108C9 48C74009[D6080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0436
 27065 000108D1 E9AA020000              	jmp .L_lambda_simple_end_0436
 27066                                  .L_lambda_simple_code_0436:	; lambda-simple body
 27067 000108D6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27068 000108DC 740B                    	je .L_lambda_simple_arity_check_ok_091d
 27069 000108DE FF742410                	push qword [rsp + 8 * 2]
 27070 000108E2 6A02                    	push 2
 27071 000108E4 E9171F0000              	jmp L_error_incorrect_arity_simple
 27072                                  .L_lambda_simple_arity_check_ok_091d:
 27073 000108E9 C8000000                	enter 0, 0
 27074 000108ED 488B4520                mov rax, qword [rbp + 32]
 27075 000108F1 50                      	push rax
 27076 000108F2 6A01                    	push 1
 27077 000108F4 488B0425[00000000]      	mov rax, qword [free_var_0]
 27078 000108FC 803805                  	cmp byte [rax], T_closure 
 27079 000108FF 0F85FD2E0000                    jne L_code_ptr_error
 27080                                  
 27081 00010905 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27082                                  
 27083 00010909 53                              push rbx
 27084                                  
 27085 0001090A FF5009                          call SOB_CLOSURE_CODE(rax)
 27086                                  
 27087 0001090D 483D[02000000]                  	cmp rax, sob_boolean_false
 27088 00010913 0F8495000000            	je .L_if_else_0285
 27089 00010919 48B8-                   	mov rax, qword (L_constants + 4)
 27089 0001091B [0400000000000000] 
 27090 00010923 50                      	push rax
 27091 00010924 488B4528                mov rax, qword [rbp + 40]
 27092 00010928 50                      	push rax
 27093 00010929 6A02                    	push 2
 27094 0001092B 488B0425[A0010000]      	mov rax, qword [free_var_52]
 27095                                  .L_lambda_simple_arity_check_ok_0920:
 27096 00010933 803805                  	cmp byte [rax], T_closure
 27097                                  
 27098 00010936 0F85C62E0000                    jne L_code_ptr_error                      ; rax <- proc
 27099                                  
 27100                                  
 27101 0001093C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27102                                  
 27103 00010940 53                              push rbx                                  ; env pushed
 27104                                  
 27105 00010941 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27106                                  
 27107                                          ; sagydebug
 27108                                  
 27109 00010944 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27110                                  
 27111                                          
 27112                                          
 27113 00010947 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27114                                  
 27115 0001094B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27116                                  
 27117                                  
 27118 00010950 4D89CA                          mov r10, r9
 27119 00010953 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 27120                                          
 27121 00010957 4D89D7                          mov r15, r10
 27122 0001095A 4983C7FF                        add r15, -1
 27123                                                                                         
 27124 0001095E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27125 00010961 4983C404                        add r12, 4
 27126 00010965 4983C4FF                        add r12, -1
 27127                                  
 27128 00010969 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27129                                  .L_tc_recycle_frame_loop_04e9:
 27130 0001096F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 27131                                  
 27132 00010973 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27133                                  
 27134                                  
 27135                                  
 27136 00010978 41BE00000000                    mov r14, 0                                ; clean box
 27137                                  
 27138                                  
 27139 0001097E 4983C7FF                        add r15, -1           
 27140 00010982 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27141                                  
 27142 00010986 4983C4FF                        add r12, -1 
 27143                                  
 27144 0001098A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27145 0001098E 75DF                    	jne .L_tc_recycle_frame_loop_04e9
 27146                                  .L_tc_recycle_frame_done_04e9:
 27147                                  ;this pop rbp in sot to the right place
 27148 00010990 4D89C7                  mov r15, r8
 27149                                  
 27150 00010993 4983C704                        add r15, 4
 27151                                  
 27152 00010997 49C1E703                        shl r15, 3
 27153                                  
 27154 0001099B 4C01FC                          add rsp, r15
 27155 0001099E 5D                      	pop rbp                                  ; restore the old rbp
 27156                                  
 27157 0001099F 488B4D00                        mov rcx, qword [rbp]
 27158 000109A3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27159                                            ; rbx <- code(proc)
 27160                                  
 27161 000109A7 FFE3                            jmp rbx
 27162 000109A9 E9CE010000              	jmp .L_if_end_0285
 27163                                  	.L_if_else_0285:
 27164 000109AE 48B8-                   		mov rax, qword (L_constants + 127)
 27164 000109B0 [7F00000000000000] 
 27165 000109B8 50                      	push rax
 27166 000109B9 488B4528                mov rax, qword [rbp + 40]
 27167 000109BD 50                      	push rax
 27168 000109BE 6A02                    	push 2
 27169 000109C0 488B0425[08030000]      	mov rax, qword [free_var_97]
 27170 000109C8 803805                  	cmp byte [rax], T_closure 
 27171 000109CB 0F85312E0000                    jne L_code_ptr_error
 27172                                  
 27173 000109D1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27174                                  
 27175 000109D5 53                              push rbx
 27176                                  
 27177 000109D6 FF5009                          call SOB_CLOSURE_CODE(rax)
 27178                                  
 27179 000109D9 50                              	push rax
 27180 000109DA 488B4520                mov rax, qword [rbp + 32]
 27181 000109DE 50                      	push rax
 27182 000109DF 6A01                    	push 1
 27183 000109E1 488B0425[88000000]      	mov rax, qword [free_var_17]
 27184 000109E9 803805                  	cmp byte [rax], T_closure 
 27185 000109EC 0F85102E0000                    jne L_code_ptr_error
 27186                                  
 27187 000109F2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27188                                  
 27189 000109F6 53                              push rbx
 27190                                  
 27191 000109F7 FF5009                          call SOB_CLOSURE_CODE(rax)
 27192                                  
 27193 000109FA 50                              	push rax
 27194 000109FB 6A02                    	push 2
 27195 000109FD 488B4510                mov rax, qword [rbp + 16]
 27196 00010A01 488B00                  mov rax, qword [rax + 0]
 27197 00010A04 488B00                  mov rax, qword [rax + 0]
 27198 00010A07 488B00                  	mov rax, qword [rax]
 27199 00010A0A 803805                  	cmp byte [rax], T_closure 
 27200 00010A0D 0F85EF2D0000                    jne L_code_ptr_error
 27201                                  
 27202 00010A13 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27203                                  
 27204 00010A17 53                              push rbx
 27205                                  
 27206 00010A18 FF5009                          call SOB_CLOSURE_CODE(rax)
 27207                                  
 27208 00010A1B 50                              	push rax
 27209 00010A1C 6A01                    	push 1
 27210 00010A1E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27211 00010A23 E81F1E0000              	call malloc
 27212 00010A28 50                      	push rax
 27213 00010A29 BF10000000              	mov rdi, 8 * 2	; new rib
 27214 00010A2E E8141E0000              	call malloc
 27215 00010A33 50                      	push rax
 27216 00010A34 BF18000000              	mov rdi, 8 * 3	; extended env
 27217 00010A39 E8091E0000              	call malloc
 27218 00010A3E 488B7D10                	mov rdi, ENV
 27219 00010A42 BE00000000              	mov rsi, 0
 27220 00010A47 BA01000000              	mov rdx, 1
 27221                                  .L_lambda_simple_env_loop_0437:	; ext_env[i + 1] <-- env[i]
 27222 00010A4C 4883FE02                	cmp rsi, 2
 27223 00010A50 7410                    	je .L_lambda_simple_env_end_0437
 27224 00010A52 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27225 00010A56 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27226 00010A5A 48FFC6                  	inc rsi
 27227 00010A5D 48FFC2                  	inc rdx
 27228 00010A60 EBEA                    	jmp .L_lambda_simple_env_loop_0437
 27229                                  .L_lambda_simple_env_end_0437:
 27230 00010A62 5B                      	pop rbx
 27231 00010A63 BE00000000              	mov rsi, 0
 27232                                  .L_lambda_simple_params_loop_0437:	; copy params
 27233 00010A68 4883FE02                	cmp rsi, 2
 27234 00010A6C 740E                    	je .L_lambda_simple_params_end_0437
 27235 00010A6E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27236 00010A73 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27237 00010A77 48FFC6                  	inc rsi
 27238 00010A7A EBEC                    	jmp .L_lambda_simple_params_loop_0437
 27239                                  .L_lambda_simple_params_end_0437:
 27240 00010A7C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27241 00010A7F 4889C3                  	mov rbx, rax
 27242 00010A82 58                      	pop rax
 27243 00010A83 C60005                  	mov byte [rax], T_closure
 27244 00010A86 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27245 00010A8A 48C74009[940A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0437
 27246 00010A92 EB72                    	jmp .L_lambda_simple_end_0437
 27247                                  .L_lambda_simple_code_0437:	; lambda-simple body
 27248 00010A94 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27249 00010A9A 740B                    	je .L_lambda_simple_arity_check_ok_091e
 27250 00010A9C FF742410                	push qword [rsp + 8 * 2]
 27251 00010AA0 6A01                    	push 1
 27252 00010AA2 E9591D0000              	jmp L_error_incorrect_arity_simple
 27253                                  .L_lambda_simple_arity_check_ok_091e:
 27254 00010AA7 C8000000                	enter 0, 0
 27255 00010AAB 488B4510                mov rax, qword [rbp + 16]
 27256 00010AAF 488B00                  mov rax, qword [rax + 0]
 27257 00010AB2 488B00                  mov rax, qword [rax + 0]
 27258 00010AB5 50                      	push rax
 27259 00010AB6 6A01                    	push 1
 27260 00010AB8 488B0425[80000000]      	mov rax, qword [free_var_16]
 27261 00010AC0 803805                  	cmp byte [rax], T_closure 
 27262 00010AC3 0F85392D0000                    jne L_code_ptr_error
 27263                                  
 27264 00010AC9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27265                                  
 27266 00010ACD 53                              push rbx
 27267                                  
 27268 00010ACE FF5009                          call SOB_CLOSURE_CODE(rax)
 27269                                  
 27270 00010AD1 50                              	push rax
 27271 00010AD2 488B4510                mov rax, qword [rbp + 16]
 27272 00010AD6 488B00                  mov rax, qword [rax + 0]
 27273 00010AD9 488B4008                mov rax, qword [rax + 8]
 27274 00010ADD 50                      	push rax
 27275 00010ADE 488B4520                mov rax, qword [rbp + 32]
 27276 00010AE2 50                      	push rax
 27277 00010AE3 6A03                    	push 3
 27278 00010AE5 488B0425[90010000]      	mov rax, qword [free_var_50]
 27279 00010AED 803805                  	cmp byte [rax], T_closure 
 27280 00010AF0 0F850C2D0000                    jne L_code_ptr_error
 27281                                  
 27282 00010AF6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27283                                  
 27284 00010AFA 53                              push rbx
 27285                                  
 27286 00010AFB FF5009                          call SOB_CLOSURE_CODE(rax)
 27287                                  
 27288                                          
 27289 00010AFE 488B4520                mov rax, qword [rbp + 32]
 27290 00010B02 C9                      	leave
 27291 00010B03 C21800                  	ret 8 * (2 + 1)
 27292                                  .L_lambda_simple_end_0437:	; new closure is in rax
 27293                                  .L_lambda_simple_arity_check_ok_091f:
 27294 00010B06 803805                  	cmp byte [rax], T_closure
 27295                                  
 27296 00010B09 0F85F32C0000                    jne L_code_ptr_error                      ; rax <- proc
 27297                                  
 27298                                  
 27299 00010B0F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27300                                  
 27301 00010B13 53                              push rbx                                  ; env pushed
 27302                                  
 27303 00010B14 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27304                                  
 27305                                          ; sagydebug
 27306                                  
 27307 00010B17 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27308                                  
 27309                                          
 27310                                          
 27311 00010B1A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27312                                  
 27313 00010B1E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27314                                  
 27315                                  
 27316 00010B23 4D89CA                          mov r10, r9
 27317 00010B26 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 27318                                          
 27319 00010B2A 4D89D7                          mov r15, r10
 27320 00010B2D 4983C7FF                        add r15, -1
 27321                                                                                         
 27322 00010B31 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27323 00010B34 4983C404                        add r12, 4
 27324 00010B38 4983C4FF                        add r12, -1
 27325                                  
 27326 00010B3C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27327                                  .L_tc_recycle_frame_loop_04e8:
 27328 00010B42 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 27329                                  
 27330 00010B46 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27331                                  
 27332                                  
 27333                                  
 27334 00010B4B 41BE00000000                    mov r14, 0                                ; clean box
 27335                                  
 27336                                  
 27337 00010B51 4983C7FF                        add r15, -1           
 27338 00010B55 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27339                                  
 27340 00010B59 4983C4FF                        add r12, -1 
 27341                                  
 27342 00010B5D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27343 00010B61 75DF                    	jne .L_tc_recycle_frame_loop_04e8
 27344                                  .L_tc_recycle_frame_done_04e8:
 27345                                  ;this pop rbp in sot to the right place
 27346 00010B63 4D89C7                  mov r15, r8
 27347                                  
 27348 00010B66 4983C704                        add r15, 4
 27349                                  
 27350 00010B6A 49C1E703                        shl r15, 3
 27351                                  
 27352 00010B6E 4C01FC                          add rsp, r15
 27353 00010B71 5D                      	pop rbp                                  ; restore the old rbp
 27354                                  
 27355 00010B72 488B4D00                        mov rcx, qword [rbp]
 27356 00010B76 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27357                                            ; rbx <- code(proc)
 27358                                  
 27359 00010B7A FFE3                            jmp rbx
 27360                                  	.L_if_end_0285:
 27361 00010B7C C9                      	leave
 27362 00010B7D C22000                  	ret 8 * (2 + 2)
 27363                                  .L_lambda_simple_end_0436:	; new closure is in rax
 27364 00010B80 50                      push rax
 27365 00010B81 488B4520                mov rax, qword [rbp + 32]
 27366 00010B85 8F00                    pop qword [rax]
 27367 00010B87 48B8-                   mov rax, sob_void
 27367 00010B89 [0000000000000000] 
 27368                                  
 27369 00010B91 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27370 00010B96 E8AC1C0000              	call malloc
 27371 00010B9B 50                      	push rax
 27372 00010B9C BF08000000              	mov rdi, 8 * 1	; new rib
 27373 00010BA1 E8A11C0000              	call malloc
 27374 00010BA6 50                      	push rax
 27375 00010BA7 BF10000000              	mov rdi, 8 * 2	; extended env
 27376 00010BAC E8961C0000              	call malloc
 27377 00010BB1 488B7D10                	mov rdi, ENV
 27378 00010BB5 BE00000000              	mov rsi, 0
 27379 00010BBA BA01000000              	mov rdx, 1
 27380                                  .L_lambda_simple_env_loop_0438:	; ext_env[i + 1] <-- env[i]
 27381 00010BBF 4883FE01                	cmp rsi, 1
 27382 00010BC3 7410                    	je .L_lambda_simple_env_end_0438
 27383 00010BC5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27384 00010BC9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27385 00010BCD 48FFC6                  	inc rsi
 27386 00010BD0 48FFC2                  	inc rdx
 27387 00010BD3 EBEA                    	jmp .L_lambda_simple_env_loop_0438
 27388                                  .L_lambda_simple_env_end_0438:
 27389 00010BD5 5B                      	pop rbx
 27390 00010BD6 BE00000000              	mov rsi, 0
 27391                                  .L_lambda_simple_params_loop_0438:	; copy params
 27392 00010BDB 4883FE01                	cmp rsi, 1
 27393 00010BDF 740E                    	je .L_lambda_simple_params_end_0438
 27394 00010BE1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27395 00010BE6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27396 00010BEA 48FFC6                  	inc rsi
 27397 00010BED EBEC                    	jmp .L_lambda_simple_params_loop_0438
 27398                                  .L_lambda_simple_params_end_0438:
 27399 00010BEF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27400 00010BF2 4889C3                  	mov rbx, rax
 27401 00010BF5 58                      	pop rax
 27402 00010BF6 C60005                  	mov byte [rax], T_closure
 27403 00010BF9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27404 00010BFD 48C74009[0A0C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0438
 27405 00010C05 E9B0000000              	jmp .L_lambda_simple_end_0438
 27406                                  .L_lambda_simple_code_0438:	; lambda-simple body
 27407 00010C0A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27408 00010C10 740B                    	je .L_lambda_simple_arity_check_ok_0921
 27409 00010C12 FF742410                	push qword [rsp + 8 * 2]
 27410 00010C16 6A01                    	push 1
 27411 00010C18 E9E31B0000              	jmp L_error_incorrect_arity_simple
 27412                                  .L_lambda_simple_arity_check_ok_0921:
 27413 00010C1D C8000000                	enter 0, 0
 27414 00010C21 48B8-                   	mov rax, qword (L_constants + 31)
 27414 00010C23 [1F00000000000000] 
 27415 00010C2B 50                      	push rax
 27416 00010C2C 488B4520                mov rax, qword [rbp + 32]
 27417 00010C30 50                      	push rax
 27418 00010C31 6A02                    	push 2
 27419 00010C33 488B4510                mov rax, qword [rbp + 16]
 27420 00010C37 488B00                  mov rax, qword [rax + 0]
 27421 00010C3A 488B00                  mov rax, qword [rax + 0]
 27422 00010C3D 488B00                  	mov rax, qword [rax]
 27423                                  .L_lambda_simple_arity_check_ok_0922:
 27424 00010C40 803805                  	cmp byte [rax], T_closure
 27425                                  
 27426 00010C43 0F85B92B0000                    jne L_code_ptr_error                      ; rax <- proc
 27427                                  
 27428                                  
 27429 00010C49 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27430                                  
 27431 00010C4D 53                              push rbx                                  ; env pushed
 27432                                  
 27433 00010C4E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27434                                  
 27435                                          ; sagydebug
 27436                                  
 27437 00010C51 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27438                                  
 27439                                          
 27440                                          
 27441 00010C54 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27442                                  
 27443 00010C58 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27444                                  
 27445                                  
 27446 00010C5D 4D89CA                          mov r10, r9
 27447 00010C60 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 27448                                          
 27449 00010C64 4D89D7                          mov r15, r10
 27450 00010C67 4983C7FF                        add r15, -1
 27451                                                                                         
 27452 00010C6B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27453 00010C6E 4983C404                        add r12, 4
 27454 00010C72 4983C4FF                        add r12, -1
 27455                                  
 27456 00010C76 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27457                                  .L_tc_recycle_frame_loop_04ea:
 27458 00010C7C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 27459                                  
 27460 00010C80 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27461                                  
 27462                                  
 27463                                  
 27464 00010C85 41BE00000000                    mov r14, 0                                ; clean box
 27465                                  
 27466                                  
 27467 00010C8B 4983C7FF                        add r15, -1           
 27468 00010C8F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27469                                  
 27470 00010C93 4983C4FF                        add r12, -1 
 27471                                  
 27472 00010C97 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27473 00010C9B 75DF                    	jne .L_tc_recycle_frame_loop_04ea
 27474                                  .L_tc_recycle_frame_done_04ea:
 27475                                  ;this pop rbp in sot to the right place
 27476 00010C9D 4D89C7                  mov r15, r8
 27477                                  
 27478 00010CA0 4983C704                        add r15, 4
 27479                                  
 27480 00010CA4 49C1E703                        shl r15, 3
 27481                                  
 27482 00010CA8 4C01FC                          add rsp, r15
 27483 00010CAB 5D                      	pop rbp                                  ; restore the old rbp
 27484                                  
 27485 00010CAC 488B4D00                        mov rcx, qword [rbp]
 27486 00010CB0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27487                                            ; rbx <- code(proc)
 27488                                  
 27489 00010CB4 FFE3                            jmp rbx
 27490 00010CB6 C9                      	leave
 27491 00010CB7 C21800                  	ret 8 * (2 + 1)
 27492                                  .L_lambda_simple_end_0438:	; new closure is in rax
 27493 00010CBA C9                      	leave
 27494 00010CBB C21800                  	ret 8 * (2 + 1)
 27495                                  .L_lambda_simple_end_0435:	; new closure is in rax
 27496 00010CBE 803805                  	cmp byte [rax], T_closure 
 27497 00010CC1 0F853B2B0000                    jne L_code_ptr_error
 27498                                  
 27499 00010CC7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27500                                  
 27501 00010CCB 53                              push rbx
 27502                                  
 27503 00010CCC FF5009                          call SOB_CLOSURE_CODE(rax)
 27504                                  
 27505 00010CCF 48890425[D0030000]              	mov qword [free_var_122], rax
 27506 00010CD7 48B8-                   	mov rax, sob_void
 27506 00010CD9 [0000000000000000] 
 27507                                  
 27508 00010CE1 4889C7                  	mov rdi, rax
 27509 00010CE4 E86F1B0000              	call print_sexpr_if_not_void
 27510                                  
 27511 00010CE9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27512 00010CEE E8541B0000              	call malloc
 27513 00010CF3 50                      	push rax
 27514 00010CF4 BF00000000              	mov rdi, 8 * 0	; new rib
 27515 00010CF9 E8491B0000              	call malloc
 27516 00010CFE 50                      	push rax
 27517 00010CFF BF08000000              	mov rdi, 8 * 1	; extended env
 27518 00010D04 E83E1B0000              	call malloc
 27519 00010D09 488B7D10                	mov rdi, ENV
 27520 00010D0D BE00000000              	mov rsi, 0
 27521 00010D12 BA01000000              	mov rdx, 1
 27522                                  .L_lambda_opt_env_loop_00a1:	; ext_env[i + 1] <-- env[i]
 27523 00010D17 4883FE00                	cmp rsi, 0
 27524 00010D1B 7410                    	je .L_lambda_opt_env_end_00a1
 27525 00010D1D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27526 00010D21 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27527 00010D25 48FFC6                  	inc rsi
 27528 00010D28 48FFC2                  	inc rdx
 27529 00010D2B EBEA                    	jmp .L_lambda_opt_env_loop_00a1
 27530                                  .L_lambda_opt_env_end_00a1:
 27531 00010D2D 5B                      	pop rbx
 27532 00010D2E BE00000000              	mov rsi, 0
 27533                                  .L_lambda_opt_params_loop_01e1:	; copy params
 27534 00010D33 4883FE00                	cmp rsi, 0
 27535 00010D37 740E                    	je .L_lambda_opt_params_end_01e1
 27536 00010D39 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27537 00010D3E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27538 00010D42 48FFC6                  	inc rsi
 27539 00010D45 EBEC                    	jmp .L_lambda_opt_params_loop_01e1
 27540                                  .L_lambda_opt_params_end_01e1:
 27541 00010D47 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27542 00010D4A 4889C3                  	mov rbx, rax
 27543 00010D4D 58                      	pop rax
 27544 00010D4E C60005                  	mov byte [rax], T_closure
 27545 00010D51 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27546 00010D55 48C74009[620D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_00a1
 27547 00010D5D E980010000              	jmp .L_lambda_opt_end_00a1
 27548                                  .L_lambda_opt_code_00a1:
 27549 00010D62 4C8B542410              mov r10, qword [rsp+8*2]
 27550 00010D67 4983FA00                cmp r10, 0
 27551 00010D6B 740B                    je .L_lambda_opt_arity_check_exact_00a1
 27552 00010D6D 4983FA00                cmp r10, 0
 27553 00010D71 7F44                    jg .L_lambda_opt_arity_check_more_00a1
 27554 00010D73 E99C1A0000              jmp L_error_incorrect_arity_opt
 27555                                  .L_lambda_opt_arity_check_exact_00a1:
 27556 00010D78 4883EC08                sub rsp, 8
 27557 00010D7C BA03000000              mov rdx, 3+0
 27558 00010D81 4889E3                  mov qword rbx, rsp
 27559                                  .L_lambda_opt_params_loop_01e2:
 27560 00010D84 488B4B08                mov qword rcx, [rbx+8]
 27561 00010D88 48890B                  mov qword [rbx], rcx
 27562 00010D8B 48FFCA                  dec rdx
 27563 00010D8E 4883C308                add rbx, 8
 27564 00010D92 4883FA00                cmp rdx, 0
 27565 00010D96 7402                    je .L_lambda_opt_params_end_01e2
 27566 00010D98 EBEA                    jmp .L_lambda_opt_params_loop_01e2
 27567                                  .L_lambda_opt_params_end_01e2:
 27568 00010D9A 49FFC2                  inc r10
 27569 00010D9D 4C89542410              mov qword [rsp+8*2], r10
 27570 00010DA2 4983C202                add r10, 2
 27571 00010DA6 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 27572 00010DAE 4C8B4D00                mov r9, [rbp]
 27573 00010DB2 E996000000              jmp .L_lambda_opt_stack_adjusted_00a1
 27574                                  .L_lambda_opt_arity_check_more_00a1:
 27575 00010DB7 4C8B6C2410              mov r13, [rsp+2*8]
 27576 00010DBC 48B8-                   mov rax, sob_nil
 27576 00010DBE [0100000000000000] 
 27577 00010DC6 4C8B542410              mov r10, [rsp+2*8]
 27578 00010DCB 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 27579 00010DD0 4983EA00                sub r10, 0
 27580                                  .L_lambda_opt_stack_shrink_loop_00a1:
 27581 00010DD4 4983FA00                cmp r10, 0
 27582 00010DD8 7424                    je .L_lambda_opt_stack_shrink_loop_exit_00a1
 27583 00010DDA 4889C1                  mov rcx, rax
 27584 00010DDD 498B10                  mov rdx, [r8]
 27585 00010DE0 BF11000000              mov rdi, 17
 27586 00010DE5 E85D1A0000              call malloc
 27587 00010DEA C60021                  mov byte [rax], T_pair
 27588 00010DED 48894809                mov SOB_PAIR_CDR(rax), rcx
 27589 00010DF1 48895001                mov SOB_PAIR_CAR(rax), rdx
 27590 00010DF5 4983E808                sub r8, 8
 27591 00010DF9 49FFCA                  dec r10
 27592 00010DFC EBD6                    jmp .L_lambda_opt_stack_shrink_loop_00a1
 27593                                  .L_lambda_opt_stack_shrink_loop_exit_00a1:
 27594 00010DFE 4889442418              mov [rsp+8*(2+1)], rax
 27595 00010E03 41BA01000000            mov r10, 1
 27596 00010E09 4C89542410              mov [rsp+16], r10
 27597 00010E0E 4989E4                  mov r12, rsp
 27598 00010E11 4983C418                add r12, 8*(2+1)
 27599 00010E15 4C2B6C2410              sub r13, [rsp+16]
 27600 00010E1A 4D89EA                  mov r10, r13
 27601 00010E1D 49C1E203                shl r10, 3
 27602 00010E21 4D89D7                  mov r15, r10
 27603 00010E24 4D01E2                  add r10, r12
 27604 00010E27 4C8B4C2410              mov r9, [rsp+16]
 27605 00010E2C 4983C103                add r9, 3
 27606                                  .L_lambda_opt_params_loop_01e3:
 27607 00010E30 4983F900                cmp r9, 0
 27608 00010E34 7414                    je .L_lambda_opt_params_end_01e3
 27609 00010E36 4D8B3424                mov r14, [r12]
 27610 00010E3A 4D8932                  mov [r10], r14
 27611 00010E3D 4983EC08                sub r12, 8
 27612 00010E41 4983EA08                sub r10, 8
 27613 00010E45 49FFC9                  dec r9
 27614 00010E48 EBE6                    jmp .L_lambda_opt_params_loop_01e3
 27615                                  .L_lambda_opt_params_end_01e3:
 27616 00010E4A 4C01FC                  add rsp, r15
 27617                                  .L_lambda_opt_stack_adjusted_00a1:
 27618 00010E4D 4C8B4D00                mov r9, [rbp]
 27619 00010E51 C8000000                enter 0, 0
 27620 00010E55 488B4520                mov rax, qword [rbp + 32]
 27621 00010E59 50                      	push rax
 27622 00010E5A 6A01                    	push 1
 27623 00010E5C 488B0425[38040000]      	mov rax, qword [free_var_135]
 27624                                  .L_lambda_simple_arity_check_ok_0923:
 27625 00010E64 803805                  	cmp byte [rax], T_closure
 27626                                  
 27627 00010E67 0F8595290000                    jne L_code_ptr_error                      ; rax <- proc
 27628                                  
 27629                                  
 27630 00010E6D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27631                                  
 27632 00010E71 53                              push rbx                                  ; env pushed
 27633                                  
 27634 00010E72 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27635                                  
 27636                                          ; sagydebug
 27637                                  
 27638 00010E75 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27639                                  
 27640                                          
 27641                                          
 27642 00010E78 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27643                                  
 27644 00010E7C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27645                                  
 27646                                  
 27647 00010E81 4D89CA                          mov r10, r9
 27648 00010E84 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 27649                                          
 27650 00010E88 4D89D7                          mov r15, r10
 27651 00010E8B 4983C7FF                        add r15, -1
 27652                                                                                         
 27653 00010E8F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27654 00010E92 4983C404                        add r12, 4
 27655 00010E96 4983C4FF                        add r12, -1
 27656                                  
 27657 00010E9A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27658                                  .L_tc_recycle_frame_loop_04eb:
 27659 00010EA0 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 27660                                  
 27661 00010EA4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27662                                  
 27663                                  
 27664                                  
 27665 00010EA9 41BE00000000                    mov r14, 0                                ; clean box
 27666                                  
 27667                                  
 27668 00010EAF 4983C7FF                        add r15, -1           
 27669 00010EB3 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27670                                  
 27671 00010EB7 4983C4FF                        add r12, -1 
 27672                                  
 27673 00010EBB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27674 00010EBF 75DF                    	jne .L_tc_recycle_frame_loop_04eb
 27675                                  .L_tc_recycle_frame_done_04eb:
 27676                                  ;this pop rbp in sot to the right place
 27677 00010EC1 4D89C7                  mov r15, r8
 27678                                  
 27679 00010EC4 4983C704                        add r15, 4
 27680                                  
 27681 00010EC8 49C1E703                        shl r15, 3
 27682                                  
 27683 00010ECC 4C01FC                          add rsp, r15
 27684 00010ECF 5D                      	pop rbp                                  ; restore the old rbp
 27685                                  
 27686 00010ED0 488B4D00                        mov rcx, qword [rbp]
 27687 00010ED4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27688                                            ; rbx <- code(proc)
 27689                                  
 27690 00010ED8 FFE3                            jmp rbx
 27691 00010EDA C9                      leave
 27692 00010EDB 4C8B4D00                mov r9, [rbp]
 27693 00010EDF C21800                  ret 8 * (3 + 0)
 27694                                  .L_lambda_opt_end_00a1:	; new closure is in rax
 27695 00010EE2 48890425[40040000]      	mov qword [free_var_136], rax
 27696 00010EEA 48B8-                   	mov rax, sob_void
 27696 00010EEC [0000000000000000] 
 27697                                  
 27698 00010EF4 4889C7                  	mov rdi, rax
 27699 00010EF7 E85C190000              	call print_sexpr_if_not_void
 27700                                  
 27701 00010EFC 48B8-                   	mov rax, qword (L_constants + 22)
 27701 00010EFE [1600000000000000] 
 27702 00010F06 50                      	push rax
 27703 00010F07 6A01                    	push 1
 27704 00010F09 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27705 00010F0E E834190000              	call malloc
 27706 00010F13 50                      	push rax
 27707 00010F14 BF00000000              	mov rdi, 8 * 0	; new rib
 27708 00010F19 E829190000              	call malloc
 27709 00010F1E 50                      	push rax
 27710 00010F1F BF08000000              	mov rdi, 8 * 1	; extended env
 27711 00010F24 E81E190000              	call malloc
 27712 00010F29 488B7D10                	mov rdi, ENV
 27713 00010F2D BE00000000              	mov rsi, 0
 27714 00010F32 BA01000000              	mov rdx, 1
 27715                                  .L_lambda_simple_env_loop_0439:	; ext_env[i + 1] <-- env[i]
 27716 00010F37 4883FE00                	cmp rsi, 0
 27717 00010F3B 7410                    	je .L_lambda_simple_env_end_0439
 27718 00010F3D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27719 00010F41 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27720 00010F45 48FFC6                  	inc rsi
 27721 00010F48 48FFC2                  	inc rdx
 27722 00010F4B EBEA                    	jmp .L_lambda_simple_env_loop_0439
 27723                                  .L_lambda_simple_env_end_0439:
 27724 00010F4D 5B                      	pop rbx
 27725 00010F4E BE00000000              	mov rsi, 0
 27726                                  .L_lambda_simple_params_loop_0439:	; copy params
 27727 00010F53 4883FE00                	cmp rsi, 0
 27728 00010F57 740E                    	je .L_lambda_simple_params_end_0439
 27729 00010F59 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27730 00010F5E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27731 00010F62 48FFC6                  	inc rsi
 27732 00010F65 EBEC                    	jmp .L_lambda_simple_params_loop_0439
 27733                                  .L_lambda_simple_params_end_0439:
 27734 00010F67 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27735 00010F6A 4889C3                  	mov rbx, rax
 27736 00010F6D 58                      	pop rax
 27737 00010F6E C60005                  	mov byte [rax], T_closure
 27738 00010F71 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27739 00010F75 48C74009[820F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0439
 27740 00010F7D E966030000              	jmp .L_lambda_simple_end_0439
 27741                                  .L_lambda_simple_code_0439:	; lambda-simple body
 27742 00010F82 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27743 00010F88 740B                    	je .L_lambda_simple_arity_check_ok_0924
 27744 00010F8A FF742410                	push qword [rsp + 8 * 2]
 27745 00010F8E 6A01                    	push 1
 27746 00010F90 E96B180000              	jmp L_error_incorrect_arity_simple
 27747                                  .L_lambda_simple_arity_check_ok_0924:
 27748 00010F95 C8000000                	enter 0, 0
 27749 00010F99 488B4520                mov rax, qword [rbp + 32]
 27750 00010F9D BF08000000              mov rdi, 8
 27751 00010FA2 4889C3                  mov rbx, rax
 27752 00010FA5 E89D180000              call malloc
 27753 00010FAA 488918                  mov qword [rax], rbx
 27754 00010FAD 48894520                mov qword [rbp + 32], rax
 27755 00010FB1 48B8-                   mov rax, sob_void
 27755 00010FB3 [0000000000000000] 
 27756 00010FBB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27757 00010FC0 E882180000              	call malloc
 27758 00010FC5 50                      	push rax
 27759 00010FC6 BF08000000              	mov rdi, 8 * 1	; new rib
 27760 00010FCB E877180000              	call malloc
 27761 00010FD0 50                      	push rax
 27762 00010FD1 BF10000000              	mov rdi, 8 * 2	; extended env
 27763 00010FD6 E86C180000              	call malloc
 27764 00010FDB 488B7D10                	mov rdi, ENV
 27765 00010FDF BE00000000              	mov rsi, 0
 27766 00010FE4 BA01000000              	mov rdx, 1
 27767                                  .L_lambda_simple_env_loop_043a:	; ext_env[i + 1] <-- env[i]
 27768 00010FE9 4883FE01                	cmp rsi, 1
 27769 00010FED 7410                    	je .L_lambda_simple_env_end_043a
 27770 00010FEF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27771 00010FF3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27772 00010FF7 48FFC6                  	inc rsi
 27773 00010FFA 48FFC2                  	inc rdx
 27774 00010FFD EBEA                    	jmp .L_lambda_simple_env_loop_043a
 27775                                  .L_lambda_simple_env_end_043a:
 27776 00010FFF 5B                      	pop rbx
 27777 00011000 BE00000000              	mov rsi, 0
 27778                                  .L_lambda_simple_params_loop_043a:	; copy params
 27779 00011005 4883FE01                	cmp rsi, 1
 27780 00011009 740E                    	je .L_lambda_simple_params_end_043a
 27781 0001100B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27782 00011010 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27783 00011014 48FFC6                  	inc rsi
 27784 00011017 EBEC                    	jmp .L_lambda_simple_params_loop_043a
 27785                                  .L_lambda_simple_params_end_043a:
 27786 00011019 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27787 0001101C 4889C3                  	mov rbx, rax
 27788 0001101F 58                      	pop rax
 27789 00011020 C60005                  	mov byte [rax], T_closure
 27790 00011023 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27791 00011027 48C74009[34100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043a
 27792 0001102F E955010000              	jmp .L_lambda_simple_end_043a
 27793                                  .L_lambda_simple_code_043a:	; lambda-simple body
 27794 00011034 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27795 0001103A 740B                    	je .L_lambda_simple_arity_check_ok_0925
 27796 0001103C FF742410                	push qword [rsp + 8 * 2]
 27797 00011040 6A03                    	push 3
 27798 00011042 E9B9170000              	jmp L_error_incorrect_arity_simple
 27799                                  .L_lambda_simple_arity_check_ok_0925:
 27800 00011047 C8000000                	enter 0, 0
 27801 0001104B 488B4530                mov rax, qword [rbp + 48]
 27802 0001104F 50                      	push rax
 27803 00011050 488B4528                mov rax, qword [rbp + 40]
 27804 00011054 50                      	push rax
 27805 00011055 6A02                    	push 2
 27806 00011057 488B0425[30030000]      	mov rax, qword [free_var_102]
 27807 0001105F 803805                  	cmp byte [rax], T_closure 
 27808 00011062 0F859A270000                    jne L_code_ptr_error
 27809                                  
 27810 00011068 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27811                                  
 27812 0001106C 53                              push rbx
 27813                                  
 27814 0001106D FF5009                          call SOB_CLOSURE_CODE(rax)
 27815                                  
 27816 00011070 483D[02000000]                  	cmp rax, sob_boolean_false
 27817 00011076 0F84FF000000            	je .L_if_else_0286
 27818 0001107C 488B4530                mov rax, qword [rbp + 48]
 27819 00011080 50                      	push rax
 27820 00011081 48B8-                   	mov rax, qword (L_constants + 127)
 27820 00011083 [7F00000000000000] 
 27821 0001108B 50                      	push rax
 27822 0001108C 488B4528                mov rax, qword [rbp + 40]
 27823 00011090 50                      	push rax
 27824 00011091 6A02                    	push 2
 27825 00011093 488B0425[08030000]      	mov rax, qword [free_var_97]
 27826 0001109B 803805                  	cmp byte [rax], T_closure 
 27827 0001109E 0F855E270000                    jne L_code_ptr_error
 27828                                  
 27829 000110A4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27830                                  
 27831 000110A8 53                              push rbx
 27832                                  
 27833 000110A9 FF5009                          call SOB_CLOSURE_CODE(rax)
 27834                                  
 27835 000110AC 50                              	push rax
 27836 000110AD 488B4520                mov rax, qword [rbp + 32]
 27837 000110B1 50                      	push rax
 27838 000110B2 6A03                    	push 3
 27839 000110B4 488B4510                mov rax, qword [rbp + 16]
 27840 000110B8 488B00                  mov rax, qword [rax + 0]
 27841 000110BB 488B00                  mov rax, qword [rax + 0]
 27842 000110BE 488B00                  	mov rax, qword [rax]
 27843 000110C1 803805                  	cmp byte [rax], T_closure 
 27844 000110C4 0F8538270000                    jne L_code_ptr_error
 27845                                  
 27846 000110CA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27847                                  
 27848 000110CE 53                              push rbx
 27849                                  
 27850 000110CF FF5009                          call SOB_CLOSURE_CODE(rax)
 27851                                  
 27852 000110D2 50                              	push rax
 27853 000110D3 488B4528                mov rax, qword [rbp + 40]
 27854 000110D7 50                      	push rax
 27855 000110D8 488B4520                mov rax, qword [rbp + 32]
 27856 000110DC 50                      	push rax
 27857 000110DD 6A02                    	push 2
 27858 000110DF 488B0425[78010000]      	mov rax, qword [free_var_47]
 27859 000110E7 803805                  	cmp byte [rax], T_closure 
 27860 000110EA 0F8512270000                    jne L_code_ptr_error
 27861                                  
 27862 000110F0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27863                                  
 27864 000110F4 53                              push rbx
 27865                                  
 27866 000110F5 FF5009                          call SOB_CLOSURE_CODE(rax)
 27867                                  
 27868 000110F8 50                              	push rax
 27869 000110F9 6A02                    	push 2
 27870 000110FB 488B0425[68000000]      	mov rax, qword [free_var_13]
 27871                                  .L_lambda_simple_arity_check_ok_0926:
 27872 00011103 803805                  	cmp byte [rax], T_closure
 27873                                  
 27874 00011106 0F85F6260000                    jne L_code_ptr_error                      ; rax <- proc
 27875                                  
 27876                                  
 27877 0001110C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27878                                  
 27879 00011110 53                              push rbx                                  ; env pushed
 27880                                  
 27881 00011111 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27882                                  
 27883                                          ; sagydebug
 27884                                  
 27885 00011114 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27886                                  
 27887                                          
 27888                                          
 27889 00011117 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27890                                  
 27891 0001111B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27892                                  
 27893                                  
 27894 00011120 4D89CA                          mov r10, r9
 27895 00011123 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 27896                                          
 27897 00011127 4D89D7                          mov r15, r10
 27898 0001112A 4983C7FF                        add r15, -1
 27899                                                                                         
 27900 0001112E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27901 00011131 4983C404                        add r12, 4
 27902 00011135 4983C4FF                        add r12, -1
 27903                                  
 27904 00011139 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27905                                  .L_tc_recycle_frame_loop_04ec:
 27906 0001113F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 27907                                  
 27908 00011143 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27909                                  
 27910                                  
 27911                                  
 27912 00011148 41BE00000000                    mov r14, 0                                ; clean box
 27913                                  
 27914                                  
 27915 0001114E 4983C7FF                        add r15, -1           
 27916 00011152 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27917                                  
 27918 00011156 4983C4FF                        add r12, -1 
 27919                                  
 27920 0001115A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27921 0001115E 75DF                    	jne .L_tc_recycle_frame_loop_04ec
 27922                                  .L_tc_recycle_frame_done_04ec:
 27923                                  ;this pop rbp in sot to the right place
 27924 00011160 4D89C7                  mov r15, r8
 27925                                  
 27926 00011163 4983C704                        add r15, 4
 27927                                  
 27928 00011167 49C1E703                        shl r15, 3
 27929                                  
 27930 0001116B 4C01FC                          add rsp, r15
 27931 0001116E 5D                      	pop rbp                                  ; restore the old rbp
 27932                                  
 27933 0001116F 488B4D00                        mov rcx, qword [rbp]
 27934 00011173 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27935                                            ; rbx <- code(proc)
 27936                                  
 27937 00011177 FFE3                            jmp rbx
 27938 00011179 EB0A                    	jmp .L_if_end_0286
 27939                                  	.L_if_else_0286:
 27940 0001117B 48B8-                   		mov rax, qword (L_constants + 1)
 27940 0001117D [0100000000000000] 
 27941                                  	.L_if_end_0286:
 27942 00011185 C9                      	leave
 27943 00011186 C22800                  	ret 8 * (2 + 3)
 27944                                  .L_lambda_simple_end_043a:	; new closure is in rax
 27945 00011189 50                      push rax
 27946 0001118A 488B4520                mov rax, qword [rbp + 32]
 27947 0001118E 8F00                    pop qword [rax]
 27948 00011190 48B8-                   mov rax, sob_void
 27948 00011192 [0000000000000000] 
 27949                                  
 27950 0001119A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27951 0001119F E8A3160000              	call malloc
 27952 000111A4 50                      	push rax
 27953 000111A5 BF08000000              	mov rdi, 8 * 1	; new rib
 27954 000111AA E898160000              	call malloc
 27955 000111AF 50                      	push rax
 27956 000111B0 BF10000000              	mov rdi, 8 * 2	; extended env
 27957 000111B5 E88D160000              	call malloc
 27958 000111BA 488B7D10                	mov rdi, ENV
 27959 000111BE BE00000000              	mov rsi, 0
 27960 000111C3 BA01000000              	mov rdx, 1
 27961                                  .L_lambda_simple_env_loop_043b:	; ext_env[i + 1] <-- env[i]
 27962 000111C8 4883FE01                	cmp rsi, 1
 27963 000111CC 7410                    	je .L_lambda_simple_env_end_043b
 27964 000111CE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27965 000111D2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27966 000111D6 48FFC6                  	inc rsi
 27967 000111D9 48FFC2                  	inc rdx
 27968 000111DC EBEA                    	jmp .L_lambda_simple_env_loop_043b
 27969                                  .L_lambda_simple_env_end_043b:
 27970 000111DE 5B                      	pop rbx
 27971 000111DF BE00000000              	mov rsi, 0
 27972                                  .L_lambda_simple_params_loop_043b:	; copy params
 27973 000111E4 4883FE01                	cmp rsi, 1
 27974 000111E8 740E                    	je .L_lambda_simple_params_end_043b
 27975 000111EA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27976 000111EF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27977 000111F3 48FFC6                  	inc rsi
 27978 000111F6 EBEC                    	jmp .L_lambda_simple_params_loop_043b
 27979                                  .L_lambda_simple_params_end_043b:
 27980 000111F8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27981 000111FB 4889C3                  	mov rbx, rax
 27982 000111FE 58                      	pop rax
 27983 000111FF C60005                  	mov byte [rax], T_closure
 27984 00011202 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27985 00011206 48C74009[13120100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043b
 27986 0001120E E9D1000000              	jmp .L_lambda_simple_end_043b
 27987                                  .L_lambda_simple_code_043b:	; lambda-simple body
 27988 00011213 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27989 00011219 740B                    	je .L_lambda_simple_arity_check_ok_0927
 27990 0001121B FF742410                	push qword [rsp + 8 * 2]
 27991 0001121F 6A01                    	push 1
 27992 00011221 E9DA150000              	jmp L_error_incorrect_arity_simple
 27993                                  .L_lambda_simple_arity_check_ok_0927:
 27994 00011226 C8000000                	enter 0, 0
 27995 0001122A 488B4520                mov rax, qword [rbp + 32]
 27996 0001122E 50                      	push rax
 27997 0001122F 6A01                    	push 1
 27998 00011231 488B0425[90000000]      	mov rax, qword [free_var_18]
 27999 00011239 803805                  	cmp byte [rax], T_closure 
 28000 0001123C 0F85C0250000                    jne L_code_ptr_error
 28001                                  
 28002 00011242 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28003                                  
 28004 00011246 53                              push rbx
 28005                                  
 28006 00011247 FF5009                          call SOB_CLOSURE_CODE(rax)
 28007                                  
 28008 0001124A 50                              	push rax
 28009 0001124B 48B8-                   	mov rax, qword (L_constants + 31)
 28009 0001124D [1F00000000000000] 
 28010 00011255 50                      	push rax
 28011 00011256 488B4520                mov rax, qword [rbp + 32]
 28012 0001125A 50                      	push rax
 28013 0001125B 6A03                    	push 3
 28014 0001125D 488B4510                mov rax, qword [rbp + 16]
 28015 00011261 488B00                  mov rax, qword [rax + 0]
 28016 00011264 488B00                  mov rax, qword [rax + 0]
 28017 00011267 488B00                  	mov rax, qword [rax]
 28018                                  .L_lambda_simple_arity_check_ok_0928:
 28019 0001126A 803805                  	cmp byte [rax], T_closure
 28020                                  
 28021 0001126D 0F858F250000                    jne L_code_ptr_error                      ; rax <- proc
 28022                                  
 28023                                  
 28024 00011273 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 28025                                  
 28026 00011277 53                              push rbx                                  ; env pushed
 28027                                  
 28028 00011278 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 28029                                  
 28030                                          ; sagydebug
 28031                                  
 28032 0001127B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 28033                                  
 28034                                          
 28035                                          
 28036 0001127E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 28037                                  
 28038 00011282 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 28039                                  
 28040                                  
 28041 00011287 4D89CA                          mov r10, r9
 28042 0001128A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 28043                                          
 28044 0001128E 4D89D7                          mov r15, r10
 28045 00011291 4983C7FF                        add r15, -1
 28046                                                                                         
 28047 00011295 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 28048 00011298 4983C404                        add r12, 4
 28049 0001129C 4983C4FF                        add r12, -1
 28050                                  
 28051 000112A0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 28052                                  .L_tc_recycle_frame_loop_04ed:
 28053 000112A6 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 28054                                  
 28055 000112AA 4E8974E500                      mov [rbp + (r12 * 8)], r14
 28056                                  
 28057                                  
 28058                                  
 28059 000112AF 41BE00000000                    mov r14, 0                                ; clean box
 28060                                  
 28061                                  
 28062 000112B5 4983C7FF                        add r15, -1           
 28063 000112B9 4983C2FF                        add r10, -1                               ; args_copied_counter--
 28064                                  
 28065 000112BD 4983C4FF                        add r12, -1 
 28066                                  
 28067 000112C1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 28068 000112C5 75DF                    	jne .L_tc_recycle_frame_loop_04ed
 28069                                  .L_tc_recycle_frame_done_04ed:
 28070                                  ;this pop rbp in sot to the right place
 28071 000112C7 4D89C7                  mov r15, r8
 28072                                  
 28073 000112CA 4983C704                        add r15, 4
 28074                                  
 28075 000112CE 49C1E703                        shl r15, 3
 28076                                  
 28077 000112D2 4C01FC                          add rsp, r15
 28078 000112D5 5D                      	pop rbp                                  ; restore the old rbp
 28079                                  
 28080 000112D6 488B4D00                        mov rcx, qword [rbp]
 28081 000112DA 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 28082                                            ; rbx <- code(proc)
 28083                                  
 28084 000112DE FFE3                            jmp rbx
 28085 000112E0 C9                      	leave
 28086 000112E1 C21800                  	ret 8 * (2 + 1)
 28087                                  .L_lambda_simple_end_043b:	; new closure is in rax
 28088 000112E4 C9                      	leave
 28089 000112E5 C21800                  	ret 8 * (2 + 1)
 28090                                  .L_lambda_simple_end_0439:	; new closure is in rax
 28091 000112E8 803805                  	cmp byte [rax], T_closure 
 28092 000112EB 0F8511250000                    jne L_code_ptr_error
 28093                                  
 28094 000112F1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28095                                  
 28096 000112F5 53                              push rbx
 28097                                  
 28098 000112F6 FF5009                          call SOB_CLOSURE_CODE(rax)
 28099                                  
 28100 000112F9 48890425[D8030000]              	mov qword [free_var_123], rax
 28101 00011301 48B8-                   	mov rax, sob_void
 28101 00011303 [0000000000000000] 
 28102                                  
 28103 0001130B 4889C7                  	mov rdi, rax
 28104 0001130E E845150000              	call print_sexpr_if_not_void
 28105                                  
 28106 00011313 48B8-                   	mov rax, qword (L_constants + 22)
 28106 00011315 [1600000000000000] 
 28107 0001131D 50                      	push rax
 28108 0001131E 6A01                    	push 1
 28109 00011320 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28110 00011325 E81D150000              	call malloc
 28111 0001132A 50                      	push rax
 28112 0001132B BF00000000              	mov rdi, 8 * 0	; new rib
 28113 00011330 E812150000              	call malloc
 28114 00011335 50                      	push rax
 28115 00011336 BF08000000              	mov rdi, 8 * 1	; extended env
 28116 0001133B E807150000              	call malloc
 28117 00011340 488B7D10                	mov rdi, ENV
 28118 00011344 BE00000000              	mov rsi, 0
 28119 00011349 BA01000000              	mov rdx, 1
 28120                                  .L_lambda_simple_env_loop_043c:	; ext_env[i + 1] <-- env[i]
 28121 0001134E 4883FE00                	cmp rsi, 0
 28122 00011352 7410                    	je .L_lambda_simple_env_end_043c
 28123 00011354 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28124 00011358 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28125 0001135C 48FFC6                  	inc rsi
 28126 0001135F 48FFC2                  	inc rdx
 28127 00011362 EBEA                    	jmp .L_lambda_simple_env_loop_043c
 28128                                  .L_lambda_simple_env_end_043c:
 28129 00011364 5B                      	pop rbx
 28130 00011365 BE00000000              	mov rsi, 0
 28131                                  .L_lambda_simple_params_loop_043c:	; copy params
 28132 0001136A 4883FE00                	cmp rsi, 0
 28133 0001136E 740E                    	je .L_lambda_simple_params_end_043c
 28134 00011370 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28135 00011375 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28136 00011379 48FFC6                  	inc rsi
 28137 0001137C EBEC                    	jmp .L_lambda_simple_params_loop_043c
 28138                                  .L_lambda_simple_params_end_043c:
 28139 0001137E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28140 00011381 4889C3                  	mov rbx, rax
 28141 00011384 58                      	pop rax
 28142 00011385 C60005                  	mov byte [rax], T_closure
 28143 00011388 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28144 0001138C 48C74009[99130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043c
 28145 00011394 E966030000              	jmp .L_lambda_simple_end_043c
 28146                                  .L_lambda_simple_code_043c:	; lambda-simple body
 28147 00011399 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28148 0001139F 740B                    	je .L_lambda_simple_arity_check_ok_0929
 28149 000113A1 FF742410                	push qword [rsp + 8 * 2]
 28150 000113A5 6A01                    	push 1
 28151 000113A7 E954140000              	jmp L_error_incorrect_arity_simple
 28152                                  .L_lambda_simple_arity_check_ok_0929:
 28153 000113AC C8000000                	enter 0, 0
 28154 000113B0 488B4520                mov rax, qword [rbp + 32]
 28155 000113B4 BF08000000              mov rdi, 8
 28156 000113B9 4889C3                  mov rbx, rax
 28157 000113BC E886140000              call malloc
 28158 000113C1 488918                  mov qword [rax], rbx
 28159 000113C4 48894520                mov qword [rbp + 32], rax
 28160 000113C8 48B8-                   mov rax, sob_void
 28160 000113CA [0000000000000000] 
 28161 000113D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28162 000113D7 E86B140000              	call malloc
 28163 000113DC 50                      	push rax
 28164 000113DD BF08000000              	mov rdi, 8 * 1	; new rib
 28165 000113E2 E860140000              	call malloc
 28166 000113E7 50                      	push rax
 28167 000113E8 BF10000000              	mov rdi, 8 * 2	; extended env
 28168 000113ED E855140000              	call malloc
 28169 000113F2 488B7D10                	mov rdi, ENV
 28170 000113F6 BE00000000              	mov rsi, 0
 28171 000113FB BA01000000              	mov rdx, 1
 28172                                  .L_lambda_simple_env_loop_043d:	; ext_env[i + 1] <-- env[i]
 28173 00011400 4883FE01                	cmp rsi, 1
 28174 00011404 7410                    	je .L_lambda_simple_env_end_043d
 28175 00011406 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28176 0001140A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28177 0001140E 48FFC6                  	inc rsi
 28178 00011411 48FFC2                  	inc rdx
 28179 00011414 EBEA                    	jmp .L_lambda_simple_env_loop_043d
 28180                                  .L_lambda_simple_env_end_043d:
 28181 00011416 5B                      	pop rbx
 28182 00011417 BE00000000              	mov rsi, 0
 28183                                  .L_lambda_simple_params_loop_043d:	; copy params
 28184 0001141C 4883FE01                	cmp rsi, 1
 28185 00011420 740E                    	je .L_lambda_simple_params_end_043d
 28186 00011422 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28187 00011427 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28188 0001142B 48FFC6                  	inc rsi
 28189 0001142E EBEC                    	jmp .L_lambda_simple_params_loop_043d
 28190                                  .L_lambda_simple_params_end_043d:
 28191 00011430 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28192 00011433 4889C3                  	mov rbx, rax
 28193 00011436 58                      	pop rax
 28194 00011437 C60005                  	mov byte [rax], T_closure
 28195 0001143A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28196 0001143E 48C74009[4B140100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043d
 28197 00011446 E955010000              	jmp .L_lambda_simple_end_043d
 28198                                  .L_lambda_simple_code_043d:	; lambda-simple body
 28199 0001144B 48837C241003            	cmp qword [rsp + 8 * 2], 3
 28200 00011451 740B                    	je .L_lambda_simple_arity_check_ok_092a
 28201 00011453 FF742410                	push qword [rsp + 8 * 2]
 28202 00011457 6A03                    	push 3
 28203 00011459 E9A2130000              	jmp L_error_incorrect_arity_simple
 28204                                  .L_lambda_simple_arity_check_ok_092a:
 28205 0001145E C8000000                	enter 0, 0
 28206 00011462 488B4530                mov rax, qword [rbp + 48]
 28207 00011466 50                      	push rax
 28208 00011467 488B4528                mov rax, qword [rbp + 40]
 28209 0001146B 50                      	push rax
 28210 0001146C 6A02                    	push 2
 28211 0001146E 488B0425[30030000]      	mov rax, qword [free_var_102]
 28212 00011476 803805                  	cmp byte [rax], T_closure 
 28213 00011479 0F8583230000                    jne L_code_ptr_error
 28214                                  
 28215 0001147F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28216                                  
 28217 00011483 53                              push rbx
 28218                                  
 28219 00011484 FF5009                          call SOB_CLOSURE_CODE(rax)
 28220                                  
 28221 00011487 483D[02000000]                  	cmp rax, sob_boolean_false
 28222 0001148D 0F84FF000000            	je .L_if_else_0287
 28223 00011493 488B4530                mov rax, qword [rbp + 48]
 28224 00011497 50                      	push rax
 28225 00011498 48B8-                   	mov rax, qword (L_constants + 127)
 28225 0001149A [7F00000000000000] 
 28226 000114A2 50                      	push rax
 28227 000114A3 488B4528                mov rax, qword [rbp + 40]
 28228 000114A7 50                      	push rax
 28229 000114A8 6A02                    	push 2
 28230 000114AA 488B0425[08030000]      	mov rax, qword [free_var_97]
 28231 000114B2 803805                  	cmp byte [rax], T_closure 
 28232 000114B5 0F8547230000                    jne L_code_ptr_error
 28233                                  
 28234 000114BB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28235                                  
 28236 000114BF 53                              push rbx
 28237                                  
 28238 000114C0 FF5009                          call SOB_CLOSURE_CODE(rax)
 28239                                  
 28240 000114C3 50                              	push rax
 28241 000114C4 488B4520                mov rax, qword [rbp + 32]
 28242 000114C8 50                      	push rax
 28243 000114C9 6A03                    	push 3
 28244 000114CB 488B4510                mov rax, qword [rbp + 16]
 28245 000114CF 488B00                  mov rax, qword [rax + 0]
 28246 000114D2 488B00                  mov rax, qword [rax + 0]
 28247 000114D5 488B00                  	mov rax, qword [rax]
 28248 000114D8 803805                  	cmp byte [rax], T_closure 
 28249 000114DB 0F8521230000                    jne L_code_ptr_error
 28250                                  
 28251 000114E1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28252                                  
 28253 000114E5 53                              push rbx
 28254                                  
 28255 000114E6 FF5009                          call SOB_CLOSURE_CODE(rax)
 28256                                  
 28257 000114E9 50                              	push rax
 28258 000114EA 488B4528                mov rax, qword [rbp + 40]
 28259 000114EE 50                      	push rax
 28260 000114EF 488B4520                mov rax, qword [rbp + 32]
 28261 000114F3 50                      	push rax
 28262 000114F4 6A02                    	push 2
 28263 000114F6 488B0425[80010000]      	mov rax, qword [free_var_48]
 28264 000114FE 803805                  	cmp byte [rax], T_closure 
 28265 00011501 0F85FB220000                    jne L_code_ptr_error
 28266                                  
 28267 00011507 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28268                                  
 28269 0001150B 53                              push rbx
 28270                                  
 28271 0001150C FF5009                          call SOB_CLOSURE_CODE(rax)
 28272                                  
 28273 0001150F 50                              	push rax
 28274 00011510 6A02                    	push 2
 28275 00011512 488B0425[68000000]      	mov rax, qword [free_var_13]
 28276                                  .L_lambda_simple_arity_check_ok_092b:
 28277 0001151A 803805                  	cmp byte [rax], T_closure
 28278                                  
 28279 0001151D 0F85DF220000                    jne L_code_ptr_error                      ; rax <- proc
 28280                                  
 28281                                  
 28282 00011523 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 28283                                  
 28284 00011527 53                              push rbx                                  ; env pushed
 28285                                  
 28286 00011528 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 28287                                  
 28288                                          ; sagydebug
 28289                                  
 28290 0001152B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 28291                                  
 28292                                          
 28293                                          
 28294 0001152E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 28295                                  
 28296 00011532 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 28297                                  
 28298                                  
 28299 00011537 4D89CA                          mov r10, r9
 28300 0001153A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 28301                                          
 28302 0001153E 4D89D7                          mov r15, r10
 28303 00011541 4983C7FF                        add r15, -1
 28304                                                                                         
 28305 00011545 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 28306 00011548 4983C404                        add r12, 4
 28307 0001154C 4983C4FF                        add r12, -1
 28308                                  
 28309 00011550 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 28310                                  .L_tc_recycle_frame_loop_04ee:
 28311 00011556 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 28312                                  
 28313 0001155A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 28314                                  
 28315                                  
 28316                                  
 28317 0001155F 41BE00000000                    mov r14, 0                                ; clean box
 28318                                  
 28319                                  
 28320 00011565 4983C7FF                        add r15, -1           
 28321 00011569 4983C2FF                        add r10, -1                               ; args_copied_counter--
 28322                                  
 28323 0001156D 4983C4FF                        add r12, -1 
 28324                                  
 28325 00011571 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 28326 00011575 75DF                    	jne .L_tc_recycle_frame_loop_04ee
 28327                                  .L_tc_recycle_frame_done_04ee:
 28328                                  ;this pop rbp in sot to the right place
 28329 00011577 4D89C7                  mov r15, r8
 28330                                  
 28331 0001157A 4983C704                        add r15, 4
 28332                                  
 28333 0001157E 49C1E703                        shl r15, 3
 28334                                  
 28335 00011582 4C01FC                          add rsp, r15
 28336 00011585 5D                      	pop rbp                                  ; restore the old rbp
 28337                                  
 28338 00011586 488B4D00                        mov rcx, qword [rbp]
 28339 0001158A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 28340                                            ; rbx <- code(proc)
 28341                                  
 28342 0001158E FFE3                            jmp rbx
 28343 00011590 EB0A                    	jmp .L_if_end_0287
 28344                                  	.L_if_else_0287:
 28345 00011592 48B8-                   		mov rax, qword (L_constants + 1)
 28345 00011594 [0100000000000000] 
 28346                                  	.L_if_end_0287:
 28347 0001159C C9                      	leave
 28348 0001159D C22800                  	ret 8 * (2 + 3)
 28349                                  .L_lambda_simple_end_043d:	; new closure is in rax
 28350 000115A0 50                      push rax
 28351 000115A1 488B4520                mov rax, qword [rbp + 32]
 28352 000115A5 8F00                    pop qword [rax]
 28353 000115A7 48B8-                   mov rax, sob_void
 28353 000115A9 [0000000000000000] 
 28354                                  
 28355 000115B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28356 000115B6 E88C120000              	call malloc
 28357 000115BB 50                      	push rax
 28358 000115BC BF08000000              	mov rdi, 8 * 1	; new rib
 28359 000115C1 E881120000              	call malloc
 28360 000115C6 50                      	push rax
 28361 000115C7 BF10000000              	mov rdi, 8 * 2	; extended env
 28362 000115CC E876120000              	call malloc
 28363 000115D1 488B7D10                	mov rdi, ENV
 28364 000115D5 BE00000000              	mov rsi, 0
 28365 000115DA BA01000000              	mov rdx, 1
 28366                                  .L_lambda_simple_env_loop_043e:	; ext_env[i + 1] <-- env[i]
 28367 000115DF 4883FE01                	cmp rsi, 1
 28368 000115E3 7410                    	je .L_lambda_simple_env_end_043e
 28369 000115E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28370 000115E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28371 000115ED 48FFC6                  	inc rsi
 28372 000115F0 48FFC2                  	inc rdx
 28373 000115F3 EBEA                    	jmp .L_lambda_simple_env_loop_043e
 28374                                  .L_lambda_simple_env_end_043e:
 28375 000115F5 5B                      	pop rbx
 28376 000115F6 BE00000000              	mov rsi, 0
 28377                                  .L_lambda_simple_params_loop_043e:	; copy params
 28378 000115FB 4883FE01                	cmp rsi, 1
 28379 000115FF 740E                    	je .L_lambda_simple_params_end_043e
 28380 00011601 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28381 00011606 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28382 0001160A 48FFC6                  	inc rsi
 28383 0001160D EBEC                    	jmp .L_lambda_simple_params_loop_043e
 28384                                  .L_lambda_simple_params_end_043e:
 28385 0001160F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28386 00011612 4889C3                  	mov rbx, rax
 28387 00011615 58                      	pop rax
 28388 00011616 C60005                  	mov byte [rax], T_closure
 28389 00011619 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28390 0001161D 48C74009[2A160100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043e
 28391 00011625 E9D1000000              	jmp .L_lambda_simple_end_043e
 28392                                  .L_lambda_simple_code_043e:	; lambda-simple body
 28393 0001162A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28394 00011630 740B                    	je .L_lambda_simple_arity_check_ok_092c
 28395 00011632 FF742410                	push qword [rsp + 8 * 2]
 28396 00011636 6A01                    	push 1
 28397 00011638 E9C3110000              	jmp L_error_incorrect_arity_simple
 28398                                  .L_lambda_simple_arity_check_ok_092c:
 28399 0001163D C8000000                	enter 0, 0
 28400 00011641 488B4520                mov rax, qword [rbp + 32]
 28401 00011645 50                      	push rax
 28402 00011646 6A01                    	push 1
 28403 00011648 488B0425[98000000]      	mov rax, qword [free_var_19]
 28404 00011650 803805                  	cmp byte [rax], T_closure 
 28405 00011653 0F85A9210000                    jne L_code_ptr_error
 28406                                  
 28407 00011659 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28408                                  
 28409 0001165D 53                              push rbx
 28410                                  
 28411 0001165E FF5009                          call SOB_CLOSURE_CODE(rax)
 28412                                  
 28413 00011661 50                              	push rax
 28414 00011662 48B8-                   	mov rax, qword (L_constants + 31)
 28414 00011664 [1F00000000000000] 
 28415 0001166C 50                      	push rax
 28416 0001166D 488B4520                mov rax, qword [rbp + 32]
 28417 00011671 50                      	push rax
 28418 00011672 6A03                    	push 3
 28419 00011674 488B4510                mov rax, qword [rbp + 16]
 28420 00011678 488B00                  mov rax, qword [rax + 0]
 28421 0001167B 488B00                  mov rax, qword [rax + 0]
 28422 0001167E 488B00                  	mov rax, qword [rax]
 28423                                  .L_lambda_simple_arity_check_ok_092d:
 28424 00011681 803805                  	cmp byte [rax], T_closure
 28425                                  
 28426 00011684 0F8578210000                    jne L_code_ptr_error                      ; rax <- proc
 28427                                  
 28428                                  
 28429 0001168A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 28430                                  
 28431 0001168E 53                              push rbx                                  ; env pushed
 28432                                  
 28433 0001168F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 28434                                  
 28435                                          ; sagydebug
 28436                                  
 28437 00011692 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 28438                                  
 28439                                          
 28440                                          
 28441 00011695 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 28442                                  
 28443 00011699 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 28444                                  
 28445                                  
 28446 0001169E 4D89CA                          mov r10, r9
 28447 000116A1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 28448                                          
 28449 000116A5 4D89D7                          mov r15, r10
 28450 000116A8 4983C7FF                        add r15, -1
 28451                                                                                         
 28452 000116AC 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 28453 000116AF 4983C404                        add r12, 4
 28454 000116B3 4983C4FF                        add r12, -1
 28455                                  
 28456 000116B7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 28457                                  .L_tc_recycle_frame_loop_04ef:
 28458 000116BD 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 28459                                  
 28460 000116C1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 28461                                  
 28462                                  
 28463                                  
 28464 000116C6 41BE00000000                    mov r14, 0                                ; clean box
 28465                                  
 28466                                  
 28467 000116CC 4983C7FF                        add r15, -1           
 28468 000116D0 4983C2FF                        add r10, -1                               ; args_copied_counter--
 28469                                  
 28470 000116D4 4983C4FF                        add r12, -1 
 28471                                  
 28472 000116D8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 28473 000116DC 75DF                    	jne .L_tc_recycle_frame_loop_04ef
 28474                                  .L_tc_recycle_frame_done_04ef:
 28475                                  ;this pop rbp in sot to the right place
 28476 000116DE 4D89C7                  mov r15, r8
 28477                                  
 28478 000116E1 4983C704                        add r15, 4
 28479                                  
 28480 000116E5 49C1E703                        shl r15, 3
 28481                                  
 28482 000116E9 4C01FC                          add rsp, r15
 28483 000116EC 5D                      	pop rbp                                  ; restore the old rbp
 28484                                  
 28485 000116ED 488B4D00                        mov rcx, qword [rbp]
 28486 000116F1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 28487                                            ; rbx <- code(proc)
 28488                                  
 28489 000116F5 FFE3                            jmp rbx
 28490 000116F7 C9                      	leave
 28491 000116F8 C21800                  	ret 8 * (2 + 1)
 28492                                  .L_lambda_simple_end_043e:	; new closure is in rax
 28493 000116FB C9                      	leave
 28494 000116FC C21800                  	ret 8 * (2 + 1)
 28495                                  .L_lambda_simple_end_043c:	; new closure is in rax
 28496 000116FF 803805                  	cmp byte [rax], T_closure 
 28497 00011702 0F85FA200000                    jne L_code_ptr_error
 28498                                  
 28499 00011708 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28500                                  
 28501 0001170C 53                              push rbx
 28502                                  
 28503 0001170D FF5009                          call SOB_CLOSURE_CODE(rax)
 28504                                  
 28505 00011710 48890425[48040000]              	mov qword [free_var_137], rax
 28506 00011718 48B8-                   	mov rax, sob_void
 28506 0001171A [0000000000000000] 
 28507                                  
 28508 00011722 4889C7                  	mov rdi, rax
 28509 00011725 E82E110000              	call print_sexpr_if_not_void
 28510                                  
 28511 0001172A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28512 0001172F E813110000              	call malloc
 28513 00011734 50                      	push rax
 28514 00011735 BF00000000              	mov rdi, 8 * 0	; new rib
 28515 0001173A E808110000              	call malloc
 28516 0001173F 50                      	push rax
 28517 00011740 BF08000000              	mov rdi, 8 * 1	; extended env
 28518 00011745 E8FD100000              	call malloc
 28519 0001174A 488B7D10                	mov rdi, ENV
 28520 0001174E BE00000000              	mov rsi, 0
 28521 00011753 BA01000000              	mov rdx, 1
 28522                                  .L_lambda_simple_env_loop_043f:	; ext_env[i + 1] <-- env[i]
 28523 00011758 4883FE00                	cmp rsi, 0
 28524 0001175C 7410                    	je .L_lambda_simple_env_end_043f
 28525 0001175E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28526 00011762 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28527 00011766 48FFC6                  	inc rsi
 28528 00011769 48FFC2                  	inc rdx
 28529 0001176C EBEA                    	jmp .L_lambda_simple_env_loop_043f
 28530                                  .L_lambda_simple_env_end_043f:
 28531 0001176E 5B                      	pop rbx
 28532 0001176F BE00000000              	mov rsi, 0
 28533                                  .L_lambda_simple_params_loop_043f:	; copy params
 28534 00011774 4883FE00                	cmp rsi, 0
 28535 00011778 740E                    	je .L_lambda_simple_params_end_043f
 28536 0001177A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28537 0001177F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28538 00011783 48FFC6                  	inc rsi
 28539 00011786 EBEC                    	jmp .L_lambda_simple_params_loop_043f
 28540                                  .L_lambda_simple_params_end_043f:
 28541 00011788 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28542 0001178B 4889C3                  	mov rbx, rax
 28543 0001178E 58                      	pop rax
 28544 0001178F C60005                  	mov byte [rax], T_closure
 28545 00011792 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28546 00011796 48C74009[A3170100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_043f
 28547 0001179E E9BC000000              	jmp .L_lambda_simple_end_043f
 28548                                  .L_lambda_simple_code_043f:	; lambda-simple body
 28549 000117A3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28550 000117A9 740B                    	je .L_lambda_simple_arity_check_ok_092e
 28551 000117AB FF742410                	push qword [rsp + 8 * 2]
 28552 000117AF 6A01                    	push 1
 28553 000117B1 E94A100000              	jmp L_error_incorrect_arity_simple
 28554                                  .L_lambda_simple_arity_check_ok_092e:
 28555 000117B6 C8000000                	enter 0, 0
 28556 000117BA 488B4520                mov rax, qword [rbp + 32]
 28557 000117BE 50                      	push rax
 28558 000117BF 6A00                    	push 0
 28559 000117C1 488B0425[D0000000]      	mov rax, qword [free_var_26]
 28560 000117C9 803805                  	cmp byte [rax], T_closure 
 28561 000117CC 0F8530200000                    jne L_code_ptr_error
 28562                                  
 28563 000117D2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28564                                  
 28565 000117D6 53                              push rbx
 28566                                  
 28567 000117D7 FF5009                          call SOB_CLOSURE_CODE(rax)
 28568                                  
 28569 000117DA 50                              	push rax
 28570 000117DB 6A02                    	push 2
 28571 000117DD 488B0425[60010000]      	mov rax, qword [free_var_44]
 28572                                  .L_lambda_simple_arity_check_ok_092f:
 28573 000117E5 803805                  	cmp byte [rax], T_closure
 28574                                  
 28575 000117E8 0F8514200000                    jne L_code_ptr_error                      ; rax <- proc
 28576                                  
 28577                                  
 28578 000117EE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 28579                                  
 28580 000117F2 53                              push rbx                                  ; env pushed
 28581                                  
 28582 000117F3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 28583                                  
 28584                                          ; sagydebug
 28585                                  
 28586 000117F6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 28587                                  
 28588                                          
 28589                                          
 28590 000117F9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 28591                                  
 28592 000117FD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 28593                                  
 28594                                  
 28595 00011802 4D89CA                          mov r10, r9
 28596 00011805 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 28597                                          
 28598 00011809 4D89D7                          mov r15, r10
 28599 0001180C 4983C7FF                        add r15, -1
 28600                                                                                         
 28601 00011810 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 28602 00011813 4983C404                        add r12, 4
 28603 00011817 4983C4FF                        add r12, -1
 28604                                  
 28605 0001181B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 28606                                  .L_tc_recycle_frame_loop_04f0:
 28607 00011821 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 28608                                  
 28609 00011825 4E8974E500                      mov [rbp + (r12 * 8)], r14
 28610                                  
 28611                                  
 28612                                  
 28613 0001182A 41BE00000000                    mov r14, 0                                ; clean box
 28614                                  
 28615                                  
 28616 00011830 4983C7FF                        add r15, -1           
 28617 00011834 4983C2FF                        add r10, -1                               ; args_copied_counter--
 28618                                  
 28619 00011838 4983C4FF                        add r12, -1 
 28620                                  
 28621 0001183C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 28622 00011840 75DF                    	jne .L_tc_recycle_frame_loop_04f0
 28623                                  .L_tc_recycle_frame_done_04f0:
 28624                                  ;this pop rbp in sot to the right place
 28625 00011842 4D89C7                  mov r15, r8
 28626                                  
 28627 00011845 4983C704                        add r15, 4
 28628                                  
 28629 00011849 49C1E703                        shl r15, 3
 28630                                  
 28631 0001184D 4C01FC                          add rsp, r15
 28632 00011850 5D                      	pop rbp                                  ; restore the old rbp
 28633                                  
 28634 00011851 488B4D00                        mov rcx, qword [rbp]
 28635 00011855 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 28636                                            ; rbx <- code(proc)
 28637                                  
 28638 00011859 FFE3                            jmp rbx
 28639 0001185B C9                      	leave
 28640 0001185C C21800                  	ret 8 * (2 + 1)
 28641                                  .L_lambda_simple_end_043f:	; new closure is in rax
 28642 0001185F 48890425[50040000]      	mov qword [free_var_138], rax
 28643 00011867 48B8-                   	mov rax, sob_void
 28643 00011869 [0000000000000000] 
 28644                                  
 28645 00011871 4889C7                  	mov rdi, rax
 28646 00011874 E8DF0F0000              	call print_sexpr_if_not_void
 28647                                  
 28648 00011879 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28649 0001187E E8C40F0000              	call malloc
 28650 00011883 50                      	push rax
 28651 00011884 BF00000000              	mov rdi, 8 * 0	; new rib
 28652 00011889 E8B90F0000              	call malloc
 28653 0001188E 50                      	push rax
 28654 0001188F BF08000000              	mov rdi, 8 * 1	; extended env
 28655 00011894 E8AE0F0000              	call malloc
 28656 00011899 488B7D10                	mov rdi, ENV
 28657 0001189D BE00000000              	mov rsi, 0
 28658 000118A2 BA01000000              	mov rdx, 1
 28659                                  .L_lambda_simple_env_loop_0440:	; ext_env[i + 1] <-- env[i]
 28660 000118A7 4883FE00                	cmp rsi, 0
 28661 000118AB 7410                    	je .L_lambda_simple_env_end_0440
 28662 000118AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28663 000118B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28664 000118B5 48FFC6                  	inc rsi
 28665 000118B8 48FFC2                  	inc rdx
 28666 000118BB EBEA                    	jmp .L_lambda_simple_env_loop_0440
 28667                                  .L_lambda_simple_env_end_0440:
 28668 000118BD 5B                      	pop rbx
 28669 000118BE BE00000000              	mov rsi, 0
 28670                                  .L_lambda_simple_params_loop_0440:	; copy params
 28671 000118C3 4883FE00                	cmp rsi, 0
 28672 000118C7 740E                    	je .L_lambda_simple_params_end_0440
 28673 000118C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28674 000118CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28675 000118D2 48FFC6                  	inc rsi
 28676 000118D5 EBEC                    	jmp .L_lambda_simple_params_loop_0440
 28677                                  .L_lambda_simple_params_end_0440:
 28678 000118D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28679 000118DA 4889C3                  	mov rbx, rax
 28680 000118DD 58                      	pop rax
 28681 000118DE C60005                  	mov byte [rax], T_closure
 28682 000118E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28683 000118E5 48C74009[F2180100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0440
 28684 000118ED E9AB000000              	jmp .L_lambda_simple_end_0440
 28685                                  .L_lambda_simple_code_0440:	; lambda-simple body
 28686 000118F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28687 000118F8 740B                    	je .L_lambda_simple_arity_check_ok_0930
 28688 000118FA FF742410                	push qword [rsp + 8 * 2]
 28689 000118FE 6A01                    	push 1
 28690 00011900 E9FB0E0000              	jmp L_error_incorrect_arity_simple
 28691                                  .L_lambda_simple_arity_check_ok_0930:
 28692 00011905 C8000000                	enter 0, 0
 28693 00011909 488B4520                mov rax, qword [rbp + 32]
 28694 0001190D 50                      	push rax
 28695 0001190E 48B8-                   	mov rax, qword (L_constants + 31)
 28695 00011910 [1F00000000000000] 
 28696 00011918 50                      	push rax
 28697 00011919 6A02                    	push 2
 28698 0001191B 488B0425[30030000]      	mov rax, qword [free_var_102]
 28699                                  .L_lambda_simple_arity_check_ok_0931:
 28700 00011923 803805                  	cmp byte [rax], T_closure
 28701                                  
 28702 00011926 0F85D61E0000                    jne L_code_ptr_error                      ; rax <- proc
 28703                                  
 28704                                  
 28705 0001192C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 28706                                  
 28707 00011930 53                              push rbx                                  ; env pushed
 28708                                  
 28709 00011931 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 28710                                  
 28711                                          ; sagydebug
 28712                                  
 28713 00011934 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 28714                                  
 28715                                          
 28716                                          
 28717 00011937 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 28718                                  
 28719 0001193B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 28720                                  
 28721                                  
 28722 00011940 4D89CA                          mov r10, r9
 28723 00011943 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 28724                                          
 28725 00011947 4D89D7                          mov r15, r10
 28726 0001194A 4983C7FF                        add r15, -1
 28727                                                                                         
 28728 0001194E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 28729 00011951 4983C404                        add r12, 4
 28730 00011955 4983C4FF                        add r12, -1
 28731                                  
 28732 00011959 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 28733                                  .L_tc_recycle_frame_loop_04f1:
 28734 0001195F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 28735                                  
 28736 00011963 4E8974E500                      mov [rbp + (r12 * 8)], r14
 28737                                  
 28738                                  
 28739                                  
 28740 00011968 41BE00000000                    mov r14, 0                                ; clean box
 28741                                  
 28742                                  
 28743 0001196E 4983C7FF                        add r15, -1           
 28744 00011972 4983C2FF                        add r10, -1                               ; args_copied_counter--
 28745                                  
 28746 00011976 4983C4FF                        add r12, -1 
 28747                                  
 28748 0001197A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 28749 0001197E 75DF                    	jne .L_tc_recycle_frame_loop_04f1
 28750                                  .L_tc_recycle_frame_done_04f1:
 28751                                  ;this pop rbp in sot to the right place
 28752 00011980 4D89C7                  mov r15, r8
 28753                                  
 28754 00011983 4983C704                        add r15, 4
 28755                                  
 28756 00011987 49C1E703                        shl r15, 3
 28757                                  
 28758 0001198B 4C01FC                          add rsp, r15
 28759 0001198E 5D                      	pop rbp                                  ; restore the old rbp
 28760                                  
 28761 0001198F 488B4D00                        mov rcx, qword [rbp]
 28762 00011993 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 28763                                            ; rbx <- code(proc)
 28764                                  
 28765 00011997 FFE3                            jmp rbx
 28766 00011999 C9                      	leave
 28767 0001199A C21800                  	ret 8 * (2 + 1)
 28768                                  .L_lambda_simple_end_0440:	; new closure is in rax
 28769 0001199D 48890425[58040000]      	mov qword [free_var_139], rax
 28770 000119A5 48B8-                   	mov rax, sob_void
 28770 000119A7 [0000000000000000] 
 28771                                  
 28772 000119AF 4889C7                  	mov rdi, rax
 28773 000119B2 E8A10E0000              	call print_sexpr_if_not_void
 28774                                  
 28775 000119B7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28776 000119BC E8860E0000              	call malloc
 28777 000119C1 50                      	push rax
 28778 000119C2 BF00000000              	mov rdi, 8 * 0	; new rib
 28779 000119C7 E87B0E0000              	call malloc
 28780 000119CC 50                      	push rax
 28781 000119CD BF08000000              	mov rdi, 8 * 1	; extended env
 28782 000119D2 E8700E0000              	call malloc
 28783 000119D7 488B7D10                	mov rdi, ENV
 28784 000119DB BE00000000              	mov rsi, 0
 28785 000119E0 BA01000000              	mov rdx, 1
 28786                                  .L_lambda_simple_env_loop_0441:	; ext_env[i + 1] <-- env[i]
 28787 000119E5 4883FE00                	cmp rsi, 0
 28788 000119E9 7410                    	je .L_lambda_simple_env_end_0441
 28789 000119EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28790 000119EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28791 000119F3 48FFC6                  	inc rsi
 28792 000119F6 48FFC2                  	inc rdx
 28793 000119F9 EBEA                    	jmp .L_lambda_simple_env_loop_0441
 28794                                  .L_lambda_simple_env_end_0441:
 28795 000119FB 5B                      	pop rbx
 28796 000119FC BE00000000              	mov rsi, 0
 28797                                  .L_lambda_simple_params_loop_0441:	; copy params
 28798 00011A01 4883FE00                	cmp rsi, 0
 28799 00011A05 740E                    	je .L_lambda_simple_params_end_0441
 28800 00011A07 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28801 00011A0C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28802 00011A10 48FFC6                  	inc rsi
 28803 00011A13 EBEC                    	jmp .L_lambda_simple_params_loop_0441
 28804                                  .L_lambda_simple_params_end_0441:
 28805 00011A15 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28806 00011A18 4889C3                  	mov rbx, rax
 28807 00011A1B 58                      	pop rax
 28808 00011A1C C60005                  	mov byte [rax], T_closure
 28809 00011A1F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28810 00011A23 48C74009[301A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0441
 28811 00011A2B E9AB000000              	jmp .L_lambda_simple_end_0441
 28812                                  .L_lambda_simple_code_0441:	; lambda-simple body
 28813 00011A30 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28814 00011A36 740B                    	je .L_lambda_simple_arity_check_ok_0932
 28815 00011A38 FF742410                	push qword [rsp + 8 * 2]
 28816 00011A3C 6A01                    	push 1
 28817 00011A3E E9BD0D0000              	jmp L_error_incorrect_arity_simple
 28818                                  .L_lambda_simple_arity_check_ok_0932:
 28819 00011A43 C8000000                	enter 0, 0
 28820 00011A47 48B8-                   	mov rax, qword (L_constants + 31)
 28820 00011A49 [1F00000000000000] 
 28821 00011A51 50                      	push rax
 28822 00011A52 488B4520                mov rax, qword [rbp + 32]
 28823 00011A56 50                      	push rax
 28824 00011A57 6A02                    	push 2
 28825 00011A59 488B0425[30030000]      	mov rax, qword [free_var_102]
 28826                                  .L_lambda_simple_arity_check_ok_0933:
 28827 00011A61 803805                  	cmp byte [rax], T_closure
 28828                                  
 28829 00011A64 0F85981D0000                    jne L_code_ptr_error                      ; rax <- proc
 28830                                  
 28831                                  
 28832 00011A6A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 28833                                  
 28834 00011A6E 53                              push rbx                                  ; env pushed
 28835                                  
 28836 00011A6F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 28837                                  
 28838                                          ; sagydebug
 28839                                  
 28840 00011A72 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 28841                                  
 28842                                          
 28843                                          
 28844 00011A75 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 28845                                  
 28846 00011A79 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 28847                                  
 28848                                  
 28849 00011A7E 4D89CA                          mov r10, r9
 28850 00011A81 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 28851                                          
 28852 00011A85 4D89D7                          mov r15, r10
 28853 00011A88 4983C7FF                        add r15, -1
 28854                                                                                         
 28855 00011A8C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 28856 00011A8F 4983C404                        add r12, 4
 28857 00011A93 4983C4FF                        add r12, -1
 28858                                  
 28859 00011A97 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 28860                                  .L_tc_recycle_frame_loop_04f2:
 28861 00011A9D 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 28862                                  
 28863 00011AA1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 28864                                  
 28865                                  
 28866                                  
 28867 00011AA6 41BE00000000                    mov r14, 0                                ; clean box
 28868                                  
 28869                                  
 28870 00011AAC 4983C7FF                        add r15, -1           
 28871 00011AB0 4983C2FF                        add r10, -1                               ; args_copied_counter--
 28872                                  
 28873 00011AB4 4983C4FF                        add r12, -1 
 28874                                  
 28875 00011AB8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 28876 00011ABC 75DF                    	jne .L_tc_recycle_frame_loop_04f2
 28877                                  .L_tc_recycle_frame_done_04f2:
 28878                                  ;this pop rbp in sot to the right place
 28879 00011ABE 4D89C7                  mov r15, r8
 28880                                  
 28881 00011AC1 4983C704                        add r15, 4
 28882                                  
 28883 00011AC5 49C1E703                        shl r15, 3
 28884                                  
 28885 00011AC9 4C01FC                          add rsp, r15
 28886 00011ACC 5D                      	pop rbp                                  ; restore the old rbp
 28887                                  
 28888 00011ACD 488B4D00                        mov rcx, qword [rbp]
 28889 00011AD1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 28890                                            ; rbx <- code(proc)
 28891                                  
 28892 00011AD5 FFE3                            jmp rbx
 28893 00011AD7 C9                      	leave
 28894 00011AD8 C21800                  	ret 8 * (2 + 1)
 28895                                  .L_lambda_simple_end_0441:	; new closure is in rax
 28896 00011ADB 48890425[60040000]      	mov qword [free_var_140], rax
 28897 00011AE3 48B8-                   	mov rax, sob_void
 28897 00011AE5 [0000000000000000] 
 28898                                  
 28899 00011AED 4889C7                  	mov rdi, rax
 28900 00011AF0 E8630D0000              	call print_sexpr_if_not_void
 28901                                  
 28902 00011AF5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28903 00011AFA E8480D0000              	call malloc
 28904 00011AFF 50                      	push rax
 28905 00011B00 BF00000000              	mov rdi, 8 * 0	; new rib
 28906 00011B05 E83D0D0000              	call malloc
 28907 00011B0A 50                      	push rax
 28908 00011B0B BF08000000              	mov rdi, 8 * 1	; extended env
 28909 00011B10 E8320D0000              	call malloc
 28910 00011B15 488B7D10                	mov rdi, ENV
 28911 00011B19 BE00000000              	mov rsi, 0
 28912 00011B1E BA01000000              	mov rdx, 1
 28913                                  .L_lambda_simple_env_loop_0442:	; ext_env[i + 1] <-- env[i]
 28914 00011B23 4883FE00                	cmp rsi, 0
 28915 00011B27 7410                    	je .L_lambda_simple_env_end_0442
 28916 00011B29 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28917 00011B2D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28918 00011B31 48FFC6                  	inc rsi
 28919 00011B34 48FFC2                  	inc rdx
 28920 00011B37 EBEA                    	jmp .L_lambda_simple_env_loop_0442
 28921                                  .L_lambda_simple_env_end_0442:
 28922 00011B39 5B                      	pop rbx
 28923 00011B3A BE00000000              	mov rsi, 0
 28924                                  .L_lambda_simple_params_loop_0442:	; copy params
 28925 00011B3F 4883FE00                	cmp rsi, 0
 28926 00011B43 740E                    	je .L_lambda_simple_params_end_0442
 28927 00011B45 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28928 00011B4A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28929 00011B4E 48FFC6                  	inc rsi
 28930 00011B51 EBEC                    	jmp .L_lambda_simple_params_loop_0442
 28931                                  .L_lambda_simple_params_end_0442:
 28932 00011B53 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28933 00011B56 4889C3                  	mov rbx, rax
 28934 00011B59 58                      	pop rax
 28935 00011B5A C60005                  	mov byte [rax], T_closure
 28936 00011B5D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28937 00011B61 48C74009[6E1B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0442
 28938 00011B69 E9C7000000              	jmp .L_lambda_simple_end_0442
 28939                                  .L_lambda_simple_code_0442:	; lambda-simple body
 28940 00011B6E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28941 00011B74 740B                    	je .L_lambda_simple_arity_check_ok_0934
 28942 00011B76 FF742410                	push qword [rsp + 8 * 2]
 28943 00011B7A 6A01                    	push 1
 28944 00011B7C E97F0C0000              	jmp L_error_incorrect_arity_simple
 28945                                  .L_lambda_simple_arity_check_ok_0934:
 28946 00011B81 C8000000                	enter 0, 0
 28947 00011B85 48B8-                   	mov rax, qword (L_constants + 511)
 28947 00011B87 [FF01000000000000] 
 28948 00011B8F 50                      	push rax
 28949 00011B90 488B4520                mov rax, qword [rbp + 32]
 28950 00011B94 50                      	push rax
 28951 00011B95 6A02                    	push 2
 28952 00011B97 488B0425[60010000]      	mov rax, qword [free_var_44]
 28953 00011B9F 803805                  	cmp byte [rax], T_closure 
 28954 00011BA2 0F855A1C0000                    jne L_code_ptr_error
 28955                                  
 28956 00011BA8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 28957                                  
 28958 00011BAC 53                              push rbx
 28959                                  
 28960 00011BAD FF5009                          call SOB_CLOSURE_CODE(rax)
 28961                                  
 28962 00011BB0 50                              	push rax
 28963 00011BB1 6A01                    	push 1
 28964 00011BB3 488B0425[D8000000]      	mov rax, qword [free_var_27]
 28965                                  .L_lambda_simple_arity_check_ok_0935:
 28966 00011BBB 803805                  	cmp byte [rax], T_closure
 28967                                  
 28968 00011BBE 0F853E1C0000                    jne L_code_ptr_error                      ; rax <- proc
 28969                                  
 28970                                  
 28971 00011BC4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 28972                                  
 28973 00011BC8 53                              push rbx                                  ; env pushed
 28974                                  
 28975 00011BC9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 28976                                  
 28977                                          ; sagydebug
 28978                                  
 28979 00011BCC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 28980                                  
 28981                                          
 28982                                          
 28983 00011BCF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 28984                                  
 28985 00011BD3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 28986                                  
 28987                                  
 28988 00011BD8 4D89CA                          mov r10, r9
 28989 00011BDB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 28990                                          
 28991 00011BDF 4D89D7                          mov r15, r10
 28992 00011BE2 4983C7FF                        add r15, -1
 28993                                                                                         
 28994 00011BE6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 28995 00011BE9 4983C404                        add r12, 4
 28996 00011BED 4983C4FF                        add r12, -1
 28997                                  
 28998 00011BF1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 28999                                  .L_tc_recycle_frame_loop_04f3:
 29000 00011BF7 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 29001                                  
 29002 00011BFB 4E8974E500                      mov [rbp + (r12 * 8)], r14
 29003                                  
 29004                                  
 29005                                  
 29006 00011C00 41BE00000000                    mov r14, 0                                ; clean box
 29007                                  
 29008                                  
 29009 00011C06 4983C7FF                        add r15, -1           
 29010 00011C0A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 29011                                  
 29012 00011C0E 4983C4FF                        add r12, -1 
 29013                                  
 29014 00011C12 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 29015 00011C16 75DF                    	jne .L_tc_recycle_frame_loop_04f3
 29016                                  .L_tc_recycle_frame_done_04f3:
 29017                                  ;this pop rbp in sot to the right place
 29018 00011C18 4D89C7                  mov r15, r8
 29019                                  
 29020 00011C1B 4983C704                        add r15, 4
 29021                                  
 29022 00011C1F 49C1E703                        shl r15, 3
 29023                                  
 29024 00011C23 4C01FC                          add rsp, r15
 29025 00011C26 5D                      	pop rbp                                  ; restore the old rbp
 29026                                  
 29027 00011C27 488B4D00                        mov rcx, qword [rbp]
 29028 00011C2B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 29029                                            ; rbx <- code(proc)
 29030                                  
 29031 00011C2F FFE3                            jmp rbx
 29032 00011C31 C9                      	leave
 29033 00011C32 C21800                  	ret 8 * (2 + 1)
 29034                                  .L_lambda_simple_end_0442:	; new closure is in rax
 29035 00011C35 48890425[68040000]      	mov qword [free_var_141], rax
 29036 00011C3D 48B8-                   	mov rax, sob_void
 29036 00011C3F [0000000000000000] 
 29037                                  
 29038 00011C47 4889C7                  	mov rdi, rax
 29039 00011C4A E8090C0000              	call print_sexpr_if_not_void
 29040                                  
 29041 00011C4F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29042 00011C54 E8EE0B0000              	call malloc
 29043 00011C59 50                      	push rax
 29044 00011C5A BF00000000              	mov rdi, 8 * 0	; new rib
 29045 00011C5F E8E30B0000              	call malloc
 29046 00011C64 50                      	push rax
 29047 00011C65 BF08000000              	mov rdi, 8 * 1	; extended env
 29048 00011C6A E8D80B0000              	call malloc
 29049 00011C6F 488B7D10                	mov rdi, ENV
 29050 00011C73 BE00000000              	mov rsi, 0
 29051 00011C78 BA01000000              	mov rdx, 1
 29052                                  .L_lambda_simple_env_loop_0443:	; ext_env[i + 1] <-- env[i]
 29053 00011C7D 4883FE00                	cmp rsi, 0
 29054 00011C81 7410                    	je .L_lambda_simple_env_end_0443
 29055 00011C83 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29056 00011C87 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29057 00011C8B 48FFC6                  	inc rsi
 29058 00011C8E 48FFC2                  	inc rdx
 29059 00011C91 EBEA                    	jmp .L_lambda_simple_env_loop_0443
 29060                                  .L_lambda_simple_env_end_0443:
 29061 00011C93 5B                      	pop rbx
 29062 00011C94 BE00000000              	mov rsi, 0
 29063                                  .L_lambda_simple_params_loop_0443:	; copy params
 29064 00011C99 4883FE00                	cmp rsi, 0
 29065 00011C9D 740E                    	je .L_lambda_simple_params_end_0443
 29066 00011C9F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29067 00011CA4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29068 00011CA8 48FFC6                  	inc rsi
 29069 00011CAB EBEC                    	jmp .L_lambda_simple_params_loop_0443
 29070                                  .L_lambda_simple_params_end_0443:
 29071 00011CAD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29072 00011CB0 4889C3                  	mov rbx, rax
 29073 00011CB3 58                      	pop rax
 29074 00011CB4 C60005                  	mov byte [rax], T_closure
 29075 00011CB7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29076 00011CBB 48C74009[C81C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0443
 29077 00011CC3 E9BC000000              	jmp .L_lambda_simple_end_0443
 29078                                  .L_lambda_simple_code_0443:	; lambda-simple body
 29079 00011CC8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29080 00011CCE 740B                    	je .L_lambda_simple_arity_check_ok_0936
 29081 00011CD0 FF742410                	push qword [rsp + 8 * 2]
 29082 00011CD4 6A01                    	push 1
 29083 00011CD6 E9250B0000              	jmp L_error_incorrect_arity_simple
 29084                                  .L_lambda_simple_arity_check_ok_0936:
 29085 00011CDB C8000000                	enter 0, 0
 29086 00011CDF 488B4520                mov rax, qword [rbp + 32]
 29087 00011CE3 50                      	push rax
 29088 00011CE4 6A01                    	push 1
 29089 00011CE6 488B0425[68040000]      	mov rax, qword [free_var_141]
 29090 00011CEE 803805                  	cmp byte [rax], T_closure 
 29091 00011CF1 0F850B1B0000                    jne L_code_ptr_error
 29092                                  
 29093 00011CF7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29094                                  
 29095 00011CFB 53                              push rbx
 29096                                  
 29097 00011CFC FF5009                          call SOB_CLOSURE_CODE(rax)
 29098                                  
 29099 00011CFF 50                              	push rax
 29100 00011D00 6A01                    	push 1
 29101 00011D02 488B0425[B0020000]      	mov rax, qword [free_var_86]
 29102                                  .L_lambda_simple_arity_check_ok_0937:
 29103 00011D0A 803805                  	cmp byte [rax], T_closure
 29104                                  
 29105 00011D0D 0F85EF1A0000                    jne L_code_ptr_error                      ; rax <- proc
 29106                                  
 29107                                  
 29108 00011D13 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 29109                                  
 29110 00011D17 53                              push rbx                                  ; env pushed
 29111                                  
 29112 00011D18 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 29113                                  
 29114                                          ; sagydebug
 29115                                  
 29116 00011D1B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 29117                                  
 29118                                          
 29119                                          
 29120 00011D1E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 29121                                  
 29122 00011D22 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 29123                                  
 29124                                  
 29125 00011D27 4D89CA                          mov r10, r9
 29126 00011D2A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 29127                                          
 29128 00011D2E 4D89D7                          mov r15, r10
 29129 00011D31 4983C7FF                        add r15, -1
 29130                                                                                         
 29131 00011D35 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 29132 00011D38 4983C404                        add r12, 4
 29133 00011D3C 4983C4FF                        add r12, -1
 29134                                  
 29135 00011D40 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 29136                                  .L_tc_recycle_frame_loop_04f4:
 29137 00011D46 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 29138                                  
 29139 00011D4A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 29140                                  
 29141                                  
 29142                                  
 29143 00011D4F 41BE00000000                    mov r14, 0                                ; clean box
 29144                                  
 29145                                  
 29146 00011D55 4983C7FF                        add r15, -1           
 29147 00011D59 4983C2FF                        add r10, -1                               ; args_copied_counter--
 29148                                  
 29149 00011D5D 4983C4FF                        add r12, -1 
 29150                                  
 29151 00011D61 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 29152 00011D65 75DF                    	jne .L_tc_recycle_frame_loop_04f4
 29153                                  .L_tc_recycle_frame_done_04f4:
 29154                                  ;this pop rbp in sot to the right place
 29155 00011D67 4D89C7                  mov r15, r8
 29156                                  
 29157 00011D6A 4983C704                        add r15, 4
 29158                                  
 29159 00011D6E 49C1E703                        shl r15, 3
 29160                                  
 29161 00011D72 4C01FC                          add rsp, r15
 29162 00011D75 5D                      	pop rbp                                  ; restore the old rbp
 29163                                  
 29164 00011D76 488B4D00                        mov rcx, qword [rbp]
 29165 00011D7A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 29166                                            ; rbx <- code(proc)
 29167                                  
 29168 00011D7E FFE3                            jmp rbx
 29169 00011D80 C9                      	leave
 29170 00011D81 C21800                  	ret 8 * (2 + 1)
 29171                                  .L_lambda_simple_end_0443:	; new closure is in rax
 29172 00011D84 48890425[70040000]      	mov qword [free_var_142], rax
 29173 00011D8C 48B8-                   	mov rax, sob_void
 29173 00011D8E [0000000000000000] 
 29174                                  
 29175 00011D96 4889C7                  	mov rdi, rax
 29176 00011D99 E8BA0A0000              	call print_sexpr_if_not_void
 29177                                  
 29178 00011D9E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29179 00011DA3 E89F0A0000              	call malloc
 29180 00011DA8 50                      	push rax
 29181 00011DA9 BF00000000              	mov rdi, 8 * 0	; new rib
 29182 00011DAE E8940A0000              	call malloc
 29183 00011DB3 50                      	push rax
 29184 00011DB4 BF08000000              	mov rdi, 8 * 1	; extended env
 29185 00011DB9 E8890A0000              	call malloc
 29186 00011DBE 488B7D10                	mov rdi, ENV
 29187 00011DC2 BE00000000              	mov rsi, 0
 29188 00011DC7 BA01000000              	mov rdx, 1
 29189                                  .L_lambda_simple_env_loop_0444:	; ext_env[i + 1] <-- env[i]
 29190 00011DCC 4883FE00                	cmp rsi, 0
 29191 00011DD0 7410                    	je .L_lambda_simple_env_end_0444
 29192 00011DD2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29193 00011DD6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29194 00011DDA 48FFC6                  	inc rsi
 29195 00011DDD 48FFC2                  	inc rdx
 29196 00011DE0 EBEA                    	jmp .L_lambda_simple_env_loop_0444
 29197                                  .L_lambda_simple_env_end_0444:
 29198 00011DE2 5B                      	pop rbx
 29199 00011DE3 BE00000000              	mov rsi, 0
 29200                                  .L_lambda_simple_params_loop_0444:	; copy params
 29201 00011DE8 4883FE00                	cmp rsi, 0
 29202 00011DEC 740E                    	je .L_lambda_simple_params_end_0444
 29203 00011DEE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29204 00011DF3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29205 00011DF7 48FFC6                  	inc rsi
 29206 00011DFA EBEC                    	jmp .L_lambda_simple_params_loop_0444
 29207                                  .L_lambda_simple_params_end_0444:
 29208 00011DFC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29209 00011DFF 4889C3                  	mov rbx, rax
 29210 00011E02 58                      	pop rax
 29211 00011E03 C60005                  	mov byte [rax], T_closure
 29212 00011E06 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29213 00011E0A 48C74009[171E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0444
 29214 00011E12 E9D2000000              	jmp .L_lambda_simple_end_0444
 29215                                  .L_lambda_simple_code_0444:	; lambda-simple body
 29216 00011E17 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29217 00011E1D 740B                    	je .L_lambda_simple_arity_check_ok_0938
 29218 00011E1F FF742410                	push qword [rsp + 8 * 2]
 29219 00011E23 6A01                    	push 1
 29220 00011E25 E9D6090000              	jmp L_error_incorrect_arity_simple
 29221                                  .L_lambda_simple_arity_check_ok_0938:
 29222 00011E2A C8000000                	enter 0, 0
 29223 00011E2E 488B4520                mov rax, qword [rbp + 32]
 29224 00011E32 50                      	push rax
 29225 00011E33 6A01                    	push 1
 29226 00011E35 488B0425[60040000]      	mov rax, qword [free_var_140]
 29227 00011E3D 803805                  	cmp byte [rax], T_closure 
 29228 00011E40 0F85BC190000                    jne L_code_ptr_error
 29229                                  
 29230 00011E46 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29231                                  
 29232 00011E4A 53                              push rbx
 29233                                  
 29234 00011E4B FF5009                          call SOB_CLOSURE_CODE(rax)
 29235                                  
 29236 00011E4E 483D[02000000]                  	cmp rax, sob_boolean_false
 29237 00011E54 0F8487000000            	je .L_if_else_0288
 29238 00011E5A 488B4520                mov rax, qword [rbp + 32]
 29239 00011E5E 50                      	push rax
 29240 00011E5F 6A01                    	push 1
 29241 00011E61 488B0425[10030000]      	mov rax, qword [free_var_98]
 29242                                  .L_lambda_simple_arity_check_ok_0939:
 29243 00011E69 803805                  	cmp byte [rax], T_closure
 29244                                  
 29245 00011E6C 0F8590190000                    jne L_code_ptr_error                      ; rax <- proc
 29246                                  
 29247                                  
 29248 00011E72 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 29249                                  
 29250 00011E76 53                              push rbx                                  ; env pushed
 29251                                  
 29252 00011E77 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 29253                                  
 29254                                          ; sagydebug
 29255                                  
 29256 00011E7A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 29257                                  
 29258                                          
 29259                                          
 29260 00011E7D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 29261                                  
 29262 00011E81 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 29263                                  
 29264                                  
 29265 00011E86 4D89CA                          mov r10, r9
 29266 00011E89 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 29267                                          
 29268 00011E8D 4D89D7                          mov r15, r10
 29269 00011E90 4983C7FF                        add r15, -1
 29270                                                                                         
 29271 00011E94 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 29272 00011E97 4983C404                        add r12, 4
 29273 00011E9B 4983C4FF                        add r12, -1
 29274                                  
 29275 00011E9F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 29276                                  .L_tc_recycle_frame_loop_04f5:
 29277 00011EA5 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 29278                                  
 29279 00011EA9 4E8974E500                      mov [rbp + (r12 * 8)], r14
 29280                                  
 29281                                  
 29282                                  
 29283 00011EAE 41BE00000000                    mov r14, 0                                ; clean box
 29284                                  
 29285                                  
 29286 00011EB4 4983C7FF                        add r15, -1           
 29287 00011EB8 4983C2FF                        add r10, -1                               ; args_copied_counter--
 29288                                  
 29289 00011EBC 4983C4FF                        add r12, -1 
 29290                                  
 29291 00011EC0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 29292 00011EC4 75DF                    	jne .L_tc_recycle_frame_loop_04f5
 29293                                  .L_tc_recycle_frame_done_04f5:
 29294                                  ;this pop rbp in sot to the right place
 29295 00011EC6 4D89C7                  mov r15, r8
 29296                                  
 29297 00011EC9 4983C704                        add r15, 4
 29298                                  
 29299 00011ECD 49C1E703                        shl r15, 3
 29300                                  
 29301 00011ED1 4C01FC                          add rsp, r15
 29302 00011ED4 5D                      	pop rbp                                  ; restore the old rbp
 29303                                  
 29304 00011ED5 488B4D00                        mov rcx, qword [rbp]
 29305 00011ED9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 29306                                            ; rbx <- code(proc)
 29307                                  
 29308 00011EDD FFE3                            jmp rbx
 29309 00011EDF EB04                    	jmp .L_if_end_0288
 29310                                  	.L_if_else_0288:
 29311 00011EE1 488B4520                	mov rax, qword [rbp + 32]
 29312                                  	.L_if_end_0288:
 29313 00011EE5 C9                      	leave
 29314 00011EE6 C21800                  	ret 8 * (2 + 1)
 29315                                  .L_lambda_simple_end_0444:	; new closure is in rax
 29316 00011EE9 48890425[78040000]      	mov qword [free_var_143], rax
 29317 00011EF1 48B8-                   	mov rax, sob_void
 29317 00011EF3 [0000000000000000] 
 29318                                  
 29319 00011EFB 4889C7                  	mov rdi, rax
 29320 00011EFE E855090000              	call print_sexpr_if_not_void
 29321                                  
 29322 00011F03 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29323 00011F08 E83A090000              	call malloc
 29324 00011F0D 50                      	push rax
 29325 00011F0E BF00000000              	mov rdi, 8 * 0	; new rib
 29326 00011F13 E82F090000              	call malloc
 29327 00011F18 50                      	push rax
 29328 00011F19 BF08000000              	mov rdi, 8 * 1	; extended env
 29329 00011F1E E824090000              	call malloc
 29330 00011F23 488B7D10                	mov rdi, ENV
 29331 00011F27 BE00000000              	mov rsi, 0
 29332 00011F2C BA01000000              	mov rdx, 1
 29333                                  .L_lambda_simple_env_loop_0445:	; ext_env[i + 1] <-- env[i]
 29334 00011F31 4883FE00                	cmp rsi, 0
 29335 00011F35 7410                    	je .L_lambda_simple_env_end_0445
 29336 00011F37 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29337 00011F3B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29338 00011F3F 48FFC6                  	inc rsi
 29339 00011F42 48FFC2                  	inc rdx
 29340 00011F45 EBEA                    	jmp .L_lambda_simple_env_loop_0445
 29341                                  .L_lambda_simple_env_end_0445:
 29342 00011F47 5B                      	pop rbx
 29343 00011F48 BE00000000              	mov rsi, 0
 29344                                  .L_lambda_simple_params_loop_0445:	; copy params
 29345 00011F4D 4883FE00                	cmp rsi, 0
 29346 00011F51 740E                    	je .L_lambda_simple_params_end_0445
 29347 00011F53 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29348 00011F58 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29349 00011F5C 48FFC6                  	inc rsi
 29350 00011F5F EBEC                    	jmp .L_lambda_simple_params_loop_0445
 29351                                  .L_lambda_simple_params_end_0445:
 29352 00011F61 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29353 00011F64 4889C3                  	mov rbx, rax
 29354 00011F67 58                      	pop rax
 29355 00011F68 C60005                  	mov byte [rax], T_closure
 29356 00011F6B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29357 00011F6F 48C74009[7C1F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0445
 29358 00011F77 E941050000              	jmp .L_lambda_simple_end_0445
 29359                                  .L_lambda_simple_code_0445:	; lambda-simple body
 29360 00011F7C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 29361 00011F82 740B                    	je .L_lambda_simple_arity_check_ok_093a
 29362 00011F84 FF742410                	push qword [rsp + 8 * 2]
 29363 00011F88 6A02                    	push 2
 29364 00011F8A E971080000              	jmp L_error_incorrect_arity_simple
 29365                                  .L_lambda_simple_arity_check_ok_093a:
 29366 00011F8F C8000000                	enter 0, 0
 29367 00011F93 488B4520                mov rax, qword [rbp + 32]
 29368 00011F97 50                      	push rax
 29369 00011F98 6A01                    	push 1
 29370 00011F9A 488B0425[08000000]      	mov rax, qword [free_var_1]
 29371 00011FA2 803805                  	cmp byte [rax], T_closure 
 29372 00011FA5 0F8557180000                    jne L_code_ptr_error
 29373                                  
 29374 00011FAB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29375                                  
 29376 00011FAF 53                              push rbx
 29377                                  
 29378 00011FB0 FF5009                          call SOB_CLOSURE_CODE(rax)
 29379                                  
 29380 00011FB3 483D[02000000]                  	cmp rax, sob_boolean_false
 29381 00011FB9 7422                    	je .L_if_else_0291
 29382 00011FBB 488B4528                mov rax, qword [rbp + 40]
 29383 00011FBF 50                      	push rax
 29384 00011FC0 6A01                    	push 1
 29385 00011FC2 488B0425[08000000]      	mov rax, qword [free_var_1]
 29386 00011FCA 803805                  	cmp byte [rax], T_closure 
 29387 00011FCD 0F852F180000                    jne L_code_ptr_error
 29388                                  
 29389 00011FD3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29390                                  
 29391 00011FD7 53                              push rbx
 29392                                  
 29393 00011FD8 FF5009                          call SOB_CLOSURE_CODE(rax)
 29394                                  
 29395 00011FDB EB0A                            	jmp .L_if_end_0291
 29396                                  	.L_if_else_0291:
 29397 00011FDD 48B8-                   		mov rax, qword (L_constants + 2)
 29397 00011FDF [0200000000000000] 
 29398                                  	.L_if_end_0291:
 29399 00011FE7 483D[02000000]          	cmp rax, sob_boolean_false
 29400 00011FED 0F843C010000            	je .L_if_else_0289
 29401 00011FF3 488B4528                mov rax, qword [rbp + 40]
 29402 00011FF7 50                      	push rax
 29403 00011FF8 6A01                    	push 1
 29404 00011FFA 488B0425[80000000]      	mov rax, qword [free_var_16]
 29405 00012002 803805                  	cmp byte [rax], T_closure 
 29406 00012005 0F85F7170000                    jne L_code_ptr_error
 29407                                  
 29408 0001200B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29409                                  
 29410 0001200F 53                              push rbx
 29411                                  
 29412 00012010 FF5009                          call SOB_CLOSURE_CODE(rax)
 29413                                  
 29414 00012013 50                              	push rax
 29415 00012014 488B4520                mov rax, qword [rbp + 32]
 29416 00012018 50                      	push rax
 29417 00012019 6A01                    	push 1
 29418 0001201B 488B0425[80000000]      	mov rax, qword [free_var_16]
 29419 00012023 803805                  	cmp byte [rax], T_closure 
 29420 00012026 0F85D6170000                    jne L_code_ptr_error
 29421                                  
 29422 0001202C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29423                                  
 29424 00012030 53                              push rbx
 29425                                  
 29426 00012031 FF5009                          call SOB_CLOSURE_CODE(rax)
 29427                                  
 29428 00012034 50                              	push rax
 29429 00012035 6A02                    	push 2
 29430 00012037 488B0425[80040000]      	mov rax, qword [free_var_144]
 29431 0001203F 803805                  	cmp byte [rax], T_closure 
 29432 00012042 0F85BA170000                    jne L_code_ptr_error
 29433                                  
 29434 00012048 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29435                                  
 29436 0001204C 53                              push rbx
 29437                                  
 29438 0001204D FF5009                          call SOB_CLOSURE_CODE(rax)
 29439                                  
 29440 00012050 483D[02000000]                  	cmp rax, sob_boolean_false
 29441 00012056 0F84C4000000            	je .L_if_else_0290
 29442 0001205C 488B4528                mov rax, qword [rbp + 40]
 29443 00012060 50                      	push rax
 29444 00012061 6A01                    	push 1
 29445 00012063 488B0425[88000000]      	mov rax, qword [free_var_17]
 29446 0001206B 803805                  	cmp byte [rax], T_closure 
 29447 0001206E 0F858E170000                    jne L_code_ptr_error
 29448                                  
 29449 00012074 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29450                                  
 29451 00012078 53                              push rbx
 29452                                  
 29453 00012079 FF5009                          call SOB_CLOSURE_CODE(rax)
 29454                                  
 29455 0001207C 50                              	push rax
 29456 0001207D 488B4520                mov rax, qword [rbp + 32]
 29457 00012081 50                      	push rax
 29458 00012082 6A01                    	push 1
 29459 00012084 488B0425[88000000]      	mov rax, qword [free_var_17]
 29460 0001208C 803805                  	cmp byte [rax], T_closure 
 29461 0001208F 0F856D170000                    jne L_code_ptr_error
 29462                                  
 29463 00012095 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29464                                  
 29465 00012099 53                              push rbx
 29466                                  
 29467 0001209A FF5009                          call SOB_CLOSURE_CODE(rax)
 29468                                  
 29469 0001209D 50                              	push rax
 29470 0001209E 6A02                    	push 2
 29471 000120A0 488B0425[80040000]      	mov rax, qword [free_var_144]
 29472                                  .L_lambda_simple_arity_check_ok_093e:
 29473 000120A8 803805                  	cmp byte [rax], T_closure
 29474                                  
 29475 000120AB 0F8551170000                    jne L_code_ptr_error                      ; rax <- proc
 29476                                  
 29477                                  
 29478 000120B1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 29479                                  
 29480 000120B5 53                              push rbx                                  ; env pushed
 29481                                  
 29482 000120B6 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 29483                                  
 29484                                          ; sagydebug
 29485                                  
 29486 000120B9 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 29487                                  
 29488                                          
 29489                                          
 29490 000120BC 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 29491                                  
 29492 000120C0 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 29493                                  
 29494                                  
 29495 000120C5 4D89CA                          mov r10, r9
 29496 000120C8 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 29497                                          
 29498 000120CC 4D89D7                          mov r15, r10
 29499 000120CF 4983C7FF                        add r15, -1
 29500                                                                                         
 29501 000120D3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 29502 000120D6 4983C404                        add r12, 4
 29503 000120DA 4983C4FF                        add r12, -1
 29504                                  
 29505 000120DE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 29506                                  .L_tc_recycle_frame_loop_04f9:
 29507 000120E4 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 29508                                  
 29509 000120E8 4E8974E500                      mov [rbp + (r12 * 8)], r14
 29510                                  
 29511                                  
 29512                                  
 29513 000120ED 41BE00000000                    mov r14, 0                                ; clean box
 29514                                  
 29515                                  
 29516 000120F3 4983C7FF                        add r15, -1           
 29517 000120F7 4983C2FF                        add r10, -1                               ; args_copied_counter--
 29518                                  
 29519 000120FB 4983C4FF                        add r12, -1 
 29520                                  
 29521 000120FF 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 29522 00012103 75DF                    	jne .L_tc_recycle_frame_loop_04f9
 29523                                  .L_tc_recycle_frame_done_04f9:
 29524                                  ;this pop rbp in sot to the right place
 29525 00012105 4D89C7                  mov r15, r8
 29526                                  
 29527 00012108 4983C704                        add r15, 4
 29528                                  
 29529 0001210C 49C1E703                        shl r15, 3
 29530                                  
 29531 00012110 4C01FC                          add rsp, r15
 29532 00012113 5D                      	pop rbp                                  ; restore the old rbp
 29533                                  
 29534 00012114 488B4D00                        mov rcx, qword [rbp]
 29535 00012118 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 29536                                            ; rbx <- code(proc)
 29537                                  
 29538 0001211C FFE3                            jmp rbx
 29539 0001211E EB0A                    	jmp .L_if_end_0290
 29540                                  	.L_if_else_0290:
 29541 00012120 48B8-                   		mov rax, qword (L_constants + 2)
 29541 00012122 [0200000000000000] 
 29542                                  	.L_if_end_0290:
 29543 0001212A E98A030000              	jmp .L_if_end_0289
 29544                                  	.L_if_else_0289:
 29545 0001212F 488B4520                	mov rax, qword [rbp + 32]
 29546 00012133 50                      	push rax
 29547 00012134 6A01                    	push 1
 29548 00012136 488B0425[30000000]      	mov rax, qword [free_var_6]
 29549 0001213E 803805                  	cmp byte [rax], T_closure 
 29550 00012141 0F85BB160000                    jne L_code_ptr_error
 29551                                  
 29552 00012147 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29553                                  
 29554 0001214B 53                              push rbx
 29555                                  
 29556 0001214C FF5009                          call SOB_CLOSURE_CODE(rax)
 29557                                  
 29558 0001214F 483D[02000000]                  	cmp rax, sob_boolean_false
 29559 00012155 0F8493000000            	je .L_if_else_028e
 29560 0001215B 488B4528                mov rax, qword [rbp + 40]
 29561 0001215F 50                      	push rax
 29562 00012160 6A01                    	push 1
 29563 00012162 488B0425[30000000]      	mov rax, qword [free_var_6]
 29564 0001216A 803805                  	cmp byte [rax], T_closure 
 29565 0001216D 0F858F160000                    jne L_code_ptr_error
 29566                                  
 29567 00012173 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29568                                  
 29569 00012177 53                              push rbx
 29570                                  
 29571 00012178 FF5009                          call SOB_CLOSURE_CODE(rax)
 29572                                  
 29573 0001217B 483D[02000000]                  	cmp rax, sob_boolean_false
 29574 00012181 745F                    	je .L_if_else_028f
 29575 00012183 488B4528                mov rax, qword [rbp + 40]
 29576 00012187 50                      	push rax
 29577 00012188 6A01                    	push 1
 29578 0001218A 488B0425[98000000]      	mov rax, qword [free_var_19]
 29579 00012192 803805                  	cmp byte [rax], T_closure 
 29580 00012195 0F8567160000                    jne L_code_ptr_error
 29581                                  
 29582 0001219B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29583                                  
 29584 0001219F 53                              push rbx
 29585                                  
 29586 000121A0 FF5009                          call SOB_CLOSURE_CODE(rax)
 29587                                  
 29588 000121A3 50                              	push rax
 29589 000121A4 488B4520                mov rax, qword [rbp + 32]
 29590 000121A8 50                      	push rax
 29591 000121A9 6A01                    	push 1
 29592 000121AB 488B0425[98000000]      	mov rax, qword [free_var_19]
 29593 000121B3 803805                  	cmp byte [rax], T_closure 
 29594 000121B6 0F8546160000                    jne L_code_ptr_error
 29595                                  
 29596 000121BC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29597                                  
 29598 000121C0 53                              push rbx
 29599                                  
 29600 000121C1 FF5009                          call SOB_CLOSURE_CODE(rax)
 29601                                  
 29602 000121C4 50                              	push rax
 29603 000121C5 6A02                    	push 2
 29604 000121C7 488B0425[50030000]      	mov rax, qword [free_var_106]
 29605 000121CF 803805                  	cmp byte [rax], T_closure 
 29606 000121D2 0F852A160000                    jne L_code_ptr_error
 29607                                  
 29608 000121D8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29609                                  
 29610 000121DC 53                              push rbx
 29611                                  
 29612 000121DD FF5009                          call SOB_CLOSURE_CODE(rax)
 29613                                  
 29614 000121E0 EB0A                            	jmp .L_if_end_028f
 29615                                  	.L_if_else_028f:
 29616 000121E2 48B8-                   		mov rax, qword (L_constants + 2)
 29616 000121E4 [0200000000000000] 
 29617                                  	.L_if_end_028f:
 29618 000121EC EB0A                    	jmp .L_if_end_028e
 29619                                  	.L_if_else_028e:
 29620 000121EE 48B8-                   		mov rax, qword (L_constants + 2)
 29620 000121F0 [0200000000000000] 
 29621                                  	.L_if_end_028e:
 29622 000121F8 483D[02000000]          	cmp rax, sob_boolean_false
 29623 000121FE 0F84C7000000            	je .L_if_else_028a
 29624 00012204 488B4528                mov rax, qword [rbp + 40]
 29625 00012208 50                      	push rax
 29626 00012209 6A01                    	push 1
 29627 0001220B 488B0425[48040000]      	mov rax, qword [free_var_137]
 29628 00012213 803805                  	cmp byte [rax], T_closure 
 29629 00012216 0F85E6150000                    jne L_code_ptr_error
 29630                                  
 29631 0001221C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29632                                  
 29633 00012220 53                              push rbx
 29634                                  
 29635 00012221 FF5009                          call SOB_CLOSURE_CODE(rax)
 29636                                  
 29637 00012224 50                              	push rax
 29638 00012225 488B4520                mov rax, qword [rbp + 32]
 29639 00012229 50                      	push rax
 29640 0001222A 6A01                    	push 1
 29641 0001222C 488B0425[48040000]      	mov rax, qword [free_var_137]
 29642 00012234 803805                  	cmp byte [rax], T_closure 
 29643 00012237 0F85C5150000                    jne L_code_ptr_error
 29644                                  
 29645 0001223D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29646                                  
 29647 00012241 53                              push rbx
 29648                                  
 29649 00012242 FF5009                          call SOB_CLOSURE_CODE(rax)
 29650                                  
 29651 00012245 50                              	push rax
 29652 00012246 6A02                    	push 2
 29653 00012248 488B0425[80040000]      	mov rax, qword [free_var_144]
 29654                                  .L_lambda_simple_arity_check_ok_093d:
 29655 00012250 803805                  	cmp byte [rax], T_closure
 29656                                  
 29657 00012253 0F85A9150000                    jne L_code_ptr_error                      ; rax <- proc
 29658                                  
 29659                                  
 29660 00012259 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 29661                                  
 29662 0001225D 53                              push rbx                                  ; env pushed
 29663                                  
 29664 0001225E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 29665                                  
 29666                                          ; sagydebug
 29667                                  
 29668 00012261 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 29669                                  
 29670                                          
 29671                                          
 29672 00012264 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 29673                                  
 29674 00012268 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 29675                                  
 29676                                  
 29677 0001226D 4D89CA                          mov r10, r9
 29678 00012270 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 29679                                          
 29680 00012274 4D89D7                          mov r15, r10
 29681 00012277 4983C7FF                        add r15, -1
 29682                                                                                         
 29683 0001227B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 29684 0001227E 4983C404                        add r12, 4
 29685 00012282 4983C4FF                        add r12, -1
 29686                                  
 29687 00012286 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 29688                                  .L_tc_recycle_frame_loop_04f8:
 29689 0001228C 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 29690                                  
 29691 00012290 4E8974E500                      mov [rbp + (r12 * 8)], r14
 29692                                  
 29693                                  
 29694                                  
 29695 00012295 41BE00000000                    mov r14, 0                                ; clean box
 29696                                  
 29697                                  
 29698 0001229B 4983C7FF                        add r15, -1           
 29699 0001229F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 29700                                  
 29701 000122A3 4983C4FF                        add r12, -1 
 29702                                  
 29703 000122A7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 29704 000122AB 75DF                    	jne .L_tc_recycle_frame_loop_04f8
 29705                                  .L_tc_recycle_frame_done_04f8:
 29706                                  ;this pop rbp in sot to the right place
 29707 000122AD 4D89C7                  mov r15, r8
 29708                                  
 29709 000122B0 4983C704                        add r15, 4
 29710                                  
 29711 000122B4 49C1E703                        shl r15, 3
 29712                                  
 29713 000122B8 4C01FC                          add rsp, r15
 29714 000122BB 5D                      	pop rbp                                  ; restore the old rbp
 29715                                  
 29716 000122BC 488B4D00                        mov rcx, qword [rbp]
 29717 000122C0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 29718                                            ; rbx <- code(proc)
 29719                                  
 29720 000122C4 FFE3                            jmp rbx
 29721 000122C6 E9EE010000              	jmp .L_if_end_028a
 29722                                  	.L_if_else_028a:
 29723 000122CB 488B4520                	mov rax, qword [rbp + 32]
 29724 000122CF 50                      	push rax
 29725 000122D0 6A01                    	push 1
 29726 000122D2 488B0425[20000000]      	mov rax, qword [free_var_4]
 29727 000122DA 803805                  	cmp byte [rax], T_closure 
 29728 000122DD 0F851F150000                    jne L_code_ptr_error
 29729                                  
 29730 000122E3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29731                                  
 29732 000122E7 53                              push rbx
 29733                                  
 29734 000122E8 FF5009                          call SOB_CLOSURE_CODE(rax)
 29735                                  
 29736 000122EB 483D[02000000]                  	cmp rax, sob_boolean_false
 29737 000122F1 0F8493000000            	je .L_if_else_028c
 29738 000122F7 488B4528                mov rax, qword [rbp + 40]
 29739 000122FB 50                      	push rax
 29740 000122FC 6A01                    	push 1
 29741 000122FE 488B0425[20000000]      	mov rax, qword [free_var_4]
 29742 00012306 803805                  	cmp byte [rax], T_closure 
 29743 00012309 0F85F3140000                    jne L_code_ptr_error
 29744                                  
 29745 0001230F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29746                                  
 29747 00012313 53                              push rbx
 29748                                  
 29749 00012314 FF5009                          call SOB_CLOSURE_CODE(rax)
 29750                                  
 29751 00012317 483D[02000000]                  	cmp rax, sob_boolean_false
 29752 0001231D 745F                    	je .L_if_else_028d
 29753 0001231F 488B4528                mov rax, qword [rbp + 40]
 29754 00012323 50                      	push rax
 29755 00012324 6A01                    	push 1
 29756 00012326 488B0425[90000000]      	mov rax, qword [free_var_18]
 29757 0001232E 803805                  	cmp byte [rax], T_closure 
 29758 00012331 0F85CB140000                    jne L_code_ptr_error
 29759                                  
 29760 00012337 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29761                                  
 29762 0001233B 53                              push rbx
 29763                                  
 29764 0001233C FF5009                          call SOB_CLOSURE_CODE(rax)
 29765                                  
 29766 0001233F 50                              	push rax
 29767 00012340 488B4520                mov rax, qword [rbp + 32]
 29768 00012344 50                      	push rax
 29769 00012345 6A01                    	push 1
 29770 00012347 488B0425[90000000]      	mov rax, qword [free_var_18]
 29771 0001234F 803805                  	cmp byte [rax], T_closure 
 29772 00012352 0F85AA140000                    jne L_code_ptr_error
 29773                                  
 29774 00012358 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29775                                  
 29776 0001235C 53                              push rbx
 29777                                  
 29778 0001235D FF5009                          call SOB_CLOSURE_CODE(rax)
 29779                                  
 29780 00012360 50                              	push rax
 29781 00012361 6A02                    	push 2
 29782 00012363 488B0425[50030000]      	mov rax, qword [free_var_106]
 29783 0001236B 803805                  	cmp byte [rax], T_closure 
 29784 0001236E 0F858E140000                    jne L_code_ptr_error
 29785                                  
 29786 00012374 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 29787                                  
 29788 00012378 53                              push rbx
 29789                                  
 29790 00012379 FF5009                          call SOB_CLOSURE_CODE(rax)
 29791                                  
 29792 0001237C EB0A                            	jmp .L_if_end_028d
 29793                                  	.L_if_else_028d:
 29794 0001237E 48B8-                   		mov rax, qword (L_constants + 2)
 29794 00012380 [0200000000000000] 
 29795                                  	.L_if_end_028d:
 29796 00012388 EB0A                    	jmp .L_if_end_028c
 29797                                  	.L_if_else_028c:
 29798 0001238A 48B8-                   		mov rax, qword (L_constants + 2)
 29798 0001238C [0200000000000000] 
 29799                                  	.L_if_end_028c:
 29800 00012394 483D[02000000]          	cmp rax, sob_boolean_false
 29801 0001239A 0F848F000000            	je .L_if_else_028b
 29802 000123A0 488B4528                mov rax, qword [rbp + 40]
 29803 000123A4 50                      	push rax
 29804 000123A5 488B4520                mov rax, qword [rbp + 32]
 29805 000123A9 50                      	push rax
 29806 000123AA 6A02                    	push 2
 29807 000123AC 488B0425[F0030000]      	mov rax, qword [free_var_126]
 29808                                  .L_lambda_simple_arity_check_ok_093c:
 29809 000123B4 803805                  	cmp byte [rax], T_closure
 29810                                  
 29811 000123B7 0F8545140000                    jne L_code_ptr_error                      ; rax <- proc
 29812                                  
 29813                                  
 29814 000123BD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 29815                                  
 29816 000123C1 53                              push rbx                                  ; env pushed
 29817                                  
 29818 000123C2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 29819                                  
 29820                                          ; sagydebug
 29821                                  
 29822 000123C5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 29823                                  
 29824                                          
 29825                                          
 29826 000123C8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 29827                                  
 29828 000123CC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 29829                                  
 29830                                  
 29831 000123D1 4D89CA                          mov r10, r9
 29832 000123D4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 29833                                          
 29834 000123D8 4D89D7                          mov r15, r10
 29835 000123DB 4983C7FF                        add r15, -1
 29836                                                                                         
 29837 000123DF 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 29838 000123E2 4983C404                        add r12, 4
 29839 000123E6 4983C4FF                        add r12, -1
 29840                                  
 29841 000123EA 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 29842                                  .L_tc_recycle_frame_loop_04f7:
 29843 000123F0 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 29844                                  
 29845 000123F4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 29846                                  
 29847                                  
 29848                                  
 29849 000123F9 41BE00000000                    mov r14, 0                                ; clean box
 29850                                  
 29851                                  
 29852 000123FF 4983C7FF                        add r15, -1           
 29853 00012403 4983C2FF                        add r10, -1                               ; args_copied_counter--
 29854                                  
 29855 00012407 4983C4FF                        add r12, -1 
 29856                                  
 29857 0001240B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 29858 0001240F 75DF                    	jne .L_tc_recycle_frame_loop_04f7
 29859                                  .L_tc_recycle_frame_done_04f7:
 29860                                  ;this pop rbp in sot to the right place
 29861 00012411 4D89C7                  mov r15, r8
 29862                                  
 29863 00012414 4983C704                        add r15, 4
 29864                                  
 29865 00012418 49C1E703                        shl r15, 3
 29866                                  
 29867 0001241C 4C01FC                          add rsp, r15
 29868 0001241F 5D                      	pop rbp                                  ; restore the old rbp
 29869                                  
 29870 00012420 488B4D00                        mov rcx, qword [rbp]
 29871 00012424 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 29872                                            ; rbx <- code(proc)
 29873                                  
 29874 00012428 FFE3                            jmp rbx
 29875 0001242A E98A000000              	jmp .L_if_end_028b
 29876                                  	.L_if_else_028b:
 29877 0001242F 488B4528                	mov rax, qword [rbp + 40]
 29878 00012433 50                      	push rax
 29879 00012434 488B4520                mov rax, qword [rbp + 32]
 29880 00012438 50                      	push rax
 29881 00012439 6A02                    	push 2
 29882 0001243B 488B0425[B8010000]      	mov rax, qword [free_var_55]
 29883                                  .L_lambda_simple_arity_check_ok_093b:
 29884 00012443 803805                  	cmp byte [rax], T_closure
 29885                                  
 29886 00012446 0F85B6130000                    jne L_code_ptr_error                      ; rax <- proc
 29887                                  
 29888                                  
 29889 0001244C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 29890                                  
 29891 00012450 53                              push rbx                                  ; env pushed
 29892                                  
 29893 00012451 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 29894                                  
 29895                                          ; sagydebug
 29896                                  
 29897 00012454 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 29898                                  
 29899                                          
 29900                                          
 29901 00012457 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 29902                                  
 29903 0001245B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 29904                                  
 29905                                  
 29906 00012460 4D89CA                          mov r10, r9
 29907 00012463 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 29908                                          
 29909 00012467 4D89D7                          mov r15, r10
 29910 0001246A 4983C7FF                        add r15, -1
 29911                                                                                         
 29912 0001246E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 29913 00012471 4983C404                        add r12, 4
 29914 00012475 4983C4FF                        add r12, -1
 29915                                  
 29916 00012479 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 29917                                  .L_tc_recycle_frame_loop_04f6:
 29918 0001247F 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 29919                                  
 29920 00012483 4E8974E500                      mov [rbp + (r12 * 8)], r14
 29921                                  
 29922                                  
 29923                                  
 29924 00012488 41BE00000000                    mov r14, 0                                ; clean box
 29925                                  
 29926                                  
 29927 0001248E 4983C7FF                        add r15, -1           
 29928 00012492 4983C2FF                        add r10, -1                               ; args_copied_counter--
 29929                                  
 29930 00012496 4983C4FF                        add r12, -1 
 29931                                  
 29932 0001249A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 29933 0001249E 75DF                    	jne .L_tc_recycle_frame_loop_04f6
 29934                                  .L_tc_recycle_frame_done_04f6:
 29935                                  ;this pop rbp in sot to the right place
 29936 000124A0 4D89C7                  mov r15, r8
 29937                                  
 29938 000124A3 4983C704                        add r15, 4
 29939                                  
 29940 000124A7 49C1E703                        shl r15, 3
 29941                                  
 29942 000124AB 4C01FC                          add rsp, r15
 29943 000124AE 5D                      	pop rbp                                  ; restore the old rbp
 29944                                  
 29945 000124AF 488B4D00                        mov rcx, qword [rbp]
 29946 000124B3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 29947                                            ; rbx <- code(proc)
 29948                                  
 29949 000124B7 FFE3                            jmp rbx
 29950                                  	.L_if_end_028b:
 29951                                  	.L_if_end_028a:
 29952                                  	.L_if_end_0289:
 29953 000124B9 C9                      	leave
 29954 000124BA C22000                  	ret 8 * (2 + 2)
 29955                                  .L_lambda_simple_end_0445:	; new closure is in rax
 29956 000124BD 48890425[80040000]      	mov qword [free_var_144], rax
 29957 000124C5 48B8-                   	mov rax, sob_void
 29957 000124C7 [0000000000000000] 
 29958                                  
 29959 000124CF 4889C7                  	mov rdi, rax
 29960 000124D2 E881030000              	call print_sexpr_if_not_void
 29961                                  
 29962 000124D7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29963 000124DC E866030000              	call malloc
 29964 000124E1 50                      	push rax
 29965 000124E2 BF00000000              	mov rdi, 8 * 0	; new rib
 29966 000124E7 E85B030000              	call malloc
 29967 000124EC 50                      	push rax
 29968 000124ED BF08000000              	mov rdi, 8 * 1	; extended env
 29969 000124F2 E850030000              	call malloc
 29970 000124F7 488B7D10                	mov rdi, ENV
 29971 000124FB BE00000000              	mov rsi, 0
 29972 00012500 BA01000000              	mov rdx, 1
 29973                                  .L_lambda_simple_env_loop_0446:	; ext_env[i + 1] <-- env[i]
 29974 00012505 4883FE00                	cmp rsi, 0
 29975 00012509 7410                    	je .L_lambda_simple_env_end_0446
 29976 0001250B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29977 0001250F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29978 00012513 48FFC6                  	inc rsi
 29979 00012516 48FFC2                  	inc rdx
 29980 00012519 EBEA                    	jmp .L_lambda_simple_env_loop_0446
 29981                                  .L_lambda_simple_env_end_0446:
 29982 0001251B 5B                      	pop rbx
 29983 0001251C BE00000000              	mov rsi, 0
 29984                                  .L_lambda_simple_params_loop_0446:	; copy params
 29985 00012521 4883FE00                	cmp rsi, 0
 29986 00012525 740E                    	je .L_lambda_simple_params_end_0446
 29987 00012527 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29988 0001252C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29989 00012530 48FFC6                  	inc rsi
 29990 00012533 EBEC                    	jmp .L_lambda_simple_params_loop_0446
 29991                                  .L_lambda_simple_params_end_0446:
 29992 00012535 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29993 00012538 4889C3                  	mov rbx, rax
 29994 0001253B 58                      	pop rax
 29995 0001253C C60005                  	mov byte [rax], T_closure
 29996 0001253F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29997 00012543 48C74009[50250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0446
 29998 0001254B E9CF010000              	jmp .L_lambda_simple_end_0446
 29999                                  .L_lambda_simple_code_0446:	; lambda-simple body
 30000 00012550 48837C241002            	cmp qword [rsp + 8 * 2], 2
 30001 00012556 740B                    	je .L_lambda_simple_arity_check_ok_093f
 30002 00012558 FF742410                	push qword [rsp + 8 * 2]
 30003 0001255C 6A02                    	push 2
 30004 0001255E E99D020000              	jmp L_error_incorrect_arity_simple
 30005                                  .L_lambda_simple_arity_check_ok_093f:
 30006 00012563 C8000000                	enter 0, 0
 30007 00012567 488B4528                mov rax, qword [rbp + 40]
 30008 0001256B 50                      	push rax
 30009 0001256C 6A01                    	push 1
 30010 0001256E 488B0425[00000000]      	mov rax, qword [free_var_0]
 30011 00012576 803805                  	cmp byte [rax], T_closure 
 30012 00012579 0F8583120000                    jne L_code_ptr_error
 30013                                  
 30014 0001257F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 30015                                  
 30016 00012583 53                              push rbx
 30017                                  
 30018 00012584 FF5009                          call SOB_CLOSURE_CODE(rax)
 30019                                  
 30020 00012587 483D[02000000]                  	cmp rax, sob_boolean_false
 30021 0001258D 740F                    	je .L_if_else_0292
 30022 0001258F 48B8-                   	mov rax, qword (L_constants + 2)
 30022 00012591 [0200000000000000] 
 30023 00012599 E97D010000              	jmp .L_if_end_0292
 30024                                  	.L_if_else_0292:
 30025 0001259E 488B4520                	mov rax, qword [rbp + 32]
 30026 000125A2 50                      	push rax
 30027 000125A3 488B4528                mov rax, qword [rbp + 40]
 30028 000125A7 50                      	push rax
 30029 000125A8 6A01                    	push 1
 30030 000125AA 488B0425[C0010000]      	mov rax, qword [free_var_56]
 30031 000125B2 803805                  	cmp byte [rax], T_closure 
 30032 000125B5 0F8547120000                    jne L_code_ptr_error
 30033                                  
 30034 000125BB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 30035                                  
 30036 000125BF 53                              push rbx
 30037                                  
 30038 000125C0 FF5009                          call SOB_CLOSURE_CODE(rax)
 30039                                  
 30040 000125C3 50                              	push rax
 30041 000125C4 6A02                    	push 2
 30042 000125C6 488B0425[B8010000]      	mov rax, qword [free_var_55]
 30043 000125CE 803805                  	cmp byte [rax], T_closure 
 30044 000125D1 0F852B120000                    jne L_code_ptr_error
 30045                                  
 30046 000125D7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 30047                                  
 30048 000125DB 53                              push rbx
 30049                                  
 30050 000125DC FF5009                          call SOB_CLOSURE_CODE(rax)
 30051                                  
 30052 000125DF 483D[02000000]                  	cmp rax, sob_boolean_false
 30053 000125E5 0F848A000000            	je .L_if_else_0293
 30054 000125EB 488B4528                mov rax, qword [rbp + 40]
 30055 000125EF 50                      	push rax
 30056 000125F0 6A01                    	push 1
 30057 000125F2 488B0425[80000000]      	mov rax, qword [free_var_16]
 30058                                  .L_lambda_simple_arity_check_ok_0941:
 30059 000125FA 803805                  	cmp byte [rax], T_closure
 30060                                  
 30061 000125FD 0F85FF110000                    jne L_code_ptr_error                      ; rax <- proc
 30062                                  
 30063                                  
 30064 00012603 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 30065                                  
 30066 00012607 53                              push rbx                                  ; env pushed
 30067                                  
 30068 00012608 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 30069                                  
 30070                                          ; sagydebug
 30071                                  
 30072 0001260B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 30073                                  
 30074                                          
 30075                                          
 30076 0001260E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 30077                                  
 30078 00012612 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 30079                                  
 30080                                  
 30081 00012617 4D89CA                          mov r10, r9
 30082 0001261A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 30083                                          
 30084 0001261E 4D89D7                          mov r15, r10
 30085 00012621 4983C7FF                        add r15, -1
 30086                                                                                         
 30087 00012625 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 30088 00012628 4983C404                        add r12, 4
 30089 0001262C 4983C4FF                        add r12, -1
 30090                                  
 30091 00012630 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 30092                                  .L_tc_recycle_frame_loop_04fb:
 30093 00012636 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 30094                                  
 30095 0001263A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 30096                                  
 30097                                  
 30098                                  
 30099 0001263F 41BE00000000                    mov r14, 0                                ; clean box
 30100                                  
 30101                                  
 30102 00012645 4983C7FF                        add r15, -1           
 30103 00012649 4983C2FF                        add r10, -1                               ; args_copied_counter--
 30104                                  
 30105 0001264D 4983C4FF                        add r12, -1 
 30106                                  
 30107 00012651 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 30108 00012655 75DF                    	jne .L_tc_recycle_frame_loop_04fb
 30109                                  .L_tc_recycle_frame_done_04fb:
 30110                                  ;this pop rbp in sot to the right place
 30111 00012657 4D89C7                  mov r15, r8
 30112                                  
 30113 0001265A 4983C704                        add r15, 4
 30114                                  
 30115 0001265E 49C1E703                        shl r15, 3
 30116                                  
 30117 00012662 4C01FC                          add rsp, r15
 30118 00012665 5D                      	pop rbp                                  ; restore the old rbp
 30119                                  
 30120 00012666 488B4D00                        mov rcx, qword [rbp]
 30121 0001266A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 30122                                            ; rbx <- code(proc)
 30123                                  
 30124 0001266E FFE3                            jmp rbx
 30125 00012670 E9A6000000              	jmp .L_if_end_0293
 30126                                  	.L_if_else_0293:
 30127 00012675 488B4528                	mov rax, qword [rbp + 40]
 30128 00012679 50                      	push rax
 30129 0001267A 6A01                    	push 1
 30130 0001267C 488B0425[88000000]      	mov rax, qword [free_var_17]
 30131 00012684 803805                  	cmp byte [rax], T_closure 
 30132 00012687 0F8575110000                    jne L_code_ptr_error
 30133                                  
 30134 0001268D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 30135                                  
 30136 00012691 53                              push rbx
 30137                                  
 30138 00012692 FF5009                          call SOB_CLOSURE_CODE(rax)
 30139                                  
 30140 00012695 50                              	push rax
 30141 00012696 488B4520                mov rax, qword [rbp + 32]
 30142 0001269A 50                      	push rax
 30143 0001269B 6A02                    	push 2
 30144 0001269D 488B0425[88040000]      	mov rax, qword [free_var_145]
 30145                                  .L_lambda_simple_arity_check_ok_0940:
 30146 000126A5 803805                  	cmp byte [rax], T_closure
 30147                                  
 30148 000126A8 0F8554110000                    jne L_code_ptr_error                      ; rax <- proc
 30149                                  
 30150                                  
 30151 000126AE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 30152                                  
 30153 000126B2 53                              push rbx                                  ; env pushed
 30154                                  
 30155 000126B3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 30156                                  
 30157                                          ; sagydebug
 30158                                  
 30159 000126B6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 30160                                  
 30161                                          
 30162                                          
 30163 000126B9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 30164                                  
 30165 000126BD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 30166                                  
 30167                                  
 30168 000126C2 4D89CA                          mov r10, r9
 30169 000126C5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv, retf, rbp in f)
 30170                                          
 30171 000126C9 4D89D7                          mov r15, r10
 30172 000126CC 4983C7FF                        add r15, -1
 30173                                                                                         
 30174 000126D0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 30175 000126D3 4983C404                        add r12, 4
 30176 000126D7 4983C4FF                        add r12, -1
 30177                                  
 30178 000126DB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 30179                                  .L_tc_recycle_frame_loop_04fa:
 30180 000126E1 4E8B34FC                	mov r14, [rsp + (r15 * 8)]               ; r14 <- i_element_old_code
 30181                                  
 30182 000126E5 4E8974E500                      mov [rbp + (r12 * 8)], r14
 30183                                  
 30184                                  
 30185                                  
 30186 000126EA 41BE00000000                    mov r14, 0                                ; clean box
 30187                                  
 30188                                  
 30189 000126F0 4983C7FF                        add r15, -1           
 30190 000126F4 4983C2FF                        add r10, -1                               ; args_copied_counter--
 30191                                  
 30192 000126F8 4983C4FF                        add r12, -1 
 30193                                  
 30194 000126FC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 30195 00012700 75DF                    	jne .L_tc_recycle_frame_loop_04fa
 30196                                  .L_tc_recycle_frame_done_04fa:
 30197                                  ;this pop rbp in sot to the right place
 30198 00012702 4D89C7                  mov r15, r8
 30199                                  
 30200 00012705 4983C704                        add r15, 4
 30201                                  
 30202 00012709 49C1E703                        shl r15, 3
 30203                                  
 30204 0001270D 4C01FC                          add rsp, r15
 30205 00012710 5D                      	pop rbp                                  ; restore the old rbp
 30206                                  
 30207 00012711 488B4D00                        mov rcx, qword [rbp]
 30208 00012715 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 30209                                            ; rbx <- code(proc)
 30210                                  
 30211 00012719 FFE3                            jmp rbx
 30212                                  	.L_if_end_0293:
 30213                                  	.L_if_end_0292:
 30214 0001271B C9                      	leave
 30215 0001271C C22000                  	ret 8 * (2 + 2)
 30216                                  .L_lambda_simple_end_0446:	; new closure is in rax
 30217 0001271F 48890425[88040000]      	mov qword [free_var_145], rax
 30218 00012727 48B8-                   	mov rax, sob_void
 30218 00012729 [0000000000000000] 
 30219                                  
 30220 00012731 4889C7                  	mov rdi, rax
 30221 00012734 E81F010000              	call print_sexpr_if_not_void
 30222                                  
 30223 00012739 48B8-                   	mov rax, qword (L_constants + 647)
 30223 0001273B [8702000000000000] 
 30224 00012743 50                      	push rax
 30225 00012744 488B0425[08030000]      	mov rax, qword [free_var_97]
 30226 0001274C 50                      	push rax
 30227 0001274D 6A02                    	push 2
 30228 0001274F 488B0425[C8020000]      	mov rax, qword [free_var_89]
 30229 00012757 803805                  	cmp byte [rax], T_closure 
 30230 0001275A 0F85A2100000                    jne L_code_ptr_error
 30231                                  
 30232 00012760 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 30233                                  
 30234 00012764 53                              push rbx
 30235                                  
 30236 00012765 FF5009                          call SOB_CLOSURE_CODE(rax)
 30237                                  
 30238                                          
 30239 00012768 4889C7                  	mov rdi, rax
 30240 0001276B E8E8000000              	call print_sexpr_if_not_void
 30241                                  
 30242 00012770 48BF-                           mov rdi, fmt_memory_usage
 30242 00012772 [F702000000000000] 
 30243 0001277A 488B3425[7E030000]              mov rsi, qword [top_of_memory]
 30244 00012782 4881EE[90040000]                sub rsi, memory
 30245 00012789 B800000000                      mov rax, 0
 30246                                  	ENTER
 30246 0001278E C8000000            <1>  enter 0, 0
 30246 00012792 4883E4F0            <1>  and rsp, ~15
 30247 00012796 E8(00000000)                    call printf
 30248                                  	LEAVE
 30248 0001279B C9                  <1>  leave
 30249 0001279C C9                      	leave
 30250 0001279D C3                      	ret
 30251                                  
 30252                                  L_error_non_closure:
 30253 0001279E 488B3C25[00000000]              mov rdi, qword [stderr]
 30254 000127A6 48BE-                           mov rsi, fmt_non_closure
 30254 000127A8 [2E03000000000000] 
 30255 000127B0 B800000000                      mov rax, 0
 30256                                  	ENTER
 30256 000127B5 C8000000            <1>  enter 0, 0
 30256 000127B9 4883E4F0            <1>  and rsp, ~15
 30257 000127BD E8(00000000)                    call fprintf
 30258                                  	LEAVE
 30258 000127C2 C9                  <1>  leave
 30259 000127C3 48C7C0FEFFFFFF                  mov rax, -2
 30260 000127CA E8(00000000)                    call exit
 30261                                  
 30262                                  L_error_improper_list:
 30263 000127CF 488B3C25[00000000]      	mov rdi, qword [stderr]
 30264 000127D7 48BE-                   	mov rsi, fmt_error_improper_list
 30264 000127D9 [5603000000000000] 
 30265 000127E1 B800000000              	mov rax, 0
 30266                                  	ENTER
 30266 000127E6 C8000000            <1>  enter 0, 0
 30266 000127EA 4883E4F0            <1>  and rsp, ~15
 30267 000127EE E8(00000000)            	call fprintf
 30268                                  	LEAVE
 30268 000127F3 C9                  <1>  leave
 30269 000127F4 48C7C0F9FFFFFF          	mov rax, -7
 30270 000127FB E8(00000000)            	call exit
 30271                                  
 30272                                  L_error_incorrect_arity_simple:
 30273 00012800 488B3C25[00000000]              mov rdi, qword [stderr]
 30274 00012808 48BE-                           mov rsi, fmt_incorrect_arity_simple
 30274 0001280A [9802000000000000] 
 30275 00012812 EB12                            jmp L_error_incorrect_arity_common
 30276                                  L_error_incorrect_arity_opt:
 30277 00012814 488B3C25[00000000]              mov rdi, qword [stderr]
 30278 0001281C 48BE-                           mov rsi, fmt_incorrect_arity_opt
 30278 0001281E [C302000000000000] 
 30279                                  L_error_incorrect_arity_common:
 30280 00012826 5A                              pop rdx
 30281 00012827 59                              pop rcx
 30282 00012828 B800000000                      mov rax, 0
 30283                                  	ENTER
 30283 0001282D C8000000            <1>  enter 0, 0
 30283 00012831 4883E4F0            <1>  and rsp, ~15
 30284 00012835 E8(00000000)                    call fprintf
 30285                                  	LEAVE
 30285 0001283A C9                  <1>  leave
 30286 0001283B 48C7C0FAFFFFFF                  mov rax, -6
 30287 00012842 E8(00000000)                    call exit
 30288                                  
 30289                                  section .data
 30290                                  fmt_incorrect_arity_simple:
 30291 00000298 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 30291 000002A1 74656420256C642061-
 30291 000002AA 7267756D656E74732C-
 30291 000002B3 206275742067697665-
 30291 000002BC 6E20256C640A00     
 30292                                  fmt_incorrect_arity_opt:
 30293 000002C3 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 30293 000002CC 746564206174206C65-
 30293 000002D5 61737420256C642061-
 30293 000002DE 7267756D656E74732C-
 30293 000002E7 206275742067697665-
 30293 000002F0 6E20256C640A00     
 30294                                  fmt_memory_usage:
 30295 000002F7 0A0A21212120557365-             db `\n\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 30295 00000300 6420256C6420627974-
 30295 00000309 6573206F662064796E-
 30295 00000312 616D6963616C6C792D-
 30295 0000031B 616C6C6F6361746564-
 30295 00000324 206D656D6F72790A0A-
 30295 0000032D 00                 
 30296                                  fmt_non_closure:
 30297 0000032E 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 30297 00000337 7074696E6720746F20-
 30297 00000340 6170706C792061206E-
 30297 00000349 6F6E2D636C6F737572-
 30297 00000352 65210A00           
 30298                                  fmt_error_improper_list:
 30299 00000356 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 30299 0000035F 7267756D656E742069-
 30299 00000368 73206E6F7420612070-
 30299 00000371 726F706572206C6973-
 30299 0000037A 74210A00           
 30300                                  
 30301                                  section .bss
 30302                                  memory:
 30303 00000490 <res 40000000>          	resb gbytes(1)
 30304                                  
 30305                                  section .data
 30306                                  top_of_memory:
 30307 0000037E [9004000000000000]              dq memory
 30308                                  
 30309                                  section .text
 30310                                  malloc:
 30311 00012847 488B0425[7E030000]              mov rax, qword [top_of_memory]
 30312 0001284F 48013C25[7E030000]              add qword [top_of_memory], rdi
 30313 00012857 C3                              ret
 30314                                          
 30315                                  print_sexpr_if_not_void:
 30316 00012858 4881FF[00000000]        	cmp rdi, sob_void
 30317 0001285F 7501                    	jne print_sexpr
 30318 00012861 C3                      	ret
 30319                                  
 30320                                  section .data
 30321                                  fmt_void:
 30322 00000386 233C766F69643E00        	db `#<void>\0`
 30323                                  fmt_nil:
 30324 0000038E 282900                  	db `()\0`
 30325                                  fmt_boolean_false:
 30326 00000391 236600                  	db `#f\0`
 30327                                  fmt_boolean_true:
 30328 00000394 237400                  	db `#t\0`
 30329                                  fmt_char_backslash:
 30330 00000397 235C5C00                	db `#\\\\\0`
 30331                                  fmt_char_dquote:
 30332 0000039B 235C2200                	db `#\\"\0`
 30333                                  fmt_char_simple:
 30334 0000039F 235C256300              	db `#\\%c\0`
 30335                                  fmt_char_null:
 30336 000003A4 235C6E756C00            	db `#\\nul\0`
 30337                                  fmt_char_bell:
 30338 000003AA 235C62656C6C00          	db `#\\bell\0`
 30339                                  fmt_char_backspace:
 30340 000003B1 235C6261636B737061-     	db `#\\backspace\0`
 30340 000003BA 636500             
 30341                                  fmt_char_tab:
 30342 000003BD 235C74616200            	db `#\\tab\0`
 30343                                  fmt_char_newline:
 30344 000003C3 235C6E65776C696E65-     	db `#\\newline\0`
 30344 000003CC 00                 
 30345                                  fmt_char_formfeed:
 30346 000003CD 235C7061676500          	db `#\\page\0`
 30347                                  fmt_char_return:
 30348 000003D4 235C72657475726E00      	db `#\\return\0`
 30349                                  fmt_char_escape:
 30350 000003DD 235C65736300            	db `#\\esc\0`
 30351                                  fmt_char_space:
 30352 000003E3 235C737061636500        	db `#\\space\0`
 30353                                  fmt_char_hex:
 30354 000003EB 235C782530325800        	db `#\\x%02X\0`
 30355                                  fmt_closure:
 30356 000003F3 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 30356 000003FC 206174203078253038-
 30356 00000405 5820656E763D307825-
 30356 0000040E 30385820636F64653D-
 30356 00000417 3078253038583E00   
 30357                                  fmt_lparen:
 30358 0000041F 2800                    	db `(\0`
 30359                                  fmt_dotted_pair:
 30360 00000421 202E2000                	db ` . \0`
 30361                                  fmt_rparen:
 30362 00000425 2900                    	db `)\0`
 30363                                  fmt_space:
 30364 00000427 2000                    	db ` \0`
 30365                                  fmt_empty_vector:
 30366 00000429 23282900                	db `#()\0`
 30367                                  fmt_vector:
 30368 0000042D 232800                  	db `#(\0`
 30369                                  fmt_real:
 30370 00000430 256600                  	db `%f\0`
 30371                                  fmt_fraction:
 30372 00000433 256C642F256C6400        	db `%ld/%ld\0`
 30373                                  fmt_zero:
 30374 0000043B 3000                    	db `0\0`
 30375                                  fmt_int:
 30376 0000043D 256C6400                	db `%ld\0`
 30377                                  fmt_unknown_sexpr_error:
 30378 00000441 0A0A21212120457272-     	db `\n\n!!! Error: Unknown type of sexpr (0x%02X) `
 30378 0000044A 6F723A20556E6B6E6F-
 30378 00000453 776E2074797065206F-
 30378 0000045C 662073657870722028-
 30378 00000465 3078253032582920   
 30379 0000046D 617420616464726573-     	db `at address 0x%08X\n\n\0`
 30379 00000476 73203078253038580A-
 30379 0000047F 0A00               
 30380                                  fmt_dquote:
 30381 00000481 2200                    	db `\"\0`
 30382                                  fmt_string_char:
 30383 00000483 256300                          db `%c\0`
 30384                                  fmt_string_char_7:
 30385 00000486 5C6100                          db `\\a\0`
 30386                                  fmt_string_char_8:
 30387 00000489 5C6200                          db `\\b\0`
 30388                                  fmt_string_char_9:
 30389 0000048C 5C7400                          db `\\t\0`
 30390                                  fmt_string_char_10:
 30391 0000048F 5C6E00                          db `\\n\0`
 30392                                  fmt_string_char_11:
 30393 00000492 5C7600                          db `\\v\0`
 30394                                  fmt_string_char_12:
 30395 00000495 5C6600                          db `\\f\0`
 30396                                  fmt_string_char_13:
 30397 00000498 5C7200                          db `\\r\0`
 30398                                  fmt_string_char_34:
 30399 0000049B 5C2200                          db `\\"\0`
 30400                                  fmt_string_char_92:
 30401 0000049E 5C5C00                          db `\\\\\0`
 30402                                  fmt_string_char_hex:
 30403 000004A1 5C7825583B00                    db `\\x%X;\0`
 30404                                  
 30405                                  section .text
 30406                                  
 30407                                  print_sexpr:
 30408                                  	ENTER
 30408 00012862 C8000000            <1>  enter 0, 0
 30408 00012866 4883E4F0            <1>  and rsp, ~15
 30409 0001286A 8A07                    	mov al, byte [rdi]
 30410 0001286C 3C00                    	cmp al, T_void
 30411 0001286E 744D                    	je .Lvoid
 30412 00012870 3C01                    	cmp al, T_nil
 30413 00012872 7458                    	je .Lnil
 30414 00012874 3C09                    	cmp al, T_boolean_false
 30415 00012876 7463                    	je .Lboolean_false
 30416 00012878 3C0A                    	cmp al, T_boolean_true
 30417 0001287A 746E                    	je .Lboolean_true
 30418 0001287C 3C02                    	cmp al, T_char
 30419 0001287E 7479                    	je .Lchar
 30420 00012880 3C04                    	cmp al, T_symbol
 30421 00012882 0F84BB010000            	je .Lsymbol
 30422 00012888 3C21                    	cmp al, T_pair
 30423 0001288A 0F84D6010000            	je .Lpair
 30424 00012890 3C22                    	cmp al, T_vector
 30425 00012892 0F849F020000            	je .Lvector
 30426 00012898 3C05                    	cmp al, T_closure
 30427 0001289A 0F8489010000            	je .Lclosure
 30428 000128A0 3C12                    	cmp al, T_real
 30429 000128A2 0F8430030000            	je .Lreal
 30430 000128A8 3C11                    	cmp al, T_rational
 30431 000128AA 0F8456030000            	je .Lrational
 30432 000128B0 3C03                    	cmp al, T_string
 30433 000128B2 0F848F030000            	je .Lstring
 30434                                  
 30435 000128B8 E9C7040000              	jmp .Lunknown_sexpr_type
 30436                                  
 30437                                  .Lvoid:
 30438 000128BD 48BF-                   	mov rdi, fmt_void
 30438 000128BF [8603000000000000] 
 30439 000128C7 E9F5040000              	jmp .Lemit
 30440                                  
 30441                                  .Lnil:
 30442 000128CC 48BF-                   	mov rdi, fmt_nil
 30442 000128CE [8E03000000000000] 
 30443 000128D6 E9E6040000              	jmp .Lemit
 30444                                  
 30445                                  .Lboolean_false:
 30446 000128DB 48BF-                   	mov rdi, fmt_boolean_false
 30446 000128DD [9103000000000000] 
 30447 000128E5 E9D7040000              	jmp .Lemit
 30448                                  
 30449                                  .Lboolean_true:
 30450 000128EA 48BF-                   	mov rdi, fmt_boolean_true
 30450 000128EC [9403000000000000] 
 30451 000128F4 E9C8040000              	jmp .Lemit
 30452                                  
 30453                                  .Lchar:
 30454 000128F9 8A4701                  	mov al, byte [rdi + 1]
 30455 000128FC 3C20                    	cmp al, ' '
 30456 000128FE 7E28                    	jle .Lchar_whitespace
 30457 00012900 3C5C                    	cmp al, 92 		; backslash
 30458 00012902 0F847C000000            	je .Lchar_backslash
 30459 00012908 3C22                    	cmp al, '"'
 30460 0001290A 0F8483000000            	je .Lchar_dquote
 30461 00012910 4825FF000000            	and rax, 255
 30462 00012916 48BF-                   	mov rdi, fmt_char_simple
 30462 00012918 [9F03000000000000] 
 30463 00012920 4889C6                  	mov rsi, rax
 30464 00012923 E999040000              	jmp .Lemit
 30465                                  
 30466                                  .Lchar_whitespace:
 30467 00012928 3C00                    	cmp al, 0
 30468 0001292A 7476                    	je .Lchar_null
 30469 0001292C 3C07                    	cmp al, 7
 30470 0001292E 0F847D000000            	je .Lchar_bell
 30471 00012934 3C08                    	cmp al, 8
 30472 00012936 0F8484000000            	je .Lchar_backspace
 30473 0001293C 3C09                    	cmp al, 9
 30474 0001293E 0F848B000000            	je .Lchar_tab
 30475 00012944 3C0A                    	cmp al, 10
 30476 00012946 0F8492000000            	je .Lchar_newline
 30477 0001294C 3C0C                    	cmp al, 12
 30478 0001294E 0F8499000000            	je .Lchar_formfeed
 30479 00012954 3C0D                    	cmp al, 13
 30480 00012956 0F84A0000000            	je .Lchar_return
 30481 0001295C 3C1B                    	cmp al, 27
 30482 0001295E 0F84A7000000            	je .Lchar_escape
 30483 00012964 4825FF000000            	and rax, 255
 30484 0001296A 3C20                    	cmp al, ' '
 30485 0001296C 0F84A8000000            	je .Lchar_space
 30486 00012972 48BF-                   	mov rdi, fmt_char_hex
 30486 00012974 [EB03000000000000] 
 30487 0001297C 4889C6                  	mov rsi, rax
 30488 0001297F E93D040000              	jmp .Lemit	
 30489                                  
 30490                                  .Lchar_backslash:
 30491 00012984 48BF-                   	mov rdi, fmt_char_backslash
 30491 00012986 [9703000000000000] 
 30492 0001298E E92E040000              	jmp .Lemit
 30493                                  
 30494                                  .Lchar_dquote:
 30495 00012993 48BF-                   	mov rdi, fmt_char_dquote
 30495 00012995 [9B03000000000000] 
 30496 0001299D E91F040000              	jmp .Lemit
 30497                                  
 30498                                  .Lchar_null:
 30499 000129A2 48BF-                   	mov rdi, fmt_char_null
 30499 000129A4 [A403000000000000] 
 30500 000129AC E910040000              	jmp .Lemit
 30501                                  
 30502                                  .Lchar_bell:
 30503 000129B1 48BF-                   	mov rdi, fmt_char_bell
 30503 000129B3 [AA03000000000000] 
 30504 000129BB E901040000              	jmp .Lemit
 30505                                  
 30506                                  .Lchar_backspace:
 30507 000129C0 48BF-                   	mov rdi, fmt_char_backspace
 30507 000129C2 [B103000000000000] 
 30508 000129CA E9F2030000              	jmp .Lemit
 30509                                  
 30510                                  .Lchar_tab:
 30511 000129CF 48BF-                   	mov rdi, fmt_char_tab
 30511 000129D1 [BD03000000000000] 
 30512 000129D9 E9E3030000              	jmp .Lemit
 30513                                  
 30514                                  .Lchar_newline:
 30515 000129DE 48BF-                   	mov rdi, fmt_char_newline
 30515 000129E0 [C303000000000000] 
 30516 000129E8 E9D4030000              	jmp .Lemit
 30517                                  
 30518                                  .Lchar_formfeed:
 30519 000129ED 48BF-                   	mov rdi, fmt_char_formfeed
 30519 000129EF [CD03000000000000] 
 30520 000129F7 E9C5030000              	jmp .Lemit
 30521                                  
 30522                                  .Lchar_return:
 30523 000129FC 48BF-                   	mov rdi, fmt_char_return
 30523 000129FE [D403000000000000] 
 30524 00012A06 E9B6030000              	jmp .Lemit
 30525                                  
 30526                                  .Lchar_escape:
 30527 00012A0B 48BF-                   	mov rdi, fmt_char_escape
 30527 00012A0D [DD03000000000000] 
 30528 00012A15 E9A7030000              	jmp .Lemit
 30529                                  
 30530                                  .Lchar_space:
 30531 00012A1A 48BF-                   	mov rdi, fmt_char_space
 30531 00012A1C [E303000000000000] 
 30532 00012A24 E998030000              	jmp .Lemit
 30533                                  
 30534                                  .Lclosure:
 30535 00012A29 4889FE                  	mov rsi, qword rdi
 30536 00012A2C 48BF-                   	mov rdi, fmt_closure
 30536 00012A2E [F303000000000000] 
 30537 00012A36 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 30538 00012A3A 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 30539 00012A3E E97E030000              	jmp .Lemit
 30540                                  
 30541                                  .Lsymbol:
 30542 00012A43 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 30543 00012A47 BE01000000              	mov rsi, 1		 ; size = 1 byte
 30544 00012A4C 488B5701                	mov rdx, qword [rdi + 1] ; length
 30545 00012A50 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 30546 00012A54 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 30547 00012A5C E8(00000000)            	call fwrite
 30548 00012A61 E970030000              	jmp .Lend
 30549                                  	
 30550                                  .Lpair:
 30551 00012A66 57                      	push rdi
 30552 00012A67 48BF-                   	mov rdi, fmt_lparen
 30552 00012A69 [1F04000000000000] 
 30553 00012A71 B800000000              	mov rax, 0
 30554                                          ENTER
 30554 00012A76 C8000000            <1>  enter 0, 0
 30554 00012A7A 4883E4F0            <1>  and rsp, ~15
 30555 00012A7E E8(00000000)            	call printf
 30556                                          LEAVE
 30556 00012A83 C9                  <1>  leave
 30557 00012A84 488B3C24                	mov rdi, qword [rsp] 	; pair
 30558 00012A88 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 30559 00012A8C E8D1FDFFFF              	call print_sexpr
 30560 00012A91 5F                      	pop rdi 		; pair
 30561 00012A92 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 30562                                  .Lcdr:
 30563 00012A96 8A07                    	mov al, byte [rdi]
 30564 00012A98 3C01                    	cmp al, T_nil
 30565 00012A9A 7447                    	je .Lcdr_nil
 30566 00012A9C 3C21                    	cmp al, T_pair
 30567 00012A9E 7462                    	je .Lcdr_pair
 30568 00012AA0 57                      	push rdi
 30569 00012AA1 48BF-                   	mov rdi, fmt_dotted_pair
 30569 00012AA3 [2104000000000000] 
 30570 00012AAB B800000000              	mov rax, 0
 30571                                  	ENTER
 30571 00012AB0 C8000000            <1>  enter 0, 0
 30571 00012AB4 4883E4F0            <1>  and rsp, ~15
 30572 00012AB8 E8(00000000)            	call printf
 30573                                  	LEAVE
 30573 00012ABD C9                  <1>  leave
 30574 00012ABE 5F                      	pop rdi
 30575 00012ABF E89EFDFFFF              	call print_sexpr
 30576 00012AC4 48BF-                   	mov rdi, fmt_rparen
 30576 00012AC6 [2504000000000000] 
 30577 00012ACE B800000000              	mov rax, 0
 30578                                  	ENTER
 30578 00012AD3 C8000000            <1>  enter 0, 0
 30578 00012AD7 4883E4F0            <1>  and rsp, ~15
 30579 00012ADB E8(00000000)            	call printf
 30580                                  	LEAVE
 30580 00012AE0 C9                  <1>  leave
 30581                                  	LEAVE
 30581 00012AE1 C9                  <1>  leave
 30582 00012AE2 C3                      	ret
 30583                                  
 30584                                  .Lcdr_nil:
 30585 00012AE3 48BF-                   	mov rdi, fmt_rparen
 30585 00012AE5 [2504000000000000] 
 30586 00012AED B800000000              	mov rax, 0
 30587                                  	ENTER
 30587 00012AF2 C8000000            <1>  enter 0, 0
 30587 00012AF6 4883E4F0            <1>  and rsp, ~15
 30588 00012AFA E8(00000000)            	call printf
 30589                                  	LEAVE
 30589 00012AFF C9                  <1>  leave
 30590                                  	LEAVE
 30590 00012B00 C9                  <1>  leave
 30591 00012B01 C3                      	ret
 30592                                  
 30593                                  .Lcdr_pair:
 30594 00012B02 57                      	push rdi
 30595 00012B03 48BF-                   	mov rdi, fmt_space
 30595 00012B05 [2704000000000000] 
 30596 00012B0D B800000000              	mov rax, 0
 30597                                  	ENTER
 30597 00012B12 C8000000            <1>  enter 0, 0
 30597 00012B16 4883E4F0            <1>  and rsp, ~15
 30598 00012B1A E8(00000000)            	call printf
 30599                                  	LEAVE
 30599 00012B1F C9                  <1>  leave
 30600 00012B20 488B3C24                	mov rdi, qword [rsp]
 30601 00012B24 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 30602 00012B28 E835FDFFFF              	call print_sexpr
 30603 00012B2D 5F                      	pop rdi
 30604 00012B2E 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 30605 00012B32 E95FFFFFFF              	jmp .Lcdr
 30606                                  
 30607                                  .Lvector:
 30608 00012B37 488B4701                	mov rax, qword [rdi + 1] ; length
 30609 00012B3B 4883F800                	cmp rax, 0
 30610 00012B3F 0F8484000000            	je .Lvector_empty
 30611 00012B45 57                      	push rdi
 30612 00012B46 48BF-                   	mov rdi, fmt_vector
 30612 00012B48 [2D04000000000000] 
 30613 00012B50 B800000000              	mov rax, 0
 30614                                  	ENTER
 30614 00012B55 C8000000            <1>  enter 0, 0
 30614 00012B59 4883E4F0            <1>  and rsp, ~15
 30615 00012B5D E8(00000000)            	call printf
 30616                                  	LEAVE
 30616 00012B62 C9                  <1>  leave
 30617 00012B63 488B3C24                	mov rdi, qword [rsp]
 30618 00012B67 FF7701                  	push qword [rdi + 1]
 30619 00012B6A 6A01                    	push 1
 30620 00012B6C 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 30621 00012B70 E8EDFCFFFF              	call print_sexpr
 30622                                  .Lvector_loop:
 30623                                  	; [rsp] index
 30624                                  	; [rsp + 8*1] limit
 30625                                  	; [rsp + 8*2] vector
 30626 00012B75 488B0424                	mov rax, qword [rsp]
 30627 00012B79 483B442408              	cmp rax, qword [rsp + 8*1]
 30628 00012B7E 7436                    	je .Lvector_end
 30629 00012B80 48BF-                   	mov rdi, fmt_space
 30629 00012B82 [2704000000000000] 
 30630 00012B8A B800000000              	mov rax, 0
 30631                                  	ENTER
 30631 00012B8F C8000000            <1>  enter 0, 0
 30631 00012B93 4883E4F0            <1>  and rsp, ~15
 30632 00012B97 E8(00000000)            	call printf
 30633                                  	LEAVE
 30633 00012B9C C9                  <1>  leave
 30634 00012B9D 488B0424                	mov rax, qword [rsp]
 30635 00012BA1 488B5C2410              	mov rbx, qword [rsp + 8*2]
 30636 00012BA6 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 30637 00012BAB E8B2FCFFFF              	call print_sexpr
 30638 00012BB0 48FF0424                	inc qword [rsp]
 30639 00012BB4 EBBF                    	jmp .Lvector_loop
 30640                                  
 30641                                  .Lvector_end:
 30642 00012BB6 4883C418                	add rsp, 8*3
 30643 00012BBA 48BF-                   	mov rdi, fmt_rparen
 30643 00012BBC [2504000000000000] 
 30644 00012BC4 E9F8010000              	jmp .Lemit	
 30645                                  
 30646                                  .Lvector_empty:
 30647 00012BC9 48BF-                   	mov rdi, fmt_empty_vector
 30647 00012BCB [2904000000000000] 
 30648 00012BD3 E9E9010000              	jmp .Lemit
 30649                                  
 30650                                  .Lreal:
 30651 00012BD8 FF7701                  	push qword [rdi + 1]
 30652 00012BDB F20F100424              	movsd xmm0, qword [rsp]
 30653 00012BE0 4883C408                	add rsp, 8*1
 30654 00012BE4 48BF-                   	mov rdi, fmt_real
 30654 00012BE6 [3004000000000000] 
 30655 00012BEE B801000000              	mov rax, 1
 30656                                  	ENTER
 30656 00012BF3 C8000000            <1>  enter 0, 0
 30656 00012BF7 4883E4F0            <1>  and rsp, ~15
 30657 00012BFB E8(00000000)            	call printf
 30658                                  	LEAVE
 30658 00012C00 C9                  <1>  leave
 30659 00012C01 E9D0010000              	jmp .Lend
 30660                                  
 30661                                  .Lrational:
 30662 00012C06 488B7701                	mov rsi, qword [rdi + 1]
 30663 00012C0A 488B5709                	mov rdx, qword [rdi + 1 + 8]
 30664 00012C0E 4883FE00                	cmp rsi, 0
 30665 00012C12 7415                    	je .Lrat_zero
 30666 00012C14 4883FA01                	cmp rdx, 1
 30667 00012C18 741E                    	je .Lrat_int
 30668 00012C1A 48BF-                   	mov rdi, fmt_fraction
 30668 00012C1C [3304000000000000] 
 30669 00012C24 E998010000              	jmp .Lemit
 30670                                  
 30671                                  .Lrat_zero:
 30672 00012C29 48BF-                   	mov rdi, fmt_zero
 30672 00012C2B [3B04000000000000] 
 30673 00012C33 E989010000              	jmp .Lemit
 30674                                  
 30675                                  .Lrat_int:
 30676 00012C38 48BF-                   	mov rdi, fmt_int
 30676 00012C3A [3D04000000000000] 
 30677 00012C42 E97A010000              	jmp .Lemit
 30678                                  
 30679                                  .Lstring:
 30680 00012C47 488D4709                	lea rax, [rdi + 1 + 8]
 30681 00012C4B 50                      	push rax
 30682 00012C4C FF7701                  	push qword [rdi + 1]
 30683 00012C4F 48BF-                   	mov rdi, fmt_dquote
 30683 00012C51 [8104000000000000] 
 30684 00012C59 B800000000              	mov rax, 0
 30685                                  	ENTER
 30685 00012C5E C8000000            <1>  enter 0, 0
 30685 00012C62 4883E4F0            <1>  and rsp, ~15
 30686 00012C66 E8(00000000)            	call printf
 30687                                  	LEAVE
 30687 00012C6B C9                  <1>  leave
 30688                                  .Lstring_loop:
 30689                                  	; qword [rsp]: limit
 30690                                  	; qword [rsp + 8*1]: char *
 30691 00012C6C 48833C2400              	cmp qword [rsp], 0
 30692 00012C71 0F84FD000000            	je .Lstring_end
 30693 00012C77 488B442408              	mov rax, qword [rsp + 8*1]
 30694 00012C7C 8A00                    	mov al, byte [rax]
 30695 00012C7E 4825FF000000            	and rax, 255
 30696 00012C84 3C07                    	cmp al, 7
 30697 00012C86 7468                            je .Lstring_char_7
 30698 00012C88 3C08                            cmp al, 8
 30699 00012C8A 7470                            je .Lstring_char_8
 30700 00012C8C 3C09                            cmp al, 9
 30701 00012C8E 7478                            je .Lstring_char_9
 30702 00012C90 3C0A                            cmp al, 10
 30703 00012C92 0F847C000000                    je .Lstring_char_10
 30704 00012C98 3C0B                            cmp al, 11
 30705 00012C9A 0F8480000000                    je .Lstring_char_11
 30706 00012CA0 3C0C                            cmp al, 12
 30707 00012CA2 0F8484000000                    je .Lstring_char_12
 30708 00012CA8 3C0D                            cmp al, 13
 30709 00012CAA 0F8488000000                    je .Lstring_char_13
 30710 00012CB0 3C22                            cmp al, 34
 30711 00012CB2 0F848C000000                    je .Lstring_char_34
 30713 00012CB8 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 30714 00012CBA 3C20                            cmp al, ' '
 30715 00012CBC 0F8CA0000000                    jl .Lstring_char_hex
 30716 00012CC2 48BF-                           mov rdi, fmt_string_char
 30716 00012CC4 [8304000000000000] 
 30717 00012CCC 4889C6                          mov rsi, rax
 30718                                  .Lstring_char_emit:
 30719 00012CCF B800000000                      mov rax, 0
 30720                                          ENTER
 30720 00012CD4 C8000000            <1>  enter 0, 0
 30720 00012CD8 4883E4F0            <1>  and rsp, ~15
 30721 00012CDC E8(00000000)                    call printf
 30722                                          LEAVE
 30722 00012CE1 C9                  <1>  leave
 30723 00012CE2 48FF0C24                        dec qword [rsp]
 30724 00012CE6 48FF442408                      inc qword [rsp + 8*1]
 30725 00012CEB E97CFFFFFF                      jmp .Lstring_loop
 30726                                  
 30727                                  .Lstring_char_7:
 30728 00012CF0 48BF-                           mov rdi, fmt_string_char_7
 30728 00012CF2 [8604000000000000] 
 30729 00012CFA EBD3                            jmp .Lstring_char_emit
 30730                                  
 30731                                  .Lstring_char_8:
 30732 00012CFC 48BF-                           mov rdi, fmt_string_char_8
 30732 00012CFE [8904000000000000] 
 30733 00012D06 EBC7                            jmp .Lstring_char_emit
 30734                                          
 30735                                  .Lstring_char_9:
 30736 00012D08 48BF-                           mov rdi, fmt_string_char_9
 30736 00012D0A [8C04000000000000] 
 30737 00012D12 EBBB                            jmp .Lstring_char_emit
 30738                                  
 30739                                  .Lstring_char_10:
 30740 00012D14 48BF-                           mov rdi, fmt_string_char_10
 30740 00012D16 [8F04000000000000] 
 30741 00012D1E EBAF                            jmp .Lstring_char_emit
 30742                                  
 30743                                  .Lstring_char_11:
 30744 00012D20 48BF-                           mov rdi, fmt_string_char_11
 30744 00012D22 [9204000000000000] 
 30745 00012D2A EBA3                            jmp .Lstring_char_emit
 30746                                  
 30747                                  .Lstring_char_12:
 30748 00012D2C 48BF-                           mov rdi, fmt_string_char_12
 30748 00012D2E [9504000000000000] 
 30749 00012D36 EB97                            jmp .Lstring_char_emit
 30750                                  
 30751                                  .Lstring_char_13:
 30752 00012D38 48BF-                           mov rdi, fmt_string_char_13
 30752 00012D3A [9804000000000000] 
 30753 00012D42 EB8B                            jmp .Lstring_char_emit
 30754                                  
 30755                                  .Lstring_char_34:
 30756 00012D44 48BF-                           mov rdi, fmt_string_char_34
 30756 00012D46 [9B04000000000000] 
 30757 00012D4E E97CFFFFFF                      jmp .Lstring_char_emit
 30758                                  
 30759                                  .Lstring_char_92:
 30760 00012D53 48BF-                           mov rdi, fmt_string_char_92
 30760 00012D55 [9E04000000000000] 
 30761 00012D5D E96DFFFFFF                      jmp .Lstring_char_emit
 30762                                  
 30763                                  .Lstring_char_hex:
 30764 00012D62 48BF-                           mov rdi, fmt_string_char_hex
 30764 00012D64 [A104000000000000] 
 30765 00012D6C 4889C6                          mov rsi, rax
 30766 00012D6F E95BFFFFFF                      jmp .Lstring_char_emit        
 30767                                  
 30768                                  .Lstring_end:
 30769 00012D74 4883C410                	add rsp, 8 * 2
 30770 00012D78 48BF-                   	mov rdi, fmt_dquote
 30770 00012D7A [8104000000000000] 
 30771 00012D82 EB3D                    	jmp .Lemit
 30772                                  
 30773                                  .Lunknown_sexpr_type:
 30774 00012D84 48BE-                   	mov rsi, fmt_unknown_sexpr_error
 30774 00012D86 [4104000000000000] 
 30775 00012D8E 4825FF000000            	and rax, 255
 30776 00012D94 4889C2                  	mov rdx, rax
 30777 00012D97 4889F9                  	mov rcx, rdi
 30778 00012D9A 488B3C25[00000000]      	mov rdi, qword [stderr]
 30779 00012DA2 B800000000              	mov rax, 0
 30780                                  	ENTER
 30780 00012DA7 C8000000            <1>  enter 0, 0
 30780 00012DAB 4883E4F0            <1>  and rsp, ~15
 30781 00012DAF E8(00000000)            	call fprintf
 30782                                  	LEAVE
 30782 00012DB4 C9                  <1>  leave
 30783 00012DB5 48C7C0FFFFFFFF          	mov rax, -1
 30784 00012DBC E8(00000000)            	call exit
 30785                                  
 30786                                  .Lemit:
 30787 00012DC1 B800000000              	mov rax, 0
 30788                                  	ENTER
 30788 00012DC6 C8000000            <1>  enter 0, 0
 30788 00012DCA 4883E4F0            <1>  and rsp, ~15
 30789 00012DCE E8(00000000)            	call printf
 30790                                  	LEAVE
 30790 00012DD3 C9                  <1>  leave
 30791 00012DD4 EB00                    	jmp .Lend
 30792                                  
 30793                                  .Lend:
 30794                                  	LEAVE
 30794 00012DD6 C9                  <1>  leave
 30795 00012DD7 C3                      	ret
 30796                                  
 30797                                  ;;; rdi: address of free variable
 30798                                  ;;; rsi: address of code-pointer
 30799                                  bind_primitive:
 30800                                          ENTER
 30800 00012DD8 C8000000            <1>  enter 0, 0
 30800 00012DDC 4883E4F0            <1>  and rsp, ~15
 30801 00012DE0 57                              push rdi
 30802 00012DE1 BF11000000                      mov rdi, (1 + 8 + 8)
 30803 00012DE6 E85CFAFFFF                      call malloc
 30804 00012DEB 5F                              pop rdi
 30805 00012DEC C60005                          mov byte [rax], T_closure
 30806 00012DEF 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 30807 00012DF7 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 30808 00012DFB 488907                          mov qword [rdi], rax
 30809                                          LEAVE
 30809 00012DFE C9                  <1>  leave
 30810 00012DFF C3                              ret
 30811                                  
 30812                                  
 30813                                  ;;; PLEASE IMPLEMENT THIS PROCEDURE
 30814                                  ; (* cuurent version!*)
 30815                                  L_code_ptr_bin_apply:
 30816 00012E00 488B0C24                        mov rcx, qword [rsp]
 30817 00012E04 4C8B442410                      mov r8, [rsp +  2 * 8]                          ; r8 <- num_of_args
 30818 00012E09 4983F802                        cmp r8, 2       
 30819 00012E0D 0F858F110000                    jne L_error_arg_count_2                         ; check right number of parameters.           
 30820                                  
 30821 00012E13 4C8B442420                      mov r8, qword [rsp + 4 * 8]                     ; r8 <- list_of_args
 30822                                          assert_pair(r8)
 30822 00012E18 41803821            <1>  cmp byte [%1], %2
 30822 00012E1C 0F851F120000        <1>  jne L_error_incorrect_type
 30823                                  
 30824 00012E22 41803801                        cmp byte [r8], T_nil 
 30825 00012E26 0F840C110000                    je L_error_arg_count_0                       ; list.length == 0 ?
 30826                                  
 30827 00012E2C 41BB00000000                    mov r11, 0                                      ; list_asrgs_counter init
 30828                                  
 30829 00012E32 4C8B642418                      mov r12, qword [rsp + 3 * 8]                    ; r12 <- proc
 30830 00012E37 803805                          cmp byte [rax], T_closure
 30831 00012E3A 0F855EF9FFFF                    jne L_error_non_closure
 30832                                  
 30833 00012E40 4C8B3424                        mov r14, qword [rsp]                            ; r14 <- ret address
 30834 00012E44 4883C428                        add rsp, 5 * 8                                  ; set rsp to override the last args
 30835                                                                                          ; similliar to 4 pops.
 30836                                  
 30837                                  .L_list_of_args_not_empty_yet:
 30838                                  
 30839                                          assert_pair(r8)
 30839 00012E48 41803821            <1>  cmp byte [%1], %2
 30839 00012E4C 0F85EF110000        <1>  jne L_error_incorrect_type
 30840 00012E52 4D8B4801                        mov r9, qword SOB_PAIR_CAR(r8)                  ; r9 <- car(list)
 30841 00012E56 4151                            push r9                                         ; * push arg *
 30842                                          
 30843 00012E58 4983C301                        add r11, 1                                      ; args_counter ++
 30844                                  
 30845 00012E5C 4D8B5009                        mov r10, qword SOB_PAIR_CDR(r8)                 
 30846 00012E60 4D89D0                          mov r8, qword r10                               ; r8 <- cdr(list)
 30847                                   
 30848 00012E63 41803801                        cmp byte [r8], T_nil                            ; rest of the list is empty?
 30849 00012E67 75DF                            jne .L_list_of_args_not_empty_yet               
 30850                                  
 30851                                  .L_list_of_args_totally_pushed:
 30852                                  
 30853 00012E69 4153                            push r11                                        ; * push args_counter *
 30854                                  
 30855 00012E6B 4D8B6C2401                      mov r13, SOB_CLOSURE_ENV(r12)                   ; r13 <- proc.env
 30856 00012E70 4155                            push r13                                        ; * push proc env *
 30857                                  
 30858 00012E72 4156                            push r14                                        ; * push return address *
 30859                                  
 30860                                  
 30861                                  .L_flip_args_order:
 30862 00012E74 4D89D8                          mov r8, r11  
 30863 00012E77 4983C0FF                        add r8, -1                                      ; limit                              
 30864 00012E7B 41BA00000000                    mov r10, qword 0
 30865                                          
 30866                                  .L_flip_loop:
 30867 00012E81 4983F800                        cmp r8, 0
 30868 00012E85 7426                            je .L_end_of_flip_loop
 30869 00012E87 4E8B7CDC10                      mov r15, qword [rsp + (2 + r11) * 8]                    ; r15 <- top
 30870 00012E8C 4E8B74D418                      mov r14, qword [rsp + (3 + r10) * 8]                    ;  r14 <- down
 30871 00012E91 4E8974DC10                      mov [rsp + (2 + r11) * 8], qword r14                    ; swap
 30872 00012E96 4E897CD418                      mov [rsp + (3 + r10) * 8], qword r15                    
 30873                                  
 30874 00012E9B 4983C201                        add r10, 1
 30875 00012E9F 4983C3FF                        add r11, -1
 30876                                  
 30877 00012EA3 4983C0FE                        add r8, -2                                      ; arg_left_to_swap -= 2
 30878                                  
 30879 00012EA7 4983F800                        cmp r8, 0
 30880 00012EAB 7FD4                            jg .L_flip_loop
 30881                                  
 30882                                  .L_end_of_flip_loop:
 30883                                  .L_all_args_are_flipped:
 30884                                  
 30885 00012EAD 4D8B6C2409                      mov r13, SOB_CLOSURE_CODE(r12)
 30886 00012EB2 41FFE5                          jmp r13
 30887                                  
 30888                                  	
 30889                                  L_code_ptr_is_null:
 30890                                          ENTER
 30890 00012EB5 C8000000            <1>  enter 0, 0
 30890 00012EB9 4883E4F0            <1>  and rsp, ~15
 30891 00012EBD 48837D1801                      cmp COUNT, 1
 30892 00012EC2 0F85A5100000                    jne L_error_arg_count_1
 30893 00012EC8 488B4520                        mov rax, PARAM(0)
 30894 00012ECC 803801                          cmp byte [rax], T_nil
 30895 00012ECF 750C                            jne .L_false
 30896 00012ED1 48B8-                           mov rax, sob_boolean_true
 30896 00012ED3 [0300000000000000] 
 30897 00012EDB EB0A                            jmp .L_end
 30898                                  .L_false:
 30899 00012EDD 48B8-                           mov rax, sob_boolean_false
 30899 00012EDF [0200000000000000] 
 30900                                  .L_end:
 30901                                          LEAVE
 30901 00012EE7 C9                  <1>  leave
 30902 00012EE8 C21800                          ret AND_KILL_FRAME(1)
 30903                                  
 30904                                  L_code_ptr_is_pair:
 30905                                          ENTER
 30905 00012EEB C8000000            <1>  enter 0, 0
 30905 00012EEF 4883E4F0            <1>  and rsp, ~15
 30906 00012EF3 48837D1801                      cmp COUNT, 1
 30907 00012EF8 0F856F100000                    jne L_error_arg_count_1
 30908 00012EFE 488B4520                        mov rax, PARAM(0)
 30909 00012F02 803821                          cmp byte [rax], T_pair
 30910 00012F05 750C                            jne .L_false
 30911 00012F07 48B8-                           mov rax, sob_boolean_true
 30911 00012F09 [0300000000000000] 
 30912 00012F11 EB0A                            jmp .L_end
 30913                                  .L_false:
 30914 00012F13 48B8-                           mov rax, sob_boolean_false
 30914 00012F15 [0200000000000000] 
 30915                                  .L_end:
 30916                                          LEAVE
 30916 00012F1D C9                  <1>  leave
 30917 00012F1E C21800                          ret AND_KILL_FRAME(1)
 30918                                          
 30919                                  L_code_ptr_is_void:
 30920                                          ENTER
 30920 00012F21 C8000000            <1>  enter 0, 0
 30920 00012F25 4883E4F0            <1>  and rsp, ~15
 30921 00012F29 48837D1801                      cmp COUNT, 1
 30922 00012F2E 0F8539100000                    jne L_error_arg_count_1
 30923 00012F34 488B4520                        mov rax, PARAM(0)
 30924 00012F38 803800                          cmp byte [rax], T_void
 30925 00012F3B 750C                            jne .L_false
 30926 00012F3D 48B8-                           mov rax, sob_boolean_true
 30926 00012F3F [0300000000000000] 
 30927 00012F47 EB0A                            jmp .L_end
 30928                                  .L_false:
 30929 00012F49 48B8-                           mov rax, sob_boolean_false
 30929 00012F4B [0200000000000000] 
 30930                                  .L_end:
 30931                                          LEAVE
 30931 00012F53 C9                  <1>  leave
 30932 00012F54 C21800                          ret AND_KILL_FRAME(1)
 30933                                  
 30934                                  L_code_ptr_is_char:
 30935                                          ENTER
 30935 00012F57 C8000000            <1>  enter 0, 0
 30935 00012F5B 4883E4F0            <1>  and rsp, ~15
 30936 00012F5F 48837D1801                      cmp COUNT, 1
 30937 00012F64 0F8503100000                    jne L_error_arg_count_1
 30938 00012F6A 488B4520                        mov rax, PARAM(0)
 30939 00012F6E 803802                          cmp byte [rax], T_char
 30940 00012F71 750C                            jne .L_false
 30941 00012F73 48B8-                           mov rax, sob_boolean_true
 30941 00012F75 [0300000000000000] 
 30942 00012F7D EB0A                            jmp .L_end
 30943                                  .L_false:
 30944 00012F7F 48B8-                           mov rax, sob_boolean_false
 30944 00012F81 [0200000000000000] 
 30945                                  .L_end:
 30946                                          LEAVE
 30946 00012F89 C9                  <1>  leave
 30947 00012F8A C21800                          ret AND_KILL_FRAME(1)
 30948                                  
 30949                                  L_code_ptr_is_string:
 30950                                          ENTER
 30950 00012F8D C8000000            <1>  enter 0, 0
 30950 00012F91 4883E4F0            <1>  and rsp, ~15
 30951 00012F95 48837D1801                      cmp COUNT, 1
 30952 00012F9A 0F85CD0F0000                    jne L_error_arg_count_1
 30953 00012FA0 488B4520                        mov rax, PARAM(0)
 30954 00012FA4 803803                          cmp byte [rax], T_string
 30955 00012FA7 750C                            jne .L_false
 30956 00012FA9 48B8-                           mov rax, sob_boolean_true
 30956 00012FAB [0300000000000000] 
 30957 00012FB3 EB0A                            jmp .L_end
 30958                                  .L_false:
 30959 00012FB5 48B8-                           mov rax, sob_boolean_false
 30959 00012FB7 [0200000000000000] 
 30960                                  .L_end:
 30961                                          LEAVE
 30961 00012FBF C9                  <1>  leave
 30962 00012FC0 C21800                          ret AND_KILL_FRAME(1)
 30963                                  
 30964                                  L_code_ptr_is_symbol:
 30965                                          ENTER
 30965 00012FC3 C8000000            <1>  enter 0, 0
 30965 00012FC7 4883E4F0            <1>  and rsp, ~15
 30966 00012FCB 48837D1801                      cmp COUNT, 1
 30967 00012FD0 0F85970F0000                    jne L_error_arg_count_1
 30968 00012FD6 488B4520                        mov rax, PARAM(0)
 30969 00012FDA 803804                          cmp byte [rax], T_symbol
 30970 00012FDD 750C                            jne .L_false
 30971 00012FDF 48B8-                           mov rax, sob_boolean_true
 30971 00012FE1 [0300000000000000] 
 30972 00012FE9 EB0A                            jmp .L_end
 30973                                  .L_false:
 30974 00012FEB 48B8-                           mov rax, sob_boolean_false
 30974 00012FED [0200000000000000] 
 30975                                  .L_end:
 30976                                          LEAVE
 30976 00012FF5 C9                  <1>  leave
 30977 00012FF6 C21800                          ret AND_KILL_FRAME(1)
 30978                                  
 30979                                  L_code_ptr_is_vector:
 30980                                          ENTER
 30980 00012FF9 C8000000            <1>  enter 0, 0
 30980 00012FFD 4883E4F0            <1>  and rsp, ~15
 30981 00013001 48837D1801                      cmp COUNT, 1
 30982 00013006 0F85610F0000                    jne L_error_arg_count_1
 30983 0001300C 488B4520                        mov rax, PARAM(0)
 30984 00013010 803822                          cmp byte [rax], T_vector
 30985 00013013 750C                            jne .L_false
 30986 00013015 48B8-                           mov rax, sob_boolean_true
 30986 00013017 [0300000000000000] 
 30987 0001301F EB0A                            jmp .L_end
 30988                                  .L_false:
 30989 00013021 48B8-                           mov rax, sob_boolean_false
 30989 00013023 [0200000000000000] 
 30990                                  .L_end:
 30991                                          LEAVE
 30991 0001302B C9                  <1>  leave
 30992 0001302C C21800                          ret AND_KILL_FRAME(1)
 30993                                  
 30994                                  L_code_ptr_is_closure:
 30995                                          ENTER
 30995 0001302F C8000000            <1>  enter 0, 0
 30995 00013033 4883E4F0            <1>  and rsp, ~15
 30996 00013037 48837D1801                      cmp COUNT, 1
 30997 0001303C 0F852B0F0000                    jne L_error_arg_count_1
 30998 00013042 488B4520                        mov rax, PARAM(0)
 30999 00013046 803805                          cmp byte [rax], T_closure
 31000 00013049 750C                            jne .L_false
 31001 0001304B 48B8-                           mov rax, sob_boolean_true
 31001 0001304D [0300000000000000] 
 31002 00013055 EB0A                            jmp .L_end
 31003                                  .L_false:
 31004 00013057 48B8-                           mov rax, sob_boolean_false
 31004 00013059 [0200000000000000] 
 31005                                  .L_end:
 31006                                          LEAVE
 31006 00013061 C9                  <1>  leave
 31007 00013062 C21800                          ret AND_KILL_FRAME(1)
 31008                                  
 31009                                  L_code_ptr_is_real:
 31010                                          ENTER
 31010 00013065 C8000000            <1>  enter 0, 0
 31010 00013069 4883E4F0            <1>  and rsp, ~15
 31011 0001306D 48837D1801                      cmp COUNT, 1
 31012 00013072 0F85F50E0000                    jne L_error_arg_count_1
 31013 00013078 488B4520                        mov rax, PARAM(0)
 31014 0001307C 803812                          cmp byte [rax], T_real
 31015 0001307F 750C                            jne .L_false
 31016 00013081 48B8-                           mov rax, sob_boolean_true
 31016 00013083 [0300000000000000] 
 31017 0001308B EB0A                            jmp .L_end
 31018                                  .L_false:
 31019 0001308D 48B8-                           mov rax, sob_boolean_false
 31019 0001308F [0200000000000000] 
 31020                                  .L_end:
 31021                                          LEAVE
 31021 00013097 C9                  <1>  leave
 31022 00013098 C21800                          ret AND_KILL_FRAME(1)
 31023                                  
 31024                                  L_code_ptr_is_rational:
 31025                                          ENTER
 31025 0001309B C8000000            <1>  enter 0, 0
 31025 0001309F 4883E4F0            <1>  and rsp, ~15
 31026 000130A3 48837D1801                      cmp COUNT, 1
 31027 000130A8 0F85BF0E0000                    jne L_error_arg_count_1
 31028 000130AE 488B4520                        mov rax, PARAM(0)
 31029 000130B2 803811                          cmp byte [rax], T_rational
 31030 000130B5 750C                            jne .L_false
 31031 000130B7 48B8-                           mov rax, sob_boolean_true
 31031 000130B9 [0300000000000000] 
 31032 000130C1 EB0A                            jmp .L_end
 31033                                  .L_false:
 31034 000130C3 48B8-                           mov rax, sob_boolean_false
 31034 000130C5 [0200000000000000] 
 31035                                  .L_end:
 31036                                          LEAVE
 31036 000130CD C9                  <1>  leave
 31037 000130CE C21800                          ret AND_KILL_FRAME(1)
 31038                                  
 31039                                  L_code_ptr_is_boolean:
 31040                                          ENTER
 31040 000130D1 C8000000            <1>  enter 0, 0
 31040 000130D5 4883E4F0            <1>  and rsp, ~15
 31041 000130D9 48837D1801                      cmp COUNT, 1
 31042 000130DE 0F85890E0000                    jne L_error_arg_count_1
 31043 000130E4 488B4520                        mov rax, PARAM(0)
 31044 000130E8 8A18                            mov bl, byte [rax]
 31045 000130EA 80E308                          and bl, T_boolean
 31046 000130ED 740C                            je .L_false
 31047 000130EF 48B8-                           mov rax, sob_boolean_true
 31047 000130F1 [0300000000000000] 
 31048 000130F9 EB0A                            jmp .L_end
 31049                                  .L_false:
 31050 000130FB 48B8-                           mov rax, sob_boolean_false
 31050 000130FD [0200000000000000] 
 31051                                  .L_end:
 31052                                          LEAVE
 31052 00013105 C9                  <1>  leave
 31053 00013106 C21800                          ret AND_KILL_FRAME(1)
 31054                                          
 31055                                  L_code_ptr_is_number:
 31056                                          ENTER
 31056 00013109 C8000000            <1>  enter 0, 0
 31056 0001310D 4883E4F0            <1>  and rsp, ~15
 31057 00013111 48837D1801                      cmp COUNT, 1
 31058 00013116 0F85510E0000                    jne L_error_arg_count_1
 31059 0001311C 488B4520                        mov rax, PARAM(0)
 31060 00013120 8A18                            mov bl, byte [rax]
 31061 00013122 80E310                          and bl, T_number
 31062 00013125 740C                            je .L_false
 31063 00013127 48B8-                           mov rax, sob_boolean_true
 31063 00013129 [0300000000000000] 
 31064 00013131 EB0A                            jmp .L_end
 31065                                  .L_false:
 31066 00013133 48B8-                           mov rax, sob_boolean_false
 31066 00013135 [0200000000000000] 
 31067                                  .L_end:
 31068                                          LEAVE
 31068 0001313D C9                  <1>  leave
 31069 0001313E C21800                          ret AND_KILL_FRAME(1)
 31070                                          
 31071                                  L_code_ptr_is_collection:
 31072                                          ENTER
 31072 00013141 C8000000            <1>  enter 0, 0
 31072 00013145 4883E4F0            <1>  and rsp, ~15
 31073 00013149 48837D1801                      cmp COUNT, 1
 31074 0001314E 0F85190E0000                    jne L_error_arg_count_1
 31075 00013154 488B4520                        mov rax, PARAM(0)
 31076 00013158 8A18                            mov bl, byte [rax]
 31077 0001315A 80E320                          and bl, T_collection
 31078 0001315D 740C                            je .L_false
 31079 0001315F 48B8-                           mov rax, sob_boolean_true
 31079 00013161 [0300000000000000] 
 31080 00013169 EB0A                            jmp .L_end
 31081                                  .L_false:
 31082 0001316B 48B8-                           mov rax, sob_boolean_false
 31082 0001316D [0200000000000000] 
 31083                                  .L_end:
 31084                                          LEAVE
 31084 00013175 C9                  <1>  leave
 31085 00013176 C21800                          ret AND_KILL_FRAME(1)
 31086                                  
 31087                                  L_code_ptr_cons:
 31088                                          ENTER
 31088 00013179 C8000000            <1>  enter 0, 0
 31088 0001317D 4883E4F0            <1>  and rsp, ~15
 31089 00013181 48837D1802                      cmp COUNT, 2
 31090 00013186 0F85160E0000                    jne L_error_arg_count_2
 31091 0001318C BF11000000                      mov rdi, (1 + 8 + 8)
 31092 00013191 E8B1F6FFFF                      call malloc
 31093 00013196 C60021                          mov byte [rax], T_pair
 31094 00013199 488B5D20                        mov rbx, PARAM(0)
 31095 0001319D 48895801                        mov SOB_PAIR_CAR(rax), rbx
 31096 000131A1 488B5D28                        mov rbx, PARAM(1)
 31097 000131A5 48895809                        mov SOB_PAIR_CDR(rax), rbx
 31098                                          LEAVE
 31098 000131A9 C9                  <1>  leave
 31099 000131AA C22000                          ret AND_KILL_FRAME(2)
 31100                                  
 31101                                  L_code_ptr_display_sexpr:
 31102                                          ENTER
 31102 000131AD C8000000            <1>  enter 0, 0
 31102 000131B1 4883E4F0            <1>  and rsp, ~15
 31103 000131B5 48837D1801                      cmp COUNT, 1
 31104 000131BA 0F85AD0D0000                    jne L_error_arg_count_1
 31105 000131C0 488B7D20                        mov rdi, PARAM(0)
 31106 000131C4 E899F6FFFF                      call print_sexpr
 31107 000131C9 48B8-                           mov rax, sob_void
 31107 000131CB [0000000000000000] 
 31108                                          LEAVE
 31108 000131D3 C9                  <1>  leave
 31109 000131D4 C21800                          ret AND_KILL_FRAME(1)
 31110                                  
 31111                                  L_code_ptr_write_char:
 31112                                          ENTER
 31112 000131D7 C8000000            <1>  enter 0, 0
 31112 000131DB 4883E4F0            <1>  and rsp, ~15
 31113 000131DF 48837D1801                      cmp COUNT, 1
 31114 000131E4 0F85830D0000                    jne L_error_arg_count_1
 31115 000131EA 488B4520                        mov rax, PARAM(0)
 31116                                          assert_char(rax)
 31116 000131EE 803802              <1>  cmp byte [%1], %2
 31116 000131F1 0F854A0E0000        <1>  jne L_error_incorrect_type
 31117 000131F7 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 31118 000131FA 4825FF000000                    and rax, 255
 31119 00013200 48BF-                           mov rdi, fmt_char
 31119 00013202 [A704000000000000] 
 31120 0001320A 4889C6                          mov rsi, rax
 31121 0001320D B800000000                      mov rax, 0
 31122                                  	ENTER
 31122 00013212 C8000000            <1>  enter 0, 0
 31122 00013216 4883E4F0            <1>  and rsp, ~15
 31123 0001321A E8(00000000)                    call printf
 31124                                  	LEAVE
 31124 0001321F C9                  <1>  leave
 31125 00013220 48B8-                           mov rax, sob_void
 31125 00013222 [0000000000000000] 
 31126                                          LEAVE
 31126 0001322A C9                  <1>  leave
 31127 0001322B C21800                          ret AND_KILL_FRAME(1)
 31128                                  
 31129                                  L_code_ptr_car:
 31130                                          ENTER
 31130 0001322E C8000000            <1>  enter 0, 0
 31130 00013232 4883E4F0            <1>  and rsp, ~15
 31131 00013236 48837D1801                      cmp COUNT, 1
 31132 0001323B 0F852C0D0000                    jne L_error_arg_count_1
 31133 00013241 488B4520                        mov rax, PARAM(0)
 31134                                          assert_pair(rax)
 31134 00013245 803821              <1>  cmp byte [%1], %2
 31134 00013248 0F85F30D0000        <1>  jne L_error_incorrect_type
 31135 0001324E 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 31136                                          LEAVE
 31136 00013252 C9                  <1>  leave
 31137 00013253 C21800                          ret AND_KILL_FRAME(1)
 31138                                          
 31139                                  L_code_ptr_cdr:
 31140                                          ENTER
 31140 00013256 C8000000            <1>  enter 0, 0
 31140 0001325A 4883E4F0            <1>  and rsp, ~15
 31141 0001325E 48837D1801                      cmp COUNT, 1
 31142 00013263 0F85040D0000                    jne L_error_arg_count_1
 31143 00013269 488B4520                        mov rax, PARAM(0)
 31144                                          assert_pair(rax)
 31144 0001326D 803821              <1>  cmp byte [%1], %2
 31144 00013270 0F85CB0D0000        <1>  jne L_error_incorrect_type
 31145 00013276 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 31146                                          LEAVE
 31146 0001327A C9                  <1>  leave
 31147 0001327B C21800                          ret AND_KILL_FRAME(1)
 31148                                          
 31149                                  L_code_ptr_string_length:
 31150                                          ENTER
 31150 0001327E C8000000            <1>  enter 0, 0
 31150 00013282 4883E4F0            <1>  and rsp, ~15
 31151 00013286 48837D1801                      cmp COUNT, 1
 31152 0001328B 0F85DC0C0000                    jne L_error_arg_count_1
 31153 00013291 488B4520                        mov rax, PARAM(0)
 31154                                          assert_string(rax)
 31154 00013295 803803              <1>  cmp byte [%1], %2
 31154 00013298 0F85A30D0000        <1>  jne L_error_incorrect_type
 31155 0001329E 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 31156 000132A2 E83A0C0000                      call make_integer
 31157                                          LEAVE
 31157 000132A7 C9                  <1>  leave
 31158 000132A8 C21800                          ret AND_KILL_FRAME(1)
 31159                                  
 31160                                  L_code_ptr_vector_length:
 31161                                          ENTER
 31161 000132AB C8000000            <1>  enter 0, 0
 31161 000132AF 4883E4F0            <1>  and rsp, ~15
 31162 000132B3 48837D1801                      cmp COUNT, 1
 31163 000132B8 0F85AF0C0000                    jne L_error_arg_count_1
 31164 000132BE 488B4520                        mov rax, PARAM(0)
 31165                                          assert_vector(rax)
 31165 000132C2 803822              <1>  cmp byte [%1], %2
 31165 000132C5 0F85760D0000        <1>  jne L_error_incorrect_type
 31166 000132CB 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 31167 000132CF E80D0C0000                      call make_integer
 31168                                          LEAVE
 31168 000132D4 C9                  <1>  leave
 31169 000132D5 C21800                          ret AND_KILL_FRAME(1)
 31170                                  
 31171                                  L_code_ptr_real_to_integer:
 31172                                          ENTER
 31172 000132D8 C8000000            <1>  enter 0, 0
 31172 000132DC 4883E4F0            <1>  and rsp, ~15
 31173 000132E0 48837D1801                      cmp COUNT, 1
 31174 000132E5 0F85820C0000                    jne L_error_arg_count_1
 31175 000132EB 488B5D20                        mov rbx, PARAM(0)
 31176                                          assert_real(rbx)
 31176 000132EF 803B12              <1>  cmp byte [%1], %2
 31176 000132F2 0F85490D0000        <1>  jne L_error_incorrect_type
 31177 000132F8 F20F104301                      movsd xmm0, qword [rbx + 1]
 31178 000132FD F2480F2CF8                      cvttsd2si rdi, xmm0
 31179 00013302 E8DA0B0000                      call make_integer
 31180                                          LEAVE
 31180 00013307 C9                  <1>  leave
 31181 00013308 C21800                          ret AND_KILL_FRAME(1)
 31182                                  
 31183                                  L_code_ptr_exit:
 31184                                          ENTER
 31184 0001330B C8000000            <1>  enter 0, 0
 31184 0001330F 4883E4F0            <1>  and rsp, ~15
 31185 00013313 48837D1800                      cmp COUNT, 0
 31186 00013318 0F851A0C0000                    jne L_error_arg_count_0
 31187 0001331E B800000000                      mov rax, 0
 31188 00013323 E8(00000000)                    call exit
 31189                                  
 31190                                  L_code_ptr_integer_to_real:
 31191                                          ENTER
 31191 00013328 C8000000            <1>  enter 0, 0
 31191 0001332C 4883E4F0            <1>  and rsp, ~15
 31192 00013330 48837D1801                      cmp COUNT, 1
 31193 00013335 0F85320C0000                    jne L_error_arg_count_1
 31194 0001333B 488B4520                        mov rax, PARAM(0)
 31195                                          assert_integer(rax)
 31195                              <1>  assert_rational(%1)
 31195 0001333F 803811              <2>  cmp byte [%1], %2
 31195 00013342 0F85F90C0000        <2>  jne L_error_incorrect_type
 31195 00013348 4883780901          <1>  cmp qword [%1 + 1 + 8], 1
 31195 0001334D 0F85EE0C0000        <1>  jne L_error_incorrect_type
 31196 00013353 FF7001                          push qword [rax + 1]
 31197 00013356 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 31198 0001335C E8640B0000                      call make_real
 31199                                          LEAVE
 31199 00013361 C9                  <1>  leave
 31200 00013362 C21800                          ret AND_KILL_FRAME(1)
 31201                                  
 31202                                  L_code_ptr_rational_to_real:
 31203                                          ENTER
 31203 00013365 C8000000            <1>  enter 0, 0
 31203 00013369 4883E4F0            <1>  and rsp, ~15
 31204 0001336D 48837D1801                      cmp COUNT, 1
 31205 00013372 0F85F50B0000                    jne L_error_arg_count_1
 31206 00013378 488B4520                        mov rax, PARAM(0)
 31207                                          assert_rational(rax)
 31207 0001337C 803811              <1>  cmp byte [%1], %2
 31207 0001337F 0F85BC0C0000        <1>  jne L_error_incorrect_type
 31208 00013385 FF7001                          push qword [rax + 1]
 31209 00013388 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 31210 0001338E FF7009                          push qword [rax + 1 + 8]
 31211 00013391 F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 31212 00013397 F20F5EC1                        divsd xmm0, xmm1
 31213 0001339B E8250B0000                      call make_real
 31214                                          LEAVE
 31214 000133A0 C9                  <1>  leave
 31215 000133A1 C21800                          ret AND_KILL_FRAME(1)
 31216                                  
 31217                                  L_code_ptr_char_to_integer:
 31218                                          ENTER
 31218 000133A4 C8000000            <1>  enter 0, 0
 31218 000133A8 4883E4F0            <1>  and rsp, ~15
 31219 000133AC 48837D1801                      cmp COUNT, 1
 31220 000133B1 0F85B60B0000                    jne L_error_arg_count_1
 31221 000133B7 488B4520                        mov rax, PARAM(0)
 31222                                          assert_char(rax)
 31222 000133BB 803802              <1>  cmp byte [%1], %2
 31222 000133BE 0F857D0C0000        <1>  jne L_error_incorrect_type
 31223 000133C4 8A4001                          mov al, byte [rax + 1]
 31224 000133C7 4825FF000000                    and rax, 255
 31225 000133CD 4889C7                          mov rdi, rax
 31226 000133D0 E80C0B0000                      call make_integer
 31227                                          LEAVE
 31227 000133D5 C9                  <1>  leave
 31228 000133D6 C21800                          ret AND_KILL_FRAME(1)
 31229                                  
 31230                                  L_code_ptr_integer_to_char:
 31231                                          ENTER
 31231 000133D9 C8000000            <1>  enter 0, 0
 31231 000133DD 4883E4F0            <1>  and rsp, ~15
 31232 000133E1 48837D1801                      cmp COUNT, 1
 31233 000133E6 0F85810B0000                    jne L_error_arg_count_1
 31234 000133EC 488B4520                        mov rax, PARAM(0)
 31235                                          assert_integer(rax)
 31235                              <1>  assert_rational(%1)
 31235 000133F0 803811              <2>  cmp byte [%1], %2
 31235 000133F3 0F85480C0000        <2>  jne L_error_incorrect_type
 31235 000133F9 4883780901          <1>  cmp qword [%1 + 1 + 8], 1
 31235 000133FE 0F853D0C0000        <1>  jne L_error_incorrect_type
 31236 00013404 488B5801                        mov rbx, qword [rax + 1]
 31237 00013408 4883FB00                        cmp rbx, 0
 31238 0001340C 0F8EF50A0000                    jle L_error_integer_range
 31239 00013412 4881FB00010000                  cmp rbx, 256
 31240 00013419 0F8DE80A0000                    jge L_error_integer_range
 31241 0001341F BF02000000                      mov rdi, (1 + 1)
 31242 00013424 E81EF4FFFF                      call malloc
 31243 00013429 C60002                          mov byte [rax], T_char
 31244 0001342C 885801                          mov byte [rax + 1], bl
 31245                                          LEAVE
 31245 0001342F C9                  <1>  leave
 31246 00013430 C21800                          ret AND_KILL_FRAME(1)
 31247                                  
 31248                                  L_code_ptr_trng:
 31249                                          ENTER
 31249 00013433 C8000000            <1>  enter 0, 0
 31249 00013437 4883E4F0            <1>  and rsp, ~15
 31250 0001343B 48837D1800                      cmp COUNT, 0
 31251 00013440 0F85F20A0000                    jne L_error_arg_count_0
 31252 00013446 480FC7F7                        rdrand rdi
 31253 0001344A 48D1EF                          shr rdi, 1
 31254 0001344D E88F0A0000                      call make_integer
 31255                                          LEAVE
 31255 00013452 C9                  <1>  leave
 31256 00013453 C21000                          ret AND_KILL_FRAME(0)
 31257                                  
 31258                                  L_code_ptr_is_zero:
 31259                                          ENTER
 31259 00013456 C8000000            <1>  enter 0, 0
 31259 0001345A 4883E4F0            <1>  and rsp, ~15
 31260 0001345E 48837D1801                      cmp COUNT, 1
 31261 00013463 0F85040B0000                    jne L_error_arg_count_1
 31262 00013469 488B4520                        mov rax, PARAM(0)
 31263 0001346D 803811                          cmp byte [rax], T_rational
 31264 00013470 740A                            je .L_rational
 31265 00013472 803812                          cmp byte [rax], T_real
 31266 00013475 740E                            je .L_real
 31267 00013477 E9C50B0000                      jmp L_error_incorrect_type
 31268                                  .L_rational:
 31269 0001347C 4883780100                      cmp qword [rax + 1], 0
 31270 00013481 7420                            je .L_zero
 31271 00013483 EB12                            jmp .L_not_zero
 31272                                  .L_real:
 31273 00013485 660FEFC0                        pxor xmm0, xmm0
 31274 00013489 FF7001                          push qword [rax + 1]
 31275 0001348C F20F100C24                      movsd xmm1, qword [rsp]
 31276 00013491 660F2EC1                        ucomisd xmm0, xmm1
 31277 00013495 740C                            je .L_zero
 31278                                  .L_not_zero:
 31279 00013497 48B8-                           mov rax, sob_boolean_false
 31279 00013499 [0200000000000000] 
 31280 000134A1 EB0A                            jmp .L_end
 31281                                  .L_zero:
 31282 000134A3 48B8-                           mov rax, sob_boolean_true
 31282 000134A5 [0300000000000000] 
 31283                                  .L_end:
 31284                                          LEAVE
 31284 000134AD C9                  <1>  leave
 31285 000134AE C21800                          ret AND_KILL_FRAME(1)
 31286                                  
 31287                                  L_code_ptr_is_integer:
 31288                                          ENTER
 31288 000134B1 C8000000            <1>  enter 0, 0
 31288 000134B5 4883E4F0            <1>  and rsp, ~15
 31289 000134B9 48837D1801                      cmp COUNT, 1
 31290 000134BE 0F85A90A0000                    jne L_error_arg_count_1
 31291 000134C4 488B4520                        mov rax, PARAM(0)
 31292 000134C8 803811                          cmp byte [rax], T_rational
 31293 000134CB 7513                            jne .L_false
 31294 000134CD 4883780901                      cmp qword [rax + 1 + 8], 1
 31295 000134D2 750C                            jne .L_false
 31296 000134D4 48B8-                           mov rax, sob_boolean_true
 31296 000134D6 [0300000000000000] 
 31297 000134DE EB0A                            jmp .L_exit
 31298                                  .L_false:
 31299 000134E0 48B8-                           mov rax, sob_boolean_false
 31299 000134E2 [0200000000000000] 
 31300                                  .L_exit:
 31301                                          LEAVE
 31301 000134EA C9                  <1>  leave
 31302 000134EB C21800                          ret AND_KILL_FRAME(1)
 31303                                  
 31304                                  L_code_ptr_raw_bin_add_rr:
 31305                                          ENTER
 31305 000134EE C8000000            <1>  enter 0, 0
 31305 000134F2 4883E4F0            <1>  and rsp, ~15
 31306 000134F6 48837D1802                      cmp COUNT, 2
 31307 000134FB 0F85A10A0000                    jne L_error_arg_count_2
 31308 00013501 488B5D20                        mov rbx, PARAM(0)
 31309                                          assert_real(rbx)
 31309 00013505 803B12              <1>  cmp byte [%1], %2
 31309 00013508 0F85330B0000        <1>  jne L_error_incorrect_type
 31310 0001350E 488B4D28                        mov rcx, PARAM(1)
 31311                                          assert_real(rcx)
 31311 00013512 803912              <1>  cmp byte [%1], %2
 31311 00013515 0F85260B0000        <1>  jne L_error_incorrect_type
 31312 0001351B F20F104301                      movsd xmm0, qword [rbx + 1]
 31313 00013520 F20F104901                      movsd xmm1, qword [rcx + 1]
 31314 00013525 F20F58C1                        addsd xmm0, xmm1
 31315 00013529 E897090000                      call make_real
 31316                                          LEAVE
 31316 0001352E C9                  <1>  leave
 31317 0001352F C22000                          ret AND_KILL_FRAME(2)
 31318                                  
 31319                                  L_code_ptr_raw_bin_sub_rr:
 31320                                          ENTER
 31320 00013532 C8000000            <1>  enter 0, 0
 31320 00013536 4883E4F0            <1>  and rsp, ~15
 31321 0001353A 48837D1802                      cmp COUNT, 2
 31322 0001353F 0F855D0A0000                    jne L_error_arg_count_2
 31323 00013545 488B5D20                        mov rbx, PARAM(0)
 31324                                          assert_real(rbx)
 31324 00013549 803B12              <1>  cmp byte [%1], %2
 31324 0001354C 0F85EF0A0000        <1>  jne L_error_incorrect_type
 31325 00013552 488B4D28                        mov rcx, PARAM(1)
 31326                                          assert_real(rcx)
 31326 00013556 803912              <1>  cmp byte [%1], %2
 31326 00013559 0F85E20A0000        <1>  jne L_error_incorrect_type
 31327 0001355F F20F104301                      movsd xmm0, qword [rbx + 1]
 31328 00013564 F20F104901                      movsd xmm1, qword [rcx + 1]
 31329 00013569 F20F5CC1                        subsd xmm0, xmm1
 31330 0001356D E853090000                      call make_real
 31331                                          LEAVE
 31331 00013572 C9                  <1>  leave
 31332 00013573 C22000                          ret AND_KILL_FRAME(2)
 31333                                  
 31334                                  L_code_ptr_raw_bin_mul_rr:
 31335                                          ENTER
 31335 00013576 C8000000            <1>  enter 0, 0
 31335 0001357A 4883E4F0            <1>  and rsp, ~15
 31336 0001357E 48837D1802                      cmp COUNT, 2
 31337 00013583 0F85190A0000                    jne L_error_arg_count_2
 31338 00013589 488B5D20                        mov rbx, PARAM(0)
 31339                                          assert_real(rbx)
 31339 0001358D 803B12              <1>  cmp byte [%1], %2
 31339 00013590 0F85AB0A0000        <1>  jne L_error_incorrect_type
 31340 00013596 488B4D28                        mov rcx, PARAM(1)
 31341                                          assert_real(rcx)
 31341 0001359A 803912              <1>  cmp byte [%1], %2
 31341 0001359D 0F859E0A0000        <1>  jne L_error_incorrect_type
 31342 000135A3 F20F104301                      movsd xmm0, qword [rbx + 1]
 31343 000135A8 F20F104901                      movsd xmm1, qword [rcx + 1]
 31344 000135AD F20F59C1                        mulsd xmm0, xmm1
 31345 000135B1 E80F090000                      call make_real
 31346                                          LEAVE
 31346 000135B6 C9                  <1>  leave
 31347 000135B7 C22000                          ret AND_KILL_FRAME(2)
 31348                                  
 31349                                  L_code_ptr_raw_bin_div_rr:
 31350                                          ENTER
 31350 000135BA C8000000            <1>  enter 0, 0
 31350 000135BE 4883E4F0            <1>  and rsp, ~15
 31351 000135C2 48837D1802                      cmp COUNT, 2
 31352 000135C7 0F85D5090000                    jne L_error_arg_count_2
 31353 000135CD 488B5D20                        mov rbx, PARAM(0)
 31354                                          assert_real(rbx)
 31354 000135D1 803B12              <1>  cmp byte [%1], %2
 31354 000135D4 0F85670A0000        <1>  jne L_error_incorrect_type
 31355 000135DA 488B4D28                        mov rcx, PARAM(1)
 31356                                          assert_real(rcx)
 31356 000135DE 803912              <1>  cmp byte [%1], %2
 31356 000135E1 0F855A0A0000        <1>  jne L_error_incorrect_type
 31357 000135E7 F20F104301                      movsd xmm0, qword [rbx + 1]
 31358 000135EC F20F104901                      movsd xmm1, qword [rcx + 1]
 31359 000135F1 660FEFD2                        pxor xmm2, xmm2
 31360 000135F5 660F2ECA                        ucomisd xmm1, xmm2
 31361 000135F9 0F84730A0000                    je L_error_division_by_zero
 31362 000135FF F20F5EC1                        divsd xmm0, xmm1
 31363 00013603 E8BD080000                      call make_real
 31364                                          LEAVE
 31364 00013608 C9                  <1>  leave
 31365 00013609 C22000                          ret AND_KILL_FRAME(2)
 31366                                  
 31367                                  L_code_ptr_raw_bin_add_qq:
 31368                                          ENTER
 31368 0001360C C8000000            <1>  enter 0, 0
 31368 00013610 4883E4F0            <1>  and rsp, ~15
 31369 00013614 48837D1802                      cmp COUNT, 2
 31370 00013619 0F8583090000                    jne L_error_arg_count_2
 31371 0001361F 4C8B4520                        mov r8, PARAM(0)
 31372                                          assert_rational(r8)
 31372 00013623 41803811            <1>  cmp byte [%1], %2
 31372 00013627 0F85140A0000        <1>  jne L_error_incorrect_type
 31373 0001362D 4C8B4D28                        mov r9, PARAM(1)
 31374                                          assert_rational(r9)
 31374 00013631 41803911            <1>  cmp byte [%1], %2
 31374 00013635 0F85060A0000        <1>  jne L_error_incorrect_type
 31375 0001363B 498B4001                        mov rax, qword [r8 + 1] ; num1
 31376 0001363F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 31377 00013643 4899                            cqo
 31378 00013645 48F7EB                          imul rbx
 31379 00013648 4889C6                          mov rsi, rax
 31380 0001364B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31381 0001364F 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 31382 00013653 4899                            cqo
 31383 00013655 48F7EB                          imul rbx
 31384 00013658 4801C6                          add rsi, rax
 31385 0001365B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31386 0001365F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 31387 00013663 4899                            cqo
 31388 00013665 48F7EB                          imul rbx
 31389 00013668 4889C7                          mov rdi, rax
 31390 0001366B E827010000                      call normalize_rational
 31391                                          LEAVE
 31391 00013670 C9                  <1>  leave
 31392 00013671 C22000                          ret AND_KILL_FRAME(2)
 31393                                  
 31394                                  L_code_ptr_raw_bin_sub_qq:
 31395                                          ENTER
 31395 00013674 C8000000            <1>  enter 0, 0
 31395 00013678 4883E4F0            <1>  and rsp, ~15
 31396 0001367C 48837D1802                      cmp COUNT, 2
 31397 00013681 0F851B090000                    jne L_error_arg_count_2
 31398 00013687 4C8B4520                        mov r8, PARAM(0)
 31399                                          assert_rational(r8)
 31399 0001368B 41803811            <1>  cmp byte [%1], %2
 31399 0001368F 0F85AC090000        <1>  jne L_error_incorrect_type
 31400 00013695 4C8B4D28                        mov r9, PARAM(1)
 31401                                          assert_rational(r9)
 31401 00013699 41803911            <1>  cmp byte [%1], %2
 31401 0001369D 0F859E090000        <1>  jne L_error_incorrect_type
 31402 000136A3 498B4001                        mov rax, qword [r8 + 1] ; num1
 31403 000136A7 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 31404 000136AB 4899                            cqo
 31405 000136AD 48F7EB                          imul rbx
 31406 000136B0 4889C6                          mov rsi, rax
 31407 000136B3 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31408 000136B7 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 31409 000136BB 4899                            cqo
 31410 000136BD 48F7EB                          imul rbx
 31411 000136C0 4829C6                          sub rsi, rax
 31412 000136C3 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31413 000136C7 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 31414 000136CB 4899                            cqo
 31415 000136CD 48F7EB                          imul rbx
 31416 000136D0 4889C7                          mov rdi, rax
 31417 000136D3 E8BF000000                      call normalize_rational
 31418                                          LEAVE
 31418 000136D8 C9                  <1>  leave
 31419 000136D9 C22000                          ret AND_KILL_FRAME(2)
 31420                                  
 31421                                  L_code_ptr_raw_bin_mul_qq:
 31422                                          ENTER
 31422 000136DC C8000000            <1>  enter 0, 0
 31422 000136E0 4883E4F0            <1>  and rsp, ~15
 31423 000136E4 48837D1802                      cmp COUNT, 2
 31424 000136E9 0F85B3080000                    jne L_error_arg_count_2
 31425 000136EF 4C8B4520                        mov r8, PARAM(0)
 31426                                          assert_rational(r8)
 31426 000136F3 41803811            <1>  cmp byte [%1], %2
 31426 000136F7 0F8544090000        <1>  jne L_error_incorrect_type
 31427 000136FD 4C8B4D28                        mov r9, PARAM(1)
 31428                                          assert_rational(r9)
 31428 00013701 41803911            <1>  cmp byte [%1], %2
 31428 00013705 0F8536090000        <1>  jne L_error_incorrect_type
 31429 0001370B 498B4001                        mov rax, qword [r8 + 1] ; num1
 31430 0001370F 498B5901                        mov rbx, qword [r9 + 1] ; num2
 31431 00013713 4899                            cqo
 31432 00013715 48F7EB                          imul rbx
 31433 00013718 4889C6                          mov rsi, rax
 31434 0001371B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31435 0001371F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 31436 00013723 4899                            cqo
 31437 00013725 48F7EB                          imul rbx
 31438 00013728 4889C7                          mov rdi, rax
 31439 0001372B E867000000                      call normalize_rational
 31440                                          LEAVE
 31440 00013730 C9                  <1>  leave
 31441 00013731 C22000                          ret AND_KILL_FRAME(2)
 31442                                          
 31443                                  L_code_ptr_raw_bin_div_qq:
 31444                                          ENTER
 31444 00013734 C8000000            <1>  enter 0, 0
 31444 00013738 4883E4F0            <1>  and rsp, ~15
 31445 0001373C 48837D1802                      cmp COUNT, 2
 31446 00013741 0F855B080000                    jne L_error_arg_count_2
 31447 00013747 4C8B4520                        mov r8, PARAM(0)
 31448                                          assert_rational(r8)
 31448 0001374B 41803811            <1>  cmp byte [%1], %2
 31448 0001374F 0F85EC080000        <1>  jne L_error_incorrect_type
 31449 00013755 4C8B4D28                        mov r9, PARAM(1)
 31450                                          assert_rational(r9)
 31450 00013759 41803911            <1>  cmp byte [%1], %2
 31450 0001375D 0F85DE080000        <1>  jne L_error_incorrect_type
 31451 00013763 4983790100                      cmp qword [r9 + 1], 0
 31452 00013768 0F8404090000                    je L_error_division_by_zero
 31453 0001376E 498B4001                        mov rax, qword [r8 + 1] ; num1
 31454 00013772 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 31455 00013776 4899                            cqo
 31456 00013778 48F7EB                          imul rbx
 31457 0001377B 4889C6                          mov rsi, rax
 31458 0001377E 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31459 00013782 498B5901                        mov rbx, qword [r9 + 1] ; num2
 31460 00013786 4899                            cqo
 31461 00013788 48F7EB                          imul rbx
 31462 0001378B 4889C7                          mov rdi, rax
 31463 0001378E E804000000                      call normalize_rational
 31464                                          LEAVE
 31464 00013793 C9                  <1>  leave
 31465 00013794 C22000                          ret AND_KILL_FRAME(2)
 31466                                          
 31467                                  normalize_rational:
 31468 00013797 56                              push rsi
 31469 00013798 57                              push rdi
 31470 00013799 E839000000                      call gcd
 31471 0001379E 4889C3                          mov rbx, rax
 31472 000137A1 58                              pop rax
 31473 000137A2 4899                            cqo
 31474 000137A4 48F7FB                          idiv rbx
 31475 000137A7 4989C0                          mov r8, rax
 31476 000137AA 58                              pop rax
 31477 000137AB 4899                            cqo
 31478 000137AD 48F7FB                          idiv rbx
 31479 000137B0 4989C1                          mov r9, rax
 31480 000137B3 BF11000000                      mov rdi, (1 + 8 + 8)
 31481 000137B8 E88AF0FFFF                      call malloc
 31482 000137BD C60011                          mov byte [rax], T_rational
 31483 000137C0 4C894801                        mov qword [rax + 1], r9
 31484 000137C4 4C894009                        mov qword [rax + 1 + 8], r8
 31485 000137C8 C3                              ret
 31486                                  
 31487                                  iabs:
 31488 000137C9 4889F8                          mov rax, rdi
 31489 000137CC 4883F800                        cmp rax, 0
 31490 000137D0 7C01                            jl .Lneg
 31491 000137D2 C3                              ret
 31492                                  .Lneg:
 31493 000137D3 48F7D8                          neg rax
 31494 000137D6 C3                              ret
 31495                                  
 31496                                  gcd:
 31497 000137D7 E8EDFFFFFF                      call iabs
 31498 000137DC 4889C3                          mov rbx, rax
 31499 000137DF 4889F7                          mov rdi, rsi
 31500 000137E2 E8E2FFFFFF                      call iabs
 31501 000137E7 4883F800                        cmp rax, 0
 31502 000137EB 7502                            jne .L0
 31503 000137ED 4893                            xchg rax, rbx
 31504                                  .L0:
 31505 000137EF 4883FB00                        cmp rbx, 0
 31506 000137F3 740C                            je .L1
 31507 000137F5 4899                            cqo
 31508 000137F7 48F7F3                          div rbx
 31509 000137FA 4889D0                          mov rax, rdx
 31510 000137FD 4893                            xchg rax, rbx
 31511 000137FF EBEE                            jmp .L0
 31512                                  .L1:
 31513 00013801 C3                              ret
 31514                                  
 31515                                  L_code_ptr_error:
 31516                                          ENTER
 31516 00013802 C8000000            <1>  enter 0, 0
 31516 00013806 4883E4F0            <1>  and rsp, ~15
 31517 0001380A 48837D1802                      cmp COUNT, 2
 31518 0001380F 0F858D070000                    jne L_error_arg_count_2
 31519 00013815 488B7520                        mov rsi, PARAM(0)
 31520                                          assert_symbol(rsi)
 31520 00013819 803E04              <1>  cmp byte [%1], %2
 31520 0001381C 0F851F080000        <1>  jne L_error_incorrect_type
 31521 00013822 488B7528                        mov rsi, PARAM(1)
 31522                                          assert_string(rsi)
 31522 00013826 803E03              <1>  cmp byte [%1], %2
 31522 00013829 0F8512080000        <1>  jne L_error_incorrect_type
 31523 0001382F 48BF-                           mov rdi, fmt_scheme_error_part_1
 31523 00013831 [DF05000000000000] 
 31524 00013839 B800000000                      mov rax, 0
 31525                                  	ENTER
 31525 0001383E C8000000            <1>  enter 0, 0
 31525 00013842 4883E4F0            <1>  and rsp, ~15
 31526 00013846 E8(00000000)                    call printf
 31527                                  	LEAVE
 31527 0001384B C9                  <1>  leave
 31528 0001384C 488B7D20                        mov rdi, PARAM(0)
 31529 00013850 E80DF0FFFF                      call print_sexpr
 31530 00013855 48BF-                           mov rdi, fmt_scheme_error_part_2
 31530 00013857 [F305000000000000] 
 31531 0001385F B800000000                      mov rax, 0
 31532                                  	ENTER
 31532 00013864 C8000000            <1>  enter 0, 0
 31532 00013868 4883E4F0            <1>  and rsp, ~15
 31533 0001386C E8(00000000)                    call printf
 31534                                  	LEAVE
 31534 00013871 C9                  <1>  leave
 31535 00013872 488B4528                        mov rax, PARAM(1)       ; sob_string
 31536 00013876 BE01000000                      mov rsi, 1              ; size = 1 byte
 31537 0001387B 488B5001                        mov rdx, qword [rax + 1] ; length
 31538 0001387F 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 31539 00013883 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 31540 0001388B E8(00000000)                    call fwrite
 31541 00013890 48BF-                           mov rdi, fmt_scheme_error_part_3
 31541 00013892 [3506000000000000] 
 31542 0001389A B800000000                      mov rax, 0
 31543                                  	ENTER
 31543 0001389F C8000000            <1>  enter 0, 0
 31543 000138A3 4883E4F0            <1>  and rsp, ~15
 31544 000138A7 E8(00000000)                    call printf
 31545                                  	LEAVE
 31545 000138AC C9                  <1>  leave
 31546 000138AD 48C7C0F7FFFFFF                  mov rax, -9
 31547 000138B4 E8(00000000)                    call exit
 31548                                  
 31549                                  L_code_ptr_raw_less_than_rr:
 31550                                          ENTER
 31550 000138B9 C8000000            <1>  enter 0, 0
 31550 000138BD 4883E4F0            <1>  and rsp, ~15
 31551 000138C1 48837D1802                      cmp COUNT, 2
 31552 000138C6 0F85D6060000                    jne L_error_arg_count_2
 31553 000138CC 488B7520                        mov rsi, PARAM(0)
 31554                                          assert_real(rsi)
 31554 000138D0 803E12              <1>  cmp byte [%1], %2
 31554 000138D3 0F8568070000        <1>  jne L_error_incorrect_type
 31555 000138D9 488B7D28                        mov rdi, PARAM(1)
 31556                                          assert_real(rdi)
 31556 000138DD 803F12              <1>  cmp byte [%1], %2
 31556 000138E0 0F855B070000        <1>  jne L_error_incorrect_type
 31557 000138E6 F20F104601                      movsd xmm0, qword [rsi + 1]
 31558 000138EB F20F104F01                      movsd xmm1, qword [rdi + 1]
 31559 000138F0 660F2FC1                        comisd xmm0, xmm1
 31560 000138F4 730C                            jae .L_false
 31561 000138F6 48B8-                           mov rax, sob_boolean_true
 31561 000138F8 [0300000000000000] 
 31562 00013900 EB0A                            jmp .L_exit
 31563                                  .L_false:
 31564 00013902 48B8-                           mov rax, sob_boolean_false
 31564 00013904 [0200000000000000] 
 31565                                  .L_exit:
 31566                                          LEAVE
 31566 0001390C C9                  <1>  leave
 31567 0001390D C22000                          ret AND_KILL_FRAME(2)
 31568                                          
 31569                                  L_code_ptr_raw_less_than_qq:
 31570                                          ENTER
 31570 00013910 C8000000            <1>  enter 0, 0
 31570 00013914 4883E4F0            <1>  and rsp, ~15
 31571 00013918 48837D1802                      cmp COUNT, 2
 31572 0001391D 0F857F060000                    jne L_error_arg_count_2
 31573 00013923 488B7520                        mov rsi, PARAM(0)
 31574                                          assert_rational(rsi)
 31574 00013927 803E11              <1>  cmp byte [%1], %2
 31574 0001392A 0F8511070000        <1>  jne L_error_incorrect_type
 31575 00013930 488B7D28                        mov rdi, PARAM(1)
 31576                                          assert_rational(rdi)
 31576 00013934 803F11              <1>  cmp byte [%1], %2
 31576 00013937 0F8504070000        <1>  jne L_error_incorrect_type
 31577 0001393D 488B4601                        mov rax, qword [rsi + 1] ; num1
 31578 00013941 4899                            cqo
 31579 00013943 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31580 00013947 4889C1                          mov rcx, rax
 31581 0001394A 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 31582 0001394E 4899                            cqo
 31583 00013950 48F76F01                        imul qword [rdi + 1]          ; num2
 31584 00013954 4829C1                          sub rcx, rax
 31585 00013957 7D0C                            jge .L_false
 31586 00013959 48B8-                           mov rax, sob_boolean_true
 31586 0001395B [0300000000000000] 
 31587 00013963 EB0A                            jmp .L_exit
 31588                                  .L_false:
 31589 00013965 48B8-                           mov rax, sob_boolean_false
 31589 00013967 [0200000000000000] 
 31590                                  .L_exit:
 31591                                          LEAVE
 31591 0001396F C9                  <1>  leave
 31592 00013970 C22000                          ret AND_KILL_FRAME(2)
 31593                                  
 31594                                  L_code_ptr_raw_equal_rr:
 31595                                          ENTER
 31595 00013973 C8000000            <1>  enter 0, 0
 31595 00013977 4883E4F0            <1>  and rsp, ~15
 31596 0001397B 48837D1802                      cmp COUNT, 2
 31597 00013980 0F851C060000                    jne L_error_arg_count_2
 31598 00013986 488B7520                        mov rsi, PARAM(0)
 31599                                          assert_real(rsi)
 31599 0001398A 803E12              <1>  cmp byte [%1], %2
 31599 0001398D 0F85AE060000        <1>  jne L_error_incorrect_type
 31600 00013993 488B7D28                        mov rdi, PARAM(1)
 31601                                          assert_real(rdi)
 31601 00013997 803F12              <1>  cmp byte [%1], %2
 31601 0001399A 0F85A1060000        <1>  jne L_error_incorrect_type
 31602 000139A0 F20F104601                      movsd xmm0, qword [rsi + 1]
 31603 000139A5 F20F104F01                      movsd xmm1, qword [rdi + 1]
 31604 000139AA 660F2FC1                        comisd xmm0, xmm1
 31605 000139AE 750C                            jne .L_false
 31606 000139B0 48B8-                           mov rax, sob_boolean_true
 31606 000139B2 [0300000000000000] 
 31607 000139BA EB0A                            jmp .L_exit
 31608                                  .L_false:
 31609 000139BC 48B8-                           mov rax, sob_boolean_false
 31609 000139BE [0200000000000000] 
 31610                                  .L_exit:
 31611                                          LEAVE
 31611 000139C6 C9                  <1>  leave
 31612 000139C7 C22000                          ret AND_KILL_FRAME(2)
 31613                                          
 31614                                  L_code_ptr_raw_equal_qq:
 31615                                          ENTER
 31615 000139CA C8000000            <1>  enter 0, 0
 31615 000139CE 4883E4F0            <1>  and rsp, ~15
 31616 000139D2 48837D1802                      cmp COUNT, 2
 31617 000139D7 0F85C5050000                    jne L_error_arg_count_2
 31618 000139DD 488B7520                        mov rsi, PARAM(0)
 31619                                          assert_rational(rsi)
 31619 000139E1 803E11              <1>  cmp byte [%1], %2
 31619 000139E4 0F8557060000        <1>  jne L_error_incorrect_type
 31620 000139EA 488B7D28                        mov rdi, PARAM(1)
 31621                                          assert_rational(rdi)
 31621 000139EE 803F11              <1>  cmp byte [%1], %2
 31621 000139F1 0F854A060000        <1>  jne L_error_incorrect_type
 31622 000139F7 488B4601                        mov rax, qword [rsi + 1] ; num1
 31623 000139FB 4899                            cqo
 31624 000139FD 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31625 00013A01 4889C1                          mov rcx, rax
 31626 00013A04 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 31627 00013A08 4899                            cqo
 31628 00013A0A 48F76F01                        imul qword [rdi + 1]          ; num2
 31629 00013A0E 4829C1                          sub rcx, rax
 31630 00013A11 750C                            jne .L_false
 31631 00013A13 48B8-                           mov rax, sob_boolean_true
 31631 00013A15 [0300000000000000] 
 31632 00013A1D EB0A                            jmp .L_exit
 31633                                  .L_false:
 31634 00013A1F 48B8-                           mov rax, sob_boolean_false
 31634 00013A21 [0200000000000000] 
 31635                                  .L_exit:
 31636                                          LEAVE
 31636 00013A29 C9                  <1>  leave
 31637 00013A2A C22000                          ret AND_KILL_FRAME(2)
 31638                                  
 31639                                  L_code_ptr_quotient:
 31640                                          ENTER
 31640 00013A2D C8000000            <1>  enter 0, 0
 31640 00013A31 4883E4F0            <1>  and rsp, ~15
 31641 00013A35 48837D1802                      cmp COUNT, 2
 31642 00013A3A 0F8562050000                    jne L_error_arg_count_2
 31643 00013A40 488B7520                        mov rsi, PARAM(0)
 31644                                          assert_integer(rsi)
 31644                              <1>  assert_rational(%1)
 31644 00013A44 803E11              <2>  cmp byte [%1], %2
 31644 00013A47 0F85F4050000        <2>  jne L_error_incorrect_type
 31644 00013A4D 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 31644 00013A52 0F85E9050000        <1>  jne L_error_incorrect_type
 31645 00013A58 488B7D28                        mov rdi, PARAM(1)
 31646                                          assert_integer(rdi)
 31646                              <1>  assert_rational(%1)
 31646 00013A5C 803F11              <2>  cmp byte [%1], %2
 31646 00013A5F 0F85DC050000        <2>  jne L_error_incorrect_type
 31646 00013A65 48837F0901          <1>  cmp qword [%1 + 1 + 8], 1
 31646 00013A6A 0F85D1050000        <1>  jne L_error_incorrect_type
 31647 00013A70 488B4601                        mov rax, qword [rsi + 1]
 31648 00013A74 488B5F01                        mov rbx, qword [rdi + 1]
 31649 00013A78 4883FB00                        cmp rbx, 0
 31650 00013A7C 0F84F0050000                    je L_error_division_by_zero
 31651 00013A82 4899                            cqo
 31652 00013A84 48F7FB                          idiv rbx
 31653 00013A87 4889C7                          mov rdi, rax
 31654 00013A8A E852040000                      call make_integer
 31655                                          LEAVE
 31655 00013A8F C9                  <1>  leave
 31656 00013A90 C22000                          ret AND_KILL_FRAME(2)
 31657                                          
 31658                                  L_code_ptr_remainder:
 31659                                          ENTER
 31659 00013A93 C8000000            <1>  enter 0, 0
 31659 00013A97 4883E4F0            <1>  and rsp, ~15
 31660 00013A9B 48837D1802                      cmp COUNT, 2
 31661 00013AA0 0F85FC040000                    jne L_error_arg_count_2
 31662 00013AA6 488B7520                        mov rsi, PARAM(0)
 31663                                          assert_integer(rsi)
 31663                              <1>  assert_rational(%1)
 31663 00013AAA 803E11              <2>  cmp byte [%1], %2
 31663 00013AAD 0F858E050000        <2>  jne L_error_incorrect_type
 31663 00013AB3 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 31663 00013AB8 0F8583050000        <1>  jne L_error_incorrect_type
 31664 00013ABE 488B7D28                        mov rdi, PARAM(1)
 31665                                          assert_integer(rdi)
 31665                              <1>  assert_rational(%1)
 31665 00013AC2 803F11              <2>  cmp byte [%1], %2
 31665 00013AC5 0F8576050000        <2>  jne L_error_incorrect_type
 31665 00013ACB 48837F0901          <1>  cmp qword [%1 + 1 + 8], 1
 31665 00013AD0 0F856B050000        <1>  jne L_error_incorrect_type
 31666 00013AD6 488B4601                        mov rax, qword [rsi + 1]
 31667 00013ADA 488B5F01                        mov rbx, qword [rdi + 1]
 31668 00013ADE 4883FB00                        cmp rbx, 0
 31669 00013AE2 0F848A050000                    je L_error_division_by_zero
 31670 00013AE8 4899                            cqo
 31671 00013AEA 48F7FB                          idiv rbx
 31672 00013AED 4889D7                          mov rdi, rdx
 31673 00013AF0 E8EC030000                      call make_integer
 31674                                          LEAVE
 31674 00013AF5 C9                  <1>  leave
 31675 00013AF6 C22000                          ret AND_KILL_FRAME(2)
 31676                                  
 31677                                  L_code_ptr_set_car:
 31678                                          ENTER
 31678 00013AF9 C8000000            <1>  enter 0, 0
 31678 00013AFD 4883E4F0            <1>  and rsp, ~15
 31679 00013B01 48837D1802                      cmp COUNT, 2
 31680 00013B06 0F8596040000                    jne L_error_arg_count_2
 31681 00013B0C 488B4520                        mov rax, PARAM(0)
 31682                                          assert_pair(rax)
 31682 00013B10 803821              <1>  cmp byte [%1], %2
 31682 00013B13 0F8528050000        <1>  jne L_error_incorrect_type
 31683 00013B19 488B5D28                        mov rbx, PARAM(1)
 31684 00013B1D 48895801                        mov SOB_PAIR_CAR(rax), rbx
 31685 00013B21 48B8-                           mov rax, sob_void
 31685 00013B23 [0000000000000000] 
 31686                                          LEAVE
 31686 00013B2B C9                  <1>  leave
 31687 00013B2C C22000                          ret AND_KILL_FRAME(2)
 31688                                  
 31689                                  L_code_ptr_set_cdr:
 31690                                          ENTER
 31690 00013B2F C8000000            <1>  enter 0, 0
 31690 00013B33 4883E4F0            <1>  and rsp, ~15
 31691 00013B37 48837D1802                      cmp COUNT, 2
 31692 00013B3C 0F8560040000                    jne L_error_arg_count_2
 31693 00013B42 488B4520                        mov rax, PARAM(0)
 31694                                          assert_pair(rax)
 31694 00013B46 803821              <1>  cmp byte [%1], %2
 31694 00013B49 0F85F2040000        <1>  jne L_error_incorrect_type
 31695 00013B4F 488B5D28                        mov rbx, PARAM(1)
 31696 00013B53 48895809                        mov SOB_PAIR_CDR(rax), rbx
 31697 00013B57 48B8-                           mov rax, sob_void
 31697 00013B59 [0000000000000000] 
 31698                                          LEAVE
 31698 00013B61 C9                  <1>  leave
 31699 00013B62 C22000                          ret AND_KILL_FRAME(2)
 31700                                  
 31701                                  L_code_ptr_string_ref:
 31702                                          ENTER
 31702 00013B65 C8000000            <1>  enter 0, 0
 31702 00013B69 4883E4F0            <1>  and rsp, ~15
 31703 00013B6D 48837D1802                      cmp COUNT, 2
 31704 00013B72 0F852A040000                    jne L_error_arg_count_2
 31705 00013B78 488B7D20                        mov rdi, PARAM(0)
 31706                                          assert_string(rdi)
 31706 00013B7C 803F03              <1>  cmp byte [%1], %2
 31706 00013B7F 0F85BC040000        <1>  jne L_error_incorrect_type
 31707 00013B85 488B7528                        mov rsi, PARAM(1)
 31708                                          assert_integer(rsi)
 31708                              <1>  assert_rational(%1)
 31708 00013B89 803E11              <2>  cmp byte [%1], %2
 31708 00013B8C 0F85AF040000        <2>  jne L_error_incorrect_type
 31708 00013B92 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 31708 00013B97 0F85A4040000        <1>  jne L_error_incorrect_type
 31709 00013B9D 488B5701                        mov rdx, qword [rdi + 1]
 31710 00013BA1 488B4E01                        mov rcx, qword [rsi + 1]
 31711 00013BA5 4839D1                          cmp rcx, rdx
 31712 00013BA8 0F8D59030000                    jge L_error_integer_range
 31713 00013BAE 4883F900                        cmp rcx, 0
 31714 00013BB2 0F8C4F030000                    jl L_error_integer_range
 31715 00013BB8 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 31716 00013BBC BF02000000                      mov rdi, 2
 31717 00013BC1 E881ECFFFF                      call malloc
 31718 00013BC6 C60002                          mov byte [rax], T_char
 31719 00013BC9 885801                          mov byte [rax + 1], bl
 31720                                          LEAVE
 31720 00013BCC C9                  <1>  leave
 31721 00013BCD C22000                          ret AND_KILL_FRAME(2)
 31722                                  
 31723                                  L_code_ptr_vector_ref:
 31724                                          ENTER
 31724 00013BD0 C8000000            <1>  enter 0, 0
 31724 00013BD4 4883E4F0            <1>  and rsp, ~15
 31725 00013BD8 48837D1802                      cmp COUNT, 2
 31726 00013BDD 0F85BF030000                    jne L_error_arg_count_2
 31727 00013BE3 488B7D20                        mov rdi, PARAM(0)
 31728                                          assert_vector(rdi)
 31728 00013BE7 803F22              <1>  cmp byte [%1], %2
 31728 00013BEA 0F8551040000        <1>  jne L_error_incorrect_type
 31729 00013BF0 488B7528                        mov rsi, PARAM(1)
 31730                                          assert_integer(rsi)
 31730                              <1>  assert_rational(%1)
 31730 00013BF4 803E11              <2>  cmp byte [%1], %2
 31730 00013BF7 0F8544040000        <2>  jne L_error_incorrect_type
 31730 00013BFD 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 31730 00013C02 0F8539040000        <1>  jne L_error_incorrect_type
 31731 00013C08 488B5701                        mov rdx, qword [rdi + 1]
 31732 00013C0C 488B4E01                        mov rcx, qword [rsi + 1]
 31733 00013C10 4839D1                          cmp rcx, rdx
 31734 00013C13 0F8DEE020000                    jge L_error_integer_range
 31735 00013C19 4883F900                        cmp rcx, 0
 31736 00013C1D 0F8CE4020000                    jl L_error_integer_range
 31737 00013C23 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 31738                                          LEAVE
 31738 00013C28 C9                  <1>  leave
 31739 00013C29 C22000                          ret AND_KILL_FRAME(2)
 31740                                  
 31741                                  L_code_ptr_vector_set:
 31742                                          ENTER
 31742 00013C2C C8000000            <1>  enter 0, 0
 31742 00013C30 4883E4F0            <1>  and rsp, ~15
 31743 00013C34 48837D1803                      cmp COUNT, 3
 31744 00013C39 0F85CD030000                    jne L_error_arg_count_3
 31745 00013C3F 488B7D20                        mov rdi, PARAM(0)
 31746                                          assert_vector(rdi)
 31746 00013C43 803F22              <1>  cmp byte [%1], %2
 31746 00013C46 0F85F5030000        <1>  jne L_error_incorrect_type
 31747 00013C4C 488B7528                        mov rsi, PARAM(1)
 31748                                          assert_integer(rsi)
 31748                              <1>  assert_rational(%1)
 31748 00013C50 803E11              <2>  cmp byte [%1], %2
 31748 00013C53 0F85E8030000        <2>  jne L_error_incorrect_type
 31748 00013C59 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 31748 00013C5E 0F85DD030000        <1>  jne L_error_incorrect_type
 31749 00013C64 488B5701                        mov rdx, qword [rdi + 1]
 31750 00013C68 488B4E01                        mov rcx, qword [rsi + 1]
 31751 00013C6C 4839D1                          cmp rcx, rdx
 31752 00013C6F 0F8D92020000                    jge L_error_integer_range
 31753 00013C75 4883F900                        cmp rcx, 0
 31754 00013C79 0F8C88020000                    jl L_error_integer_range
 31755 00013C7F 488B4530                        mov rax, PARAM(2)
 31756 00013C83 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 31757 00013C88 48B8-                           mov rax, sob_void
 31757 00013C8A [0000000000000000] 
 31758                                          LEAVE
 31758 00013C92 C9                  <1>  leave
 31759 00013C93 C22800                          ret AND_KILL_FRAME(3)
 31760                                  
 31761                                  L_code_ptr_string_set:
 31762                                          ENTER
 31762 00013C96 C8000000            <1>  enter 0, 0
 31762 00013C9A 4883E4F0            <1>  and rsp, ~15
 31763 00013C9E 48837D1803                      cmp COUNT, 3
 31764 00013CA3 0F8563030000                    jne L_error_arg_count_3
 31765 00013CA9 488B7D20                        mov rdi, PARAM(0)
 31766                                          assert_string(rdi)
 31766 00013CAD 803F03              <1>  cmp byte [%1], %2
 31766 00013CB0 0F858B030000        <1>  jne L_error_incorrect_type
 31767 00013CB6 488B7528                        mov rsi, PARAM(1)
 31768                                          assert_integer(rsi)
 31768                              <1>  assert_rational(%1)
 31768 00013CBA 803E11              <2>  cmp byte [%1], %2
 31768 00013CBD 0F857E030000        <2>  jne L_error_incorrect_type
 31768 00013CC3 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 31768 00013CC8 0F8573030000        <1>  jne L_error_incorrect_type
 31769 00013CCE 488B5701                        mov rdx, qword [rdi + 1]
 31770 00013CD2 488B4E01                        mov rcx, qword [rsi + 1]
 31771 00013CD6 4839D1                          cmp rcx, rdx
 31772 00013CD9 0F8D28020000                    jge L_error_integer_range
 31773 00013CDF 4883F900                        cmp rcx, 0
 31774 00013CE3 0F8C1E020000                    jl L_error_integer_range
 31775 00013CE9 488B4530                        mov rax, PARAM(2)
 31776                                          assert_char(rax)
 31776 00013CED 803802              <1>  cmp byte [%1], %2
 31776 00013CF0 0F854B030000        <1>  jne L_error_incorrect_type
 31777 00013CF6 8A4001                          mov al, byte [rax + 1]
 31778 00013CF9 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 31779 00013CFD 48B8-                           mov rax, sob_void
 31779 00013CFF [0000000000000000] 
 31780                                          LEAVE
 31780 00013D07 C9                  <1>  leave
 31781 00013D08 C22800                          ret AND_KILL_FRAME(3)
 31782                                  
 31783                                  L_code_ptr_make_vector:
 31784                                          ENTER
 31784 00013D0B C8000000            <1>  enter 0, 0
 31784 00013D0F 4883E4F0            <1>  and rsp, ~15
 31785 00013D13 48837D1802                      cmp COUNT, 2
 31786 00013D18 0F8584020000                    jne L_error_arg_count_2
 31787 00013D1E 488B4D20                        mov rcx, PARAM(0)
 31788                                          assert_integer(rcx)
 31788                              <1>  assert_rational(%1)
 31788 00013D22 803911              <2>  cmp byte [%1], %2
 31788 00013D25 0F8516030000        <2>  jne L_error_incorrect_type
 31788 00013D2B 4883790901          <1>  cmp qword [%1 + 1 + 8], 1
 31788 00013D30 0F850B030000        <1>  jne L_error_incorrect_type
 31789 00013D36 488B4901                        mov rcx, qword [rcx + 1]
 31790 00013D3A 4883F900                        cmp rcx, 0
 31791 00013D3E 0F8CC3010000                    jl L_error_integer_range
 31792 00013D44 488B5528                        mov rdx, PARAM(1)
 31793 00013D48 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 31794 00013D50 E8F2EAFFFF                      call malloc
 31795 00013D55 C60022                          mov byte [rax], T_vector
 31796 00013D58 48894801                        mov qword [rax + 1], rcx
 31797 00013D5C 41B800000000                    mov r8, 0
 31798                                  .L0:
 31799 00013D62 4939C8                          cmp r8, rcx
 31800 00013D65 740A                            je .L1
 31801 00013D67 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 31802 00013D6C 49FFC0                          inc r8
 31803 00013D6F EBF1                            jmp .L0
 31804                                  .L1:
 31805                                          LEAVE
 31805 00013D71 C9                  <1>  leave
 31806 00013D72 C22000                          ret AND_KILL_FRAME(2)
 31807                                          
 31808                                  L_code_ptr_make_string:
 31809                                          ENTER
 31809 00013D75 C8000000            <1>  enter 0, 0
 31809 00013D79 4883E4F0            <1>  and rsp, ~15
 31810 00013D7D 48837D1802                      cmp COUNT, 2
 31811 00013D82 0F851A020000                    jne L_error_arg_count_2
 31812 00013D88 488B4D20                        mov rcx, PARAM(0)
 31813                                          assert_integer(rcx)
 31813                              <1>  assert_rational(%1)
 31813 00013D8C 803911              <2>  cmp byte [%1], %2
 31813 00013D8F 0F85AC020000        <2>  jne L_error_incorrect_type
 31813 00013D95 4883790901          <1>  cmp qword [%1 + 1 + 8], 1
 31813 00013D9A 0F85A1020000        <1>  jne L_error_incorrect_type
 31814 00013DA0 488B4901                        mov rcx, qword [rcx + 1]
 31815 00013DA4 4883F900                        cmp rcx, 0
 31816 00013DA8 0F8C59010000                    jl L_error_integer_range
 31817 00013DAE 488B5528                        mov rdx, PARAM(1)
 31818                                          assert_char(rdx)
 31818 00013DB2 803A02              <1>  cmp byte [%1], %2
 31818 00013DB5 0F8586020000        <1>  jne L_error_incorrect_type
 31819 00013DBB 8A5201                          mov dl, byte [rdx + 1]
 31820 00013DBE 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 31821 00013DC2 E880EAFFFF                      call malloc
 31822 00013DC7 C60003                          mov byte [rax], T_string
 31823 00013DCA 48894801                        mov qword [rax + 1], rcx
 31824 00013DCE 41B800000000                    mov r8, 0
 31825                                  .L0:
 31826 00013DD4 4939C8                          cmp r8, rcx
 31827 00013DD7 740A                            je .L1
 31828 00013DD9 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 31829 00013DDE 49FFC0                          inc r8
 31830 00013DE1 EBF1                            jmp .L0
 31831                                  .L1:
 31832                                          LEAVE
 31832 00013DE3 C9                  <1>  leave
 31833 00013DE4 C22000                          ret AND_KILL_FRAME(2)
 31834                                  
 31835                                  L_code_ptr_numerator:
 31836                                          ENTER
 31836 00013DE7 C8000000            <1>  enter 0, 0
 31836 00013DEB 4883E4F0            <1>  and rsp, ~15
 31837 00013DEF 48837D1801                      cmp COUNT, 1
 31838 00013DF4 0F8573010000                    jne L_error_arg_count_1
 31839 00013DFA 488B4520                        mov rax, PARAM(0)
 31840                                          assert_rational(rax)
 31840 00013DFE 803811              <1>  cmp byte [%1], %2
 31840 00013E01 0F853A020000        <1>  jne L_error_incorrect_type
 31841 00013E07 488B7801                        mov rdi, qword [rax + 1]
 31842 00013E0B E8D1000000                      call make_integer
 31843                                          LEAVE
 31843 00013E10 C9                  <1>  leave
 31844 00013E11 C21800                          ret AND_KILL_FRAME(1)
 31845                                          
 31846                                  L_code_ptr_denominator:
 31847                                          ENTER
 31847 00013E14 C8000000            <1>  enter 0, 0
 31847 00013E18 4883E4F0            <1>  and rsp, ~15
 31848 00013E1C 48837D1801                      cmp COUNT, 1
 31849 00013E21 0F8546010000                    jne L_error_arg_count_1
 31850 00013E27 488B4520                        mov rax, PARAM(0)
 31851                                          assert_rational(rax)
 31851 00013E2B 803811              <1>  cmp byte [%1], %2
 31851 00013E2E 0F850D020000        <1>  jne L_error_incorrect_type
 31852 00013E34 488B7809                        mov rdi, qword [rax + 1 + 8]
 31853 00013E38 E8A4000000                      call make_integer
 31854                                          LEAVE
 31854 00013E3D C9                  <1>  leave
 31855 00013E3E C21800                          ret AND_KILL_FRAME(1)
 31856                                  
 31857                                  L_code_ptr_eq:
 31858                                  	ENTER
 31858 00013E41 C8000000            <1>  enter 0, 0
 31858 00013E45 4883E4F0            <1>  and rsp, ~15
 31859 00013E49 48837D1802              	cmp COUNT, 2
 31860 00013E4E 0F854E010000            	jne L_error_arg_count_2
 31861 00013E54 488B7D20                	mov rdi, PARAM(0)
 31862 00013E58 488B7528                	mov rsi, PARAM(1)
 31863 00013E5C 4839F7                  	cmp rdi, rsi
 31864 00013E5F 744A                    	je .L_eq_true
 31865 00013E61 8A17                    	mov dl, byte [rdi]
 31866 00013E63 3A16                    	cmp dl, byte [rsi]
 31867 00013E65 7550                    	jne .L_eq_false
 31868 00013E67 80FA02                  	cmp dl, T_char
 31869 00013E6A 7437                    	je .L_char
 31870 00013E6C 80FA04                  	cmp dl, T_symbol
 31871 00013E6F 742A                    	je .L_symbol
 31872 00013E71 80FA12                  	cmp dl, T_real
 31873 00013E74 741D                    	je .L_real
 31874 00013E76 80FA11                  	cmp dl, T_rational
 31875 00013E79 7402                    	je .L_rational
 31876 00013E7B EB3A                    	jmp .L_eq_false
 31877                                  .L_rational:
 31878 00013E7D 488B4601                	mov rax, qword [rsi + 1]
 31879 00013E81 483B4701                	cmp rax, qword [rdi + 1]
 31880 00013E85 7530                    	jne .L_eq_false
 31881 00013E87 488B4609                	mov rax, qword [rsi + 1 + 8]
 31882 00013E8B 483B4709                	cmp rax, qword [rdi + 1 + 8]
 31883 00013E8F 7526                    	jne .L_eq_false
 31884 00013E91 EB18                    	jmp .L_eq_true
 31885                                  .L_real:
 31886 00013E93 488B4601                	mov rax, qword [rsi + 1]
 31887 00013E97 483B4701                	cmp rax, qword [rdi + 1]
 31888                                  .L_symbol:
 31889                                  	; never reached, because symbols are static!
 31890                                  	; but I'm keeping it in case, I'll ever change
 31891                                  	; the implementation
 31892 00013E9B 488B4601                	mov rax, qword [rsi + 1]
 31893 00013E9F 483B4701                	cmp rax, qword [rdi + 1]
 31894                                  .L_char:
 31895 00013EA3 8A5E01                  	mov bl, byte [rsi + 1]
 31896 00013EA6 3A5F01                  	cmp bl, byte [rdi + 1]
 31897 00013EA9 750C                    	jne .L_eq_false
 31898                                  .L_eq_true:
 31899 00013EAB 48B8-                   	mov rax, sob_boolean_true
 31899 00013EAD [0300000000000000] 
 31900 00013EB5 EB0A                    	jmp .L_eq_exit
 31901                                  .L_eq_false:
 31902 00013EB7 48B8-                   	mov rax, sob_boolean_false
 31902 00013EB9 [0200000000000000] 
 31903                                  .L_eq_exit:
 31904                                  	LEAVE
 31904 00013EC1 C9                  <1>  leave
 31905 00013EC2 C22000                  	ret AND_KILL_FRAME(2)
 31906                                  
 31907                                  make_real:
 31908                                          ENTER
 31908 00013EC5 C8000000            <1>  enter 0, 0
 31908 00013EC9 4883E4F0            <1>  and rsp, ~15
 31909 00013ECD BF09000000                      mov rdi, (1 + 8)
 31910 00013ED2 E870E9FFFF                      call malloc
 31911 00013ED7 C60012                          mov byte [rax], T_real
 31912 00013EDA F20F114001                      movsd qword [rax + 1], xmm0
 31913                                          LEAVE
 31913 00013EDF C9                  <1>  leave
 31914 00013EE0 C3                              ret
 31915                                          
 31916                                  make_integer:
 31917                                          ENTER
 31917 00013EE1 C8000000            <1>  enter 0, 0
 31917 00013EE5 4883E4F0            <1>  and rsp, ~15
 31918 00013EE9 4889FE                          mov rsi, rdi
 31919 00013EEC BF11000000                      mov rdi, (1 + 8 + 8)
 31920 00013EF1 E851E9FFFF                      call malloc
 31921 00013EF6 C60011                          mov byte [rax], T_rational
 31922 00013EF9 48897001                        mov qword [rax + 1], rsi
 31923 00013EFD 48C7400901000000                mov qword [rax + 1 + 8], 1
 31924                                          LEAVE
 31924 00013F05 C9                  <1>  leave
 31925 00013F06 C3                              ret
 31926                                          
 31927                                  L_error_integer_range:
 31928 00013F07 488B3C25[00000000]              mov rdi, qword [stderr]
 31929 00013F0F 48BE-                           mov rsi, fmt_integer_range
 31929 00013F11 [AC05000000000000] 
 31930 00013F19 B800000000                      mov rax, 0
 31931                                  	ENTER
 31931 00013F1E C8000000            <1>  enter 0, 0
 31931 00013F22 4883E4F0            <1>  and rsp, ~15
 31932 00013F26 E8(00000000)                    call fprintf
 31933                                  	LEAVE
 31933 00013F2B C9                  <1>  leave
 31934 00013F2C 48C7C0FBFFFFFF                  mov rax, -5
 31935 00013F33 E8(00000000)                    call exit
 31936                                  
 31937                                  L_error_arg_count_0:
 31938 00013F38 488B3C25[00000000]              mov rdi, qword [stderr]
 31939 00013F40 48BE-                           mov rsi, fmt_arg_count_0
 31939 00013F42 [AA04000000000000] 
 31940 00013F4A 488B5518                        mov rdx, COUNT
 31941 00013F4E B800000000                      mov rax, 0
 31942                                  	ENTER
 31942 00013F53 C8000000            <1>  enter 0, 0
 31942 00013F57 4883E4F0            <1>  and rsp, ~15
 31943 00013F5B E8(00000000)                    call fprintf
 31944                                  	LEAVE
 31944 00013F60 C9                  <1>  leave
 31945 00013F61 48C7C0FDFFFFFF                  mov rax, -3
 31946 00013F68 E8(00000000)                    call exit
 31947                                  
 31948                                  L_error_arg_count_1:
 31949 00013F6D 488B3C25[00000000]              mov rdi, qword [stderr]
 31950 00013F75 48BE-                           mov rsi, fmt_arg_count_1
 31950 00013F77 [D204000000000000] 
 31951 00013F7F 488B5518                        mov rdx, COUNT
 31952 00013F83 B800000000                      mov rax, 0
 31953                                  	ENTER
 31953 00013F88 C8000000            <1>  enter 0, 0
 31953 00013F8C 4883E4F0            <1>  and rsp, ~15
 31954 00013F90 E8(00000000)                    call fprintf
 31955                                  	LEAVE
 31955 00013F95 C9                  <1>  leave
 31956 00013F96 48C7C0FDFFFFFF                  mov rax, -3
 31957 00013F9D E8(00000000)                    call exit
 31958                                  
 31959                                  L_error_arg_count_2:
 31960 00013FA2 488B3C25[00000000]              mov rdi, qword [stderr]
 31961 00013FAA 48BE-                           mov rsi, fmt_arg_count_2
 31961 00013FAC [3805000000000000] 
 31962 00013FB4 488B5518                        mov rdx, COUNT
 31963 00013FB8 B800000000                      mov rax, 0
 31964                                  	ENTER
 31964 00013FBD C8000000            <1>  enter 0, 0
 31964 00013FC1 4883E4F0            <1>  and rsp, ~15
 31965 00013FC5 E8(00000000)                    call fprintf
 31966                                  	LEAVE
 31966 00013FCA C9                  <1>  leave
 31967 00013FCB 48C7C0FDFFFFFF                  mov rax, -3
 31968 00013FD2 E8(00000000)                    call exit
 31969                                  
 31970                                  L_error_arg_count_12:
 31971 00013FD7 488B3C25[00000000]              mov rdi, qword [stderr]
 31972 00013FDF 48BE-                           mov rsi, fmt_arg_count_12
 31972 00013FE1 [F804000000000000] 
 31973 00013FE9 488B5518                        mov rdx, COUNT
 31974 00013FED B800000000                      mov rax, 0
 31975                                  	ENTER
 31975 00013FF2 C8000000            <1>  enter 0, 0
 31975 00013FF6 4883E4F0            <1>  and rsp, ~15
 31976 00013FFA E8(00000000)                    call fprintf
 31977                                  	LEAVE
 31977 00013FFF C9                  <1>  leave
 31978 00014000 48C7C0FDFFFFFF                  mov rax, -3
 31979 00014007 E8(00000000)                    call exit
 31980                                  
 31981                                  L_error_arg_count_3:
 31982 0001400C 488B3C25[00000000]              mov rdi, qword [stderr]
 31983 00014014 48BE-                           mov rsi, fmt_arg_count_3
 31983 00014016 [5F05000000000000] 
 31984 0001401E 488B5518                        mov rdx, COUNT
 31985 00014022 B800000000                      mov rax, 0
 31986                                  	ENTER
 31986 00014027 C8000000            <1>  enter 0, 0
 31986 0001402B 4883E4F0            <1>  and rsp, ~15
 31987 0001402F E8(00000000)                    call fprintf
 31988                                  	LEAVE
 31988 00014034 C9                  <1>  leave
 31989 00014035 48C7C0FDFFFFFF                  mov rax, -3
 31990 0001403C E8(00000000)                    call exit
 31991                                          
 31992                                  L_error_incorrect_type:
 31993 00014041 488B3C25[00000000]              mov rdi, qword [stderr]
 31994 00014049 48BE-                           mov rsi, fmt_type
 31994 0001404B [8805000000000000] 
 31995 00014053 B800000000                      mov rax, 0
 31996                                  	ENTER
 31996 00014058 C8000000            <1>  enter 0, 0
 31996 0001405C 4883E4F0            <1>  and rsp, ~15
 31997 00014060 E8(00000000)                    call fprintf
 31998                                  	LEAVE
 31998 00014065 C9                  <1>  leave
 31999 00014066 48C7C0FCFFFFFF                  mov rax, -4
 32000 0001406D E8(00000000)                    call exit
 32001                                  
 32002                                  L_error_division_by_zero:
 32003 00014072 488B3C25[00000000]              mov rdi, qword [stderr]
 32004 0001407A 48BE-                           mov rsi, fmt_division_by_zero
 32004 0001407C [C905000000000000] 
 32005 00014084 B800000000                      mov rax, 0
 32006                                  	ENTER
 32006 00014089 C8000000            <1>  enter 0, 0
 32006 0001408D 4883E4F0            <1>  and rsp, ~15
 32007 00014091 E8(00000000)                    call fprintf
 32008                                  	LEAVE
 32008 00014096 C9                  <1>  leave
 32009 00014097 48C7C0F8FFFFFF                  mov rax, -8
 32010 0001409E E8(00000000)                    call exit
 32011                                  
 32012                                  section .data
 32013                                  fmt_char:
 32014 000004A7 256300                          db `%c\0`
 32015                                  fmt_arg_count_0:
 32016 000004AA 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 32016 000004B3 74696E67207A65726F-
 32016 000004BC 20617267756D656E74-
 32016 000004C5 732E20466F756E6420-
 32016 000004CE 25640A00           
 32017                                  fmt_arg_count_1:
 32018 000004D2 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 32018 000004DB 74696E67206F6E6520-
 32018 000004E4 617267756D656E742E-
 32018 000004ED 20466F756E64202564-
 32018 000004F6 0A00               
 32019                                  fmt_arg_count_12:
 32020 000004F8 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 32020 00000501 74696E67206F6E6520-
 32020 0000050A 726571756972656420-
 32020 00000513 616E64206F6E65206F-
 32020 0000051C 7074696F6E616C2061-
 32020 00000525 7267756D656E742E20-
 32020 0000052E 466F756E642025640A-
 32020 00000537 00                 
 32021                                  fmt_arg_count_2:
 32022 00000538 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 32022 00000541 74696E672074776F20-
 32022 0000054A 617267756D656E7473-
 32022 00000553 2E20466F756E642025-
 32022 0000055C 640A00             
 32023                                  fmt_arg_count_3:
 32024 0000055F 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 32024 00000568 74696E672074687265-
 32024 00000571 6520617267756D656E-
 32024 0000057A 74732E20466F756E64-
 32024 00000583 2025640A00         
 32025                                  fmt_type:
 32026 00000588 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 32026 00000591 696F6E207061737365-
 32026 0000059A 6420696E636F727265-
 32026 000005A3 637420747970650A00 
 32027                                  fmt_integer_range:
 32028 000005AC 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 32028 000005B5 7265637420696E7465-
 32028 000005BE 6765722072616E6765-
 32028 000005C7 0A00               
 32029                                  fmt_division_by_zero:
 32030 000005C9 212121204469766973-             db `!!! Division by zero\n\0`
 32030 000005D2 696F6E206279207A65-
 32030 000005DB 726F0A00           
 32031                                  fmt_scheme_error_part_1:
 32032 000005DF 0A2121212054686520-             db `\n!!! The procedure \0`
 32032 000005E8 70726F636564757265-
 32032 000005F1 2000               
 32033                                  fmt_scheme_error_part_2:
 32034 000005F3 2061736B656420746F-             db ` asked to terminate the program\n`
 32034 000005FC 207465726D696E6174-
 32034 00000605 65207468652070726F-
 32034 0000060E 6772616D0A         
 32035 00000613 202020207769746820-             db `    with the following message:\n\n\0`
 32035 0000061C 74686520666F6C6C6F-
 32035 00000625 77696E67206D657373-
 32035 0000062E 6167653A0A0A00     
 32036                                  fmt_scheme_error_part_3:
 32037 00000635 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 32037 0000063E 210A0A00           
