     1                                  %define T_void 				0
     2                                  %define T_nil 				1
     3                                  %define T_char 				2
     4                                  %define T_string 			3
     5                                  %define T_symbol 			4
     6                                  %define T_closure 			5
     7                                  %define T_boolean 			8
     8                                  %define T_boolean_false 		(T_boolean | 1)
     9                                  %define T_boolean_true 			(T_boolean | 2)
    10                                  %define T_number 			16
    11                                  %define T_rational 			(T_number | 1)
    12                                  %define T_real 				(T_number | 2)
    13                                  %define T_collection 			32
    14                                  %define T_pair 				(T_collection | 1)
    15                                  %define T_vector 			(T_collection | 2)
    16                                  
    17                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    18                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    19                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    20                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    21                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    22                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    23                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    24                                  
    25                                  %define OLD_RDP 			qword [rbp]
    26                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    27                                  %define ENV 				qword [rbp + 8 * 2]
    28                                  %define COUNT 				qword [rbp + 8 * 3]
    29                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    30                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    31                                  
    32                                  %macro ENTER 0
    33                                  	enter 0, 0
    34                                  	and rsp, ~15
    35                                  %endmacro
    36                                  
    37                                  %macro LEAVE 0
    38                                  	leave
    39                                  %endmacro
    40                                  
    41                                  %macro assert_type 2
    42                                          cmp byte [%1], %2
    43                                          jne L_error_incorrect_type
    44                                  %endmacro
    45                                  
    46                                  %macro assert_type_integer 1
    47                                          assert_rational(%1)
    48                                          cmp qword [%1 + 1 + 8], 1
    49                                          jne L_error_incorrect_type
    50                                  %endmacro
    51                                  
    52                                  %define assert_void(reg)		assert_type reg, T_void
    53                                  %define assert_nil(reg)			assert_type reg, T_nil
    54                                  %define assert_char(reg)		assert_type reg, T_char
    55                                  %define assert_string(reg)		assert_type reg, T_string
    56                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    57                                  %define assert_closure(reg)		assert_type reg, T_closure
    58                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    59                                  %define assert_rational(reg)		assert_type reg, T_rational
    60                                  %define assert_integer(reg)		assert_type_integer reg
    61                                  %define assert_real(reg)		assert_type reg, T_real
    62                                  %define assert_pair(reg)		assert_type reg, T_pair
    63                                  %define assert_vector(reg)		assert_type reg, T_vector
    64                                  
    65                                  %define sob_void			(L_constants + 0)
    66                                  %define sob_nil				(L_constants + 1)
    67                                  %define sob_boolean_false		(L_constants + 2)
    68                                  %define sob_boolean_true		(L_constants + 3)
    69                                  %define sob_char_nul			(L_constants + 4)
    70                                  
    71                                  %define bytes(n)			(n)
    72                                  %define kbytes(n) 			(bytes(n) << 10)
    73                                  %define mbytes(n) 			(kbytes(n) << 10)
    74                                  %define gbytes(n) 			(mbytes(n) << 10)
    75                                  
    76                                  section .data
    77                                  L_constants:
    78 00000000 00                      	db T_void
    79 00000001 01                      	db T_nil
    80 00000002 09                      	db T_boolean_false
    81 00000003 0A                      	db T_boolean_true
    82 00000004 0200                    	db T_char, 0x00	; #\x0
    83 00000006 03                      	db T_string	; "ranover"
    84 00000007 0700000000000000        	dq 7
    85 0000000F 72616E6F766572          	db 0x72, 0x61, 0x6E, 0x6F, 0x76, 0x65, 0x72
    86 00000016 04                      	db T_symbol	; ranover
    87 00000017 [0600000000000000]      	dq L_constants + 6
    88 0000001F 11                      	db T_rational	; 0
    89 00000020 000000000000000001-     	dq 0, 1
    89 00000029 00000000000000     
    90 00000030 03                      	db T_string	; "+"
    91 00000031 0100000000000000        	dq 1
    92 00000039 2B                      	db 0x2B
    93 0000003A 04                      	db T_symbol	; +
    94 0000003B [3000000000000000]      	dq L_constants + 48
    95 00000043 03                      	db T_string	; "all arguments need ...
    96 00000044 2000000000000000        	dq 32
    97 0000004C 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
    98 00000054 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
    99 0000005C 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   100 00000064 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   101 0000006C 03                      	db T_string	; "-"
   102 0000006D 0100000000000000        	dq 1
   103 00000075 2D                      	db 0x2D
   104 00000076 04                      	db T_symbol	; -
   105 00000077 [6C00000000000000]      	dq L_constants + 108
   106 0000007F 11                      	db T_rational	; 1
   107 00000080 010000000000000001-     	dq 1, 1
   107 00000089 00000000000000     
   108 00000090 03                      	db T_string	; "*"
   109 00000091 0100000000000000        	dq 1
   110 00000099 2A                      	db 0x2A
   111 0000009A 04                      	db T_symbol	; *
   112 0000009B [9000000000000000]      	dq L_constants + 144
   113 000000A3 03                      	db T_string	; "/"
   114 000000A4 0100000000000000        	dq 1
   115 000000AC 2F                      	db 0x2F
   116 000000AD 04                      	db T_symbol	; /
   117 000000AE [A300000000000000]      	dq L_constants + 163
   118 000000B6 03                      	db T_string	; "generic-comparator"
   119 000000B7 1200000000000000        	dq 18
   120 000000BF 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   121 000000C7 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   122 000000CF 6F72                    	db 0x6F, 0x72
   123 000000D1 04                      	db T_symbol	; generic-comparator
   124 000000D2 [B600000000000000]      	dq L_constants + 182
   125 000000DA 03                      	db T_string	; "all the arguments m...
   126 000000DB 2100000000000000        	dq 33
   127 000000E3 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   128 000000EB 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   129 000000F3 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   130 000000FB 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   131 00000103 73                      	db 0x73
   132 00000104 03                      	db T_string	; "make-list"
   133 00000105 0900000000000000        	dq 9
   134 0000010D 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   135 00000115 74                      	db 0x74
   136 00000116 04                      	db T_symbol	; make-list
   137 00000117 [0401000000000000]      	dq L_constants + 260
   138 0000011F 03                      	db T_string	; "Usage: (make-list l...
   139 00000120 2D00000000000000        	dq 45
   140 00000128 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   141 00000130 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   142 00000138 74206C656E677468        	db 0x74, 0x20, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   143 00000140 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   144 00000148 616C2D696E69742D        	db 0x61, 0x6C, 0x2D, 0x69, 0x6E, 0x69, 0x74, 0x2D
   145 00000150 6368617229              	db 0x63, 0x68, 0x61, 0x72, 0x29
   146 00000155 0241                    	db T_char, 0x41	; #\A
   147 00000157 025A                    	db T_char, 0x5A	; #\Z
   148 00000159 0261                    	db T_char, 0x61	; #\a
   149 0000015B 027A                    	db T_char, 0x7A	; #\z
   150 0000015D 03                      	db T_string	; "make-vector"
   151 0000015E 0B00000000000000        	dq 11
   152 00000166 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   153 0000016E 746F72                  	db 0x74, 0x6F, 0x72
   154 00000171 04                      	db T_symbol	; make-vector
   155 00000172 [5D01000000000000]      	dq L_constants + 349
   156 0000017A 03                      	db T_string	; "Usage: (make-vector...
   157 0000017B 2B00000000000000        	dq 43
   158 00000183 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   159 0000018B 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   160 00000193 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   161 0000019B 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   162 000001A3 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   163 000001AB 6C7429                  	db 0x6C, 0x74, 0x29
   164 000001AE 03                      	db T_string	; "make-string"
   165 000001AF 0B00000000000000        	dq 11
   166 000001B7 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   167 000001BF 696E67                  	db 0x69, 0x6E, 0x67
   168 000001C2 04                      	db T_symbol	; make-string
   169 000001C3 [AE01000000000000]      	dq L_constants + 430
   170 000001CB 03                      	db T_string	; "Usage: (make-string...
   171 000001CC 2B00000000000000        	dq 43
   172 000001D4 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   173 000001DC 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   174 000001E4 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   175 000001EC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   176 000001F4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   177 000001FC 6C7429                  	db 0x6C, 0x74, 0x29
   178 000001FF 11                      	db T_rational	; 2
   179 00000200 020000000000000001-     	dq 2, 1
   179 00000209 00000000000000     
   180 00000210 11                      	db T_rational	; 3
   181 00000211 030000000000000001-     	dq 3, 1
   181 0000021A 00000000000000     
   182 00000221 11                      	db T_rational	; 4
   183 00000222 040000000000000001-     	dq 4, 1
   183 0000022B 00000000000000     
   184 00000232 11                      	db T_rational	; 5
   185 00000233 050000000000000001-     	dq 5, 1
   185 0000023C 00000000000000     
   186 00000243 21                      	db T_pair	; (5)
   187 00000244 [3202000000000000]-     	dq L_constants + 562, L_constants + 1
   187 0000024C [0100000000000000] 
   188 00000254 21                      	db T_pair	; (4 5)
   189 00000255 [2102000000000000]-     	dq L_constants + 545, L_constants + 579
   189 0000025D [4302000000000000] 
   190 00000265 21                      	db T_pair	; (3 4 5)
   191 00000266 [1002000000000000]-     	dq L_constants + 528, L_constants + 596
   191 0000026E [5402000000000000] 
   192 00000276 21                      	db T_pair	; (2 3 4 5)
   193 00000277 [FF01000000000000]-     	dq L_constants + 511, L_constants + 613
   193 0000027F [6502000000000000] 
   194 00000287 21                      	db T_pair	; (1 2 3 4 5)
   195 00000288 [7F00000000000000]-     	dq L_constants + 127, L_constants + 630
   195 00000290 [7602000000000000] 
   196                                  
   197                                  section .bss
   198                                  free_var_0:	; location of null?
   199 00000000 <res 00000008>          	resq 1
   200                                  free_var_1:	; location of pair?
   201 00000008 <res 00000008>          	resq 1
   202                                  free_var_2:	; location of void?
   203 00000010 <res 00000008>          	resq 1
   204                                  free_var_3:	; location of char?
   205 00000018 <res 00000008>          	resq 1
   206                                  free_var_4:	; location of string?
   207 00000020 <res 00000008>          	resq 1
   208                                  free_var_5:	; location of symbol?
   209 00000028 <res 00000008>          	resq 1
   210                                  free_var_6:	; location of vector?
   211 00000030 <res 00000008>          	resq 1
   212                                  free_var_7:	; location of procedure?
   213 00000038 <res 00000008>          	resq 1
   214                                  free_var_8:	; location of real?
   215 00000040 <res 00000008>          	resq 1
   216                                  free_var_9:	; location of rational?
   217 00000048 <res 00000008>          	resq 1
   218                                  free_var_10:	; location of boolean?
   219 00000050 <res 00000008>          	resq 1
   220                                  free_var_11:	; location of number?
   221 00000058 <res 00000008>          	resq 1
   222                                  free_var_12:	; location of collection?
   223 00000060 <res 00000008>          	resq 1
   224                                  free_var_13:	; location of cons
   225 00000068 <res 00000008>          	resq 1
   226                                  free_var_14:	; location of display-sexpr
   227 00000070 <res 00000008>          	resq 1
   228                                  free_var_15:	; location of write-char
   229 00000078 <res 00000008>          	resq 1
   230                                  free_var_16:	; location of car
   231 00000080 <res 00000008>          	resq 1
   232                                  free_var_17:	; location of cdr
   233 00000088 <res 00000008>          	resq 1
   234                                  free_var_18:	; location of string-length
   235 00000090 <res 00000008>          	resq 1
   236                                  free_var_19:	; location of vector-length
   237 00000098 <res 00000008>          	resq 1
   238                                  free_var_20:	; location of real->integer
   239 000000A0 <res 00000008>          	resq 1
   240                                  free_var_21:	; location of exit
   241 000000A8 <res 00000008>          	resq 1
   242                                  free_var_22:	; location of integer->real
   243 000000B0 <res 00000008>          	resq 1
   244                                  free_var_23:	; location of rational->real
   245 000000B8 <res 00000008>          	resq 1
   246                                  free_var_24:	; location of char->integer
   247 000000C0 <res 00000008>          	resq 1
   248                                  free_var_25:	; location of integer->char
   249 000000C8 <res 00000008>          	resq 1
   250                                  free_var_26:	; location of trng
   251 000000D0 <res 00000008>          	resq 1
   252                                  free_var_27:	; location of zero?
   253 000000D8 <res 00000008>          	resq 1
   254                                  free_var_28:	; location of integer?
   255 000000E0 <res 00000008>          	resq 1
   256                                  free_var_29:	; location of __bin-apply
   257 000000E8 <res 00000008>          	resq 1
   258                                  free_var_30:	; location of __bin-add-rr
   259 000000F0 <res 00000008>          	resq 1
   260                                  free_var_31:	; location of __bin-sub-rr
   261 000000F8 <res 00000008>          	resq 1
   262                                  free_var_32:	; location of __bin-mul-rr
   263 00000100 <res 00000008>          	resq 1
   264                                  free_var_33:	; location of __bin-div-rr
   265 00000108 <res 00000008>          	resq 1
   266                                  free_var_34:	; location of __bin-add-qq
   267 00000110 <res 00000008>          	resq 1
   268                                  free_var_35:	; location of __bin-sub-qq
   269 00000118 <res 00000008>          	resq 1
   270                                  free_var_36:	; location of __bin-mul-qq
   271 00000120 <res 00000008>          	resq 1
   272                                  free_var_37:	; location of __bin-div-qq
   273 00000128 <res 00000008>          	resq 1
   274                                  free_var_38:	; location of error
   275 00000130 <res 00000008>          	resq 1
   276                                  free_var_39:	; location of __bin-less-than-rr
   277 00000138 <res 00000008>          	resq 1
   278                                  free_var_40:	; location of __bin-less-than-qq
   279 00000140 <res 00000008>          	resq 1
   280                                  free_var_41:	; location of __bin-equal-rr
   281 00000148 <res 00000008>          	resq 1
   282                                  free_var_42:	; location of __bin-equal-qq
   283 00000150 <res 00000008>          	resq 1
   284                                  free_var_43:	; location of quotient
   285 00000158 <res 00000008>          	resq 1
   286                                  free_var_44:	; location of remainder
   287 00000160 <res 00000008>          	resq 1
   288                                  free_var_45:	; location of set-car!
   289 00000168 <res 00000008>          	resq 1
   290                                  free_var_46:	; location of set-cdr!
   291 00000170 <res 00000008>          	resq 1
   292                                  free_var_47:	; location of string-ref
   293 00000178 <res 00000008>          	resq 1
   294                                  free_var_48:	; location of vector-ref
   295 00000180 <res 00000008>          	resq 1
   296                                  free_var_49:	; location of vector-set!
   297 00000188 <res 00000008>          	resq 1
   298                                  free_var_50:	; location of string-set!
   299 00000190 <res 00000008>          	resq 1
   300                                  free_var_51:	; location of make-vector
   301 00000198 <res 00000008>          	resq 1
   302                                  free_var_52:	; location of make-string
   303 000001A0 <res 00000008>          	resq 1
   304                                  free_var_53:	; location of numerator
   305 000001A8 <res 00000008>          	resq 1
   306                                  free_var_54:	; location of denominator
   307 000001B0 <res 00000008>          	resq 1
   308                                  free_var_55:	; location of eq?
   309 000001B8 <res 00000008>          	resq 1
   310                                  free_var_56:	; location of caar
   311 000001C0 <res 00000008>          	resq 1
   312                                  free_var_57:	; location of cadr
   313 000001C8 <res 00000008>          	resq 1
   314                                  free_var_58:	; location of cdar
   315 000001D0 <res 00000008>          	resq 1
   316                                  free_var_59:	; location of cddr
   317 000001D8 <res 00000008>          	resq 1
   318                                  free_var_60:	; location of caaar
   319 000001E0 <res 00000008>          	resq 1
   320                                  free_var_61:	; location of caadr
   321 000001E8 <res 00000008>          	resq 1
   322                                  free_var_62:	; location of cadar
   323 000001F0 <res 00000008>          	resq 1
   324                                  free_var_63:	; location of caddr
   325 000001F8 <res 00000008>          	resq 1
   326                                  free_var_64:	; location of cdaar
   327 00000200 <res 00000008>          	resq 1
   328                                  free_var_65:	; location of cdadr
   329 00000208 <res 00000008>          	resq 1
   330                                  free_var_66:	; location of cddar
   331 00000210 <res 00000008>          	resq 1
   332                                  free_var_67:	; location of cdddr
   333 00000218 <res 00000008>          	resq 1
   334                                  free_var_68:	; location of caaaar
   335 00000220 <res 00000008>          	resq 1
   336                                  free_var_69:	; location of caaadr
   337 00000228 <res 00000008>          	resq 1
   338                                  free_var_70:	; location of caadar
   339 00000230 <res 00000008>          	resq 1
   340                                  free_var_71:	; location of caaddr
   341 00000238 <res 00000008>          	resq 1
   342                                  free_var_72:	; location of cadaar
   343 00000240 <res 00000008>          	resq 1
   344                                  free_var_73:	; location of cadadr
   345 00000248 <res 00000008>          	resq 1
   346                                  free_var_74:	; location of caddar
   347 00000250 <res 00000008>          	resq 1
   348                                  free_var_75:	; location of cadddr
   349 00000258 <res 00000008>          	resq 1
   350                                  free_var_76:	; location of cdaaar
   351 00000260 <res 00000008>          	resq 1
   352                                  free_var_77:	; location of cdaadr
   353 00000268 <res 00000008>          	resq 1
   354                                  free_var_78:	; location of cdadar
   355 00000270 <res 00000008>          	resq 1
   356                                  free_var_79:	; location of cdaddr
   357 00000278 <res 00000008>          	resq 1
   358                                  free_var_80:	; location of cddaar
   359 00000280 <res 00000008>          	resq 1
   360                                  free_var_81:	; location of cddadr
   361 00000288 <res 00000008>          	resq 1
   362                                  free_var_82:	; location of cdddar
   363 00000290 <res 00000008>          	resq 1
   364                                  free_var_83:	; location of cddddr
   365 00000298 <res 00000008>          	resq 1
   366                                  free_var_84:	; location of list?
   367 000002A0 <res 00000008>          	resq 1
   368                                  free_var_85:	; location of list
   369 000002A8 <res 00000008>          	resq 1
   370                                  free_var_86:	; location of not
   371 000002B0 <res 00000008>          	resq 1
   372                                  free_var_87:	; location of fraction?
   373 000002B8 <res 00000008>          	resq 1
   374                                  free_var_88:	; location of list*
   375 000002C0 <res 00000008>          	resq 1
   376                                  free_var_89:	; location of apply
   377 000002C8 <res 00000008>          	resq 1
   378                                  free_var_90:	; location of ormap
   379 000002D0 <res 00000008>          	resq 1
   380                                  free_var_91:	; location of map
   381 000002D8 <res 00000008>          	resq 1
   382                                  free_var_92:	; location of andmap
   383 000002E0 <res 00000008>          	resq 1
   384                                  free_var_93:	; location of reverse
   385 000002E8 <res 00000008>          	resq 1
   386                                  free_var_94:	; location of append
   387 000002F0 <res 00000008>          	resq 1
   388                                  free_var_95:	; location of fold-left
   389 000002F8 <res 00000008>          	resq 1
   390                                  free_var_96:	; location of fold-right
   391 00000300 <res 00000008>          	resq 1
   392                                  free_var_97:	; location of +
   393 00000308 <res 00000008>          	resq 1
   394                                  free_var_98:	; location of -
   395 00000310 <res 00000008>          	resq 1
   396                                  free_var_99:	; location of *
   397 00000318 <res 00000008>          	resq 1
   398                                  free_var_100:	; location of /
   399 00000320 <res 00000008>          	resq 1
   400                                  free_var_101:	; location of fact
   401 00000328 <res 00000008>          	resq 1
   402                                  free_var_102:	; location of <
   403 00000330 <res 00000008>          	resq 1
   404                                  free_var_103:	; location of <=
   405 00000338 <res 00000008>          	resq 1
   406                                  free_var_104:	; location of >
   407 00000340 <res 00000008>          	resq 1
   408                                  free_var_105:	; location of >=
   409 00000348 <res 00000008>          	resq 1
   410                                  free_var_106:	; location of =
   411 00000350 <res 00000008>          	resq 1
   412                                  free_var_107:	; location of make-list
   413 00000358 <res 00000008>          	resq 1
   414                                  free_var_108:	; location of char<?
   415 00000360 <res 00000008>          	resq 1
   416                                  free_var_109:	; location of char<=?
   417 00000368 <res 00000008>          	resq 1
   418                                  free_var_110:	; location of char=?
   419 00000370 <res 00000008>          	resq 1
   420                                  free_var_111:	; location of char>?
   421 00000378 <res 00000008>          	resq 1
   422                                  free_var_112:	; location of char>=?
   423 00000380 <res 00000008>          	resq 1
   424                                  free_var_113:	; location of char-downcase
   425 00000388 <res 00000008>          	resq 1
   426                                  free_var_114:	; location of char-upcase
   427 00000390 <res 00000008>          	resq 1
   428                                  free_var_115:	; location of char-ci<?
   429 00000398 <res 00000008>          	resq 1
   430                                  free_var_116:	; location of char-ci<=?
   431 000003A0 <res 00000008>          	resq 1
   432                                  free_var_117:	; location of char-ci=?
   433 000003A8 <res 00000008>          	resq 1
   434                                  free_var_118:	; location of char-ci>?
   435 000003B0 <res 00000008>          	resq 1
   436                                  free_var_119:	; location of char-ci>=?
   437 000003B8 <res 00000008>          	resq 1
   438                                  free_var_120:	; location of string-downcase
   439 000003C0 <res 00000008>          	resq 1
   440                                  free_var_121:	; location of string-upcase
   441 000003C8 <res 00000008>          	resq 1
   442                                  free_var_122:	; location of list->string
   443 000003D0 <res 00000008>          	resq 1
   444                                  free_var_123:	; location of string->list
   445 000003D8 <res 00000008>          	resq 1
   446                                  free_var_124:	; location of string<?
   447 000003E0 <res 00000008>          	resq 1
   448                                  free_var_125:	; location of string<=?
   449 000003E8 <res 00000008>          	resq 1
   450                                  free_var_126:	; location of string=?
   451 000003F0 <res 00000008>          	resq 1
   452                                  free_var_127:	; location of string>=?
   453 000003F8 <res 00000008>          	resq 1
   454                                  free_var_128:	; location of string>?
   455 00000400 <res 00000008>          	resq 1
   456                                  free_var_129:	; location of string-ci<?
   457 00000408 <res 00000008>          	resq 1
   458                                  free_var_130:	; location of string-ci<=?
   459 00000410 <res 00000008>          	resq 1
   460                                  free_var_131:	; location of string-ci=?
   461 00000418 <res 00000008>          	resq 1
   462                                  free_var_132:	; location of string-ci>=?
   463 00000420 <res 00000008>          	resq 1
   464                                  free_var_133:	; location of string-ci>?
   465 00000428 <res 00000008>          	resq 1
   466                                  free_var_134:	; location of length
   467 00000430 <res 00000008>          	resq 1
   468                                  free_var_135:	; location of list->vector
   469 00000438 <res 00000008>          	resq 1
   470                                  free_var_136:	; location of vector
   471 00000440 <res 00000008>          	resq 1
   472                                  free_var_137:	; location of vector->list
   473 00000448 <res 00000008>          	resq 1
   474                                  free_var_138:	; location of random
   475 00000450 <res 00000008>          	resq 1
   476                                  free_var_139:	; location of positive?
   477 00000458 <res 00000008>          	resq 1
   478                                  free_var_140:	; location of negative?
   479 00000460 <res 00000008>          	resq 1
   480                                  free_var_141:	; location of even?
   481 00000468 <res 00000008>          	resq 1
   482                                  free_var_142:	; location of odd?
   483 00000470 <res 00000008>          	resq 1
   484                                  free_var_143:	; location of abs
   485 00000478 <res 00000008>          	resq 1
   486                                  free_var_144:	; location of equal?
   487 00000480 <res 00000008>          	resq 1
   488                                  free_var_145:	; location of assoc
   489 00000488 <res 00000008>          	resq 1
   490                                  
   491                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar
   492                                  global main
   493                                  section .text
   494                                  main:
   495 00000000 C8000000                        enter 0, 0
   496                                          
   497                                  	; building closure for null?
   498 00000004 48BF-                   	mov rdi, free_var_0
   498 00000006 [0000000000000000] 
   499 0000000E 48BE-                   	mov rsi, L_code_ptr_is_null
   499 00000010 [5113010000000000] 
   500 00000018 E88A120100              	call bind_primitive
   501                                  
   502                                  	; building closure for pair?
   503 0000001D 48BF-                   	mov rdi, free_var_1
   503 0000001F [0800000000000000] 
   504 00000027 48BE-                   	mov rsi, L_code_ptr_is_pair
   504 00000029 [8713010000000000] 
   505 00000031 E871120100              	call bind_primitive
   506                                  
   507                                  	; building closure for void?
   508 00000036 48BF-                   	mov rdi, free_var_2
   508 00000038 [1000000000000000] 
   509 00000040 48BE-                   	mov rsi, L_code_ptr_is_void
   509 00000042 [BD13010000000000] 
   510 0000004A E858120100              	call bind_primitive
   511                                  
   512                                  	; building closure for char?
   513 0000004F 48BF-                   	mov rdi, free_var_3
   513 00000051 [1800000000000000] 
   514 00000059 48BE-                   	mov rsi, L_code_ptr_is_char
   514 0000005B [F313010000000000] 
   515 00000063 E83F120100              	call bind_primitive
   516                                  
   517                                  	; building closure for string?
   518 00000068 48BF-                   	mov rdi, free_var_4
   518 0000006A [2000000000000000] 
   519 00000072 48BE-                   	mov rsi, L_code_ptr_is_string
   519 00000074 [2914010000000000] 
   520 0000007C E826120100              	call bind_primitive
   521                                  
   522                                  	; building closure for symbol?
   523 00000081 48BF-                   	mov rdi, free_var_5
   523 00000083 [2800000000000000] 
   524 0000008B 48BE-                   	mov rsi, L_code_ptr_is_symbol
   524 0000008D [5F14010000000000] 
   525 00000095 E80D120100              	call bind_primitive
   526                                  
   527                                  	; building closure for vector?
   528 0000009A 48BF-                   	mov rdi, free_var_6
   528 0000009C [3000000000000000] 
   529 000000A4 48BE-                   	mov rsi, L_code_ptr_is_vector
   529 000000A6 [9514010000000000] 
   530 000000AE E8F4110100              	call bind_primitive
   531                                  
   532                                  	; building closure for procedure?
   533 000000B3 48BF-                   	mov rdi, free_var_7
   533 000000B5 [3800000000000000] 
   534 000000BD 48BE-                   	mov rsi, L_code_ptr_is_closure
   534 000000BF [CB14010000000000] 
   535 000000C7 E8DB110100              	call bind_primitive
   536                                  
   537                                  	; building closure for real?
   538 000000CC 48BF-                   	mov rdi, free_var_8
   538 000000CE [4000000000000000] 
   539 000000D6 48BE-                   	mov rsi, L_code_ptr_is_real
   539 000000D8 [0115010000000000] 
   540 000000E0 E8C2110100              	call bind_primitive
   541                                  
   542                                  	; building closure for rational?
   543 000000E5 48BF-                   	mov rdi, free_var_9
   543 000000E7 [4800000000000000] 
   544 000000EF 48BE-                   	mov rsi, L_code_ptr_is_rational
   544 000000F1 [3715010000000000] 
   545 000000F9 E8A9110100              	call bind_primitive
   546                                  
   547                                  	; building closure for boolean?
   548 000000FE 48BF-                   	mov rdi, free_var_10
   548 00000100 [5000000000000000] 
   549 00000108 48BE-                   	mov rsi, L_code_ptr_is_boolean
   549 0000010A [6D15010000000000] 
   550 00000112 E890110100              	call bind_primitive
   551                                  
   552                                  	; building closure for number?
   553 00000117 48BF-                   	mov rdi, free_var_11
   553 00000119 [5800000000000000] 
   554 00000121 48BE-                   	mov rsi, L_code_ptr_is_number
   554 00000123 [A515010000000000] 
   555 0000012B E877110100              	call bind_primitive
   556                                  
   557                                  	; building closure for collection?
   558 00000130 48BF-                   	mov rdi, free_var_12
   558 00000132 [6000000000000000] 
   559 0000013A 48BE-                   	mov rsi, L_code_ptr_is_collection
   559 0000013C [DD15010000000000] 
   560 00000144 E85E110100              	call bind_primitive
   561                                  
   562                                  	; building closure for cons
   563 00000149 48BF-                   	mov rdi, free_var_13
   563 0000014B [6800000000000000] 
   564 00000153 48BE-                   	mov rsi, L_code_ptr_cons
   564 00000155 [1516010000000000] 
   565 0000015D E845110100              	call bind_primitive
   566                                  
   567                                  	; building closure for display-sexpr
   568 00000162 48BF-                   	mov rdi, free_var_14
   568 00000164 [7000000000000000] 
   569 0000016C 48BE-                   	mov rsi, L_code_ptr_display_sexpr
   569 0000016E [4916010000000000] 
   570 00000176 E82C110100              	call bind_primitive
   571                                  
   572                                  	; building closure for write-char
   573 0000017B 48BF-                   	mov rdi, free_var_15
   573 0000017D [7800000000000000] 
   574 00000185 48BE-                   	mov rsi, L_code_ptr_write_char
   574 00000187 [7316010000000000] 
   575 0000018F E813110100              	call bind_primitive
   576                                  
   577                                  	; building closure for car
   578 00000194 48BF-                   	mov rdi, free_var_16
   578 00000196 [8000000000000000] 
   579 0000019E 48BE-                   	mov rsi, L_code_ptr_car
   579 000001A0 [CA16010000000000] 
   580 000001A8 E8FA100100              	call bind_primitive
   581                                  
   582                                  	; building closure for cdr
   583 000001AD 48BF-                   	mov rdi, free_var_17
   583 000001AF [8800000000000000] 
   584 000001B7 48BE-                   	mov rsi, L_code_ptr_cdr
   584 000001B9 [F216010000000000] 
   585 000001C1 E8E1100100              	call bind_primitive
   586                                  
   587                                  	; building closure for string-length
   588 000001C6 48BF-                   	mov rdi, free_var_18
   588 000001C8 [9000000000000000] 
   589 000001D0 48BE-                   	mov rsi, L_code_ptr_string_length
   589 000001D2 [1A17010000000000] 
   590 000001DA E8C8100100              	call bind_primitive
   591                                  
   592                                  	; building closure for vector-length
   593 000001DF 48BF-                   	mov rdi, free_var_19
   593 000001E1 [9800000000000000] 
   594 000001E9 48BE-                   	mov rsi, L_code_ptr_vector_length
   594 000001EB [4717010000000000] 
   595 000001F3 E8AF100100              	call bind_primitive
   596                                  
   597                                  	; building closure for real->integer
   598 000001F8 48BF-                   	mov rdi, free_var_20
   598 000001FA [A000000000000000] 
   599 00000202 48BE-                   	mov rsi, L_code_ptr_real_to_integer
   599 00000204 [7417010000000000] 
   600 0000020C E896100100              	call bind_primitive
   601                                  
   602                                  	; building closure for exit
   603 00000211 48BF-                   	mov rdi, free_var_21
   603 00000213 [A800000000000000] 
   604 0000021B 48BE-                   	mov rsi, L_code_ptr_exit
   604 0000021D [A717010000000000] 
   605 00000225 E87D100100              	call bind_primitive
   606                                  
   607                                  	; building closure for integer->real
   608 0000022A 48BF-                   	mov rdi, free_var_22
   608 0000022C [B000000000000000] 
   609 00000234 48BE-                   	mov rsi, L_code_ptr_integer_to_real
   609 00000236 [C417010000000000] 
   610 0000023E E864100100              	call bind_primitive
   611                                  
   612                                  	; building closure for rational->real
   613 00000243 48BF-                   	mov rdi, free_var_23
   613 00000245 [B800000000000000] 
   614 0000024D 48BE-                   	mov rsi, L_code_ptr_rational_to_real
   614 0000024F [0118010000000000] 
   615 00000257 E84B100100              	call bind_primitive
   616                                  
   617                                  	; building closure for char->integer
   618 0000025C 48BF-                   	mov rdi, free_var_24
   618 0000025E [C000000000000000] 
   619 00000266 48BE-                   	mov rsi, L_code_ptr_char_to_integer
   619 00000268 [4018010000000000] 
   620 00000270 E832100100              	call bind_primitive
   621                                  
   622                                  	; building closure for integer->char
   623 00000275 48BF-                   	mov rdi, free_var_25
   623 00000277 [C800000000000000] 
   624 0000027F 48BE-                   	mov rsi, L_code_ptr_integer_to_char
   624 00000281 [7518010000000000] 
   625 00000289 E819100100              	call bind_primitive
   626                                  
   627                                  	; building closure for trng
   628 0000028E 48BF-                   	mov rdi, free_var_26
   628 00000290 [D000000000000000] 
   629 00000298 48BE-                   	mov rsi, L_code_ptr_trng
   629 0000029A [CF18010000000000] 
   630 000002A2 E800100100              	call bind_primitive
   631                                  
   632                                  	; building closure for zero?
   633 000002A7 48BF-                   	mov rdi, free_var_27
   633 000002A9 [D800000000000000] 
   634 000002B1 48BE-                   	mov rsi, L_code_ptr_is_zero
   634 000002B3 [F218010000000000] 
   635 000002BB E8E70F0100              	call bind_primitive
   636                                  
   637                                  	; building closure for integer?
   638 000002C0 48BF-                   	mov rdi, free_var_28
   638 000002C2 [E000000000000000] 
   639 000002CA 48BE-                   	mov rsi, L_code_ptr_is_integer
   639 000002CC [4D19010000000000] 
   640 000002D4 E8CE0F0100              	call bind_primitive
   641                                  
   642                                  	; building closure for __bin-apply
   643 000002D9 48BF-                   	mov rdi, free_var_29
   643 000002DB [E800000000000000] 
   644 000002E3 48BE-                   	mov rsi, L_code_ptr_bin_apply
   644 000002E5 [CF12010000000000] 
   645 000002ED E8B50F0100              	call bind_primitive
   646                                  
   647                                  	; building closure for __bin-add-rr
   648 000002F2 48BF-                   	mov rdi, free_var_30
   648 000002F4 [F000000000000000] 
   649 000002FC 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
   649 000002FE [8A19010000000000] 
   650 00000306 E89C0F0100              	call bind_primitive
   651                                  
   652                                  	; building closure for __bin-sub-rr
   653 0000030B 48BF-                   	mov rdi, free_var_31
   653 0000030D [F800000000000000] 
   654 00000315 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
   654 00000317 [CE19010000000000] 
   655 0000031F E8830F0100              	call bind_primitive
   656                                  
   657                                  	; building closure for __bin-mul-rr
   658 00000324 48BF-                   	mov rdi, free_var_32
   658 00000326 [0001000000000000] 
   659 0000032E 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
   659 00000330 [121A010000000000] 
   660 00000338 E86A0F0100              	call bind_primitive
   661                                  
   662                                  	; building closure for __bin-div-rr
   663 0000033D 48BF-                   	mov rdi, free_var_33
   663 0000033F [0801000000000000] 
   664 00000347 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
   664 00000349 [561A010000000000] 
   665 00000351 E8510F0100              	call bind_primitive
   666                                  
   667                                  	; building closure for __bin-add-qq
   668 00000356 48BF-                   	mov rdi, free_var_34
   668 00000358 [1001000000000000] 
   669 00000360 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
   669 00000362 [A81A010000000000] 
   670 0000036A E8380F0100              	call bind_primitive
   671                                  
   672                                  	; building closure for __bin-sub-qq
   673 0000036F 48BF-                   	mov rdi, free_var_35
   673 00000371 [1801000000000000] 
   674 00000379 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
   674 0000037B [101B010000000000] 
   675 00000383 E81F0F0100              	call bind_primitive
   676                                  
   677                                  	; building closure for __bin-mul-qq
   678 00000388 48BF-                   	mov rdi, free_var_36
   678 0000038A [2001000000000000] 
   679 00000392 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
   679 00000394 [781B010000000000] 
   680 0000039C E8060F0100              	call bind_primitive
   681                                  
   682                                  	; building closure for __bin-div-qq
   683 000003A1 48BF-                   	mov rdi, free_var_37
   683 000003A3 [2801000000000000] 
   684 000003AB 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
   684 000003AD [D01B010000000000] 
   685 000003B5 E8ED0E0100              	call bind_primitive
   686                                  
   687                                  	; building closure for error
   688 000003BA 48BF-                   	mov rdi, free_var_38
   688 000003BC [3001000000000000] 
   689 000003C4 48BE-                   	mov rsi, L_code_ptr_error
   689 000003C6 [9E1C010000000000] 
   690 000003CE E8D40E0100              	call bind_primitive
   691                                  
   692                                  	; building closure for __bin-less-than-rr
   693 000003D3 48BF-                   	mov rdi, free_var_39
   693 000003D5 [3801000000000000] 
   694 000003DD 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
   694 000003DF [551D010000000000] 
   695 000003E7 E8BB0E0100              	call bind_primitive
   696                                  
   697                                  	; building closure for __bin-less-than-qq
   698 000003EC 48BF-                   	mov rdi, free_var_40
   698 000003EE [4001000000000000] 
   699 000003F6 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
   699 000003F8 [AC1D010000000000] 
   700 00000400 E8A20E0100              	call bind_primitive
   701                                  
   702                                  	; building closure for __bin-equal-rr
   703 00000405 48BF-                   	mov rdi, free_var_41
   703 00000407 [4801000000000000] 
   704 0000040F 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
   704 00000411 [0F1E010000000000] 
   705 00000419 E8890E0100              	call bind_primitive
   706                                  
   707                                  	; building closure for __bin-equal-qq
   708 0000041E 48BF-                   	mov rdi, free_var_42
   708 00000420 [5001000000000000] 
   709 00000428 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
   709 0000042A [661E010000000000] 
   710 00000432 E8700E0100              	call bind_primitive
   711                                  
   712                                  	; building closure for quotient
   713 00000437 48BF-                   	mov rdi, free_var_43
   713 00000439 [5801000000000000] 
   714 00000441 48BE-                   	mov rsi, L_code_ptr_quotient
   714 00000443 [C91E010000000000] 
   715 0000044B E8570E0100              	call bind_primitive
   716                                  
   717                                  	; building closure for remainder
   718 00000450 48BF-                   	mov rdi, free_var_44
   718 00000452 [6001000000000000] 
   719 0000045A 48BE-                   	mov rsi, L_code_ptr_remainder
   719 0000045C [2F1F010000000000] 
   720 00000464 E83E0E0100              	call bind_primitive
   721                                  
   722                                  	; building closure for set-car!
   723 00000469 48BF-                   	mov rdi, free_var_45
   723 0000046B [6801000000000000] 
   724 00000473 48BE-                   	mov rsi, L_code_ptr_set_car
   724 00000475 [951F010000000000] 
   725 0000047D E8250E0100              	call bind_primitive
   726                                  
   727                                  	; building closure for set-cdr!
   728 00000482 48BF-                   	mov rdi, free_var_46
   728 00000484 [7001000000000000] 
   729 0000048C 48BE-                   	mov rsi, L_code_ptr_set_cdr
   729 0000048E [CB1F010000000000] 
   730 00000496 E80C0E0100              	call bind_primitive
   731                                  
   732                                  	; building closure for string-ref
   733 0000049B 48BF-                   	mov rdi, free_var_47
   733 0000049D [7801000000000000] 
   734 000004A5 48BE-                   	mov rsi, L_code_ptr_string_ref
   734 000004A7 [0120010000000000] 
   735 000004AF E8F30D0100              	call bind_primitive
   736                                  
   737                                  	; building closure for vector-ref
   738 000004B4 48BF-                   	mov rdi, free_var_48
   738 000004B6 [8001000000000000] 
   739 000004BE 48BE-                   	mov rsi, L_code_ptr_vector_ref
   739 000004C0 [6C20010000000000] 
   740 000004C8 E8DA0D0100              	call bind_primitive
   741                                  
   742                                  	; building closure for vector-set!
   743 000004CD 48BF-                   	mov rdi, free_var_49
   743 000004CF [8801000000000000] 
   744 000004D7 48BE-                   	mov rsi, L_code_ptr_vector_set
   744 000004D9 [C820010000000000] 
   745 000004E1 E8C10D0100              	call bind_primitive
   746                                  
   747                                  	; building closure for string-set!
   748 000004E6 48BF-                   	mov rdi, free_var_50
   748 000004E8 [9001000000000000] 
   749 000004F0 48BE-                   	mov rsi, L_code_ptr_string_set
   749 000004F2 [3221010000000000] 
   750 000004FA E8A80D0100              	call bind_primitive
   751                                  
   752                                  	; building closure for make-vector
   753 000004FF 48BF-                   	mov rdi, free_var_51
   753 00000501 [9801000000000000] 
   754 00000509 48BE-                   	mov rsi, L_code_ptr_make_vector
   754 0000050B [A721010000000000] 
   755 00000513 E88F0D0100              	call bind_primitive
   756                                  
   757                                  	; building closure for make-string
   758 00000518 48BF-                   	mov rdi, free_var_52
   758 0000051A [A001000000000000] 
   759 00000522 48BE-                   	mov rsi, L_code_ptr_make_string
   759 00000524 [1122010000000000] 
   760 0000052C E8760D0100              	call bind_primitive
   761                                  
   762                                  	; building closure for numerator
   763 00000531 48BF-                   	mov rdi, free_var_53
   763 00000533 [A801000000000000] 
   764 0000053B 48BE-                   	mov rsi, L_code_ptr_numerator
   764 0000053D [8322010000000000] 
   765 00000545 E85D0D0100              	call bind_primitive
   766                                  
   767                                  	; building closure for denominator
   768 0000054A 48BF-                   	mov rdi, free_var_54
   768 0000054C [B001000000000000] 
   769 00000554 48BE-                   	mov rsi, L_code_ptr_denominator
   769 00000556 [B022010000000000] 
   770 0000055E E8440D0100              	call bind_primitive
   771                                  
   772                                  	; building closure for eq?
   773 00000563 48BF-                   	mov rdi, free_var_55
   773 00000565 [B801000000000000] 
   774 0000056D 48BE-                   	mov rsi, L_code_ptr_eq
   774 0000056F [DD22010000000000] 
   775 00000577 E82B0D0100              	call bind_primitive
   776                                  
   777 0000057C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   778 00000581 E890070100              	call malloc
   779 00000586 50                      	push rax
   780 00000587 BF00000000              	mov rdi, 8 * 0	; new rib
   781 0000058C E885070100              	call malloc
   782 00000591 50                      	push rax
   783 00000592 BF08000000              	mov rdi, 8 * 1	; extended env
   784 00000597 E87A070100              	call malloc
   785 0000059C 488B7D10                	mov rdi, ENV
   786 000005A0 BE00000000              	mov rsi, 0
   787 000005A5 BA01000000              	mov rdx, 1
   788                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
   789 000005AA 4883FE00                	cmp rsi, 0
   790 000005AE 7410                    	je .L_lambda_simple_env_end_0001
   791 000005B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   792 000005B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
   793 000005B8 48FFC6                  	inc rsi
   794 000005BB 48FFC2                  	inc rdx
   795 000005BE EBEA                    	jmp .L_lambda_simple_env_loop_0001
   796                                  .L_lambda_simple_env_end_0001:
   797 000005C0 5B                      	pop rbx
   798 000005C1 BE00000000              	mov rsi, 0
   799                                  .L_lambda_simple_params_loop_0001:	; copy params
   800 000005C6 4883FE00                	cmp rsi, 0
   801 000005CA 740E                    	je .L_lambda_simple_params_end_0001
   802 000005CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   803 000005D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
   804 000005D5 48FFC6                  	inc rsi
   805 000005D8 EBEC                    	jmp .L_lambda_simple_params_loop_0001
   806                                  .L_lambda_simple_params_end_0001:
   807 000005DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   808 000005DD 4889C3                  	mov rbx, rax
   809 000005E0 58                      	pop rax
   810 000005E1 C60005                  	mov byte [rax], T_closure
   811 000005E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   812 000005E8 48C74009[F5050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
   813 000005F0 E99F000000              	jmp .L_lambda_simple_end_0001
   814                                  .L_lambda_simple_code_0001:	; lambda-simple body
   815 000005F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
   816 000005FB 740B                    	je .L_lambda_simple_arity_check_ok_0001
   817 000005FD FF742410                	push qword [rsp + 8 * 2]
   818 00000601 6A01                    	push 1
   819 00000603 E9C7060100              	jmp L_error_incorrect_arity_simple
   820                                  .L_lambda_simple_arity_check_ok_0001:
   821 00000608 C8000000                	enter 0, 0
   822 0000060C 488B4520                mov rax, qword [rbp + 32]
   823 00000610 50                      	push rax
   824 00000611 6A01                    	push 1
   825 00000613 488B0425[80000000]      	mov rax, qword [free_var_16]
   826 0000061B 803805                  	cmp byte [rax], T_closure 
   827 0000061E 0F857A160100                    jne L_code_ptr_error
   828                                  
   829 00000624 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
   830                                  
   831 00000628 53                              push rbx
   832                                  
   833 00000629 FF5009                          call SOB_CLOSURE_CODE(rax)
   834                                  
   835 0000062C 50                              	push rax
   836 0000062D 6A01                    	push 1
   837 0000062F 488B0425[80000000]      	mov rax, qword [free_var_16]
   838                                  .L_lambda_simple_arity_check_ok_0002:
   839 00000637 803805                  	cmp byte [rax], T_closure
   840                                  
   841 0000063A 0F855E160100                    jne L_code_ptr_error                      ; rax <- proc
   842                                  
   843                                  
   844 00000640 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
   845                                  
   846 00000644 53                              push rbx                                  ; env pushed
   847                                  
   848 00000645 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
   849                                  
   850                                  
   851 00000648 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
   852                                  
   853                                          
   854                                          
   855 0000064B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
   856                                  
   857 0000064F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
   858                                  
   859                                  
   860 00000654 4D89CA                          mov r10, r9
   861 00000657 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
   862                                  
   863                                                                                         
   864 0000065B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
   865 0000065E 4983C404                        add r12, 4
   866                                  
   867 00000662 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
   868                                  .L_tc_recycle_frame_loop_0001:
   869 00000668 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
   870                                  
   871 0000066C 4E8974E500                      mov [rbp + (r12 * 8)], r14
   872                                  
   873                                  
   874                                  
   875 00000671 41BE00000000                    mov r14, 0                                ; clean box
   876                                  
   877                                  
   878                                                                  
   879 00000677 4983C2FF                        add r10, -1                               ; args_copied_counter--
   880                                  
   881 0000067B 4983C4FF                        add r12, -1 
   882                                  
   883 0000067F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
   884 00000683 75E3                    	jne .L_tc_recycle_frame_loop_0001
   885                                  .L_tc_recycle_frame_done_0001:
   886 00000685 5D                      	pop rbp                                  ; restore the old rbp
   887                                  
   888 00000686 488B4D00                        mov rcx, qword [rbp]
   889 0000068A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
   890                                            ; rbx <- code(proc)
   891                                  
   892 0000068E FFE3                            jmp rbx
   893 00000690 C9                      	leave
   894 00000691 C21800                  	ret 8 * (2 + 1)
   895                                  .L_lambda_simple_end_0001:	; new closure is in rax
   896 00000694 48890425[C0010000]      	mov qword [free_var_56], rax
   897 0000069C 48B8-                   	mov rax, sob_void
   897 0000069E [0000000000000000] 
   898                                  
   899 000006A6 4889C7                  	mov rdi, rax
   900 000006A9 E879060100              	call print_sexpr_if_not_void
   901                                  
   902 000006AE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
   903 000006B3 E85E060100              	call malloc
   904 000006B8 50                      	push rax
   905 000006B9 BF00000000              	mov rdi, 8 * 0	; new rib
   906 000006BE E853060100              	call malloc
   907 000006C3 50                      	push rax
   908 000006C4 BF08000000              	mov rdi, 8 * 1	; extended env
   909 000006C9 E848060100              	call malloc
   910 000006CE 488B7D10                	mov rdi, ENV
   911 000006D2 BE00000000              	mov rsi, 0
   912 000006D7 BA01000000              	mov rdx, 1
   913                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
   914 000006DC 4883FE00                	cmp rsi, 0
   915 000006E0 7410                    	je .L_lambda_simple_env_end_0002
   916 000006E2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
   917 000006E6 48890CD0                	mov qword [rax + 8 * rdx], rcx
   918 000006EA 48FFC6                  	inc rsi
   919 000006ED 48FFC2                  	inc rdx
   920 000006F0 EBEA                    	jmp .L_lambda_simple_env_loop_0002
   921                                  .L_lambda_simple_env_end_0002:
   922 000006F2 5B                      	pop rbx
   923 000006F3 BE00000000              	mov rsi, 0
   924                                  .L_lambda_simple_params_loop_0002:	; copy params
   925 000006F8 4883FE00                	cmp rsi, 0
   926 000006FC 740E                    	je .L_lambda_simple_params_end_0002
   927 000006FE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
   928 00000703 488914F3                	mov qword [rbx + 8 * rsi], rdx
   929 00000707 48FFC6                  	inc rsi
   930 0000070A EBEC                    	jmp .L_lambda_simple_params_loop_0002
   931                                  .L_lambda_simple_params_end_0002:
   932 0000070C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
   933 0000070F 4889C3                  	mov rbx, rax
   934 00000712 58                      	pop rax
   935 00000713 C60005                  	mov byte [rax], T_closure
   936 00000716 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
   937 0000071A 48C74009[27070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
   938 00000722 E99F000000              	jmp .L_lambda_simple_end_0002
   939                                  .L_lambda_simple_code_0002:	; lambda-simple body
   940 00000727 48837C241001            	cmp qword [rsp + 8 * 2], 1
   941 0000072D 740B                    	je .L_lambda_simple_arity_check_ok_0003
   942 0000072F FF742410                	push qword [rsp + 8 * 2]
   943 00000733 6A01                    	push 1
   944 00000735 E995050100              	jmp L_error_incorrect_arity_simple
   945                                  .L_lambda_simple_arity_check_ok_0003:
   946 0000073A C8000000                	enter 0, 0
   947 0000073E 488B4520                mov rax, qword [rbp + 32]
   948 00000742 50                      	push rax
   949 00000743 6A01                    	push 1
   950 00000745 488B0425[88000000]      	mov rax, qword [free_var_17]
   951 0000074D 803805                  	cmp byte [rax], T_closure 
   952 00000750 0F8548150100                    jne L_code_ptr_error
   953                                  
   954 00000756 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
   955                                  
   956 0000075A 53                              push rbx
   957                                  
   958 0000075B FF5009                          call SOB_CLOSURE_CODE(rax)
   959                                  
   960 0000075E 50                              	push rax
   961 0000075F 6A01                    	push 1
   962 00000761 488B0425[80000000]      	mov rax, qword [free_var_16]
   963                                  .L_lambda_simple_arity_check_ok_0004:
   964 00000769 803805                  	cmp byte [rax], T_closure
   965                                  
   966 0000076C 0F852C150100                    jne L_code_ptr_error                      ; rax <- proc
   967                                  
   968                                  
   969 00000772 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
   970                                  
   971 00000776 53                              push rbx                                  ; env pushed
   972                                  
   973 00000777 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
   974                                  
   975                                  
   976 0000077A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
   977                                  
   978                                          
   979                                          
   980 0000077D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
   981                                  
   982 00000781 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
   983                                  
   984                                  
   985 00000786 4D89CA                          mov r10, r9
   986 00000789 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
   987                                  
   988                                                                                         
   989 0000078D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
   990 00000790 4983C404                        add r12, 4
   991                                  
   992 00000794 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
   993                                  .L_tc_recycle_frame_loop_0002:
   994 0000079A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
   995                                  
   996 0000079E 4E8974E500                      mov [rbp + (r12 * 8)], r14
   997                                  
   998                                  
   999                                  
  1000 000007A3 41BE00000000                    mov r14, 0                                ; clean box
  1001                                  
  1002                                  
  1003                                                                  
  1004 000007A9 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1005                                  
  1006 000007AD 4983C4FF                        add r12, -1 
  1007                                  
  1008 000007B1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1009 000007B5 75E3                    	jne .L_tc_recycle_frame_loop_0002
  1010                                  .L_tc_recycle_frame_done_0002:
  1011 000007B7 5D                      	pop rbp                                  ; restore the old rbp
  1012                                  
  1013 000007B8 488B4D00                        mov rcx, qword [rbp]
  1014 000007BC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1015                                            ; rbx <- code(proc)
  1016                                  
  1017 000007C0 FFE3                            jmp rbx
  1018 000007C2 C9                      	leave
  1019 000007C3 C21800                  	ret 8 * (2 + 1)
  1020                                  .L_lambda_simple_end_0002:	; new closure is in rax
  1021 000007C6 48890425[C8010000]      	mov qword [free_var_57], rax
  1022 000007CE 48B8-                   	mov rax, sob_void
  1022 000007D0 [0000000000000000] 
  1023                                  
  1024 000007D8 4889C7                  	mov rdi, rax
  1025 000007DB E847050100              	call print_sexpr_if_not_void
  1026                                  
  1027 000007E0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1028 000007E5 E82C050100              	call malloc
  1029 000007EA 50                      	push rax
  1030 000007EB BF00000000              	mov rdi, 8 * 0	; new rib
  1031 000007F0 E821050100              	call malloc
  1032 000007F5 50                      	push rax
  1033 000007F6 BF08000000              	mov rdi, 8 * 1	; extended env
  1034 000007FB E816050100              	call malloc
  1035 00000800 488B7D10                	mov rdi, ENV
  1036 00000804 BE00000000              	mov rsi, 0
  1037 00000809 BA01000000              	mov rdx, 1
  1038                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  1039 0000080E 4883FE00                	cmp rsi, 0
  1040 00000812 7410                    	je .L_lambda_simple_env_end_0003
  1041 00000814 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1042 00000818 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1043 0000081C 48FFC6                  	inc rsi
  1044 0000081F 48FFC2                  	inc rdx
  1045 00000822 EBEA                    	jmp .L_lambda_simple_env_loop_0003
  1046                                  .L_lambda_simple_env_end_0003:
  1047 00000824 5B                      	pop rbx
  1048 00000825 BE00000000              	mov rsi, 0
  1049                                  .L_lambda_simple_params_loop_0003:	; copy params
  1050 0000082A 4883FE00                	cmp rsi, 0
  1051 0000082E 740E                    	je .L_lambda_simple_params_end_0003
  1052 00000830 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1053 00000835 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1054 00000839 48FFC6                  	inc rsi
  1055 0000083C EBEC                    	jmp .L_lambda_simple_params_loop_0003
  1056                                  .L_lambda_simple_params_end_0003:
  1057 0000083E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1058 00000841 4889C3                  	mov rbx, rax
  1059 00000844 58                      	pop rax
  1060 00000845 C60005                  	mov byte [rax], T_closure
  1061 00000848 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1062 0000084C 48C74009[59080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
  1063 00000854 E99F000000              	jmp .L_lambda_simple_end_0003
  1064                                  .L_lambda_simple_code_0003:	; lambda-simple body
  1065 00000859 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1066 0000085F 740B                    	je .L_lambda_simple_arity_check_ok_0005
  1067 00000861 FF742410                	push qword [rsp + 8 * 2]
  1068 00000865 6A01                    	push 1
  1069 00000867 E963040100              	jmp L_error_incorrect_arity_simple
  1070                                  .L_lambda_simple_arity_check_ok_0005:
  1071 0000086C C8000000                	enter 0, 0
  1072 00000870 488B4520                mov rax, qword [rbp + 32]
  1073 00000874 50                      	push rax
  1074 00000875 6A01                    	push 1
  1075 00000877 488B0425[80000000]      	mov rax, qword [free_var_16]
  1076 0000087F 803805                  	cmp byte [rax], T_closure 
  1077 00000882 0F8516140100                    jne L_code_ptr_error
  1078                                  
  1079 00000888 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1080                                  
  1081 0000088C 53                              push rbx
  1082                                  
  1083 0000088D FF5009                          call SOB_CLOSURE_CODE(rax)
  1084                                  
  1085 00000890 50                              	push rax
  1086 00000891 6A01                    	push 1
  1087 00000893 488B0425[88000000]      	mov rax, qword [free_var_17]
  1088                                  .L_lambda_simple_arity_check_ok_0006:
  1089 0000089B 803805                  	cmp byte [rax], T_closure
  1090                                  
  1091 0000089E 0F85FA130100                    jne L_code_ptr_error                      ; rax <- proc
  1092                                  
  1093                                  
  1094 000008A4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1095                                  
  1096 000008A8 53                              push rbx                                  ; env pushed
  1097                                  
  1098 000008A9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1099                                  
  1100                                  
  1101 000008AC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1102                                  
  1103                                          
  1104                                          
  1105 000008AF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1106                                  
  1107 000008B3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1108                                  
  1109                                  
  1110 000008B8 4D89CA                          mov r10, r9
  1111 000008BB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  1112                                  
  1113                                                                                         
  1114 000008BF 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1115 000008C2 4983C404                        add r12, 4
  1116                                  
  1117 000008C6 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1118                                  .L_tc_recycle_frame_loop_0003:
  1119 000008CC 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  1120                                  
  1121 000008D0 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1122                                  
  1123                                  
  1124                                  
  1125 000008D5 41BE00000000                    mov r14, 0                                ; clean box
  1126                                  
  1127                                  
  1128                                                                  
  1129 000008DB 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1130                                  
  1131 000008DF 4983C4FF                        add r12, -1 
  1132                                  
  1133 000008E3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1134 000008E7 75E3                    	jne .L_tc_recycle_frame_loop_0003
  1135                                  .L_tc_recycle_frame_done_0003:
  1136 000008E9 5D                      	pop rbp                                  ; restore the old rbp
  1137                                  
  1138 000008EA 488B4D00                        mov rcx, qword [rbp]
  1139 000008EE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1140                                            ; rbx <- code(proc)
  1141                                  
  1142 000008F2 FFE3                            jmp rbx
  1143 000008F4 C9                      	leave
  1144 000008F5 C21800                  	ret 8 * (2 + 1)
  1145                                  .L_lambda_simple_end_0003:	; new closure is in rax
  1146 000008F8 48890425[D0010000]      	mov qword [free_var_58], rax
  1147 00000900 48B8-                   	mov rax, sob_void
  1147 00000902 [0000000000000000] 
  1148                                  
  1149 0000090A 4889C7                  	mov rdi, rax
  1150 0000090D E815040100              	call print_sexpr_if_not_void
  1151                                  
  1152 00000912 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1153 00000917 E8FA030100              	call malloc
  1154 0000091C 50                      	push rax
  1155 0000091D BF00000000              	mov rdi, 8 * 0	; new rib
  1156 00000922 E8EF030100              	call malloc
  1157 00000927 50                      	push rax
  1158 00000928 BF08000000              	mov rdi, 8 * 1	; extended env
  1159 0000092D E8E4030100              	call malloc
  1160 00000932 488B7D10                	mov rdi, ENV
  1161 00000936 BE00000000              	mov rsi, 0
  1162 0000093B BA01000000              	mov rdx, 1
  1163                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  1164 00000940 4883FE00                	cmp rsi, 0
  1165 00000944 7410                    	je .L_lambda_simple_env_end_0004
  1166 00000946 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1167 0000094A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1168 0000094E 48FFC6                  	inc rsi
  1169 00000951 48FFC2                  	inc rdx
  1170 00000954 EBEA                    	jmp .L_lambda_simple_env_loop_0004
  1171                                  .L_lambda_simple_env_end_0004:
  1172 00000956 5B                      	pop rbx
  1173 00000957 BE00000000              	mov rsi, 0
  1174                                  .L_lambda_simple_params_loop_0004:	; copy params
  1175 0000095C 4883FE00                	cmp rsi, 0
  1176 00000960 740E                    	je .L_lambda_simple_params_end_0004
  1177 00000962 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1178 00000967 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1179 0000096B 48FFC6                  	inc rsi
  1180 0000096E EBEC                    	jmp .L_lambda_simple_params_loop_0004
  1181                                  .L_lambda_simple_params_end_0004:
  1182 00000970 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1183 00000973 4889C3                  	mov rbx, rax
  1184 00000976 58                      	pop rax
  1185 00000977 C60005                  	mov byte [rax], T_closure
  1186 0000097A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1187 0000097E 48C74009[8B090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
  1188 00000986 E99F000000              	jmp .L_lambda_simple_end_0004
  1189                                  .L_lambda_simple_code_0004:	; lambda-simple body
  1190 0000098B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1191 00000991 740B                    	je .L_lambda_simple_arity_check_ok_0007
  1192 00000993 FF742410                	push qword [rsp + 8 * 2]
  1193 00000997 6A01                    	push 1
  1194 00000999 E931030100              	jmp L_error_incorrect_arity_simple
  1195                                  .L_lambda_simple_arity_check_ok_0007:
  1196 0000099E C8000000                	enter 0, 0
  1197 000009A2 488B4520                mov rax, qword [rbp + 32]
  1198 000009A6 50                      	push rax
  1199 000009A7 6A01                    	push 1
  1200 000009A9 488B0425[88000000]      	mov rax, qword [free_var_17]
  1201 000009B1 803805                  	cmp byte [rax], T_closure 
  1202 000009B4 0F85E4120100                    jne L_code_ptr_error
  1203                                  
  1204 000009BA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1205                                  
  1206 000009BE 53                              push rbx
  1207                                  
  1208 000009BF FF5009                          call SOB_CLOSURE_CODE(rax)
  1209                                  
  1210 000009C2 50                              	push rax
  1211 000009C3 6A01                    	push 1
  1212 000009C5 488B0425[88000000]      	mov rax, qword [free_var_17]
  1213                                  .L_lambda_simple_arity_check_ok_0008:
  1214 000009CD 803805                  	cmp byte [rax], T_closure
  1215                                  
  1216 000009D0 0F85C8120100                    jne L_code_ptr_error                      ; rax <- proc
  1217                                  
  1218                                  
  1219 000009D6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1220                                  
  1221 000009DA 53                              push rbx                                  ; env pushed
  1222                                  
  1223 000009DB FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1224                                  
  1225                                  
  1226 000009DE FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1227                                  
  1228                                          
  1229                                          
  1230 000009E1 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1231                                  
  1232 000009E5 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1233                                  
  1234                                  
  1235 000009EA 4D89CA                          mov r10, r9
  1236 000009ED 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  1237                                  
  1238                                                                                         
  1239 000009F1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1240 000009F4 4983C404                        add r12, 4
  1241                                  
  1242 000009F8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1243                                  .L_tc_recycle_frame_loop_0004:
  1244 000009FE 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  1245                                  
  1246 00000A02 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1247                                  
  1248                                  
  1249                                  
  1250 00000A07 41BE00000000                    mov r14, 0                                ; clean box
  1251                                  
  1252                                  
  1253                                                                  
  1254 00000A0D 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1255                                  
  1256 00000A11 4983C4FF                        add r12, -1 
  1257                                  
  1258 00000A15 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1259 00000A19 75E3                    	jne .L_tc_recycle_frame_loop_0004
  1260                                  .L_tc_recycle_frame_done_0004:
  1261 00000A1B 5D                      	pop rbp                                  ; restore the old rbp
  1262                                  
  1263 00000A1C 488B4D00                        mov rcx, qword [rbp]
  1264 00000A20 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1265                                            ; rbx <- code(proc)
  1266                                  
  1267 00000A24 FFE3                            jmp rbx
  1268 00000A26 C9                      	leave
  1269 00000A27 C21800                  	ret 8 * (2 + 1)
  1270                                  .L_lambda_simple_end_0004:	; new closure is in rax
  1271 00000A2A 48890425[D8010000]      	mov qword [free_var_59], rax
  1272 00000A32 48B8-                   	mov rax, sob_void
  1272 00000A34 [0000000000000000] 
  1273                                  
  1274 00000A3C 4889C7                  	mov rdi, rax
  1275 00000A3F E8E3020100              	call print_sexpr_if_not_void
  1276                                  
  1277 00000A44 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1278 00000A49 E8C8020100              	call malloc
  1279 00000A4E 50                      	push rax
  1280 00000A4F BF00000000              	mov rdi, 8 * 0	; new rib
  1281 00000A54 E8BD020100              	call malloc
  1282 00000A59 50                      	push rax
  1283 00000A5A BF08000000              	mov rdi, 8 * 1	; extended env
  1284 00000A5F E8B2020100              	call malloc
  1285 00000A64 488B7D10                	mov rdi, ENV
  1286 00000A68 BE00000000              	mov rsi, 0
  1287 00000A6D BA01000000              	mov rdx, 1
  1288                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  1289 00000A72 4883FE00                	cmp rsi, 0
  1290 00000A76 7410                    	je .L_lambda_simple_env_end_0005
  1291 00000A78 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1292 00000A7C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1293 00000A80 48FFC6                  	inc rsi
  1294 00000A83 48FFC2                  	inc rdx
  1295 00000A86 EBEA                    	jmp .L_lambda_simple_env_loop_0005
  1296                                  .L_lambda_simple_env_end_0005:
  1297 00000A88 5B                      	pop rbx
  1298 00000A89 BE00000000              	mov rsi, 0
  1299                                  .L_lambda_simple_params_loop_0005:	; copy params
  1300 00000A8E 4883FE00                	cmp rsi, 0
  1301 00000A92 740E                    	je .L_lambda_simple_params_end_0005
  1302 00000A94 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1303 00000A99 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1304 00000A9D 48FFC6                  	inc rsi
  1305 00000AA0 EBEC                    	jmp .L_lambda_simple_params_loop_0005
  1306                                  .L_lambda_simple_params_end_0005:
  1307 00000AA2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1308 00000AA5 4889C3                  	mov rbx, rax
  1309 00000AA8 58                      	pop rax
  1310 00000AA9 C60005                  	mov byte [rax], T_closure
  1311 00000AAC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1312 00000AB0 48C74009[BD0A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
  1313 00000AB8 E99F000000              	jmp .L_lambda_simple_end_0005
  1314                                  .L_lambda_simple_code_0005:	; lambda-simple body
  1315 00000ABD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1316 00000AC3 740B                    	je .L_lambda_simple_arity_check_ok_0009
  1317 00000AC5 FF742410                	push qword [rsp + 8 * 2]
  1318 00000AC9 6A01                    	push 1
  1319 00000ACB E9FF010100              	jmp L_error_incorrect_arity_simple
  1320                                  .L_lambda_simple_arity_check_ok_0009:
  1321 00000AD0 C8000000                	enter 0, 0
  1322 00000AD4 488B4520                mov rax, qword [rbp + 32]
  1323 00000AD8 50                      	push rax
  1324 00000AD9 6A01                    	push 1
  1325 00000ADB 488B0425[C0010000]      	mov rax, qword [free_var_56]
  1326 00000AE3 803805                  	cmp byte [rax], T_closure 
  1327 00000AE6 0F85B2110100                    jne L_code_ptr_error
  1328                                  
  1329 00000AEC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1330                                  
  1331 00000AF0 53                              push rbx
  1332                                  
  1333 00000AF1 FF5009                          call SOB_CLOSURE_CODE(rax)
  1334                                  
  1335 00000AF4 50                              	push rax
  1336 00000AF5 6A01                    	push 1
  1337 00000AF7 488B0425[80000000]      	mov rax, qword [free_var_16]
  1338                                  .L_lambda_simple_arity_check_ok_000a:
  1339 00000AFF 803805                  	cmp byte [rax], T_closure
  1340                                  
  1341 00000B02 0F8596110100                    jne L_code_ptr_error                      ; rax <- proc
  1342                                  
  1343                                  
  1344 00000B08 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1345                                  
  1346 00000B0C 53                              push rbx                                  ; env pushed
  1347                                  
  1348 00000B0D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1349                                  
  1350                                  
  1351 00000B10 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1352                                  
  1353                                          
  1354                                          
  1355 00000B13 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1356                                  
  1357 00000B17 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1358                                  
  1359                                  
  1360 00000B1C 4D89CA                          mov r10, r9
  1361 00000B1F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  1362                                  
  1363                                                                                         
  1364 00000B23 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1365 00000B26 4983C404                        add r12, 4
  1366                                  
  1367 00000B2A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1368                                  .L_tc_recycle_frame_loop_0005:
  1369 00000B30 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  1370                                  
  1371 00000B34 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1372                                  
  1373                                  
  1374                                  
  1375 00000B39 41BE00000000                    mov r14, 0                                ; clean box
  1376                                  
  1377                                  
  1378                                                                  
  1379 00000B3F 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1380                                  
  1381 00000B43 4983C4FF                        add r12, -1 
  1382                                  
  1383 00000B47 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1384 00000B4B 75E3                    	jne .L_tc_recycle_frame_loop_0005
  1385                                  .L_tc_recycle_frame_done_0005:
  1386 00000B4D 5D                      	pop rbp                                  ; restore the old rbp
  1387                                  
  1388 00000B4E 488B4D00                        mov rcx, qword [rbp]
  1389 00000B52 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1390                                            ; rbx <- code(proc)
  1391                                  
  1392 00000B56 FFE3                            jmp rbx
  1393 00000B58 C9                      	leave
  1394 00000B59 C21800                  	ret 8 * (2 + 1)
  1395                                  .L_lambda_simple_end_0005:	; new closure is in rax
  1396 00000B5C 48890425[E0010000]      	mov qword [free_var_60], rax
  1397 00000B64 48B8-                   	mov rax, sob_void
  1397 00000B66 [0000000000000000] 
  1398                                  
  1399 00000B6E 4889C7                  	mov rdi, rax
  1400 00000B71 E8B1010100              	call print_sexpr_if_not_void
  1401                                  
  1402 00000B76 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1403 00000B7B E896010100              	call malloc
  1404 00000B80 50                      	push rax
  1405 00000B81 BF00000000              	mov rdi, 8 * 0	; new rib
  1406 00000B86 E88B010100              	call malloc
  1407 00000B8B 50                      	push rax
  1408 00000B8C BF08000000              	mov rdi, 8 * 1	; extended env
  1409 00000B91 E880010100              	call malloc
  1410 00000B96 488B7D10                	mov rdi, ENV
  1411 00000B9A BE00000000              	mov rsi, 0
  1412 00000B9F BA01000000              	mov rdx, 1
  1413                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  1414 00000BA4 4883FE00                	cmp rsi, 0
  1415 00000BA8 7410                    	je .L_lambda_simple_env_end_0006
  1416 00000BAA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1417 00000BAE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1418 00000BB2 48FFC6                  	inc rsi
  1419 00000BB5 48FFC2                  	inc rdx
  1420 00000BB8 EBEA                    	jmp .L_lambda_simple_env_loop_0006
  1421                                  .L_lambda_simple_env_end_0006:
  1422 00000BBA 5B                      	pop rbx
  1423 00000BBB BE00000000              	mov rsi, 0
  1424                                  .L_lambda_simple_params_loop_0006:	; copy params
  1425 00000BC0 4883FE00                	cmp rsi, 0
  1426 00000BC4 740E                    	je .L_lambda_simple_params_end_0006
  1427 00000BC6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1428 00000BCB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1429 00000BCF 48FFC6                  	inc rsi
  1430 00000BD2 EBEC                    	jmp .L_lambda_simple_params_loop_0006
  1431                                  .L_lambda_simple_params_end_0006:
  1432 00000BD4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1433 00000BD7 4889C3                  	mov rbx, rax
  1434 00000BDA 58                      	pop rax
  1435 00000BDB C60005                  	mov byte [rax], T_closure
  1436 00000BDE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1437 00000BE2 48C74009[EF0B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
  1438 00000BEA E99F000000              	jmp .L_lambda_simple_end_0006
  1439                                  .L_lambda_simple_code_0006:	; lambda-simple body
  1440 00000BEF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1441 00000BF5 740B                    	je .L_lambda_simple_arity_check_ok_000b
  1442 00000BF7 FF742410                	push qword [rsp + 8 * 2]
  1443 00000BFB 6A01                    	push 1
  1444 00000BFD E9CD000100              	jmp L_error_incorrect_arity_simple
  1445                                  .L_lambda_simple_arity_check_ok_000b:
  1446 00000C02 C8000000                	enter 0, 0
  1447 00000C06 488B4520                mov rax, qword [rbp + 32]
  1448 00000C0A 50                      	push rax
  1449 00000C0B 6A01                    	push 1
  1450 00000C0D 488B0425[C8010000]      	mov rax, qword [free_var_57]
  1451 00000C15 803805                  	cmp byte [rax], T_closure 
  1452 00000C18 0F8580100100                    jne L_code_ptr_error
  1453                                  
  1454 00000C1E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1455                                  
  1456 00000C22 53                              push rbx
  1457                                  
  1458 00000C23 FF5009                          call SOB_CLOSURE_CODE(rax)
  1459                                  
  1460 00000C26 50                              	push rax
  1461 00000C27 6A01                    	push 1
  1462 00000C29 488B0425[80000000]      	mov rax, qword [free_var_16]
  1463                                  .L_lambda_simple_arity_check_ok_000c:
  1464 00000C31 803805                  	cmp byte [rax], T_closure
  1465                                  
  1466 00000C34 0F8564100100                    jne L_code_ptr_error                      ; rax <- proc
  1467                                  
  1468                                  
  1469 00000C3A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1470                                  
  1471 00000C3E 53                              push rbx                                  ; env pushed
  1472                                  
  1473 00000C3F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1474                                  
  1475                                  
  1476 00000C42 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1477                                  
  1478                                          
  1479                                          
  1480 00000C45 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1481                                  
  1482 00000C49 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1483                                  
  1484                                  
  1485 00000C4E 4D89CA                          mov r10, r9
  1486 00000C51 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  1487                                  
  1488                                                                                         
  1489 00000C55 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1490 00000C58 4983C404                        add r12, 4
  1491                                  
  1492 00000C5C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1493                                  .L_tc_recycle_frame_loop_0006:
  1494 00000C62 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  1495                                  
  1496 00000C66 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1497                                  
  1498                                  
  1499                                  
  1500 00000C6B 41BE00000000                    mov r14, 0                                ; clean box
  1501                                  
  1502                                  
  1503                                                                  
  1504 00000C71 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1505                                  
  1506 00000C75 4983C4FF                        add r12, -1 
  1507                                  
  1508 00000C79 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1509 00000C7D 75E3                    	jne .L_tc_recycle_frame_loop_0006
  1510                                  .L_tc_recycle_frame_done_0006:
  1511 00000C7F 5D                      	pop rbp                                  ; restore the old rbp
  1512                                  
  1513 00000C80 488B4D00                        mov rcx, qword [rbp]
  1514 00000C84 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1515                                            ; rbx <- code(proc)
  1516                                  
  1517 00000C88 FFE3                            jmp rbx
  1518 00000C8A C9                      	leave
  1519 00000C8B C21800                  	ret 8 * (2 + 1)
  1520                                  .L_lambda_simple_end_0006:	; new closure is in rax
  1521 00000C8E 48890425[E8010000]      	mov qword [free_var_61], rax
  1522 00000C96 48B8-                   	mov rax, sob_void
  1522 00000C98 [0000000000000000] 
  1523                                  
  1524 00000CA0 4889C7                  	mov rdi, rax
  1525 00000CA3 E87F000100              	call print_sexpr_if_not_void
  1526                                  
  1527 00000CA8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1528 00000CAD E864000100              	call malloc
  1529 00000CB2 50                      	push rax
  1530 00000CB3 BF00000000              	mov rdi, 8 * 0	; new rib
  1531 00000CB8 E859000100              	call malloc
  1532 00000CBD 50                      	push rax
  1533 00000CBE BF08000000              	mov rdi, 8 * 1	; extended env
  1534 00000CC3 E84E000100              	call malloc
  1535 00000CC8 488B7D10                	mov rdi, ENV
  1536 00000CCC BE00000000              	mov rsi, 0
  1537 00000CD1 BA01000000              	mov rdx, 1
  1538                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  1539 00000CD6 4883FE00                	cmp rsi, 0
  1540 00000CDA 7410                    	je .L_lambda_simple_env_end_0007
  1541 00000CDC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1542 00000CE0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1543 00000CE4 48FFC6                  	inc rsi
  1544 00000CE7 48FFC2                  	inc rdx
  1545 00000CEA EBEA                    	jmp .L_lambda_simple_env_loop_0007
  1546                                  .L_lambda_simple_env_end_0007:
  1547 00000CEC 5B                      	pop rbx
  1548 00000CED BE00000000              	mov rsi, 0
  1549                                  .L_lambda_simple_params_loop_0007:	; copy params
  1550 00000CF2 4883FE00                	cmp rsi, 0
  1551 00000CF6 740E                    	je .L_lambda_simple_params_end_0007
  1552 00000CF8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1553 00000CFD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1554 00000D01 48FFC6                  	inc rsi
  1555 00000D04 EBEC                    	jmp .L_lambda_simple_params_loop_0007
  1556                                  .L_lambda_simple_params_end_0007:
  1557 00000D06 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1558 00000D09 4889C3                  	mov rbx, rax
  1559 00000D0C 58                      	pop rax
  1560 00000D0D C60005                  	mov byte [rax], T_closure
  1561 00000D10 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1562 00000D14 48C74009[210D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
  1563 00000D1C E99F000000              	jmp .L_lambda_simple_end_0007
  1564                                  .L_lambda_simple_code_0007:	; lambda-simple body
  1565 00000D21 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1566 00000D27 740B                    	je .L_lambda_simple_arity_check_ok_000d
  1567 00000D29 FF742410                	push qword [rsp + 8 * 2]
  1568 00000D2D 6A01                    	push 1
  1569 00000D2F E99BFF0000              	jmp L_error_incorrect_arity_simple
  1570                                  .L_lambda_simple_arity_check_ok_000d:
  1571 00000D34 C8000000                	enter 0, 0
  1572 00000D38 488B4520                mov rax, qword [rbp + 32]
  1573 00000D3C 50                      	push rax
  1574 00000D3D 6A01                    	push 1
  1575 00000D3F 488B0425[D0010000]      	mov rax, qword [free_var_58]
  1576 00000D47 803805                  	cmp byte [rax], T_closure 
  1577 00000D4A 0F854E0F0100                    jne L_code_ptr_error
  1578                                  
  1579 00000D50 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1580                                  
  1581 00000D54 53                              push rbx
  1582                                  
  1583 00000D55 FF5009                          call SOB_CLOSURE_CODE(rax)
  1584                                  
  1585 00000D58 50                              	push rax
  1586 00000D59 6A01                    	push 1
  1587 00000D5B 488B0425[80000000]      	mov rax, qword [free_var_16]
  1588                                  .L_lambda_simple_arity_check_ok_000e:
  1589 00000D63 803805                  	cmp byte [rax], T_closure
  1590                                  
  1591 00000D66 0F85320F0100                    jne L_code_ptr_error                      ; rax <- proc
  1592                                  
  1593                                  
  1594 00000D6C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1595                                  
  1596 00000D70 53                              push rbx                                  ; env pushed
  1597                                  
  1598 00000D71 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1599                                  
  1600                                  
  1601 00000D74 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1602                                  
  1603                                          
  1604                                          
  1605 00000D77 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1606                                  
  1607 00000D7B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1608                                  
  1609                                  
  1610 00000D80 4D89CA                          mov r10, r9
  1611 00000D83 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  1612                                  
  1613                                                                                         
  1614 00000D87 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1615 00000D8A 4983C404                        add r12, 4
  1616                                  
  1617 00000D8E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1618                                  .L_tc_recycle_frame_loop_0007:
  1619 00000D94 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  1620                                  
  1621 00000D98 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1622                                  
  1623                                  
  1624                                  
  1625 00000D9D 41BE00000000                    mov r14, 0                                ; clean box
  1626                                  
  1627                                  
  1628                                                                  
  1629 00000DA3 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1630                                  
  1631 00000DA7 4983C4FF                        add r12, -1 
  1632                                  
  1633 00000DAB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1634 00000DAF 75E3                    	jne .L_tc_recycle_frame_loop_0007
  1635                                  .L_tc_recycle_frame_done_0007:
  1636 00000DB1 5D                      	pop rbp                                  ; restore the old rbp
  1637                                  
  1638 00000DB2 488B4D00                        mov rcx, qword [rbp]
  1639 00000DB6 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1640                                            ; rbx <- code(proc)
  1641                                  
  1642 00000DBA FFE3                            jmp rbx
  1643 00000DBC C9                      	leave
  1644 00000DBD C21800                  	ret 8 * (2 + 1)
  1645                                  .L_lambda_simple_end_0007:	; new closure is in rax
  1646 00000DC0 48890425[F0010000]      	mov qword [free_var_62], rax
  1647 00000DC8 48B8-                   	mov rax, sob_void
  1647 00000DCA [0000000000000000] 
  1648                                  
  1649 00000DD2 4889C7                  	mov rdi, rax
  1650 00000DD5 E84DFF0000              	call print_sexpr_if_not_void
  1651                                  
  1652 00000DDA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1653 00000DDF E832FF0000              	call malloc
  1654 00000DE4 50                      	push rax
  1655 00000DE5 BF00000000              	mov rdi, 8 * 0	; new rib
  1656 00000DEA E827FF0000              	call malloc
  1657 00000DEF 50                      	push rax
  1658 00000DF0 BF08000000              	mov rdi, 8 * 1	; extended env
  1659 00000DF5 E81CFF0000              	call malloc
  1660 00000DFA 488B7D10                	mov rdi, ENV
  1661 00000DFE BE00000000              	mov rsi, 0
  1662 00000E03 BA01000000              	mov rdx, 1
  1663                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  1664 00000E08 4883FE00                	cmp rsi, 0
  1665 00000E0C 7410                    	je .L_lambda_simple_env_end_0008
  1666 00000E0E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1667 00000E12 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1668 00000E16 48FFC6                  	inc rsi
  1669 00000E19 48FFC2                  	inc rdx
  1670 00000E1C EBEA                    	jmp .L_lambda_simple_env_loop_0008
  1671                                  .L_lambda_simple_env_end_0008:
  1672 00000E1E 5B                      	pop rbx
  1673 00000E1F BE00000000              	mov rsi, 0
  1674                                  .L_lambda_simple_params_loop_0008:	; copy params
  1675 00000E24 4883FE00                	cmp rsi, 0
  1676 00000E28 740E                    	je .L_lambda_simple_params_end_0008
  1677 00000E2A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1678 00000E2F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1679 00000E33 48FFC6                  	inc rsi
  1680 00000E36 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  1681                                  .L_lambda_simple_params_end_0008:
  1682 00000E38 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1683 00000E3B 4889C3                  	mov rbx, rax
  1684 00000E3E 58                      	pop rax
  1685 00000E3F C60005                  	mov byte [rax], T_closure
  1686 00000E42 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1687 00000E46 48C74009[530E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  1688 00000E4E E99F000000              	jmp .L_lambda_simple_end_0008
  1689                                  .L_lambda_simple_code_0008:	; lambda-simple body
  1690 00000E53 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1691 00000E59 740B                    	je .L_lambda_simple_arity_check_ok_000f
  1692 00000E5B FF742410                	push qword [rsp + 8 * 2]
  1693 00000E5F 6A01                    	push 1
  1694 00000E61 E969FE0000              	jmp L_error_incorrect_arity_simple
  1695                                  .L_lambda_simple_arity_check_ok_000f:
  1696 00000E66 C8000000                	enter 0, 0
  1697 00000E6A 488B4520                mov rax, qword [rbp + 32]
  1698 00000E6E 50                      	push rax
  1699 00000E6F 6A01                    	push 1
  1700 00000E71 488B0425[D8010000]      	mov rax, qword [free_var_59]
  1701 00000E79 803805                  	cmp byte [rax], T_closure 
  1702 00000E7C 0F851C0E0100                    jne L_code_ptr_error
  1703                                  
  1704 00000E82 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1705                                  
  1706 00000E86 53                              push rbx
  1707                                  
  1708 00000E87 FF5009                          call SOB_CLOSURE_CODE(rax)
  1709                                  
  1710 00000E8A 50                              	push rax
  1711 00000E8B 6A01                    	push 1
  1712 00000E8D 488B0425[80000000]      	mov rax, qword [free_var_16]
  1713                                  .L_lambda_simple_arity_check_ok_0010:
  1714 00000E95 803805                  	cmp byte [rax], T_closure
  1715                                  
  1716 00000E98 0F85000E0100                    jne L_code_ptr_error                      ; rax <- proc
  1717                                  
  1718                                  
  1719 00000E9E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1720                                  
  1721 00000EA2 53                              push rbx                                  ; env pushed
  1722                                  
  1723 00000EA3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1724                                  
  1725                                  
  1726 00000EA6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1727                                  
  1728                                          
  1729                                          
  1730 00000EA9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1731                                  
  1732 00000EAD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1733                                  
  1734                                  
  1735 00000EB2 4D89CA                          mov r10, r9
  1736 00000EB5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  1737                                  
  1738                                                                                         
  1739 00000EB9 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1740 00000EBC 4983C404                        add r12, 4
  1741                                  
  1742 00000EC0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1743                                  .L_tc_recycle_frame_loop_0008:
  1744 00000EC6 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  1745                                  
  1746 00000ECA 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1747                                  
  1748                                  
  1749                                  
  1750 00000ECF 41BE00000000                    mov r14, 0                                ; clean box
  1751                                  
  1752                                  
  1753                                                                  
  1754 00000ED5 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1755                                  
  1756 00000ED9 4983C4FF                        add r12, -1 
  1757                                  
  1758 00000EDD 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1759 00000EE1 75E3                    	jne .L_tc_recycle_frame_loop_0008
  1760                                  .L_tc_recycle_frame_done_0008:
  1761 00000EE3 5D                      	pop rbp                                  ; restore the old rbp
  1762                                  
  1763 00000EE4 488B4D00                        mov rcx, qword [rbp]
  1764 00000EE8 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1765                                            ; rbx <- code(proc)
  1766                                  
  1767 00000EEC FFE3                            jmp rbx
  1768 00000EEE C9                      	leave
  1769 00000EEF C21800                  	ret 8 * (2 + 1)
  1770                                  .L_lambda_simple_end_0008:	; new closure is in rax
  1771 00000EF2 48890425[F8010000]      	mov qword [free_var_63], rax
  1772 00000EFA 48B8-                   	mov rax, sob_void
  1772 00000EFC [0000000000000000] 
  1773                                  
  1774 00000F04 4889C7                  	mov rdi, rax
  1775 00000F07 E81BFE0000              	call print_sexpr_if_not_void
  1776                                  
  1777 00000F0C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1778 00000F11 E800FE0000              	call malloc
  1779 00000F16 50                      	push rax
  1780 00000F17 BF00000000              	mov rdi, 8 * 0	; new rib
  1781 00000F1C E8F5FD0000              	call malloc
  1782 00000F21 50                      	push rax
  1783 00000F22 BF08000000              	mov rdi, 8 * 1	; extended env
  1784 00000F27 E8EAFD0000              	call malloc
  1785 00000F2C 488B7D10                	mov rdi, ENV
  1786 00000F30 BE00000000              	mov rsi, 0
  1787 00000F35 BA01000000              	mov rdx, 1
  1788                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  1789 00000F3A 4883FE00                	cmp rsi, 0
  1790 00000F3E 7410                    	je .L_lambda_simple_env_end_0009
  1791 00000F40 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1792 00000F44 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1793 00000F48 48FFC6                  	inc rsi
  1794 00000F4B 48FFC2                  	inc rdx
  1795 00000F4E EBEA                    	jmp .L_lambda_simple_env_loop_0009
  1796                                  .L_lambda_simple_env_end_0009:
  1797 00000F50 5B                      	pop rbx
  1798 00000F51 BE00000000              	mov rsi, 0
  1799                                  .L_lambda_simple_params_loop_0009:	; copy params
  1800 00000F56 4883FE00                	cmp rsi, 0
  1801 00000F5A 740E                    	je .L_lambda_simple_params_end_0009
  1802 00000F5C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1803 00000F61 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1804 00000F65 48FFC6                  	inc rsi
  1805 00000F68 EBEC                    	jmp .L_lambda_simple_params_loop_0009
  1806                                  .L_lambda_simple_params_end_0009:
  1807 00000F6A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1808 00000F6D 4889C3                  	mov rbx, rax
  1809 00000F70 58                      	pop rax
  1810 00000F71 C60005                  	mov byte [rax], T_closure
  1811 00000F74 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1812 00000F78 48C74009[850F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  1813 00000F80 E99F000000              	jmp .L_lambda_simple_end_0009
  1814                                  .L_lambda_simple_code_0009:	; lambda-simple body
  1815 00000F85 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1816 00000F8B 740B                    	je .L_lambda_simple_arity_check_ok_0011
  1817 00000F8D FF742410                	push qword [rsp + 8 * 2]
  1818 00000F91 6A01                    	push 1
  1819 00000F93 E937FD0000              	jmp L_error_incorrect_arity_simple
  1820                                  .L_lambda_simple_arity_check_ok_0011:
  1821 00000F98 C8000000                	enter 0, 0
  1822 00000F9C 488B4520                mov rax, qword [rbp + 32]
  1823 00000FA0 50                      	push rax
  1824 00000FA1 6A01                    	push 1
  1825 00000FA3 488B0425[C0010000]      	mov rax, qword [free_var_56]
  1826 00000FAB 803805                  	cmp byte [rax], T_closure 
  1827 00000FAE 0F85EA0C0100                    jne L_code_ptr_error
  1828                                  
  1829 00000FB4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1830                                  
  1831 00000FB8 53                              push rbx
  1832                                  
  1833 00000FB9 FF5009                          call SOB_CLOSURE_CODE(rax)
  1834                                  
  1835 00000FBC 50                              	push rax
  1836 00000FBD 6A01                    	push 1
  1837 00000FBF 488B0425[88000000]      	mov rax, qword [free_var_17]
  1838                                  .L_lambda_simple_arity_check_ok_0012:
  1839 00000FC7 803805                  	cmp byte [rax], T_closure
  1840                                  
  1841 00000FCA 0F85CE0C0100                    jne L_code_ptr_error                      ; rax <- proc
  1842                                  
  1843                                  
  1844 00000FD0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1845                                  
  1846 00000FD4 53                              push rbx                                  ; env pushed
  1847                                  
  1848 00000FD5 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1849                                  
  1850                                  
  1851 00000FD8 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1852                                  
  1853                                          
  1854                                          
  1855 00000FDB 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1856                                  
  1857 00000FDF 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1858                                  
  1859                                  
  1860 00000FE4 4D89CA                          mov r10, r9
  1861 00000FE7 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  1862                                  
  1863                                                                                         
  1864 00000FEB 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1865 00000FEE 4983C404                        add r12, 4
  1866                                  
  1867 00000FF2 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1868                                  .L_tc_recycle_frame_loop_0009:
  1869 00000FF8 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  1870                                  
  1871 00000FFC 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1872                                  
  1873                                  
  1874                                  
  1875 00001001 41BE00000000                    mov r14, 0                                ; clean box
  1876                                  
  1877                                  
  1878                                                                  
  1879 00001007 4983C2FF                        add r10, -1                               ; args_copied_counter--
  1880                                  
  1881 0000100B 4983C4FF                        add r12, -1 
  1882                                  
  1883 0000100F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  1884 00001013 75E3                    	jne .L_tc_recycle_frame_loop_0009
  1885                                  .L_tc_recycle_frame_done_0009:
  1886 00001015 5D                      	pop rbp                                  ; restore the old rbp
  1887                                  
  1888 00001016 488B4D00                        mov rcx, qword [rbp]
  1889 0000101A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  1890                                            ; rbx <- code(proc)
  1891                                  
  1892 0000101E FFE3                            jmp rbx
  1893 00001020 C9                      	leave
  1894 00001021 C21800                  	ret 8 * (2 + 1)
  1895                                  .L_lambda_simple_end_0009:	; new closure is in rax
  1896 00001024 48890425[00020000]      	mov qword [free_var_64], rax
  1897 0000102C 48B8-                   	mov rax, sob_void
  1897 0000102E [0000000000000000] 
  1898                                  
  1899 00001036 4889C7                  	mov rdi, rax
  1900 00001039 E8E9FC0000              	call print_sexpr_if_not_void
  1901                                  
  1902 0000103E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  1903 00001043 E8CEFC0000              	call malloc
  1904 00001048 50                      	push rax
  1905 00001049 BF00000000              	mov rdi, 8 * 0	; new rib
  1906 0000104E E8C3FC0000              	call malloc
  1907 00001053 50                      	push rax
  1908 00001054 BF08000000              	mov rdi, 8 * 1	; extended env
  1909 00001059 E8B8FC0000              	call malloc
  1910 0000105E 488B7D10                	mov rdi, ENV
  1911 00001062 BE00000000              	mov rsi, 0
  1912 00001067 BA01000000              	mov rdx, 1
  1913                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  1914 0000106C 4883FE00                	cmp rsi, 0
  1915 00001070 7410                    	je .L_lambda_simple_env_end_000a
  1916 00001072 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  1917 00001076 48890CD0                	mov qword [rax + 8 * rdx], rcx
  1918 0000107A 48FFC6                  	inc rsi
  1919 0000107D 48FFC2                  	inc rdx
  1920 00001080 EBEA                    	jmp .L_lambda_simple_env_loop_000a
  1921                                  .L_lambda_simple_env_end_000a:
  1922 00001082 5B                      	pop rbx
  1923 00001083 BE00000000              	mov rsi, 0
  1924                                  .L_lambda_simple_params_loop_000a:	; copy params
  1925 00001088 4883FE00                	cmp rsi, 0
  1926 0000108C 740E                    	je .L_lambda_simple_params_end_000a
  1927 0000108E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  1928 00001093 488914F3                	mov qword [rbx + 8 * rsi], rdx
  1929 00001097 48FFC6                  	inc rsi
  1930 0000109A EBEC                    	jmp .L_lambda_simple_params_loop_000a
  1931                                  .L_lambda_simple_params_end_000a:
  1932 0000109C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  1933 0000109F 4889C3                  	mov rbx, rax
  1934 000010A2 58                      	pop rax
  1935 000010A3 C60005                  	mov byte [rax], T_closure
  1936 000010A6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  1937 000010AA 48C74009[B7100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  1938 000010B2 E99F000000              	jmp .L_lambda_simple_end_000a
  1939                                  .L_lambda_simple_code_000a:	; lambda-simple body
  1940 000010B7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  1941 000010BD 740B                    	je .L_lambda_simple_arity_check_ok_0013
  1942 000010BF FF742410                	push qword [rsp + 8 * 2]
  1943 000010C3 6A01                    	push 1
  1944 000010C5 E905FC0000              	jmp L_error_incorrect_arity_simple
  1945                                  .L_lambda_simple_arity_check_ok_0013:
  1946 000010CA C8000000                	enter 0, 0
  1947 000010CE 488B4520                mov rax, qword [rbp + 32]
  1948 000010D2 50                      	push rax
  1949 000010D3 6A01                    	push 1
  1950 000010D5 488B0425[C8010000]      	mov rax, qword [free_var_57]
  1951 000010DD 803805                  	cmp byte [rax], T_closure 
  1952 000010E0 0F85B80B0100                    jne L_code_ptr_error
  1953                                  
  1954 000010E6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  1955                                  
  1956 000010EA 53                              push rbx
  1957                                  
  1958 000010EB FF5009                          call SOB_CLOSURE_CODE(rax)
  1959                                  
  1960 000010EE 50                              	push rax
  1961 000010EF 6A01                    	push 1
  1962 000010F1 488B0425[88000000]      	mov rax, qword [free_var_17]
  1963                                  .L_lambda_simple_arity_check_ok_0014:
  1964 000010F9 803805                  	cmp byte [rax], T_closure
  1965                                  
  1966 000010FC 0F859C0B0100                    jne L_code_ptr_error                      ; rax <- proc
  1967                                  
  1968                                  
  1969 00001102 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  1970                                  
  1971 00001106 53                              push rbx                                  ; env pushed
  1972                                  
  1973 00001107 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  1974                                  
  1975                                  
  1976 0000110A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  1977                                  
  1978                                          
  1979                                          
  1980 0000110D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  1981                                  
  1982 00001111 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  1983                                  
  1984                                  
  1985 00001116 4D89CA                          mov r10, r9
  1986 00001119 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  1987                                  
  1988                                                                                         
  1989 0000111D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  1990 00001120 4983C404                        add r12, 4
  1991                                  
  1992 00001124 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  1993                                  .L_tc_recycle_frame_loop_000a:
  1994 0000112A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  1995                                  
  1996 0000112E 4E8974E500                      mov [rbp + (r12 * 8)], r14
  1997                                  
  1998                                  
  1999                                  
  2000 00001133 41BE00000000                    mov r14, 0                                ; clean box
  2001                                  
  2002                                  
  2003                                                                  
  2004 00001139 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2005                                  
  2006 0000113D 4983C4FF                        add r12, -1 
  2007                                  
  2008 00001141 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2009 00001145 75E3                    	jne .L_tc_recycle_frame_loop_000a
  2010                                  .L_tc_recycle_frame_done_000a:
  2011 00001147 5D                      	pop rbp                                  ; restore the old rbp
  2012                                  
  2013 00001148 488B4D00                        mov rcx, qword [rbp]
  2014 0000114C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2015                                            ; rbx <- code(proc)
  2016                                  
  2017 00001150 FFE3                            jmp rbx
  2018 00001152 C9                      	leave
  2019 00001153 C21800                  	ret 8 * (2 + 1)
  2020                                  .L_lambda_simple_end_000a:	; new closure is in rax
  2021 00001156 48890425[08020000]      	mov qword [free_var_65], rax
  2022 0000115E 48B8-                   	mov rax, sob_void
  2022 00001160 [0000000000000000] 
  2023                                  
  2024 00001168 4889C7                  	mov rdi, rax
  2025 0000116B E8B7FB0000              	call print_sexpr_if_not_void
  2026                                  
  2027 00001170 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2028 00001175 E89CFB0000              	call malloc
  2029 0000117A 50                      	push rax
  2030 0000117B BF00000000              	mov rdi, 8 * 0	; new rib
  2031 00001180 E891FB0000              	call malloc
  2032 00001185 50                      	push rax
  2033 00001186 BF08000000              	mov rdi, 8 * 1	; extended env
  2034 0000118B E886FB0000              	call malloc
  2035 00001190 488B7D10                	mov rdi, ENV
  2036 00001194 BE00000000              	mov rsi, 0
  2037 00001199 BA01000000              	mov rdx, 1
  2038                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  2039 0000119E 4883FE00                	cmp rsi, 0
  2040 000011A2 7410                    	je .L_lambda_simple_env_end_000b
  2041 000011A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2042 000011A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2043 000011AC 48FFC6                  	inc rsi
  2044 000011AF 48FFC2                  	inc rdx
  2045 000011B2 EBEA                    	jmp .L_lambda_simple_env_loop_000b
  2046                                  .L_lambda_simple_env_end_000b:
  2047 000011B4 5B                      	pop rbx
  2048 000011B5 BE00000000              	mov rsi, 0
  2049                                  .L_lambda_simple_params_loop_000b:	; copy params
  2050 000011BA 4883FE00                	cmp rsi, 0
  2051 000011BE 740E                    	je .L_lambda_simple_params_end_000b
  2052 000011C0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2053 000011C5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2054 000011C9 48FFC6                  	inc rsi
  2055 000011CC EBEC                    	jmp .L_lambda_simple_params_loop_000b
  2056                                  .L_lambda_simple_params_end_000b:
  2057 000011CE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2058 000011D1 4889C3                  	mov rbx, rax
  2059 000011D4 58                      	pop rax
  2060 000011D5 C60005                  	mov byte [rax], T_closure
  2061 000011D8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2062 000011DC 48C74009[E9110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  2063 000011E4 E99F000000              	jmp .L_lambda_simple_end_000b
  2064                                  .L_lambda_simple_code_000b:	; lambda-simple body
  2065 000011E9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2066 000011EF 740B                    	je .L_lambda_simple_arity_check_ok_0015
  2067 000011F1 FF742410                	push qword [rsp + 8 * 2]
  2068 000011F5 6A01                    	push 1
  2069 000011F7 E9D3FA0000              	jmp L_error_incorrect_arity_simple
  2070                                  .L_lambda_simple_arity_check_ok_0015:
  2071 000011FC C8000000                	enter 0, 0
  2072 00001200 488B4520                mov rax, qword [rbp + 32]
  2073 00001204 50                      	push rax
  2074 00001205 6A01                    	push 1
  2075 00001207 488B0425[D0010000]      	mov rax, qword [free_var_58]
  2076 0000120F 803805                  	cmp byte [rax], T_closure 
  2077 00001212 0F85860A0100                    jne L_code_ptr_error
  2078                                  
  2079 00001218 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2080                                  
  2081 0000121C 53                              push rbx
  2082                                  
  2083 0000121D FF5009                          call SOB_CLOSURE_CODE(rax)
  2084                                  
  2085 00001220 50                              	push rax
  2086 00001221 6A01                    	push 1
  2087 00001223 488B0425[88000000]      	mov rax, qword [free_var_17]
  2088                                  .L_lambda_simple_arity_check_ok_0016:
  2089 0000122B 803805                  	cmp byte [rax], T_closure
  2090                                  
  2091 0000122E 0F856A0A0100                    jne L_code_ptr_error                      ; rax <- proc
  2092                                  
  2093                                  
  2094 00001234 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2095                                  
  2096 00001238 53                              push rbx                                  ; env pushed
  2097                                  
  2098 00001239 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2099                                  
  2100                                  
  2101 0000123C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2102                                  
  2103                                          
  2104                                          
  2105 0000123F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2106                                  
  2107 00001243 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2108                                  
  2109                                  
  2110 00001248 4D89CA                          mov r10, r9
  2111 0000124B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  2112                                  
  2113                                                                                         
  2114 0000124F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2115 00001252 4983C404                        add r12, 4
  2116                                  
  2117 00001256 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2118                                  .L_tc_recycle_frame_loop_000b:
  2119 0000125C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  2120                                  
  2121 00001260 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2122                                  
  2123                                  
  2124                                  
  2125 00001265 41BE00000000                    mov r14, 0                                ; clean box
  2126                                  
  2127                                  
  2128                                                                  
  2129 0000126B 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2130                                  
  2131 0000126F 4983C4FF                        add r12, -1 
  2132                                  
  2133 00001273 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2134 00001277 75E3                    	jne .L_tc_recycle_frame_loop_000b
  2135                                  .L_tc_recycle_frame_done_000b:
  2136 00001279 5D                      	pop rbp                                  ; restore the old rbp
  2137                                  
  2138 0000127A 488B4D00                        mov rcx, qword [rbp]
  2139 0000127E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2140                                            ; rbx <- code(proc)
  2141                                  
  2142 00001282 FFE3                            jmp rbx
  2143 00001284 C9                      	leave
  2144 00001285 C21800                  	ret 8 * (2 + 1)
  2145                                  .L_lambda_simple_end_000b:	; new closure is in rax
  2146 00001288 48890425[10020000]      	mov qword [free_var_66], rax
  2147 00001290 48B8-                   	mov rax, sob_void
  2147 00001292 [0000000000000000] 
  2148                                  
  2149 0000129A 4889C7                  	mov rdi, rax
  2150 0000129D E885FA0000              	call print_sexpr_if_not_void
  2151                                  
  2152 000012A2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2153 000012A7 E86AFA0000              	call malloc
  2154 000012AC 50                      	push rax
  2155 000012AD BF00000000              	mov rdi, 8 * 0	; new rib
  2156 000012B2 E85FFA0000              	call malloc
  2157 000012B7 50                      	push rax
  2158 000012B8 BF08000000              	mov rdi, 8 * 1	; extended env
  2159 000012BD E854FA0000              	call malloc
  2160 000012C2 488B7D10                	mov rdi, ENV
  2161 000012C6 BE00000000              	mov rsi, 0
  2162 000012CB BA01000000              	mov rdx, 1
  2163                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  2164 000012D0 4883FE00                	cmp rsi, 0
  2165 000012D4 7410                    	je .L_lambda_simple_env_end_000c
  2166 000012D6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2167 000012DA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2168 000012DE 48FFC6                  	inc rsi
  2169 000012E1 48FFC2                  	inc rdx
  2170 000012E4 EBEA                    	jmp .L_lambda_simple_env_loop_000c
  2171                                  .L_lambda_simple_env_end_000c:
  2172 000012E6 5B                      	pop rbx
  2173 000012E7 BE00000000              	mov rsi, 0
  2174                                  .L_lambda_simple_params_loop_000c:	; copy params
  2175 000012EC 4883FE00                	cmp rsi, 0
  2176 000012F0 740E                    	je .L_lambda_simple_params_end_000c
  2177 000012F2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2178 000012F7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2179 000012FB 48FFC6                  	inc rsi
  2180 000012FE EBEC                    	jmp .L_lambda_simple_params_loop_000c
  2181                                  .L_lambda_simple_params_end_000c:
  2182 00001300 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2183 00001303 4889C3                  	mov rbx, rax
  2184 00001306 58                      	pop rax
  2185 00001307 C60005                  	mov byte [rax], T_closure
  2186 0000130A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2187 0000130E 48C74009[1B130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  2188 00001316 E99F000000              	jmp .L_lambda_simple_end_000c
  2189                                  .L_lambda_simple_code_000c:	; lambda-simple body
  2190 0000131B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2191 00001321 740B                    	je .L_lambda_simple_arity_check_ok_0017
  2192 00001323 FF742410                	push qword [rsp + 8 * 2]
  2193 00001327 6A01                    	push 1
  2194 00001329 E9A1F90000              	jmp L_error_incorrect_arity_simple
  2195                                  .L_lambda_simple_arity_check_ok_0017:
  2196 0000132E C8000000                	enter 0, 0
  2197 00001332 488B4520                mov rax, qword [rbp + 32]
  2198 00001336 50                      	push rax
  2199 00001337 6A01                    	push 1
  2200 00001339 488B0425[D8010000]      	mov rax, qword [free_var_59]
  2201 00001341 803805                  	cmp byte [rax], T_closure 
  2202 00001344 0F8554090100                    jne L_code_ptr_error
  2203                                  
  2204 0000134A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2205                                  
  2206 0000134E 53                              push rbx
  2207                                  
  2208 0000134F FF5009                          call SOB_CLOSURE_CODE(rax)
  2209                                  
  2210 00001352 50                              	push rax
  2211 00001353 6A01                    	push 1
  2212 00001355 488B0425[88000000]      	mov rax, qword [free_var_17]
  2213                                  .L_lambda_simple_arity_check_ok_0018:
  2214 0000135D 803805                  	cmp byte [rax], T_closure
  2215                                  
  2216 00001360 0F8538090100                    jne L_code_ptr_error                      ; rax <- proc
  2217                                  
  2218                                  
  2219 00001366 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2220                                  
  2221 0000136A 53                              push rbx                                  ; env pushed
  2222                                  
  2223 0000136B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2224                                  
  2225                                  
  2226 0000136E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2227                                  
  2228                                          
  2229                                          
  2230 00001371 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2231                                  
  2232 00001375 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2233                                  
  2234                                  
  2235 0000137A 4D89CA                          mov r10, r9
  2236 0000137D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  2237                                  
  2238                                                                                         
  2239 00001381 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2240 00001384 4983C404                        add r12, 4
  2241                                  
  2242 00001388 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2243                                  .L_tc_recycle_frame_loop_000c:
  2244 0000138E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  2245                                  
  2246 00001392 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2247                                  
  2248                                  
  2249                                  
  2250 00001397 41BE00000000                    mov r14, 0                                ; clean box
  2251                                  
  2252                                  
  2253                                                                  
  2254 0000139D 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2255                                  
  2256 000013A1 4983C4FF                        add r12, -1 
  2257                                  
  2258 000013A5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2259 000013A9 75E3                    	jne .L_tc_recycle_frame_loop_000c
  2260                                  .L_tc_recycle_frame_done_000c:
  2261 000013AB 5D                      	pop rbp                                  ; restore the old rbp
  2262                                  
  2263 000013AC 488B4D00                        mov rcx, qword [rbp]
  2264 000013B0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2265                                            ; rbx <- code(proc)
  2266                                  
  2267 000013B4 FFE3                            jmp rbx
  2268 000013B6 C9                      	leave
  2269 000013B7 C21800                  	ret 8 * (2 + 1)
  2270                                  .L_lambda_simple_end_000c:	; new closure is in rax
  2271 000013BA 48890425[18020000]      	mov qword [free_var_67], rax
  2272 000013C2 48B8-                   	mov rax, sob_void
  2272 000013C4 [0000000000000000] 
  2273                                  
  2274 000013CC 4889C7                  	mov rdi, rax
  2275 000013CF E853F90000              	call print_sexpr_if_not_void
  2276                                  
  2277 000013D4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2278 000013D9 E838F90000              	call malloc
  2279 000013DE 50                      	push rax
  2280 000013DF BF00000000              	mov rdi, 8 * 0	; new rib
  2281 000013E4 E82DF90000              	call malloc
  2282 000013E9 50                      	push rax
  2283 000013EA BF08000000              	mov rdi, 8 * 1	; extended env
  2284 000013EF E822F90000              	call malloc
  2285 000013F4 488B7D10                	mov rdi, ENV
  2286 000013F8 BE00000000              	mov rsi, 0
  2287 000013FD BA01000000              	mov rdx, 1
  2288                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  2289 00001402 4883FE00                	cmp rsi, 0
  2290 00001406 7410                    	je .L_lambda_simple_env_end_000d
  2291 00001408 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2292 0000140C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2293 00001410 48FFC6                  	inc rsi
  2294 00001413 48FFC2                  	inc rdx
  2295 00001416 EBEA                    	jmp .L_lambda_simple_env_loop_000d
  2296                                  .L_lambda_simple_env_end_000d:
  2297 00001418 5B                      	pop rbx
  2298 00001419 BE00000000              	mov rsi, 0
  2299                                  .L_lambda_simple_params_loop_000d:	; copy params
  2300 0000141E 4883FE00                	cmp rsi, 0
  2301 00001422 740E                    	je .L_lambda_simple_params_end_000d
  2302 00001424 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2303 00001429 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2304 0000142D 48FFC6                  	inc rsi
  2305 00001430 EBEC                    	jmp .L_lambda_simple_params_loop_000d
  2306                                  .L_lambda_simple_params_end_000d:
  2307 00001432 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2308 00001435 4889C3                  	mov rbx, rax
  2309 00001438 58                      	pop rax
  2310 00001439 C60005                  	mov byte [rax], T_closure
  2311 0000143C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2312 00001440 48C74009[4D140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  2313 00001448 E99F000000              	jmp .L_lambda_simple_end_000d
  2314                                  .L_lambda_simple_code_000d:	; lambda-simple body
  2315 0000144D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2316 00001453 740B                    	je .L_lambda_simple_arity_check_ok_0019
  2317 00001455 FF742410                	push qword [rsp + 8 * 2]
  2318 00001459 6A01                    	push 1
  2319 0000145B E96FF80000              	jmp L_error_incorrect_arity_simple
  2320                                  .L_lambda_simple_arity_check_ok_0019:
  2321 00001460 C8000000                	enter 0, 0
  2322 00001464 488B4520                mov rax, qword [rbp + 32]
  2323 00001468 50                      	push rax
  2324 00001469 6A01                    	push 1
  2325 0000146B 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2326 00001473 803805                  	cmp byte [rax], T_closure 
  2327 00001476 0F8522080100                    jne L_code_ptr_error
  2328                                  
  2329 0000147C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2330                                  
  2331 00001480 53                              push rbx
  2332                                  
  2333 00001481 FF5009                          call SOB_CLOSURE_CODE(rax)
  2334                                  
  2335 00001484 50                              	push rax
  2336 00001485 6A01                    	push 1
  2337 00001487 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2338                                  .L_lambda_simple_arity_check_ok_001a:
  2339 0000148F 803805                  	cmp byte [rax], T_closure
  2340                                  
  2341 00001492 0F8506080100                    jne L_code_ptr_error                      ; rax <- proc
  2342                                  
  2343                                  
  2344 00001498 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2345                                  
  2346 0000149C 53                              push rbx                                  ; env pushed
  2347                                  
  2348 0000149D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2349                                  
  2350                                  
  2351 000014A0 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2352                                  
  2353                                          
  2354                                          
  2355 000014A3 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2356                                  
  2357 000014A7 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2358                                  
  2359                                  
  2360 000014AC 4D89CA                          mov r10, r9
  2361 000014AF 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  2362                                  
  2363                                                                                         
  2364 000014B3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2365 000014B6 4983C404                        add r12, 4
  2366                                  
  2367 000014BA 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2368                                  .L_tc_recycle_frame_loop_000d:
  2369 000014C0 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  2370                                  
  2371 000014C4 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2372                                  
  2373                                  
  2374                                  
  2375 000014C9 41BE00000000                    mov r14, 0                                ; clean box
  2376                                  
  2377                                  
  2378                                                                  
  2379 000014CF 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2380                                  
  2381 000014D3 4983C4FF                        add r12, -1 
  2382                                  
  2383 000014D7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2384 000014DB 75E3                    	jne .L_tc_recycle_frame_loop_000d
  2385                                  .L_tc_recycle_frame_done_000d:
  2386 000014DD 5D                      	pop rbp                                  ; restore the old rbp
  2387                                  
  2388 000014DE 488B4D00                        mov rcx, qword [rbp]
  2389 000014E2 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2390                                            ; rbx <- code(proc)
  2391                                  
  2392 000014E6 FFE3                            jmp rbx
  2393 000014E8 C9                      	leave
  2394 000014E9 C21800                  	ret 8 * (2 + 1)
  2395                                  .L_lambda_simple_end_000d:	; new closure is in rax
  2396 000014EC 48890425[20020000]      	mov qword [free_var_68], rax
  2397 000014F4 48B8-                   	mov rax, sob_void
  2397 000014F6 [0000000000000000] 
  2398                                  
  2399 000014FE 4889C7                  	mov rdi, rax
  2400 00001501 E821F80000              	call print_sexpr_if_not_void
  2401                                  
  2402 00001506 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2403 0000150B E806F80000              	call malloc
  2404 00001510 50                      	push rax
  2405 00001511 BF00000000              	mov rdi, 8 * 0	; new rib
  2406 00001516 E8FBF70000              	call malloc
  2407 0000151B 50                      	push rax
  2408 0000151C BF08000000              	mov rdi, 8 * 1	; extended env
  2409 00001521 E8F0F70000              	call malloc
  2410 00001526 488B7D10                	mov rdi, ENV
  2411 0000152A BE00000000              	mov rsi, 0
  2412 0000152F BA01000000              	mov rdx, 1
  2413                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  2414 00001534 4883FE00                	cmp rsi, 0
  2415 00001538 7410                    	je .L_lambda_simple_env_end_000e
  2416 0000153A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2417 0000153E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2418 00001542 48FFC6                  	inc rsi
  2419 00001545 48FFC2                  	inc rdx
  2420 00001548 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  2421                                  .L_lambda_simple_env_end_000e:
  2422 0000154A 5B                      	pop rbx
  2423 0000154B BE00000000              	mov rsi, 0
  2424                                  .L_lambda_simple_params_loop_000e:	; copy params
  2425 00001550 4883FE00                	cmp rsi, 0
  2426 00001554 740E                    	je .L_lambda_simple_params_end_000e
  2427 00001556 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2428 0000155B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2429 0000155F 48FFC6                  	inc rsi
  2430 00001562 EBEC                    	jmp .L_lambda_simple_params_loop_000e
  2431                                  .L_lambda_simple_params_end_000e:
  2432 00001564 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2433 00001567 4889C3                  	mov rbx, rax
  2434 0000156A 58                      	pop rax
  2435 0000156B C60005                  	mov byte [rax], T_closure
  2436 0000156E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2437 00001572 48C74009[7F150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  2438 0000157A E99F000000              	jmp .L_lambda_simple_end_000e
  2439                                  .L_lambda_simple_code_000e:	; lambda-simple body
  2440 0000157F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2441 00001585 740B                    	je .L_lambda_simple_arity_check_ok_001b
  2442 00001587 FF742410                	push qword [rsp + 8 * 2]
  2443 0000158B 6A01                    	push 1
  2444 0000158D E93DF70000              	jmp L_error_incorrect_arity_simple
  2445                                  .L_lambda_simple_arity_check_ok_001b:
  2446 00001592 C8000000                	enter 0, 0
  2447 00001596 488B4520                mov rax, qword [rbp + 32]
  2448 0000159A 50                      	push rax
  2449 0000159B 6A01                    	push 1
  2450 0000159D 488B0425[C8010000]      	mov rax, qword [free_var_57]
  2451 000015A5 803805                  	cmp byte [rax], T_closure 
  2452 000015A8 0F85F0060100                    jne L_code_ptr_error
  2453                                  
  2454 000015AE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2455                                  
  2456 000015B2 53                              push rbx
  2457                                  
  2458 000015B3 FF5009                          call SOB_CLOSURE_CODE(rax)
  2459                                  
  2460 000015B6 50                              	push rax
  2461 000015B7 6A01                    	push 1
  2462 000015B9 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2463                                  .L_lambda_simple_arity_check_ok_001c:
  2464 000015C1 803805                  	cmp byte [rax], T_closure
  2465                                  
  2466 000015C4 0F85D4060100                    jne L_code_ptr_error                      ; rax <- proc
  2467                                  
  2468                                  
  2469 000015CA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2470                                  
  2471 000015CE 53                              push rbx                                  ; env pushed
  2472                                  
  2473 000015CF FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2474                                  
  2475                                  
  2476 000015D2 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2477                                  
  2478                                          
  2479                                          
  2480 000015D5 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2481                                  
  2482 000015D9 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2483                                  
  2484                                  
  2485 000015DE 4D89CA                          mov r10, r9
  2486 000015E1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  2487                                  
  2488                                                                                         
  2489 000015E5 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2490 000015E8 4983C404                        add r12, 4
  2491                                  
  2492 000015EC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2493                                  .L_tc_recycle_frame_loop_000e:
  2494 000015F2 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  2495                                  
  2496 000015F6 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2497                                  
  2498                                  
  2499                                  
  2500 000015FB 41BE00000000                    mov r14, 0                                ; clean box
  2501                                  
  2502                                  
  2503                                                                  
  2504 00001601 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2505                                  
  2506 00001605 4983C4FF                        add r12, -1 
  2507                                  
  2508 00001609 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2509 0000160D 75E3                    	jne .L_tc_recycle_frame_loop_000e
  2510                                  .L_tc_recycle_frame_done_000e:
  2511 0000160F 5D                      	pop rbp                                  ; restore the old rbp
  2512                                  
  2513 00001610 488B4D00                        mov rcx, qword [rbp]
  2514 00001614 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2515                                            ; rbx <- code(proc)
  2516                                  
  2517 00001618 FFE3                            jmp rbx
  2518 0000161A C9                      	leave
  2519 0000161B C21800                  	ret 8 * (2 + 1)
  2520                                  .L_lambda_simple_end_000e:	; new closure is in rax
  2521 0000161E 48890425[28020000]      	mov qword [free_var_69], rax
  2522 00001626 48B8-                   	mov rax, sob_void
  2522 00001628 [0000000000000000] 
  2523                                  
  2524 00001630 4889C7                  	mov rdi, rax
  2525 00001633 E8EFF60000              	call print_sexpr_if_not_void
  2526                                  
  2527 00001638 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2528 0000163D E8D4F60000              	call malloc
  2529 00001642 50                      	push rax
  2530 00001643 BF00000000              	mov rdi, 8 * 0	; new rib
  2531 00001648 E8C9F60000              	call malloc
  2532 0000164D 50                      	push rax
  2533 0000164E BF08000000              	mov rdi, 8 * 1	; extended env
  2534 00001653 E8BEF60000              	call malloc
  2535 00001658 488B7D10                	mov rdi, ENV
  2536 0000165C BE00000000              	mov rsi, 0
  2537 00001661 BA01000000              	mov rdx, 1
  2538                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  2539 00001666 4883FE00                	cmp rsi, 0
  2540 0000166A 7410                    	je .L_lambda_simple_env_end_000f
  2541 0000166C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2542 00001670 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2543 00001674 48FFC6                  	inc rsi
  2544 00001677 48FFC2                  	inc rdx
  2545 0000167A EBEA                    	jmp .L_lambda_simple_env_loop_000f
  2546                                  .L_lambda_simple_env_end_000f:
  2547 0000167C 5B                      	pop rbx
  2548 0000167D BE00000000              	mov rsi, 0
  2549                                  .L_lambda_simple_params_loop_000f:	; copy params
  2550 00001682 4883FE00                	cmp rsi, 0
  2551 00001686 740E                    	je .L_lambda_simple_params_end_000f
  2552 00001688 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2553 0000168D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2554 00001691 48FFC6                  	inc rsi
  2555 00001694 EBEC                    	jmp .L_lambda_simple_params_loop_000f
  2556                                  .L_lambda_simple_params_end_000f:
  2557 00001696 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2558 00001699 4889C3                  	mov rbx, rax
  2559 0000169C 58                      	pop rax
  2560 0000169D C60005                  	mov byte [rax], T_closure
  2561 000016A0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2562 000016A4 48C74009[B1160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  2563 000016AC E99F000000              	jmp .L_lambda_simple_end_000f
  2564                                  .L_lambda_simple_code_000f:	; lambda-simple body
  2565 000016B1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2566 000016B7 740B                    	je .L_lambda_simple_arity_check_ok_001d
  2567 000016B9 FF742410                	push qword [rsp + 8 * 2]
  2568 000016BD 6A01                    	push 1
  2569 000016BF E90BF60000              	jmp L_error_incorrect_arity_simple
  2570                                  .L_lambda_simple_arity_check_ok_001d:
  2571 000016C4 C8000000                	enter 0, 0
  2572 000016C8 488B4520                mov rax, qword [rbp + 32]
  2573 000016CC 50                      	push rax
  2574 000016CD 6A01                    	push 1
  2575 000016CF 488B0425[D0010000]      	mov rax, qword [free_var_58]
  2576 000016D7 803805                  	cmp byte [rax], T_closure 
  2577 000016DA 0F85BE050100                    jne L_code_ptr_error
  2578                                  
  2579 000016E0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2580                                  
  2581 000016E4 53                              push rbx
  2582                                  
  2583 000016E5 FF5009                          call SOB_CLOSURE_CODE(rax)
  2584                                  
  2585 000016E8 50                              	push rax
  2586 000016E9 6A01                    	push 1
  2587 000016EB 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2588                                  .L_lambda_simple_arity_check_ok_001e:
  2589 000016F3 803805                  	cmp byte [rax], T_closure
  2590                                  
  2591 000016F6 0F85A2050100                    jne L_code_ptr_error                      ; rax <- proc
  2592                                  
  2593                                  
  2594 000016FC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2595                                  
  2596 00001700 53                              push rbx                                  ; env pushed
  2597                                  
  2598 00001701 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2599                                  
  2600                                  
  2601 00001704 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2602                                  
  2603                                          
  2604                                          
  2605 00001707 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2606                                  
  2607 0000170B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2608                                  
  2609                                  
  2610 00001710 4D89CA                          mov r10, r9
  2611 00001713 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  2612                                  
  2613                                                                                         
  2614 00001717 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2615 0000171A 4983C404                        add r12, 4
  2616                                  
  2617 0000171E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2618                                  .L_tc_recycle_frame_loop_000f:
  2619 00001724 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  2620                                  
  2621 00001728 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2622                                  
  2623                                  
  2624                                  
  2625 0000172D 41BE00000000                    mov r14, 0                                ; clean box
  2626                                  
  2627                                  
  2628                                                                  
  2629 00001733 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2630                                  
  2631 00001737 4983C4FF                        add r12, -1 
  2632                                  
  2633 0000173B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2634 0000173F 75E3                    	jne .L_tc_recycle_frame_loop_000f
  2635                                  .L_tc_recycle_frame_done_000f:
  2636 00001741 5D                      	pop rbp                                  ; restore the old rbp
  2637                                  
  2638 00001742 488B4D00                        mov rcx, qword [rbp]
  2639 00001746 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2640                                            ; rbx <- code(proc)
  2641                                  
  2642 0000174A FFE3                            jmp rbx
  2643 0000174C C9                      	leave
  2644 0000174D C21800                  	ret 8 * (2 + 1)
  2645                                  .L_lambda_simple_end_000f:	; new closure is in rax
  2646 00001750 48890425[30020000]      	mov qword [free_var_70], rax
  2647 00001758 48B8-                   	mov rax, sob_void
  2647 0000175A [0000000000000000] 
  2648                                  
  2649 00001762 4889C7                  	mov rdi, rax
  2650 00001765 E8BDF50000              	call print_sexpr_if_not_void
  2651                                  
  2652 0000176A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2653 0000176F E8A2F50000              	call malloc
  2654 00001774 50                      	push rax
  2655 00001775 BF00000000              	mov rdi, 8 * 0	; new rib
  2656 0000177A E897F50000              	call malloc
  2657 0000177F 50                      	push rax
  2658 00001780 BF08000000              	mov rdi, 8 * 1	; extended env
  2659 00001785 E88CF50000              	call malloc
  2660 0000178A 488B7D10                	mov rdi, ENV
  2661 0000178E BE00000000              	mov rsi, 0
  2662 00001793 BA01000000              	mov rdx, 1
  2663                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  2664 00001798 4883FE00                	cmp rsi, 0
  2665 0000179C 7410                    	je .L_lambda_simple_env_end_0010
  2666 0000179E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2667 000017A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2668 000017A6 48FFC6                  	inc rsi
  2669 000017A9 48FFC2                  	inc rdx
  2670 000017AC EBEA                    	jmp .L_lambda_simple_env_loop_0010
  2671                                  .L_lambda_simple_env_end_0010:
  2672 000017AE 5B                      	pop rbx
  2673 000017AF BE00000000              	mov rsi, 0
  2674                                  .L_lambda_simple_params_loop_0010:	; copy params
  2675 000017B4 4883FE00                	cmp rsi, 0
  2676 000017B8 740E                    	je .L_lambda_simple_params_end_0010
  2677 000017BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2678 000017BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2679 000017C3 48FFC6                  	inc rsi
  2680 000017C6 EBEC                    	jmp .L_lambda_simple_params_loop_0010
  2681                                  .L_lambda_simple_params_end_0010:
  2682 000017C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2683 000017CB 4889C3                  	mov rbx, rax
  2684 000017CE 58                      	pop rax
  2685 000017CF C60005                  	mov byte [rax], T_closure
  2686 000017D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2687 000017D6 48C74009[E3170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  2688 000017DE E99F000000              	jmp .L_lambda_simple_end_0010
  2689                                  .L_lambda_simple_code_0010:	; lambda-simple body
  2690 000017E3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2691 000017E9 740B                    	je .L_lambda_simple_arity_check_ok_001f
  2692 000017EB FF742410                	push qword [rsp + 8 * 2]
  2693 000017EF 6A01                    	push 1
  2694 000017F1 E9D9F40000              	jmp L_error_incorrect_arity_simple
  2695                                  .L_lambda_simple_arity_check_ok_001f:
  2696 000017F6 C8000000                	enter 0, 0
  2697 000017FA 488B4520                mov rax, qword [rbp + 32]
  2698 000017FE 50                      	push rax
  2699 000017FF 6A01                    	push 1
  2700 00001801 488B0425[D8010000]      	mov rax, qword [free_var_59]
  2701 00001809 803805                  	cmp byte [rax], T_closure 
  2702 0000180C 0F858C040100                    jne L_code_ptr_error
  2703                                  
  2704 00001812 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2705                                  
  2706 00001816 53                              push rbx
  2707                                  
  2708 00001817 FF5009                          call SOB_CLOSURE_CODE(rax)
  2709                                  
  2710 0000181A 50                              	push rax
  2711 0000181B 6A01                    	push 1
  2712 0000181D 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2713                                  .L_lambda_simple_arity_check_ok_0020:
  2714 00001825 803805                  	cmp byte [rax], T_closure
  2715                                  
  2716 00001828 0F8570040100                    jne L_code_ptr_error                      ; rax <- proc
  2717                                  
  2718                                  
  2719 0000182E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2720                                  
  2721 00001832 53                              push rbx                                  ; env pushed
  2722                                  
  2723 00001833 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2724                                  
  2725                                  
  2726 00001836 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2727                                  
  2728                                          
  2729                                          
  2730 00001839 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2731                                  
  2732 0000183D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2733                                  
  2734                                  
  2735 00001842 4D89CA                          mov r10, r9
  2736 00001845 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  2737                                  
  2738                                                                                         
  2739 00001849 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2740 0000184C 4983C404                        add r12, 4
  2741                                  
  2742 00001850 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2743                                  .L_tc_recycle_frame_loop_0010:
  2744 00001856 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  2745                                  
  2746 0000185A 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2747                                  
  2748                                  
  2749                                  
  2750 0000185F 41BE00000000                    mov r14, 0                                ; clean box
  2751                                  
  2752                                  
  2753                                                                  
  2754 00001865 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2755                                  
  2756 00001869 4983C4FF                        add r12, -1 
  2757                                  
  2758 0000186D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2759 00001871 75E3                    	jne .L_tc_recycle_frame_loop_0010
  2760                                  .L_tc_recycle_frame_done_0010:
  2761 00001873 5D                      	pop rbp                                  ; restore the old rbp
  2762                                  
  2763 00001874 488B4D00                        mov rcx, qword [rbp]
  2764 00001878 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2765                                            ; rbx <- code(proc)
  2766                                  
  2767 0000187C FFE3                            jmp rbx
  2768 0000187E C9                      	leave
  2769 0000187F C21800                  	ret 8 * (2 + 1)
  2770                                  .L_lambda_simple_end_0010:	; new closure is in rax
  2771 00001882 48890425[38020000]      	mov qword [free_var_71], rax
  2772 0000188A 48B8-                   	mov rax, sob_void
  2772 0000188C [0000000000000000] 
  2773                                  
  2774 00001894 4889C7                  	mov rdi, rax
  2775 00001897 E88BF40000              	call print_sexpr_if_not_void
  2776                                  
  2777 0000189C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2778 000018A1 E870F40000              	call malloc
  2779 000018A6 50                      	push rax
  2780 000018A7 BF00000000              	mov rdi, 8 * 0	; new rib
  2781 000018AC E865F40000              	call malloc
  2782 000018B1 50                      	push rax
  2783 000018B2 BF08000000              	mov rdi, 8 * 1	; extended env
  2784 000018B7 E85AF40000              	call malloc
  2785 000018BC 488B7D10                	mov rdi, ENV
  2786 000018C0 BE00000000              	mov rsi, 0
  2787 000018C5 BA01000000              	mov rdx, 1
  2788                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  2789 000018CA 4883FE00                	cmp rsi, 0
  2790 000018CE 7410                    	je .L_lambda_simple_env_end_0011
  2791 000018D0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2792 000018D4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2793 000018D8 48FFC6                  	inc rsi
  2794 000018DB 48FFC2                  	inc rdx
  2795 000018DE EBEA                    	jmp .L_lambda_simple_env_loop_0011
  2796                                  .L_lambda_simple_env_end_0011:
  2797 000018E0 5B                      	pop rbx
  2798 000018E1 BE00000000              	mov rsi, 0
  2799                                  .L_lambda_simple_params_loop_0011:	; copy params
  2800 000018E6 4883FE00                	cmp rsi, 0
  2801 000018EA 740E                    	je .L_lambda_simple_params_end_0011
  2802 000018EC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2803 000018F1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2804 000018F5 48FFC6                  	inc rsi
  2805 000018F8 EBEC                    	jmp .L_lambda_simple_params_loop_0011
  2806                                  .L_lambda_simple_params_end_0011:
  2807 000018FA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2808 000018FD 4889C3                  	mov rbx, rax
  2809 00001900 58                      	pop rax
  2810 00001901 C60005                  	mov byte [rax], T_closure
  2811 00001904 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2812 00001908 48C74009[15190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  2813 00001910 E99F000000              	jmp .L_lambda_simple_end_0011
  2814                                  .L_lambda_simple_code_0011:	; lambda-simple body
  2815 00001915 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2816 0000191B 740B                    	je .L_lambda_simple_arity_check_ok_0021
  2817 0000191D FF742410                	push qword [rsp + 8 * 2]
  2818 00001921 6A01                    	push 1
  2819 00001923 E9A7F30000              	jmp L_error_incorrect_arity_simple
  2820                                  .L_lambda_simple_arity_check_ok_0021:
  2821 00001928 C8000000                	enter 0, 0
  2822 0000192C 488B4520                mov rax, qword [rbp + 32]
  2823 00001930 50                      	push rax
  2824 00001931 6A01                    	push 1
  2825 00001933 488B0425[C0010000]      	mov rax, qword [free_var_56]
  2826 0000193B 803805                  	cmp byte [rax], T_closure 
  2827 0000193E 0F855A030100                    jne L_code_ptr_error
  2828                                  
  2829 00001944 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2830                                  
  2831 00001948 53                              push rbx
  2832                                  
  2833 00001949 FF5009                          call SOB_CLOSURE_CODE(rax)
  2834                                  
  2835 0000194C 50                              	push rax
  2836 0000194D 6A01                    	push 1
  2837 0000194F 488B0425[C8010000]      	mov rax, qword [free_var_57]
  2838                                  .L_lambda_simple_arity_check_ok_0022:
  2839 00001957 803805                  	cmp byte [rax], T_closure
  2840                                  
  2841 0000195A 0F853E030100                    jne L_code_ptr_error                      ; rax <- proc
  2842                                  
  2843                                  
  2844 00001960 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2845                                  
  2846 00001964 53                              push rbx                                  ; env pushed
  2847                                  
  2848 00001965 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2849                                  
  2850                                  
  2851 00001968 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2852                                  
  2853                                          
  2854                                          
  2855 0000196B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2856                                  
  2857 0000196F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2858                                  
  2859                                  
  2860 00001974 4D89CA                          mov r10, r9
  2861 00001977 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  2862                                  
  2863                                                                                         
  2864 0000197B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2865 0000197E 4983C404                        add r12, 4
  2866                                  
  2867 00001982 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2868                                  .L_tc_recycle_frame_loop_0011:
  2869 00001988 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  2870                                  
  2871 0000198C 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2872                                  
  2873                                  
  2874                                  
  2875 00001991 41BE00000000                    mov r14, 0                                ; clean box
  2876                                  
  2877                                  
  2878                                                                  
  2879 00001997 4983C2FF                        add r10, -1                               ; args_copied_counter--
  2880                                  
  2881 0000199B 4983C4FF                        add r12, -1 
  2882                                  
  2883 0000199F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  2884 000019A3 75E3                    	jne .L_tc_recycle_frame_loop_0011
  2885                                  .L_tc_recycle_frame_done_0011:
  2886 000019A5 5D                      	pop rbp                                  ; restore the old rbp
  2887                                  
  2888 000019A6 488B4D00                        mov rcx, qword [rbp]
  2889 000019AA 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  2890                                            ; rbx <- code(proc)
  2891                                  
  2892 000019AE FFE3                            jmp rbx
  2893 000019B0 C9                      	leave
  2894 000019B1 C21800                  	ret 8 * (2 + 1)
  2895                                  .L_lambda_simple_end_0011:	; new closure is in rax
  2896 000019B4 48890425[40020000]      	mov qword [free_var_72], rax
  2897 000019BC 48B8-                   	mov rax, sob_void
  2897 000019BE [0000000000000000] 
  2898                                  
  2899 000019C6 4889C7                  	mov rdi, rax
  2900 000019C9 E859F30000              	call print_sexpr_if_not_void
  2901                                  
  2902 000019CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2903 000019D3 E83EF30000              	call malloc
  2904 000019D8 50                      	push rax
  2905 000019D9 BF00000000              	mov rdi, 8 * 0	; new rib
  2906 000019DE E833F30000              	call malloc
  2907 000019E3 50                      	push rax
  2908 000019E4 BF08000000              	mov rdi, 8 * 1	; extended env
  2909 000019E9 E828F30000              	call malloc
  2910 000019EE 488B7D10                	mov rdi, ENV
  2911 000019F2 BE00000000              	mov rsi, 0
  2912 000019F7 BA01000000              	mov rdx, 1
  2913                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  2914 000019FC 4883FE00                	cmp rsi, 0
  2915 00001A00 7410                    	je .L_lambda_simple_env_end_0012
  2916 00001A02 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2917 00001A06 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2918 00001A0A 48FFC6                  	inc rsi
  2919 00001A0D 48FFC2                  	inc rdx
  2920 00001A10 EBEA                    	jmp .L_lambda_simple_env_loop_0012
  2921                                  .L_lambda_simple_env_end_0012:
  2922 00001A12 5B                      	pop rbx
  2923 00001A13 BE00000000              	mov rsi, 0
  2924                                  .L_lambda_simple_params_loop_0012:	; copy params
  2925 00001A18 4883FE00                	cmp rsi, 0
  2926 00001A1C 740E                    	je .L_lambda_simple_params_end_0012
  2927 00001A1E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2928 00001A23 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2929 00001A27 48FFC6                  	inc rsi
  2930 00001A2A EBEC                    	jmp .L_lambda_simple_params_loop_0012
  2931                                  .L_lambda_simple_params_end_0012:
  2932 00001A2C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2933 00001A2F 4889C3                  	mov rbx, rax
  2934 00001A32 58                      	pop rax
  2935 00001A33 C60005                  	mov byte [rax], T_closure
  2936 00001A36 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2937 00001A3A 48C74009[471A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  2938 00001A42 E99F000000              	jmp .L_lambda_simple_end_0012
  2939                                  .L_lambda_simple_code_0012:	; lambda-simple body
  2940 00001A47 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2941 00001A4D 740B                    	je .L_lambda_simple_arity_check_ok_0023
  2942 00001A4F FF742410                	push qword [rsp + 8 * 2]
  2943 00001A53 6A01                    	push 1
  2944 00001A55 E975F20000              	jmp L_error_incorrect_arity_simple
  2945                                  .L_lambda_simple_arity_check_ok_0023:
  2946 00001A5A C8000000                	enter 0, 0
  2947 00001A5E 488B4520                mov rax, qword [rbp + 32]
  2948 00001A62 50                      	push rax
  2949 00001A63 6A01                    	push 1
  2950 00001A65 488B0425[C8010000]      	mov rax, qword [free_var_57]
  2951 00001A6D 803805                  	cmp byte [rax], T_closure 
  2952 00001A70 0F8528020100                    jne L_code_ptr_error
  2953                                  
  2954 00001A76 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  2955                                  
  2956 00001A7A 53                              push rbx
  2957                                  
  2958 00001A7B FF5009                          call SOB_CLOSURE_CODE(rax)
  2959                                  
  2960 00001A7E 50                              	push rax
  2961 00001A7F 6A01                    	push 1
  2962 00001A81 488B0425[C8010000]      	mov rax, qword [free_var_57]
  2963                                  .L_lambda_simple_arity_check_ok_0024:
  2964 00001A89 803805                  	cmp byte [rax], T_closure
  2965                                  
  2966 00001A8C 0F850C020100                    jne L_code_ptr_error                      ; rax <- proc
  2967                                  
  2968                                  
  2969 00001A92 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  2970                                  
  2971 00001A96 53                              push rbx                                  ; env pushed
  2972                                  
  2973 00001A97 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  2974                                  
  2975                                  
  2976 00001A9A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  2977                                  
  2978                                          
  2979                                          
  2980 00001A9D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  2981                                  
  2982 00001AA1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  2983                                  
  2984                                  
  2985 00001AA6 4D89CA                          mov r10, r9
  2986 00001AA9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  2987                                  
  2988                                                                                         
  2989 00001AAD 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  2990 00001AB0 4983C404                        add r12, 4
  2991                                  
  2992 00001AB4 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  2993                                  .L_tc_recycle_frame_loop_0012:
  2994 00001ABA 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  2995                                  
  2996 00001ABE 4E8974E500                      mov [rbp + (r12 * 8)], r14
  2997                                  
  2998                                  
  2999                                  
  3000 00001AC3 41BE00000000                    mov r14, 0                                ; clean box
  3001                                  
  3002                                  
  3003                                                                  
  3004 00001AC9 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3005                                  
  3006 00001ACD 4983C4FF                        add r12, -1 
  3007                                  
  3008 00001AD1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3009 00001AD5 75E3                    	jne .L_tc_recycle_frame_loop_0012
  3010                                  .L_tc_recycle_frame_done_0012:
  3011 00001AD7 5D                      	pop rbp                                  ; restore the old rbp
  3012                                  
  3013 00001AD8 488B4D00                        mov rcx, qword [rbp]
  3014 00001ADC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3015                                            ; rbx <- code(proc)
  3016                                  
  3017 00001AE0 FFE3                            jmp rbx
  3018 00001AE2 C9                      	leave
  3019 00001AE3 C21800                  	ret 8 * (2 + 1)
  3020                                  .L_lambda_simple_end_0012:	; new closure is in rax
  3021 00001AE6 48890425[48020000]      	mov qword [free_var_73], rax
  3022 00001AEE 48B8-                   	mov rax, sob_void
  3022 00001AF0 [0000000000000000] 
  3023                                  
  3024 00001AF8 4889C7                  	mov rdi, rax
  3025 00001AFB E827F20000              	call print_sexpr_if_not_void
  3026                                  
  3027 00001B00 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3028 00001B05 E80CF20000              	call malloc
  3029 00001B0A 50                      	push rax
  3030 00001B0B BF00000000              	mov rdi, 8 * 0	; new rib
  3031 00001B10 E801F20000              	call malloc
  3032 00001B15 50                      	push rax
  3033 00001B16 BF08000000              	mov rdi, 8 * 1	; extended env
  3034 00001B1B E8F6F10000              	call malloc
  3035 00001B20 488B7D10                	mov rdi, ENV
  3036 00001B24 BE00000000              	mov rsi, 0
  3037 00001B29 BA01000000              	mov rdx, 1
  3038                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  3039 00001B2E 4883FE00                	cmp rsi, 0
  3040 00001B32 7410                    	je .L_lambda_simple_env_end_0013
  3041 00001B34 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3042 00001B38 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3043 00001B3C 48FFC6                  	inc rsi
  3044 00001B3F 48FFC2                  	inc rdx
  3045 00001B42 EBEA                    	jmp .L_lambda_simple_env_loop_0013
  3046                                  .L_lambda_simple_env_end_0013:
  3047 00001B44 5B                      	pop rbx
  3048 00001B45 BE00000000              	mov rsi, 0
  3049                                  .L_lambda_simple_params_loop_0013:	; copy params
  3050 00001B4A 4883FE00                	cmp rsi, 0
  3051 00001B4E 740E                    	je .L_lambda_simple_params_end_0013
  3052 00001B50 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3053 00001B55 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3054 00001B59 48FFC6                  	inc rsi
  3055 00001B5C EBEC                    	jmp .L_lambda_simple_params_loop_0013
  3056                                  .L_lambda_simple_params_end_0013:
  3057 00001B5E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3058 00001B61 4889C3                  	mov rbx, rax
  3059 00001B64 58                      	pop rax
  3060 00001B65 C60005                  	mov byte [rax], T_closure
  3061 00001B68 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3062 00001B6C 48C74009[791B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  3063 00001B74 E99F000000              	jmp .L_lambda_simple_end_0013
  3064                                  .L_lambda_simple_code_0013:	; lambda-simple body
  3065 00001B79 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3066 00001B7F 740B                    	je .L_lambda_simple_arity_check_ok_0025
  3067 00001B81 FF742410                	push qword [rsp + 8 * 2]
  3068 00001B85 6A01                    	push 1
  3069 00001B87 E943F10000              	jmp L_error_incorrect_arity_simple
  3070                                  .L_lambda_simple_arity_check_ok_0025:
  3071 00001B8C C8000000                	enter 0, 0
  3072 00001B90 488B4520                mov rax, qword [rbp + 32]
  3073 00001B94 50                      	push rax
  3074 00001B95 6A01                    	push 1
  3075 00001B97 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3076 00001B9F 803805                  	cmp byte [rax], T_closure 
  3077 00001BA2 0F85F6000100                    jne L_code_ptr_error
  3078                                  
  3079 00001BA8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3080                                  
  3081 00001BAC 53                              push rbx
  3082                                  
  3083 00001BAD FF5009                          call SOB_CLOSURE_CODE(rax)
  3084                                  
  3085 00001BB0 50                              	push rax
  3086 00001BB1 6A01                    	push 1
  3087 00001BB3 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3088                                  .L_lambda_simple_arity_check_ok_0026:
  3089 00001BBB 803805                  	cmp byte [rax], T_closure
  3090                                  
  3091 00001BBE 0F85DA000100                    jne L_code_ptr_error                      ; rax <- proc
  3092                                  
  3093                                  
  3094 00001BC4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3095                                  
  3096 00001BC8 53                              push rbx                                  ; env pushed
  3097                                  
  3098 00001BC9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3099                                  
  3100                                  
  3101 00001BCC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3102                                  
  3103                                          
  3104                                          
  3105 00001BCF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3106                                  
  3107 00001BD3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3108                                  
  3109                                  
  3110 00001BD8 4D89CA                          mov r10, r9
  3111 00001BDB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  3112                                  
  3113                                                                                         
  3114 00001BDF 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3115 00001BE2 4983C404                        add r12, 4
  3116                                  
  3117 00001BE6 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3118                                  .L_tc_recycle_frame_loop_0013:
  3119 00001BEC 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  3120                                  
  3121 00001BF0 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3122                                  
  3123                                  
  3124                                  
  3125 00001BF5 41BE00000000                    mov r14, 0                                ; clean box
  3126                                  
  3127                                  
  3128                                                                  
  3129 00001BFB 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3130                                  
  3131 00001BFF 4983C4FF                        add r12, -1 
  3132                                  
  3133 00001C03 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3134 00001C07 75E3                    	jne .L_tc_recycle_frame_loop_0013
  3135                                  .L_tc_recycle_frame_done_0013:
  3136 00001C09 5D                      	pop rbp                                  ; restore the old rbp
  3137                                  
  3138 00001C0A 488B4D00                        mov rcx, qword [rbp]
  3139 00001C0E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3140                                            ; rbx <- code(proc)
  3141                                  
  3142 00001C12 FFE3                            jmp rbx
  3143 00001C14 C9                      	leave
  3144 00001C15 C21800                  	ret 8 * (2 + 1)
  3145                                  .L_lambda_simple_end_0013:	; new closure is in rax
  3146 00001C18 48890425[50020000]      	mov qword [free_var_74], rax
  3147 00001C20 48B8-                   	mov rax, sob_void
  3147 00001C22 [0000000000000000] 
  3148                                  
  3149 00001C2A 4889C7                  	mov rdi, rax
  3150 00001C2D E8F5F00000              	call print_sexpr_if_not_void
  3151                                  
  3152 00001C32 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3153 00001C37 E8DAF00000              	call malloc
  3154 00001C3C 50                      	push rax
  3155 00001C3D BF00000000              	mov rdi, 8 * 0	; new rib
  3156 00001C42 E8CFF00000              	call malloc
  3157 00001C47 50                      	push rax
  3158 00001C48 BF08000000              	mov rdi, 8 * 1	; extended env
  3159 00001C4D E8C4F00000              	call malloc
  3160 00001C52 488B7D10                	mov rdi, ENV
  3161 00001C56 BE00000000              	mov rsi, 0
  3162 00001C5B BA01000000              	mov rdx, 1
  3163                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  3164 00001C60 4883FE00                	cmp rsi, 0
  3165 00001C64 7410                    	je .L_lambda_simple_env_end_0014
  3166 00001C66 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3167 00001C6A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3168 00001C6E 48FFC6                  	inc rsi
  3169 00001C71 48FFC2                  	inc rdx
  3170 00001C74 EBEA                    	jmp .L_lambda_simple_env_loop_0014
  3171                                  .L_lambda_simple_env_end_0014:
  3172 00001C76 5B                      	pop rbx
  3173 00001C77 BE00000000              	mov rsi, 0
  3174                                  .L_lambda_simple_params_loop_0014:	; copy params
  3175 00001C7C 4883FE00                	cmp rsi, 0
  3176 00001C80 740E                    	je .L_lambda_simple_params_end_0014
  3177 00001C82 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3178 00001C87 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3179 00001C8B 48FFC6                  	inc rsi
  3180 00001C8E EBEC                    	jmp .L_lambda_simple_params_loop_0014
  3181                                  .L_lambda_simple_params_end_0014:
  3182 00001C90 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3183 00001C93 4889C3                  	mov rbx, rax
  3184 00001C96 58                      	pop rax
  3185 00001C97 C60005                  	mov byte [rax], T_closure
  3186 00001C9A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3187 00001C9E 48C74009[AB1C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  3188 00001CA6 E99F000000              	jmp .L_lambda_simple_end_0014
  3189                                  .L_lambda_simple_code_0014:	; lambda-simple body
  3190 00001CAB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3191 00001CB1 740B                    	je .L_lambda_simple_arity_check_ok_0027
  3192 00001CB3 FF742410                	push qword [rsp + 8 * 2]
  3193 00001CB7 6A01                    	push 1
  3194 00001CB9 E911F00000              	jmp L_error_incorrect_arity_simple
  3195                                  .L_lambda_simple_arity_check_ok_0027:
  3196 00001CBE C8000000                	enter 0, 0
  3197 00001CC2 488B4520                mov rax, qword [rbp + 32]
  3198 00001CC6 50                      	push rax
  3199 00001CC7 6A01                    	push 1
  3200 00001CC9 488B0425[D8010000]      	mov rax, qword [free_var_59]
  3201 00001CD1 803805                  	cmp byte [rax], T_closure 
  3202 00001CD4 0F85C4FF0000                    jne L_code_ptr_error
  3203                                  
  3204 00001CDA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3205                                  
  3206 00001CDE 53                              push rbx
  3207                                  
  3208 00001CDF FF5009                          call SOB_CLOSURE_CODE(rax)
  3209                                  
  3210 00001CE2 50                              	push rax
  3211 00001CE3 6A01                    	push 1
  3212 00001CE5 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3213                                  .L_lambda_simple_arity_check_ok_0028:
  3214 00001CED 803805                  	cmp byte [rax], T_closure
  3215                                  
  3216 00001CF0 0F85A8FF0000                    jne L_code_ptr_error                      ; rax <- proc
  3217                                  
  3218                                  
  3219 00001CF6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3220                                  
  3221 00001CFA 53                              push rbx                                  ; env pushed
  3222                                  
  3223 00001CFB FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3224                                  
  3225                                  
  3226 00001CFE FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3227                                  
  3228                                          
  3229                                          
  3230 00001D01 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3231                                  
  3232 00001D05 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3233                                  
  3234                                  
  3235 00001D0A 4D89CA                          mov r10, r9
  3236 00001D0D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  3237                                  
  3238                                                                                         
  3239 00001D11 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3240 00001D14 4983C404                        add r12, 4
  3241                                  
  3242 00001D18 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3243                                  .L_tc_recycle_frame_loop_0014:
  3244 00001D1E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  3245                                  
  3246 00001D22 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3247                                  
  3248                                  
  3249                                  
  3250 00001D27 41BE00000000                    mov r14, 0                                ; clean box
  3251                                  
  3252                                  
  3253                                                                  
  3254 00001D2D 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3255                                  
  3256 00001D31 4983C4FF                        add r12, -1 
  3257                                  
  3258 00001D35 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3259 00001D39 75E3                    	jne .L_tc_recycle_frame_loop_0014
  3260                                  .L_tc_recycle_frame_done_0014:
  3261 00001D3B 5D                      	pop rbp                                  ; restore the old rbp
  3262                                  
  3263 00001D3C 488B4D00                        mov rcx, qword [rbp]
  3264 00001D40 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3265                                            ; rbx <- code(proc)
  3266                                  
  3267 00001D44 FFE3                            jmp rbx
  3268 00001D46 C9                      	leave
  3269 00001D47 C21800                  	ret 8 * (2 + 1)
  3270                                  .L_lambda_simple_end_0014:	; new closure is in rax
  3271 00001D4A 48890425[58020000]      	mov qword [free_var_75], rax
  3272 00001D52 48B8-                   	mov rax, sob_void
  3272 00001D54 [0000000000000000] 
  3273                                  
  3274 00001D5C 4889C7                  	mov rdi, rax
  3275 00001D5F E8C3EF0000              	call print_sexpr_if_not_void
  3276                                  
  3277 00001D64 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3278 00001D69 E8A8EF0000              	call malloc
  3279 00001D6E 50                      	push rax
  3280 00001D6F BF00000000              	mov rdi, 8 * 0	; new rib
  3281 00001D74 E89DEF0000              	call malloc
  3282 00001D79 50                      	push rax
  3283 00001D7A BF08000000              	mov rdi, 8 * 1	; extended env
  3284 00001D7F E892EF0000              	call malloc
  3285 00001D84 488B7D10                	mov rdi, ENV
  3286 00001D88 BE00000000              	mov rsi, 0
  3287 00001D8D BA01000000              	mov rdx, 1
  3288                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  3289 00001D92 4883FE00                	cmp rsi, 0
  3290 00001D96 7410                    	je .L_lambda_simple_env_end_0015
  3291 00001D98 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3292 00001D9C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3293 00001DA0 48FFC6                  	inc rsi
  3294 00001DA3 48FFC2                  	inc rdx
  3295 00001DA6 EBEA                    	jmp .L_lambda_simple_env_loop_0015
  3296                                  .L_lambda_simple_env_end_0015:
  3297 00001DA8 5B                      	pop rbx
  3298 00001DA9 BE00000000              	mov rsi, 0
  3299                                  .L_lambda_simple_params_loop_0015:	; copy params
  3300 00001DAE 4883FE00                	cmp rsi, 0
  3301 00001DB2 740E                    	je .L_lambda_simple_params_end_0015
  3302 00001DB4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3303 00001DB9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3304 00001DBD 48FFC6                  	inc rsi
  3305 00001DC0 EBEC                    	jmp .L_lambda_simple_params_loop_0015
  3306                                  .L_lambda_simple_params_end_0015:
  3307 00001DC2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3308 00001DC5 4889C3                  	mov rbx, rax
  3309 00001DC8 58                      	pop rax
  3310 00001DC9 C60005                  	mov byte [rax], T_closure
  3311 00001DCC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3312 00001DD0 48C74009[DD1D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  3313 00001DD8 E99F000000              	jmp .L_lambda_simple_end_0015
  3314                                  .L_lambda_simple_code_0015:	; lambda-simple body
  3315 00001DDD 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3316 00001DE3 740B                    	je .L_lambda_simple_arity_check_ok_0029
  3317 00001DE5 FF742410                	push qword [rsp + 8 * 2]
  3318 00001DE9 6A01                    	push 1
  3319 00001DEB E9DFEE0000              	jmp L_error_incorrect_arity_simple
  3320                                  .L_lambda_simple_arity_check_ok_0029:
  3321 00001DF0 C8000000                	enter 0, 0
  3322 00001DF4 488B4520                mov rax, qword [rbp + 32]
  3323 00001DF8 50                      	push rax
  3324 00001DF9 6A01                    	push 1
  3325 00001DFB 488B0425[C0010000]      	mov rax, qword [free_var_56]
  3326 00001E03 803805                  	cmp byte [rax], T_closure 
  3327 00001E06 0F8592FE0000                    jne L_code_ptr_error
  3328                                  
  3329 00001E0C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3330                                  
  3331 00001E10 53                              push rbx
  3332                                  
  3333 00001E11 FF5009                          call SOB_CLOSURE_CODE(rax)
  3334                                  
  3335 00001E14 50                              	push rax
  3336 00001E15 6A01                    	push 1
  3337 00001E17 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3338                                  .L_lambda_simple_arity_check_ok_002a:
  3339 00001E1F 803805                  	cmp byte [rax], T_closure
  3340                                  
  3341 00001E22 0F8576FE0000                    jne L_code_ptr_error                      ; rax <- proc
  3342                                  
  3343                                  
  3344 00001E28 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3345                                  
  3346 00001E2C 53                              push rbx                                  ; env pushed
  3347                                  
  3348 00001E2D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3349                                  
  3350                                  
  3351 00001E30 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3352                                  
  3353                                          
  3354                                          
  3355 00001E33 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3356                                  
  3357 00001E37 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3358                                  
  3359                                  
  3360 00001E3C 4D89CA                          mov r10, r9
  3361 00001E3F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  3362                                  
  3363                                                                                         
  3364 00001E43 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3365 00001E46 4983C404                        add r12, 4
  3366                                  
  3367 00001E4A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3368                                  .L_tc_recycle_frame_loop_0015:
  3369 00001E50 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  3370                                  
  3371 00001E54 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3372                                  
  3373                                  
  3374                                  
  3375 00001E59 41BE00000000                    mov r14, 0                                ; clean box
  3376                                  
  3377                                  
  3378                                                                  
  3379 00001E5F 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3380                                  
  3381 00001E63 4983C4FF                        add r12, -1 
  3382                                  
  3383 00001E67 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3384 00001E6B 75E3                    	jne .L_tc_recycle_frame_loop_0015
  3385                                  .L_tc_recycle_frame_done_0015:
  3386 00001E6D 5D                      	pop rbp                                  ; restore the old rbp
  3387                                  
  3388 00001E6E 488B4D00                        mov rcx, qword [rbp]
  3389 00001E72 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3390                                            ; rbx <- code(proc)
  3391                                  
  3392 00001E76 FFE3                            jmp rbx
  3393 00001E78 C9                      	leave
  3394 00001E79 C21800                  	ret 8 * (2 + 1)
  3395                                  .L_lambda_simple_end_0015:	; new closure is in rax
  3396 00001E7C 48890425[60020000]      	mov qword [free_var_76], rax
  3397 00001E84 48B8-                   	mov rax, sob_void
  3397 00001E86 [0000000000000000] 
  3398                                  
  3399 00001E8E 4889C7                  	mov rdi, rax
  3400 00001E91 E891EE0000              	call print_sexpr_if_not_void
  3401                                  
  3402 00001E96 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3403 00001E9B E876EE0000              	call malloc
  3404 00001EA0 50                      	push rax
  3405 00001EA1 BF00000000              	mov rdi, 8 * 0	; new rib
  3406 00001EA6 E86BEE0000              	call malloc
  3407 00001EAB 50                      	push rax
  3408 00001EAC BF08000000              	mov rdi, 8 * 1	; extended env
  3409 00001EB1 E860EE0000              	call malloc
  3410 00001EB6 488B7D10                	mov rdi, ENV
  3411 00001EBA BE00000000              	mov rsi, 0
  3412 00001EBF BA01000000              	mov rdx, 1
  3413                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  3414 00001EC4 4883FE00                	cmp rsi, 0
  3415 00001EC8 7410                    	je .L_lambda_simple_env_end_0016
  3416 00001ECA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3417 00001ECE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3418 00001ED2 48FFC6                  	inc rsi
  3419 00001ED5 48FFC2                  	inc rdx
  3420 00001ED8 EBEA                    	jmp .L_lambda_simple_env_loop_0016
  3421                                  .L_lambda_simple_env_end_0016:
  3422 00001EDA 5B                      	pop rbx
  3423 00001EDB BE00000000              	mov rsi, 0
  3424                                  .L_lambda_simple_params_loop_0016:	; copy params
  3425 00001EE0 4883FE00                	cmp rsi, 0
  3426 00001EE4 740E                    	je .L_lambda_simple_params_end_0016
  3427 00001EE6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3428 00001EEB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3429 00001EEF 48FFC6                  	inc rsi
  3430 00001EF2 EBEC                    	jmp .L_lambda_simple_params_loop_0016
  3431                                  .L_lambda_simple_params_end_0016:
  3432 00001EF4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3433 00001EF7 4889C3                  	mov rbx, rax
  3434 00001EFA 58                      	pop rax
  3435 00001EFB C60005                  	mov byte [rax], T_closure
  3436 00001EFE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3437 00001F02 48C74009[0F1F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  3438 00001F0A E99F000000              	jmp .L_lambda_simple_end_0016
  3439                                  .L_lambda_simple_code_0016:	; lambda-simple body
  3440 00001F0F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3441 00001F15 740B                    	je .L_lambda_simple_arity_check_ok_002b
  3442 00001F17 FF742410                	push qword [rsp + 8 * 2]
  3443 00001F1B 6A01                    	push 1
  3444 00001F1D E9ADED0000              	jmp L_error_incorrect_arity_simple
  3445                                  .L_lambda_simple_arity_check_ok_002b:
  3446 00001F22 C8000000                	enter 0, 0
  3447 00001F26 488B4520                mov rax, qword [rbp + 32]
  3448 00001F2A 50                      	push rax
  3449 00001F2B 6A01                    	push 1
  3450 00001F2D 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3451 00001F35 803805                  	cmp byte [rax], T_closure 
  3452 00001F38 0F8560FD0000                    jne L_code_ptr_error
  3453                                  
  3454 00001F3E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3455                                  
  3456 00001F42 53                              push rbx
  3457                                  
  3458 00001F43 FF5009                          call SOB_CLOSURE_CODE(rax)
  3459                                  
  3460 00001F46 50                              	push rax
  3461 00001F47 6A01                    	push 1
  3462 00001F49 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3463                                  .L_lambda_simple_arity_check_ok_002c:
  3464 00001F51 803805                  	cmp byte [rax], T_closure
  3465                                  
  3466 00001F54 0F8544FD0000                    jne L_code_ptr_error                      ; rax <- proc
  3467                                  
  3468                                  
  3469 00001F5A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3470                                  
  3471 00001F5E 53                              push rbx                                  ; env pushed
  3472                                  
  3473 00001F5F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3474                                  
  3475                                  
  3476 00001F62 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3477                                  
  3478                                          
  3479                                          
  3480 00001F65 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3481                                  
  3482 00001F69 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3483                                  
  3484                                  
  3485 00001F6E 4D89CA                          mov r10, r9
  3486 00001F71 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  3487                                  
  3488                                                                                         
  3489 00001F75 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3490 00001F78 4983C404                        add r12, 4
  3491                                  
  3492 00001F7C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3493                                  .L_tc_recycle_frame_loop_0016:
  3494 00001F82 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  3495                                  
  3496 00001F86 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3497                                  
  3498                                  
  3499                                  
  3500 00001F8B 41BE00000000                    mov r14, 0                                ; clean box
  3501                                  
  3502                                  
  3503                                                                  
  3504 00001F91 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3505                                  
  3506 00001F95 4983C4FF                        add r12, -1 
  3507                                  
  3508 00001F99 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3509 00001F9D 75E3                    	jne .L_tc_recycle_frame_loop_0016
  3510                                  .L_tc_recycle_frame_done_0016:
  3511 00001F9F 5D                      	pop rbp                                  ; restore the old rbp
  3512                                  
  3513 00001FA0 488B4D00                        mov rcx, qword [rbp]
  3514 00001FA4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3515                                            ; rbx <- code(proc)
  3516                                  
  3517 00001FA8 FFE3                            jmp rbx
  3518 00001FAA C9                      	leave
  3519 00001FAB C21800                  	ret 8 * (2 + 1)
  3520                                  .L_lambda_simple_end_0016:	; new closure is in rax
  3521 00001FAE 48890425[68020000]      	mov qword [free_var_77], rax
  3522 00001FB6 48B8-                   	mov rax, sob_void
  3522 00001FB8 [0000000000000000] 
  3523                                  
  3524 00001FC0 4889C7                  	mov rdi, rax
  3525 00001FC3 E85FED0000              	call print_sexpr_if_not_void
  3526                                  
  3527 00001FC8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3528 00001FCD E844ED0000              	call malloc
  3529 00001FD2 50                      	push rax
  3530 00001FD3 BF00000000              	mov rdi, 8 * 0	; new rib
  3531 00001FD8 E839ED0000              	call malloc
  3532 00001FDD 50                      	push rax
  3533 00001FDE BF08000000              	mov rdi, 8 * 1	; extended env
  3534 00001FE3 E82EED0000              	call malloc
  3535 00001FE8 488B7D10                	mov rdi, ENV
  3536 00001FEC BE00000000              	mov rsi, 0
  3537 00001FF1 BA01000000              	mov rdx, 1
  3538                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  3539 00001FF6 4883FE00                	cmp rsi, 0
  3540 00001FFA 7410                    	je .L_lambda_simple_env_end_0017
  3541 00001FFC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3542 00002000 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3543 00002004 48FFC6                  	inc rsi
  3544 00002007 48FFC2                  	inc rdx
  3545 0000200A EBEA                    	jmp .L_lambda_simple_env_loop_0017
  3546                                  .L_lambda_simple_env_end_0017:
  3547 0000200C 5B                      	pop rbx
  3548 0000200D BE00000000              	mov rsi, 0
  3549                                  .L_lambda_simple_params_loop_0017:	; copy params
  3550 00002012 4883FE00                	cmp rsi, 0
  3551 00002016 740E                    	je .L_lambda_simple_params_end_0017
  3552 00002018 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3553 0000201D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3554 00002021 48FFC6                  	inc rsi
  3555 00002024 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  3556                                  .L_lambda_simple_params_end_0017:
  3557 00002026 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3558 00002029 4889C3                  	mov rbx, rax
  3559 0000202C 58                      	pop rax
  3560 0000202D C60005                  	mov byte [rax], T_closure
  3561 00002030 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3562 00002034 48C74009[41200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  3563 0000203C E99F000000              	jmp .L_lambda_simple_end_0017
  3564                                  .L_lambda_simple_code_0017:	; lambda-simple body
  3565 00002041 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3566 00002047 740B                    	je .L_lambda_simple_arity_check_ok_002d
  3567 00002049 FF742410                	push qword [rsp + 8 * 2]
  3568 0000204D 6A01                    	push 1
  3569 0000204F E97BEC0000              	jmp L_error_incorrect_arity_simple
  3570                                  .L_lambda_simple_arity_check_ok_002d:
  3571 00002054 C8000000                	enter 0, 0
  3572 00002058 488B4520                mov rax, qword [rbp + 32]
  3573 0000205C 50                      	push rax
  3574 0000205D 6A01                    	push 1
  3575 0000205F 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3576 00002067 803805                  	cmp byte [rax], T_closure 
  3577 0000206A 0F852EFC0000                    jne L_code_ptr_error
  3578                                  
  3579 00002070 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3580                                  
  3581 00002074 53                              push rbx
  3582                                  
  3583 00002075 FF5009                          call SOB_CLOSURE_CODE(rax)
  3584                                  
  3585 00002078 50                              	push rax
  3586 00002079 6A01                    	push 1
  3587 0000207B 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3588                                  .L_lambda_simple_arity_check_ok_002e:
  3589 00002083 803805                  	cmp byte [rax], T_closure
  3590                                  
  3591 00002086 0F8512FC0000                    jne L_code_ptr_error                      ; rax <- proc
  3592                                  
  3593                                  
  3594 0000208C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3595                                  
  3596 00002090 53                              push rbx                                  ; env pushed
  3597                                  
  3598 00002091 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3599                                  
  3600                                  
  3601 00002094 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3602                                  
  3603                                          
  3604                                          
  3605 00002097 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3606                                  
  3607 0000209B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3608                                  
  3609                                  
  3610 000020A0 4D89CA                          mov r10, r9
  3611 000020A3 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  3612                                  
  3613                                                                                         
  3614 000020A7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3615 000020AA 4983C404                        add r12, 4
  3616                                  
  3617 000020AE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3618                                  .L_tc_recycle_frame_loop_0017:
  3619 000020B4 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  3620                                  
  3621 000020B8 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3622                                  
  3623                                  
  3624                                  
  3625 000020BD 41BE00000000                    mov r14, 0                                ; clean box
  3626                                  
  3627                                  
  3628                                                                  
  3629 000020C3 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3630                                  
  3631 000020C7 4983C4FF                        add r12, -1 
  3632                                  
  3633 000020CB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3634 000020CF 75E3                    	jne .L_tc_recycle_frame_loop_0017
  3635                                  .L_tc_recycle_frame_done_0017:
  3636 000020D1 5D                      	pop rbp                                  ; restore the old rbp
  3637                                  
  3638 000020D2 488B4D00                        mov rcx, qword [rbp]
  3639 000020D6 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3640                                            ; rbx <- code(proc)
  3641                                  
  3642 000020DA FFE3                            jmp rbx
  3643 000020DC C9                      	leave
  3644 000020DD C21800                  	ret 8 * (2 + 1)
  3645                                  .L_lambda_simple_end_0017:	; new closure is in rax
  3646 000020E0 48890425[70020000]      	mov qword [free_var_78], rax
  3647 000020E8 48B8-                   	mov rax, sob_void
  3647 000020EA [0000000000000000] 
  3648                                  
  3649 000020F2 4889C7                  	mov rdi, rax
  3650 000020F5 E82DEC0000              	call print_sexpr_if_not_void
  3651                                  
  3652 000020FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3653 000020FF E812EC0000              	call malloc
  3654 00002104 50                      	push rax
  3655 00002105 BF00000000              	mov rdi, 8 * 0	; new rib
  3656 0000210A E807EC0000              	call malloc
  3657 0000210F 50                      	push rax
  3658 00002110 BF08000000              	mov rdi, 8 * 1	; extended env
  3659 00002115 E8FCEB0000              	call malloc
  3660 0000211A 488B7D10                	mov rdi, ENV
  3661 0000211E BE00000000              	mov rsi, 0
  3662 00002123 BA01000000              	mov rdx, 1
  3663                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  3664 00002128 4883FE00                	cmp rsi, 0
  3665 0000212C 7410                    	je .L_lambda_simple_env_end_0018
  3666 0000212E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3667 00002132 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3668 00002136 48FFC6                  	inc rsi
  3669 00002139 48FFC2                  	inc rdx
  3670 0000213C EBEA                    	jmp .L_lambda_simple_env_loop_0018
  3671                                  .L_lambda_simple_env_end_0018:
  3672 0000213E 5B                      	pop rbx
  3673 0000213F BE00000000              	mov rsi, 0
  3674                                  .L_lambda_simple_params_loop_0018:	; copy params
  3675 00002144 4883FE00                	cmp rsi, 0
  3676 00002148 740E                    	je .L_lambda_simple_params_end_0018
  3677 0000214A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3678 0000214F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3679 00002153 48FFC6                  	inc rsi
  3680 00002156 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  3681                                  .L_lambda_simple_params_end_0018:
  3682 00002158 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3683 0000215B 4889C3                  	mov rbx, rax
  3684 0000215E 58                      	pop rax
  3685 0000215F C60005                  	mov byte [rax], T_closure
  3686 00002162 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3687 00002166 48C74009[73210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  3688 0000216E E99F000000              	jmp .L_lambda_simple_end_0018
  3689                                  .L_lambda_simple_code_0018:	; lambda-simple body
  3690 00002173 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3691 00002179 740B                    	je .L_lambda_simple_arity_check_ok_002f
  3692 0000217B FF742410                	push qword [rsp + 8 * 2]
  3693 0000217F 6A01                    	push 1
  3694 00002181 E949EB0000              	jmp L_error_incorrect_arity_simple
  3695                                  .L_lambda_simple_arity_check_ok_002f:
  3696 00002186 C8000000                	enter 0, 0
  3697 0000218A 488B4520                mov rax, qword [rbp + 32]
  3698 0000218E 50                      	push rax
  3699 0000218F 6A01                    	push 1
  3700 00002191 488B0425[D8010000]      	mov rax, qword [free_var_59]
  3701 00002199 803805                  	cmp byte [rax], T_closure 
  3702 0000219C 0F85FCFA0000                    jne L_code_ptr_error
  3703                                  
  3704 000021A2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3705                                  
  3706 000021A6 53                              push rbx
  3707                                  
  3708 000021A7 FF5009                          call SOB_CLOSURE_CODE(rax)
  3709                                  
  3710 000021AA 50                              	push rax
  3711 000021AB 6A01                    	push 1
  3712 000021AD 488B0425[D0010000]      	mov rax, qword [free_var_58]
  3713                                  .L_lambda_simple_arity_check_ok_0030:
  3714 000021B5 803805                  	cmp byte [rax], T_closure
  3715                                  
  3716 000021B8 0F85E0FA0000                    jne L_code_ptr_error                      ; rax <- proc
  3717                                  
  3718                                  
  3719 000021BE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3720                                  
  3721 000021C2 53                              push rbx                                  ; env pushed
  3722                                  
  3723 000021C3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3724                                  
  3725                                  
  3726 000021C6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3727                                  
  3728                                          
  3729                                          
  3730 000021C9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3731                                  
  3732 000021CD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3733                                  
  3734                                  
  3735 000021D2 4D89CA                          mov r10, r9
  3736 000021D5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  3737                                  
  3738                                                                                         
  3739 000021D9 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3740 000021DC 4983C404                        add r12, 4
  3741                                  
  3742 000021E0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3743                                  .L_tc_recycle_frame_loop_0018:
  3744 000021E6 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  3745                                  
  3746 000021EA 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3747                                  
  3748                                  
  3749                                  
  3750 000021EF 41BE00000000                    mov r14, 0                                ; clean box
  3751                                  
  3752                                  
  3753                                                                  
  3754 000021F5 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3755                                  
  3756 000021F9 4983C4FF                        add r12, -1 
  3757                                  
  3758 000021FD 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3759 00002201 75E3                    	jne .L_tc_recycle_frame_loop_0018
  3760                                  .L_tc_recycle_frame_done_0018:
  3761 00002203 5D                      	pop rbp                                  ; restore the old rbp
  3762                                  
  3763 00002204 488B4D00                        mov rcx, qword [rbp]
  3764 00002208 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3765                                            ; rbx <- code(proc)
  3766                                  
  3767 0000220C FFE3                            jmp rbx
  3768 0000220E C9                      	leave
  3769 0000220F C21800                  	ret 8 * (2 + 1)
  3770                                  .L_lambda_simple_end_0018:	; new closure is in rax
  3771 00002212 48890425[78020000]      	mov qword [free_var_79], rax
  3772 0000221A 48B8-                   	mov rax, sob_void
  3772 0000221C [0000000000000000] 
  3773                                  
  3774 00002224 4889C7                  	mov rdi, rax
  3775 00002227 E8FBEA0000              	call print_sexpr_if_not_void
  3776                                  
  3777 0000222C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3778 00002231 E8E0EA0000              	call malloc
  3779 00002236 50                      	push rax
  3780 00002237 BF00000000              	mov rdi, 8 * 0	; new rib
  3781 0000223C E8D5EA0000              	call malloc
  3782 00002241 50                      	push rax
  3783 00002242 BF08000000              	mov rdi, 8 * 1	; extended env
  3784 00002247 E8CAEA0000              	call malloc
  3785 0000224C 488B7D10                	mov rdi, ENV
  3786 00002250 BE00000000              	mov rsi, 0
  3787 00002255 BA01000000              	mov rdx, 1
  3788                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  3789 0000225A 4883FE00                	cmp rsi, 0
  3790 0000225E 7410                    	je .L_lambda_simple_env_end_0019
  3791 00002260 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3792 00002264 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3793 00002268 48FFC6                  	inc rsi
  3794 0000226B 48FFC2                  	inc rdx
  3795 0000226E EBEA                    	jmp .L_lambda_simple_env_loop_0019
  3796                                  .L_lambda_simple_env_end_0019:
  3797 00002270 5B                      	pop rbx
  3798 00002271 BE00000000              	mov rsi, 0
  3799                                  .L_lambda_simple_params_loop_0019:	; copy params
  3800 00002276 4883FE00                	cmp rsi, 0
  3801 0000227A 740E                    	je .L_lambda_simple_params_end_0019
  3802 0000227C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3803 00002281 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3804 00002285 48FFC6                  	inc rsi
  3805 00002288 EBEC                    	jmp .L_lambda_simple_params_loop_0019
  3806                                  .L_lambda_simple_params_end_0019:
  3807 0000228A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3808 0000228D 4889C3                  	mov rbx, rax
  3809 00002290 58                      	pop rax
  3810 00002291 C60005                  	mov byte [rax], T_closure
  3811 00002294 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3812 00002298 48C74009[A5220000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  3813 000022A0 E99F000000              	jmp .L_lambda_simple_end_0019
  3814                                  .L_lambda_simple_code_0019:	; lambda-simple body
  3815 000022A5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3816 000022AB 740B                    	je .L_lambda_simple_arity_check_ok_0031
  3817 000022AD FF742410                	push qword [rsp + 8 * 2]
  3818 000022B1 6A01                    	push 1
  3819 000022B3 E917EA0000              	jmp L_error_incorrect_arity_simple
  3820                                  .L_lambda_simple_arity_check_ok_0031:
  3821 000022B8 C8000000                	enter 0, 0
  3822 000022BC 488B4520                mov rax, qword [rbp + 32]
  3823 000022C0 50                      	push rax
  3824 000022C1 6A01                    	push 1
  3825 000022C3 488B0425[C0010000]      	mov rax, qword [free_var_56]
  3826 000022CB 803805                  	cmp byte [rax], T_closure 
  3827 000022CE 0F85CAF90000                    jne L_code_ptr_error
  3828                                  
  3829 000022D4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3830                                  
  3831 000022D8 53                              push rbx
  3832                                  
  3833 000022D9 FF5009                          call SOB_CLOSURE_CODE(rax)
  3834                                  
  3835 000022DC 50                              	push rax
  3836 000022DD 6A01                    	push 1
  3837 000022DF 488B0425[D8010000]      	mov rax, qword [free_var_59]
  3838                                  .L_lambda_simple_arity_check_ok_0032:
  3839 000022E7 803805                  	cmp byte [rax], T_closure
  3840                                  
  3841 000022EA 0F85AEF90000                    jne L_code_ptr_error                      ; rax <- proc
  3842                                  
  3843                                  
  3844 000022F0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3845                                  
  3846 000022F4 53                              push rbx                                  ; env pushed
  3847                                  
  3848 000022F5 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3849                                  
  3850                                  
  3851 000022F8 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3852                                  
  3853                                          
  3854                                          
  3855 000022FB 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3856                                  
  3857 000022FF 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3858                                  
  3859                                  
  3860 00002304 4D89CA                          mov r10, r9
  3861 00002307 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  3862                                  
  3863                                                                                         
  3864 0000230B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3865 0000230E 4983C404                        add r12, 4
  3866                                  
  3867 00002312 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3868                                  .L_tc_recycle_frame_loop_0019:
  3869 00002318 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  3870                                  
  3871 0000231C 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3872                                  
  3873                                  
  3874                                  
  3875 00002321 41BE00000000                    mov r14, 0                                ; clean box
  3876                                  
  3877                                  
  3878                                                                  
  3879 00002327 4983C2FF                        add r10, -1                               ; args_copied_counter--
  3880                                  
  3881 0000232B 4983C4FF                        add r12, -1 
  3882                                  
  3883 0000232F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  3884 00002333 75E3                    	jne .L_tc_recycle_frame_loop_0019
  3885                                  .L_tc_recycle_frame_done_0019:
  3886 00002335 5D                      	pop rbp                                  ; restore the old rbp
  3887                                  
  3888 00002336 488B4D00                        mov rcx, qword [rbp]
  3889 0000233A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  3890                                            ; rbx <- code(proc)
  3891                                  
  3892 0000233E FFE3                            jmp rbx
  3893 00002340 C9                      	leave
  3894 00002341 C21800                  	ret 8 * (2 + 1)
  3895                                  .L_lambda_simple_end_0019:	; new closure is in rax
  3896 00002344 48890425[80020000]      	mov qword [free_var_80], rax
  3897 0000234C 48B8-                   	mov rax, sob_void
  3897 0000234E [0000000000000000] 
  3898                                  
  3899 00002356 4889C7                  	mov rdi, rax
  3900 00002359 E8C9E90000              	call print_sexpr_if_not_void
  3901                                  
  3902 0000235E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3903 00002363 E8AEE90000              	call malloc
  3904 00002368 50                      	push rax
  3905 00002369 BF00000000              	mov rdi, 8 * 0	; new rib
  3906 0000236E E8A3E90000              	call malloc
  3907 00002373 50                      	push rax
  3908 00002374 BF08000000              	mov rdi, 8 * 1	; extended env
  3909 00002379 E898E90000              	call malloc
  3910 0000237E 488B7D10                	mov rdi, ENV
  3911 00002382 BE00000000              	mov rsi, 0
  3912 00002387 BA01000000              	mov rdx, 1
  3913                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  3914 0000238C 4883FE00                	cmp rsi, 0
  3915 00002390 7410                    	je .L_lambda_simple_env_end_001a
  3916 00002392 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3917 00002396 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3918 0000239A 48FFC6                  	inc rsi
  3919 0000239D 48FFC2                  	inc rdx
  3920 000023A0 EBEA                    	jmp .L_lambda_simple_env_loop_001a
  3921                                  .L_lambda_simple_env_end_001a:
  3922 000023A2 5B                      	pop rbx
  3923 000023A3 BE00000000              	mov rsi, 0
  3924                                  .L_lambda_simple_params_loop_001a:	; copy params
  3925 000023A8 4883FE00                	cmp rsi, 0
  3926 000023AC 740E                    	je .L_lambda_simple_params_end_001a
  3927 000023AE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3928 000023B3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3929 000023B7 48FFC6                  	inc rsi
  3930 000023BA EBEC                    	jmp .L_lambda_simple_params_loop_001a
  3931                                  .L_lambda_simple_params_end_001a:
  3932 000023BC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3933 000023BF 4889C3                  	mov rbx, rax
  3934 000023C2 58                      	pop rax
  3935 000023C3 C60005                  	mov byte [rax], T_closure
  3936 000023C6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3937 000023CA 48C74009[D7230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  3938 000023D2 E99F000000              	jmp .L_lambda_simple_end_001a
  3939                                  .L_lambda_simple_code_001a:	; lambda-simple body
  3940 000023D7 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3941 000023DD 740B                    	je .L_lambda_simple_arity_check_ok_0033
  3942 000023DF FF742410                	push qword [rsp + 8 * 2]
  3943 000023E3 6A01                    	push 1
  3944 000023E5 E9E5E80000              	jmp L_error_incorrect_arity_simple
  3945                                  .L_lambda_simple_arity_check_ok_0033:
  3946 000023EA C8000000                	enter 0, 0
  3947 000023EE 488B4520                mov rax, qword [rbp + 32]
  3948 000023F2 50                      	push rax
  3949 000023F3 6A01                    	push 1
  3950 000023F5 488B0425[C8010000]      	mov rax, qword [free_var_57]
  3951 000023FD 803805                  	cmp byte [rax], T_closure 
  3952 00002400 0F8598F80000                    jne L_code_ptr_error
  3953                                  
  3954 00002406 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  3955                                  
  3956 0000240A 53                              push rbx
  3957                                  
  3958 0000240B FF5009                          call SOB_CLOSURE_CODE(rax)
  3959                                  
  3960 0000240E 50                              	push rax
  3961 0000240F 6A01                    	push 1
  3962 00002411 488B0425[D8010000]      	mov rax, qword [free_var_59]
  3963                                  .L_lambda_simple_arity_check_ok_0034:
  3964 00002419 803805                  	cmp byte [rax], T_closure
  3965                                  
  3966 0000241C 0F857CF80000                    jne L_code_ptr_error                      ; rax <- proc
  3967                                  
  3968                                  
  3969 00002422 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  3970                                  
  3971 00002426 53                              push rbx                                  ; env pushed
  3972                                  
  3973 00002427 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  3974                                  
  3975                                  
  3976 0000242A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  3977                                  
  3978                                          
  3979                                          
  3980 0000242D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  3981                                  
  3982 00002431 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  3983                                  
  3984                                  
  3985 00002436 4D89CA                          mov r10, r9
  3986 00002439 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  3987                                  
  3988                                                                                         
  3989 0000243D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  3990 00002440 4983C404                        add r12, 4
  3991                                  
  3992 00002444 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  3993                                  .L_tc_recycle_frame_loop_001a:
  3994 0000244A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  3995                                  
  3996 0000244E 4E8974E500                      mov [rbp + (r12 * 8)], r14
  3997                                  
  3998                                  
  3999                                  
  4000 00002453 41BE00000000                    mov r14, 0                                ; clean box
  4001                                  
  4002                                  
  4003                                                                  
  4004 00002459 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4005                                  
  4006 0000245D 4983C4FF                        add r12, -1 
  4007                                  
  4008 00002461 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4009 00002465 75E3                    	jne .L_tc_recycle_frame_loop_001a
  4010                                  .L_tc_recycle_frame_done_001a:
  4011 00002467 5D                      	pop rbp                                  ; restore the old rbp
  4012                                  
  4013 00002468 488B4D00                        mov rcx, qword [rbp]
  4014 0000246C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4015                                            ; rbx <- code(proc)
  4016                                  
  4017 00002470 FFE3                            jmp rbx
  4018 00002472 C9                      	leave
  4019 00002473 C21800                  	ret 8 * (2 + 1)
  4020                                  .L_lambda_simple_end_001a:	; new closure is in rax
  4021 00002476 48890425[88020000]      	mov qword [free_var_81], rax
  4022 0000247E 48B8-                   	mov rax, sob_void
  4022 00002480 [0000000000000000] 
  4023                                  
  4024 00002488 4889C7                  	mov rdi, rax
  4025 0000248B E897E80000              	call print_sexpr_if_not_void
  4026                                  
  4027 00002490 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4028 00002495 E87CE80000              	call malloc
  4029 0000249A 50                      	push rax
  4030 0000249B BF00000000              	mov rdi, 8 * 0	; new rib
  4031 000024A0 E871E80000              	call malloc
  4032 000024A5 50                      	push rax
  4033 000024A6 BF08000000              	mov rdi, 8 * 1	; extended env
  4034 000024AB E866E80000              	call malloc
  4035 000024B0 488B7D10                	mov rdi, ENV
  4036 000024B4 BE00000000              	mov rsi, 0
  4037 000024B9 BA01000000              	mov rdx, 1
  4038                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  4039 000024BE 4883FE00                	cmp rsi, 0
  4040 000024C2 7410                    	je .L_lambda_simple_env_end_001b
  4041 000024C4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4042 000024C8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4043 000024CC 48FFC6                  	inc rsi
  4044 000024CF 48FFC2                  	inc rdx
  4045 000024D2 EBEA                    	jmp .L_lambda_simple_env_loop_001b
  4046                                  .L_lambda_simple_env_end_001b:
  4047 000024D4 5B                      	pop rbx
  4048 000024D5 BE00000000              	mov rsi, 0
  4049                                  .L_lambda_simple_params_loop_001b:	; copy params
  4050 000024DA 4883FE00                	cmp rsi, 0
  4051 000024DE 740E                    	je .L_lambda_simple_params_end_001b
  4052 000024E0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4053 000024E5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4054 000024E9 48FFC6                  	inc rsi
  4055 000024EC EBEC                    	jmp .L_lambda_simple_params_loop_001b
  4056                                  .L_lambda_simple_params_end_001b:
  4057 000024EE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4058 000024F1 4889C3                  	mov rbx, rax
  4059 000024F4 58                      	pop rax
  4060 000024F5 C60005                  	mov byte [rax], T_closure
  4061 000024F8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4062 000024FC 48C74009[09250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  4063 00002504 E99F000000              	jmp .L_lambda_simple_end_001b
  4064                                  .L_lambda_simple_code_001b:	; lambda-simple body
  4065 00002509 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4066 0000250F 740B                    	je .L_lambda_simple_arity_check_ok_0035
  4067 00002511 FF742410                	push qword [rsp + 8 * 2]
  4068 00002515 6A01                    	push 1
  4069 00002517 E9B3E70000              	jmp L_error_incorrect_arity_simple
  4070                                  .L_lambda_simple_arity_check_ok_0035:
  4071 0000251C C8000000                	enter 0, 0
  4072 00002520 488B4520                mov rax, qword [rbp + 32]
  4073 00002524 50                      	push rax
  4074 00002525 6A01                    	push 1
  4075 00002527 488B0425[D0010000]      	mov rax, qword [free_var_58]
  4076 0000252F 803805                  	cmp byte [rax], T_closure 
  4077 00002532 0F8566F70000                    jne L_code_ptr_error
  4078                                  
  4079 00002538 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4080                                  
  4081 0000253C 53                              push rbx
  4082                                  
  4083 0000253D FF5009                          call SOB_CLOSURE_CODE(rax)
  4084                                  
  4085 00002540 50                              	push rax
  4086 00002541 6A01                    	push 1
  4087 00002543 488B0425[D8010000]      	mov rax, qword [free_var_59]
  4088                                  .L_lambda_simple_arity_check_ok_0036:
  4089 0000254B 803805                  	cmp byte [rax], T_closure
  4090                                  
  4091 0000254E 0F854AF70000                    jne L_code_ptr_error                      ; rax <- proc
  4092                                  
  4093                                  
  4094 00002554 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4095                                  
  4096 00002558 53                              push rbx                                  ; env pushed
  4097                                  
  4098 00002559 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4099                                  
  4100                                  
  4101 0000255C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4102                                  
  4103                                          
  4104                                          
  4105 0000255F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4106                                  
  4107 00002563 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4108                                  
  4109                                  
  4110 00002568 4D89CA                          mov r10, r9
  4111 0000256B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  4112                                  
  4113                                                                                         
  4114 0000256F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4115 00002572 4983C404                        add r12, 4
  4116                                  
  4117 00002576 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4118                                  .L_tc_recycle_frame_loop_001b:
  4119 0000257C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  4120                                  
  4121 00002580 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4122                                  
  4123                                  
  4124                                  
  4125 00002585 41BE00000000                    mov r14, 0                                ; clean box
  4126                                  
  4127                                  
  4128                                                                  
  4129 0000258B 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4130                                  
  4131 0000258F 4983C4FF                        add r12, -1 
  4132                                  
  4133 00002593 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4134 00002597 75E3                    	jne .L_tc_recycle_frame_loop_001b
  4135                                  .L_tc_recycle_frame_done_001b:
  4136 00002599 5D                      	pop rbp                                  ; restore the old rbp
  4137                                  
  4138 0000259A 488B4D00                        mov rcx, qword [rbp]
  4139 0000259E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4140                                            ; rbx <- code(proc)
  4141                                  
  4142 000025A2 FFE3                            jmp rbx
  4143 000025A4 C9                      	leave
  4144 000025A5 C21800                  	ret 8 * (2 + 1)
  4145                                  .L_lambda_simple_end_001b:	; new closure is in rax
  4146 000025A8 48890425[90020000]      	mov qword [free_var_82], rax
  4147 000025B0 48B8-                   	mov rax, sob_void
  4147 000025B2 [0000000000000000] 
  4148                                  
  4149 000025BA 4889C7                  	mov rdi, rax
  4150 000025BD E865E70000              	call print_sexpr_if_not_void
  4151                                  
  4152 000025C2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4153 000025C7 E84AE70000              	call malloc
  4154 000025CC 50                      	push rax
  4155 000025CD BF00000000              	mov rdi, 8 * 0	; new rib
  4156 000025D2 E83FE70000              	call malloc
  4157 000025D7 50                      	push rax
  4158 000025D8 BF08000000              	mov rdi, 8 * 1	; extended env
  4159 000025DD E834E70000              	call malloc
  4160 000025E2 488B7D10                	mov rdi, ENV
  4161 000025E6 BE00000000              	mov rsi, 0
  4162 000025EB BA01000000              	mov rdx, 1
  4163                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  4164 000025F0 4883FE00                	cmp rsi, 0
  4165 000025F4 7410                    	je .L_lambda_simple_env_end_001c
  4166 000025F6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4167 000025FA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4168 000025FE 48FFC6                  	inc rsi
  4169 00002601 48FFC2                  	inc rdx
  4170 00002604 EBEA                    	jmp .L_lambda_simple_env_loop_001c
  4171                                  .L_lambda_simple_env_end_001c:
  4172 00002606 5B                      	pop rbx
  4173 00002607 BE00000000              	mov rsi, 0
  4174                                  .L_lambda_simple_params_loop_001c:	; copy params
  4175 0000260C 4883FE00                	cmp rsi, 0
  4176 00002610 740E                    	je .L_lambda_simple_params_end_001c
  4177 00002612 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4178 00002617 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4179 0000261B 48FFC6                  	inc rsi
  4180 0000261E EBEC                    	jmp .L_lambda_simple_params_loop_001c
  4181                                  .L_lambda_simple_params_end_001c:
  4182 00002620 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4183 00002623 4889C3                  	mov rbx, rax
  4184 00002626 58                      	pop rax
  4185 00002627 C60005                  	mov byte [rax], T_closure
  4186 0000262A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4187 0000262E 48C74009[3B260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  4188 00002636 E99F000000              	jmp .L_lambda_simple_end_001c
  4189                                  .L_lambda_simple_code_001c:	; lambda-simple body
  4190 0000263B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4191 00002641 740B                    	je .L_lambda_simple_arity_check_ok_0037
  4192 00002643 FF742410                	push qword [rsp + 8 * 2]
  4193 00002647 6A01                    	push 1
  4194 00002649 E981E60000              	jmp L_error_incorrect_arity_simple
  4195                                  .L_lambda_simple_arity_check_ok_0037:
  4196 0000264E C8000000                	enter 0, 0
  4197 00002652 488B4520                mov rax, qword [rbp + 32]
  4198 00002656 50                      	push rax
  4199 00002657 6A01                    	push 1
  4200 00002659 488B0425[D8010000]      	mov rax, qword [free_var_59]
  4201 00002661 803805                  	cmp byte [rax], T_closure 
  4202 00002664 0F8534F60000                    jne L_code_ptr_error
  4203                                  
  4204 0000266A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4205                                  
  4206 0000266E 53                              push rbx
  4207                                  
  4208 0000266F FF5009                          call SOB_CLOSURE_CODE(rax)
  4209                                  
  4210 00002672 50                              	push rax
  4211 00002673 6A01                    	push 1
  4212 00002675 488B0425[D8010000]      	mov rax, qword [free_var_59]
  4213                                  .L_lambda_simple_arity_check_ok_0038:
  4214 0000267D 803805                  	cmp byte [rax], T_closure
  4215                                  
  4216 00002680 0F8518F60000                    jne L_code_ptr_error                      ; rax <- proc
  4217                                  
  4218                                  
  4219 00002686 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4220                                  
  4221 0000268A 53                              push rbx                                  ; env pushed
  4222                                  
  4223 0000268B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4224                                  
  4225                                  
  4226 0000268E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4227                                  
  4228                                          
  4229                                          
  4230 00002691 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4231                                  
  4232 00002695 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4233                                  
  4234                                  
  4235 0000269A 4D89CA                          mov r10, r9
  4236 0000269D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  4237                                  
  4238                                                                                         
  4239 000026A1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4240 000026A4 4983C404                        add r12, 4
  4241                                  
  4242 000026A8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4243                                  .L_tc_recycle_frame_loop_001c:
  4244 000026AE 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  4245                                  
  4246 000026B2 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4247                                  
  4248                                  
  4249                                  
  4250 000026B7 41BE00000000                    mov r14, 0                                ; clean box
  4251                                  
  4252                                  
  4253                                                                  
  4254 000026BD 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4255                                  
  4256 000026C1 4983C4FF                        add r12, -1 
  4257                                  
  4258 000026C5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4259 000026C9 75E3                    	jne .L_tc_recycle_frame_loop_001c
  4260                                  .L_tc_recycle_frame_done_001c:
  4261 000026CB 5D                      	pop rbp                                  ; restore the old rbp
  4262                                  
  4263 000026CC 488B4D00                        mov rcx, qword [rbp]
  4264 000026D0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4265                                            ; rbx <- code(proc)
  4266                                  
  4267 000026D4 FFE3                            jmp rbx
  4268 000026D6 C9                      	leave
  4269 000026D7 C21800                  	ret 8 * (2 + 1)
  4270                                  .L_lambda_simple_end_001c:	; new closure is in rax
  4271 000026DA 48890425[98020000]      	mov qword [free_var_83], rax
  4272 000026E2 48B8-                   	mov rax, sob_void
  4272 000026E4 [0000000000000000] 
  4273                                  
  4274 000026EC 4889C7                  	mov rdi, rax
  4275 000026EF E833E60000              	call print_sexpr_if_not_void
  4276                                  
  4277 000026F4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4278 000026F9 E818E60000              	call malloc
  4279 000026FE 50                      	push rax
  4280 000026FF BF00000000              	mov rdi, 8 * 0	; new rib
  4281 00002704 E80DE60000              	call malloc
  4282 00002709 50                      	push rax
  4283 0000270A BF08000000              	mov rdi, 8 * 1	; extended env
  4284 0000270F E802E60000              	call malloc
  4285 00002714 488B7D10                	mov rdi, ENV
  4286 00002718 BE00000000              	mov rsi, 0
  4287 0000271D BA01000000              	mov rdx, 1
  4288                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  4289 00002722 4883FE00                	cmp rsi, 0
  4290 00002726 7410                    	je .L_lambda_simple_env_end_001d
  4291 00002728 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4292 0000272C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4293 00002730 48FFC6                  	inc rsi
  4294 00002733 48FFC2                  	inc rdx
  4295 00002736 EBEA                    	jmp .L_lambda_simple_env_loop_001d
  4296                                  .L_lambda_simple_env_end_001d:
  4297 00002738 5B                      	pop rbx
  4298 00002739 BE00000000              	mov rsi, 0
  4299                                  .L_lambda_simple_params_loop_001d:	; copy params
  4300 0000273E 4883FE00                	cmp rsi, 0
  4301 00002742 740E                    	je .L_lambda_simple_params_end_001d
  4302 00002744 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4303 00002749 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4304 0000274D 48FFC6                  	inc rsi
  4305 00002750 EBEC                    	jmp .L_lambda_simple_params_loop_001d
  4306                                  .L_lambda_simple_params_end_001d:
  4307 00002752 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4308 00002755 4889C3                  	mov rbx, rax
  4309 00002758 58                      	pop rax
  4310 00002759 C60005                  	mov byte [rax], T_closure
  4311 0000275C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4312 00002760 48C74009[6D270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  4313 00002768 E903010000              	jmp .L_lambda_simple_end_001d
  4314                                  .L_lambda_simple_code_001d:	; lambda-simple body
  4315 0000276D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4316 00002773 740B                    	je .L_lambda_simple_arity_check_ok_0039
  4317 00002775 FF742410                	push qword [rsp + 8 * 2]
  4318 00002779 6A01                    	push 1
  4319 0000277B E94FE50000              	jmp L_error_incorrect_arity_simple
  4320                                  .L_lambda_simple_arity_check_ok_0039:
  4321 00002780 C8000000                	enter 0, 0
  4322 00002784 488B4520                mov rax, qword [rbp + 32]
  4323 00002788 50                      	push rax
  4324 00002789 6A01                    	push 1
  4325 0000278B 488B0425[00000000]      	mov rax, qword [free_var_0]
  4326 00002793 803805                  	cmp byte [rax], T_closure 
  4327 00002796 0F8502F50000                    jne L_code_ptr_error
  4328                                  
  4329 0000279C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4330                                  
  4331 000027A0 53                              push rbx
  4332                                  
  4333 000027A1 FF5009                          call SOB_CLOSURE_CODE(rax)
  4334                                  
  4335 000027A4 483D[02000000]                  	cmp rax, sob_boolean_false
  4336 000027AA 0F85BC000000            	jne .L_or_end_0001
  4337 000027B0 488B4520                mov rax, qword [rbp + 32]
  4338 000027B4 50                      	push rax
  4339 000027B5 6A01                    	push 1
  4340 000027B7 488B0425[08000000]      	mov rax, qword [free_var_1]
  4341 000027BF 803805                  	cmp byte [rax], T_closure 
  4342 000027C2 0F85D6F40000                    jne L_code_ptr_error
  4343                                  
  4344 000027C8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4345                                  
  4346 000027CC 53                              push rbx
  4347                                  
  4348 000027CD FF5009                          call SOB_CLOSURE_CODE(rax)
  4349                                  
  4350 000027D0 483D[02000000]                  	cmp rax, sob_boolean_false
  4351 000027D6 0F8486000000            	je .L_if_else_0001
  4352 000027DC 488B4520                mov rax, qword [rbp + 32]
  4353 000027E0 50                      	push rax
  4354 000027E1 6A01                    	push 1
  4355 000027E3 488B0425[88000000]      	mov rax, qword [free_var_17]
  4356 000027EB 803805                  	cmp byte [rax], T_closure 
  4357 000027EE 0F85AAF40000                    jne L_code_ptr_error
  4358                                  
  4359 000027F4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4360                                  
  4361 000027F8 53                              push rbx
  4362                                  
  4363 000027F9 FF5009                          call SOB_CLOSURE_CODE(rax)
  4364                                  
  4365 000027FC 50                              	push rax
  4366 000027FD 6A01                    	push 1
  4367 000027FF 488B0425[A0020000]      	mov rax, qword [free_var_84]
  4368                                  .L_lambda_simple_arity_check_ok_003a:
  4369 00002807 803805                  	cmp byte [rax], T_closure
  4370                                  
  4371 0000280A 0F858EF40000                    jne L_code_ptr_error                      ; rax <- proc
  4372                                  
  4373                                  
  4374 00002810 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4375                                  
  4376 00002814 53                              push rbx                                  ; env pushed
  4377                                  
  4378 00002815 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4379                                  
  4380                                  
  4381 00002818 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4382                                  
  4383                                          
  4384                                          
  4385 0000281B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4386                                  
  4387 0000281F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4388                                  
  4389                                  
  4390 00002824 4D89CA                          mov r10, r9
  4391 00002827 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  4392                                  
  4393                                                                                         
  4394 0000282B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4395 0000282E 4983C404                        add r12, 4
  4396                                  
  4397 00002832 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4398                                  .L_tc_recycle_frame_loop_001d:
  4399 00002838 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  4400                                  
  4401 0000283C 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4402                                  
  4403                                  
  4404                                  
  4405 00002841 41BE00000000                    mov r14, 0                                ; clean box
  4406                                  
  4407                                  
  4408                                                                  
  4409 00002847 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4410                                  
  4411 0000284B 4983C4FF                        add r12, -1 
  4412                                  
  4413 0000284F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4414 00002853 75E3                    	jne .L_tc_recycle_frame_loop_001d
  4415                                  .L_tc_recycle_frame_done_001d:
  4416 00002855 5D                      	pop rbp                                  ; restore the old rbp
  4417                                  
  4418 00002856 488B4D00                        mov rcx, qword [rbp]
  4419 0000285A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4420                                            ; rbx <- code(proc)
  4421                                  
  4422 0000285E FFE3                            jmp rbx
  4423 00002860 EB0A                    	jmp .L_if_end_0001
  4424                                  	.L_if_else_0001:
  4425 00002862 48B8-                   		mov rax, qword (L_constants + 2)
  4425 00002864 [0200000000000000] 
  4426                                  	.L_if_end_0001:
  4427                                  .L_or_end_0001:
  4428 0000286C C9                      	leave
  4429 0000286D C21800                  	ret 8 * (2 + 1)
  4430                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4431 00002870 48890425[A0020000]      	mov qword [free_var_84], rax
  4432 00002878 48B8-                   	mov rax, sob_void
  4432 0000287A [0000000000000000] 
  4433                                  
  4434 00002882 4889C7                  	mov rdi, rax
  4435 00002885 E89DE40000              	call print_sexpr_if_not_void
  4436                                  
  4437 0000288A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4438 0000288F E882E40000              	call malloc
  4439 00002894 50                      	push rax
  4440 00002895 BF00000000              	mov rdi, 8 * 0	; new rib
  4441 0000289A E877E40000              	call malloc
  4442 0000289F 50                      	push rax
  4443 000028A0 BF08000000              	mov rdi, 8 * 1	; extended env
  4444 000028A5 E86CE40000              	call malloc
  4445 000028AA 488B7D10                	mov rdi, ENV
  4446 000028AE BE00000000              	mov rsi, 0
  4447 000028B3 BA01000000              	mov rdx, 1
  4448                                  .L_lambda_opt_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  4449 000028B8 4883FE00                	cmp rsi, 0
  4450 000028BC 7410                    	je .L_lambda_opt_env_end_0001
  4451 000028BE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4452 000028C2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4453 000028C6 48FFC6                  	inc rsi
  4454 000028C9 48FFC2                  	inc rdx
  4455 000028CC EBEA                    	jmp .L_lambda_opt_env_loop_0001
  4456                                  .L_lambda_opt_env_end_0001:
  4457 000028CE 5B                      	pop rbx
  4458 000028CF BE00000000              	mov rsi, 0
  4459                                  .L_lambda_opt_params_loop_0001:	; copy params
  4460 000028D4 4883FE00                	cmp rsi, 0
  4461 000028D8 740E                    	je .L_lambda_opt_params_end_0001
  4462 000028DA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4463 000028DF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4464 000028E3 48FFC6                  	inc rsi
  4465 000028E6 EBEC                    	jmp .L_lambda_opt_params_loop_0001
  4466                                  .L_lambda_opt_params_end_0001:
  4467 000028E8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4468 000028EB 4889C3                  	mov rbx, rax
  4469 000028EE 58                      	pop rax
  4470 000028EF C60005                  	mov byte [rax], T_closure
  4471 000028F2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4472 000028F6 48C74009[03290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0001
  4473 000028FE E9B8000000              	jmp .L_lambda_opt_end_0001
  4474                                  .L_lambda_opt_code_0001:
  4475 00002903 4C8B542410              mov r10, qword [rsp+8*2]
  4476 00002908 4983FA00                cmp r10, 0
  4477 0000290C 740B                    je .L_lambda_opt_arity_check_exact_0001
  4478 0000290E 4983FA00                cmp r10, 0
  4479 00002912 7F41                    jg .L_lambda_opt_arity_check_more_0001
  4480 00002914 E9CAE30000              jmp L_error_incorrect_arity_opt
  4481                                  .L_lambda_opt_arity_check_exact_0001:
  4482 00002919 4883EC08                sub rsp, 8
  4483 0000291D BA03000000              mov rdx, 3+0
  4484 00002922 4889E3                  mov qword rbx, rsp
  4485                                  .L_lambda_opt_params_loop_0002:
  4486 00002925 488B4B08                mov qword rcx, [rbx+8]
  4487 00002929 48890B                  mov qword [rbx], rcx
  4488 0000292C 48FFCA                  dec rdx
  4489 0000292F 4883C308                add rbx, 8
  4490 00002933 4883FA00                cmp rdx, 0
  4491 00002937 7402                    je .L_lambda_opt_params_end_0002
  4492 00002939 EBEA                    jmp .L_lambda_opt_params_loop_0002
  4493                                  .L_lambda_opt_params_end_0002:
  4494 0000293B 49FFC2                  inc r10
  4495 0000293E 4C89542410              mov qword [rsp+8*2], r10
  4496 00002943 4983C202                add r10, 2
  4497 00002947 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  4498 0000294F 4C8B4D00                mov r9, [rbp]
  4499 00002953 EB52                    jmp .L_lambda_opt_stack_adjusted_0001
  4500                                  .L_lambda_opt_arity_check_more_0001:
  4501 00002955 48B8-                   mov rax, sob_nil
  4501 00002957 [0100000000000000] 
  4502 0000295F 4C8B542410              mov r10, [rsp+2*8]
  4503 00002964 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  4504 00002969 4983EA00                sub r10, 0
  4505                                  .L_lambda_opt_stack_shrink_loop_0001:
  4506 0000296D 4983FA00                cmp r10, 0
  4507 00002971 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0001
  4508 00002973 4889C1                  mov rcx, rax
  4509 00002976 498B10                  mov rdx, [r8]
  4510 00002979 BF11000000              mov rdi, 17
  4511 0000297E E893E30000              call malloc
  4512 00002983 C60021                  mov byte [rax], T_pair
  4513 00002986 48894809                mov SOB_PAIR_CDR(rax), rcx
  4514 0000298A 48895001                mov SOB_PAIR_CAR(rax), rdx
  4515 0000298E 4983E808                sub r8, 8
  4516 00002992 49FFCA                  dec r10
  4517 00002995 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0001
  4518                                  .L_lambda_opt_stack_shrink_loop_exit_0001:
  4519 00002997 4889442418              mov [rsp+8*(2+1)], rax
  4520 0000299C 41BA01000000            mov r10, 1
  4521 000029A2 4C89542410              mov [rsp+16], r10
  4522                                  .L_lambda_opt_stack_adjusted_0001:
  4523 000029A7 4C8B4D00                mov r9, [rbp]
  4524 000029AB C8000000                enter 0, 0
  4525 000029AF 488B4520                mov rax, qword [rbp + 32]
  4526 000029B3 C9                      leave
  4527 000029B4 4C8B4D00                mov r9, [rbp]
  4528 000029B8 C22000                  ret 8 * (3 + 1)
  4529                                  .L_lambda_opt_end_0001:	; new closure is in rax
  4530 000029BB 48890425[A8020000]      	mov qword [free_var_85], rax
  4531 000029C3 48B8-                   	mov rax, sob_void
  4531 000029C5 [0000000000000000] 
  4532                                  
  4533 000029CD 4889C7                  	mov rdi, rax
  4534 000029D0 E852E30000              	call print_sexpr_if_not_void
  4535                                  
  4536 000029D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4537 000029DA E837E30000              	call malloc
  4538 000029DF 50                      	push rax
  4539 000029E0 BF00000000              	mov rdi, 8 * 0	; new rib
  4540 000029E5 E82CE30000              	call malloc
  4541 000029EA 50                      	push rax
  4542 000029EB BF08000000              	mov rdi, 8 * 1	; extended env
  4543 000029F0 E821E30000              	call malloc
  4544 000029F5 488B7D10                	mov rdi, ENV
  4545 000029F9 BE00000000              	mov rsi, 0
  4546 000029FE BA01000000              	mov rdx, 1
  4547                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  4548 00002A03 4883FE00                	cmp rsi, 0
  4549 00002A07 7410                    	je .L_lambda_simple_env_end_001e
  4550 00002A09 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4551 00002A0D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4552 00002A11 48FFC6                  	inc rsi
  4553 00002A14 48FFC2                  	inc rdx
  4554 00002A17 EBEA                    	jmp .L_lambda_simple_env_loop_001e
  4555                                  .L_lambda_simple_env_end_001e:
  4556 00002A19 5B                      	pop rbx
  4557 00002A1A BE00000000              	mov rsi, 0
  4558                                  .L_lambda_simple_params_loop_001e:	; copy params
  4559 00002A1F 4883FE00                	cmp rsi, 0
  4560 00002A23 740E                    	je .L_lambda_simple_params_end_001e
  4561 00002A25 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4562 00002A2A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4563 00002A2E 48FFC6                  	inc rsi
  4564 00002A31 EBEC                    	jmp .L_lambda_simple_params_loop_001e
  4565                                  .L_lambda_simple_params_end_001e:
  4566 00002A33 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4567 00002A36 4889C3                  	mov rbx, rax
  4568 00002A39 58                      	pop rax
  4569 00002A3A C60005                  	mov byte [rax], T_closure
  4570 00002A3D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4571 00002A41 48C74009[4B2A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  4572 00002A49 EB3D                    	jmp .L_lambda_simple_end_001e
  4573                                  .L_lambda_simple_code_001e:	; lambda-simple body
  4574 00002A4B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4575 00002A51 740B                    	je .L_lambda_simple_arity_check_ok_003b
  4576 00002A53 FF742410                	push qword [rsp + 8 * 2]
  4577 00002A57 6A01                    	push 1
  4578 00002A59 E971E20000              	jmp L_error_incorrect_arity_simple
  4579                                  .L_lambda_simple_arity_check_ok_003b:
  4580 00002A5E C8000000                	enter 0, 0
  4581 00002A62 488B4520                mov rax, qword [rbp + 32]
  4582 00002A66 483D[02000000]          	cmp rax, sob_boolean_false
  4583 00002A6C 740C                    	je .L_if_else_0002
  4584 00002A6E 48B8-                   	mov rax, qword (L_constants + 2)
  4584 00002A70 [0200000000000000] 
  4585 00002A78 EB0A                    	jmp .L_if_end_0002
  4586                                  	.L_if_else_0002:
  4587 00002A7A 48B8-                   		mov rax, qword (L_constants + 3)
  4587 00002A7C [0300000000000000] 
  4588                                  	.L_if_end_0002:
  4589 00002A84 C9                      	leave
  4590 00002A85 C21800                  	ret 8 * (2 + 1)
  4591                                  .L_lambda_simple_end_001e:	; new closure is in rax
  4592 00002A88 48890425[B0020000]      	mov qword [free_var_86], rax
  4593 00002A90 48B8-                   	mov rax, sob_void
  4593 00002A92 [0000000000000000] 
  4594                                  
  4595 00002A9A 4889C7                  	mov rdi, rax
  4596 00002A9D E885E20000              	call print_sexpr_if_not_void
  4597                                  
  4598 00002AA2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4599 00002AA7 E86AE20000              	call malloc
  4600 00002AAC 50                      	push rax
  4601 00002AAD BF00000000              	mov rdi, 8 * 0	; new rib
  4602 00002AB2 E85FE20000              	call malloc
  4603 00002AB7 50                      	push rax
  4604 00002AB8 BF08000000              	mov rdi, 8 * 1	; extended env
  4605 00002ABD E854E20000              	call malloc
  4606 00002AC2 488B7D10                	mov rdi, ENV
  4607 00002AC6 BE00000000              	mov rsi, 0
  4608 00002ACB BA01000000              	mov rdx, 1
  4609                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  4610 00002AD0 4883FE00                	cmp rsi, 0
  4611 00002AD4 7410                    	je .L_lambda_simple_env_end_001f
  4612 00002AD6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4613 00002ADA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4614 00002ADE 48FFC6                  	inc rsi
  4615 00002AE1 48FFC2                  	inc rdx
  4616 00002AE4 EBEA                    	jmp .L_lambda_simple_env_loop_001f
  4617                                  .L_lambda_simple_env_end_001f:
  4618 00002AE6 5B                      	pop rbx
  4619 00002AE7 BE00000000              	mov rsi, 0
  4620                                  .L_lambda_simple_params_loop_001f:	; copy params
  4621 00002AEC 4883FE00                	cmp rsi, 0
  4622 00002AF0 740E                    	je .L_lambda_simple_params_end_001f
  4623 00002AF2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4624 00002AF7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4625 00002AFB 48FFC6                  	inc rsi
  4626 00002AFE EBEC                    	jmp .L_lambda_simple_params_loop_001f
  4627                                  .L_lambda_simple_params_end_001f:
  4628 00002B00 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4629 00002B03 4889C3                  	mov rbx, rax
  4630 00002B06 58                      	pop rax
  4631 00002B07 C60005                  	mov byte [rax], T_closure
  4632 00002B0A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4633 00002B0E 48C74009[1B2B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  4634 00002B16 E9D7000000              	jmp .L_lambda_simple_end_001f
  4635                                  .L_lambda_simple_code_001f:	; lambda-simple body
  4636 00002B1B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4637 00002B21 740B                    	je .L_lambda_simple_arity_check_ok_003c
  4638 00002B23 FF742410                	push qword [rsp + 8 * 2]
  4639 00002B27 6A01                    	push 1
  4640 00002B29 E9A1E10000              	jmp L_error_incorrect_arity_simple
  4641                                  .L_lambda_simple_arity_check_ok_003c:
  4642 00002B2E C8000000                	enter 0, 0
  4643 00002B32 488B4520                mov rax, qword [rbp + 32]
  4644 00002B36 50                      	push rax
  4645 00002B37 6A01                    	push 1
  4646 00002B39 488B0425[48000000]      	mov rax, qword [free_var_9]
  4647 00002B41 803805                  	cmp byte [rax], T_closure 
  4648 00002B44 0F8554F10000                    jne L_code_ptr_error
  4649                                  
  4650 00002B4A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4651                                  
  4652 00002B4E 53                              push rbx
  4653                                  
  4654 00002B4F FF5009                          call SOB_CLOSURE_CODE(rax)
  4655                                  
  4656 00002B52 483D[02000000]                  	cmp rax, sob_boolean_false
  4657 00002B58 0F8486000000            	je .L_if_else_0003
  4658 00002B5E 488B4520                mov rax, qword [rbp + 32]
  4659 00002B62 50                      	push rax
  4660 00002B63 6A01                    	push 1
  4661 00002B65 488B0425[E0000000]      	mov rax, qword [free_var_28]
  4662 00002B6D 803805                  	cmp byte [rax], T_closure 
  4663 00002B70 0F8528F10000                    jne L_code_ptr_error
  4664                                  
  4665 00002B76 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4666                                  
  4667 00002B7A 53                              push rbx
  4668                                  
  4669 00002B7B FF5009                          call SOB_CLOSURE_CODE(rax)
  4670                                  
  4671 00002B7E 50                              	push rax
  4672 00002B7F 6A01                    	push 1
  4673 00002B81 488B0425[B0020000]      	mov rax, qword [free_var_86]
  4674                                  .L_lambda_simple_arity_check_ok_003d:
  4675 00002B89 803805                  	cmp byte [rax], T_closure
  4676                                  
  4677 00002B8C 0F850CF10000                    jne L_code_ptr_error                      ; rax <- proc
  4678                                  
  4679                                  
  4680 00002B92 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4681                                  
  4682 00002B96 53                              push rbx                                  ; env pushed
  4683                                  
  4684 00002B97 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4685                                  
  4686                                  
  4687 00002B9A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4688                                  
  4689                                          
  4690                                          
  4691 00002B9D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4692                                  
  4693 00002BA1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4694                                  
  4695                                  
  4696 00002BA6 4D89CA                          mov r10, r9
  4697 00002BA9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  4698                                  
  4699                                                                                         
  4700 00002BAD 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4701 00002BB0 4983C404                        add r12, 4
  4702                                  
  4703 00002BB4 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4704                                  .L_tc_recycle_frame_loop_001e:
  4705 00002BBA 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  4706                                  
  4707 00002BBE 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4708                                  
  4709                                  
  4710                                  
  4711 00002BC3 41BE00000000                    mov r14, 0                                ; clean box
  4712                                  
  4713                                  
  4714                                                                  
  4715 00002BC9 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4716                                  
  4717 00002BCD 4983C4FF                        add r12, -1 
  4718                                  
  4719 00002BD1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4720 00002BD5 75E3                    	jne .L_tc_recycle_frame_loop_001e
  4721                                  .L_tc_recycle_frame_done_001e:
  4722 00002BD7 5D                      	pop rbp                                  ; restore the old rbp
  4723                                  
  4724 00002BD8 488B4D00                        mov rcx, qword [rbp]
  4725 00002BDC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4726                                            ; rbx <- code(proc)
  4727                                  
  4728 00002BE0 FFE3                            jmp rbx
  4729 00002BE2 EB0A                    	jmp .L_if_end_0003
  4730                                  	.L_if_else_0003:
  4731 00002BE4 48B8-                   		mov rax, qword (L_constants + 2)
  4731 00002BE6 [0200000000000000] 
  4732                                  	.L_if_end_0003:
  4733 00002BEE C9                      	leave
  4734 00002BEF C21800                  	ret 8 * (2 + 1)
  4735                                  .L_lambda_simple_end_001f:	; new closure is in rax
  4736 00002BF2 48890425[B8020000]      	mov qword [free_var_87], rax
  4737 00002BFA 48B8-                   	mov rax, sob_void
  4737 00002BFC [0000000000000000] 
  4738                                  
  4739 00002C04 4889C7                  	mov rdi, rax
  4740 00002C07 E81BE10000              	call print_sexpr_if_not_void
  4741                                  
  4742 00002C0C 48B8-                   	mov rax, qword (L_constants + 22)
  4742 00002C0E [1600000000000000] 
  4743 00002C16 50                      	push rax
  4744 00002C17 6A01                    	push 1
  4745 00002C19 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4746 00002C1E E8F3E00000              	call malloc
  4747 00002C23 50                      	push rax
  4748 00002C24 BF00000000              	mov rdi, 8 * 0	; new rib
  4749 00002C29 E8E8E00000              	call malloc
  4750 00002C2E 50                      	push rax
  4751 00002C2F BF08000000              	mov rdi, 8 * 1	; extended env
  4752 00002C34 E8DDE00000              	call malloc
  4753 00002C39 488B7D10                	mov rdi, ENV
  4754 00002C3D BE00000000              	mov rsi, 0
  4755 00002C42 BA01000000              	mov rdx, 1
  4756                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  4757 00002C47 4883FE00                	cmp rsi, 0
  4758 00002C4B 7410                    	je .L_lambda_simple_env_end_0020
  4759 00002C4D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4760 00002C51 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4761 00002C55 48FFC6                  	inc rsi
  4762 00002C58 48FFC2                  	inc rdx
  4763 00002C5B EBEA                    	jmp .L_lambda_simple_env_loop_0020
  4764                                  .L_lambda_simple_env_end_0020:
  4765 00002C5D 5B                      	pop rbx
  4766 00002C5E BE00000000              	mov rsi, 0
  4767                                  .L_lambda_simple_params_loop_0020:	; copy params
  4768 00002C63 4883FE00                	cmp rsi, 0
  4769 00002C67 740E                    	je .L_lambda_simple_params_end_0020
  4770 00002C69 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4771 00002C6E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4772 00002C72 48FFC6                  	inc rsi
  4773 00002C75 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  4774                                  .L_lambda_simple_params_end_0020:
  4775 00002C77 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4776 00002C7A 4889C3                  	mov rbx, rax
  4777 00002C7D 58                      	pop rax
  4778 00002C7E C60005                  	mov byte [rax], T_closure
  4779 00002C81 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4780 00002C85 48C74009[922C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  4781 00002C8D E980030000              	jmp .L_lambda_simple_end_0020
  4782                                  .L_lambda_simple_code_0020:	; lambda-simple body
  4783 00002C92 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4784 00002C98 740B                    	je .L_lambda_simple_arity_check_ok_003e
  4785 00002C9A FF742410                	push qword [rsp + 8 * 2]
  4786 00002C9E 6A01                    	push 1
  4787 00002CA0 E92AE00000              	jmp L_error_incorrect_arity_simple
  4788                                  .L_lambda_simple_arity_check_ok_003e:
  4789 00002CA5 C8000000                	enter 0, 0
  4790 00002CA9 BF08000000              mov rdi, 8
  4791 00002CAE E863E00000              call malloc
  4792 00002CB3 4889C3                  mov rbx, rax
  4793 00002CB6 488B4520                mov rax, qword [rbp + 32]
  4794 00002CBA 488903                  mov qword [rbx], rax
  4795 00002CBD 4889D8                  mov rax, rbx
  4796 00002CC0 48894520                mov qword [rbp + 32], rax
  4797 00002CC4 48B8-                   mov rax, sob_void
  4797 00002CC6 [0000000000000000] 
  4798 00002CCE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4799 00002CD3 E83EE00000              	call malloc
  4800 00002CD8 50                      	push rax
  4801 00002CD9 BF08000000              	mov rdi, 8 * 1	; new rib
  4802 00002CDE E833E00000              	call malloc
  4803 00002CE3 50                      	push rax
  4804 00002CE4 BF10000000              	mov rdi, 8 * 2	; extended env
  4805 00002CE9 E828E00000              	call malloc
  4806 00002CEE 488B7D10                	mov rdi, ENV
  4807 00002CF2 BE00000000              	mov rsi, 0
  4808 00002CF7 BA01000000              	mov rdx, 1
  4809                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  4810 00002CFC 4883FE01                	cmp rsi, 1
  4811 00002D00 7410                    	je .L_lambda_simple_env_end_0021
  4812 00002D02 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4813 00002D06 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4814 00002D0A 48FFC6                  	inc rsi
  4815 00002D0D 48FFC2                  	inc rdx
  4816 00002D10 EBEA                    	jmp .L_lambda_simple_env_loop_0021
  4817                                  .L_lambda_simple_env_end_0021:
  4818 00002D12 5B                      	pop rbx
  4819 00002D13 BE00000000              	mov rsi, 0
  4820                                  .L_lambda_simple_params_loop_0021:	; copy params
  4821 00002D18 4883FE01                	cmp rsi, 1
  4822 00002D1C 740E                    	je .L_lambda_simple_params_end_0021
  4823 00002D1E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4824 00002D23 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4825 00002D27 48FFC6                  	inc rsi
  4826 00002D2A EBEC                    	jmp .L_lambda_simple_params_loop_0021
  4827                                  .L_lambda_simple_params_end_0021:
  4828 00002D2C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4829 00002D2F 4889C3                  	mov rbx, rax
  4830 00002D32 58                      	pop rax
  4831 00002D33 C60005                  	mov byte [rax], T_closure
  4832 00002D36 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4833 00002D3A 48C74009[472D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  4834 00002D42 E917010000              	jmp .L_lambda_simple_end_0021
  4835                                  .L_lambda_simple_code_0021:	; lambda-simple body
  4836 00002D47 48837C241002            	cmp qword [rsp + 8 * 2], 2
  4837 00002D4D 740B                    	je .L_lambda_simple_arity_check_ok_003f
  4838 00002D4F FF742410                	push qword [rsp + 8 * 2]
  4839 00002D53 6A02                    	push 2
  4840 00002D55 E975DF0000              	jmp L_error_incorrect_arity_simple
  4841                                  .L_lambda_simple_arity_check_ok_003f:
  4842 00002D5A C8000000                	enter 0, 0
  4843 00002D5E 488B4528                mov rax, qword [rbp + 40]
  4844 00002D62 50                      	push rax
  4845 00002D63 6A01                    	push 1
  4846 00002D65 488B0425[00000000]      	mov rax, qword [free_var_0]
  4847 00002D6D 803805                  	cmp byte [rax], T_closure 
  4848 00002D70 0F8528EF0000                    jne L_code_ptr_error
  4849                                  
  4850 00002D76 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4851                                  
  4852 00002D7A 53                              push rbx
  4853                                  
  4854 00002D7B FF5009                          call SOB_CLOSURE_CODE(rax)
  4855                                  
  4856 00002D7E 483D[02000000]                  	cmp rax, sob_boolean_false
  4857 00002D84 7409                    	je .L_if_else_0004
  4858 00002D86 488B4520                mov rax, qword [rbp + 32]
  4859 00002D8A E9CB000000              	jmp .L_if_end_0004
  4860                                  	.L_if_else_0004:
  4861 00002D8F 488B4528                	mov rax, qword [rbp + 40]
  4862 00002D93 50                      	push rax
  4863 00002D94 6A01                    	push 1
  4864 00002D96 488B0425[88000000]      	mov rax, qword [free_var_17]
  4865 00002D9E 803805                  	cmp byte [rax], T_closure 
  4866 00002DA1 0F85F7EE0000                    jne L_code_ptr_error
  4867                                  
  4868 00002DA7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4869                                  
  4870 00002DAB 53                              push rbx
  4871                                  
  4872 00002DAC FF5009                          call SOB_CLOSURE_CODE(rax)
  4873                                  
  4874 00002DAF 50                              	push rax
  4875 00002DB0 488B4528                mov rax, qword [rbp + 40]
  4876 00002DB4 50                      	push rax
  4877 00002DB5 6A01                    	push 1
  4878 00002DB7 488B0425[80000000]      	mov rax, qword [free_var_16]
  4879 00002DBF 803805                  	cmp byte [rax], T_closure 
  4880 00002DC2 0F85D6EE0000                    jne L_code_ptr_error
  4881                                  
  4882 00002DC8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4883                                  
  4884 00002DCC 53                              push rbx
  4885                                  
  4886 00002DCD FF5009                          call SOB_CLOSURE_CODE(rax)
  4887                                  
  4888 00002DD0 50                              	push rax
  4889 00002DD1 6A02                    	push 2
  4890 00002DD3 488B4510                mov rax, qword [rbp + 16]
  4891 00002DD7 488B00                  mov rax, qword [rax + 0]
  4892 00002DDA 488B00                  mov rax, qword [rax + 0]
  4893 00002DDD 488B00                  	mov rax, qword [rax]
  4894 00002DE0 803805                  	cmp byte [rax], T_closure 
  4895 00002DE3 0F85B5EE0000                    jne L_code_ptr_error
  4896                                  
  4897 00002DE9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  4898                                  
  4899 00002DED 53                              push rbx
  4900                                  
  4901 00002DEE FF5009                          call SOB_CLOSURE_CODE(rax)
  4902                                  
  4903 00002DF1 50                              	push rax
  4904 00002DF2 488B4520                mov rax, qword [rbp + 32]
  4905 00002DF6 50                      	push rax
  4906 00002DF7 6A02                    	push 2
  4907 00002DF9 488B0425[68000000]      	mov rax, qword [free_var_13]
  4908                                  .L_lambda_simple_arity_check_ok_0040:
  4909 00002E01 803805                  	cmp byte [rax], T_closure
  4910                                  
  4911 00002E04 0F8594EE0000                    jne L_code_ptr_error                      ; rax <- proc
  4912                                  
  4913                                  
  4914 00002E0A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  4915                                  
  4916 00002E0E 53                              push rbx                                  ; env pushed
  4917                                  
  4918 00002E0F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  4919                                  
  4920                                  
  4921 00002E12 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  4922                                  
  4923                                          
  4924                                          
  4925 00002E15 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  4926                                  
  4927 00002E19 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  4928                                  
  4929                                  
  4930 00002E1E 4D89CA                          mov r10, r9
  4931 00002E21 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  4932                                  
  4933                                                                                         
  4934 00002E25 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  4935 00002E28 4983C404                        add r12, 4
  4936                                  
  4937 00002E2C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  4938                                  .L_tc_recycle_frame_loop_001f:
  4939 00002E32 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  4940                                  
  4941 00002E36 4E8974E500                      mov [rbp + (r12 * 8)], r14
  4942                                  
  4943                                  
  4944                                  
  4945 00002E3B 41BE00000000                    mov r14, 0                                ; clean box
  4946                                  
  4947                                  
  4948                                                                  
  4949 00002E41 4983C2FF                        add r10, -1                               ; args_copied_counter--
  4950                                  
  4951 00002E45 4983C4FF                        add r12, -1 
  4952                                  
  4953 00002E49 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  4954 00002E4D 75E3                    	jne .L_tc_recycle_frame_loop_001f
  4955                                  .L_tc_recycle_frame_done_001f:
  4956 00002E4F 5D                      	pop rbp                                  ; restore the old rbp
  4957                                  
  4958 00002E50 488B4D00                        mov rcx, qword [rbp]
  4959 00002E54 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  4960                                            ; rbx <- code(proc)
  4961                                  
  4962 00002E58 FFE3                            jmp rbx
  4963                                  	.L_if_end_0004:
  4964 00002E5A C9                      	leave
  4965 00002E5B C22000                  	ret 8 * (2 + 2)
  4966                                  .L_lambda_simple_end_0021:	; new closure is in rax
  4967 00002E5E 50                      push rax
  4968 00002E5F 488B4520                mov rax, qword [rbp + 32]
  4969 00002E63 8F00                    pop qword [rax]
  4970 00002E65 48B8-                   mov rax, sob_void
  4970 00002E67 [0000000000000000] 
  4971                                  
  4972 00002E6F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4973 00002E74 E89DDE0000              	call malloc
  4974 00002E79 50                      	push rax
  4975 00002E7A BF08000000              	mov rdi, 8 * 1	; new rib
  4976 00002E7F E892DE0000              	call malloc
  4977 00002E84 50                      	push rax
  4978 00002E85 BF10000000              	mov rdi, 8 * 2	; extended env
  4979 00002E8A E887DE0000              	call malloc
  4980 00002E8F 488B7D10                	mov rdi, ENV
  4981 00002E93 BE00000000              	mov rsi, 0
  4982 00002E98 BA01000000              	mov rdx, 1
  4983                                  .L_lambda_opt_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  4984 00002E9D 4883FE01                	cmp rsi, 1
  4985 00002EA1 7410                    	je .L_lambda_opt_env_end_0002
  4986 00002EA3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4987 00002EA7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4988 00002EAB 48FFC6                  	inc rsi
  4989 00002EAE 48FFC2                  	inc rdx
  4990 00002EB1 EBEA                    	jmp .L_lambda_opt_env_loop_0002
  4991                                  .L_lambda_opt_env_end_0002:
  4992 00002EB3 5B                      	pop rbx
  4993 00002EB4 BE00000000              	mov rsi, 0
  4994                                  .L_lambda_opt_params_loop_0003:	; copy params
  4995 00002EB9 4883FE01                	cmp rsi, 1
  4996 00002EBD 740E                    	je .L_lambda_opt_params_end_0003
  4997 00002EBF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4998 00002EC4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4999 00002EC8 48FFC6                  	inc rsi
  5000 00002ECB EBEC                    	jmp .L_lambda_opt_params_loop_0003
  5001                                  .L_lambda_opt_params_end_0003:
  5002 00002ECD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5003 00002ED0 4889C3                  	mov rbx, rax
  5004 00002ED3 58                      	pop rax
  5005 00002ED4 C60005                  	mov byte [rax], T_closure
  5006 00002ED7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5007 00002EDB 48C74009[E82E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0002
  5008 00002EE3 E926010000              	jmp .L_lambda_opt_end_0002
  5009                                  .L_lambda_opt_code_0002:
  5010 00002EE8 4C8B542410              mov r10, qword [rsp+8*2]
  5011 00002EED 4983FA01                cmp r10, 1
  5012 00002EF1 740B                    je .L_lambda_opt_arity_check_exact_0002
  5013 00002EF3 4983FA01                cmp r10, 1
  5014 00002EF7 7F41                    jg .L_lambda_opt_arity_check_more_0002
  5015 00002EF9 E9E5DD0000              jmp L_error_incorrect_arity_opt
  5016                                  .L_lambda_opt_arity_check_exact_0002:
  5017 00002EFE 4883EC08                sub rsp, 8
  5018 00002F02 BA04000000              mov rdx, 3+1
  5019 00002F07 4889E3                  mov qword rbx, rsp
  5020                                  .L_lambda_opt_params_loop_0004:
  5021 00002F0A 488B4B08                mov qword rcx, [rbx+8]
  5022 00002F0E 48890B                  mov qword [rbx], rcx
  5023 00002F11 48FFCA                  dec rdx
  5024 00002F14 4883C308                add rbx, 8
  5025 00002F18 4883FA00                cmp rdx, 0
  5026 00002F1C 7402                    je .L_lambda_opt_params_end_0004
  5027 00002F1E EBEA                    jmp .L_lambda_opt_params_loop_0004
  5028                                  .L_lambda_opt_params_end_0004:
  5029 00002F20 49FFC2                  inc r10
  5030 00002F23 4C89542410              mov qword [rsp+8*2], r10
  5031 00002F28 4983C202                add r10, 2
  5032 00002F2C 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  5033 00002F34 4C8B4D00                mov r9, [rbp]
  5034 00002F38 EB52                    jmp .L_lambda_opt_stack_adjusted_0002
  5035                                  .L_lambda_opt_arity_check_more_0002:
  5036 00002F3A 48B8-                   mov rax, sob_nil
  5036 00002F3C [0100000000000000] 
  5037 00002F44 4C8B542410              mov r10, [rsp+2*8]
  5038 00002F49 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  5039 00002F4E 4983EA01                sub r10, 1
  5040                                  .L_lambda_opt_stack_shrink_loop_0002:
  5041 00002F52 4983FA00                cmp r10, 0
  5042 00002F56 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0002
  5043 00002F58 4889C1                  mov rcx, rax
  5044 00002F5B 498B10                  mov rdx, [r8]
  5045 00002F5E BF11000000              mov rdi, 17
  5046 00002F63 E8AEDD0000              call malloc
  5047 00002F68 C60021                  mov byte [rax], T_pair
  5048 00002F6B 48894809                mov SOB_PAIR_CDR(rax), rcx
  5049 00002F6F 48895001                mov SOB_PAIR_CAR(rax), rdx
  5050 00002F73 4983E808                sub r8, 8
  5051 00002F77 49FFCA                  dec r10
  5052 00002F7A EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0002
  5053                                  .L_lambda_opt_stack_shrink_loop_exit_0002:
  5054 00002F7C 4889442420              mov [rsp+8*(2+2)], rax
  5055 00002F81 41BA02000000            mov r10, 2
  5056 00002F87 4C89542410              mov [rsp+16], r10
  5057                                  .L_lambda_opt_stack_adjusted_0002:
  5058 00002F8C 4C8B4D00                mov r9, [rbp]
  5059 00002F90 C8000000                enter 0, 0
  5060 00002F94 488B4528                mov rax, qword [rbp + 40]
  5061 00002F98 50                      	push rax
  5062 00002F99 488B4520                mov rax, qword [rbp + 32]
  5063 00002F9D 50                      	push rax
  5064 00002F9E 6A02                    	push 2
  5065 00002FA0 488B4510                mov rax, qword [rbp + 16]
  5066 00002FA4 488B00                  mov rax, qword [rax + 0]
  5067 00002FA7 488B00                  mov rax, qword [rax + 0]
  5068 00002FAA 488B00                  	mov rax, qword [rax]
  5069                                  .L_lambda_simple_arity_check_ok_0041:
  5070 00002FAD 803805                  	cmp byte [rax], T_closure
  5071                                  
  5072 00002FB0 0F85E8EC0000                    jne L_code_ptr_error                      ; rax <- proc
  5073                                  
  5074                                  
  5075 00002FB6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5076                                  
  5077 00002FBA 53                              push rbx                                  ; env pushed
  5078                                  
  5079 00002FBB FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5080                                  
  5081                                  
  5082 00002FBE FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5083                                  
  5084                                          
  5085                                          
  5086 00002FC1 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5087                                  
  5088 00002FC5 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5089                                  
  5090                                  
  5091 00002FCA 4D89CA                          mov r10, r9
  5092 00002FCD 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  5093                                  
  5094                                                                                         
  5095 00002FD1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5096 00002FD4 4983C404                        add r12, 4
  5097                                  
  5098 00002FD8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5099                                  .L_tc_recycle_frame_loop_0020:
  5100 00002FDE 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  5101                                  
  5102 00002FE2 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5103                                  
  5104                                  
  5105                                  
  5106 00002FE7 41BE00000000                    mov r14, 0                                ; clean box
  5107                                  
  5108                                  
  5109                                                                  
  5110 00002FED 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5111                                  
  5112 00002FF1 4983C4FF                        add r12, -1 
  5113                                  
  5114 00002FF5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5115 00002FF9 75E3                    	jne .L_tc_recycle_frame_loop_0020
  5116                                  .L_tc_recycle_frame_done_0020:
  5117 00002FFB 5D                      	pop rbp                                  ; restore the old rbp
  5118                                  
  5119 00002FFC 488B4D00                        mov rcx, qword [rbp]
  5120 00003000 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5121                                            ; rbx <- code(proc)
  5122                                  
  5123 00003004 FFE3                            jmp rbx
  5124 00003006 C9                      leave
  5125 00003007 4C8B4D00                mov r9, [rbp]
  5126 0000300B C22800                  ret 8 * (3 + 2)
  5127                                  .L_lambda_opt_end_0002:	; new closure is in rax
  5128 0000300E C9                      	leave
  5129 0000300F C21800                  	ret 8 * (2 + 1)
  5130                                  .L_lambda_simple_end_0020:	; new closure is in rax
  5131 00003012 803805                  	cmp byte [rax], T_closure 
  5132 00003015 0F8583EC0000                    jne L_code_ptr_error
  5133                                  
  5134 0000301B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5135                                  
  5136 0000301F 53                              push rbx
  5137                                  
  5138 00003020 FF5009                          call SOB_CLOSURE_CODE(rax)
  5139                                  
  5140 00003023 48890425[C0020000]              	mov qword [free_var_88], rax
  5141 0000302B 48B8-                   	mov rax, sob_void
  5141 0000302D [0000000000000000] 
  5142                                  
  5143 00003035 4889C7                  	mov rdi, rax
  5144 00003038 E8EADC0000              	call print_sexpr_if_not_void
  5145                                  
  5146 0000303D 48B8-                   	mov rax, qword (L_constants + 22)
  5146 0000303F [1600000000000000] 
  5147 00003047 50                      	push rax
  5148 00003048 6A01                    	push 1
  5149 0000304A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5150 0000304F E8C2DC0000              	call malloc
  5151 00003054 50                      	push rax
  5152 00003055 BF00000000              	mov rdi, 8 * 0	; new rib
  5153 0000305A E8B7DC0000              	call malloc
  5154 0000305F 50                      	push rax
  5155 00003060 BF08000000              	mov rdi, 8 * 1	; extended env
  5156 00003065 E8ACDC0000              	call malloc
  5157 0000306A 488B7D10                	mov rdi, ENV
  5158 0000306E BE00000000              	mov rsi, 0
  5159 00003073 BA01000000              	mov rdx, 1
  5160                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  5161 00003078 4883FE00                	cmp rsi, 0
  5162 0000307C 7410                    	je .L_lambda_simple_env_end_0022
  5163 0000307E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5164 00003082 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5165 00003086 48FFC6                  	inc rsi
  5166 00003089 48FFC2                  	inc rdx
  5167 0000308C EBEA                    	jmp .L_lambda_simple_env_loop_0022
  5168                                  .L_lambda_simple_env_end_0022:
  5169 0000308E 5B                      	pop rbx
  5170 0000308F BE00000000              	mov rsi, 0
  5171                                  .L_lambda_simple_params_loop_0022:	; copy params
  5172 00003094 4883FE00                	cmp rsi, 0
  5173 00003098 740E                    	je .L_lambda_simple_params_end_0022
  5174 0000309A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5175 0000309F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5176 000030A3 48FFC6                  	inc rsi
  5177 000030A6 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  5178                                  .L_lambda_simple_params_end_0022:
  5179 000030A8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5180 000030AB 4889C3                  	mov rbx, rax
  5181 000030AE 58                      	pop rax
  5182 000030AF C60005                  	mov byte [rax], T_closure
  5183 000030B2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5184 000030B6 48C74009[C3300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  5185 000030BE E9DA030000              	jmp .L_lambda_simple_end_0022
  5186                                  .L_lambda_simple_code_0022:	; lambda-simple body
  5187 000030C3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5188 000030C9 740B                    	je .L_lambda_simple_arity_check_ok_0042
  5189 000030CB FF742410                	push qword [rsp + 8 * 2]
  5190 000030CF 6A01                    	push 1
  5191 000030D1 E9F9DB0000              	jmp L_error_incorrect_arity_simple
  5192                                  .L_lambda_simple_arity_check_ok_0042:
  5193 000030D6 C8000000                	enter 0, 0
  5194 000030DA BF08000000              mov rdi, 8
  5195 000030DF E832DC0000              call malloc
  5196 000030E4 4889C3                  mov rbx, rax
  5197 000030E7 488B4520                mov rax, qword [rbp + 32]
  5198 000030EB 488903                  mov qword [rbx], rax
  5199 000030EE 4889D8                  mov rax, rbx
  5200 000030F1 48894520                mov qword [rbp + 32], rax
  5201 000030F5 48B8-                   mov rax, sob_void
  5201 000030F7 [0000000000000000] 
  5202 000030FF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5203 00003104 E80DDC0000              	call malloc
  5204 00003109 50                      	push rax
  5205 0000310A BF08000000              	mov rdi, 8 * 1	; new rib
  5206 0000310F E802DC0000              	call malloc
  5207 00003114 50                      	push rax
  5208 00003115 BF10000000              	mov rdi, 8 * 2	; extended env
  5209 0000311A E8F7DB0000              	call malloc
  5210 0000311F 488B7D10                	mov rdi, ENV
  5211 00003123 BE00000000              	mov rsi, 0
  5212 00003128 BA01000000              	mov rdx, 1
  5213                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  5214 0000312D 4883FE01                	cmp rsi, 1
  5215 00003131 7410                    	je .L_lambda_simple_env_end_0023
  5216 00003133 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5217 00003137 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5218 0000313B 48FFC6                  	inc rsi
  5219 0000313E 48FFC2                  	inc rdx
  5220 00003141 EBEA                    	jmp .L_lambda_simple_env_loop_0023
  5221                                  .L_lambda_simple_env_end_0023:
  5222 00003143 5B                      	pop rbx
  5223 00003144 BE00000000              	mov rsi, 0
  5224                                  .L_lambda_simple_params_loop_0023:	; copy params
  5225 00003149 4883FE01                	cmp rsi, 1
  5226 0000314D 740E                    	je .L_lambda_simple_params_end_0023
  5227 0000314F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5228 00003154 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5229 00003158 48FFC6                  	inc rsi
  5230 0000315B EBEC                    	jmp .L_lambda_simple_params_loop_0023
  5231                                  .L_lambda_simple_params_end_0023:
  5232 0000315D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5233 00003160 4889C3                  	mov rbx, rax
  5234 00003163 58                      	pop rax
  5235 00003164 C60005                  	mov byte [rax], T_closure
  5236 00003167 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5237 0000316B 48C74009[78310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  5238 00003173 E918010000              	jmp .L_lambda_simple_end_0023
  5239                                  .L_lambda_simple_code_0023:	; lambda-simple body
  5240 00003178 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5241 0000317E 740B                    	je .L_lambda_simple_arity_check_ok_0043
  5242 00003180 FF742410                	push qword [rsp + 8 * 2]
  5243 00003184 6A02                    	push 2
  5244 00003186 E944DB0000              	jmp L_error_incorrect_arity_simple
  5245                                  .L_lambda_simple_arity_check_ok_0043:
  5246 0000318B C8000000                	enter 0, 0
  5247 0000318F 488B4528                mov rax, qword [rbp + 40]
  5248 00003193 50                      	push rax
  5249 00003194 6A01                    	push 1
  5250 00003196 488B0425[08000000]      	mov rax, qword [free_var_1]
  5251 0000319E 803805                  	cmp byte [rax], T_closure 
  5252 000031A1 0F85F7EA0000                    jne L_code_ptr_error
  5253                                  
  5254 000031A7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5255                                  
  5256 000031AB 53                              push rbx
  5257                                  
  5258 000031AC FF5009                          call SOB_CLOSURE_CODE(rax)
  5259                                  
  5260 000031AF 483D[02000000]                  	cmp rax, sob_boolean_false
  5261 000031B5 0F84CD000000            	je .L_if_else_0005
  5262 000031BB 488B4528                mov rax, qword [rbp + 40]
  5263 000031BF 50                      	push rax
  5264 000031C0 6A01                    	push 1
  5265 000031C2 488B0425[88000000]      	mov rax, qword [free_var_17]
  5266 000031CA 803805                  	cmp byte [rax], T_closure 
  5267 000031CD 0F85CBEA0000                    jne L_code_ptr_error
  5268                                  
  5269 000031D3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5270                                  
  5271 000031D7 53                              push rbx
  5272                                  
  5273 000031D8 FF5009                          call SOB_CLOSURE_CODE(rax)
  5274                                  
  5275 000031DB 50                              	push rax
  5276 000031DC 488B4528                mov rax, qword [rbp + 40]
  5277 000031E0 50                      	push rax
  5278 000031E1 6A01                    	push 1
  5279 000031E3 488B0425[80000000]      	mov rax, qword [free_var_16]
  5280 000031EB 803805                  	cmp byte [rax], T_closure 
  5281 000031EE 0F85AAEA0000                    jne L_code_ptr_error
  5282                                  
  5283 000031F4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5284                                  
  5285 000031F8 53                              push rbx
  5286                                  
  5287 000031F9 FF5009                          call SOB_CLOSURE_CODE(rax)
  5288                                  
  5289 000031FC 50                              	push rax
  5290 000031FD 6A02                    	push 2
  5291 000031FF 488B4510                mov rax, qword [rbp + 16]
  5292 00003203 488B00                  mov rax, qword [rax + 0]
  5293 00003206 488B00                  mov rax, qword [rax + 0]
  5294 00003209 488B00                  	mov rax, qword [rax]
  5295 0000320C 803805                  	cmp byte [rax], T_closure 
  5296 0000320F 0F8589EA0000                    jne L_code_ptr_error
  5297                                  
  5298 00003215 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5299                                  
  5300 00003219 53                              push rbx
  5301                                  
  5302 0000321A FF5009                          call SOB_CLOSURE_CODE(rax)
  5303                                  
  5304 0000321D 50                              	push rax
  5305 0000321E 488B4520                mov rax, qword [rbp + 32]
  5306 00003222 50                      	push rax
  5307 00003223 6A02                    	push 2
  5308 00003225 488B0425[68000000]      	mov rax, qword [free_var_13]
  5309                                  .L_lambda_simple_arity_check_ok_0044:
  5310 0000322D 803805                  	cmp byte [rax], T_closure
  5311                                  
  5312 00003230 0F8568EA0000                    jne L_code_ptr_error                      ; rax <- proc
  5313                                  
  5314                                  
  5315 00003236 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5316                                  
  5317 0000323A 53                              push rbx                                  ; env pushed
  5318                                  
  5319 0000323B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5320                                  
  5321                                  
  5322 0000323E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5323                                  
  5324                                          
  5325                                          
  5326 00003241 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5327                                  
  5328 00003245 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5329                                  
  5330                                  
  5331 0000324A 4D89CA                          mov r10, r9
  5332 0000324D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  5333                                  
  5334                                                                                         
  5335 00003251 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5336 00003254 4983C404                        add r12, 4
  5337                                  
  5338 00003258 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5339                                  .L_tc_recycle_frame_loop_0021:
  5340 0000325E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  5341                                  
  5342 00003262 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5343                                  
  5344                                  
  5345                                  
  5346 00003267 41BE00000000                    mov r14, 0                                ; clean box
  5347                                  
  5348                                  
  5349                                                                  
  5350 0000326D 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5351                                  
  5352 00003271 4983C4FF                        add r12, -1 
  5353                                  
  5354 00003275 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5355 00003279 75E3                    	jne .L_tc_recycle_frame_loop_0021
  5356                                  .L_tc_recycle_frame_done_0021:
  5357 0000327B 5D                      	pop rbp                                  ; restore the old rbp
  5358                                  
  5359 0000327C 488B4D00                        mov rcx, qword [rbp]
  5360 00003280 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5361                                            ; rbx <- code(proc)
  5362                                  
  5363 00003284 FFE3                            jmp rbx
  5364 00003286 EB04                    	jmp .L_if_end_0005
  5365                                  	.L_if_else_0005:
  5366 00003288 488B4520                	mov rax, qword [rbp + 32]
  5367                                  	.L_if_end_0005:
  5368 0000328C C9                      	leave
  5369 0000328D C22000                  	ret 8 * (2 + 2)
  5370                                  .L_lambda_simple_end_0023:	; new closure is in rax
  5371 00003290 50                      push rax
  5372 00003291 488B4520                mov rax, qword [rbp + 32]
  5373 00003295 8F00                    pop qword [rax]
  5374 00003297 48B8-                   mov rax, sob_void
  5374 00003299 [0000000000000000] 
  5375                                  
  5376 000032A1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5377 000032A6 E86BDA0000              	call malloc
  5378 000032AB 50                      	push rax
  5379 000032AC BF08000000              	mov rdi, 8 * 1	; new rib
  5380 000032B1 E860DA0000              	call malloc
  5381 000032B6 50                      	push rax
  5382 000032B7 BF10000000              	mov rdi, 8 * 2	; extended env
  5383 000032BC E855DA0000              	call malloc
  5384 000032C1 488B7D10                	mov rdi, ENV
  5385 000032C5 BE00000000              	mov rsi, 0
  5386 000032CA BA01000000              	mov rdx, 1
  5387                                  .L_lambda_opt_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  5388 000032CF 4883FE01                	cmp rsi, 1
  5389 000032D3 7410                    	je .L_lambda_opt_env_end_0003
  5390 000032D5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5391 000032D9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5392 000032DD 48FFC6                  	inc rsi
  5393 000032E0 48FFC2                  	inc rdx
  5394 000032E3 EBEA                    	jmp .L_lambda_opt_env_loop_0003
  5395                                  .L_lambda_opt_env_end_0003:
  5396 000032E5 5B                      	pop rbx
  5397 000032E6 BE00000000              	mov rsi, 0
  5398                                  .L_lambda_opt_params_loop_0005:	; copy params
  5399 000032EB 4883FE01                	cmp rsi, 1
  5400 000032EF 740E                    	je .L_lambda_opt_params_end_0005
  5401 000032F1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5402 000032F6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5403 000032FA 48FFC6                  	inc rsi
  5404 000032FD EBEC                    	jmp .L_lambda_opt_params_loop_0005
  5405                                  .L_lambda_opt_params_end_0005:
  5406 000032FF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5407 00003302 4889C3                  	mov rbx, rax
  5408 00003305 58                      	pop rax
  5409 00003306 C60005                  	mov byte [rax], T_closure
  5410 00003309 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5411 0000330D 48C74009[1A330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0003
  5412 00003315 E97F010000              	jmp .L_lambda_opt_end_0003
  5413                                  .L_lambda_opt_code_0003:
  5414 0000331A 4C8B542410              mov r10, qword [rsp+8*2]
  5415 0000331F 4983FA01                cmp r10, 1
  5416 00003323 740B                    je .L_lambda_opt_arity_check_exact_0003
  5417 00003325 4983FA01                cmp r10, 1
  5418 00003329 7F41                    jg .L_lambda_opt_arity_check_more_0003
  5419 0000332B E9B3D90000              jmp L_error_incorrect_arity_opt
  5420                                  .L_lambda_opt_arity_check_exact_0003:
  5421 00003330 4883EC08                sub rsp, 8
  5422 00003334 BA04000000              mov rdx, 3+1
  5423 00003339 4889E3                  mov qword rbx, rsp
  5424                                  .L_lambda_opt_params_loop_0006:
  5425 0000333C 488B4B08                mov qword rcx, [rbx+8]
  5426 00003340 48890B                  mov qword [rbx], rcx
  5427 00003343 48FFCA                  dec rdx
  5428 00003346 4883C308                add rbx, 8
  5429 0000334A 4883FA00                cmp rdx, 0
  5430 0000334E 7402                    je .L_lambda_opt_params_end_0006
  5431 00003350 EBEA                    jmp .L_lambda_opt_params_loop_0006
  5432                                  .L_lambda_opt_params_end_0006:
  5433 00003352 49FFC2                  inc r10
  5434 00003355 4C89542410              mov qword [rsp+8*2], r10
  5435 0000335A 4983C202                add r10, 2
  5436 0000335E 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  5437 00003366 4C8B4D00                mov r9, [rbp]
  5438 0000336A EB52                    jmp .L_lambda_opt_stack_adjusted_0003
  5439                                  .L_lambda_opt_arity_check_more_0003:
  5440 0000336C 48B8-                   mov rax, sob_nil
  5440 0000336E [0100000000000000] 
  5441 00003376 4C8B542410              mov r10, [rsp+2*8]
  5442 0000337B 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  5443 00003380 4983EA01                sub r10, 1
  5444                                  .L_lambda_opt_stack_shrink_loop_0003:
  5445 00003384 4983FA00                cmp r10, 0
  5446 00003388 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0003
  5447 0000338A 4889C1                  mov rcx, rax
  5448 0000338D 498B10                  mov rdx, [r8]
  5449 00003390 BF11000000              mov rdi, 17
  5450 00003395 E87CD90000              call malloc
  5451 0000339A C60021                  mov byte [rax], T_pair
  5452 0000339D 48894809                mov SOB_PAIR_CDR(rax), rcx
  5453 000033A1 48895001                mov SOB_PAIR_CAR(rax), rdx
  5454 000033A5 4983E808                sub r8, 8
  5455 000033A9 49FFCA                  dec r10
  5456 000033AC EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0003
  5457                                  .L_lambda_opt_stack_shrink_loop_exit_0003:
  5458 000033AE 4889442420              mov [rsp+8*(2+2)], rax
  5459 000033B3 41BA02000000            mov r10, 2
  5460 000033B9 4C89542410              mov [rsp+16], r10
  5461                                  .L_lambda_opt_stack_adjusted_0003:
  5462 000033BE 4C8B4D00                mov r9, [rbp]
  5463 000033C2 C8000000                enter 0, 0
  5464 000033C6 488B4528                mov rax, qword [rbp + 40]
  5465 000033CA 50                      	push rax
  5466 000033CB 6A01                    	push 1
  5467 000033CD 488B0425[88000000]      	mov rax, qword [free_var_17]
  5468 000033D5 803805                  	cmp byte [rax], T_closure 
  5469 000033D8 0F85C0E80000                    jne L_code_ptr_error
  5470                                  
  5471 000033DE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5472                                  
  5473 000033E2 53                              push rbx
  5474                                  
  5475 000033E3 FF5009                          call SOB_CLOSURE_CODE(rax)
  5476                                  
  5477 000033E6 50                              	push rax
  5478 000033E7 488B4528                mov rax, qword [rbp + 40]
  5479 000033EB 50                      	push rax
  5480 000033EC 6A01                    	push 1
  5481 000033EE 488B0425[80000000]      	mov rax, qword [free_var_16]
  5482 000033F6 803805                  	cmp byte [rax], T_closure 
  5483 000033F9 0F859FE80000                    jne L_code_ptr_error
  5484                                  
  5485 000033FF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5486                                  
  5487 00003403 53                              push rbx
  5488                                  
  5489 00003404 FF5009                          call SOB_CLOSURE_CODE(rax)
  5490                                  
  5491 00003407 50                              	push rax
  5492 00003408 6A02                    	push 2
  5493 0000340A 488B4510                mov rax, qword [rbp + 16]
  5494 0000340E 488B00                  mov rax, qword [rax + 0]
  5495 00003411 488B00                  mov rax, qword [rax + 0]
  5496 00003414 488B00                  	mov rax, qword [rax]
  5497 00003417 803805                  	cmp byte [rax], T_closure 
  5498 0000341A 0F857EE80000                    jne L_code_ptr_error
  5499                                  
  5500 00003420 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5501                                  
  5502 00003424 53                              push rbx
  5503                                  
  5504 00003425 FF5009                          call SOB_CLOSURE_CODE(rax)
  5505                                  
  5506 00003428 50                              	push rax
  5507 00003429 488B4520                mov rax, qword [rbp + 32]
  5508 0000342D 50                      	push rax
  5509 0000342E 6A02                    	push 2
  5510 00003430 488B0425[E8000000]      	mov rax, qword [free_var_29]
  5511                                  .L_lambda_simple_arity_check_ok_0045:
  5512 00003438 803805                  	cmp byte [rax], T_closure
  5513                                  
  5514 0000343B 0F855DE80000                    jne L_code_ptr_error                      ; rax <- proc
  5515                                  
  5516                                  
  5517 00003441 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5518                                  
  5519 00003445 53                              push rbx                                  ; env pushed
  5520                                  
  5521 00003446 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5522                                  
  5523                                  
  5524 00003449 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5525                                  
  5526                                          
  5527                                          
  5528 0000344C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5529                                  
  5530 00003450 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5531                                  
  5532                                  
  5533 00003455 4D89CA                          mov r10, r9
  5534 00003458 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  5535                                  
  5536                                                                                         
  5537 0000345C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5538 0000345F 4983C404                        add r12, 4
  5539                                  
  5540 00003463 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5541                                  .L_tc_recycle_frame_loop_0022:
  5542 00003469 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  5543                                  
  5544 0000346D 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5545                                  
  5546                                  
  5547                                  
  5548 00003472 41BE00000000                    mov r14, 0                                ; clean box
  5549                                  
  5550                                  
  5551                                                                  
  5552 00003478 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5553                                  
  5554 0000347C 4983C4FF                        add r12, -1 
  5555                                  
  5556 00003480 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5557 00003484 75E3                    	jne .L_tc_recycle_frame_loop_0022
  5558                                  .L_tc_recycle_frame_done_0022:
  5559 00003486 5D                      	pop rbp                                  ; restore the old rbp
  5560                                  
  5561 00003487 488B4D00                        mov rcx, qword [rbp]
  5562 0000348B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5563                                            ; rbx <- code(proc)
  5564                                  
  5565 0000348F FFE3                            jmp rbx
  5566 00003491 C9                      leave
  5567 00003492 4C8B4D00                mov r9, [rbp]
  5568 00003496 C22800                  ret 8 * (3 + 2)
  5569                                  .L_lambda_opt_end_0003:	; new closure is in rax
  5570 00003499 C9                      	leave
  5571 0000349A C21800                  	ret 8 * (2 + 1)
  5572                                  .L_lambda_simple_end_0022:	; new closure is in rax
  5573 0000349D 803805                  	cmp byte [rax], T_closure 
  5574 000034A0 0F85F8E70000                    jne L_code_ptr_error
  5575                                  
  5576 000034A6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5577                                  
  5578 000034AA 53                              push rbx
  5579                                  
  5580 000034AB FF5009                          call SOB_CLOSURE_CODE(rax)
  5581                                  
  5582 000034AE 48890425[C8020000]              	mov qword [free_var_89], rax
  5583 000034B6 48B8-                   	mov rax, sob_void
  5583 000034B8 [0000000000000000] 
  5584                                  
  5585 000034C0 4889C7                  	mov rdi, rax
  5586 000034C3 E85FD80000              	call print_sexpr_if_not_void
  5587                                  
  5588 000034C8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5589 000034CD E844D80000              	call malloc
  5590 000034D2 50                      	push rax
  5591 000034D3 BF00000000              	mov rdi, 8 * 0	; new rib
  5592 000034D8 E839D80000              	call malloc
  5593 000034DD 50                      	push rax
  5594 000034DE BF08000000              	mov rdi, 8 * 1	; extended env
  5595 000034E3 E82ED80000              	call malloc
  5596 000034E8 488B7D10                	mov rdi, ENV
  5597 000034EC BE00000000              	mov rsi, 0
  5598 000034F1 BA01000000              	mov rdx, 1
  5599                                  .L_lambda_opt_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  5600 000034F6 4883FE00                	cmp rsi, 0
  5601 000034FA 7410                    	je .L_lambda_opt_env_end_0004
  5602 000034FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5603 00003500 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5604 00003504 48FFC6                  	inc rsi
  5605 00003507 48FFC2                  	inc rdx
  5606 0000350A EBEA                    	jmp .L_lambda_opt_env_loop_0004
  5607                                  .L_lambda_opt_env_end_0004:
  5608 0000350C 5B                      	pop rbx
  5609 0000350D BE00000000              	mov rsi, 0
  5610                                  .L_lambda_opt_params_loop_0007:	; copy params
  5611 00003512 4883FE00                	cmp rsi, 0
  5612 00003516 740E                    	je .L_lambda_opt_params_end_0007
  5613 00003518 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5614 0000351D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5615 00003521 48FFC6                  	inc rsi
  5616 00003524 EBEC                    	jmp .L_lambda_opt_params_loop_0007
  5617                                  .L_lambda_opt_params_end_0007:
  5618 00003526 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5619 00003529 4889C3                  	mov rbx, rax
  5620 0000352C 58                      	pop rax
  5621 0000352D C60005                  	mov byte [rax], T_closure
  5622 00003530 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5623 00003534 48C74009[41350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0004
  5624 0000353C E929040000              	jmp .L_lambda_opt_end_0004
  5625                                  .L_lambda_opt_code_0004:
  5626 00003541 4C8B542410              mov r10, qword [rsp+8*2]
  5627 00003546 4983FA01                cmp r10, 1
  5628 0000354A 740B                    je .L_lambda_opt_arity_check_exact_0004
  5629 0000354C 4983FA01                cmp r10, 1
  5630 00003550 7F41                    jg .L_lambda_opt_arity_check_more_0004
  5631 00003552 E98CD70000              jmp L_error_incorrect_arity_opt
  5632                                  .L_lambda_opt_arity_check_exact_0004:
  5633 00003557 4883EC08                sub rsp, 8
  5634 0000355B BA04000000              mov rdx, 3+1
  5635 00003560 4889E3                  mov qword rbx, rsp
  5636                                  .L_lambda_opt_params_loop_0008:
  5637 00003563 488B4B08                mov qword rcx, [rbx+8]
  5638 00003567 48890B                  mov qword [rbx], rcx
  5639 0000356A 48FFCA                  dec rdx
  5640 0000356D 4883C308                add rbx, 8
  5641 00003571 4883FA00                cmp rdx, 0
  5642 00003575 7402                    je .L_lambda_opt_params_end_0008
  5643 00003577 EBEA                    jmp .L_lambda_opt_params_loop_0008
  5644                                  .L_lambda_opt_params_end_0008:
  5645 00003579 49FFC2                  inc r10
  5646 0000357C 4C89542410              mov qword [rsp+8*2], r10
  5647 00003581 4983C202                add r10, 2
  5648 00003585 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  5649 0000358D 4C8B4D00                mov r9, [rbp]
  5650 00003591 EB52                    jmp .L_lambda_opt_stack_adjusted_0004
  5651                                  .L_lambda_opt_arity_check_more_0004:
  5652 00003593 48B8-                   mov rax, sob_nil
  5652 00003595 [0100000000000000] 
  5653 0000359D 4C8B542410              mov r10, [rsp+2*8]
  5654 000035A2 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  5655 000035A7 4983EA01                sub r10, 1
  5656                                  .L_lambda_opt_stack_shrink_loop_0004:
  5657 000035AB 4983FA00                cmp r10, 0
  5658 000035AF 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0004
  5659 000035B1 4889C1                  mov rcx, rax
  5660 000035B4 498B10                  mov rdx, [r8]
  5661 000035B7 BF11000000              mov rdi, 17
  5662 000035BC E855D70000              call malloc
  5663 000035C1 C60021                  mov byte [rax], T_pair
  5664 000035C4 48894809                mov SOB_PAIR_CDR(rax), rcx
  5665 000035C8 48895001                mov SOB_PAIR_CAR(rax), rdx
  5666 000035CC 4983E808                sub r8, 8
  5667 000035D0 49FFCA                  dec r10
  5668 000035D3 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0004
  5669                                  .L_lambda_opt_stack_shrink_loop_exit_0004:
  5670 000035D5 4889442420              mov [rsp+8*(2+2)], rax
  5671 000035DA 41BA02000000            mov r10, 2
  5672 000035E0 4C89542410              mov [rsp+16], r10
  5673                                  .L_lambda_opt_stack_adjusted_0004:
  5674 000035E5 4C8B4D00                mov r9, [rbp]
  5675 000035E9 C8000000                enter 0, 0
  5676 000035ED 48B8-                   	mov rax, qword (L_constants + 22)
  5676 000035EF [1600000000000000] 
  5677 000035F7 50                      	push rax
  5678 000035F8 6A01                    	push 1
  5679 000035FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5680 000035FF E812D70000              	call malloc
  5681 00003604 50                      	push rax
  5682 00003605 BF10000000              	mov rdi, 8 * 2	; new rib
  5683 0000360A E807D70000              	call malloc
  5684 0000360F 50                      	push rax
  5685 00003610 BF10000000              	mov rdi, 8 * 2	; extended env
  5686 00003615 E8FCD60000              	call malloc
  5687 0000361A 488B7D10                	mov rdi, ENV
  5688 0000361E BE00000000              	mov rsi, 0
  5689 00003623 BA01000000              	mov rdx, 1
  5690                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  5691 00003628 4883FE01                	cmp rsi, 1
  5692 0000362C 7410                    	je .L_lambda_simple_env_end_0024
  5693 0000362E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5694 00003632 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5695 00003636 48FFC6                  	inc rsi
  5696 00003639 48FFC2                  	inc rdx
  5697 0000363C EBEA                    	jmp .L_lambda_simple_env_loop_0024
  5698                                  .L_lambda_simple_env_end_0024:
  5699 0000363E 5B                      	pop rbx
  5700 0000363F BE00000000              	mov rsi, 0
  5701                                  .L_lambda_simple_params_loop_0024:	; copy params
  5702 00003644 4883FE02                	cmp rsi, 2
  5703 00003648 740E                    	je .L_lambda_simple_params_end_0024
  5704 0000364A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5705 0000364F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5706 00003653 48FFC6                  	inc rsi
  5707 00003656 EBEC                    	jmp .L_lambda_simple_params_loop_0024
  5708                                  .L_lambda_simple_params_end_0024:
  5709 00003658 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5710 0000365B 4889C3                  	mov rbx, rax
  5711 0000365E 58                      	pop rax
  5712 0000365F C60005                  	mov byte [rax], T_closure
  5713 00003662 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5714 00003666 48C74009[73360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  5715 0000366E E996020000              	jmp .L_lambda_simple_end_0024
  5716                                  .L_lambda_simple_code_0024:	; lambda-simple body
  5717 00003673 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5718 00003679 740B                    	je .L_lambda_simple_arity_check_ok_0046
  5719 0000367B FF742410                	push qword [rsp + 8 * 2]
  5720 0000367F 6A01                    	push 1
  5721 00003681 E949D60000              	jmp L_error_incorrect_arity_simple
  5722                                  .L_lambda_simple_arity_check_ok_0046:
  5723 00003686 C8000000                	enter 0, 0
  5724 0000368A BF08000000              mov rdi, 8
  5725 0000368F E882D60000              call malloc
  5726 00003694 4889C3                  mov rbx, rax
  5727 00003697 488B4520                mov rax, qword [rbp + 32]
  5728 0000369B 488903                  mov qword [rbx], rax
  5729 0000369E 4889D8                  mov rax, rbx
  5730 000036A1 48894520                mov qword [rbp + 32], rax
  5731 000036A5 48B8-                   mov rax, sob_void
  5731 000036A7 [0000000000000000] 
  5732 000036AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5733 000036B4 E85DD60000              	call malloc
  5734 000036B9 50                      	push rax
  5735 000036BA BF08000000              	mov rdi, 8 * 1	; new rib
  5736 000036BF E852D60000              	call malloc
  5737 000036C4 50                      	push rax
  5738 000036C5 BF18000000              	mov rdi, 8 * 3	; extended env
  5739 000036CA E847D60000              	call malloc
  5740 000036CF 488B7D10                	mov rdi, ENV
  5741 000036D3 BE00000000              	mov rsi, 0
  5742 000036D8 BA01000000              	mov rdx, 1
  5743                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  5744 000036DD 4883FE02                	cmp rsi, 2
  5745 000036E1 7410                    	je .L_lambda_simple_env_end_0025
  5746 000036E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5747 000036E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5748 000036EB 48FFC6                  	inc rsi
  5749 000036EE 48FFC2                  	inc rdx
  5750 000036F1 EBEA                    	jmp .L_lambda_simple_env_loop_0025
  5751                                  .L_lambda_simple_env_end_0025:
  5752 000036F3 5B                      	pop rbx
  5753 000036F4 BE00000000              	mov rsi, 0
  5754                                  .L_lambda_simple_params_loop_0025:	; copy params
  5755 000036F9 4883FE01                	cmp rsi, 1
  5756 000036FD 740E                    	je .L_lambda_simple_params_end_0025
  5757 000036FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5758 00003704 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5759 00003708 48FFC6                  	inc rsi
  5760 0000370B EBEC                    	jmp .L_lambda_simple_params_loop_0025
  5761                                  .L_lambda_simple_params_end_0025:
  5762 0000370D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5763 00003710 4889C3                  	mov rbx, rax
  5764 00003713 58                      	pop rax
  5765 00003714 C60005                  	mov byte [rax], T_closure
  5766 00003717 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5767 0000371B 48C74009[28370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  5768 00003723 E95E010000              	jmp .L_lambda_simple_end_0025
  5769                                  .L_lambda_simple_code_0025:	; lambda-simple body
  5770 00003728 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5771 0000372E 740B                    	je .L_lambda_simple_arity_check_ok_0047
  5772 00003730 FF742410                	push qword [rsp + 8 * 2]
  5773 00003734 6A01                    	push 1
  5774 00003736 E994D50000              	jmp L_error_incorrect_arity_simple
  5775                                  .L_lambda_simple_arity_check_ok_0047:
  5776 0000373B C8000000                	enter 0, 0
  5777 0000373F 488B4520                mov rax, qword [rbp + 32]
  5778 00003743 50                      	push rax
  5779 00003744 6A01                    	push 1
  5780 00003746 488B0425[80000000]      	mov rax, qword [free_var_16]
  5781 0000374E 803805                  	cmp byte [rax], T_closure 
  5782 00003751 0F8547E50000                    jne L_code_ptr_error
  5783                                  
  5784 00003757 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5785                                  
  5786 0000375B 53                              push rbx
  5787                                  
  5788 0000375C FF5009                          call SOB_CLOSURE_CODE(rax)
  5789                                  
  5790 0000375F 50                              	push rax
  5791 00003760 6A01                    	push 1
  5792 00003762 488B0425[08000000]      	mov rax, qword [free_var_1]
  5793 0000376A 803805                  	cmp byte [rax], T_closure 
  5794 0000376D 0F852BE50000                    jne L_code_ptr_error
  5795                                  
  5796 00003773 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5797                                  
  5798 00003777 53                              push rbx
  5799                                  
  5800 00003778 FF5009                          call SOB_CLOSURE_CODE(rax)
  5801                                  
  5802 0000377B 483D[02000000]                  	cmp rax, sob_boolean_false
  5803 00003781 0F84F1000000            	je .L_if_else_0006
  5804 00003787 488B4520                mov rax, qword [rbp + 32]
  5805 0000378B 50                      	push rax
  5806 0000378C 488B0425[80000000]      	mov rax, qword [free_var_16]
  5807 00003794 50                      	push rax
  5808 00003795 6A02                    	push 2
  5809 00003797 488B0425[D8020000]      	mov rax, qword [free_var_91]
  5810 0000379F 803805                  	cmp byte [rax], T_closure 
  5811 000037A2 0F85F6E40000                    jne L_code_ptr_error
  5812                                  
  5813 000037A8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5814                                  
  5815 000037AC 53                              push rbx
  5816                                  
  5817 000037AD FF5009                          call SOB_CLOSURE_CODE(rax)
  5818                                  
  5819 000037B0 50                              	push rax
  5820 000037B1 488B4510                mov rax, qword [rbp + 16]
  5821 000037B5 488B4008                mov rax, qword [rax + 8]
  5822 000037B9 488B00                  mov rax, qword [rax + 0]
  5823 000037BC 50                      	push rax
  5824 000037BD 6A02                    	push 2
  5825 000037BF 488B0425[C8020000]      	mov rax, qword [free_var_89]
  5826 000037C7 803805                  	cmp byte [rax], T_closure 
  5827 000037CA 0F85CEE40000                    jne L_code_ptr_error
  5828                                  
  5829 000037D0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5830                                  
  5831 000037D4 53                              push rbx
  5832                                  
  5833 000037D5 FF5009                          call SOB_CLOSURE_CODE(rax)
  5834                                  
  5835 000037D8 483D[02000000]                  	cmp rax, sob_boolean_false
  5836 000037DE 0F8592000000            	jne .L_or_end_0002
  5837 000037E4 488B4520                mov rax, qword [rbp + 32]
  5838 000037E8 50                      	push rax
  5839 000037E9 488B0425[88000000]      	mov rax, qword [free_var_17]
  5840 000037F1 50                      	push rax
  5841 000037F2 6A02                    	push 2
  5842 000037F4 488B0425[D8020000]      	mov rax, qword [free_var_91]
  5843 000037FC 803805                  	cmp byte [rax], T_closure 
  5844 000037FF 0F8599E40000                    jne L_code_ptr_error
  5845                                  
  5846 00003805 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  5847                                  
  5848 00003809 53                              push rbx
  5849                                  
  5850 0000380A FF5009                          call SOB_CLOSURE_CODE(rax)
  5851                                  
  5852 0000380D 50                              	push rax
  5853 0000380E 6A01                    	push 1
  5854 00003810 488B4510                mov rax, qword [rbp + 16]
  5855 00003814 488B00                  mov rax, qword [rax + 0]
  5856 00003817 488B00                  mov rax, qword [rax + 0]
  5857 0000381A 488B00                  	mov rax, qword [rax]
  5858                                  .L_lambda_simple_arity_check_ok_0048:
  5859 0000381D 803805                  	cmp byte [rax], T_closure
  5860                                  
  5861 00003820 0F8578E40000                    jne L_code_ptr_error                      ; rax <- proc
  5862                                  
  5863                                  
  5864 00003826 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5865                                  
  5866 0000382A 53                              push rbx                                  ; env pushed
  5867                                  
  5868 0000382B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5869                                  
  5870                                  
  5871 0000382E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5872                                  
  5873                                          
  5874                                          
  5875 00003831 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5876                                  
  5877 00003835 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5878                                  
  5879                                  
  5880 0000383A 4D89CA                          mov r10, r9
  5881 0000383D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  5882                                  
  5883                                                                                         
  5884 00003841 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5885 00003844 4983C404                        add r12, 4
  5886                                  
  5887 00003848 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5888                                  .L_tc_recycle_frame_loop_0023:
  5889 0000384E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  5890                                  
  5891 00003852 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5892                                  
  5893                                  
  5894                                  
  5895 00003857 41BE00000000                    mov r14, 0                                ; clean box
  5896                                  
  5897                                  
  5898                                                                  
  5899 0000385D 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5900                                  
  5901 00003861 4983C4FF                        add r12, -1 
  5902                                  
  5903 00003865 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5904 00003869 75E3                    	jne .L_tc_recycle_frame_loop_0023
  5905                                  .L_tc_recycle_frame_done_0023:
  5906 0000386B 5D                      	pop rbp                                  ; restore the old rbp
  5907                                  
  5908 0000386C 488B4D00                        mov rcx, qword [rbp]
  5909 00003870 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5910                                            ; rbx <- code(proc)
  5911                                  
  5912 00003874 FFE3                            jmp rbx
  5913                                  .L_or_end_0002:
  5914 00003876 EB0A                    	jmp .L_if_end_0006
  5915                                  	.L_if_else_0006:
  5916 00003878 48B8-                   		mov rax, qword (L_constants + 2)
  5916 0000387A [0200000000000000] 
  5917                                  	.L_if_end_0006:
  5918 00003882 C9                      	leave
  5919 00003883 C21800                  	ret 8 * (2 + 1)
  5920                                  .L_lambda_simple_end_0025:	; new closure is in rax
  5921 00003886 50                      push rax
  5922 00003887 488B4520                mov rax, qword [rbp + 32]
  5923 0000388B 8F00                    pop qword [rax]
  5924 0000388D 48B8-                   mov rax, sob_void
  5924 0000388F [0000000000000000] 
  5925                                  
  5926 00003897 488B4510                mov rax, qword [rbp + 16]
  5927 0000389B 488B00                  mov rax, qword [rax + 0]
  5928 0000389E 488B4008                mov rax, qword [rax + 8]
  5929 000038A2 50                      	push rax
  5930 000038A3 6A01                    	push 1
  5931 000038A5 488B4520                mov rax, qword [rbp + 32]
  5932 000038A9 488B00                  	mov rax, qword [rax]
  5933                                  .L_lambda_simple_arity_check_ok_0049:
  5934 000038AC 803805                  	cmp byte [rax], T_closure
  5935                                  
  5936 000038AF 0F85E9E30000                    jne L_code_ptr_error                      ; rax <- proc
  5937                                  
  5938                                  
  5939 000038B5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5940                                  
  5941 000038B9 53                              push rbx                                  ; env pushed
  5942                                  
  5943 000038BA FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  5944                                  
  5945                                  
  5946 000038BD FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  5947                                  
  5948                                          
  5949                                          
  5950 000038C0 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  5951                                  
  5952 000038C4 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  5953                                  
  5954                                  
  5955 000038C9 4D89CA                          mov r10, r9
  5956 000038CC 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  5957                                  
  5958                                                                                         
  5959 000038D0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  5960 000038D3 4983C404                        add r12, 4
  5961                                  
  5962 000038D7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  5963                                  .L_tc_recycle_frame_loop_0024:
  5964 000038DD 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  5965                                  
  5966 000038E1 4E8974E500                      mov [rbp + (r12 * 8)], r14
  5967                                  
  5968                                  
  5969                                  
  5970 000038E6 41BE00000000                    mov r14, 0                                ; clean box
  5971                                  
  5972                                  
  5973                                                                  
  5974 000038EC 4983C2FF                        add r10, -1                               ; args_copied_counter--
  5975                                  
  5976 000038F0 4983C4FF                        add r12, -1 
  5977                                  
  5978 000038F4 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  5979 000038F8 75E3                    	jne .L_tc_recycle_frame_loop_0024
  5980                                  .L_tc_recycle_frame_done_0024:
  5981 000038FA 5D                      	pop rbp                                  ; restore the old rbp
  5982                                  
  5983 000038FB 488B4D00                        mov rcx, qword [rbp]
  5984 000038FF 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  5985                                            ; rbx <- code(proc)
  5986                                  
  5987 00003903 FFE3                            jmp rbx
  5988 00003905 C9                      	leave
  5989 00003906 C21800                  	ret 8 * (2 + 1)
  5990                                  .L_lambda_simple_end_0024:	; new closure is in rax
  5991                                  .L_lambda_simple_arity_check_ok_004a:
  5992 00003909 803805                  	cmp byte [rax], T_closure
  5993                                  
  5994 0000390C 0F858CE30000                    jne L_code_ptr_error                      ; rax <- proc
  5995                                  
  5996                                  
  5997 00003912 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  5998                                  
  5999 00003916 53                              push rbx                                  ; env pushed
  6000                                  
  6001 00003917 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6002                                  
  6003                                  
  6004 0000391A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6005                                  
  6006                                          
  6007                                          
  6008 0000391D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6009                                  
  6010 00003921 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6011                                  
  6012                                  
  6013 00003926 4D89CA                          mov r10, r9
  6014 00003929 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  6015                                  
  6016                                                                                         
  6017 0000392D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6018 00003930 4983C404                        add r12, 4
  6019                                  
  6020 00003934 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6021                                  .L_tc_recycle_frame_loop_0025:
  6022 0000393A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  6023                                  
  6024 0000393E 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6025                                  
  6026                                  
  6027                                  
  6028 00003943 41BE00000000                    mov r14, 0                                ; clean box
  6029                                  
  6030                                  
  6031                                                                  
  6032 00003949 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6033                                  
  6034 0000394D 4983C4FF                        add r12, -1 
  6035                                  
  6036 00003951 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6037 00003955 75E3                    	jne .L_tc_recycle_frame_loop_0025
  6038                                  .L_tc_recycle_frame_done_0025:
  6039 00003957 5D                      	pop rbp                                  ; restore the old rbp
  6040                                  
  6041 00003958 488B4D00                        mov rcx, qword [rbp]
  6042 0000395C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6043                                            ; rbx <- code(proc)
  6044                                  
  6045 00003960 FFE3                            jmp rbx
  6046 00003962 C9                      leave
  6047 00003963 4C8B4D00                mov r9, [rbp]
  6048 00003967 C22800                  ret 8 * (3 + 2)
  6049                                  .L_lambda_opt_end_0004:	; new closure is in rax
  6050 0000396A 48890425[D0020000]      	mov qword [free_var_90], rax
  6051 00003972 48B8-                   	mov rax, sob_void
  6051 00003974 [0000000000000000] 
  6052                                  
  6053 0000397C 4889C7                  	mov rdi, rax
  6054 0000397F E8A3D30000              	call print_sexpr_if_not_void
  6055                                  
  6056 00003984 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6057 00003989 E888D30000              	call malloc
  6058 0000398E 50                      	push rax
  6059 0000398F BF00000000              	mov rdi, 8 * 0	; new rib
  6060 00003994 E87DD30000              	call malloc
  6061 00003999 50                      	push rax
  6062 0000399A BF08000000              	mov rdi, 8 * 1	; extended env
  6063 0000399F E872D30000              	call malloc
  6064 000039A4 488B7D10                	mov rdi, ENV
  6065 000039A8 BE00000000              	mov rsi, 0
  6066 000039AD BA01000000              	mov rdx, 1
  6067                                  .L_lambda_opt_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  6068 000039B2 4883FE00                	cmp rsi, 0
  6069 000039B6 7410                    	je .L_lambda_opt_env_end_0005
  6070 000039B8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6071 000039BC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6072 000039C0 48FFC6                  	inc rsi
  6073 000039C3 48FFC2                  	inc rdx
  6074 000039C6 EBEA                    	jmp .L_lambda_opt_env_loop_0005
  6075                                  .L_lambda_opt_env_end_0005:
  6076 000039C8 5B                      	pop rbx
  6077 000039C9 BE00000000              	mov rsi, 0
  6078                                  .L_lambda_opt_params_loop_0009:	; copy params
  6079 000039CE 4883FE00                	cmp rsi, 0
  6080 000039D2 740E                    	je .L_lambda_opt_params_end_0009
  6081 000039D4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6082 000039D9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6083 000039DD 48FFC6                  	inc rsi
  6084 000039E0 EBEC                    	jmp .L_lambda_opt_params_loop_0009
  6085                                  .L_lambda_opt_params_end_0009:
  6086 000039E2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6087 000039E5 4889C3                  	mov rbx, rax
  6088 000039E8 58                      	pop rax
  6089 000039E9 C60005                  	mov byte [rax], T_closure
  6090 000039EC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6091 000039F0 48C74009[FD390000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0005
  6092 000039F8 E929040000              	jmp .L_lambda_opt_end_0005
  6093                                  .L_lambda_opt_code_0005:
  6094 000039FD 4C8B542410              mov r10, qword [rsp+8*2]
  6095 00003A02 4983FA01                cmp r10, 1
  6096 00003A06 740B                    je .L_lambda_opt_arity_check_exact_0005
  6097 00003A08 4983FA01                cmp r10, 1
  6098 00003A0C 7F41                    jg .L_lambda_opt_arity_check_more_0005
  6099 00003A0E E9D0D20000              jmp L_error_incorrect_arity_opt
  6100                                  .L_lambda_opt_arity_check_exact_0005:
  6101 00003A13 4883EC08                sub rsp, 8
  6102 00003A17 BA04000000              mov rdx, 3+1
  6103 00003A1C 4889E3                  mov qword rbx, rsp
  6104                                  .L_lambda_opt_params_loop_000a:
  6105 00003A1F 488B4B08                mov qword rcx, [rbx+8]
  6106 00003A23 48890B                  mov qword [rbx], rcx
  6107 00003A26 48FFCA                  dec rdx
  6108 00003A29 4883C308                add rbx, 8
  6109 00003A2D 4883FA00                cmp rdx, 0
  6110 00003A31 7402                    je .L_lambda_opt_params_end_000a
  6111 00003A33 EBEA                    jmp .L_lambda_opt_params_loop_000a
  6112                                  .L_lambda_opt_params_end_000a:
  6113 00003A35 49FFC2                  inc r10
  6114 00003A38 4C89542410              mov qword [rsp+8*2], r10
  6115 00003A3D 4983C202                add r10, 2
  6116 00003A41 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  6117 00003A49 4C8B4D00                mov r9, [rbp]
  6118 00003A4D EB52                    jmp .L_lambda_opt_stack_adjusted_0005
  6119                                  .L_lambda_opt_arity_check_more_0005:
  6120 00003A4F 48B8-                   mov rax, sob_nil
  6120 00003A51 [0100000000000000] 
  6121 00003A59 4C8B542410              mov r10, [rsp+2*8]
  6122 00003A5E 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  6123 00003A63 4983EA01                sub r10, 1
  6124                                  .L_lambda_opt_stack_shrink_loop_0005:
  6125 00003A67 4983FA00                cmp r10, 0
  6126 00003A6B 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0005
  6127 00003A6D 4889C1                  mov rcx, rax
  6128 00003A70 498B10                  mov rdx, [r8]
  6129 00003A73 BF11000000              mov rdi, 17
  6130 00003A78 E899D20000              call malloc
  6131 00003A7D C60021                  mov byte [rax], T_pair
  6132 00003A80 48894809                mov SOB_PAIR_CDR(rax), rcx
  6133 00003A84 48895001                mov SOB_PAIR_CAR(rax), rdx
  6134 00003A88 4983E808                sub r8, 8
  6135 00003A8C 49FFCA                  dec r10
  6136 00003A8F EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0005
  6137                                  .L_lambda_opt_stack_shrink_loop_exit_0005:
  6138 00003A91 4889442420              mov [rsp+8*(2+2)], rax
  6139 00003A96 41BA02000000            mov r10, 2
  6140 00003A9C 4C89542410              mov [rsp+16], r10
  6141                                  .L_lambda_opt_stack_adjusted_0005:
  6142 00003AA1 4C8B4D00                mov r9, [rbp]
  6143 00003AA5 C8000000                enter 0, 0
  6144 00003AA9 48B8-                   	mov rax, qword (L_constants + 22)
  6144 00003AAB [1600000000000000] 
  6145 00003AB3 50                      	push rax
  6146 00003AB4 6A01                    	push 1
  6147 00003AB6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6148 00003ABB E856D20000              	call malloc
  6149 00003AC0 50                      	push rax
  6150 00003AC1 BF10000000              	mov rdi, 8 * 2	; new rib
  6151 00003AC6 E84BD20000              	call malloc
  6152 00003ACB 50                      	push rax
  6153 00003ACC BF10000000              	mov rdi, 8 * 2	; extended env
  6154 00003AD1 E840D20000              	call malloc
  6155 00003AD6 488B7D10                	mov rdi, ENV
  6156 00003ADA BE00000000              	mov rsi, 0
  6157 00003ADF BA01000000              	mov rdx, 1
  6158                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  6159 00003AE4 4883FE01                	cmp rsi, 1
  6160 00003AE8 7410                    	je .L_lambda_simple_env_end_0026
  6161 00003AEA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6162 00003AEE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6163 00003AF2 48FFC6                  	inc rsi
  6164 00003AF5 48FFC2                  	inc rdx
  6165 00003AF8 EBEA                    	jmp .L_lambda_simple_env_loop_0026
  6166                                  .L_lambda_simple_env_end_0026:
  6167 00003AFA 5B                      	pop rbx
  6168 00003AFB BE00000000              	mov rsi, 0
  6169                                  .L_lambda_simple_params_loop_0026:	; copy params
  6170 00003B00 4883FE02                	cmp rsi, 2
  6171 00003B04 740E                    	je .L_lambda_simple_params_end_0026
  6172 00003B06 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6173 00003B0B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6174 00003B0F 48FFC6                  	inc rsi
  6175 00003B12 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  6176                                  .L_lambda_simple_params_end_0026:
  6177 00003B14 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6178 00003B17 4889C3                  	mov rbx, rax
  6179 00003B1A 58                      	pop rax
  6180 00003B1B C60005                  	mov byte [rax], T_closure
  6181 00003B1E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6182 00003B22 48C74009[2F3B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  6183 00003B2A E996020000              	jmp .L_lambda_simple_end_0026
  6184                                  .L_lambda_simple_code_0026:	; lambda-simple body
  6185 00003B2F 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6186 00003B35 740B                    	je .L_lambda_simple_arity_check_ok_004b
  6187 00003B37 FF742410                	push qword [rsp + 8 * 2]
  6188 00003B3B 6A01                    	push 1
  6189 00003B3D E98DD10000              	jmp L_error_incorrect_arity_simple
  6190                                  .L_lambda_simple_arity_check_ok_004b:
  6191 00003B42 C8000000                	enter 0, 0
  6192 00003B46 BF08000000              mov rdi, 8
  6193 00003B4B E8C6D10000              call malloc
  6194 00003B50 4889C3                  mov rbx, rax
  6195 00003B53 488B4520                mov rax, qword [rbp + 32]
  6196 00003B57 488903                  mov qword [rbx], rax
  6197 00003B5A 4889D8                  mov rax, rbx
  6198 00003B5D 48894520                mov qword [rbp + 32], rax
  6199 00003B61 48B8-                   mov rax, sob_void
  6199 00003B63 [0000000000000000] 
  6200 00003B6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6201 00003B70 E8A1D10000              	call malloc
  6202 00003B75 50                      	push rax
  6203 00003B76 BF08000000              	mov rdi, 8 * 1	; new rib
  6204 00003B7B E896D10000              	call malloc
  6205 00003B80 50                      	push rax
  6206 00003B81 BF18000000              	mov rdi, 8 * 3	; extended env
  6207 00003B86 E88BD10000              	call malloc
  6208 00003B8B 488B7D10                	mov rdi, ENV
  6209 00003B8F BE00000000              	mov rsi, 0
  6210 00003B94 BA01000000              	mov rdx, 1
  6211                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  6212 00003B99 4883FE02                	cmp rsi, 2
  6213 00003B9D 7410                    	je .L_lambda_simple_env_end_0027
  6214 00003B9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6215 00003BA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6216 00003BA7 48FFC6                  	inc rsi
  6217 00003BAA 48FFC2                  	inc rdx
  6218 00003BAD EBEA                    	jmp .L_lambda_simple_env_loop_0027
  6219                                  .L_lambda_simple_env_end_0027:
  6220 00003BAF 5B                      	pop rbx
  6221 00003BB0 BE00000000              	mov rsi, 0
  6222                                  .L_lambda_simple_params_loop_0027:	; copy params
  6223 00003BB5 4883FE01                	cmp rsi, 1
  6224 00003BB9 740E                    	je .L_lambda_simple_params_end_0027
  6225 00003BBB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6226 00003BC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6227 00003BC4 48FFC6                  	inc rsi
  6228 00003BC7 EBEC                    	jmp .L_lambda_simple_params_loop_0027
  6229                                  .L_lambda_simple_params_end_0027:
  6230 00003BC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6231 00003BCC 4889C3                  	mov rbx, rax
  6232 00003BCF 58                      	pop rax
  6233 00003BD0 C60005                  	mov byte [rax], T_closure
  6234 00003BD3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6235 00003BD7 48C74009[E43B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  6236 00003BDF E95E010000              	jmp .L_lambda_simple_end_0027
  6237                                  .L_lambda_simple_code_0027:	; lambda-simple body
  6238 00003BE4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6239 00003BEA 740B                    	je .L_lambda_simple_arity_check_ok_004c
  6240 00003BEC FF742410                	push qword [rsp + 8 * 2]
  6241 00003BF0 6A01                    	push 1
  6242 00003BF2 E9D8D00000              	jmp L_error_incorrect_arity_simple
  6243                                  .L_lambda_simple_arity_check_ok_004c:
  6244 00003BF7 C8000000                	enter 0, 0
  6245 00003BFB 488B4520                mov rax, qword [rbp + 32]
  6246 00003BFF 50                      	push rax
  6247 00003C00 6A01                    	push 1
  6248 00003C02 488B0425[80000000]      	mov rax, qword [free_var_16]
  6249 00003C0A 803805                  	cmp byte [rax], T_closure 
  6250 00003C0D 0F858BE00000                    jne L_code_ptr_error
  6251                                  
  6252 00003C13 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6253                                  
  6254 00003C17 53                              push rbx
  6255                                  
  6256 00003C18 FF5009                          call SOB_CLOSURE_CODE(rax)
  6257                                  
  6258 00003C1B 50                              	push rax
  6259 00003C1C 6A01                    	push 1
  6260 00003C1E 488B0425[00000000]      	mov rax, qword [free_var_0]
  6261 00003C26 803805                  	cmp byte [rax], T_closure 
  6262 00003C29 0F856FE00000                    jne L_code_ptr_error
  6263                                  
  6264 00003C2F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6265                                  
  6266 00003C33 53                              push rbx
  6267                                  
  6268 00003C34 FF5009                          call SOB_CLOSURE_CODE(rax)
  6269                                  
  6270 00003C37 483D[02000000]                  	cmp rax, sob_boolean_false
  6271 00003C3D 0F85FB000000            	jne .L_or_end_0003
  6272 00003C43 488B4520                mov rax, qword [rbp + 32]
  6273 00003C47 50                      	push rax
  6274 00003C48 488B0425[80000000]      	mov rax, qword [free_var_16]
  6275 00003C50 50                      	push rax
  6276 00003C51 6A02                    	push 2
  6277 00003C53 488B0425[D8020000]      	mov rax, qword [free_var_91]
  6278 00003C5B 803805                  	cmp byte [rax], T_closure 
  6279 00003C5E 0F853AE00000                    jne L_code_ptr_error
  6280                                  
  6281 00003C64 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6282                                  
  6283 00003C68 53                              push rbx
  6284                                  
  6285 00003C69 FF5009                          call SOB_CLOSURE_CODE(rax)
  6286                                  
  6287 00003C6C 50                              	push rax
  6288 00003C6D 488B4510                mov rax, qword [rbp + 16]
  6289 00003C71 488B4008                mov rax, qword [rax + 8]
  6290 00003C75 488B00                  mov rax, qword [rax + 0]
  6291 00003C78 50                      	push rax
  6292 00003C79 6A02                    	push 2
  6293 00003C7B 488B0425[C8020000]      	mov rax, qword [free_var_89]
  6294 00003C83 803805                  	cmp byte [rax], T_closure 
  6295 00003C86 0F8512E00000                    jne L_code_ptr_error
  6296                                  
  6297 00003C8C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6298                                  
  6299 00003C90 53                              push rbx
  6300                                  
  6301 00003C91 FF5009                          call SOB_CLOSURE_CODE(rax)
  6302                                  
  6303 00003C94 483D[02000000]                  	cmp rax, sob_boolean_false
  6304 00003C9A 0F8494000000            	je .L_if_else_0007
  6305 00003CA0 488B4520                mov rax, qword [rbp + 32]
  6306 00003CA4 50                      	push rax
  6307 00003CA5 488B0425[88000000]      	mov rax, qword [free_var_17]
  6308 00003CAD 50                      	push rax
  6309 00003CAE 6A02                    	push 2
  6310 00003CB0 488B0425[D8020000]      	mov rax, qword [free_var_91]
  6311 00003CB8 803805                  	cmp byte [rax], T_closure 
  6312 00003CBB 0F85DDDF0000                    jne L_code_ptr_error
  6313                                  
  6314 00003CC1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6315                                  
  6316 00003CC5 53                              push rbx
  6317                                  
  6318 00003CC6 FF5009                          call SOB_CLOSURE_CODE(rax)
  6319                                  
  6320 00003CC9 50                              	push rax
  6321 00003CCA 6A01                    	push 1
  6322 00003CCC 488B4510                mov rax, qword [rbp + 16]
  6323 00003CD0 488B00                  mov rax, qword [rax + 0]
  6324 00003CD3 488B00                  mov rax, qword [rax + 0]
  6325 00003CD6 488B00                  	mov rax, qword [rax]
  6326                                  .L_lambda_simple_arity_check_ok_004d:
  6327 00003CD9 803805                  	cmp byte [rax], T_closure
  6328                                  
  6329 00003CDC 0F85BCDF0000                    jne L_code_ptr_error                      ; rax <- proc
  6330                                  
  6331                                  
  6332 00003CE2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6333                                  
  6334 00003CE6 53                              push rbx                                  ; env pushed
  6335                                  
  6336 00003CE7 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6337                                  
  6338                                  
  6339 00003CEA FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6340                                  
  6341                                          
  6342                                          
  6343 00003CED 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6344                                  
  6345 00003CF1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6346                                  
  6347                                  
  6348 00003CF6 4D89CA                          mov r10, r9
  6349 00003CF9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  6350                                  
  6351                                                                                         
  6352 00003CFD 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6353 00003D00 4983C404                        add r12, 4
  6354                                  
  6355 00003D04 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6356                                  .L_tc_recycle_frame_loop_0026:
  6357 00003D0A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  6358                                  
  6359 00003D0E 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6360                                  
  6361                                  
  6362                                  
  6363 00003D13 41BE00000000                    mov r14, 0                                ; clean box
  6364                                  
  6365                                  
  6366                                                                  
  6367 00003D19 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6368                                  
  6369 00003D1D 4983C4FF                        add r12, -1 
  6370                                  
  6371 00003D21 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6372 00003D25 75E3                    	jne .L_tc_recycle_frame_loop_0026
  6373                                  .L_tc_recycle_frame_done_0026:
  6374 00003D27 5D                      	pop rbp                                  ; restore the old rbp
  6375                                  
  6376 00003D28 488B4D00                        mov rcx, qword [rbp]
  6377 00003D2C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6378                                            ; rbx <- code(proc)
  6379                                  
  6380 00003D30 FFE3                            jmp rbx
  6381 00003D32 EB0A                    	jmp .L_if_end_0007
  6382                                  	.L_if_else_0007:
  6383 00003D34 48B8-                   		mov rax, qword (L_constants + 2)
  6383 00003D36 [0200000000000000] 
  6384                                  	.L_if_end_0007:
  6385                                  .L_or_end_0003:
  6386 00003D3E C9                      	leave
  6387 00003D3F C21800                  	ret 8 * (2 + 1)
  6388                                  .L_lambda_simple_end_0027:	; new closure is in rax
  6389 00003D42 50                      push rax
  6390 00003D43 488B4520                mov rax, qword [rbp + 32]
  6391 00003D47 8F00                    pop qword [rax]
  6392 00003D49 48B8-                   mov rax, sob_void
  6392 00003D4B [0000000000000000] 
  6393                                  
  6394 00003D53 488B4510                mov rax, qword [rbp + 16]
  6395 00003D57 488B00                  mov rax, qword [rax + 0]
  6396 00003D5A 488B4008                mov rax, qword [rax + 8]
  6397 00003D5E 50                      	push rax
  6398 00003D5F 6A01                    	push 1
  6399 00003D61 488B4520                mov rax, qword [rbp + 32]
  6400 00003D65 488B00                  	mov rax, qword [rax]
  6401                                  .L_lambda_simple_arity_check_ok_004e:
  6402 00003D68 803805                  	cmp byte [rax], T_closure
  6403                                  
  6404 00003D6B 0F852DDF0000                    jne L_code_ptr_error                      ; rax <- proc
  6405                                  
  6406                                  
  6407 00003D71 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6408                                  
  6409 00003D75 53                              push rbx                                  ; env pushed
  6410                                  
  6411 00003D76 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6412                                  
  6413                                  
  6414 00003D79 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6415                                  
  6416                                          
  6417                                          
  6418 00003D7C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6419                                  
  6420 00003D80 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6421                                  
  6422                                  
  6423 00003D85 4D89CA                          mov r10, r9
  6424 00003D88 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  6425                                  
  6426                                                                                         
  6427 00003D8C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6428 00003D8F 4983C404                        add r12, 4
  6429                                  
  6430 00003D93 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6431                                  .L_tc_recycle_frame_loop_0027:
  6432 00003D99 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  6433                                  
  6434 00003D9D 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6435                                  
  6436                                  
  6437                                  
  6438 00003DA2 41BE00000000                    mov r14, 0                                ; clean box
  6439                                  
  6440                                  
  6441                                                                  
  6442 00003DA8 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6443                                  
  6444 00003DAC 4983C4FF                        add r12, -1 
  6445                                  
  6446 00003DB0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6447 00003DB4 75E3                    	jne .L_tc_recycle_frame_loop_0027
  6448                                  .L_tc_recycle_frame_done_0027:
  6449 00003DB6 5D                      	pop rbp                                  ; restore the old rbp
  6450                                  
  6451 00003DB7 488B4D00                        mov rcx, qword [rbp]
  6452 00003DBB 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6453                                            ; rbx <- code(proc)
  6454                                  
  6455 00003DBF FFE3                            jmp rbx
  6456 00003DC1 C9                      	leave
  6457 00003DC2 C21800                  	ret 8 * (2 + 1)
  6458                                  .L_lambda_simple_end_0026:	; new closure is in rax
  6459                                  .L_lambda_simple_arity_check_ok_004f:
  6460 00003DC5 803805                  	cmp byte [rax], T_closure
  6461                                  
  6462 00003DC8 0F85D0DE0000                    jne L_code_ptr_error                      ; rax <- proc
  6463                                  
  6464                                  
  6465 00003DCE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6466                                  
  6467 00003DD2 53                              push rbx                                  ; env pushed
  6468                                  
  6469 00003DD3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6470                                  
  6471                                  
  6472 00003DD6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6473                                  
  6474                                          
  6475                                          
  6476 00003DD9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6477                                  
  6478 00003DDD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6479                                  
  6480                                  
  6481 00003DE2 4D89CA                          mov r10, r9
  6482 00003DE5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  6483                                  
  6484                                                                                         
  6485 00003DE9 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6486 00003DEC 4983C404                        add r12, 4
  6487                                  
  6488 00003DF0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6489                                  .L_tc_recycle_frame_loop_0028:
  6490 00003DF6 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  6491                                  
  6492 00003DFA 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6493                                  
  6494                                  
  6495                                  
  6496 00003DFF 41BE00000000                    mov r14, 0                                ; clean box
  6497                                  
  6498                                  
  6499                                                                  
  6500 00003E05 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6501                                  
  6502 00003E09 4983C4FF                        add r12, -1 
  6503                                  
  6504 00003E0D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6505 00003E11 75E3                    	jne .L_tc_recycle_frame_loop_0028
  6506                                  .L_tc_recycle_frame_done_0028:
  6507 00003E13 5D                      	pop rbp                                  ; restore the old rbp
  6508                                  
  6509 00003E14 488B4D00                        mov rcx, qword [rbp]
  6510 00003E18 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6511                                            ; rbx <- code(proc)
  6512                                  
  6513 00003E1C FFE3                            jmp rbx
  6514 00003E1E C9                      leave
  6515 00003E1F 4C8B4D00                mov r9, [rbp]
  6516 00003E23 C22800                  ret 8 * (3 + 2)
  6517                                  .L_lambda_opt_end_0005:	; new closure is in rax
  6518 00003E26 48890425[E0020000]      	mov qword [free_var_92], rax
  6519 00003E2E 48B8-                   	mov rax, sob_void
  6519 00003E30 [0000000000000000] 
  6520                                  
  6521 00003E38 4889C7                  	mov rdi, rax
  6522 00003E3B E8E7CE0000              	call print_sexpr_if_not_void
  6523                                  
  6524 00003E40 48B8-                   	mov rax, qword (L_constants + 22)
  6524 00003E42 [1600000000000000] 
  6525 00003E4A 50                      	push rax
  6526 00003E4B 48B8-                   	mov rax, qword (L_constants + 22)
  6526 00003E4D [1600000000000000] 
  6527 00003E55 50                      	push rax
  6528 00003E56 6A02                    	push 2
  6529 00003E58 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6530 00003E5D E8B4CE0000              	call malloc
  6531 00003E62 50                      	push rax
  6532 00003E63 BF00000000              	mov rdi, 8 * 0	; new rib
  6533 00003E68 E8A9CE0000              	call malloc
  6534 00003E6D 50                      	push rax
  6535 00003E6E BF08000000              	mov rdi, 8 * 1	; extended env
  6536 00003E73 E89ECE0000              	call malloc
  6537 00003E78 488B7D10                	mov rdi, ENV
  6538 00003E7C BE00000000              	mov rsi, 0
  6539 00003E81 BA01000000              	mov rdx, 1
  6540                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  6541 00003E86 4883FE00                	cmp rsi, 0
  6542 00003E8A 7410                    	je .L_lambda_simple_env_end_0028
  6543 00003E8C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6544 00003E90 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6545 00003E94 48FFC6                  	inc rsi
  6546 00003E97 48FFC2                  	inc rdx
  6547 00003E9A EBEA                    	jmp .L_lambda_simple_env_loop_0028
  6548                                  .L_lambda_simple_env_end_0028:
  6549 00003E9C 5B                      	pop rbx
  6550 00003E9D BE00000000              	mov rsi, 0
  6551                                  .L_lambda_simple_params_loop_0028:	; copy params
  6552 00003EA2 4883FE00                	cmp rsi, 0
  6553 00003EA6 740E                    	je .L_lambda_simple_params_end_0028
  6554 00003EA8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6555 00003EAD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6556 00003EB1 48FFC6                  	inc rsi
  6557 00003EB4 EBEC                    	jmp .L_lambda_simple_params_loop_0028
  6558                                  .L_lambda_simple_params_end_0028:
  6559 00003EB6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6560 00003EB9 4889C3                  	mov rbx, rax
  6561 00003EBC 58                      	pop rax
  6562 00003EBD C60005                  	mov byte [rax], T_closure
  6563 00003EC0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6564 00003EC4 48C74009[D13E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  6565 00003ECC E9F9050000              	jmp .L_lambda_simple_end_0028
  6566                                  .L_lambda_simple_code_0028:	; lambda-simple body
  6567 00003ED1 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6568 00003ED7 740B                    	je .L_lambda_simple_arity_check_ok_0050
  6569 00003ED9 FF742410                	push qword [rsp + 8 * 2]
  6570 00003EDD 6A02                    	push 2
  6571 00003EDF E9EBCD0000              	jmp L_error_incorrect_arity_simple
  6572                                  .L_lambda_simple_arity_check_ok_0050:
  6573 00003EE4 C8000000                	enter 0, 0
  6574 00003EE8 BF08000000              mov rdi, 8
  6575 00003EED E824CE0000              call malloc
  6576 00003EF2 4889C3                  mov rbx, rax
  6577 00003EF5 488B4520                mov rax, qword [rbp + 32]
  6578 00003EF9 488903                  mov qword [rbx], rax
  6579 00003EFC 4889D8                  mov rax, rbx
  6580 00003EFF 48894520                mov qword [rbp + 32], rax
  6581 00003F03 48B8-                   mov rax, sob_void
  6581 00003F05 [0000000000000000] 
  6582 00003F0D BF08000000              mov rdi, 8
  6583 00003F12 E8FFCD0000              call malloc
  6584 00003F17 4889C3                  mov rbx, rax
  6585 00003F1A 488B4528                mov rax, qword [rbp + 40]
  6586 00003F1E 488903                  mov qword [rbx], rax
  6587 00003F21 4889D8                  mov rax, rbx
  6588 00003F24 48894528                mov qword [rbp + 40], rax
  6589 00003F28 48B8-                   mov rax, sob_void
  6589 00003F2A [0000000000000000] 
  6590 00003F32 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6591 00003F37 E8DACD0000              	call malloc
  6592 00003F3C 50                      	push rax
  6593 00003F3D BF10000000              	mov rdi, 8 * 2	; new rib
  6594 00003F42 E8CFCD0000              	call malloc
  6595 00003F47 50                      	push rax
  6596 00003F48 BF10000000              	mov rdi, 8 * 2	; extended env
  6597 00003F4D E8C4CD0000              	call malloc
  6598 00003F52 488B7D10                	mov rdi, ENV
  6599 00003F56 BE00000000              	mov rsi, 0
  6600 00003F5B BA01000000              	mov rdx, 1
  6601                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  6602 00003F60 4883FE01                	cmp rsi, 1
  6603 00003F64 7410                    	je .L_lambda_simple_env_end_0029
  6604 00003F66 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6605 00003F6A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6606 00003F6E 48FFC6                  	inc rsi
  6607 00003F71 48FFC2                  	inc rdx
  6608 00003F74 EBEA                    	jmp .L_lambda_simple_env_loop_0029
  6609                                  .L_lambda_simple_env_end_0029:
  6610 00003F76 5B                      	pop rbx
  6611 00003F77 BE00000000              	mov rsi, 0
  6612                                  .L_lambda_simple_params_loop_0029:	; copy params
  6613 00003F7C 4883FE02                	cmp rsi, 2
  6614 00003F80 740E                    	je .L_lambda_simple_params_end_0029
  6615 00003F82 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6616 00003F87 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6617 00003F8B 48FFC6                  	inc rsi
  6618 00003F8E EBEC                    	jmp .L_lambda_simple_params_loop_0029
  6619                                  .L_lambda_simple_params_end_0029:
  6620 00003F90 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6621 00003F93 4889C3                  	mov rbx, rax
  6622 00003F96 58                      	pop rax
  6623 00003F97 C60005                  	mov byte [rax], T_closure
  6624 00003F9A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6625 00003F9E 48C74009[AB3F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  6626 00003FA6 E935010000              	jmp .L_lambda_simple_end_0029
  6627                                  .L_lambda_simple_code_0029:	; lambda-simple body
  6628 00003FAB 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6629 00003FB1 740B                    	je .L_lambda_simple_arity_check_ok_0051
  6630 00003FB3 FF742410                	push qword [rsp + 8 * 2]
  6631 00003FB7 6A02                    	push 2
  6632 00003FB9 E911CD0000              	jmp L_error_incorrect_arity_simple
  6633                                  .L_lambda_simple_arity_check_ok_0051:
  6634 00003FBE C8000000                	enter 0, 0
  6635 00003FC2 488B4528                mov rax, qword [rbp + 40]
  6636 00003FC6 50                      	push rax
  6637 00003FC7 6A01                    	push 1
  6638 00003FC9 488B0425[00000000]      	mov rax, qword [free_var_0]
  6639 00003FD1 803805                  	cmp byte [rax], T_closure 
  6640 00003FD4 0F85C4DC0000                    jne L_code_ptr_error
  6641                                  
  6642 00003FDA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6643                                  
  6644 00003FDE 53                              push rbx
  6645                                  
  6646 00003FDF FF5009                          call SOB_CLOSURE_CODE(rax)
  6647                                  
  6648 00003FE2 483D[02000000]                  	cmp rax, sob_boolean_false
  6649 00003FE8 740F                    	je .L_if_else_0008
  6650 00003FEA 48B8-                   	mov rax, qword (L_constants + 1)
  6650 00003FEC [0100000000000000] 
  6651 00003FF4 E9E3000000              	jmp .L_if_end_0008
  6652                                  	.L_if_else_0008:
  6653 00003FF9 488B4528                	mov rax, qword [rbp + 40]
  6654 00003FFD 50                      	push rax
  6655 00003FFE 6A01                    	push 1
  6656 00004000 488B0425[88000000]      	mov rax, qword [free_var_17]
  6657 00004008 803805                  	cmp byte [rax], T_closure 
  6658 0000400B 0F858DDC0000                    jne L_code_ptr_error
  6659                                  
  6660 00004011 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6661                                  
  6662 00004015 53                              push rbx
  6663                                  
  6664 00004016 FF5009                          call SOB_CLOSURE_CODE(rax)
  6665                                  
  6666 00004019 50                              	push rax
  6667 0000401A 488B4520                mov rax, qword [rbp + 32]
  6668 0000401E 50                      	push rax
  6669 0000401F 6A02                    	push 2
  6670 00004021 488B4510                mov rax, qword [rbp + 16]
  6671 00004025 488B00                  mov rax, qword [rax + 0]
  6672 00004028 488B00                  mov rax, qword [rax + 0]
  6673 0000402B 488B00                  	mov rax, qword [rax]
  6674 0000402E 803805                  	cmp byte [rax], T_closure 
  6675 00004031 0F8567DC0000                    jne L_code_ptr_error
  6676                                  
  6677 00004037 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6678                                  
  6679 0000403B 53                              push rbx
  6680                                  
  6681 0000403C FF5009                          call SOB_CLOSURE_CODE(rax)
  6682                                  
  6683 0000403F 50                              	push rax
  6684 00004040 488B4528                mov rax, qword [rbp + 40]
  6685 00004044 50                      	push rax
  6686 00004045 6A01                    	push 1
  6687 00004047 488B0425[80000000]      	mov rax, qword [free_var_16]
  6688 0000404F 803805                  	cmp byte [rax], T_closure 
  6689 00004052 0F8546DC0000                    jne L_code_ptr_error
  6690                                  
  6691 00004058 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6692                                  
  6693 0000405C 53                              push rbx
  6694                                  
  6695 0000405D FF5009                          call SOB_CLOSURE_CODE(rax)
  6696                                  
  6697 00004060 50                              	push rax
  6698 00004061 6A01                    	push 1
  6699 00004063 488B4520                mov rax, qword [rbp + 32]
  6700 00004067 803805                  	cmp byte [rax], T_closure 
  6701 0000406A 0F852EDC0000                    jne L_code_ptr_error
  6702                                  
  6703 00004070 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6704                                  
  6705 00004074 53                              push rbx
  6706                                  
  6707 00004075 FF5009                          call SOB_CLOSURE_CODE(rax)
  6708                                  
  6709 00004078 50                              	push rax
  6710 00004079 6A02                    	push 2
  6711 0000407B 488B0425[68000000]      	mov rax, qword [free_var_13]
  6712                                  .L_lambda_simple_arity_check_ok_0052:
  6713 00004083 803805                  	cmp byte [rax], T_closure
  6714                                  
  6715 00004086 0F8512DC0000                    jne L_code_ptr_error                      ; rax <- proc
  6716                                  
  6717                                  
  6718 0000408C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6719                                  
  6720 00004090 53                              push rbx                                  ; env pushed
  6721                                  
  6722 00004091 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6723                                  
  6724                                  
  6725 00004094 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6726                                  
  6727                                          
  6728                                          
  6729 00004097 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6730                                  
  6731 0000409B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6732                                  
  6733                                  
  6734 000040A0 4D89CA                          mov r10, r9
  6735 000040A3 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  6736                                  
  6737                                                                                         
  6738 000040A7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6739 000040AA 4983C404                        add r12, 4
  6740                                  
  6741 000040AE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6742                                  .L_tc_recycle_frame_loop_0029:
  6743 000040B4 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  6744                                  
  6745 000040B8 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6746                                  
  6747                                  
  6748                                  
  6749 000040BD 41BE00000000                    mov r14, 0                                ; clean box
  6750                                  
  6751                                  
  6752                                                                  
  6753 000040C3 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6754                                  
  6755 000040C7 4983C4FF                        add r12, -1 
  6756                                  
  6757 000040CB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6758 000040CF 75E3                    	jne .L_tc_recycle_frame_loop_0029
  6759                                  .L_tc_recycle_frame_done_0029:
  6760 000040D1 5D                      	pop rbp                                  ; restore the old rbp
  6761                                  
  6762 000040D2 488B4D00                        mov rcx, qword [rbp]
  6763 000040D6 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6764                                            ; rbx <- code(proc)
  6765                                  
  6766 000040DA FFE3                            jmp rbx
  6767                                  	.L_if_end_0008:
  6768 000040DC C9                      	leave
  6769 000040DD C22000                  	ret 8 * (2 + 2)
  6770                                  .L_lambda_simple_end_0029:	; new closure is in rax
  6771 000040E0 50                      push rax
  6772 000040E1 488B4520                mov rax, qword [rbp + 32]
  6773 000040E5 8F00                    pop qword [rax]
  6774 000040E7 48B8-                   mov rax, sob_void
  6774 000040E9 [0000000000000000] 
  6775                                  
  6776 000040F1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6777 000040F6 E81BCC0000              	call malloc
  6778 000040FB 50                      	push rax
  6779 000040FC BF10000000              	mov rdi, 8 * 2	; new rib
  6780 00004101 E810CC0000              	call malloc
  6781 00004106 50                      	push rax
  6782 00004107 BF10000000              	mov rdi, 8 * 2	; extended env
  6783 0000410C E805CC0000              	call malloc
  6784 00004111 488B7D10                	mov rdi, ENV
  6785 00004115 BE00000000              	mov rsi, 0
  6786 0000411A BA01000000              	mov rdx, 1
  6787                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  6788 0000411F 4883FE01                	cmp rsi, 1
  6789 00004123 7410                    	je .L_lambda_simple_env_end_002a
  6790 00004125 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6791 00004129 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6792 0000412D 48FFC6                  	inc rsi
  6793 00004130 48FFC2                  	inc rdx
  6794 00004133 EBEA                    	jmp .L_lambda_simple_env_loop_002a
  6795                                  .L_lambda_simple_env_end_002a:
  6796 00004135 5B                      	pop rbx
  6797 00004136 BE00000000              	mov rsi, 0
  6798                                  .L_lambda_simple_params_loop_002a:	; copy params
  6799 0000413B 4883FE02                	cmp rsi, 2
  6800 0000413F 740E                    	je .L_lambda_simple_params_end_002a
  6801 00004141 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6802 00004146 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6803 0000414A 48FFC6                  	inc rsi
  6804 0000414D EBEC                    	jmp .L_lambda_simple_params_loop_002a
  6805                                  .L_lambda_simple_params_end_002a:
  6806 0000414F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6807 00004152 4889C3                  	mov rbx, rax
  6808 00004155 58                      	pop rax
  6809 00004156 C60005                  	mov byte [rax], T_closure
  6810 00004159 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6811 0000415D 48C74009[6A410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  6812 00004165 E977010000              	jmp .L_lambda_simple_end_002a
  6813                                  .L_lambda_simple_code_002a:	; lambda-simple body
  6814 0000416A 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6815 00004170 740B                    	je .L_lambda_simple_arity_check_ok_0053
  6816 00004172 FF742410                	push qword [rsp + 8 * 2]
  6817 00004176 6A02                    	push 2
  6818 00004178 E952CB0000              	jmp L_error_incorrect_arity_simple
  6819                                  .L_lambda_simple_arity_check_ok_0053:
  6820 0000417D C8000000                	enter 0, 0
  6821 00004181 488B4528                mov rax, qword [rbp + 40]
  6822 00004185 50                      	push rax
  6823 00004186 6A01                    	push 1
  6824 00004188 488B0425[80000000]      	mov rax, qword [free_var_16]
  6825 00004190 803805                  	cmp byte [rax], T_closure 
  6826 00004193 0F8505DB0000                    jne L_code_ptr_error
  6827                                  
  6828 00004199 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6829                                  
  6830 0000419D 53                              push rbx
  6831                                  
  6832 0000419E FF5009                          call SOB_CLOSURE_CODE(rax)
  6833                                  
  6834 000041A1 50                              	push rax
  6835 000041A2 6A01                    	push 1
  6836 000041A4 488B0425[00000000]      	mov rax, qword [free_var_0]
  6837 000041AC 803805                  	cmp byte [rax], T_closure 
  6838 000041AF 0F85E9DA0000                    jne L_code_ptr_error
  6839                                  
  6840 000041B5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6841                                  
  6842 000041B9 53                              push rbx
  6843                                  
  6844 000041BA FF5009                          call SOB_CLOSURE_CODE(rax)
  6845                                  
  6846 000041BD 483D[02000000]                  	cmp rax, sob_boolean_false
  6847 000041C3 740F                    	je .L_if_else_0009
  6848 000041C5 48B8-                   	mov rax, qword (L_constants + 1)
  6848 000041C7 [0100000000000000] 
  6849 000041CF E909010000              	jmp .L_if_end_0009
  6850                                  	.L_if_else_0009:
  6851 000041D4 488B4528                	mov rax, qword [rbp + 40]
  6852 000041D8 50                      	push rax
  6853 000041D9 488B0425[88000000]      	mov rax, qword [free_var_17]
  6854 000041E1 50                      	push rax
  6855 000041E2 6A02                    	push 2
  6856 000041E4 488B4510                mov rax, qword [rbp + 16]
  6857 000041E8 488B00                  mov rax, qword [rax + 0]
  6858 000041EB 488B00                  mov rax, qword [rax + 0]
  6859 000041EE 488B00                  	mov rax, qword [rax]
  6860 000041F1 803805                  	cmp byte [rax], T_closure 
  6861 000041F4 0F85A4DA0000                    jne L_code_ptr_error
  6862                                  
  6863 000041FA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6864                                  
  6865 000041FE 53                              push rbx
  6866                                  
  6867 000041FF FF5009                          call SOB_CLOSURE_CODE(rax)
  6868                                  
  6869 00004202 50                              	push rax
  6870 00004203 488B4520                mov rax, qword [rbp + 32]
  6871 00004207 50                      	push rax
  6872 00004208 6A02                    	push 2
  6873 0000420A 488B4510                mov rax, qword [rbp + 16]
  6874 0000420E 488B00                  mov rax, qword [rax + 0]
  6875 00004211 488B4008                mov rax, qword [rax + 8]
  6876 00004215 488B00                  	mov rax, qword [rax]
  6877 00004218 803805                  	cmp byte [rax], T_closure 
  6878 0000421B 0F857DDA0000                    jne L_code_ptr_error
  6879                                  
  6880 00004221 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6881                                  
  6882 00004225 53                              push rbx
  6883                                  
  6884 00004226 FF5009                          call SOB_CLOSURE_CODE(rax)
  6885                                  
  6886 00004229 50                              	push rax
  6887 0000422A 488B4528                mov rax, qword [rbp + 40]
  6888 0000422E 50                      	push rax
  6889 0000422F 488B0425[80000000]      	mov rax, qword [free_var_16]
  6890 00004237 50                      	push rax
  6891 00004238 6A02                    	push 2
  6892 0000423A 488B4510                mov rax, qword [rbp + 16]
  6893 0000423E 488B00                  mov rax, qword [rax + 0]
  6894 00004241 488B00                  mov rax, qword [rax + 0]
  6895 00004244 488B00                  	mov rax, qword [rax]
  6896 00004247 803805                  	cmp byte [rax], T_closure 
  6897 0000424A 0F854EDA0000                    jne L_code_ptr_error
  6898                                  
  6899 00004250 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6900                                  
  6901 00004254 53                              push rbx
  6902                                  
  6903 00004255 FF5009                          call SOB_CLOSURE_CODE(rax)
  6904                                  
  6905 00004258 50                              	push rax
  6906 00004259 488B4520                mov rax, qword [rbp + 32]
  6907 0000425D 50                      	push rax
  6908 0000425E 6A02                    	push 2
  6909 00004260 488B0425[C8020000]      	mov rax, qword [free_var_89]
  6910 00004268 803805                  	cmp byte [rax], T_closure 
  6911 0000426B 0F852DDA0000                    jne L_code_ptr_error
  6912                                  
  6913 00004271 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  6914                                  
  6915 00004275 53                              push rbx
  6916                                  
  6917 00004276 FF5009                          call SOB_CLOSURE_CODE(rax)
  6918                                  
  6919 00004279 50                              	push rax
  6920 0000427A 6A02                    	push 2
  6921 0000427C 488B0425[68000000]      	mov rax, qword [free_var_13]
  6922                                  .L_lambda_simple_arity_check_ok_0054:
  6923 00004284 803805                  	cmp byte [rax], T_closure
  6924                                  
  6925 00004287 0F8511DA0000                    jne L_code_ptr_error                      ; rax <- proc
  6926                                  
  6927                                  
  6928 0000428D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  6929                                  
  6930 00004291 53                              push rbx                                  ; env pushed
  6931                                  
  6932 00004292 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  6933                                  
  6934                                  
  6935 00004295 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  6936                                  
  6937                                          
  6938                                          
  6939 00004298 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  6940                                  
  6941 0000429C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  6942                                  
  6943                                  
  6944 000042A1 4D89CA                          mov r10, r9
  6945 000042A4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  6946                                  
  6947                                                                                         
  6948 000042A8 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  6949 000042AB 4983C404                        add r12, 4
  6950                                  
  6951 000042AF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  6952                                  .L_tc_recycle_frame_loop_002a:
  6953 000042B5 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  6954                                  
  6955 000042B9 4E8974E500                      mov [rbp + (r12 * 8)], r14
  6956                                  
  6957                                  
  6958                                  
  6959 000042BE 41BE00000000                    mov r14, 0                                ; clean box
  6960                                  
  6961                                  
  6962                                                                  
  6963 000042C4 4983C2FF                        add r10, -1                               ; args_copied_counter--
  6964                                  
  6965 000042C8 4983C4FF                        add r12, -1 
  6966                                  
  6967 000042CC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  6968 000042D0 75E3                    	jne .L_tc_recycle_frame_loop_002a
  6969                                  .L_tc_recycle_frame_done_002a:
  6970 000042D2 5D                      	pop rbp                                  ; restore the old rbp
  6971                                  
  6972 000042D3 488B4D00                        mov rcx, qword [rbp]
  6973 000042D7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  6974                                            ; rbx <- code(proc)
  6975                                  
  6976 000042DB FFE3                            jmp rbx
  6977                                  	.L_if_end_0009:
  6978 000042DD C9                      	leave
  6979 000042DE C22000                  	ret 8 * (2 + 2)
  6980                                  .L_lambda_simple_end_002a:	; new closure is in rax
  6981 000042E1 50                      push rax
  6982 000042E2 488B4528                mov rax, qword [rbp + 40]
  6983 000042E6 8F00                    pop qword [rax]
  6984 000042E8 48B8-                   mov rax, sob_void
  6984 000042EA [0000000000000000] 
  6985                                  
  6986 000042F2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6987 000042F7 E81ACA0000              	call malloc
  6988 000042FC 50                      	push rax
  6989 000042FD BF10000000              	mov rdi, 8 * 2	; new rib
  6990 00004302 E80FCA0000              	call malloc
  6991 00004307 50                      	push rax
  6992 00004308 BF10000000              	mov rdi, 8 * 2	; extended env
  6993 0000430D E804CA0000              	call malloc
  6994 00004312 488B7D10                	mov rdi, ENV
  6995 00004316 BE00000000              	mov rsi, 0
  6996 0000431B BA01000000              	mov rdx, 1
  6997                                  .L_lambda_opt_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  6998 00004320 4883FE01                	cmp rsi, 1
  6999 00004324 7410                    	je .L_lambda_opt_env_end_0006
  7000 00004326 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7001 0000432A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7002 0000432E 48FFC6                  	inc rsi
  7003 00004331 48FFC2                  	inc rdx
  7004 00004334 EBEA                    	jmp .L_lambda_opt_env_loop_0006
  7005                                  .L_lambda_opt_env_end_0006:
  7006 00004336 5B                      	pop rbx
  7007 00004337 BE00000000              	mov rsi, 0
  7008                                  .L_lambda_opt_params_loop_000b:	; copy params
  7009 0000433C 4883FE02                	cmp rsi, 2
  7010 00004340 740E                    	je .L_lambda_opt_params_end_000b
  7011 00004342 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7012 00004347 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7013 0000434B 48FFC6                  	inc rsi
  7014 0000434E EBEC                    	jmp .L_lambda_opt_params_loop_000b
  7015                                  .L_lambda_opt_params_end_000b:
  7016 00004350 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7017 00004353 4889C3                  	mov rbx, rax
  7018 00004356 58                      	pop rax
  7019 00004357 C60005                  	mov byte [rax], T_closure
  7020 0000435A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7021 0000435E 48C74009[6B430000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0006
  7022 00004366 E95B010000              	jmp .L_lambda_opt_end_0006
  7023                                  .L_lambda_opt_code_0006:
  7024 0000436B 4C8B542410              mov r10, qword [rsp+8*2]
  7025 00004370 4983FA01                cmp r10, 1
  7026 00004374 740B                    je .L_lambda_opt_arity_check_exact_0006
  7027 00004376 4983FA01                cmp r10, 1
  7028 0000437A 7F41                    jg .L_lambda_opt_arity_check_more_0006
  7029 0000437C E962C90000              jmp L_error_incorrect_arity_opt
  7030                                  .L_lambda_opt_arity_check_exact_0006:
  7031 00004381 4883EC08                sub rsp, 8
  7032 00004385 BA04000000              mov rdx, 3+1
  7033 0000438A 4889E3                  mov qword rbx, rsp
  7034                                  .L_lambda_opt_params_loop_000c:
  7035 0000438D 488B4B08                mov qword rcx, [rbx+8]
  7036 00004391 48890B                  mov qword [rbx], rcx
  7037 00004394 48FFCA                  dec rdx
  7038 00004397 4883C308                add rbx, 8
  7039 0000439B 4883FA00                cmp rdx, 0
  7040 0000439F 7402                    je .L_lambda_opt_params_end_000c
  7041 000043A1 EBEA                    jmp .L_lambda_opt_params_loop_000c
  7042                                  .L_lambda_opt_params_end_000c:
  7043 000043A3 49FFC2                  inc r10
  7044 000043A6 4C89542410              mov qword [rsp+8*2], r10
  7045 000043AB 4983C202                add r10, 2
  7046 000043AF 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  7047 000043B7 4C8B4D00                mov r9, [rbp]
  7048 000043BB EB52                    jmp .L_lambda_opt_stack_adjusted_0006
  7049                                  .L_lambda_opt_arity_check_more_0006:
  7050 000043BD 48B8-                   mov rax, sob_nil
  7050 000043BF [0100000000000000] 
  7051 000043C7 4C8B542410              mov r10, [rsp+2*8]
  7052 000043CC 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  7053 000043D1 4983EA01                sub r10, 1
  7054                                  .L_lambda_opt_stack_shrink_loop_0006:
  7055 000043D5 4983FA00                cmp r10, 0
  7056 000043D9 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0006
  7057 000043DB 4889C1                  mov rcx, rax
  7058 000043DE 498B10                  mov rdx, [r8]
  7059 000043E1 BF11000000              mov rdi, 17
  7060 000043E6 E82BC90000              call malloc
  7061 000043EB C60021                  mov byte [rax], T_pair
  7062 000043EE 48894809                mov SOB_PAIR_CDR(rax), rcx
  7063 000043F2 48895001                mov SOB_PAIR_CAR(rax), rdx
  7064 000043F6 4983E808                sub r8, 8
  7065 000043FA 49FFCA                  dec r10
  7066 000043FD EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0006
  7067                                  .L_lambda_opt_stack_shrink_loop_exit_0006:
  7068 000043FF 4889442420              mov [rsp+8*(2+2)], rax
  7069 00004404 41BA02000000            mov r10, 2
  7070 0000440A 4C89542410              mov [rsp+16], r10
  7071                                  .L_lambda_opt_stack_adjusted_0006:
  7072 0000440F 4C8B4D00                mov r9, [rbp]
  7073 00004413 C8000000                enter 0, 0
  7074 00004417 488B4528                mov rax, qword [rbp + 40]
  7075 0000441B 50                      	push rax
  7076 0000441C 6A01                    	push 1
  7077 0000441E 488B0425[00000000]      	mov rax, qword [free_var_0]
  7078 00004426 803805                  	cmp byte [rax], T_closure 
  7079 00004429 0F856FD80000                    jne L_code_ptr_error
  7080                                  
  7081 0000442F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7082                                  
  7083 00004433 53                              push rbx
  7084                                  
  7085 00004434 FF5009                          call SOB_CLOSURE_CODE(rax)
  7086                                  
  7087 00004437 483D[02000000]                  	cmp rax, sob_boolean_false
  7088 0000443D 740C                    	je .L_if_else_000a
  7089 0000443F 48B8-                   	mov rax, qword (L_constants + 1)
  7089 00004441 [0100000000000000] 
  7090 00004449 EB73                    	jmp .L_if_end_000a
  7091                                  	.L_if_else_000a:
  7092 0000444B 488B4528                	mov rax, qword [rbp + 40]
  7093 0000444F 50                      	push rax
  7094 00004450 488B4520                mov rax, qword [rbp + 32]
  7095 00004454 50                      	push rax
  7096 00004455 6A02                    	push 2
  7097 00004457 488B4510                mov rax, qword [rbp + 16]
  7098 0000445B 488B00                  mov rax, qword [rax + 0]
  7099 0000445E 488B4008                mov rax, qword [rax + 8]
  7100 00004462 488B00                  	mov rax, qword [rax]
  7101                                  .L_lambda_simple_arity_check_ok_0055:
  7102 00004465 803805                  	cmp byte [rax], T_closure
  7103                                  
  7104 00004468 0F8530D80000                    jne L_code_ptr_error                      ; rax <- proc
  7105                                  
  7106                                  
  7107 0000446E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7108                                  
  7109 00004472 53                              push rbx                                  ; env pushed
  7110                                  
  7111 00004473 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7112                                  
  7113                                  
  7114 00004476 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7115                                  
  7116                                          
  7117                                          
  7118 00004479 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7119                                  
  7120 0000447D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7121                                  
  7122                                  
  7123 00004482 4D89CA                          mov r10, r9
  7124 00004485 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  7125                                  
  7126                                                                                         
  7127 00004489 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7128 0000448C 4983C404                        add r12, 4
  7129                                  
  7130 00004490 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7131                                  .L_tc_recycle_frame_loop_002b:
  7132 00004496 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  7133                                  
  7134 0000449A 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7135                                  
  7136                                  
  7137                                  
  7138 0000449F 41BE00000000                    mov r14, 0                                ; clean box
  7139                                  
  7140                                  
  7141                                                                  
  7142 000044A5 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7143                                  
  7144 000044A9 4983C4FF                        add r12, -1 
  7145                                  
  7146 000044AD 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7147 000044B1 75E3                    	jne .L_tc_recycle_frame_loop_002b
  7148                                  .L_tc_recycle_frame_done_002b:
  7149 000044B3 5D                      	pop rbp                                  ; restore the old rbp
  7150                                  
  7151 000044B4 488B4D00                        mov rcx, qword [rbp]
  7152 000044B8 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7153                                            ; rbx <- code(proc)
  7154                                  
  7155 000044BC FFE3                            jmp rbx
  7156                                  	.L_if_end_000a:
  7157 000044BE C9                      leave
  7158 000044BF 4C8B4D00                mov r9, [rbp]
  7159 000044C3 C22800                  ret 8 * (3 + 2)
  7160                                  .L_lambda_opt_end_0006:	; new closure is in rax
  7161 000044C6 C9                      	leave
  7162 000044C7 C22000                  	ret 8 * (2 + 2)
  7163                                  .L_lambda_simple_end_0028:	; new closure is in rax
  7164 000044CA 803805                  	cmp byte [rax], T_closure 
  7165 000044CD 0F85CBD70000                    jne L_code_ptr_error
  7166                                  
  7167 000044D3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7168                                  
  7169 000044D7 53                              push rbx
  7170                                  
  7171 000044D8 FF5009                          call SOB_CLOSURE_CODE(rax)
  7172                                  
  7173 000044DB 48890425[D8020000]              	mov qword [free_var_91], rax
  7174 000044E3 48B8-                   	mov rax, sob_void
  7174 000044E5 [0000000000000000] 
  7175                                  
  7176 000044ED 4889C7                  	mov rdi, rax
  7177 000044F0 E832C80000              	call print_sexpr_if_not_void
  7178                                  
  7179 000044F5 48B8-                   	mov rax, qword (L_constants + 22)
  7179 000044F7 [1600000000000000] 
  7180 000044FF 50                      	push rax
  7181 00004500 6A01                    	push 1
  7182 00004502 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7183 00004507 E80AC80000              	call malloc
  7184 0000450C 50                      	push rax
  7185 0000450D BF00000000              	mov rdi, 8 * 0	; new rib
  7186 00004512 E8FFC70000              	call malloc
  7187 00004517 50                      	push rax
  7188 00004518 BF08000000              	mov rdi, 8 * 1	; extended env
  7189 0000451D E8F4C70000              	call malloc
  7190 00004522 488B7D10                	mov rdi, ENV
  7191 00004526 BE00000000              	mov rsi, 0
  7192 0000452B BA01000000              	mov rdx, 1
  7193                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  7194 00004530 4883FE00                	cmp rsi, 0
  7195 00004534 7410                    	je .L_lambda_simple_env_end_002b
  7196 00004536 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7197 0000453A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7198 0000453E 48FFC6                  	inc rsi
  7199 00004541 48FFC2                  	inc rdx
  7200 00004544 EBEA                    	jmp .L_lambda_simple_env_loop_002b
  7201                                  .L_lambda_simple_env_end_002b:
  7202 00004546 5B                      	pop rbx
  7203 00004547 BE00000000              	mov rsi, 0
  7204                                  .L_lambda_simple_params_loop_002b:	; copy params
  7205 0000454C 4883FE00                	cmp rsi, 0
  7206 00004550 740E                    	je .L_lambda_simple_params_end_002b
  7207 00004552 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7208 00004557 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7209 0000455B 48FFC6                  	inc rsi
  7210 0000455E EBEC                    	jmp .L_lambda_simple_params_loop_002b
  7211                                  .L_lambda_simple_params_end_002b:
  7212 00004560 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7213 00004563 4889C3                  	mov rbx, rax
  7214 00004566 58                      	pop rax
  7215 00004567 C60005                  	mov byte [rax], T_closure
  7216 0000456A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7217 0000456E 48C74009[7B450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  7218 00004576 E9ED020000              	jmp .L_lambda_simple_end_002b
  7219                                  .L_lambda_simple_code_002b:	; lambda-simple body
  7220 0000457B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7221 00004581 740B                    	je .L_lambda_simple_arity_check_ok_0056
  7222 00004583 FF742410                	push qword [rsp + 8 * 2]
  7223 00004587 6A01                    	push 1
  7224 00004589 E941C70000              	jmp L_error_incorrect_arity_simple
  7225                                  .L_lambda_simple_arity_check_ok_0056:
  7226 0000458E C8000000                	enter 0, 0
  7227 00004592 BF08000000              mov rdi, 8
  7228 00004597 E87AC70000              call malloc
  7229 0000459C 4889C3                  mov rbx, rax
  7230 0000459F 488B4520                mov rax, qword [rbp + 32]
  7231 000045A3 488903                  mov qword [rbx], rax
  7232 000045A6 4889D8                  mov rax, rbx
  7233 000045A9 48894520                mov qword [rbp + 32], rax
  7234 000045AD 48B8-                   mov rax, sob_void
  7234 000045AF [0000000000000000] 
  7235 000045B7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7236 000045BC E855C70000              	call malloc
  7237 000045C1 50                      	push rax
  7238 000045C2 BF08000000              	mov rdi, 8 * 1	; new rib
  7239 000045C7 E84AC70000              	call malloc
  7240 000045CC 50                      	push rax
  7241 000045CD BF10000000              	mov rdi, 8 * 2	; extended env
  7242 000045D2 E83FC70000              	call malloc
  7243 000045D7 488B7D10                	mov rdi, ENV
  7244 000045DB BE00000000              	mov rsi, 0
  7245 000045E0 BA01000000              	mov rdx, 1
  7246                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  7247 000045E5 4883FE01                	cmp rsi, 1
  7248 000045E9 7410                    	je .L_lambda_simple_env_end_002c
  7249 000045EB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7250 000045EF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7251 000045F3 48FFC6                  	inc rsi
  7252 000045F6 48FFC2                  	inc rdx
  7253 000045F9 EBEA                    	jmp .L_lambda_simple_env_loop_002c
  7254                                  .L_lambda_simple_env_end_002c:
  7255 000045FB 5B                      	pop rbx
  7256 000045FC BE00000000              	mov rsi, 0
  7257                                  .L_lambda_simple_params_loop_002c:	; copy params
  7258 00004601 4883FE01                	cmp rsi, 1
  7259 00004605 740E                    	je .L_lambda_simple_params_end_002c
  7260 00004607 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7261 0000460C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7262 00004610 48FFC6                  	inc rsi
  7263 00004613 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  7264                                  .L_lambda_simple_params_end_002c:
  7265 00004615 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7266 00004618 4889C3                  	mov rbx, rax
  7267 0000461B 58                      	pop rax
  7268 0000461C C60005                  	mov byte [rax], T_closure
  7269 0000461F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7270 00004623 48C74009[30460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  7271 0000462B E917010000              	jmp .L_lambda_simple_end_002c
  7272                                  .L_lambda_simple_code_002c:	; lambda-simple body
  7273 00004630 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7274 00004636 740B                    	je .L_lambda_simple_arity_check_ok_0057
  7275 00004638 FF742410                	push qword [rsp + 8 * 2]
  7276 0000463C 6A02                    	push 2
  7277 0000463E E98CC60000              	jmp L_error_incorrect_arity_simple
  7278                                  .L_lambda_simple_arity_check_ok_0057:
  7279 00004643 C8000000                	enter 0, 0
  7280 00004647 488B4520                mov rax, qword [rbp + 32]
  7281 0000464B 50                      	push rax
  7282 0000464C 6A01                    	push 1
  7283 0000464E 488B0425[00000000]      	mov rax, qword [free_var_0]
  7284 00004656 803805                  	cmp byte [rax], T_closure 
  7285 00004659 0F853FD60000                    jne L_code_ptr_error
  7286                                  
  7287 0000465F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7288                                  
  7289 00004663 53                              push rbx
  7290                                  
  7291 00004664 FF5009                          call SOB_CLOSURE_CODE(rax)
  7292                                  
  7293 00004667 483D[02000000]                  	cmp rax, sob_boolean_false
  7294 0000466D 7409                    	je .L_if_else_000b
  7295 0000466F 488B4528                mov rax, qword [rbp + 40]
  7296 00004673 E9CB000000              	jmp .L_if_end_000b
  7297                                  	.L_if_else_000b:
  7298 00004678 488B4528                	mov rax, qword [rbp + 40]
  7299 0000467C 50                      	push rax
  7300 0000467D 488B4520                mov rax, qword [rbp + 32]
  7301 00004681 50                      	push rax
  7302 00004682 6A01                    	push 1
  7303 00004684 488B0425[80000000]      	mov rax, qword [free_var_16]
  7304 0000468C 803805                  	cmp byte [rax], T_closure 
  7305 0000468F 0F8509D60000                    jne L_code_ptr_error
  7306                                  
  7307 00004695 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7308                                  
  7309 00004699 53                              push rbx
  7310                                  
  7311 0000469A FF5009                          call SOB_CLOSURE_CODE(rax)
  7312                                  
  7313 0000469D 50                              	push rax
  7314 0000469E 6A02                    	push 2
  7315 000046A0 488B0425[68000000]      	mov rax, qword [free_var_13]
  7316 000046A8 803805                  	cmp byte [rax], T_closure 
  7317 000046AB 0F85EDD50000                    jne L_code_ptr_error
  7318                                  
  7319 000046B1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7320                                  
  7321 000046B5 53                              push rbx
  7322                                  
  7323 000046B6 FF5009                          call SOB_CLOSURE_CODE(rax)
  7324                                  
  7325 000046B9 50                              	push rax
  7326 000046BA 488B4520                mov rax, qword [rbp + 32]
  7327 000046BE 50                      	push rax
  7328 000046BF 6A01                    	push 1
  7329 000046C1 488B0425[88000000]      	mov rax, qword [free_var_17]
  7330 000046C9 803805                  	cmp byte [rax], T_closure 
  7331 000046CC 0F85CCD50000                    jne L_code_ptr_error
  7332                                  
  7333 000046D2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7334                                  
  7335 000046D6 53                              push rbx
  7336                                  
  7337 000046D7 FF5009                          call SOB_CLOSURE_CODE(rax)
  7338                                  
  7339 000046DA 50                              	push rax
  7340 000046DB 6A02                    	push 2
  7341 000046DD 488B4510                mov rax, qword [rbp + 16]
  7342 000046E1 488B00                  mov rax, qword [rax + 0]
  7343 000046E4 488B00                  mov rax, qword [rax + 0]
  7344 000046E7 488B00                  	mov rax, qword [rax]
  7345                                  .L_lambda_simple_arity_check_ok_0058:
  7346 000046EA 803805                  	cmp byte [rax], T_closure
  7347                                  
  7348 000046ED 0F85ABD50000                    jne L_code_ptr_error                      ; rax <- proc
  7349                                  
  7350                                  
  7351 000046F3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7352                                  
  7353 000046F7 53                              push rbx                                  ; env pushed
  7354                                  
  7355 000046F8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7356                                  
  7357                                  
  7358 000046FB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7359                                  
  7360                                          
  7361                                          
  7362 000046FE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7363                                  
  7364 00004702 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7365                                  
  7366                                  
  7367 00004707 4D89CA                          mov r10, r9
  7368 0000470A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  7369                                  
  7370                                                                                         
  7371 0000470E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7372 00004711 4983C404                        add r12, 4
  7373                                  
  7374 00004715 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7375                                  .L_tc_recycle_frame_loop_002c:
  7376 0000471B 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  7377                                  
  7378 0000471F 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7379                                  
  7380                                  
  7381                                  
  7382 00004724 41BE00000000                    mov r14, 0                                ; clean box
  7383                                  
  7384                                  
  7385                                                                  
  7386 0000472A 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7387                                  
  7388 0000472E 4983C4FF                        add r12, -1 
  7389                                  
  7390 00004732 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7391 00004736 75E3                    	jne .L_tc_recycle_frame_loop_002c
  7392                                  .L_tc_recycle_frame_done_002c:
  7393 00004738 5D                      	pop rbp                                  ; restore the old rbp
  7394                                  
  7395 00004739 488B4D00                        mov rcx, qword [rbp]
  7396 0000473D 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7397                                            ; rbx <- code(proc)
  7398                                  
  7399 00004741 FFE3                            jmp rbx
  7400                                  	.L_if_end_000b:
  7401 00004743 C9                      	leave
  7402 00004744 C22000                  	ret 8 * (2 + 2)
  7403                                  .L_lambda_simple_end_002c:	; new closure is in rax
  7404 00004747 50                      push rax
  7405 00004748 488B4520                mov rax, qword [rbp + 32]
  7406 0000474C 8F00                    pop qword [rax]
  7407 0000474E 48B8-                   mov rax, sob_void
  7407 00004750 [0000000000000000] 
  7408                                  
  7409 00004758 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7410 0000475D E8B4C50000              	call malloc
  7411 00004762 50                      	push rax
  7412 00004763 BF08000000              	mov rdi, 8 * 1	; new rib
  7413 00004768 E8A9C50000              	call malloc
  7414 0000476D 50                      	push rax
  7415 0000476E BF10000000              	mov rdi, 8 * 2	; extended env
  7416 00004773 E89EC50000              	call malloc
  7417 00004778 488B7D10                	mov rdi, ENV
  7418 0000477C BE00000000              	mov rsi, 0
  7419 00004781 BA01000000              	mov rdx, 1
  7420                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  7421 00004786 4883FE01                	cmp rsi, 1
  7422 0000478A 7410                    	je .L_lambda_simple_env_end_002d
  7423 0000478C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7424 00004790 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7425 00004794 48FFC6                  	inc rsi
  7426 00004797 48FFC2                  	inc rdx
  7427 0000479A EBEA                    	jmp .L_lambda_simple_env_loop_002d
  7428                                  .L_lambda_simple_env_end_002d:
  7429 0000479C 5B                      	pop rbx
  7430 0000479D BE00000000              	mov rsi, 0
  7431                                  .L_lambda_simple_params_loop_002d:	; copy params
  7432 000047A2 4883FE01                	cmp rsi, 1
  7433 000047A6 740E                    	je .L_lambda_simple_params_end_002d
  7434 000047A8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7435 000047AD 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7436 000047B1 48FFC6                  	inc rsi
  7437 000047B4 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  7438                                  .L_lambda_simple_params_end_002d:
  7439 000047B6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7440 000047B9 4889C3                  	mov rbx, rax
  7441 000047BC 58                      	pop rax
  7442 000047BD C60005                  	mov byte [rax], T_closure
  7443 000047C0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7444 000047C4 48C74009[D1470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  7445 000047CC E993000000              	jmp .L_lambda_simple_end_002d
  7446                                  .L_lambda_simple_code_002d:	; lambda-simple body
  7447 000047D1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7448 000047D7 740B                    	je .L_lambda_simple_arity_check_ok_0059
  7449 000047D9 FF742410                	push qword [rsp + 8 * 2]
  7450 000047DD 6A01                    	push 1
  7451 000047DF E9EBC40000              	jmp L_error_incorrect_arity_simple
  7452                                  .L_lambda_simple_arity_check_ok_0059:
  7453 000047E4 C8000000                	enter 0, 0
  7454 000047E8 48B8-                   	mov rax, qword (L_constants + 1)
  7454 000047EA [0100000000000000] 
  7455 000047F2 50                      	push rax
  7456 000047F3 488B4520                mov rax, qword [rbp + 32]
  7457 000047F7 50                      	push rax
  7458 000047F8 6A02                    	push 2
  7459 000047FA 488B4510                mov rax, qword [rbp + 16]
  7460 000047FE 488B00                  mov rax, qword [rax + 0]
  7461 00004801 488B00                  mov rax, qword [rax + 0]
  7462 00004804 488B00                  	mov rax, qword [rax]
  7463                                  .L_lambda_simple_arity_check_ok_005a:
  7464 00004807 803805                  	cmp byte [rax], T_closure
  7465                                  
  7466 0000480A 0F858ED40000                    jne L_code_ptr_error                      ; rax <- proc
  7467                                  
  7468                                  
  7469 00004810 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7470                                  
  7471 00004814 53                              push rbx                                  ; env pushed
  7472                                  
  7473 00004815 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7474                                  
  7475                                  
  7476 00004818 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7477                                  
  7478                                          
  7479                                          
  7480 0000481B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7481                                  
  7482 0000481F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7483                                  
  7484                                  
  7485 00004824 4D89CA                          mov r10, r9
  7486 00004827 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  7487                                  
  7488                                                                                         
  7489 0000482B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7490 0000482E 4983C404                        add r12, 4
  7491                                  
  7492 00004832 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7493                                  .L_tc_recycle_frame_loop_002d:
  7494 00004838 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  7495                                  
  7496 0000483C 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7497                                  
  7498                                  
  7499                                  
  7500 00004841 41BE00000000                    mov r14, 0                                ; clean box
  7501                                  
  7502                                  
  7503                                                                  
  7504 00004847 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7505                                  
  7506 0000484B 4983C4FF                        add r12, -1 
  7507                                  
  7508 0000484F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7509 00004853 75E3                    	jne .L_tc_recycle_frame_loop_002d
  7510                                  .L_tc_recycle_frame_done_002d:
  7511 00004855 5D                      	pop rbp                                  ; restore the old rbp
  7512                                  
  7513 00004856 488B4D00                        mov rcx, qword [rbp]
  7514 0000485A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7515                                            ; rbx <- code(proc)
  7516                                  
  7517 0000485E FFE3                            jmp rbx
  7518 00004860 C9                      	leave
  7519 00004861 C21800                  	ret 8 * (2 + 1)
  7520                                  .L_lambda_simple_end_002d:	; new closure is in rax
  7521 00004864 C9                      	leave
  7522 00004865 C21800                  	ret 8 * (2 + 1)
  7523                                  .L_lambda_simple_end_002b:	; new closure is in rax
  7524 00004868 803805                  	cmp byte [rax], T_closure 
  7525 0000486B 0F852DD40000                    jne L_code_ptr_error
  7526                                  
  7527 00004871 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7528                                  
  7529 00004875 53                              push rbx
  7530                                  
  7531 00004876 FF5009                          call SOB_CLOSURE_CODE(rax)
  7532                                  
  7533 00004879 48890425[E8020000]              	mov qword [free_var_93], rax
  7534 00004881 48B8-                   	mov rax, sob_void
  7534 00004883 [0000000000000000] 
  7535                                  
  7536 0000488B 4889C7                  	mov rdi, rax
  7537 0000488E E894C40000              	call print_sexpr_if_not_void
  7538                                  
  7539 00004893 48B8-                   	mov rax, qword (L_constants + 22)
  7539 00004895 [1600000000000000] 
  7540 0000489D 50                      	push rax
  7541 0000489E 48B8-                   	mov rax, qword (L_constants + 22)
  7541 000048A0 [1600000000000000] 
  7542 000048A8 50                      	push rax
  7543 000048A9 6A02                    	push 2
  7544 000048AB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7545 000048B0 E861C40000              	call malloc
  7546 000048B5 50                      	push rax
  7547 000048B6 BF00000000              	mov rdi, 8 * 0	; new rib
  7548 000048BB E856C40000              	call malloc
  7549 000048C0 50                      	push rax
  7550 000048C1 BF08000000              	mov rdi, 8 * 1	; extended env
  7551 000048C6 E84BC40000              	call malloc
  7552 000048CB 488B7D10                	mov rdi, ENV
  7553 000048CF BE00000000              	mov rsi, 0
  7554 000048D4 BA01000000              	mov rdx, 1
  7555                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  7556 000048D9 4883FE00                	cmp rsi, 0
  7557 000048DD 7410                    	je .L_lambda_simple_env_end_002e
  7558 000048DF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7559 000048E3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7560 000048E7 48FFC6                  	inc rsi
  7561 000048EA 48FFC2                  	inc rdx
  7562 000048ED EBEA                    	jmp .L_lambda_simple_env_loop_002e
  7563                                  .L_lambda_simple_env_end_002e:
  7564 000048EF 5B                      	pop rbx
  7565 000048F0 BE00000000              	mov rsi, 0
  7566                                  .L_lambda_simple_params_loop_002e:	; copy params
  7567 000048F5 4883FE00                	cmp rsi, 0
  7568 000048F9 740E                    	je .L_lambda_simple_params_end_002e
  7569 000048FB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7570 00004900 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7571 00004904 48FFC6                  	inc rsi
  7572 00004907 EBEC                    	jmp .L_lambda_simple_params_loop_002e
  7573                                  .L_lambda_simple_params_end_002e:
  7574 00004909 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7575 0000490C 4889C3                  	mov rbx, rax
  7576 0000490F 58                      	pop rax
  7577 00004910 C60005                  	mov byte [rax], T_closure
  7578 00004913 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7579 00004917 48C74009[24490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  7580 0000491F E9BC050000              	jmp .L_lambda_simple_end_002e
  7581                                  .L_lambda_simple_code_002e:	; lambda-simple body
  7582 00004924 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7583 0000492A 740B                    	je .L_lambda_simple_arity_check_ok_005b
  7584 0000492C FF742410                	push qword [rsp + 8 * 2]
  7585 00004930 6A02                    	push 2
  7586 00004932 E998C30000              	jmp L_error_incorrect_arity_simple
  7587                                  .L_lambda_simple_arity_check_ok_005b:
  7588 00004937 C8000000                	enter 0, 0
  7589 0000493B BF08000000              mov rdi, 8
  7590 00004940 E8D1C30000              call malloc
  7591 00004945 4889C3                  mov rbx, rax
  7592 00004948 488B4520                mov rax, qword [rbp + 32]
  7593 0000494C 488903                  mov qword [rbx], rax
  7594 0000494F 4889D8                  mov rax, rbx
  7595 00004952 48894520                mov qword [rbp + 32], rax
  7596 00004956 48B8-                   mov rax, sob_void
  7596 00004958 [0000000000000000] 
  7597 00004960 BF08000000              mov rdi, 8
  7598 00004965 E8ACC30000              call malloc
  7599 0000496A 4889C3                  mov rbx, rax
  7600 0000496D 488B4528                mov rax, qword [rbp + 40]
  7601 00004971 488903                  mov qword [rbx], rax
  7602 00004974 4889D8                  mov rax, rbx
  7603 00004977 48894528                mov qword [rbp + 40], rax
  7604 0000497B 48B8-                   mov rax, sob_void
  7604 0000497D [0000000000000000] 
  7605 00004985 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7606 0000498A E887C30000              	call malloc
  7607 0000498F 50                      	push rax
  7608 00004990 BF10000000              	mov rdi, 8 * 2	; new rib
  7609 00004995 E87CC30000              	call malloc
  7610 0000499A 50                      	push rax
  7611 0000499B BF10000000              	mov rdi, 8 * 2	; extended env
  7612 000049A0 E871C30000              	call malloc
  7613 000049A5 488B7D10                	mov rdi, ENV
  7614 000049A9 BE00000000              	mov rsi, 0
  7615 000049AE BA01000000              	mov rdx, 1
  7616                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  7617 000049B3 4883FE01                	cmp rsi, 1
  7618 000049B7 7410                    	je .L_lambda_simple_env_end_002f
  7619 000049B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7620 000049BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7621 000049C1 48FFC6                  	inc rsi
  7622 000049C4 48FFC2                  	inc rdx
  7623 000049C7 EBEA                    	jmp .L_lambda_simple_env_loop_002f
  7624                                  .L_lambda_simple_env_end_002f:
  7625 000049C9 5B                      	pop rbx
  7626 000049CA BE00000000              	mov rsi, 0
  7627                                  .L_lambda_simple_params_loop_002f:	; copy params
  7628 000049CF 4883FE02                	cmp rsi, 2
  7629 000049D3 740E                    	je .L_lambda_simple_params_end_002f
  7630 000049D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7631 000049DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7632 000049DE 48FFC6                  	inc rsi
  7633 000049E1 EBEC                    	jmp .L_lambda_simple_params_loop_002f
  7634                                  .L_lambda_simple_params_end_002f:
  7635 000049E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7636 000049E6 4889C3                  	mov rbx, rax
  7637 000049E9 58                      	pop rax
  7638 000049EA C60005                  	mov byte [rax], T_closure
  7639 000049ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7640 000049F1 48C74009[FE490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  7641 000049F9 E91D010000              	jmp .L_lambda_simple_end_002f
  7642                                  .L_lambda_simple_code_002f:	; lambda-simple body
  7643 000049FE 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7644 00004A04 740B                    	je .L_lambda_simple_arity_check_ok_005c
  7645 00004A06 FF742410                	push qword [rsp + 8 * 2]
  7646 00004A0A 6A02                    	push 2
  7647 00004A0C E9BEC20000              	jmp L_error_incorrect_arity_simple
  7648                                  .L_lambda_simple_arity_check_ok_005c:
  7649 00004A11 C8000000                	enter 0, 0
  7650 00004A15 488B4528                mov rax, qword [rbp + 40]
  7651 00004A19 50                      	push rax
  7652 00004A1A 6A01                    	push 1
  7653 00004A1C 488B0425[00000000]      	mov rax, qword [free_var_0]
  7654 00004A24 803805                  	cmp byte [rax], T_closure 
  7655 00004A27 0F8571D20000                    jne L_code_ptr_error
  7656                                  
  7657 00004A2D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7658                                  
  7659 00004A31 53                              push rbx
  7660                                  
  7661 00004A32 FF5009                          call SOB_CLOSURE_CODE(rax)
  7662                                  
  7663 00004A35 483D[02000000]                  	cmp rax, sob_boolean_false
  7664 00004A3B 7409                    	je .L_if_else_000c
  7665 00004A3D 488B4520                mov rax, qword [rbp + 32]
  7666 00004A41 E9D1000000              	jmp .L_if_end_000c
  7667                                  	.L_if_else_000c:
  7668 00004A46 488B4528                	mov rax, qword [rbp + 40]
  7669 00004A4A 50                      	push rax
  7670 00004A4B 6A01                    	push 1
  7671 00004A4D 488B0425[88000000]      	mov rax, qword [free_var_17]
  7672 00004A55 803805                  	cmp byte [rax], T_closure 
  7673 00004A58 0F8540D20000                    jne L_code_ptr_error
  7674                                  
  7675 00004A5E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7676                                  
  7677 00004A62 53                              push rbx
  7678                                  
  7679 00004A63 FF5009                          call SOB_CLOSURE_CODE(rax)
  7680                                  
  7681 00004A66 50                              	push rax
  7682 00004A67 488B4528                mov rax, qword [rbp + 40]
  7683 00004A6B 50                      	push rax
  7684 00004A6C 6A01                    	push 1
  7685 00004A6E 488B0425[80000000]      	mov rax, qword [free_var_16]
  7686 00004A76 803805                  	cmp byte [rax], T_closure 
  7687 00004A79 0F851FD20000                    jne L_code_ptr_error
  7688                                  
  7689 00004A7F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7690                                  
  7691 00004A83 53                              push rbx
  7692                                  
  7693 00004A84 FF5009                          call SOB_CLOSURE_CODE(rax)
  7694                                  
  7695 00004A87 50                              	push rax
  7696 00004A88 6A02                    	push 2
  7697 00004A8A 488B4510                mov rax, qword [rbp + 16]
  7698 00004A8E 488B00                  mov rax, qword [rax + 0]
  7699 00004A91 488B00                  mov rax, qword [rax + 0]
  7700 00004A94 488B00                  	mov rax, qword [rax]
  7701 00004A97 803805                  	cmp byte [rax], T_closure 
  7702 00004A9A 0F85FED10000                    jne L_code_ptr_error
  7703                                  
  7704 00004AA0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7705                                  
  7706 00004AA4 53                              push rbx
  7707                                  
  7708 00004AA5 FF5009                          call SOB_CLOSURE_CODE(rax)
  7709                                  
  7710 00004AA8 50                              	push rax
  7711 00004AA9 488B4520                mov rax, qword [rbp + 32]
  7712 00004AAD 50                      	push rax
  7713 00004AAE 6A02                    	push 2
  7714 00004AB0 488B4510                mov rax, qword [rbp + 16]
  7715 00004AB4 488B00                  mov rax, qword [rax + 0]
  7716 00004AB7 488B4008                mov rax, qword [rax + 8]
  7717 00004ABB 488B00                  	mov rax, qword [rax]
  7718                                  .L_lambda_simple_arity_check_ok_005d:
  7719 00004ABE 803805                  	cmp byte [rax], T_closure
  7720                                  
  7721 00004AC1 0F85D7D10000                    jne L_code_ptr_error                      ; rax <- proc
  7722                                  
  7723                                  
  7724 00004AC7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7725                                  
  7726 00004ACB 53                              push rbx                                  ; env pushed
  7727                                  
  7728 00004ACC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7729                                  
  7730                                  
  7731 00004ACF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7732                                  
  7733                                          
  7734                                          
  7735 00004AD2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7736                                  
  7737 00004AD6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7738                                  
  7739                                  
  7740 00004ADB 4D89CA                          mov r10, r9
  7741 00004ADE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  7742                                  
  7743                                                                                         
  7744 00004AE2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7745 00004AE5 4983C404                        add r12, 4
  7746                                  
  7747 00004AE9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7748                                  .L_tc_recycle_frame_loop_002e:
  7749 00004AEF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  7750                                  
  7751 00004AF3 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7752                                  
  7753                                  
  7754                                  
  7755 00004AF8 41BE00000000                    mov r14, 0                                ; clean box
  7756                                  
  7757                                  
  7758                                                                  
  7759 00004AFE 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7760                                  
  7761 00004B02 4983C4FF                        add r12, -1 
  7762                                  
  7763 00004B06 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7764 00004B0A 75E3                    	jne .L_tc_recycle_frame_loop_002e
  7765                                  .L_tc_recycle_frame_done_002e:
  7766 00004B0C 5D                      	pop rbp                                  ; restore the old rbp
  7767                                  
  7768 00004B0D 488B4D00                        mov rcx, qword [rbp]
  7769 00004B11 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7770                                            ; rbx <- code(proc)
  7771                                  
  7772 00004B15 FFE3                            jmp rbx
  7773                                  	.L_if_end_000c:
  7774 00004B17 C9                      	leave
  7775 00004B18 C22000                  	ret 8 * (2 + 2)
  7776                                  .L_lambda_simple_end_002f:	; new closure is in rax
  7777 00004B1B 50                      push rax
  7778 00004B1C 488B4520                mov rax, qword [rbp + 32]
  7779 00004B20 8F00                    pop qword [rax]
  7780 00004B22 48B8-                   mov rax, sob_void
  7780 00004B24 [0000000000000000] 
  7781                                  
  7782 00004B2C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7783 00004B31 E8E0C10000              	call malloc
  7784 00004B36 50                      	push rax
  7785 00004B37 BF10000000              	mov rdi, 8 * 2	; new rib
  7786 00004B3C E8D5C10000              	call malloc
  7787 00004B41 50                      	push rax
  7788 00004B42 BF10000000              	mov rdi, 8 * 2	; extended env
  7789 00004B47 E8CAC10000              	call malloc
  7790 00004B4C 488B7D10                	mov rdi, ENV
  7791 00004B50 BE00000000              	mov rsi, 0
  7792 00004B55 BA01000000              	mov rdx, 1
  7793                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  7794 00004B5A 4883FE01                	cmp rsi, 1
  7795 00004B5E 7410                    	je .L_lambda_simple_env_end_0030
  7796 00004B60 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7797 00004B64 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7798 00004B68 48FFC6                  	inc rsi
  7799 00004B6B 48FFC2                  	inc rdx
  7800 00004B6E EBEA                    	jmp .L_lambda_simple_env_loop_0030
  7801                                  .L_lambda_simple_env_end_0030:
  7802 00004B70 5B                      	pop rbx
  7803 00004B71 BE00000000              	mov rsi, 0
  7804                                  .L_lambda_simple_params_loop_0030:	; copy params
  7805 00004B76 4883FE02                	cmp rsi, 2
  7806 00004B7A 740E                    	je .L_lambda_simple_params_end_0030
  7807 00004B7C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7808 00004B81 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7809 00004B85 48FFC6                  	inc rsi
  7810 00004B88 EBEC                    	jmp .L_lambda_simple_params_loop_0030
  7811                                  .L_lambda_simple_params_end_0030:
  7812 00004B8A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7813 00004B8D 4889C3                  	mov rbx, rax
  7814 00004B90 58                      	pop rax
  7815 00004B91 C60005                  	mov byte [rax], T_closure
  7816 00004B94 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7817 00004B98 48C74009[A54B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  7818 00004BA0 E918010000              	jmp .L_lambda_simple_end_0030
  7819                                  .L_lambda_simple_code_0030:	; lambda-simple body
  7820 00004BA5 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7821 00004BAB 740B                    	je .L_lambda_simple_arity_check_ok_005e
  7822 00004BAD FF742410                	push qword [rsp + 8 * 2]
  7823 00004BB1 6A02                    	push 2
  7824 00004BB3 E917C10000              	jmp L_error_incorrect_arity_simple
  7825                                  .L_lambda_simple_arity_check_ok_005e:
  7826 00004BB8 C8000000                	enter 0, 0
  7827 00004BBC 488B4520                mov rax, qword [rbp + 32]
  7828 00004BC0 50                      	push rax
  7829 00004BC1 6A01                    	push 1
  7830 00004BC3 488B0425[00000000]      	mov rax, qword [free_var_0]
  7831 00004BCB 803805                  	cmp byte [rax], T_closure 
  7832 00004BCE 0F85CAD00000                    jne L_code_ptr_error
  7833                                  
  7834 00004BD4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7835                                  
  7836 00004BD8 53                              push rbx
  7837                                  
  7838 00004BD9 FF5009                          call SOB_CLOSURE_CODE(rax)
  7839                                  
  7840 00004BDC 483D[02000000]                  	cmp rax, sob_boolean_false
  7841 00004BE2 7409                    	je .L_if_else_000d
  7842 00004BE4 488B4528                mov rax, qword [rbp + 40]
  7843 00004BE8 E9CC000000              	jmp .L_if_end_000d
  7844                                  	.L_if_else_000d:
  7845 00004BED 488B4528                	mov rax, qword [rbp + 40]
  7846 00004BF1 50                      	push rax
  7847 00004BF2 488B4520                mov rax, qword [rbp + 32]
  7848 00004BF6 50                      	push rax
  7849 00004BF7 6A01                    	push 1
  7850 00004BF9 488B0425[88000000]      	mov rax, qword [free_var_17]
  7851 00004C01 803805                  	cmp byte [rax], T_closure 
  7852 00004C04 0F8594D00000                    jne L_code_ptr_error
  7853                                  
  7854 00004C0A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7855                                  
  7856 00004C0E 53                              push rbx
  7857                                  
  7858 00004C0F FF5009                          call SOB_CLOSURE_CODE(rax)
  7859                                  
  7860 00004C12 50                              	push rax
  7861 00004C13 6A02                    	push 2
  7862 00004C15 488B4510                mov rax, qword [rbp + 16]
  7863 00004C19 488B00                  mov rax, qword [rax + 0]
  7864 00004C1C 488B4008                mov rax, qword [rax + 8]
  7865 00004C20 488B00                  	mov rax, qword [rax]
  7866 00004C23 803805                  	cmp byte [rax], T_closure 
  7867 00004C26 0F8572D00000                    jne L_code_ptr_error
  7868                                  
  7869 00004C2C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7870                                  
  7871 00004C30 53                              push rbx
  7872                                  
  7873 00004C31 FF5009                          call SOB_CLOSURE_CODE(rax)
  7874                                  
  7875 00004C34 50                              	push rax
  7876 00004C35 488B4520                mov rax, qword [rbp + 32]
  7877 00004C39 50                      	push rax
  7878 00004C3A 6A01                    	push 1
  7879 00004C3C 488B0425[80000000]      	mov rax, qword [free_var_16]
  7880 00004C44 803805                  	cmp byte [rax], T_closure 
  7881 00004C47 0F8551D00000                    jne L_code_ptr_error
  7882                                  
  7883 00004C4D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  7884                                  
  7885 00004C51 53                              push rbx
  7886                                  
  7887 00004C52 FF5009                          call SOB_CLOSURE_CODE(rax)
  7888                                  
  7889 00004C55 50                              	push rax
  7890 00004C56 6A02                    	push 2
  7891 00004C58 488B0425[68000000]      	mov rax, qword [free_var_13]
  7892                                  .L_lambda_simple_arity_check_ok_005f:
  7893 00004C60 803805                  	cmp byte [rax], T_closure
  7894                                  
  7895 00004C63 0F8535D00000                    jne L_code_ptr_error                      ; rax <- proc
  7896                                  
  7897                                  
  7898 00004C69 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  7899                                  
  7900 00004C6D 53                              push rbx                                  ; env pushed
  7901                                  
  7902 00004C6E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  7903                                  
  7904                                  
  7905 00004C71 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  7906                                  
  7907                                          
  7908                                          
  7909 00004C74 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  7910                                  
  7911 00004C78 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  7912                                  
  7913                                  
  7914 00004C7D 4D89CA                          mov r10, r9
  7915 00004C80 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  7916                                  
  7917                                                                                         
  7918 00004C84 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  7919 00004C87 4983C404                        add r12, 4
  7920                                  
  7921 00004C8B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  7922                                  .L_tc_recycle_frame_loop_002f:
  7923 00004C91 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  7924                                  
  7925 00004C95 4E8974E500                      mov [rbp + (r12 * 8)], r14
  7926                                  
  7927                                  
  7928                                  
  7929 00004C9A 41BE00000000                    mov r14, 0                                ; clean box
  7930                                  
  7931                                  
  7932                                                                  
  7933 00004CA0 4983C2FF                        add r10, -1                               ; args_copied_counter--
  7934                                  
  7935 00004CA4 4983C4FF                        add r12, -1 
  7936                                  
  7937 00004CA8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  7938 00004CAC 75E3                    	jne .L_tc_recycle_frame_loop_002f
  7939                                  .L_tc_recycle_frame_done_002f:
  7940 00004CAE 5D                      	pop rbp                                  ; restore the old rbp
  7941                                  
  7942 00004CAF 488B4D00                        mov rcx, qword [rbp]
  7943 00004CB3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  7944                                            ; rbx <- code(proc)
  7945                                  
  7946 00004CB7 FFE3                            jmp rbx
  7947                                  	.L_if_end_000d:
  7948 00004CB9 C9                      	leave
  7949 00004CBA C22000                  	ret 8 * (2 + 2)
  7950                                  .L_lambda_simple_end_0030:	; new closure is in rax
  7951 00004CBD 50                      push rax
  7952 00004CBE 488B4528                mov rax, qword [rbp + 40]
  7953 00004CC2 8F00                    pop qword [rax]
  7954 00004CC4 48B8-                   mov rax, sob_void
  7954 00004CC6 [0000000000000000] 
  7955                                  
  7956 00004CCE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7957 00004CD3 E83EC00000              	call malloc
  7958 00004CD8 50                      	push rax
  7959 00004CD9 BF10000000              	mov rdi, 8 * 2	; new rib
  7960 00004CDE E833C00000              	call malloc
  7961 00004CE3 50                      	push rax
  7962 00004CE4 BF10000000              	mov rdi, 8 * 2	; extended env
  7963 00004CE9 E828C00000              	call malloc
  7964 00004CEE 488B7D10                	mov rdi, ENV
  7965 00004CF2 BE00000000              	mov rsi, 0
  7966 00004CF7 BA01000000              	mov rdx, 1
  7967                                  .L_lambda_opt_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  7968 00004CFC 4883FE01                	cmp rsi, 1
  7969 00004D00 7410                    	je .L_lambda_opt_env_end_0007
  7970 00004D02 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7971 00004D06 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7972 00004D0A 48FFC6                  	inc rsi
  7973 00004D0D 48FFC2                  	inc rdx
  7974 00004D10 EBEA                    	jmp .L_lambda_opt_env_loop_0007
  7975                                  .L_lambda_opt_env_end_0007:
  7976 00004D12 5B                      	pop rbx
  7977 00004D13 BE00000000              	mov rsi, 0
  7978                                  .L_lambda_opt_params_loop_000d:	; copy params
  7979 00004D18 4883FE02                	cmp rsi, 2
  7980 00004D1C 740E                    	je .L_lambda_opt_params_end_000d
  7981 00004D1E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7982 00004D23 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7983 00004D27 48FFC6                  	inc rsi
  7984 00004D2A EBEC                    	jmp .L_lambda_opt_params_loop_000d
  7985                                  .L_lambda_opt_params_end_000d:
  7986 00004D2C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7987 00004D2F 4889C3                  	mov rbx, rax
  7988 00004D32 58                      	pop rax
  7989 00004D33 C60005                  	mov byte [rax], T_closure
  7990 00004D36 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7991 00004D3A 48C74009[474D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0007
  7992 00004D42 E995010000              	jmp .L_lambda_opt_end_0007
  7993                                  .L_lambda_opt_code_0007:
  7994 00004D47 4C8B542410              mov r10, qword [rsp+8*2]
  7995 00004D4C 4983FA00                cmp r10, 0
  7996 00004D50 740B                    je .L_lambda_opt_arity_check_exact_0007
  7997 00004D52 4983FA00                cmp r10, 0
  7998 00004D56 7F41                    jg .L_lambda_opt_arity_check_more_0007
  7999 00004D58 E986BF0000              jmp L_error_incorrect_arity_opt
  8000                                  .L_lambda_opt_arity_check_exact_0007:
  8001 00004D5D 4883EC08                sub rsp, 8
  8002 00004D61 BA03000000              mov rdx, 3+0
  8003 00004D66 4889E3                  mov qword rbx, rsp
  8004                                  .L_lambda_opt_params_loop_000e:
  8005 00004D69 488B4B08                mov qword rcx, [rbx+8]
  8006 00004D6D 48890B                  mov qword [rbx], rcx
  8007 00004D70 48FFCA                  dec rdx
  8008 00004D73 4883C308                add rbx, 8
  8009 00004D77 4883FA00                cmp rdx, 0
  8010 00004D7B 7402                    je .L_lambda_opt_params_end_000e
  8011 00004D7D EBEA                    jmp .L_lambda_opt_params_loop_000e
  8012                                  .L_lambda_opt_params_end_000e:
  8013 00004D7F 49FFC2                  inc r10
  8014 00004D82 4C89542410              mov qword [rsp+8*2], r10
  8015 00004D87 4983C202                add r10, 2
  8016 00004D8B 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  8017 00004D93 4C8B4D00                mov r9, [rbp]
  8018 00004D97 EB52                    jmp .L_lambda_opt_stack_adjusted_0007
  8019                                  .L_lambda_opt_arity_check_more_0007:
  8020 00004D99 48B8-                   mov rax, sob_nil
  8020 00004D9B [0100000000000000] 
  8021 00004DA3 4C8B542410              mov r10, [rsp+2*8]
  8022 00004DA8 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  8023 00004DAD 4983EA00                sub r10, 0
  8024                                  .L_lambda_opt_stack_shrink_loop_0007:
  8025 00004DB1 4983FA00                cmp r10, 0
  8026 00004DB5 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0007
  8027 00004DB7 4889C1                  mov rcx, rax
  8028 00004DBA 498B10                  mov rdx, [r8]
  8029 00004DBD BF11000000              mov rdi, 17
  8030 00004DC2 E84FBF0000              call malloc
  8031 00004DC7 C60021                  mov byte [rax], T_pair
  8032 00004DCA 48894809                mov SOB_PAIR_CDR(rax), rcx
  8033 00004DCE 48895001                mov SOB_PAIR_CAR(rax), rdx
  8034 00004DD2 4983E808                sub r8, 8
  8035 00004DD6 49FFCA                  dec r10
  8036 00004DD9 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0007
  8037                                  .L_lambda_opt_stack_shrink_loop_exit_0007:
  8038 00004DDB 4889442418              mov [rsp+8*(2+1)], rax
  8039 00004DE0 41BA01000000            mov r10, 1
  8040 00004DE6 4C89542410              mov [rsp+16], r10
  8041                                  .L_lambda_opt_stack_adjusted_0007:
  8042 00004DEB 4C8B4D00                mov r9, [rbp]
  8043 00004DEF C8000000                enter 0, 0
  8044 00004DF3 488B4520                mov rax, qword [rbp + 32]
  8045 00004DF7 50                      	push rax
  8046 00004DF8 6A01                    	push 1
  8047 00004DFA 488B0425[00000000]      	mov rax, qword [free_var_0]
  8048 00004E02 803805                  	cmp byte [rax], T_closure 
  8049 00004E05 0F8593CE0000                    jne L_code_ptr_error
  8050                                  
  8051 00004E0B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8052                                  
  8053 00004E0F 53                              push rbx
  8054                                  
  8055 00004E10 FF5009                          call SOB_CLOSURE_CODE(rax)
  8056                                  
  8057 00004E13 483D[02000000]                  	cmp rax, sob_boolean_false
  8058 00004E19 740F                    	je .L_if_else_000e
  8059 00004E1B 48B8-                   	mov rax, qword (L_constants + 1)
  8059 00004E1D [0100000000000000] 
  8060 00004E25 E9AA000000              	jmp .L_if_end_000e
  8061                                  	.L_if_else_000e:
  8062 00004E2A 488B4520                	mov rax, qword [rbp + 32]
  8063 00004E2E 50                      	push rax
  8064 00004E2F 6A01                    	push 1
  8065 00004E31 488B0425[88000000]      	mov rax, qword [free_var_17]
  8066 00004E39 803805                  	cmp byte [rax], T_closure 
  8067 00004E3C 0F855CCE0000                    jne L_code_ptr_error
  8068                                  
  8069 00004E42 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8070                                  
  8071 00004E46 53                              push rbx
  8072                                  
  8073 00004E47 FF5009                          call SOB_CLOSURE_CODE(rax)
  8074                                  
  8075 00004E4A 50                              	push rax
  8076 00004E4B 488B4520                mov rax, qword [rbp + 32]
  8077 00004E4F 50                      	push rax
  8078 00004E50 6A01                    	push 1
  8079 00004E52 488B0425[80000000]      	mov rax, qword [free_var_16]
  8080 00004E5A 803805                  	cmp byte [rax], T_closure 
  8081 00004E5D 0F853BCE0000                    jne L_code_ptr_error
  8082                                  
  8083 00004E63 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8084                                  
  8085 00004E67 53                              push rbx
  8086                                  
  8087 00004E68 FF5009                          call SOB_CLOSURE_CODE(rax)
  8088                                  
  8089 00004E6B 50                              	push rax
  8090 00004E6C 6A02                    	push 2
  8091 00004E6E 488B4510                mov rax, qword [rbp + 16]
  8092 00004E72 488B00                  mov rax, qword [rax + 0]
  8093 00004E75 488B00                  mov rax, qword [rax + 0]
  8094 00004E78 488B00                  	mov rax, qword [rax]
  8095                                  .L_lambda_simple_arity_check_ok_0060:
  8096 00004E7B 803805                  	cmp byte [rax], T_closure
  8097                                  
  8098 00004E7E 0F851ACE0000                    jne L_code_ptr_error                      ; rax <- proc
  8099                                  
  8100                                  
  8101 00004E84 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8102                                  
  8103 00004E88 53                              push rbx                                  ; env pushed
  8104                                  
  8105 00004E89 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8106                                  
  8107                                  
  8108 00004E8C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8109                                  
  8110                                          
  8111                                          
  8112 00004E8F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8113                                  
  8114 00004E93 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8115                                  
  8116                                  
  8117 00004E98 4D89CA                          mov r10, r9
  8118 00004E9B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  8119                                  
  8120                                                                                         
  8121 00004E9F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8122 00004EA2 4983C404                        add r12, 4
  8123                                  
  8124 00004EA6 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8125                                  .L_tc_recycle_frame_loop_0030:
  8126 00004EAC 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  8127                                  
  8128 00004EB0 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8129                                  
  8130                                  
  8131                                  
  8132 00004EB5 41BE00000000                    mov r14, 0                                ; clean box
  8133                                  
  8134                                  
  8135                                                                  
  8136 00004EBB 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8137                                  
  8138 00004EBF 4983C4FF                        add r12, -1 
  8139                                  
  8140 00004EC3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8141 00004EC7 75E3                    	jne .L_tc_recycle_frame_loop_0030
  8142                                  .L_tc_recycle_frame_done_0030:
  8143 00004EC9 5D                      	pop rbp                                  ; restore the old rbp
  8144                                  
  8145 00004ECA 488B4D00                        mov rcx, qword [rbp]
  8146 00004ECE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8147                                            ; rbx <- code(proc)
  8148                                  
  8149 00004ED2 FFE3                            jmp rbx
  8150                                  	.L_if_end_000e:
  8151 00004ED4 C9                      leave
  8152 00004ED5 4C8B4D00                mov r9, [rbp]
  8153 00004ED9 C22000                  ret 8 * (3 + 1)
  8154                                  .L_lambda_opt_end_0007:	; new closure is in rax
  8155 00004EDC C9                      	leave
  8156 00004EDD C22000                  	ret 8 * (2 + 2)
  8157                                  .L_lambda_simple_end_002e:	; new closure is in rax
  8158 00004EE0 803805                  	cmp byte [rax], T_closure 
  8159 00004EE3 0F85B5CD0000                    jne L_code_ptr_error
  8160                                  
  8161 00004EE9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8162                                  
  8163 00004EED 53                              push rbx
  8164                                  
  8165 00004EEE FF5009                          call SOB_CLOSURE_CODE(rax)
  8166                                  
  8167 00004EF1 48890425[F0020000]              	mov qword [free_var_94], rax
  8168 00004EF9 48B8-                   	mov rax, sob_void
  8168 00004EFB [0000000000000000] 
  8169                                  
  8170 00004F03 4889C7                  	mov rdi, rax
  8171 00004F06 E81CBE0000              	call print_sexpr_if_not_void
  8172                                  
  8173 00004F0B 48B8-                   	mov rax, qword (L_constants + 22)
  8173 00004F0D [1600000000000000] 
  8174 00004F15 50                      	push rax
  8175 00004F16 6A01                    	push 1
  8176 00004F18 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8177 00004F1D E8F4BD0000              	call malloc
  8178 00004F22 50                      	push rax
  8179 00004F23 BF00000000              	mov rdi, 8 * 0	; new rib
  8180 00004F28 E8E9BD0000              	call malloc
  8181 00004F2D 50                      	push rax
  8182 00004F2E BF08000000              	mov rdi, 8 * 1	; extended env
  8183 00004F33 E8DEBD0000              	call malloc
  8184 00004F38 488B7D10                	mov rdi, ENV
  8185 00004F3C BE00000000              	mov rsi, 0
  8186 00004F41 BA01000000              	mov rdx, 1
  8187                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  8188 00004F46 4883FE00                	cmp rsi, 0
  8189 00004F4A 7410                    	je .L_lambda_simple_env_end_0031
  8190 00004F4C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8191 00004F50 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8192 00004F54 48FFC6                  	inc rsi
  8193 00004F57 48FFC2                  	inc rdx
  8194 00004F5A EBEA                    	jmp .L_lambda_simple_env_loop_0031
  8195                                  .L_lambda_simple_env_end_0031:
  8196 00004F5C 5B                      	pop rbx
  8197 00004F5D BE00000000              	mov rsi, 0
  8198                                  .L_lambda_simple_params_loop_0031:	; copy params
  8199 00004F62 4883FE00                	cmp rsi, 0
  8200 00004F66 740E                    	je .L_lambda_simple_params_end_0031
  8201 00004F68 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8202 00004F6D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8203 00004F71 48FFC6                  	inc rsi
  8204 00004F74 EBEC                    	jmp .L_lambda_simple_params_loop_0031
  8205                                  .L_lambda_simple_params_end_0031:
  8206 00004F76 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8207 00004F79 4889C3                  	mov rbx, rax
  8208 00004F7C 58                      	pop rax
  8209 00004F7D C60005                  	mov byte [rax], T_closure
  8210 00004F80 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8211 00004F84 48C74009[914F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  8212 00004F8C E9AA030000              	jmp .L_lambda_simple_end_0031
  8213                                  .L_lambda_simple_code_0031:	; lambda-simple body
  8214 00004F91 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8215 00004F97 740B                    	je .L_lambda_simple_arity_check_ok_0061
  8216 00004F99 FF742410                	push qword [rsp + 8 * 2]
  8217 00004F9D 6A01                    	push 1
  8218 00004F9F E92BBD0000              	jmp L_error_incorrect_arity_simple
  8219                                  .L_lambda_simple_arity_check_ok_0061:
  8220 00004FA4 C8000000                	enter 0, 0
  8221 00004FA8 BF08000000              mov rdi, 8
  8222 00004FAD E864BD0000              call malloc
  8223 00004FB2 4889C3                  mov rbx, rax
  8224 00004FB5 488B4520                mov rax, qword [rbp + 32]
  8225 00004FB9 488903                  mov qword [rbx], rax
  8226 00004FBC 4889D8                  mov rax, rbx
  8227 00004FBF 48894520                mov qword [rbp + 32], rax
  8228 00004FC3 48B8-                   mov rax, sob_void
  8228 00004FC5 [0000000000000000] 
  8229 00004FCD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8230 00004FD2 E83FBD0000              	call malloc
  8231 00004FD7 50                      	push rax
  8232 00004FD8 BF08000000              	mov rdi, 8 * 1	; new rib
  8233 00004FDD E834BD0000              	call malloc
  8234 00004FE2 50                      	push rax
  8235 00004FE3 BF10000000              	mov rdi, 8 * 2	; extended env
  8236 00004FE8 E829BD0000              	call malloc
  8237 00004FED 488B7D10                	mov rdi, ENV
  8238 00004FF1 BE00000000              	mov rsi, 0
  8239 00004FF6 BA01000000              	mov rdx, 1
  8240                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  8241 00004FFB 4883FE01                	cmp rsi, 1
  8242 00004FFF 7410                    	je .L_lambda_simple_env_end_0032
  8243 00005001 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8244 00005005 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8245 00005009 48FFC6                  	inc rsi
  8246 0000500C 48FFC2                  	inc rdx
  8247 0000500F EBEA                    	jmp .L_lambda_simple_env_loop_0032
  8248                                  .L_lambda_simple_env_end_0032:
  8249 00005011 5B                      	pop rbx
  8250 00005012 BE00000000              	mov rsi, 0
  8251                                  .L_lambda_simple_params_loop_0032:	; copy params
  8252 00005017 4883FE01                	cmp rsi, 1
  8253 0000501B 740E                    	je .L_lambda_simple_params_end_0032
  8254 0000501D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8255 00005022 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8256 00005026 48FFC6                  	inc rsi
  8257 00005029 EBEC                    	jmp .L_lambda_simple_params_loop_0032
  8258                                  .L_lambda_simple_params_end_0032:
  8259 0000502B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8260 0000502E 4889C3                  	mov rbx, rax
  8261 00005031 58                      	pop rax
  8262 00005032 C60005                  	mov byte [rax], T_closure
  8263 00005035 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8264 00005039 48C74009[46500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  8265 00005041 E93C010000              	jmp .L_lambda_simple_end_0032
  8266                                  .L_lambda_simple_code_0032:	; lambda-simple body
  8267 00005046 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8268 0000504C 740B                    	je .L_lambda_simple_arity_check_ok_0062
  8269 0000504E FF742410                	push qword [rsp + 8 * 2]
  8270 00005052 6A03                    	push 3
  8271 00005054 E976BC0000              	jmp L_error_incorrect_arity_simple
  8272                                  .L_lambda_simple_arity_check_ok_0062:
  8273 00005059 C8000000                	enter 0, 0
  8274 0000505D 488B4530                mov rax, qword [rbp + 48]
  8275 00005061 50                      	push rax
  8276 00005062 488B0425[00000000]      	mov rax, qword [free_var_0]
  8277 0000506A 50                      	push rax
  8278 0000506B 6A02                    	push 2
  8279 0000506D 488B0425[D0020000]      	mov rax, qword [free_var_90]
  8280 00005075 803805                  	cmp byte [rax], T_closure 
  8281 00005078 0F8520CC0000                    jne L_code_ptr_error
  8282                                  
  8283 0000507E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8284                                  
  8285 00005082 53                              push rbx
  8286                                  
  8287 00005083 FF5009                          call SOB_CLOSURE_CODE(rax)
  8288                                  
  8289 00005086 483D[02000000]                  	cmp rax, sob_boolean_false
  8290 0000508C 7409                    	je .L_if_else_000f
  8291 0000508E 488B4528                mov rax, qword [rbp + 40]
  8292 00005092 E9E7000000              	jmp .L_if_end_000f
  8293                                  	.L_if_else_000f:
  8294 00005097 488B4530                	mov rax, qword [rbp + 48]
  8295 0000509B 50                      	push rax
  8296 0000509C 488B0425[88000000]      	mov rax, qword [free_var_17]
  8297 000050A4 50                      	push rax
  8298 000050A5 6A02                    	push 2
  8299 000050A7 488B0425[D8020000]      	mov rax, qword [free_var_91]
  8300 000050AF 803805                  	cmp byte [rax], T_closure 
  8301 000050B2 0F85E6CB0000                    jne L_code_ptr_error
  8302                                  
  8303 000050B8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8304                                  
  8305 000050BC 53                              push rbx
  8306                                  
  8307 000050BD FF5009                          call SOB_CLOSURE_CODE(rax)
  8308                                  
  8309 000050C0 50                              	push rax
  8310 000050C1 488B4530                mov rax, qword [rbp + 48]
  8311 000050C5 50                      	push rax
  8312 000050C6 488B0425[80000000]      	mov rax, qword [free_var_16]
  8313 000050CE 50                      	push rax
  8314 000050CF 6A02                    	push 2
  8315 000050D1 488B0425[D8020000]      	mov rax, qword [free_var_91]
  8316 000050D9 803805                  	cmp byte [rax], T_closure 
  8317 000050DC 0F85BCCB0000                    jne L_code_ptr_error
  8318                                  
  8319 000050E2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8320                                  
  8321 000050E6 53                              push rbx
  8322                                  
  8323 000050E7 FF5009                          call SOB_CLOSURE_CODE(rax)
  8324                                  
  8325 000050EA 50                              	push rax
  8326 000050EB 488B4528                mov rax, qword [rbp + 40]
  8327 000050EF 50                      	push rax
  8328 000050F0 488B4520                mov rax, qword [rbp + 32]
  8329 000050F4 50                      	push rax
  8330 000050F5 6A03                    	push 3
  8331 000050F7 488B0425[C8020000]      	mov rax, qword [free_var_89]
  8332 000050FF 803805                  	cmp byte [rax], T_closure 
  8333 00005102 0F8596CB0000                    jne L_code_ptr_error
  8334                                  
  8335 00005108 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8336                                  
  8337 0000510C 53                              push rbx
  8338                                  
  8339 0000510D FF5009                          call SOB_CLOSURE_CODE(rax)
  8340                                  
  8341 00005110 50                              	push rax
  8342 00005111 488B4520                mov rax, qword [rbp + 32]
  8343 00005115 50                      	push rax
  8344 00005116 6A03                    	push 3
  8345 00005118 488B4510                mov rax, qword [rbp + 16]
  8346 0000511C 488B00                  mov rax, qword [rax + 0]
  8347 0000511F 488B00                  mov rax, qword [rax + 0]
  8348 00005122 488B00                  	mov rax, qword [rax]
  8349                                  .L_lambda_simple_arity_check_ok_0063:
  8350 00005125 803805                  	cmp byte [rax], T_closure
  8351                                  
  8352 00005128 0F8570CB0000                    jne L_code_ptr_error                      ; rax <- proc
  8353                                  
  8354                                  
  8355 0000512E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8356                                  
  8357 00005132 53                              push rbx                                  ; env pushed
  8358                                  
  8359 00005133 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8360                                  
  8361                                  
  8362 00005136 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8363                                  
  8364                                          
  8365                                          
  8366 00005139 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8367                                  
  8368 0000513D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8369                                  
  8370                                  
  8371 00005142 4D89CA                          mov r10, r9
  8372 00005145 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  8373                                  
  8374                                                                                         
  8375 00005149 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8376 0000514C 4983C404                        add r12, 4
  8377                                  
  8378 00005150 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8379                                  .L_tc_recycle_frame_loop_0031:
  8380 00005156 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  8381                                  
  8382 0000515A 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8383                                  
  8384                                  
  8385                                  
  8386 0000515F 41BE00000000                    mov r14, 0                                ; clean box
  8387                                  
  8388                                  
  8389                                                                  
  8390 00005165 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8391                                  
  8392 00005169 4983C4FF                        add r12, -1 
  8393                                  
  8394 0000516D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8395 00005171 75E3                    	jne .L_tc_recycle_frame_loop_0031
  8396                                  .L_tc_recycle_frame_done_0031:
  8397 00005173 5D                      	pop rbp                                  ; restore the old rbp
  8398                                  
  8399 00005174 488B4D00                        mov rcx, qword [rbp]
  8400 00005178 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8401                                            ; rbx <- code(proc)
  8402                                  
  8403 0000517C FFE3                            jmp rbx
  8404                                  	.L_if_end_000f:
  8405 0000517E C9                      	leave
  8406 0000517F C22800                  	ret 8 * (2 + 3)
  8407                                  .L_lambda_simple_end_0032:	; new closure is in rax
  8408 00005182 50                      push rax
  8409 00005183 488B4520                mov rax, qword [rbp + 32]
  8410 00005187 8F00                    pop qword [rax]
  8411 00005189 48B8-                   mov rax, sob_void
  8411 0000518B [0000000000000000] 
  8412                                  
  8413 00005193 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8414 00005198 E879BB0000              	call malloc
  8415 0000519D 50                      	push rax
  8416 0000519E BF08000000              	mov rdi, 8 * 1	; new rib
  8417 000051A3 E86EBB0000              	call malloc
  8418 000051A8 50                      	push rax
  8419 000051A9 BF10000000              	mov rdi, 8 * 2	; extended env
  8420 000051AE E863BB0000              	call malloc
  8421 000051B3 488B7D10                	mov rdi, ENV
  8422 000051B7 BE00000000              	mov rsi, 0
  8423 000051BC BA01000000              	mov rdx, 1
  8424                                  .L_lambda_opt_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  8425 000051C1 4883FE01                	cmp rsi, 1
  8426 000051C5 7410                    	je .L_lambda_opt_env_end_0008
  8427 000051C7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8428 000051CB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8429 000051CF 48FFC6                  	inc rsi
  8430 000051D2 48FFC2                  	inc rdx
  8431 000051D5 EBEA                    	jmp .L_lambda_opt_env_loop_0008
  8432                                  .L_lambda_opt_env_end_0008:
  8433 000051D7 5B                      	pop rbx
  8434 000051D8 BE00000000              	mov rsi, 0
  8435                                  .L_lambda_opt_params_loop_000f:	; copy params
  8436 000051DD 4883FE01                	cmp rsi, 1
  8437 000051E1 740E                    	je .L_lambda_opt_params_end_000f
  8438 000051E3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8439 000051E8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8440 000051EC 48FFC6                  	inc rsi
  8441 000051EF EBEC                    	jmp .L_lambda_opt_params_loop_000f
  8442                                  .L_lambda_opt_params_end_000f:
  8443 000051F1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8444 000051F4 4889C3                  	mov rbx, rax
  8445 000051F7 58                      	pop rax
  8446 000051F8 C60005                  	mov byte [rax], T_closure
  8447 000051FB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8448 000051FF 48C74009[0C520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0008
  8449 00005207 E92B010000              	jmp .L_lambda_opt_end_0008
  8450                                  .L_lambda_opt_code_0008:
  8451 0000520C 4C8B542410              mov r10, qword [rsp+8*2]
  8452 00005211 4983FA02                cmp r10, 2
  8453 00005215 740B                    je .L_lambda_opt_arity_check_exact_0008
  8454 00005217 4983FA02                cmp r10, 2
  8455 0000521B 7F41                    jg .L_lambda_opt_arity_check_more_0008
  8456 0000521D E9C1BA0000              jmp L_error_incorrect_arity_opt
  8457                                  .L_lambda_opt_arity_check_exact_0008:
  8458 00005222 4883EC08                sub rsp, 8
  8459 00005226 BA05000000              mov rdx, 3+2
  8460 0000522B 4889E3                  mov qword rbx, rsp
  8461                                  .L_lambda_opt_params_loop_0010:
  8462 0000522E 488B4B08                mov qword rcx, [rbx+8]
  8463 00005232 48890B                  mov qword [rbx], rcx
  8464 00005235 48FFCA                  dec rdx
  8465 00005238 4883C308                add rbx, 8
  8466 0000523C 4883FA00                cmp rdx, 0
  8467 00005240 7402                    je .L_lambda_opt_params_end_0010
  8468 00005242 EBEA                    jmp .L_lambda_opt_params_loop_0010
  8469                                  .L_lambda_opt_params_end_0010:
  8470 00005244 49FFC2                  inc r10
  8471 00005247 4C89542410              mov qword [rsp+8*2], r10
  8472 0000524C 4983C202                add r10, 2
  8473 00005250 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  8474 00005258 4C8B4D00                mov r9, [rbp]
  8475 0000525C EB52                    jmp .L_lambda_opt_stack_adjusted_0008
  8476                                  .L_lambda_opt_arity_check_more_0008:
  8477 0000525E 48B8-                   mov rax, sob_nil
  8477 00005260 [0100000000000000] 
  8478 00005268 4C8B542410              mov r10, [rsp+2*8]
  8479 0000526D 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  8480 00005272 4983EA02                sub r10, 2
  8481                                  .L_lambda_opt_stack_shrink_loop_0008:
  8482 00005276 4983FA00                cmp r10, 0
  8483 0000527A 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0008
  8484 0000527C 4889C1                  mov rcx, rax
  8485 0000527F 498B10                  mov rdx, [r8]
  8486 00005282 BF11000000              mov rdi, 17
  8487 00005287 E88ABA0000              call malloc
  8488 0000528C C60021                  mov byte [rax], T_pair
  8489 0000528F 48894809                mov SOB_PAIR_CDR(rax), rcx
  8490 00005293 48895001                mov SOB_PAIR_CAR(rax), rdx
  8491 00005297 4983E808                sub r8, 8
  8492 0000529B 49FFCA                  dec r10
  8493 0000529E EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0008
  8494                                  .L_lambda_opt_stack_shrink_loop_exit_0008:
  8495 000052A0 4889442428              mov [rsp+8*(2+3)], rax
  8496 000052A5 41BA03000000            mov r10, 3
  8497 000052AB 4C89542410              mov [rsp+16], r10
  8498                                  .L_lambda_opt_stack_adjusted_0008:
  8499 000052B0 4C8B4D00                mov r9, [rbp]
  8500 000052B4 C8000000                enter 0, 0
  8501 000052B8 488B4530                mov rax, qword [rbp + 48]
  8502 000052BC 50                      	push rax
  8503 000052BD 488B4528                mov rax, qword [rbp + 40]
  8504 000052C1 50                      	push rax
  8505 000052C2 488B4520                mov rax, qword [rbp + 32]
  8506 000052C6 50                      	push rax
  8507 000052C7 6A03                    	push 3
  8508 000052C9 488B4510                mov rax, qword [rbp + 16]
  8509 000052CD 488B00                  mov rax, qword [rax + 0]
  8510 000052D0 488B00                  mov rax, qword [rax + 0]
  8511 000052D3 488B00                  	mov rax, qword [rax]
  8512                                  .L_lambda_simple_arity_check_ok_0064:
  8513 000052D6 803805                  	cmp byte [rax], T_closure
  8514                                  
  8515 000052D9 0F85BFC90000                    jne L_code_ptr_error                      ; rax <- proc
  8516                                  
  8517                                  
  8518 000052DF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8519                                  
  8520 000052E3 53                              push rbx                                  ; env pushed
  8521                                  
  8522 000052E4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8523                                  
  8524                                  
  8525 000052E7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8526                                  
  8527                                          
  8528                                          
  8529 000052EA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8530                                  
  8531 000052EE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8532                                  
  8533                                  
  8534 000052F3 4D89CA                          mov r10, r9
  8535 000052F6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  8536                                  
  8537                                                                                         
  8538 000052FA 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8539 000052FD 4983C404                        add r12, 4
  8540                                  
  8541 00005301 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8542                                  .L_tc_recycle_frame_loop_0032:
  8543 00005307 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  8544                                  
  8545 0000530B 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8546                                  
  8547                                  
  8548                                  
  8549 00005310 41BE00000000                    mov r14, 0                                ; clean box
  8550                                  
  8551                                  
  8552                                                                  
  8553 00005316 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8554                                  
  8555 0000531A 4983C4FF                        add r12, -1 
  8556                                  
  8557 0000531E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8558 00005322 75E3                    	jne .L_tc_recycle_frame_loop_0032
  8559                                  .L_tc_recycle_frame_done_0032:
  8560 00005324 5D                      	pop rbp                                  ; restore the old rbp
  8561                                  
  8562 00005325 488B4D00                        mov rcx, qword [rbp]
  8563 00005329 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8564                                            ; rbx <- code(proc)
  8565                                  
  8566 0000532D FFE3                            jmp rbx
  8567 0000532F C9                      leave
  8568 00005330 4C8B4D00                mov r9, [rbp]
  8569 00005334 C23000                  ret 8 * (3 + 3)
  8570                                  .L_lambda_opt_end_0008:	; new closure is in rax
  8571 00005337 C9                      	leave
  8572 00005338 C21800                  	ret 8 * (2 + 1)
  8573                                  .L_lambda_simple_end_0031:	; new closure is in rax
  8574 0000533B 803805                  	cmp byte [rax], T_closure 
  8575 0000533E 0F855AC90000                    jne L_code_ptr_error
  8576                                  
  8577 00005344 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8578                                  
  8579 00005348 53                              push rbx
  8580                                  
  8581 00005349 FF5009                          call SOB_CLOSURE_CODE(rax)
  8582                                  
  8583 0000534C 48890425[F8020000]              	mov qword [free_var_95], rax
  8584 00005354 48B8-                   	mov rax, sob_void
  8584 00005356 [0000000000000000] 
  8585                                  
  8586 0000535E 4889C7                  	mov rdi, rax
  8587 00005361 E8C1B90000              	call print_sexpr_if_not_void
  8588                                  
  8589 00005366 48B8-                   	mov rax, qword (L_constants + 22)
  8589 00005368 [1600000000000000] 
  8590 00005370 50                      	push rax
  8591 00005371 6A01                    	push 1
  8592 00005373 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8593 00005378 E899B90000              	call malloc
  8594 0000537D 50                      	push rax
  8595 0000537E BF00000000              	mov rdi, 8 * 0	; new rib
  8596 00005383 E88EB90000              	call malloc
  8597 00005388 50                      	push rax
  8598 00005389 BF08000000              	mov rdi, 8 * 1	; extended env
  8599 0000538E E883B90000              	call malloc
  8600 00005393 488B7D10                	mov rdi, ENV
  8601 00005397 BE00000000              	mov rsi, 0
  8602 0000539C BA01000000              	mov rdx, 1
  8603                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  8604 000053A1 4883FE00                	cmp rsi, 0
  8605 000053A5 7410                    	je .L_lambda_simple_env_end_0033
  8606 000053A7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8607 000053AB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8608 000053AF 48FFC6                  	inc rsi
  8609 000053B2 48FFC2                  	inc rdx
  8610 000053B5 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  8611                                  .L_lambda_simple_env_end_0033:
  8612 000053B7 5B                      	pop rbx
  8613 000053B8 BE00000000              	mov rsi, 0
  8614                                  .L_lambda_simple_params_loop_0033:	; copy params
  8615 000053BD 4883FE00                	cmp rsi, 0
  8616 000053C1 740E                    	je .L_lambda_simple_params_end_0033
  8617 000053C3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8618 000053C8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8619 000053CC 48FFC6                  	inc rsi
  8620 000053CF EBEC                    	jmp .L_lambda_simple_params_loop_0033
  8621                                  .L_lambda_simple_params_end_0033:
  8622 000053D1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8623 000053D4 4889C3                  	mov rbx, rax
  8624 000053D7 58                      	pop rax
  8625 000053D8 C60005                  	mov byte [rax], T_closure
  8626 000053DB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8627 000053DF 48C74009[EC530000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  8628 000053E7 E9ED030000              	jmp .L_lambda_simple_end_0033
  8629                                  .L_lambda_simple_code_0033:	; lambda-simple body
  8630 000053EC 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8631 000053F2 740B                    	je .L_lambda_simple_arity_check_ok_0065
  8632 000053F4 FF742410                	push qword [rsp + 8 * 2]
  8633 000053F8 6A01                    	push 1
  8634 000053FA E9D0B80000              	jmp L_error_incorrect_arity_simple
  8635                                  .L_lambda_simple_arity_check_ok_0065:
  8636 000053FF C8000000                	enter 0, 0
  8637 00005403 BF08000000              mov rdi, 8
  8638 00005408 E809B90000              call malloc
  8639 0000540D 4889C3                  mov rbx, rax
  8640 00005410 488B4520                mov rax, qword [rbp + 32]
  8641 00005414 488903                  mov qword [rbx], rax
  8642 00005417 4889D8                  mov rax, rbx
  8643 0000541A 48894520                mov qword [rbp + 32], rax
  8644 0000541E 48B8-                   mov rax, sob_void
  8644 00005420 [0000000000000000] 
  8645 00005428 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8646 0000542D E8E4B80000              	call malloc
  8647 00005432 50                      	push rax
  8648 00005433 BF08000000              	mov rdi, 8 * 1	; new rib
  8649 00005438 E8D9B80000              	call malloc
  8650 0000543D 50                      	push rax
  8651 0000543E BF10000000              	mov rdi, 8 * 2	; extended env
  8652 00005443 E8CEB80000              	call malloc
  8653 00005448 488B7D10                	mov rdi, ENV
  8654 0000544C BE00000000              	mov rsi, 0
  8655 00005451 BA01000000              	mov rdx, 1
  8656                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  8657 00005456 4883FE01                	cmp rsi, 1
  8658 0000545A 7410                    	je .L_lambda_simple_env_end_0034
  8659 0000545C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8660 00005460 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8661 00005464 48FFC6                  	inc rsi
  8662 00005467 48FFC2                  	inc rdx
  8663 0000546A EBEA                    	jmp .L_lambda_simple_env_loop_0034
  8664                                  .L_lambda_simple_env_end_0034:
  8665 0000546C 5B                      	pop rbx
  8666 0000546D BE00000000              	mov rsi, 0
  8667                                  .L_lambda_simple_params_loop_0034:	; copy params
  8668 00005472 4883FE01                	cmp rsi, 1
  8669 00005476 740E                    	je .L_lambda_simple_params_end_0034
  8670 00005478 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8671 0000547D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8672 00005481 48FFC6                  	inc rsi
  8673 00005484 EBEC                    	jmp .L_lambda_simple_params_loop_0034
  8674                                  .L_lambda_simple_params_end_0034:
  8675 00005486 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8676 00005489 4889C3                  	mov rbx, rax
  8677 0000548C 58                      	pop rax
  8678 0000548D C60005                  	mov byte [rax], T_closure
  8679 00005490 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8680 00005494 48C74009[A1540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  8681 0000549C E97F010000              	jmp .L_lambda_simple_end_0034
  8682                                  .L_lambda_simple_code_0034:	; lambda-simple body
  8683 000054A1 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8684 000054A7 740B                    	je .L_lambda_simple_arity_check_ok_0066
  8685 000054A9 FF742410                	push qword [rsp + 8 * 2]
  8686 000054AD 6A03                    	push 3
  8687 000054AF E91BB80000              	jmp L_error_incorrect_arity_simple
  8688                                  .L_lambda_simple_arity_check_ok_0066:
  8689 000054B4 C8000000                	enter 0, 0
  8690 000054B8 488B4530                mov rax, qword [rbp + 48]
  8691 000054BC 50                      	push rax
  8692 000054BD 488B0425[00000000]      	mov rax, qword [free_var_0]
  8693 000054C5 50                      	push rax
  8694 000054C6 6A02                    	push 2
  8695 000054C8 488B0425[D0020000]      	mov rax, qword [free_var_90]
  8696 000054D0 803805                  	cmp byte [rax], T_closure 
  8697 000054D3 0F85C5C70000                    jne L_code_ptr_error
  8698                                  
  8699 000054D9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8700                                  
  8701 000054DD 53                              push rbx
  8702                                  
  8703 000054DE FF5009                          call SOB_CLOSURE_CODE(rax)
  8704                                  
  8705 000054E1 483D[02000000]                  	cmp rax, sob_boolean_false
  8706 000054E7 7409                    	je .L_if_else_0010
  8707 000054E9 488B4528                mov rax, qword [rbp + 40]
  8708 000054ED E92A010000              	jmp .L_if_end_0010
  8709                                  	.L_if_else_0010:
  8710 000054F2 48B8-                   		mov rax, qword (L_constants + 1)
  8710 000054F4 [0100000000000000] 
  8711 000054FC 50                      	push rax
  8712 000054FD 488B4530                mov rax, qword [rbp + 48]
  8713 00005501 50                      	push rax
  8714 00005502 488B0425[88000000]      	mov rax, qword [free_var_17]
  8715 0000550A 50                      	push rax
  8716 0000550B 6A02                    	push 2
  8717 0000550D 488B0425[D8020000]      	mov rax, qword [free_var_91]
  8718 00005515 803805                  	cmp byte [rax], T_closure 
  8719 00005518 0F8580C70000                    jne L_code_ptr_error
  8720                                  
  8721 0000551E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8722                                  
  8723 00005522 53                              push rbx
  8724                                  
  8725 00005523 FF5009                          call SOB_CLOSURE_CODE(rax)
  8726                                  
  8727 00005526 50                              	push rax
  8728 00005527 488B4528                mov rax, qword [rbp + 40]
  8729 0000552B 50                      	push rax
  8730 0000552C 488B4520                mov rax, qword [rbp + 32]
  8731 00005530 50                      	push rax
  8732 00005531 6A03                    	push 3
  8733 00005533 488B4510                mov rax, qword [rbp + 16]
  8734 00005537 488B00                  mov rax, qword [rax + 0]
  8735 0000553A 488B00                  mov rax, qword [rax + 0]
  8736 0000553D 488B00                  	mov rax, qword [rax]
  8737 00005540 803805                  	cmp byte [rax], T_closure 
  8738 00005543 0F8555C70000                    jne L_code_ptr_error
  8739                                  
  8740 00005549 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8741                                  
  8742 0000554D 53                              push rbx
  8743                                  
  8744 0000554E FF5009                          call SOB_CLOSURE_CODE(rax)
  8745                                  
  8746 00005551 50                              	push rax
  8747 00005552 6A02                    	push 2
  8748 00005554 488B0425[68000000]      	mov rax, qword [free_var_13]
  8749 0000555C 803805                  	cmp byte [rax], T_closure 
  8750 0000555F 0F8539C70000                    jne L_code_ptr_error
  8751                                  
  8752 00005565 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8753                                  
  8754 00005569 53                              push rbx
  8755                                  
  8756 0000556A FF5009                          call SOB_CLOSURE_CODE(rax)
  8757                                  
  8758 0000556D 50                              	push rax
  8759 0000556E 488B4530                mov rax, qword [rbp + 48]
  8760 00005572 50                      	push rax
  8761 00005573 488B0425[80000000]      	mov rax, qword [free_var_16]
  8762 0000557B 50                      	push rax
  8763 0000557C 6A02                    	push 2
  8764 0000557E 488B0425[D8020000]      	mov rax, qword [free_var_91]
  8765 00005586 803805                  	cmp byte [rax], T_closure 
  8766 00005589 0F850FC70000                    jne L_code_ptr_error
  8767                                  
  8768 0000558F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8769                                  
  8770 00005593 53                              push rbx
  8771                                  
  8772 00005594 FF5009                          call SOB_CLOSURE_CODE(rax)
  8773                                  
  8774 00005597 50                              	push rax
  8775 00005598 6A02                    	push 2
  8776 0000559A 488B0425[F0020000]      	mov rax, qword [free_var_94]
  8777 000055A2 803805                  	cmp byte [rax], T_closure 
  8778 000055A5 0F85F3C60000                    jne L_code_ptr_error
  8779                                  
  8780 000055AB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  8781                                  
  8782 000055AF 53                              push rbx
  8783                                  
  8784 000055B0 FF5009                          call SOB_CLOSURE_CODE(rax)
  8785                                  
  8786 000055B3 50                              	push rax
  8787 000055B4 488B4520                mov rax, qword [rbp + 32]
  8788 000055B8 50                      	push rax
  8789 000055B9 6A02                    	push 2
  8790 000055BB 488B0425[C8020000]      	mov rax, qword [free_var_89]
  8791                                  .L_lambda_simple_arity_check_ok_0067:
  8792 000055C3 803805                  	cmp byte [rax], T_closure
  8793                                  
  8794 000055C6 0F85D2C60000                    jne L_code_ptr_error                      ; rax <- proc
  8795                                  
  8796                                  
  8797 000055CC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8798                                  
  8799 000055D0 53                              push rbx                                  ; env pushed
  8800                                  
  8801 000055D1 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8802                                  
  8803                                  
  8804 000055D4 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8805                                  
  8806                                          
  8807                                          
  8808 000055D7 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8809                                  
  8810 000055DB 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8811                                  
  8812                                  
  8813 000055E0 4D89CA                          mov r10, r9
  8814 000055E3 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  8815                                  
  8816                                                                                         
  8817 000055E7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8818 000055EA 4983C404                        add r12, 4
  8819                                  
  8820 000055EE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8821                                  .L_tc_recycle_frame_loop_0033:
  8822 000055F4 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  8823                                  
  8824 000055F8 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8825                                  
  8826                                  
  8827                                  
  8828 000055FD 41BE00000000                    mov r14, 0                                ; clean box
  8829                                  
  8830                                  
  8831                                                                  
  8832 00005603 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8833                                  
  8834 00005607 4983C4FF                        add r12, -1 
  8835                                  
  8836 0000560B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  8837 0000560F 75E3                    	jne .L_tc_recycle_frame_loop_0033
  8838                                  .L_tc_recycle_frame_done_0033:
  8839 00005611 5D                      	pop rbp                                  ; restore the old rbp
  8840                                  
  8841 00005612 488B4D00                        mov rcx, qword [rbp]
  8842 00005616 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  8843                                            ; rbx <- code(proc)
  8844                                  
  8845 0000561A FFE3                            jmp rbx
  8846                                  	.L_if_end_0010:
  8847 0000561C C9                      	leave
  8848 0000561D C22800                  	ret 8 * (2 + 3)
  8849                                  .L_lambda_simple_end_0034:	; new closure is in rax
  8850 00005620 50                      push rax
  8851 00005621 488B4520                mov rax, qword [rbp + 32]
  8852 00005625 8F00                    pop qword [rax]
  8853 00005627 48B8-                   mov rax, sob_void
  8853 00005629 [0000000000000000] 
  8854                                  
  8855 00005631 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8856 00005636 E8DBB60000              	call malloc
  8857 0000563B 50                      	push rax
  8858 0000563C BF08000000              	mov rdi, 8 * 1	; new rib
  8859 00005641 E8D0B60000              	call malloc
  8860 00005646 50                      	push rax
  8861 00005647 BF10000000              	mov rdi, 8 * 2	; extended env
  8862 0000564C E8C5B60000              	call malloc
  8863 00005651 488B7D10                	mov rdi, ENV
  8864 00005655 BE00000000              	mov rsi, 0
  8865 0000565A BA01000000              	mov rdx, 1
  8866                                  .L_lambda_opt_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  8867 0000565F 4883FE01                	cmp rsi, 1
  8868 00005663 7410                    	je .L_lambda_opt_env_end_0009
  8869 00005665 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8870 00005669 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8871 0000566D 48FFC6                  	inc rsi
  8872 00005670 48FFC2                  	inc rdx
  8873 00005673 EBEA                    	jmp .L_lambda_opt_env_loop_0009
  8874                                  .L_lambda_opt_env_end_0009:
  8875 00005675 5B                      	pop rbx
  8876 00005676 BE00000000              	mov rsi, 0
  8877                                  .L_lambda_opt_params_loop_0011:	; copy params
  8878 0000567B 4883FE01                	cmp rsi, 1
  8879 0000567F 740E                    	je .L_lambda_opt_params_end_0011
  8880 00005681 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8881 00005686 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8882 0000568A 48FFC6                  	inc rsi
  8883 0000568D EBEC                    	jmp .L_lambda_opt_params_loop_0011
  8884                                  .L_lambda_opt_params_end_0011:
  8885 0000568F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8886 00005692 4889C3                  	mov rbx, rax
  8887 00005695 58                      	pop rax
  8888 00005696 C60005                  	mov byte [rax], T_closure
  8889 00005699 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8890 0000569D 48C74009[AA560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0009
  8891 000056A5 E92B010000              	jmp .L_lambda_opt_end_0009
  8892                                  .L_lambda_opt_code_0009:
  8893 000056AA 4C8B542410              mov r10, qword [rsp+8*2]
  8894 000056AF 4983FA02                cmp r10, 2
  8895 000056B3 740B                    je .L_lambda_opt_arity_check_exact_0009
  8896 000056B5 4983FA02                cmp r10, 2
  8897 000056B9 7F41                    jg .L_lambda_opt_arity_check_more_0009
  8898 000056BB E923B60000              jmp L_error_incorrect_arity_opt
  8899                                  .L_lambda_opt_arity_check_exact_0009:
  8900 000056C0 4883EC08                sub rsp, 8
  8901 000056C4 BA05000000              mov rdx, 3+2
  8902 000056C9 4889E3                  mov qword rbx, rsp
  8903                                  .L_lambda_opt_params_loop_0012:
  8904 000056CC 488B4B08                mov qword rcx, [rbx+8]
  8905 000056D0 48890B                  mov qword [rbx], rcx
  8906 000056D3 48FFCA                  dec rdx
  8907 000056D6 4883C308                add rbx, 8
  8908 000056DA 4883FA00                cmp rdx, 0
  8909 000056DE 7402                    je .L_lambda_opt_params_end_0012
  8910 000056E0 EBEA                    jmp .L_lambda_opt_params_loop_0012
  8911                                  .L_lambda_opt_params_end_0012:
  8912 000056E2 49FFC2                  inc r10
  8913 000056E5 4C89542410              mov qword [rsp+8*2], r10
  8914 000056EA 4983C202                add r10, 2
  8915 000056EE 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  8916 000056F6 4C8B4D00                mov r9, [rbp]
  8917 000056FA EB52                    jmp .L_lambda_opt_stack_adjusted_0009
  8918                                  .L_lambda_opt_arity_check_more_0009:
  8919 000056FC 48B8-                   mov rax, sob_nil
  8919 000056FE [0100000000000000] 
  8920 00005706 4C8B542410              mov r10, [rsp+2*8]
  8921 0000570B 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  8922 00005710 4983EA02                sub r10, 2
  8923                                  .L_lambda_opt_stack_shrink_loop_0009:
  8924 00005714 4983FA00                cmp r10, 0
  8925 00005718 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0009
  8926 0000571A 4889C1                  mov rcx, rax
  8927 0000571D 498B10                  mov rdx, [r8]
  8928 00005720 BF11000000              mov rdi, 17
  8929 00005725 E8ECB50000              call malloc
  8930 0000572A C60021                  mov byte [rax], T_pair
  8931 0000572D 48894809                mov SOB_PAIR_CDR(rax), rcx
  8932 00005731 48895001                mov SOB_PAIR_CAR(rax), rdx
  8933 00005735 4983E808                sub r8, 8
  8934 00005739 49FFCA                  dec r10
  8935 0000573C EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0009
  8936                                  .L_lambda_opt_stack_shrink_loop_exit_0009:
  8937 0000573E 4889442428              mov [rsp+8*(2+3)], rax
  8938 00005743 41BA03000000            mov r10, 3
  8939 00005749 4C89542410              mov [rsp+16], r10
  8940                                  .L_lambda_opt_stack_adjusted_0009:
  8941 0000574E 4C8B4D00                mov r9, [rbp]
  8942 00005752 C8000000                enter 0, 0
  8943 00005756 488B4530                mov rax, qword [rbp + 48]
  8944 0000575A 50                      	push rax
  8945 0000575B 488B4528                mov rax, qword [rbp + 40]
  8946 0000575F 50                      	push rax
  8947 00005760 488B4520                mov rax, qword [rbp + 32]
  8948 00005764 50                      	push rax
  8949 00005765 6A03                    	push 3
  8950 00005767 488B4510                mov rax, qword [rbp + 16]
  8951 0000576B 488B00                  mov rax, qword [rax + 0]
  8952 0000576E 488B00                  mov rax, qword [rax + 0]
  8953 00005771 488B00                  	mov rax, qword [rax]
  8954                                  .L_lambda_simple_arity_check_ok_0068:
  8955 00005774 803805                  	cmp byte [rax], T_closure
  8956                                  
  8957 00005777 0F8521C50000                    jne L_code_ptr_error                      ; rax <- proc
  8958                                  
  8959                                  
  8960 0000577D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  8961                                  
  8962 00005781 53                              push rbx                                  ; env pushed
  8963                                  
  8964 00005782 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  8965                                  
  8966                                  
  8967 00005785 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  8968                                  
  8969                                          
  8970                                          
  8971 00005788 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  8972                                  
  8973 0000578C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  8974                                  
  8975                                  
  8976 00005791 4D89CA                          mov r10, r9
  8977 00005794 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  8978                                  
  8979                                                                                         
  8980 00005798 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  8981 0000579B 4983C404                        add r12, 4
  8982                                  
  8983 0000579F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  8984                                  .L_tc_recycle_frame_loop_0034:
  8985 000057A5 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  8986                                  
  8987 000057A9 4E8974E500                      mov [rbp + (r12 * 8)], r14
  8988                                  
  8989                                  
  8990                                  
  8991 000057AE 41BE00000000                    mov r14, 0                                ; clean box
  8992                                  
  8993                                  
  8994                                                                  
  8995 000057B4 4983C2FF                        add r10, -1                               ; args_copied_counter--
  8996                                  
  8997 000057B8 4983C4FF                        add r12, -1 
  8998                                  
  8999 000057BC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9000 000057C0 75E3                    	jne .L_tc_recycle_frame_loop_0034
  9001                                  .L_tc_recycle_frame_done_0034:
  9002 000057C2 5D                      	pop rbp                                  ; restore the old rbp
  9003                                  
  9004 000057C3 488B4D00                        mov rcx, qword [rbp]
  9005 000057C7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9006                                            ; rbx <- code(proc)
  9007                                  
  9008 000057CB FFE3                            jmp rbx
  9009 000057CD C9                      leave
  9010 000057CE 4C8B4D00                mov r9, [rbp]
  9011 000057D2 C23000                  ret 8 * (3 + 3)
  9012                                  .L_lambda_opt_end_0009:	; new closure is in rax
  9013 000057D5 C9                      	leave
  9014 000057D6 C21800                  	ret 8 * (2 + 1)
  9015                                  .L_lambda_simple_end_0033:	; new closure is in rax
  9016 000057D9 803805                  	cmp byte [rax], T_closure 
  9017 000057DC 0F85BCC40000                    jne L_code_ptr_error
  9018                                  
  9019 000057E2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9020                                  
  9021 000057E6 53                              push rbx
  9022                                  
  9023 000057E7 FF5009                          call SOB_CLOSURE_CODE(rax)
  9024                                  
  9025 000057EA 48890425[00030000]              	mov qword [free_var_96], rax
  9026 000057F2 48B8-                   	mov rax, sob_void
  9026 000057F4 [0000000000000000] 
  9027                                  
  9028 000057FC 4889C7                  	mov rdi, rax
  9029 000057FF E823B50000              	call print_sexpr_if_not_void
  9030                                  
  9031 00005804 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9032 00005809 E808B50000              	call malloc
  9033 0000580E 50                      	push rax
  9034 0000580F BF00000000              	mov rdi, 8 * 0	; new rib
  9035 00005814 E8FDB40000              	call malloc
  9036 00005819 50                      	push rax
  9037 0000581A BF08000000              	mov rdi, 8 * 1	; extended env
  9038 0000581F E8F2B40000              	call malloc
  9039 00005824 488B7D10                	mov rdi, ENV
  9040 00005828 BE00000000              	mov rsi, 0
  9041 0000582D BA01000000              	mov rdx, 1
  9042                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  9043 00005832 4883FE00                	cmp rsi, 0
  9044 00005836 7410                    	je .L_lambda_simple_env_end_0035
  9045 00005838 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9046 0000583C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9047 00005840 48FFC6                  	inc rsi
  9048 00005843 48FFC2                  	inc rdx
  9049 00005846 EBEA                    	jmp .L_lambda_simple_env_loop_0035
  9050                                  .L_lambda_simple_env_end_0035:
  9051 00005848 5B                      	pop rbx
  9052 00005849 BE00000000              	mov rsi, 0
  9053                                  .L_lambda_simple_params_loop_0035:	; copy params
  9054 0000584E 4883FE00                	cmp rsi, 0
  9055 00005852 740E                    	je .L_lambda_simple_params_end_0035
  9056 00005854 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9057 00005859 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9058 0000585D 48FFC6                  	inc rsi
  9059 00005860 EBEC                    	jmp .L_lambda_simple_params_loop_0035
  9060                                  .L_lambda_simple_params_end_0035:
  9061 00005862 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9062 00005865 4889C3                  	mov rbx, rax
  9063 00005868 58                      	pop rax
  9064 00005869 C60005                  	mov byte [rax], T_closure
  9065 0000586C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9066 00005870 48C74009[7D580000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  9067 00005878 E994000000              	jmp .L_lambda_simple_end_0035
  9068                                  .L_lambda_simple_code_0035:	; lambda-simple body
  9069 0000587D 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9070 00005883 740B                    	je .L_lambda_simple_arity_check_ok_0069
  9071 00005885 FF742410                	push qword [rsp + 8 * 2]
  9072 00005889 6A00                    	push 0
  9073 0000588B E93FB40000              	jmp L_error_incorrect_arity_simple
  9074                                  .L_lambda_simple_arity_check_ok_0069:
  9075 00005890 C8000000                	enter 0, 0
  9076 00005894 48B8-                   	mov rax, qword (L_constants + 67)
  9076 00005896 [4300000000000000] 
  9077 0000589E 50                      	push rax
  9078 0000589F 48B8-                   	mov rax, qword (L_constants + 58)
  9078 000058A1 [3A00000000000000] 
  9079 000058A9 50                      	push rax
  9080 000058AA 6A02                    	push 2
  9081 000058AC 488B0425[30010000]      	mov rax, qword [free_var_38]
  9082                                  .L_lambda_simple_arity_check_ok_006a:
  9083 000058B4 803805                  	cmp byte [rax], T_closure
  9084                                  
  9085 000058B7 0F85E1C30000                    jne L_code_ptr_error                      ; rax <- proc
  9086                                  
  9087                                  
  9088 000058BD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9089                                  
  9090 000058C1 53                              push rbx                                  ; env pushed
  9091                                  
  9092 000058C2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9093                                  
  9094                                  
  9095 000058C5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9096                                  
  9097                                          
  9098                                          
  9099 000058C8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9100                                  
  9101 000058CC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9102                                  
  9103                                  
  9104 000058D1 4D89CA                          mov r10, r9
  9105 000058D4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9106                                  
  9107                                                                                         
  9108 000058D8 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9109 000058DB 4983C404                        add r12, 4
  9110                                  
  9111 000058DF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9112                                  .L_tc_recycle_frame_loop_0035:
  9113 000058E5 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9114                                  
  9115 000058E9 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9116                                  
  9117                                  
  9118                                  
  9119 000058EE 41BE00000000                    mov r14, 0                                ; clean box
  9120                                  
  9121                                  
  9122                                                                  
  9123 000058F4 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9124                                  
  9125 000058F8 4983C4FF                        add r12, -1 
  9126                                  
  9127 000058FC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9128 00005900 75E3                    	jne .L_tc_recycle_frame_loop_0035
  9129                                  .L_tc_recycle_frame_done_0035:
  9130 00005902 5D                      	pop rbp                                  ; restore the old rbp
  9131                                  
  9132 00005903 488B4D00                        mov rcx, qword [rbp]
  9133 00005907 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9134                                            ; rbx <- code(proc)
  9135                                  
  9136 0000590B FFE3                            jmp rbx
  9137 0000590D C9                      	leave
  9138 0000590E C21000                  	ret 8 * (2 + 0)
  9139                                  .L_lambda_simple_end_0035:	; new closure is in rax
  9140 00005911 50                      	push rax
  9141 00005912 6A01                    	push 1
  9142 00005914 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9143 00005919 E8F8B30000              	call malloc
  9144 0000591E 50                      	push rax
  9145 0000591F BF00000000              	mov rdi, 8 * 0	; new rib
  9146 00005924 E8EDB30000              	call malloc
  9147 00005929 50                      	push rax
  9148 0000592A BF08000000              	mov rdi, 8 * 1	; extended env
  9149 0000592F E8E2B30000              	call malloc
  9150 00005934 488B7D10                	mov rdi, ENV
  9151 00005938 BE00000000              	mov rsi, 0
  9152 0000593D BA01000000              	mov rdx, 1
  9153                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  9154 00005942 4883FE00                	cmp rsi, 0
  9155 00005946 7410                    	je .L_lambda_simple_env_end_0036
  9156 00005948 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9157 0000594C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9158 00005950 48FFC6                  	inc rsi
  9159 00005953 48FFC2                  	inc rdx
  9160 00005956 EBEA                    	jmp .L_lambda_simple_env_loop_0036
  9161                                  .L_lambda_simple_env_end_0036:
  9162 00005958 5B                      	pop rbx
  9163 00005959 BE00000000              	mov rsi, 0
  9164                                  .L_lambda_simple_params_loop_0036:	; copy params
  9165 0000595E 4883FE00                	cmp rsi, 0
  9166 00005962 740E                    	je .L_lambda_simple_params_end_0036
  9167 00005964 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9168 00005969 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9169 0000596D 48FFC6                  	inc rsi
  9170 00005970 EBEC                    	jmp .L_lambda_simple_params_loop_0036
  9171                                  .L_lambda_simple_params_end_0036:
  9172 00005972 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9173 00005975 4889C3                  	mov rbx, rax
  9174 00005978 58                      	pop rax
  9175 00005979 C60005                  	mov byte [rax], T_closure
  9176 0000597C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9177 00005980 48C74009[8D590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  9178 00005988 E97A070000              	jmp .L_lambda_simple_end_0036
  9179                                  .L_lambda_simple_code_0036:	; lambda-simple body
  9180 0000598D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9181 00005993 740B                    	je .L_lambda_simple_arity_check_ok_006b
  9182 00005995 FF742410                	push qword [rsp + 8 * 2]
  9183 00005999 6A01                    	push 1
  9184 0000599B E92FB30000              	jmp L_error_incorrect_arity_simple
  9185                                  .L_lambda_simple_arity_check_ok_006b:
  9186 000059A0 C8000000                	enter 0, 0
  9187 000059A4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9188 000059A9 E868B30000              	call malloc
  9189 000059AE 50                      	push rax
  9190 000059AF BF08000000              	mov rdi, 8 * 1	; new rib
  9191 000059B4 E85DB30000              	call malloc
  9192 000059B9 50                      	push rax
  9193 000059BA BF10000000              	mov rdi, 8 * 2	; extended env
  9194 000059BF E852B30000              	call malloc
  9195 000059C4 488B7D10                	mov rdi, ENV
  9196 000059C8 BE00000000              	mov rsi, 0
  9197 000059CD BA01000000              	mov rdx, 1
  9198                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  9199 000059D2 4883FE01                	cmp rsi, 1
  9200 000059D6 7410                    	je .L_lambda_simple_env_end_0037
  9201 000059D8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9202 000059DC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9203 000059E0 48FFC6                  	inc rsi
  9204 000059E3 48FFC2                  	inc rdx
  9205 000059E6 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  9206                                  .L_lambda_simple_env_end_0037:
  9207 000059E8 5B                      	pop rbx
  9208 000059E9 BE00000000              	mov rsi, 0
  9209                                  .L_lambda_simple_params_loop_0037:	; copy params
  9210 000059EE 4883FE01                	cmp rsi, 1
  9211 000059F2 740E                    	je .L_lambda_simple_params_end_0037
  9212 000059F4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9213 000059F9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9214 000059FD 48FFC6                  	inc rsi
  9215 00005A00 EBEC                    	jmp .L_lambda_simple_params_loop_0037
  9216                                  .L_lambda_simple_params_end_0037:
  9217 00005A02 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9218 00005A05 4889C3                  	mov rbx, rax
  9219 00005A08 58                      	pop rax
  9220 00005A09 C60005                  	mov byte [rax], T_closure
  9221 00005A0C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9222 00005A10 48C74009[1D5A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  9223 00005A18 E94B040000              	jmp .L_lambda_simple_end_0037
  9224                                  .L_lambda_simple_code_0037:	; lambda-simple body
  9225 00005A1D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9226 00005A23 740B                    	je .L_lambda_simple_arity_check_ok_006c
  9227 00005A25 FF742410                	push qword [rsp + 8 * 2]
  9228 00005A29 6A02                    	push 2
  9229 00005A2B E99FB20000              	jmp L_error_incorrect_arity_simple
  9230                                  .L_lambda_simple_arity_check_ok_006c:
  9231 00005A30 C8000000                	enter 0, 0
  9232 00005A34 488B4520                mov rax, qword [rbp + 32]
  9233 00005A38 50                      	push rax
  9234 00005A39 6A01                    	push 1
  9235 00005A3B 488B0425[48000000]      	mov rax, qword [free_var_9]
  9236 00005A43 803805                  	cmp byte [rax], T_closure 
  9237 00005A46 0F8552C20000                    jne L_code_ptr_error
  9238                                  
  9239 00005A4C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9240                                  
  9241 00005A50 53                              push rbx
  9242                                  
  9243 00005A51 FF5009                          call SOB_CLOSURE_CODE(rax)
  9244                                  
  9245 00005A54 483D[02000000]                  	cmp rax, sob_boolean_false
  9246 00005A5A 0F84BB010000            	je .L_if_else_0011
  9247 00005A60 488B4528                mov rax, qword [rbp + 40]
  9248 00005A64 50                      	push rax
  9249 00005A65 6A01                    	push 1
  9250 00005A67 488B0425[48000000]      	mov rax, qword [free_var_9]
  9251 00005A6F 803805                  	cmp byte [rax], T_closure 
  9252 00005A72 0F8526C20000                    jne L_code_ptr_error
  9253                                  
  9254 00005A78 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9255                                  
  9256 00005A7C 53                              push rbx
  9257                                  
  9258 00005A7D FF5009                          call SOB_CLOSURE_CODE(rax)
  9259                                  
  9260 00005A80 483D[02000000]                  	cmp rax, sob_boolean_false
  9261 00005A86 7472                    	je .L_if_else_0015
  9262 00005A88 488B4528                mov rax, qword [rbp + 40]
  9263 00005A8C 50                      	push rax
  9264 00005A8D 488B4520                mov rax, qword [rbp + 32]
  9265 00005A91 50                      	push rax
  9266 00005A92 6A02                    	push 2
  9267 00005A94 488B0425[10010000]      	mov rax, qword [free_var_34]
  9268                                  .L_lambda_simple_arity_check_ok_0073:
  9269 00005A9C 803805                  	cmp byte [rax], T_closure
  9270                                  
  9271 00005A9F 0F85F9C10000                    jne L_code_ptr_error                      ; rax <- proc
  9272                                  
  9273                                  
  9274 00005AA5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9275                                  
  9276 00005AA9 53                              push rbx                                  ; env pushed
  9277                                  
  9278 00005AAA FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9279                                  
  9280                                  
  9281 00005AAD FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9282                                  
  9283                                          
  9284                                          
  9285 00005AB0 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9286                                  
  9287 00005AB4 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9288                                  
  9289                                  
  9290 00005AB9 4D89CA                          mov r10, r9
  9291 00005ABC 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9292                                  
  9293                                                                                         
  9294 00005AC0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9295 00005AC3 4983C404                        add r12, 4
  9296                                  
  9297 00005AC7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9298                                  .L_tc_recycle_frame_loop_003c:
  9299 00005ACD 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9300                                  
  9301 00005AD1 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9302                                  
  9303                                  
  9304                                  
  9305 00005AD6 41BE00000000                    mov r14, 0                                ; clean box
  9306                                  
  9307                                  
  9308                                                                  
  9309 00005ADC 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9310                                  
  9311 00005AE0 4983C4FF                        add r12, -1 
  9312                                  
  9313 00005AE4 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9314 00005AE8 75E3                    	jne .L_tc_recycle_frame_loop_003c
  9315                                  .L_tc_recycle_frame_done_003c:
  9316 00005AEA 5D                      	pop rbp                                  ; restore the old rbp
  9317                                  
  9318 00005AEB 488B4D00                        mov rcx, qword [rbp]
  9319 00005AEF 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9320                                            ; rbx <- code(proc)
  9321                                  
  9322 00005AF3 FFE3                            jmp rbx
  9323 00005AF5 E91C010000              	jmp .L_if_end_0015
  9324                                  	.L_if_else_0015:
  9325 00005AFA 488B4528                	mov rax, qword [rbp + 40]
  9326 00005AFE 50                      	push rax
  9327 00005AFF 6A01                    	push 1
  9328 00005B01 488B0425[40000000]      	mov rax, qword [free_var_8]
  9329 00005B09 803805                  	cmp byte [rax], T_closure 
  9330 00005B0C 0F858CC10000                    jne L_code_ptr_error
  9331                                  
  9332 00005B12 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9333                                  
  9334 00005B16 53                              push rbx
  9335                                  
  9336 00005B17 FF5009                          call SOB_CLOSURE_CODE(rax)
  9337                                  
  9338 00005B1A 483D[02000000]                  	cmp rax, sob_boolean_false
  9339 00005B20 0F848B000000            	je .L_if_else_0016
  9340 00005B26 488B4528                mov rax, qword [rbp + 40]
  9341 00005B2A 50                      	push rax
  9342 00005B2B 488B4520                mov rax, qword [rbp + 32]
  9343 00005B2F 50                      	push rax
  9344 00005B30 6A01                    	push 1
  9345 00005B32 488B0425[B8000000]      	mov rax, qword [free_var_23]
  9346 00005B3A 803805                  	cmp byte [rax], T_closure 
  9347 00005B3D 0F855BC10000                    jne L_code_ptr_error
  9348                                  
  9349 00005B43 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9350                                  
  9351 00005B47 53                              push rbx
  9352                                  
  9353 00005B48 FF5009                          call SOB_CLOSURE_CODE(rax)
  9354                                  
  9355 00005B4B 50                              	push rax
  9356 00005B4C 6A02                    	push 2
  9357 00005B4E 488B0425[F0000000]      	mov rax, qword [free_var_30]
  9358                                  .L_lambda_simple_arity_check_ok_0072:
  9359 00005B56 803805                  	cmp byte [rax], T_closure
  9360                                  
  9361 00005B59 0F853FC10000                    jne L_code_ptr_error                      ; rax <- proc
  9362                                  
  9363                                  
  9364 00005B5F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9365                                  
  9366 00005B63 53                              push rbx                                  ; env pushed
  9367                                  
  9368 00005B64 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9369                                  
  9370                                  
  9371 00005B67 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9372                                  
  9373                                          
  9374                                          
  9375 00005B6A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9376                                  
  9377 00005B6E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9378                                  
  9379                                  
  9380 00005B73 4D89CA                          mov r10, r9
  9381 00005B76 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9382                                  
  9383                                                                                         
  9384 00005B7A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9385 00005B7D 4983C404                        add r12, 4
  9386                                  
  9387 00005B81 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9388                                  .L_tc_recycle_frame_loop_003b:
  9389 00005B87 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9390                                  
  9391 00005B8B 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9392                                  
  9393                                  
  9394                                  
  9395 00005B90 41BE00000000                    mov r14, 0                                ; clean box
  9396                                  
  9397                                  
  9398                                                                  
  9399 00005B96 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9400                                  
  9401 00005B9A 4983C4FF                        add r12, -1 
  9402                                  
  9403 00005B9E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9404 00005BA2 75E3                    	jne .L_tc_recycle_frame_loop_003b
  9405                                  .L_tc_recycle_frame_done_003b:
  9406 00005BA4 5D                      	pop rbp                                  ; restore the old rbp
  9407                                  
  9408 00005BA5 488B4D00                        mov rcx, qword [rbp]
  9409 00005BA9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9410                                            ; rbx <- code(proc)
  9411                                  
  9412 00005BAD FFE3                            jmp rbx
  9413 00005BAF EB65                    	jmp .L_if_end_0016
  9414                                  	.L_if_else_0016:
  9415 00005BB1 6A00                    		push 0
  9416 00005BB3 488B4510                mov rax, qword [rbp + 16]
  9417 00005BB7 488B00                  mov rax, qword [rax + 0]
  9418 00005BBA 488B00                  mov rax, qword [rax + 0]
  9419                                  .L_lambda_simple_arity_check_ok_0071:
  9420 00005BBD 803805                  	cmp byte [rax], T_closure
  9421                                  
  9422 00005BC0 0F85D8C00000                    jne L_code_ptr_error                      ; rax <- proc
  9423                                  
  9424                                  
  9425 00005BC6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9426                                  
  9427 00005BCA 53                              push rbx                                  ; env pushed
  9428                                  
  9429 00005BCB FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9430                                  
  9431                                  
  9432 00005BCE FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9433                                  
  9434                                          
  9435                                          
  9436 00005BD1 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9437                                  
  9438 00005BD5 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9439                                  
  9440                                  
  9441 00005BDA 4D89CA                          mov r10, r9
  9442 00005BDD 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9443                                  
  9444                                                                                         
  9445 00005BE1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9446 00005BE4 4983C404                        add r12, 4
  9447                                  
  9448 00005BE8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9449                                  .L_tc_recycle_frame_loop_003a:
  9450 00005BEE 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9451                                  
  9452 00005BF2 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9453                                  
  9454                                  
  9455                                  
  9456 00005BF7 41BE00000000                    mov r14, 0                                ; clean box
  9457                                  
  9458                                  
  9459                                                                  
  9460 00005BFD 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9461                                  
  9462 00005C01 4983C4FF                        add r12, -1 
  9463                                  
  9464 00005C05 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9465 00005C09 75E3                    	jne .L_tc_recycle_frame_loop_003a
  9466                                  .L_tc_recycle_frame_done_003a:
  9467 00005C0B 5D                      	pop rbp                                  ; restore the old rbp
  9468                                  
  9469 00005C0C 488B4D00                        mov rcx, qword [rbp]
  9470 00005C10 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9471                                            ; rbx <- code(proc)
  9472                                  
  9473 00005C14 FFE3                            jmp rbx
  9474                                  	.L_if_end_0016:
  9475                                  	.L_if_end_0015:
  9476 00005C16 E949020000              	jmp .L_if_end_0011
  9477                                  	.L_if_else_0011:
  9478 00005C1B 488B4520                	mov rax, qword [rbp + 32]
  9479 00005C1F 50                      	push rax
  9480 00005C20 6A01                    	push 1
  9481 00005C22 488B0425[40000000]      	mov rax, qword [free_var_8]
  9482 00005C2A 803805                  	cmp byte [rax], T_closure 
  9483 00005C2D 0F856BC00000                    jne L_code_ptr_error
  9484                                  
  9485 00005C33 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9486                                  
  9487 00005C37 53                              push rbx
  9488                                  
  9489 00005C38 FF5009                          call SOB_CLOSURE_CODE(rax)
  9490                                  
  9491 00005C3B 483D[02000000]                  	cmp rax, sob_boolean_false
  9492 00005C41 0F84B8010000            	je .L_if_else_0012
  9493 00005C47 488B4528                mov rax, qword [rbp + 40]
  9494 00005C4B 50                      	push rax
  9495 00005C4C 6A01                    	push 1
  9496 00005C4E 488B0425[48000000]      	mov rax, qword [free_var_9]
  9497 00005C56 803805                  	cmp byte [rax], T_closure 
  9498 00005C59 0F853FC00000                    jne L_code_ptr_error
  9499                                  
  9500 00005C5F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9501                                  
  9502 00005C63 53                              push rbx
  9503                                  
  9504 00005C64 FF5009                          call SOB_CLOSURE_CODE(rax)
  9505                                  
  9506 00005C67 483D[02000000]                  	cmp rax, sob_boolean_false
  9507 00005C6D 0F848E000000            	je .L_if_else_0013
  9508 00005C73 488B4528                mov rax, qword [rbp + 40]
  9509 00005C77 50                      	push rax
  9510 00005C78 6A01                    	push 1
  9511 00005C7A 488B0425[B8000000]      	mov rax, qword [free_var_23]
  9512 00005C82 803805                  	cmp byte [rax], T_closure 
  9513 00005C85 0F8513C00000                    jne L_code_ptr_error
  9514                                  
  9515 00005C8B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9516                                  
  9517 00005C8F 53                              push rbx
  9518                                  
  9519 00005C90 FF5009                          call SOB_CLOSURE_CODE(rax)
  9520                                  
  9521 00005C93 50                              	push rax
  9522 00005C94 488B4520                mov rax, qword [rbp + 32]
  9523 00005C98 50                      	push rax
  9524 00005C99 6A02                    	push 2
  9525 00005C9B 488B0425[F0000000]      	mov rax, qword [free_var_30]
  9526                                  .L_lambda_simple_arity_check_ok_0070:
  9527 00005CA3 803805                  	cmp byte [rax], T_closure
  9528                                  
  9529 00005CA6 0F85F2BF0000                    jne L_code_ptr_error                      ; rax <- proc
  9530                                  
  9531                                  
  9532 00005CAC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9533                                  
  9534 00005CB0 53                              push rbx                                  ; env pushed
  9535                                  
  9536 00005CB1 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9537                                  
  9538                                  
  9539 00005CB4 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9540                                  
  9541                                          
  9542                                          
  9543 00005CB7 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9544                                  
  9545 00005CBB 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9546                                  
  9547                                  
  9548 00005CC0 4D89CA                          mov r10, r9
  9549 00005CC3 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9550                                  
  9551                                                                                         
  9552 00005CC7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9553 00005CCA 4983C404                        add r12, 4
  9554                                  
  9555 00005CCE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9556                                  .L_tc_recycle_frame_loop_0039:
  9557 00005CD4 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9558                                  
  9559 00005CD8 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9560                                  
  9561                                  
  9562                                  
  9563 00005CDD 41BE00000000                    mov r14, 0                                ; clean box
  9564                                  
  9565                                  
  9566                                                                  
  9567 00005CE3 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9568                                  
  9569 00005CE7 4983C4FF                        add r12, -1 
  9570                                  
  9571 00005CEB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9572 00005CEF 75E3                    	jne .L_tc_recycle_frame_loop_0039
  9573                                  .L_tc_recycle_frame_done_0039:
  9574 00005CF1 5D                      	pop rbp                                  ; restore the old rbp
  9575                                  
  9576 00005CF2 488B4D00                        mov rcx, qword [rbp]
  9577 00005CF6 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9578                                            ; rbx <- code(proc)
  9579                                  
  9580 00005CFA FFE3                            jmp rbx
  9581 00005CFC E9FC000000              	jmp .L_if_end_0013
  9582                                  	.L_if_else_0013:
  9583 00005D01 488B4528                	mov rax, qword [rbp + 40]
  9584 00005D05 50                      	push rax
  9585 00005D06 6A01                    	push 1
  9586 00005D08 488B0425[40000000]      	mov rax, qword [free_var_8]
  9587 00005D10 803805                  	cmp byte [rax], T_closure 
  9588 00005D13 0F8585BF0000                    jne L_code_ptr_error
  9589                                  
  9590 00005D19 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
  9591                                  
  9592 00005D1D 53                              push rbx
  9593                                  
  9594 00005D1E FF5009                          call SOB_CLOSURE_CODE(rax)
  9595                                  
  9596 00005D21 483D[02000000]                  	cmp rax, sob_boolean_false
  9597 00005D27 746F                    	je .L_if_else_0014
  9598 00005D29 488B4528                mov rax, qword [rbp + 40]
  9599 00005D2D 50                      	push rax
  9600 00005D2E 488B4520                mov rax, qword [rbp + 32]
  9601 00005D32 50                      	push rax
  9602 00005D33 6A02                    	push 2
  9603 00005D35 488B0425[F0000000]      	mov rax, qword [free_var_30]
  9604                                  .L_lambda_simple_arity_check_ok_006f:
  9605 00005D3D 803805                  	cmp byte [rax], T_closure
  9606                                  
  9607 00005D40 0F8558BF0000                    jne L_code_ptr_error                      ; rax <- proc
  9608                                  
  9609                                  
  9610 00005D46 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9611                                  
  9612 00005D4A 53                              push rbx                                  ; env pushed
  9613                                  
  9614 00005D4B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9615                                  
  9616                                  
  9617 00005D4E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9618                                  
  9619                                          
  9620                                          
  9621 00005D51 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9622                                  
  9623 00005D55 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9624                                  
  9625                                  
  9626 00005D5A 4D89CA                          mov r10, r9
  9627 00005D5D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9628                                  
  9629                                                                                         
  9630 00005D61 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9631 00005D64 4983C404                        add r12, 4
  9632                                  
  9633 00005D68 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9634                                  .L_tc_recycle_frame_loop_0038:
  9635 00005D6E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9636                                  
  9637 00005D72 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9638                                  
  9639                                  
  9640                                  
  9641 00005D77 41BE00000000                    mov r14, 0                                ; clean box
  9642                                  
  9643                                  
  9644                                                                  
  9645 00005D7D 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9646                                  
  9647 00005D81 4983C4FF                        add r12, -1 
  9648                                  
  9649 00005D85 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9650 00005D89 75E3                    	jne .L_tc_recycle_frame_loop_0038
  9651                                  .L_tc_recycle_frame_done_0038:
  9652 00005D8B 5D                      	pop rbp                                  ; restore the old rbp
  9653                                  
  9654 00005D8C 488B4D00                        mov rcx, qword [rbp]
  9655 00005D90 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9656                                            ; rbx <- code(proc)
  9657                                  
  9658 00005D94 FFE3                            jmp rbx
  9659 00005D96 EB65                    	jmp .L_if_end_0014
  9660                                  	.L_if_else_0014:
  9661 00005D98 6A00                    		push 0
  9662 00005D9A 488B4510                mov rax, qword [rbp + 16]
  9663 00005D9E 488B00                  mov rax, qword [rax + 0]
  9664 00005DA1 488B00                  mov rax, qword [rax + 0]
  9665                                  .L_lambda_simple_arity_check_ok_006e:
  9666 00005DA4 803805                  	cmp byte [rax], T_closure
  9667                                  
  9668 00005DA7 0F85F1BE0000                    jne L_code_ptr_error                      ; rax <- proc
  9669                                  
  9670                                  
  9671 00005DAD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9672                                  
  9673 00005DB1 53                              push rbx                                  ; env pushed
  9674                                  
  9675 00005DB2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9676                                  
  9677                                  
  9678 00005DB5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9679                                  
  9680                                          
  9681                                          
  9682 00005DB8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9683                                  
  9684 00005DBC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9685                                  
  9686                                  
  9687 00005DC1 4D89CA                          mov r10, r9
  9688 00005DC4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9689                                  
  9690                                                                                         
  9691 00005DC8 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9692 00005DCB 4983C404                        add r12, 4
  9693                                  
  9694 00005DCF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9695                                  .L_tc_recycle_frame_loop_0037:
  9696 00005DD5 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9697                                  
  9698 00005DD9 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9699                                  
  9700                                  
  9701                                  
  9702 00005DDE 41BE00000000                    mov r14, 0                                ; clean box
  9703                                  
  9704                                  
  9705                                                                  
  9706 00005DE4 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9707                                  
  9708 00005DE8 4983C4FF                        add r12, -1 
  9709                                  
  9710 00005DEC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9711 00005DF0 75E3                    	jne .L_tc_recycle_frame_loop_0037
  9712                                  .L_tc_recycle_frame_done_0037:
  9713 00005DF2 5D                      	pop rbp                                  ; restore the old rbp
  9714                                  
  9715 00005DF3 488B4D00                        mov rcx, qword [rbp]
  9716 00005DF7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9717                                            ; rbx <- code(proc)
  9718                                  
  9719 00005DFB FFE3                            jmp rbx
  9720                                  	.L_if_end_0014:
  9721                                  	.L_if_end_0013:
  9722 00005DFD EB65                    	jmp .L_if_end_0012
  9723                                  	.L_if_else_0012:
  9724 00005DFF 6A00                    		push 0
  9725 00005E01 488B4510                mov rax, qword [rbp + 16]
  9726 00005E05 488B00                  mov rax, qword [rax + 0]
  9727 00005E08 488B00                  mov rax, qword [rax + 0]
  9728                                  .L_lambda_simple_arity_check_ok_006d:
  9729 00005E0B 803805                  	cmp byte [rax], T_closure
  9730                                  
  9731 00005E0E 0F858ABE0000                    jne L_code_ptr_error                      ; rax <- proc
  9732                                  
  9733                                  
  9734 00005E14 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9735                                  
  9736 00005E18 53                              push rbx                                  ; env pushed
  9737                                  
  9738 00005E19 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9739                                  
  9740                                  
  9741 00005E1C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9742                                  
  9743                                          
  9744                                          
  9745 00005E1F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9746                                  
  9747 00005E23 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9748                                  
  9749                                  
  9750 00005E28 4D89CA                          mov r10, r9
  9751 00005E2B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9752                                  
  9753                                                                                         
  9754 00005E2F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9755 00005E32 4983C404                        add r12, 4
  9756                                  
  9757 00005E36 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9758                                  .L_tc_recycle_frame_loop_0036:
  9759 00005E3C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9760                                  
  9761 00005E40 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9762                                  
  9763                                  
  9764                                  
  9765 00005E45 41BE00000000                    mov r14, 0                                ; clean box
  9766                                  
  9767                                  
  9768                                                                  
  9769 00005E4B 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9770                                  
  9771 00005E4F 4983C4FF                        add r12, -1 
  9772                                  
  9773 00005E53 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9774 00005E57 75E3                    	jne .L_tc_recycle_frame_loop_0036
  9775                                  .L_tc_recycle_frame_done_0036:
  9776 00005E59 5D                      	pop rbp                                  ; restore the old rbp
  9777                                  
  9778 00005E5A 488B4D00                        mov rcx, qword [rbp]
  9779 00005E5E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9780                                            ; rbx <- code(proc)
  9781                                  
  9782 00005E62 FFE3                            jmp rbx
  9783                                  	.L_if_end_0012:
  9784                                  	.L_if_end_0011:
  9785 00005E64 C9                      	leave
  9786 00005E65 C22000                  	ret 8 * (2 + 2)
  9787                                  .L_lambda_simple_end_0037:	; new closure is in rax
  9788 00005E68 50                      	push rax
  9789 00005E69 6A01                    	push 1
  9790 00005E6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9791 00005E70 E8A1AE0000              	call malloc
  9792 00005E75 50                      	push rax
  9793 00005E76 BF08000000              	mov rdi, 8 * 1	; new rib
  9794 00005E7B E896AE0000              	call malloc
  9795 00005E80 50                      	push rax
  9796 00005E81 BF10000000              	mov rdi, 8 * 2	; extended env
  9797 00005E86 E88BAE0000              	call malloc
  9798 00005E8B 488B7D10                	mov rdi, ENV
  9799 00005E8F BE00000000              	mov rsi, 0
  9800 00005E94 BA01000000              	mov rdx, 1
  9801                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
  9802 00005E99 4883FE01                	cmp rsi, 1
  9803 00005E9D 7410                    	je .L_lambda_simple_env_end_0038
  9804 00005E9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9805 00005EA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9806 00005EA7 48FFC6                  	inc rsi
  9807 00005EAA 48FFC2                  	inc rdx
  9808 00005EAD EBEA                    	jmp .L_lambda_simple_env_loop_0038
  9809                                  .L_lambda_simple_env_end_0038:
  9810 00005EAF 5B                      	pop rbx
  9811 00005EB0 BE00000000              	mov rsi, 0
  9812                                  .L_lambda_simple_params_loop_0038:	; copy params
  9813 00005EB5 4883FE01                	cmp rsi, 1
  9814 00005EB9 740E                    	je .L_lambda_simple_params_end_0038
  9815 00005EBB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9816 00005EC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9817 00005EC4 48FFC6                  	inc rsi
  9818 00005EC7 EBEC                    	jmp .L_lambda_simple_params_loop_0038
  9819                                  .L_lambda_simple_params_end_0038:
  9820 00005EC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9821 00005ECC 4889C3                  	mov rbx, rax
  9822 00005ECF 58                      	pop rax
  9823 00005ED0 C60005                  	mov byte [rax], T_closure
  9824 00005ED3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9825 00005ED7 48C74009[E45E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
  9826 00005EDF E9C6010000              	jmp .L_lambda_simple_end_0038
  9827                                  .L_lambda_simple_code_0038:	; lambda-simple body
  9828 00005EE4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9829 00005EEA 740B                    	je .L_lambda_simple_arity_check_ok_0074
  9830 00005EEC FF742410                	push qword [rsp + 8 * 2]
  9831 00005EF0 6A01                    	push 1
  9832 00005EF2 E9D8AD0000              	jmp L_error_incorrect_arity_simple
  9833                                  .L_lambda_simple_arity_check_ok_0074:
  9834 00005EF7 C8000000                	enter 0, 0
  9835 00005EFB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9836 00005F00 E811AE0000              	call malloc
  9837 00005F05 50                      	push rax
  9838 00005F06 BF08000000              	mov rdi, 8 * 1	; new rib
  9839 00005F0B E806AE0000              	call malloc
  9840 00005F10 50                      	push rax
  9841 00005F11 BF18000000              	mov rdi, 8 * 3	; extended env
  9842 00005F16 E8FBAD0000              	call malloc
  9843 00005F1B 488B7D10                	mov rdi, ENV
  9844 00005F1F BE00000000              	mov rsi, 0
  9845 00005F24 BA01000000              	mov rdx, 1
  9846                                  .L_lambda_opt_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  9847 00005F29 4883FE02                	cmp rsi, 2
  9848 00005F2D 7410                    	je .L_lambda_opt_env_end_000a
  9849 00005F2F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9850 00005F33 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9851 00005F37 48FFC6                  	inc rsi
  9852 00005F3A 48FFC2                  	inc rdx
  9853 00005F3D EBEA                    	jmp .L_lambda_opt_env_loop_000a
  9854                                  .L_lambda_opt_env_end_000a:
  9855 00005F3F 5B                      	pop rbx
  9856 00005F40 BE00000000              	mov rsi, 0
  9857                                  .L_lambda_opt_params_loop_0013:	; copy params
  9858 00005F45 4883FE01                	cmp rsi, 1
  9859 00005F49 740E                    	je .L_lambda_opt_params_end_0013
  9860 00005F4B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9861 00005F50 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9862 00005F54 48FFC6                  	inc rsi
  9863 00005F57 EBEC                    	jmp .L_lambda_opt_params_loop_0013
  9864                                  .L_lambda_opt_params_end_0013:
  9865 00005F59 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9866 00005F5C 4889C3                  	mov rbx, rax
  9867 00005F5F 58                      	pop rax
  9868 00005F60 C60005                  	mov byte [rax], T_closure
  9869 00005F63 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9870 00005F67 48C74009[745F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000a
  9871 00005F6F E932010000              	jmp .L_lambda_opt_end_000a
  9872                                  .L_lambda_opt_code_000a:
  9873 00005F74 4C8B542410              mov r10, qword [rsp+8*2]
  9874 00005F79 4983FA00                cmp r10, 0
  9875 00005F7D 740B                    je .L_lambda_opt_arity_check_exact_000a
  9876 00005F7F 4983FA00                cmp r10, 0
  9877 00005F83 7F41                    jg .L_lambda_opt_arity_check_more_000a
  9878 00005F85 E959AD0000              jmp L_error_incorrect_arity_opt
  9879                                  .L_lambda_opt_arity_check_exact_000a:
  9880 00005F8A 4883EC08                sub rsp, 8
  9881 00005F8E BA03000000              mov rdx, 3+0
  9882 00005F93 4889E3                  mov qword rbx, rsp
  9883                                  .L_lambda_opt_params_loop_0014:
  9884 00005F96 488B4B08                mov qword rcx, [rbx+8]
  9885 00005F9A 48890B                  mov qword [rbx], rcx
  9886 00005F9D 48FFCA                  dec rdx
  9887 00005FA0 4883C308                add rbx, 8
  9888 00005FA4 4883FA00                cmp rdx, 0
  9889 00005FA8 7402                    je .L_lambda_opt_params_end_0014
  9890 00005FAA EBEA                    jmp .L_lambda_opt_params_loop_0014
  9891                                  .L_lambda_opt_params_end_0014:
  9892 00005FAC 49FFC2                  inc r10
  9893 00005FAF 4C89542410              mov qword [rsp+8*2], r10
  9894 00005FB4 4983C202                add r10, 2
  9895 00005FB8 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
  9896 00005FC0 4C8B4D00                mov r9, [rbp]
  9897 00005FC4 EB52                    jmp .L_lambda_opt_stack_adjusted_000a
  9898                                  .L_lambda_opt_arity_check_more_000a:
  9899 00005FC6 48B8-                   mov rax, sob_nil
  9899 00005FC8 [0100000000000000] 
  9900 00005FD0 4C8B542410              mov r10, [rsp+2*8]
  9901 00005FD5 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
  9902 00005FDA 4983EA00                sub r10, 0
  9903                                  .L_lambda_opt_stack_shrink_loop_000a:
  9904 00005FDE 4983FA00                cmp r10, 0
  9905 00005FE2 7424                    je .L_lambda_opt_stack_shrink_loop_exit_000a
  9906 00005FE4 4889C1                  mov rcx, rax
  9907 00005FE7 498B10                  mov rdx, [r8]
  9908 00005FEA BF11000000              mov rdi, 17
  9909 00005FEF E822AD0000              call malloc
  9910 00005FF4 C60021                  mov byte [rax], T_pair
  9911 00005FF7 48894809                mov SOB_PAIR_CDR(rax), rcx
  9912 00005FFB 48895001                mov SOB_PAIR_CAR(rax), rdx
  9913 00005FFF 4983E808                sub r8, 8
  9914 00006003 49FFCA                  dec r10
  9915 00006006 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_000a
  9916                                  .L_lambda_opt_stack_shrink_loop_exit_000a:
  9917 00006008 4889442418              mov [rsp+8*(2+1)], rax
  9918 0000600D 41BA01000000            mov r10, 1
  9919 00006013 4C89542410              mov [rsp+16], r10
  9920                                  .L_lambda_opt_stack_adjusted_000a:
  9921 00006018 4C8B4D00                mov r9, [rbp]
  9922 0000601C C8000000                enter 0, 0
  9923 00006020 488B4520                mov rax, qword [rbp + 32]
  9924 00006024 50                      	push rax
  9925 00006025 48B8-                   	mov rax, qword (L_constants + 31)
  9925 00006027 [1F00000000000000] 
  9926 0000602F 50                      	push rax
  9927 00006030 488B4510                mov rax, qword [rbp + 16]
  9928 00006034 488B00                  mov rax, qword [rax + 0]
  9929 00006037 488B00                  mov rax, qword [rax + 0]
  9930 0000603A 50                      	push rax
  9931 0000603B 6A03                    	push 3
  9932 0000603D 488B0425[F8020000]      	mov rax, qword [free_var_95]
  9933                                  .L_lambda_simple_arity_check_ok_0075:
  9934 00006045 803805                  	cmp byte [rax], T_closure
  9935                                  
  9936 00006048 0F8550BC0000                    jne L_code_ptr_error                      ; rax <- proc
  9937                                  
  9938                                  
  9939 0000604E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
  9940                                  
  9941 00006052 53                              push rbx                                  ; env pushed
  9942                                  
  9943 00006053 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
  9944                                  
  9945                                  
  9946 00006056 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
  9947                                  
  9948                                          
  9949                                          
  9950 00006059 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
  9951                                  
  9952 0000605D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
  9953                                  
  9954                                  
  9955 00006062 4D89CA                          mov r10, r9
  9956 00006065 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
  9957                                  
  9958                                                                                         
  9959 00006069 4D89C4                          mov r12, r8                               ; r12 <- index in new code
  9960 0000606C 4983C404                        add r12, 4
  9961                                  
  9962 00006070 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
  9963                                  .L_tc_recycle_frame_loop_003d:
  9964 00006076 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
  9965                                  
  9966 0000607A 4E8974E500                      mov [rbp + (r12 * 8)], r14
  9967                                  
  9968                                  
  9969                                  
  9970 0000607F 41BE00000000                    mov r14, 0                                ; clean box
  9971                                  
  9972                                  
  9973                                                                  
  9974 00006085 4983C2FF                        add r10, -1                               ; args_copied_counter--
  9975                                  
  9976 00006089 4983C4FF                        add r12, -1 
  9977                                  
  9978 0000608D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
  9979 00006091 75E3                    	jne .L_tc_recycle_frame_loop_003d
  9980                                  .L_tc_recycle_frame_done_003d:
  9981 00006093 5D                      	pop rbp                                  ; restore the old rbp
  9982                                  
  9983 00006094 488B4D00                        mov rcx, qword [rbp]
  9984 00006098 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
  9985                                            ; rbx <- code(proc)
  9986                                  
  9987 0000609C FFE3                            jmp rbx
  9988 0000609E C9                      leave
  9989 0000609F 4C8B4D00                mov r9, [rbp]
  9990 000060A3 C22000                  ret 8 * (3 + 1)
  9991                                  .L_lambda_opt_end_000a:	; new closure is in rax
  9992 000060A6 C9                      	leave
  9993 000060A7 C21800                  	ret 8 * (2 + 1)
  9994                                  .L_lambda_simple_end_0038:	; new closure is in rax
  9995                                  .L_lambda_simple_arity_check_ok_0076:
  9996 000060AA 803805                  	cmp byte [rax], T_closure
  9997                                  
  9998 000060AD 0F85EBBB0000                    jne L_code_ptr_error                      ; rax <- proc
  9999                                  
 10000                                  
 10001 000060B3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10002                                  
 10003 000060B7 53                              push rbx                                  ; env pushed
 10004                                  
 10005 000060B8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10006                                  
 10007                                  
 10008 000060BB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10009                                  
 10010                                          
 10011                                          
 10012 000060BE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10013                                  
 10014 000060C2 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10015                                  
 10016                                  
 10017 000060C7 4D89CA                          mov r10, r9
 10018 000060CA 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10019                                  
 10020                                                                                         
 10021 000060CE 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10022 000060D1 4983C404                        add r12, 4
 10023                                  
 10024 000060D5 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10025                                  .L_tc_recycle_frame_loop_003e:
 10026 000060DB 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10027                                  
 10028 000060DF 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10029                                  
 10030                                  
 10031                                  
 10032 000060E4 41BE00000000                    mov r14, 0                                ; clean box
 10033                                  
 10034                                  
 10035                                                                  
 10036 000060EA 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10037                                  
 10038 000060EE 4983C4FF                        add r12, -1 
 10039                                  
 10040 000060F2 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10041 000060F6 75E3                    	jne .L_tc_recycle_frame_loop_003e
 10042                                  .L_tc_recycle_frame_done_003e:
 10043 000060F8 5D                      	pop rbp                                  ; restore the old rbp
 10044                                  
 10045 000060F9 488B4D00                        mov rcx, qword [rbp]
 10046 000060FD 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10047                                            ; rbx <- code(proc)
 10048                                  
 10049 00006101 FFE3                            jmp rbx
 10050 00006103 C9                      	leave
 10051 00006104 C21800                  	ret 8 * (2 + 1)
 10052                                  .L_lambda_simple_end_0036:	; new closure is in rax
 10053 00006107 803805                  	cmp byte [rax], T_closure 
 10054 0000610A 0F858EBB0000                    jne L_code_ptr_error
 10055                                  
 10056 00006110 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10057                                  
 10058 00006114 53                              push rbx
 10059                                  
 10060 00006115 FF5009                          call SOB_CLOSURE_CODE(rax)
 10061                                  
 10062 00006118 48890425[08030000]              	mov qword [free_var_97], rax
 10063 00006120 48B8-                   	mov rax, sob_void
 10063 00006122 [0000000000000000] 
 10064                                  
 10065 0000612A 4889C7                  	mov rdi, rax
 10066 0000612D E8F5AB0000              	call print_sexpr_if_not_void
 10067                                  
 10068 00006132 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10069 00006137 E8DAAB0000              	call malloc
 10070 0000613C 50                      	push rax
 10071 0000613D BF00000000              	mov rdi, 8 * 0	; new rib
 10072 00006142 E8CFAB0000              	call malloc
 10073 00006147 50                      	push rax
 10074 00006148 BF08000000              	mov rdi, 8 * 1	; extended env
 10075 0000614D E8C4AB0000              	call malloc
 10076 00006152 488B7D10                	mov rdi, ENV
 10077 00006156 BE00000000              	mov rsi, 0
 10078 0000615B BA01000000              	mov rdx, 1
 10079                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
 10080 00006160 4883FE00                	cmp rsi, 0
 10081 00006164 7410                    	je .L_lambda_simple_env_end_0039
 10082 00006166 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10083 0000616A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10084 0000616E 48FFC6                  	inc rsi
 10085 00006171 48FFC2                  	inc rdx
 10086 00006174 EBEA                    	jmp .L_lambda_simple_env_loop_0039
 10087                                  .L_lambda_simple_env_end_0039:
 10088 00006176 5B                      	pop rbx
 10089 00006177 BE00000000              	mov rsi, 0
 10090                                  .L_lambda_simple_params_loop_0039:	; copy params
 10091 0000617C 4883FE00                	cmp rsi, 0
 10092 00006180 740E                    	je .L_lambda_simple_params_end_0039
 10093 00006182 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10094 00006187 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10095 0000618B 48FFC6                  	inc rsi
 10096 0000618E EBEC                    	jmp .L_lambda_simple_params_loop_0039
 10097                                  .L_lambda_simple_params_end_0039:
 10098 00006190 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10099 00006193 4889C3                  	mov rbx, rax
 10100 00006196 58                      	pop rax
 10101 00006197 C60005                  	mov byte [rax], T_closure
 10102 0000619A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10103 0000619E 48C74009[AB610000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
 10104 000061A6 E994000000              	jmp .L_lambda_simple_end_0039
 10105                                  .L_lambda_simple_code_0039:	; lambda-simple body
 10106 000061AB 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10107 000061B1 740B                    	je .L_lambda_simple_arity_check_ok_0077
 10108 000061B3 FF742410                	push qword [rsp + 8 * 2]
 10109 000061B7 6A00                    	push 0
 10110 000061B9 E911AB0000              	jmp L_error_incorrect_arity_simple
 10111                                  .L_lambda_simple_arity_check_ok_0077:
 10112 000061BE C8000000                	enter 0, 0
 10113 000061C2 48B8-                   	mov rax, qword (L_constants + 67)
 10113 000061C4 [4300000000000000] 
 10114 000061CC 50                      	push rax
 10115 000061CD 48B8-                   	mov rax, qword (L_constants + 118)
 10115 000061CF [7600000000000000] 
 10116 000061D7 50                      	push rax
 10117 000061D8 6A02                    	push 2
 10118 000061DA 488B0425[30010000]      	mov rax, qword [free_var_38]
 10119                                  .L_lambda_simple_arity_check_ok_0078:
 10120 000061E2 803805                  	cmp byte [rax], T_closure
 10121                                  
 10122 000061E5 0F85B3BA0000                    jne L_code_ptr_error                      ; rax <- proc
 10123                                  
 10124                                  
 10125 000061EB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10126                                  
 10127 000061EF 53                              push rbx                                  ; env pushed
 10128                                  
 10129 000061F0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10130                                  
 10131                                  
 10132 000061F3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10133                                  
 10134                                          
 10135                                          
 10136 000061F6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10137                                  
 10138 000061FA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10139                                  
 10140                                  
 10141 000061FF 4D89CA                          mov r10, r9
 10142 00006202 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10143                                  
 10144                                                                                         
 10145 00006206 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10146 00006209 4983C404                        add r12, 4
 10147                                  
 10148 0000620D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10149                                  .L_tc_recycle_frame_loop_003f:
 10150 00006213 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10151                                  
 10152 00006217 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10153                                  
 10154                                  
 10155                                  
 10156 0000621C 41BE00000000                    mov r14, 0                                ; clean box
 10157                                  
 10158                                  
 10159                                                                  
 10160 00006222 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10161                                  
 10162 00006226 4983C4FF                        add r12, -1 
 10163                                  
 10164 0000622A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10165 0000622E 75E3                    	jne .L_tc_recycle_frame_loop_003f
 10166                                  .L_tc_recycle_frame_done_003f:
 10167 00006230 5D                      	pop rbp                                  ; restore the old rbp
 10168                                  
 10169 00006231 488B4D00                        mov rcx, qword [rbp]
 10170 00006235 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10171                                            ; rbx <- code(proc)
 10172                                  
 10173 00006239 FFE3                            jmp rbx
 10174 0000623B C9                      	leave
 10175 0000623C C21000                  	ret 8 * (2 + 0)
 10176                                  .L_lambda_simple_end_0039:	; new closure is in rax
 10177 0000623F 50                      	push rax
 10178 00006240 6A01                    	push 1
 10179 00006242 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10180 00006247 E8CAAA0000              	call malloc
 10181 0000624C 50                      	push rax
 10182 0000624D BF00000000              	mov rdi, 8 * 0	; new rib
 10183 00006252 E8BFAA0000              	call malloc
 10184 00006257 50                      	push rax
 10185 00006258 BF08000000              	mov rdi, 8 * 1	; extended env
 10186 0000625D E8B4AA0000              	call malloc
 10187 00006262 488B7D10                	mov rdi, ENV
 10188 00006266 BE00000000              	mov rsi, 0
 10189 0000626B BA01000000              	mov rdx, 1
 10190                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
 10191 00006270 4883FE00                	cmp rsi, 0
 10192 00006274 7410                    	je .L_lambda_simple_env_end_003a
 10193 00006276 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10194 0000627A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10195 0000627E 48FFC6                  	inc rsi
 10196 00006281 48FFC2                  	inc rdx
 10197 00006284 EBEA                    	jmp .L_lambda_simple_env_loop_003a
 10198                                  .L_lambda_simple_env_end_003a:
 10199 00006286 5B                      	pop rbx
 10200 00006287 BE00000000              	mov rsi, 0
 10201                                  .L_lambda_simple_params_loop_003a:	; copy params
 10202 0000628C 4883FE00                	cmp rsi, 0
 10203 00006290 740E                    	je .L_lambda_simple_params_end_003a
 10204 00006292 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10205 00006297 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10206 0000629B 48FFC6                  	inc rsi
 10207 0000629E EBEC                    	jmp .L_lambda_simple_params_loop_003a
 10208                                  .L_lambda_simple_params_end_003a:
 10209 000062A0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10210 000062A3 4889C3                  	mov rbx, rax
 10211 000062A6 58                      	pop rax
 10212 000062A7 C60005                  	mov byte [rax], T_closure
 10213 000062AA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10214 000062AE 48C74009[BB620000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
 10215 000062B6 E938090000              	jmp .L_lambda_simple_end_003a
 10216                                  .L_lambda_simple_code_003a:	; lambda-simple body
 10217 000062BB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10218 000062C1 740B                    	je .L_lambda_simple_arity_check_ok_0079
 10219 000062C3 FF742410                	push qword [rsp + 8 * 2]
 10220 000062C7 6A01                    	push 1
 10221 000062C9 E901AA0000              	jmp L_error_incorrect_arity_simple
 10222                                  .L_lambda_simple_arity_check_ok_0079:
 10223 000062CE C8000000                	enter 0, 0
 10224 000062D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10225 000062D7 E83AAA0000              	call malloc
 10226 000062DC 50                      	push rax
 10227 000062DD BF08000000              	mov rdi, 8 * 1	; new rib
 10228 000062E2 E82FAA0000              	call malloc
 10229 000062E7 50                      	push rax
 10230 000062E8 BF10000000              	mov rdi, 8 * 2	; extended env
 10231 000062ED E824AA0000              	call malloc
 10232 000062F2 488B7D10                	mov rdi, ENV
 10233 000062F6 BE00000000              	mov rsi, 0
 10234 000062FB BA01000000              	mov rdx, 1
 10235                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
 10236 00006300 4883FE01                	cmp rsi, 1
 10237 00006304 7410                    	je .L_lambda_simple_env_end_003b
 10238 00006306 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10239 0000630A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10240 0000630E 48FFC6                  	inc rsi
 10241 00006311 48FFC2                  	inc rdx
 10242 00006314 EBEA                    	jmp .L_lambda_simple_env_loop_003b
 10243                                  .L_lambda_simple_env_end_003b:
 10244 00006316 5B                      	pop rbx
 10245 00006317 BE00000000              	mov rsi, 0
 10246                                  .L_lambda_simple_params_loop_003b:	; copy params
 10247 0000631C 4883FE01                	cmp rsi, 1
 10248 00006320 740E                    	je .L_lambda_simple_params_end_003b
 10249 00006322 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10250 00006327 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10251 0000632B 48FFC6                  	inc rsi
 10252 0000632E EBEC                    	jmp .L_lambda_simple_params_loop_003b
 10253                                  .L_lambda_simple_params_end_003b:
 10254 00006330 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10255 00006333 4889C3                  	mov rbx, rax
 10256 00006336 58                      	pop rax
 10257 00006337 C60005                  	mov byte [rax], T_closure
 10258 0000633A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10259 0000633E 48C74009[4B630000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
 10260 00006346 E94B040000              	jmp .L_lambda_simple_end_003b
 10261                                  .L_lambda_simple_code_003b:	; lambda-simple body
 10262 0000634B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10263 00006351 740B                    	je .L_lambda_simple_arity_check_ok_007a
 10264 00006353 FF742410                	push qword [rsp + 8 * 2]
 10265 00006357 6A02                    	push 2
 10266 00006359 E971A90000              	jmp L_error_incorrect_arity_simple
 10267                                  .L_lambda_simple_arity_check_ok_007a:
 10268 0000635E C8000000                	enter 0, 0
 10269 00006362 488B4520                mov rax, qword [rbp + 32]
 10270 00006366 50                      	push rax
 10271 00006367 6A01                    	push 1
 10272 00006369 488B0425[48000000]      	mov rax, qword [free_var_9]
 10273 00006371 803805                  	cmp byte [rax], T_closure 
 10274 00006374 0F8524B90000                    jne L_code_ptr_error
 10275                                  
 10276 0000637A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10277                                  
 10278 0000637E 53                              push rbx
 10279                                  
 10280 0000637F FF5009                          call SOB_CLOSURE_CODE(rax)
 10281                                  
 10282 00006382 483D[02000000]                  	cmp rax, sob_boolean_false
 10283 00006388 0F84BB010000            	je .L_if_else_0017
 10284 0000638E 488B4528                mov rax, qword [rbp + 40]
 10285 00006392 50                      	push rax
 10286 00006393 6A01                    	push 1
 10287 00006395 488B0425[48000000]      	mov rax, qword [free_var_9]
 10288 0000639D 803805                  	cmp byte [rax], T_closure 
 10289 000063A0 0F85F8B80000                    jne L_code_ptr_error
 10290                                  
 10291 000063A6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10292                                  
 10293 000063AA 53                              push rbx
 10294                                  
 10295 000063AB FF5009                          call SOB_CLOSURE_CODE(rax)
 10296                                  
 10297 000063AE 483D[02000000]                  	cmp rax, sob_boolean_false
 10298 000063B4 7472                    	je .L_if_else_001b
 10299 000063B6 488B4528                mov rax, qword [rbp + 40]
 10300 000063BA 50                      	push rax
 10301 000063BB 488B4520                mov rax, qword [rbp + 32]
 10302 000063BF 50                      	push rax
 10303 000063C0 6A02                    	push 2
 10304 000063C2 488B0425[18010000]      	mov rax, qword [free_var_35]
 10305                                  .L_lambda_simple_arity_check_ok_0081:
 10306 000063CA 803805                  	cmp byte [rax], T_closure
 10307                                  
 10308 000063CD 0F85CBB80000                    jne L_code_ptr_error                      ; rax <- proc
 10309                                  
 10310                                  
 10311 000063D3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10312                                  
 10313 000063D7 53                              push rbx                                  ; env pushed
 10314                                  
 10315 000063D8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10316                                  
 10317                                  
 10318 000063DB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10319                                  
 10320                                          
 10321                                          
 10322 000063DE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10323                                  
 10324 000063E2 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10325                                  
 10326                                  
 10327 000063E7 4D89CA                          mov r10, r9
 10328 000063EA 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10329                                  
 10330                                                                                         
 10331 000063EE 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10332 000063F1 4983C404                        add r12, 4
 10333                                  
 10334 000063F5 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10335                                  .L_tc_recycle_frame_loop_0046:
 10336 000063FB 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10337                                  
 10338 000063FF 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10339                                  
 10340                                  
 10341                                  
 10342 00006404 41BE00000000                    mov r14, 0                                ; clean box
 10343                                  
 10344                                  
 10345                                                                  
 10346 0000640A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10347                                  
 10348 0000640E 4983C4FF                        add r12, -1 
 10349                                  
 10350 00006412 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10351 00006416 75E3                    	jne .L_tc_recycle_frame_loop_0046
 10352                                  .L_tc_recycle_frame_done_0046:
 10353 00006418 5D                      	pop rbp                                  ; restore the old rbp
 10354                                  
 10355 00006419 488B4D00                        mov rcx, qword [rbp]
 10356 0000641D 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10357                                            ; rbx <- code(proc)
 10358                                  
 10359 00006421 FFE3                            jmp rbx
 10360 00006423 E91C010000              	jmp .L_if_end_001b
 10361                                  	.L_if_else_001b:
 10362 00006428 488B4528                	mov rax, qword [rbp + 40]
 10363 0000642C 50                      	push rax
 10364 0000642D 6A01                    	push 1
 10365 0000642F 488B0425[40000000]      	mov rax, qword [free_var_8]
 10366 00006437 803805                  	cmp byte [rax], T_closure 
 10367 0000643A 0F855EB80000                    jne L_code_ptr_error
 10368                                  
 10369 00006440 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10370                                  
 10371 00006444 53                              push rbx
 10372                                  
 10373 00006445 FF5009                          call SOB_CLOSURE_CODE(rax)
 10374                                  
 10375 00006448 483D[02000000]                  	cmp rax, sob_boolean_false
 10376 0000644E 0F848B000000            	je .L_if_else_001c
 10377 00006454 488B4528                mov rax, qword [rbp + 40]
 10378 00006458 50                      	push rax
 10379 00006459 488B4520                mov rax, qword [rbp + 32]
 10380 0000645D 50                      	push rax
 10381 0000645E 6A01                    	push 1
 10382 00006460 488B0425[B8000000]      	mov rax, qword [free_var_23]
 10383 00006468 803805                  	cmp byte [rax], T_closure 
 10384 0000646B 0F852DB80000                    jne L_code_ptr_error
 10385                                  
 10386 00006471 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10387                                  
 10388 00006475 53                              push rbx
 10389                                  
 10390 00006476 FF5009                          call SOB_CLOSURE_CODE(rax)
 10391                                  
 10392 00006479 50                              	push rax
 10393 0000647A 6A02                    	push 2
 10394 0000647C 488B0425[F8000000]      	mov rax, qword [free_var_31]
 10395                                  .L_lambda_simple_arity_check_ok_0080:
 10396 00006484 803805                  	cmp byte [rax], T_closure
 10397                                  
 10398 00006487 0F8511B80000                    jne L_code_ptr_error                      ; rax <- proc
 10399                                  
 10400                                  
 10401 0000648D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10402                                  
 10403 00006491 53                              push rbx                                  ; env pushed
 10404                                  
 10405 00006492 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10406                                  
 10407                                  
 10408 00006495 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10409                                  
 10410                                          
 10411                                          
 10412 00006498 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10413                                  
 10414 0000649C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10415                                  
 10416                                  
 10417 000064A1 4D89CA                          mov r10, r9
 10418 000064A4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10419                                  
 10420                                                                                         
 10421 000064A8 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10422 000064AB 4983C404                        add r12, 4
 10423                                  
 10424 000064AF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10425                                  .L_tc_recycle_frame_loop_0045:
 10426 000064B5 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10427                                  
 10428 000064B9 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10429                                  
 10430                                  
 10431                                  
 10432 000064BE 41BE00000000                    mov r14, 0                                ; clean box
 10433                                  
 10434                                  
 10435                                                                  
 10436 000064C4 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10437                                  
 10438 000064C8 4983C4FF                        add r12, -1 
 10439                                  
 10440 000064CC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10441 000064D0 75E3                    	jne .L_tc_recycle_frame_loop_0045
 10442                                  .L_tc_recycle_frame_done_0045:
 10443 000064D2 5D                      	pop rbp                                  ; restore the old rbp
 10444                                  
 10445 000064D3 488B4D00                        mov rcx, qword [rbp]
 10446 000064D7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10447                                            ; rbx <- code(proc)
 10448                                  
 10449 000064DB FFE3                            jmp rbx
 10450 000064DD EB65                    	jmp .L_if_end_001c
 10451                                  	.L_if_else_001c:
 10452 000064DF 6A00                    		push 0
 10453 000064E1 488B4510                mov rax, qword [rbp + 16]
 10454 000064E5 488B00                  mov rax, qword [rax + 0]
 10455 000064E8 488B00                  mov rax, qword [rax + 0]
 10456                                  .L_lambda_simple_arity_check_ok_007f:
 10457 000064EB 803805                  	cmp byte [rax], T_closure
 10458                                  
 10459 000064EE 0F85AAB70000                    jne L_code_ptr_error                      ; rax <- proc
 10460                                  
 10461                                  
 10462 000064F4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10463                                  
 10464 000064F8 53                              push rbx                                  ; env pushed
 10465                                  
 10466 000064F9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10467                                  
 10468                                  
 10469 000064FC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10470                                  
 10471                                          
 10472                                          
 10473 000064FF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10474                                  
 10475 00006503 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10476                                  
 10477                                  
 10478 00006508 4D89CA                          mov r10, r9
 10479 0000650B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10480                                  
 10481                                                                                         
 10482 0000650F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10483 00006512 4983C404                        add r12, 4
 10484                                  
 10485 00006516 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10486                                  .L_tc_recycle_frame_loop_0044:
 10487 0000651C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10488                                  
 10489 00006520 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10490                                  
 10491                                  
 10492                                  
 10493 00006525 41BE00000000                    mov r14, 0                                ; clean box
 10494                                  
 10495                                  
 10496                                                                  
 10497 0000652B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10498                                  
 10499 0000652F 4983C4FF                        add r12, -1 
 10500                                  
 10501 00006533 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10502 00006537 75E3                    	jne .L_tc_recycle_frame_loop_0044
 10503                                  .L_tc_recycle_frame_done_0044:
 10504 00006539 5D                      	pop rbp                                  ; restore the old rbp
 10505                                  
 10506 0000653A 488B4D00                        mov rcx, qword [rbp]
 10507 0000653E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10508                                            ; rbx <- code(proc)
 10509                                  
 10510 00006542 FFE3                            jmp rbx
 10511                                  	.L_if_end_001c:
 10512                                  	.L_if_end_001b:
 10513 00006544 E949020000              	jmp .L_if_end_0017
 10514                                  	.L_if_else_0017:
 10515 00006549 488B4520                	mov rax, qword [rbp + 32]
 10516 0000654D 50                      	push rax
 10517 0000654E 6A01                    	push 1
 10518 00006550 488B0425[40000000]      	mov rax, qword [free_var_8]
 10519 00006558 803805                  	cmp byte [rax], T_closure 
 10520 0000655B 0F853DB70000                    jne L_code_ptr_error
 10521                                  
 10522 00006561 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10523                                  
 10524 00006565 53                              push rbx
 10525                                  
 10526 00006566 FF5009                          call SOB_CLOSURE_CODE(rax)
 10527                                  
 10528 00006569 483D[02000000]                  	cmp rax, sob_boolean_false
 10529 0000656F 0F84B8010000            	je .L_if_else_0018
 10530 00006575 488B4528                mov rax, qword [rbp + 40]
 10531 00006579 50                      	push rax
 10532 0000657A 6A01                    	push 1
 10533 0000657C 488B0425[48000000]      	mov rax, qword [free_var_9]
 10534 00006584 803805                  	cmp byte [rax], T_closure 
 10535 00006587 0F8511B70000                    jne L_code_ptr_error
 10536                                  
 10537 0000658D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10538                                  
 10539 00006591 53                              push rbx
 10540                                  
 10541 00006592 FF5009                          call SOB_CLOSURE_CODE(rax)
 10542                                  
 10543 00006595 483D[02000000]                  	cmp rax, sob_boolean_false
 10544 0000659B 0F848E000000            	je .L_if_else_0019
 10545 000065A1 488B4528                mov rax, qword [rbp + 40]
 10546 000065A5 50                      	push rax
 10547 000065A6 6A01                    	push 1
 10548 000065A8 488B0425[B8000000]      	mov rax, qword [free_var_23]
 10549 000065B0 803805                  	cmp byte [rax], T_closure 
 10550 000065B3 0F85E5B60000                    jne L_code_ptr_error
 10551                                  
 10552 000065B9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10553                                  
 10554 000065BD 53                              push rbx
 10555                                  
 10556 000065BE FF5009                          call SOB_CLOSURE_CODE(rax)
 10557                                  
 10558 000065C1 50                              	push rax
 10559 000065C2 488B4520                mov rax, qword [rbp + 32]
 10560 000065C6 50                      	push rax
 10561 000065C7 6A02                    	push 2
 10562 000065C9 488B0425[F8000000]      	mov rax, qword [free_var_31]
 10563                                  .L_lambda_simple_arity_check_ok_007e:
 10564 000065D1 803805                  	cmp byte [rax], T_closure
 10565                                  
 10566 000065D4 0F85C4B60000                    jne L_code_ptr_error                      ; rax <- proc
 10567                                  
 10568                                  
 10569 000065DA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10570                                  
 10571 000065DE 53                              push rbx                                  ; env pushed
 10572                                  
 10573 000065DF FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10574                                  
 10575                                  
 10576 000065E2 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10577                                  
 10578                                          
 10579                                          
 10580 000065E5 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10581                                  
 10582 000065E9 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10583                                  
 10584                                  
 10585 000065EE 4D89CA                          mov r10, r9
 10586 000065F1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10587                                  
 10588                                                                                         
 10589 000065F5 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10590 000065F8 4983C404                        add r12, 4
 10591                                  
 10592 000065FC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10593                                  .L_tc_recycle_frame_loop_0043:
 10594 00006602 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10595                                  
 10596 00006606 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10597                                  
 10598                                  
 10599                                  
 10600 0000660B 41BE00000000                    mov r14, 0                                ; clean box
 10601                                  
 10602                                  
 10603                                                                  
 10604 00006611 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10605                                  
 10606 00006615 4983C4FF                        add r12, -1 
 10607                                  
 10608 00006619 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10609 0000661D 75E3                    	jne .L_tc_recycle_frame_loop_0043
 10610                                  .L_tc_recycle_frame_done_0043:
 10611 0000661F 5D                      	pop rbp                                  ; restore the old rbp
 10612                                  
 10613 00006620 488B4D00                        mov rcx, qword [rbp]
 10614 00006624 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10615                                            ; rbx <- code(proc)
 10616                                  
 10617 00006628 FFE3                            jmp rbx
 10618 0000662A E9FC000000              	jmp .L_if_end_0019
 10619                                  	.L_if_else_0019:
 10620 0000662F 488B4528                	mov rax, qword [rbp + 40]
 10621 00006633 50                      	push rax
 10622 00006634 6A01                    	push 1
 10623 00006636 488B0425[40000000]      	mov rax, qword [free_var_8]
 10624 0000663E 803805                  	cmp byte [rax], T_closure 
 10625 00006641 0F8557B60000                    jne L_code_ptr_error
 10626                                  
 10627 00006647 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10628                                  
 10629 0000664B 53                              push rbx
 10630                                  
 10631 0000664C FF5009                          call SOB_CLOSURE_CODE(rax)
 10632                                  
 10633 0000664F 483D[02000000]                  	cmp rax, sob_boolean_false
 10634 00006655 746F                    	je .L_if_else_001a
 10635 00006657 488B4528                mov rax, qword [rbp + 40]
 10636 0000665B 50                      	push rax
 10637 0000665C 488B4520                mov rax, qword [rbp + 32]
 10638 00006660 50                      	push rax
 10639 00006661 6A02                    	push 2
 10640 00006663 488B0425[F8000000]      	mov rax, qword [free_var_31]
 10641                                  .L_lambda_simple_arity_check_ok_007d:
 10642 0000666B 803805                  	cmp byte [rax], T_closure
 10643                                  
 10644 0000666E 0F852AB60000                    jne L_code_ptr_error                      ; rax <- proc
 10645                                  
 10646                                  
 10647 00006674 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10648                                  
 10649 00006678 53                              push rbx                                  ; env pushed
 10650                                  
 10651 00006679 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10652                                  
 10653                                  
 10654 0000667C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10655                                  
 10656                                          
 10657                                          
 10658 0000667F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10659                                  
 10660 00006683 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10661                                  
 10662                                  
 10663 00006688 4D89CA                          mov r10, r9
 10664 0000668B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10665                                  
 10666                                                                                         
 10667 0000668F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10668 00006692 4983C404                        add r12, 4
 10669                                  
 10670 00006696 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10671                                  .L_tc_recycle_frame_loop_0042:
 10672 0000669C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10673                                  
 10674 000066A0 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10675                                  
 10676                                  
 10677                                  
 10678 000066A5 41BE00000000                    mov r14, 0                                ; clean box
 10679                                  
 10680                                  
 10681                                                                  
 10682 000066AB 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10683                                  
 10684 000066AF 4983C4FF                        add r12, -1 
 10685                                  
 10686 000066B3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10687 000066B7 75E3                    	jne .L_tc_recycle_frame_loop_0042
 10688                                  .L_tc_recycle_frame_done_0042:
 10689 000066B9 5D                      	pop rbp                                  ; restore the old rbp
 10690                                  
 10691 000066BA 488B4D00                        mov rcx, qword [rbp]
 10692 000066BE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10693                                            ; rbx <- code(proc)
 10694                                  
 10695 000066C2 FFE3                            jmp rbx
 10696 000066C4 EB65                    	jmp .L_if_end_001a
 10697                                  	.L_if_else_001a:
 10698 000066C6 6A00                    		push 0
 10699 000066C8 488B4510                mov rax, qword [rbp + 16]
 10700 000066CC 488B00                  mov rax, qword [rax + 0]
 10701 000066CF 488B00                  mov rax, qword [rax + 0]
 10702                                  .L_lambda_simple_arity_check_ok_007c:
 10703 000066D2 803805                  	cmp byte [rax], T_closure
 10704                                  
 10705 000066D5 0F85C3B50000                    jne L_code_ptr_error                      ; rax <- proc
 10706                                  
 10707                                  
 10708 000066DB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10709                                  
 10710 000066DF 53                              push rbx                                  ; env pushed
 10711                                  
 10712 000066E0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10713                                  
 10714                                  
 10715 000066E3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10716                                  
 10717                                          
 10718                                          
 10719 000066E6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10720                                  
 10721 000066EA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10722                                  
 10723                                  
 10724 000066EF 4D89CA                          mov r10, r9
 10725 000066F2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10726                                  
 10727                                                                                         
 10728 000066F6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10729 000066F9 4983C404                        add r12, 4
 10730                                  
 10731 000066FD 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10732                                  .L_tc_recycle_frame_loop_0041:
 10733 00006703 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10734                                  
 10735 00006707 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10736                                  
 10737                                  
 10738                                  
 10739 0000670C 41BE00000000                    mov r14, 0                                ; clean box
 10740                                  
 10741                                  
 10742                                                                  
 10743 00006712 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10744                                  
 10745 00006716 4983C4FF                        add r12, -1 
 10746                                  
 10747 0000671A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10748 0000671E 75E3                    	jne .L_tc_recycle_frame_loop_0041
 10749                                  .L_tc_recycle_frame_done_0041:
 10750 00006720 5D                      	pop rbp                                  ; restore the old rbp
 10751                                  
 10752 00006721 488B4D00                        mov rcx, qword [rbp]
 10753 00006725 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10754                                            ; rbx <- code(proc)
 10755                                  
 10756 00006729 FFE3                            jmp rbx
 10757                                  	.L_if_end_001a:
 10758                                  	.L_if_end_0019:
 10759 0000672B EB65                    	jmp .L_if_end_0018
 10760                                  	.L_if_else_0018:
 10761 0000672D 6A00                    		push 0
 10762 0000672F 488B4510                mov rax, qword [rbp + 16]
 10763 00006733 488B00                  mov rax, qword [rax + 0]
 10764 00006736 488B00                  mov rax, qword [rax + 0]
 10765                                  .L_lambda_simple_arity_check_ok_007b:
 10766 00006739 803805                  	cmp byte [rax], T_closure
 10767                                  
 10768 0000673C 0F855CB50000                    jne L_code_ptr_error                      ; rax <- proc
 10769                                  
 10770                                  
 10771 00006742 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10772                                  
 10773 00006746 53                              push rbx                                  ; env pushed
 10774                                  
 10775 00006747 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10776                                  
 10777                                  
 10778 0000674A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10779                                  
 10780                                          
 10781                                          
 10782 0000674D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 10783                                  
 10784 00006751 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 10785                                  
 10786                                  
 10787 00006756 4D89CA                          mov r10, r9
 10788 00006759 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 10789                                  
 10790                                                                                         
 10791 0000675D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 10792 00006760 4983C404                        add r12, 4
 10793                                  
 10794 00006764 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 10795                                  .L_tc_recycle_frame_loop_0040:
 10796 0000676A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 10797                                  
 10798 0000676E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 10799                                  
 10800                                  
 10801                                  
 10802 00006773 41BE00000000                    mov r14, 0                                ; clean box
 10803                                  
 10804                                  
 10805                                                                  
 10806 00006779 4983C2FF                        add r10, -1                               ; args_copied_counter--
 10807                                  
 10808 0000677D 4983C4FF                        add r12, -1 
 10809                                  
 10810 00006781 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 10811 00006785 75E3                    	jne .L_tc_recycle_frame_loop_0040
 10812                                  .L_tc_recycle_frame_done_0040:
 10813 00006787 5D                      	pop rbp                                  ; restore the old rbp
 10814                                  
 10815 00006788 488B4D00                        mov rcx, qword [rbp]
 10816 0000678C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 10817                                            ; rbx <- code(proc)
 10818                                  
 10819 00006790 FFE3                            jmp rbx
 10820                                  	.L_if_end_0018:
 10821                                  	.L_if_end_0017:
 10822 00006792 C9                      	leave
 10823 00006793 C22000                  	ret 8 * (2 + 2)
 10824                                  .L_lambda_simple_end_003b:	; new closure is in rax
 10825 00006796 50                      	push rax
 10826 00006797 6A01                    	push 1
 10827 00006799 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10828 0000679E E873A50000              	call malloc
 10829 000067A3 50                      	push rax
 10830 000067A4 BF08000000              	mov rdi, 8 * 1	; new rib
 10831 000067A9 E868A50000              	call malloc
 10832 000067AE 50                      	push rax
 10833 000067AF BF10000000              	mov rdi, 8 * 2	; extended env
 10834 000067B4 E85DA50000              	call malloc
 10835 000067B9 488B7D10                	mov rdi, ENV
 10836 000067BD BE00000000              	mov rsi, 0
 10837 000067C2 BA01000000              	mov rdx, 1
 10838                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
 10839 000067C7 4883FE01                	cmp rsi, 1
 10840 000067CB 7410                    	je .L_lambda_simple_env_end_003c
 10841 000067CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10842 000067D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10843 000067D5 48FFC6                  	inc rsi
 10844 000067D8 48FFC2                  	inc rdx
 10845 000067DB EBEA                    	jmp .L_lambda_simple_env_loop_003c
 10846                                  .L_lambda_simple_env_end_003c:
 10847 000067DD 5B                      	pop rbx
 10848 000067DE BE00000000              	mov rsi, 0
 10849                                  .L_lambda_simple_params_loop_003c:	; copy params
 10850 000067E3 4883FE01                	cmp rsi, 1
 10851 000067E7 740E                    	je .L_lambda_simple_params_end_003c
 10852 000067E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10853 000067EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10854 000067F2 48FFC6                  	inc rsi
 10855 000067F5 EBEC                    	jmp .L_lambda_simple_params_loop_003c
 10856                                  .L_lambda_simple_params_end_003c:
 10857 000067F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10858 000067FA 4889C3                  	mov rbx, rax
 10859 000067FD 58                      	pop rax
 10860 000067FE C60005                  	mov byte [rax], T_closure
 10861 00006801 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10862 00006805 48C74009[12680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
 10863 0000680D E984030000              	jmp .L_lambda_simple_end_003c
 10864                                  .L_lambda_simple_code_003c:	; lambda-simple body
 10865 00006812 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10866 00006818 740B                    	je .L_lambda_simple_arity_check_ok_0082
 10867 0000681A FF742410                	push qword [rsp + 8 * 2]
 10868 0000681E 6A01                    	push 1
 10869 00006820 E9AAA40000              	jmp L_error_incorrect_arity_simple
 10870                                  .L_lambda_simple_arity_check_ok_0082:
 10871 00006825 C8000000                	enter 0, 0
 10872 00006829 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10873 0000682E E8E3A40000              	call malloc
 10874 00006833 50                      	push rax
 10875 00006834 BF08000000              	mov rdi, 8 * 1	; new rib
 10876 00006839 E8D8A40000              	call malloc
 10877 0000683E 50                      	push rax
 10878 0000683F BF18000000              	mov rdi, 8 * 3	; extended env
 10879 00006844 E8CDA40000              	call malloc
 10880 00006849 488B7D10                	mov rdi, ENV
 10881 0000684D BE00000000              	mov rsi, 0
 10882 00006852 BA01000000              	mov rdx, 1
 10883                                  .L_lambda_opt_env_loop_000b:	; ext_env[i + 1] <-- env[i]
 10884 00006857 4883FE02                	cmp rsi, 2
 10885 0000685B 7410                    	je .L_lambda_opt_env_end_000b
 10886 0000685D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10887 00006861 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10888 00006865 48FFC6                  	inc rsi
 10889 00006868 48FFC2                  	inc rdx
 10890 0000686B EBEA                    	jmp .L_lambda_opt_env_loop_000b
 10891                                  .L_lambda_opt_env_end_000b:
 10892 0000686D 5B                      	pop rbx
 10893 0000686E BE00000000              	mov rsi, 0
 10894                                  .L_lambda_opt_params_loop_0015:	; copy params
 10895 00006873 4883FE01                	cmp rsi, 1
 10896 00006877 740E                    	je .L_lambda_opt_params_end_0015
 10897 00006879 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10898 0000687E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10899 00006882 48FFC6                  	inc rsi
 10900 00006885 EBEC                    	jmp .L_lambda_opt_params_loop_0015
 10901                                  .L_lambda_opt_params_end_0015:
 10902 00006887 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10903 0000688A 4889C3                  	mov rbx, rax
 10904 0000688D 58                      	pop rax
 10905 0000688E C60005                  	mov byte [rax], T_closure
 10906 00006891 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10907 00006895 48C74009[A2680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000b
 10908 0000689D E9F0020000              	jmp .L_lambda_opt_end_000b
 10909                                  .L_lambda_opt_code_000b:
 10910 000068A2 4C8B542410              mov r10, qword [rsp+8*2]
 10911 000068A7 4983FA01                cmp r10, 1
 10912 000068AB 740B                    je .L_lambda_opt_arity_check_exact_000b
 10913 000068AD 4983FA01                cmp r10, 1
 10914 000068B1 7F41                    jg .L_lambda_opt_arity_check_more_000b
 10915 000068B3 E92BA40000              jmp L_error_incorrect_arity_opt
 10916                                  .L_lambda_opt_arity_check_exact_000b:
 10917 000068B8 4883EC08                sub rsp, 8
 10918 000068BC BA04000000              mov rdx, 3+1
 10919 000068C1 4889E3                  mov qword rbx, rsp
 10920                                  .L_lambda_opt_params_loop_0016:
 10921 000068C4 488B4B08                mov qword rcx, [rbx+8]
 10922 000068C8 48890B                  mov qword [rbx], rcx
 10923 000068CB 48FFCA                  dec rdx
 10924 000068CE 4883C308                add rbx, 8
 10925 000068D2 4883FA00                cmp rdx, 0
 10926 000068D6 7402                    je .L_lambda_opt_params_end_0016
 10927 000068D8 EBEA                    jmp .L_lambda_opt_params_loop_0016
 10928                                  .L_lambda_opt_params_end_0016:
 10929 000068DA 49FFC2                  inc r10
 10930 000068DD 4C89542410              mov qword [rsp+8*2], r10
 10931 000068E2 4983C202                add r10, 2
 10932 000068E6 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 10933 000068EE 4C8B4D00                mov r9, [rbp]
 10934 000068F2 EB52                    jmp .L_lambda_opt_stack_adjusted_000b
 10935                                  .L_lambda_opt_arity_check_more_000b:
 10936 000068F4 48B8-                   mov rax, sob_nil
 10936 000068F6 [0100000000000000] 
 10937 000068FE 4C8B542410              mov r10, [rsp+2*8]
 10938 00006903 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 10939 00006908 4983EA01                sub r10, 1
 10940                                  .L_lambda_opt_stack_shrink_loop_000b:
 10941 0000690C 4983FA00                cmp r10, 0
 10942 00006910 7424                    je .L_lambda_opt_stack_shrink_loop_exit_000b
 10943 00006912 4889C1                  mov rcx, rax
 10944 00006915 498B10                  mov rdx, [r8]
 10945 00006918 BF11000000              mov rdi, 17
 10946 0000691D E8F4A30000              call malloc
 10947 00006922 C60021                  mov byte [rax], T_pair
 10948 00006925 48894809                mov SOB_PAIR_CDR(rax), rcx
 10949 00006929 48895001                mov SOB_PAIR_CAR(rax), rdx
 10950 0000692D 4983E808                sub r8, 8
 10951 00006931 49FFCA                  dec r10
 10952 00006934 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_000b
 10953                                  .L_lambda_opt_stack_shrink_loop_exit_000b:
 10954 00006936 4889442420              mov [rsp+8*(2+2)], rax
 10955 0000693B 41BA02000000            mov r10, 2
 10956 00006941 4C89542410              mov [rsp+16], r10
 10957                                  .L_lambda_opt_stack_adjusted_000b:
 10958 00006946 4C8B4D00                mov r9, [rbp]
 10959 0000694A C8000000                enter 0, 0
 10960 0000694E 488B4528                mov rax, qword [rbp + 40]
 10961 00006952 50                      	push rax
 10962 00006953 6A01                    	push 1
 10963 00006955 488B0425[00000000]      	mov rax, qword [free_var_0]
 10964 0000695D 803805                  	cmp byte [rax], T_closure 
 10965 00006960 0F8538B30000                    jne L_code_ptr_error
 10966                                  
 10967 00006966 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 10968                                  
 10969 0000696A 53                              push rbx
 10970                                  
 10971 0000696B FF5009                          call SOB_CLOSURE_CODE(rax)
 10972                                  
 10973 0000696E 483D[02000000]                  	cmp rax, sob_boolean_false
 10974 00006974 747A                    	je .L_if_else_001d
 10975 00006976 488B4520                mov rax, qword [rbp + 32]
 10976 0000697A 50                      	push rax
 10977 0000697B 48B8-                   	mov rax, qword (L_constants + 31)
 10977 0000697D [1F00000000000000] 
 10978 00006985 50                      	push rax
 10979 00006986 6A02                    	push 2
 10980 00006988 488B4510                mov rax, qword [rbp + 16]
 10981 0000698C 488B00                  mov rax, qword [rax + 0]
 10982 0000698F 488B00                  mov rax, qword [rax + 0]
 10983                                  .L_lambda_simple_arity_check_ok_0086:
 10984 00006992 803805                  	cmp byte [rax], T_closure
 10985                                  
 10986 00006995 0F8503B30000                    jne L_code_ptr_error                      ; rax <- proc
 10987                                  
 10988                                  
 10989 0000699B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 10990                                  
 10991 0000699F 53                              push rbx                                  ; env pushed
 10992                                  
 10993 000069A0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 10994                                  
 10995                                  
 10996 000069A3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 10997                                  
 10998                                          
 10999                                          
 11000 000069A6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11001                                  
 11002 000069AA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11003                                  
 11004                                  
 11005 000069AF 4D89CA                          mov r10, r9
 11006 000069B2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11007                                  
 11008                                                                                         
 11009 000069B6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11010 000069B9 4983C404                        add r12, 4
 11011                                  
 11012 000069BD 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11013                                  .L_tc_recycle_frame_loop_0049:
 11014 000069C3 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11015                                  
 11016 000069C7 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11017                                  
 11018                                  
 11019                                  
 11020 000069CC 41BE00000000                    mov r14, 0                                ; clean box
 11021                                  
 11022                                  
 11023                                                                  
 11024 000069D2 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11025                                  
 11026 000069D6 4983C4FF                        add r12, -1 
 11027                                  
 11028 000069DA 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11029 000069DE 75E3                    	jne .L_tc_recycle_frame_loop_0049
 11030                                  .L_tc_recycle_frame_done_0049:
 11031 000069E0 5D                      	pop rbp                                  ; restore the old rbp
 11032                                  
 11033 000069E1 488B4D00                        mov rcx, qword [rbp]
 11034 000069E5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11035                                            ; rbx <- code(proc)
 11036                                  
 11037 000069E9 FFE3                            jmp rbx
 11038 000069EB E99A010000              	jmp .L_if_end_001d
 11039                                  	.L_if_else_001d:
 11040 000069F0 488B4528                	mov rax, qword [rbp + 40]
 11041 000069F4 50                      	push rax
 11042 000069F5 48B8-                   	mov rax, qword (L_constants + 31)
 11042 000069F7 [1F00000000000000] 
 11043 000069FF 50                      	push rax
 11044 00006A00 488B0425[08030000]      	mov rax, qword [free_var_97]
 11045 00006A08 50                      	push rax
 11046 00006A09 6A03                    	push 3
 11047 00006A0B 488B0425[F8020000]      	mov rax, qword [free_var_95]
 11048 00006A13 803805                  	cmp byte [rax], T_closure 
 11049 00006A16 0F8582B20000                    jne L_code_ptr_error
 11050                                  
 11051 00006A1C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11052                                  
 11053 00006A20 53                              push rbx
 11054                                  
 11055 00006A21 FF5009                          call SOB_CLOSURE_CODE(rax)
 11056                                  
 11057 00006A24 50                              	push rax
 11058 00006A25 6A01                    	push 1
 11059 00006A27 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11060 00006A2C E8E5A20000              	call malloc
 11061 00006A31 50                      	push rax
 11062 00006A32 BF10000000              	mov rdi, 8 * 2	; new rib
 11063 00006A37 E8DAA20000              	call malloc
 11064 00006A3C 50                      	push rax
 11065 00006A3D BF20000000              	mov rdi, 8 * 4	; extended env
 11066 00006A42 E8CFA20000              	call malloc
 11067 00006A47 488B7D10                	mov rdi, ENV
 11068 00006A4B BE00000000              	mov rsi, 0
 11069 00006A50 BA01000000              	mov rdx, 1
 11070                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 11071 00006A55 4883FE03                	cmp rsi, 3
 11072 00006A59 7410                    	je .L_lambda_simple_env_end_003d
 11073 00006A5B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11074 00006A5F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11075 00006A63 48FFC6                  	inc rsi
 11076 00006A66 48FFC2                  	inc rdx
 11077 00006A69 EBEA                    	jmp .L_lambda_simple_env_loop_003d
 11078                                  .L_lambda_simple_env_end_003d:
 11079 00006A6B 5B                      	pop rbx
 11080 00006A6C BE00000000              	mov rsi, 0
 11081                                  .L_lambda_simple_params_loop_003d:	; copy params
 11082 00006A71 4883FE02                	cmp rsi, 2
 11083 00006A75 740E                    	je .L_lambda_simple_params_end_003d
 11084 00006A77 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11085 00006A7C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11086 00006A80 48FFC6                  	inc rsi
 11087 00006A83 EBEC                    	jmp .L_lambda_simple_params_loop_003d
 11088                                  .L_lambda_simple_params_end_003d:
 11089 00006A85 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11090 00006A88 4889C3                  	mov rbx, rax
 11091 00006A8B 58                      	pop rax
 11092 00006A8C C60005                  	mov byte [rax], T_closure
 11093 00006A8F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11094 00006A93 48C74009[A06A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
 11095 00006A9B E991000000              	jmp .L_lambda_simple_end_003d
 11096                                  .L_lambda_simple_code_003d:	; lambda-simple body
 11097 00006AA0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11098 00006AA6 740B                    	je .L_lambda_simple_arity_check_ok_0083
 11099 00006AA8 FF742410                	push qword [rsp + 8 * 2]
 11100 00006AAC 6A01                    	push 1
 11101 00006AAE E91CA20000              	jmp L_error_incorrect_arity_simple
 11102                                  .L_lambda_simple_arity_check_ok_0083:
 11103 00006AB3 C8000000                	enter 0, 0
 11104 00006AB7 488B4520                mov rax, qword [rbp + 32]
 11105 00006ABB 50                      	push rax
 11106 00006ABC 488B4510                mov rax, qword [rbp + 16]
 11107 00006AC0 488B00                  mov rax, qword [rax + 0]
 11108 00006AC3 488B00                  mov rax, qword [rax + 0]
 11109 00006AC6 50                      	push rax
 11110 00006AC7 6A02                    	push 2
 11111 00006AC9 488B4510                mov rax, qword [rbp + 16]
 11112 00006ACD 488B4008                mov rax, qword [rax + 8]
 11113 00006AD1 488B00                  mov rax, qword [rax + 0]
 11114                                  .L_lambda_simple_arity_check_ok_0084:
 11115 00006AD4 803805                  	cmp byte [rax], T_closure
 11116                                  
 11117 00006AD7 0F85C1B10000                    jne L_code_ptr_error                      ; rax <- proc
 11118                                  
 11119                                  
 11120 00006ADD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11121                                  
 11122 00006AE1 53                              push rbx                                  ; env pushed
 11123                                  
 11124 00006AE2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11125                                  
 11126                                  
 11127 00006AE5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11128                                  
 11129                                          
 11130                                          
 11131 00006AE8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11132                                  
 11133 00006AEC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11134                                  
 11135                                  
 11136 00006AF1 4D89CA                          mov r10, r9
 11137 00006AF4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11138                                  
 11139                                                                                         
 11140 00006AF8 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11141 00006AFB 4983C404                        add r12, 4
 11142                                  
 11143 00006AFF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11144                                  .L_tc_recycle_frame_loop_0047:
 11145 00006B05 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11146                                  
 11147 00006B09 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11148                                  
 11149                                  
 11150                                  
 11151 00006B0E 41BE00000000                    mov r14, 0                                ; clean box
 11152                                  
 11153                                  
 11154                                                                  
 11155 00006B14 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11156                                  
 11157 00006B18 4983C4FF                        add r12, -1 
 11158                                  
 11159 00006B1C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11160 00006B20 75E3                    	jne .L_tc_recycle_frame_loop_0047
 11161                                  .L_tc_recycle_frame_done_0047:
 11162 00006B22 5D                      	pop rbp                                  ; restore the old rbp
 11163                                  
 11164 00006B23 488B4D00                        mov rcx, qword [rbp]
 11165 00006B27 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11166                                            ; rbx <- code(proc)
 11167                                  
 11168 00006B2B FFE3                            jmp rbx
 11169 00006B2D C9                      	leave
 11170 00006B2E C21800                  	ret 8 * (2 + 1)
 11171                                  .L_lambda_simple_end_003d:	; new closure is in rax
 11172                                  .L_lambda_simple_arity_check_ok_0085:
 11173 00006B31 803805                  	cmp byte [rax], T_closure
 11174                                  
 11175 00006B34 0F8564B10000                    jne L_code_ptr_error                      ; rax <- proc
 11176                                  
 11177                                  
 11178 00006B3A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11179                                  
 11180 00006B3E 53                              push rbx                                  ; env pushed
 11181                                  
 11182 00006B3F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11183                                  
 11184                                  
 11185 00006B42 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11186                                  
 11187                                          
 11188                                          
 11189 00006B45 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11190                                  
 11191 00006B49 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11192                                  
 11193                                  
 11194 00006B4E 4D89CA                          mov r10, r9
 11195 00006B51 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11196                                  
 11197                                                                                         
 11198 00006B55 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11199 00006B58 4983C404                        add r12, 4
 11200                                  
 11201 00006B5C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11202                                  .L_tc_recycle_frame_loop_0048:
 11203 00006B62 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11204                                  
 11205 00006B66 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11206                                  
 11207                                  
 11208                                  
 11209 00006B6B 41BE00000000                    mov r14, 0                                ; clean box
 11210                                  
 11211                                  
 11212                                                                  
 11213 00006B71 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11214                                  
 11215 00006B75 4983C4FF                        add r12, -1 
 11216                                  
 11217 00006B79 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11218 00006B7D 75E3                    	jne .L_tc_recycle_frame_loop_0048
 11219                                  .L_tc_recycle_frame_done_0048:
 11220 00006B7F 5D                      	pop rbp                                  ; restore the old rbp
 11221                                  
 11222 00006B80 488B4D00                        mov rcx, qword [rbp]
 11223 00006B84 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11224                                            ; rbx <- code(proc)
 11225                                  
 11226 00006B88 FFE3                            jmp rbx
 11227                                  	.L_if_end_001d:
 11228 00006B8A C9                      leave
 11229 00006B8B 4C8B4D00                mov r9, [rbp]
 11230 00006B8F C22800                  ret 8 * (3 + 2)
 11231                                  .L_lambda_opt_end_000b:	; new closure is in rax
 11232 00006B92 C9                      	leave
 11233 00006B93 C21800                  	ret 8 * (2 + 1)
 11234                                  .L_lambda_simple_end_003c:	; new closure is in rax
 11235                                  .L_lambda_simple_arity_check_ok_0087:
 11236 00006B96 803805                  	cmp byte [rax], T_closure
 11237                                  
 11238 00006B99 0F85FFB00000                    jne L_code_ptr_error                      ; rax <- proc
 11239                                  
 11240                                  
 11241 00006B9F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11242                                  
 11243 00006BA3 53                              push rbx                                  ; env pushed
 11244                                  
 11245 00006BA4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11246                                  
 11247                                  
 11248 00006BA7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11249                                  
 11250                                          
 11251                                          
 11252 00006BAA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11253                                  
 11254 00006BAE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11255                                  
 11256                                  
 11257 00006BB3 4D89CA                          mov r10, r9
 11258 00006BB6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11259                                  
 11260                                                                                         
 11261 00006BBA 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11262 00006BBD 4983C404                        add r12, 4
 11263                                  
 11264 00006BC1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11265                                  .L_tc_recycle_frame_loop_004a:
 11266 00006BC7 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11267                                  
 11268 00006BCB 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11269                                  
 11270                                  
 11271                                  
 11272 00006BD0 41BE00000000                    mov r14, 0                                ; clean box
 11273                                  
 11274                                  
 11275                                                                  
 11276 00006BD6 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11277                                  
 11278 00006BDA 4983C4FF                        add r12, -1 
 11279                                  
 11280 00006BDE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11281 00006BE2 75E3                    	jne .L_tc_recycle_frame_loop_004a
 11282                                  .L_tc_recycle_frame_done_004a:
 11283 00006BE4 5D                      	pop rbp                                  ; restore the old rbp
 11284                                  
 11285 00006BE5 488B4D00                        mov rcx, qword [rbp]
 11286 00006BE9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11287                                            ; rbx <- code(proc)
 11288                                  
 11289 00006BED FFE3                            jmp rbx
 11290 00006BEF C9                      	leave
 11291 00006BF0 C21800                  	ret 8 * (2 + 1)
 11292                                  .L_lambda_simple_end_003a:	; new closure is in rax
 11293 00006BF3 803805                  	cmp byte [rax], T_closure 
 11294 00006BF6 0F85A2B00000                    jne L_code_ptr_error
 11295                                  
 11296 00006BFC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11297                                  
 11298 00006C00 53                              push rbx
 11299                                  
 11300 00006C01 FF5009                          call SOB_CLOSURE_CODE(rax)
 11301                                  
 11302 00006C04 48890425[10030000]              	mov qword [free_var_98], rax
 11303 00006C0C 48B8-                   	mov rax, sob_void
 11303 00006C0E [0000000000000000] 
 11304                                  
 11305 00006C16 4889C7                  	mov rdi, rax
 11306 00006C19 E809A10000              	call print_sexpr_if_not_void
 11307                                  
 11308 00006C1E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11309 00006C23 E8EEA00000              	call malloc
 11310 00006C28 50                      	push rax
 11311 00006C29 BF00000000              	mov rdi, 8 * 0	; new rib
 11312 00006C2E E8E3A00000              	call malloc
 11313 00006C33 50                      	push rax
 11314 00006C34 BF08000000              	mov rdi, 8 * 1	; extended env
 11315 00006C39 E8D8A00000              	call malloc
 11316 00006C3E 488B7D10                	mov rdi, ENV
 11317 00006C42 BE00000000              	mov rsi, 0
 11318 00006C47 BA01000000              	mov rdx, 1
 11319                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 11320 00006C4C 4883FE00                	cmp rsi, 0
 11321 00006C50 7410                    	je .L_lambda_simple_env_end_003e
 11322 00006C52 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11323 00006C56 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11324 00006C5A 48FFC6                  	inc rsi
 11325 00006C5D 48FFC2                  	inc rdx
 11326 00006C60 EBEA                    	jmp .L_lambda_simple_env_loop_003e
 11327                                  .L_lambda_simple_env_end_003e:
 11328 00006C62 5B                      	pop rbx
 11329 00006C63 BE00000000              	mov rsi, 0
 11330                                  .L_lambda_simple_params_loop_003e:	; copy params
 11331 00006C68 4883FE00                	cmp rsi, 0
 11332 00006C6C 740E                    	je .L_lambda_simple_params_end_003e
 11333 00006C6E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11334 00006C73 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11335 00006C77 48FFC6                  	inc rsi
 11336 00006C7A EBEC                    	jmp .L_lambda_simple_params_loop_003e
 11337                                  .L_lambda_simple_params_end_003e:
 11338 00006C7C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11339 00006C7F 4889C3                  	mov rbx, rax
 11340 00006C82 58                      	pop rax
 11341 00006C83 C60005                  	mov byte [rax], T_closure
 11342 00006C86 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11343 00006C8A 48C74009[976C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
 11344 00006C92 E994000000              	jmp .L_lambda_simple_end_003e
 11345                                  .L_lambda_simple_code_003e:	; lambda-simple body
 11346 00006C97 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11347 00006C9D 740B                    	je .L_lambda_simple_arity_check_ok_0088
 11348 00006C9F FF742410                	push qword [rsp + 8 * 2]
 11349 00006CA3 6A00                    	push 0
 11350 00006CA5 E925A00000              	jmp L_error_incorrect_arity_simple
 11351                                  .L_lambda_simple_arity_check_ok_0088:
 11352 00006CAA C8000000                	enter 0, 0
 11353 00006CAE 48B8-                   	mov rax, qword (L_constants + 67)
 11353 00006CB0 [4300000000000000] 
 11354 00006CB8 50                      	push rax
 11355 00006CB9 48B8-                   	mov rax, qword (L_constants + 154)
 11355 00006CBB [9A00000000000000] 
 11356 00006CC3 50                      	push rax
 11357 00006CC4 6A02                    	push 2
 11358 00006CC6 488B0425[30010000]      	mov rax, qword [free_var_38]
 11359                                  .L_lambda_simple_arity_check_ok_0089:
 11360 00006CCE 803805                  	cmp byte [rax], T_closure
 11361                                  
 11362 00006CD1 0F85C7AF0000                    jne L_code_ptr_error                      ; rax <- proc
 11363                                  
 11364                                  
 11365 00006CD7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11366                                  
 11367 00006CDB 53                              push rbx                                  ; env pushed
 11368                                  
 11369 00006CDC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11370                                  
 11371                                  
 11372 00006CDF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11373                                  
 11374                                          
 11375                                          
 11376 00006CE2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11377                                  
 11378 00006CE6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11379                                  
 11380                                  
 11381 00006CEB 4D89CA                          mov r10, r9
 11382 00006CEE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11383                                  
 11384                                                                                         
 11385 00006CF2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11386 00006CF5 4983C404                        add r12, 4
 11387                                  
 11388 00006CF9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11389                                  .L_tc_recycle_frame_loop_004b:
 11390 00006CFF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11391                                  
 11392 00006D03 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11393                                  
 11394                                  
 11395                                  
 11396 00006D08 41BE00000000                    mov r14, 0                                ; clean box
 11397                                  
 11398                                  
 11399                                                                  
 11400 00006D0E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11401                                  
 11402 00006D12 4983C4FF                        add r12, -1 
 11403                                  
 11404 00006D16 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11405 00006D1A 75E3                    	jne .L_tc_recycle_frame_loop_004b
 11406                                  .L_tc_recycle_frame_done_004b:
 11407 00006D1C 5D                      	pop rbp                                  ; restore the old rbp
 11408                                  
 11409 00006D1D 488B4D00                        mov rcx, qword [rbp]
 11410 00006D21 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11411                                            ; rbx <- code(proc)
 11412                                  
 11413 00006D25 FFE3                            jmp rbx
 11414 00006D27 C9                      	leave
 11415 00006D28 C21000                  	ret 8 * (2 + 0)
 11416                                  .L_lambda_simple_end_003e:	; new closure is in rax
 11417 00006D2B 50                      	push rax
 11418 00006D2C 6A01                    	push 1
 11419 00006D2E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11420 00006D33 E8DE9F0000              	call malloc
 11421 00006D38 50                      	push rax
 11422 00006D39 BF00000000              	mov rdi, 8 * 0	; new rib
 11423 00006D3E E8D39F0000              	call malloc
 11424 00006D43 50                      	push rax
 11425 00006D44 BF08000000              	mov rdi, 8 * 1	; extended env
 11426 00006D49 E8C89F0000              	call malloc
 11427 00006D4E 488B7D10                	mov rdi, ENV
 11428 00006D52 BE00000000              	mov rsi, 0
 11429 00006D57 BA01000000              	mov rdx, 1
 11430                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 11431 00006D5C 4883FE00                	cmp rsi, 0
 11432 00006D60 7410                    	je .L_lambda_simple_env_end_003f
 11433 00006D62 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11434 00006D66 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11435 00006D6A 48FFC6                  	inc rsi
 11436 00006D6D 48FFC2                  	inc rdx
 11437 00006D70 EBEA                    	jmp .L_lambda_simple_env_loop_003f
 11438                                  .L_lambda_simple_env_end_003f:
 11439 00006D72 5B                      	pop rbx
 11440 00006D73 BE00000000              	mov rsi, 0
 11441                                  .L_lambda_simple_params_loop_003f:	; copy params
 11442 00006D78 4883FE00                	cmp rsi, 0
 11443 00006D7C 740E                    	je .L_lambda_simple_params_end_003f
 11444 00006D7E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11445 00006D83 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11446 00006D87 48FFC6                  	inc rsi
 11447 00006D8A EBEC                    	jmp .L_lambda_simple_params_loop_003f
 11448                                  .L_lambda_simple_params_end_003f:
 11449 00006D8C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11450 00006D8F 4889C3                  	mov rbx, rax
 11451 00006D92 58                      	pop rax
 11452 00006D93 C60005                  	mov byte [rax], T_closure
 11453 00006D96 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11454 00006D9A 48C74009[A76D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
 11455 00006DA2 E97A070000              	jmp .L_lambda_simple_end_003f
 11456                                  .L_lambda_simple_code_003f:	; lambda-simple body
 11457 00006DA7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11458 00006DAD 740B                    	je .L_lambda_simple_arity_check_ok_008a
 11459 00006DAF FF742410                	push qword [rsp + 8 * 2]
 11460 00006DB3 6A01                    	push 1
 11461 00006DB5 E9159F0000              	jmp L_error_incorrect_arity_simple
 11462                                  .L_lambda_simple_arity_check_ok_008a:
 11463 00006DBA C8000000                	enter 0, 0
 11464 00006DBE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11465 00006DC3 E84E9F0000              	call malloc
 11466 00006DC8 50                      	push rax
 11467 00006DC9 BF08000000              	mov rdi, 8 * 1	; new rib
 11468 00006DCE E8439F0000              	call malloc
 11469 00006DD3 50                      	push rax
 11470 00006DD4 BF10000000              	mov rdi, 8 * 2	; extended env
 11471 00006DD9 E8389F0000              	call malloc
 11472 00006DDE 488B7D10                	mov rdi, ENV
 11473 00006DE2 BE00000000              	mov rsi, 0
 11474 00006DE7 BA01000000              	mov rdx, 1
 11475                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 11476 00006DEC 4883FE01                	cmp rsi, 1
 11477 00006DF0 7410                    	je .L_lambda_simple_env_end_0040
 11478 00006DF2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11479 00006DF6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11480 00006DFA 48FFC6                  	inc rsi
 11481 00006DFD 48FFC2                  	inc rdx
 11482 00006E00 EBEA                    	jmp .L_lambda_simple_env_loop_0040
 11483                                  .L_lambda_simple_env_end_0040:
 11484 00006E02 5B                      	pop rbx
 11485 00006E03 BE00000000              	mov rsi, 0
 11486                                  .L_lambda_simple_params_loop_0040:	; copy params
 11487 00006E08 4883FE01                	cmp rsi, 1
 11488 00006E0C 740E                    	je .L_lambda_simple_params_end_0040
 11489 00006E0E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11490 00006E13 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11491 00006E17 48FFC6                  	inc rsi
 11492 00006E1A EBEC                    	jmp .L_lambda_simple_params_loop_0040
 11493                                  .L_lambda_simple_params_end_0040:
 11494 00006E1C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11495 00006E1F 4889C3                  	mov rbx, rax
 11496 00006E22 58                      	pop rax
 11497 00006E23 C60005                  	mov byte [rax], T_closure
 11498 00006E26 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11499 00006E2A 48C74009[376E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
 11500 00006E32 E94B040000              	jmp .L_lambda_simple_end_0040
 11501                                  .L_lambda_simple_code_0040:	; lambda-simple body
 11502 00006E37 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11503 00006E3D 740B                    	je .L_lambda_simple_arity_check_ok_008b
 11504 00006E3F FF742410                	push qword [rsp + 8 * 2]
 11505 00006E43 6A02                    	push 2
 11506 00006E45 E9859E0000              	jmp L_error_incorrect_arity_simple
 11507                                  .L_lambda_simple_arity_check_ok_008b:
 11508 00006E4A C8000000                	enter 0, 0
 11509 00006E4E 488B4520                mov rax, qword [rbp + 32]
 11510 00006E52 50                      	push rax
 11511 00006E53 6A01                    	push 1
 11512 00006E55 488B0425[48000000]      	mov rax, qword [free_var_9]
 11513 00006E5D 803805                  	cmp byte [rax], T_closure 
 11514 00006E60 0F8538AE0000                    jne L_code_ptr_error
 11515                                  
 11516 00006E66 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11517                                  
 11518 00006E6A 53                              push rbx
 11519                                  
 11520 00006E6B FF5009                          call SOB_CLOSURE_CODE(rax)
 11521                                  
 11522 00006E6E 483D[02000000]                  	cmp rax, sob_boolean_false
 11523 00006E74 0F84BB010000            	je .L_if_else_001e
 11524 00006E7A 488B4528                mov rax, qword [rbp + 40]
 11525 00006E7E 50                      	push rax
 11526 00006E7F 6A01                    	push 1
 11527 00006E81 488B0425[48000000]      	mov rax, qword [free_var_9]
 11528 00006E89 803805                  	cmp byte [rax], T_closure 
 11529 00006E8C 0F850CAE0000                    jne L_code_ptr_error
 11530                                  
 11531 00006E92 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11532                                  
 11533 00006E96 53                              push rbx
 11534                                  
 11535 00006E97 FF5009                          call SOB_CLOSURE_CODE(rax)
 11536                                  
 11537 00006E9A 483D[02000000]                  	cmp rax, sob_boolean_false
 11538 00006EA0 7472                    	je .L_if_else_0022
 11539 00006EA2 488B4528                mov rax, qword [rbp + 40]
 11540 00006EA6 50                      	push rax
 11541 00006EA7 488B4520                mov rax, qword [rbp + 32]
 11542 00006EAB 50                      	push rax
 11543 00006EAC 6A02                    	push 2
 11544 00006EAE 488B0425[20010000]      	mov rax, qword [free_var_36]
 11545                                  .L_lambda_simple_arity_check_ok_0092:
 11546 00006EB6 803805                  	cmp byte [rax], T_closure
 11547                                  
 11548 00006EB9 0F85DFAD0000                    jne L_code_ptr_error                      ; rax <- proc
 11549                                  
 11550                                  
 11551 00006EBF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11552                                  
 11553 00006EC3 53                              push rbx                                  ; env pushed
 11554                                  
 11555 00006EC4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11556                                  
 11557                                  
 11558 00006EC7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11559                                  
 11560                                          
 11561                                          
 11562 00006ECA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11563                                  
 11564 00006ECE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11565                                  
 11566                                  
 11567 00006ED3 4D89CA                          mov r10, r9
 11568 00006ED6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11569                                  
 11570                                                                                         
 11571 00006EDA 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11572 00006EDD 4983C404                        add r12, 4
 11573                                  
 11574 00006EE1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11575                                  .L_tc_recycle_frame_loop_0052:
 11576 00006EE7 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11577                                  
 11578 00006EEB 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11579                                  
 11580                                  
 11581                                  
 11582 00006EF0 41BE00000000                    mov r14, 0                                ; clean box
 11583                                  
 11584                                  
 11585                                                                  
 11586 00006EF6 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11587                                  
 11588 00006EFA 4983C4FF                        add r12, -1 
 11589                                  
 11590 00006EFE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11591 00006F02 75E3                    	jne .L_tc_recycle_frame_loop_0052
 11592                                  .L_tc_recycle_frame_done_0052:
 11593 00006F04 5D                      	pop rbp                                  ; restore the old rbp
 11594                                  
 11595 00006F05 488B4D00                        mov rcx, qword [rbp]
 11596 00006F09 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11597                                            ; rbx <- code(proc)
 11598                                  
 11599 00006F0D FFE3                            jmp rbx
 11600 00006F0F E91C010000              	jmp .L_if_end_0022
 11601                                  	.L_if_else_0022:
 11602 00006F14 488B4528                	mov rax, qword [rbp + 40]
 11603 00006F18 50                      	push rax
 11604 00006F19 6A01                    	push 1
 11605 00006F1B 488B0425[40000000]      	mov rax, qword [free_var_8]
 11606 00006F23 803805                  	cmp byte [rax], T_closure 
 11607 00006F26 0F8572AD0000                    jne L_code_ptr_error
 11608                                  
 11609 00006F2C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11610                                  
 11611 00006F30 53                              push rbx
 11612                                  
 11613 00006F31 FF5009                          call SOB_CLOSURE_CODE(rax)
 11614                                  
 11615 00006F34 483D[02000000]                  	cmp rax, sob_boolean_false
 11616 00006F3A 0F848B000000            	je .L_if_else_0023
 11617 00006F40 488B4528                mov rax, qword [rbp + 40]
 11618 00006F44 50                      	push rax
 11619 00006F45 488B4520                mov rax, qword [rbp + 32]
 11620 00006F49 50                      	push rax
 11621 00006F4A 6A01                    	push 1
 11622 00006F4C 488B0425[B8000000]      	mov rax, qword [free_var_23]
 11623 00006F54 803805                  	cmp byte [rax], T_closure 
 11624 00006F57 0F8541AD0000                    jne L_code_ptr_error
 11625                                  
 11626 00006F5D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11627                                  
 11628 00006F61 53                              push rbx
 11629                                  
 11630 00006F62 FF5009                          call SOB_CLOSURE_CODE(rax)
 11631                                  
 11632 00006F65 50                              	push rax
 11633 00006F66 6A02                    	push 2
 11634 00006F68 488B0425[00010000]      	mov rax, qword [free_var_32]
 11635                                  .L_lambda_simple_arity_check_ok_0091:
 11636 00006F70 803805                  	cmp byte [rax], T_closure
 11637                                  
 11638 00006F73 0F8525AD0000                    jne L_code_ptr_error                      ; rax <- proc
 11639                                  
 11640                                  
 11641 00006F79 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11642                                  
 11643 00006F7D 53                              push rbx                                  ; env pushed
 11644                                  
 11645 00006F7E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11646                                  
 11647                                  
 11648 00006F81 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11649                                  
 11650                                          
 11651                                          
 11652 00006F84 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11653                                  
 11654 00006F88 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11655                                  
 11656                                  
 11657 00006F8D 4D89CA                          mov r10, r9
 11658 00006F90 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11659                                  
 11660                                                                                         
 11661 00006F94 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11662 00006F97 4983C404                        add r12, 4
 11663                                  
 11664 00006F9B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11665                                  .L_tc_recycle_frame_loop_0051:
 11666 00006FA1 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11667                                  
 11668 00006FA5 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11669                                  
 11670                                  
 11671                                  
 11672 00006FAA 41BE00000000                    mov r14, 0                                ; clean box
 11673                                  
 11674                                  
 11675                                                                  
 11676 00006FB0 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11677                                  
 11678 00006FB4 4983C4FF                        add r12, -1 
 11679                                  
 11680 00006FB8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11681 00006FBC 75E3                    	jne .L_tc_recycle_frame_loop_0051
 11682                                  .L_tc_recycle_frame_done_0051:
 11683 00006FBE 5D                      	pop rbp                                  ; restore the old rbp
 11684                                  
 11685 00006FBF 488B4D00                        mov rcx, qword [rbp]
 11686 00006FC3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11687                                            ; rbx <- code(proc)
 11688                                  
 11689 00006FC7 FFE3                            jmp rbx
 11690 00006FC9 EB65                    	jmp .L_if_end_0023
 11691                                  	.L_if_else_0023:
 11692 00006FCB 6A00                    		push 0
 11693 00006FCD 488B4510                mov rax, qword [rbp + 16]
 11694 00006FD1 488B00                  mov rax, qword [rax + 0]
 11695 00006FD4 488B00                  mov rax, qword [rax + 0]
 11696                                  .L_lambda_simple_arity_check_ok_0090:
 11697 00006FD7 803805                  	cmp byte [rax], T_closure
 11698                                  
 11699 00006FDA 0F85BEAC0000                    jne L_code_ptr_error                      ; rax <- proc
 11700                                  
 11701                                  
 11702 00006FE0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11703                                  
 11704 00006FE4 53                              push rbx                                  ; env pushed
 11705                                  
 11706 00006FE5 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11707                                  
 11708                                  
 11709 00006FE8 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11710                                  
 11711                                          
 11712                                          
 11713 00006FEB 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11714                                  
 11715 00006FEF 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11716                                  
 11717                                  
 11718 00006FF4 4D89CA                          mov r10, r9
 11719 00006FF7 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11720                                  
 11721                                                                                         
 11722 00006FFB 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11723 00006FFE 4983C404                        add r12, 4
 11724                                  
 11725 00007002 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11726                                  .L_tc_recycle_frame_loop_0050:
 11727 00007008 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11728                                  
 11729 0000700C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11730                                  
 11731                                  
 11732                                  
 11733 00007011 41BE00000000                    mov r14, 0                                ; clean box
 11734                                  
 11735                                  
 11736                                                                  
 11737 00007017 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11738                                  
 11739 0000701B 4983C4FF                        add r12, -1 
 11740                                  
 11741 0000701F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11742 00007023 75E3                    	jne .L_tc_recycle_frame_loop_0050
 11743                                  .L_tc_recycle_frame_done_0050:
 11744 00007025 5D                      	pop rbp                                  ; restore the old rbp
 11745                                  
 11746 00007026 488B4D00                        mov rcx, qword [rbp]
 11747 0000702A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11748                                            ; rbx <- code(proc)
 11749                                  
 11750 0000702E FFE3                            jmp rbx
 11751                                  	.L_if_end_0023:
 11752                                  	.L_if_end_0022:
 11753 00007030 E949020000              	jmp .L_if_end_001e
 11754                                  	.L_if_else_001e:
 11755 00007035 488B4520                	mov rax, qword [rbp + 32]
 11756 00007039 50                      	push rax
 11757 0000703A 6A01                    	push 1
 11758 0000703C 488B0425[40000000]      	mov rax, qword [free_var_8]
 11759 00007044 803805                  	cmp byte [rax], T_closure 
 11760 00007047 0F8551AC0000                    jne L_code_ptr_error
 11761                                  
 11762 0000704D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11763                                  
 11764 00007051 53                              push rbx
 11765                                  
 11766 00007052 FF5009                          call SOB_CLOSURE_CODE(rax)
 11767                                  
 11768 00007055 483D[02000000]                  	cmp rax, sob_boolean_false
 11769 0000705B 0F84B8010000            	je .L_if_else_001f
 11770 00007061 488B4528                mov rax, qword [rbp + 40]
 11771 00007065 50                      	push rax
 11772 00007066 6A01                    	push 1
 11773 00007068 488B0425[48000000]      	mov rax, qword [free_var_9]
 11774 00007070 803805                  	cmp byte [rax], T_closure 
 11775 00007073 0F8525AC0000                    jne L_code_ptr_error
 11776                                  
 11777 00007079 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11778                                  
 11779 0000707D 53                              push rbx
 11780                                  
 11781 0000707E FF5009                          call SOB_CLOSURE_CODE(rax)
 11782                                  
 11783 00007081 483D[02000000]                  	cmp rax, sob_boolean_false
 11784 00007087 0F848E000000            	je .L_if_else_0020
 11785 0000708D 488B4528                mov rax, qword [rbp + 40]
 11786 00007091 50                      	push rax
 11787 00007092 6A01                    	push 1
 11788 00007094 488B0425[B8000000]      	mov rax, qword [free_var_23]
 11789 0000709C 803805                  	cmp byte [rax], T_closure 
 11790 0000709F 0F85F9AB0000                    jne L_code_ptr_error
 11791                                  
 11792 000070A5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11793                                  
 11794 000070A9 53                              push rbx
 11795                                  
 11796 000070AA FF5009                          call SOB_CLOSURE_CODE(rax)
 11797                                  
 11798 000070AD 50                              	push rax
 11799 000070AE 488B4520                mov rax, qword [rbp + 32]
 11800 000070B2 50                      	push rax
 11801 000070B3 6A02                    	push 2
 11802 000070B5 488B0425[00010000]      	mov rax, qword [free_var_32]
 11803                                  .L_lambda_simple_arity_check_ok_008f:
 11804 000070BD 803805                  	cmp byte [rax], T_closure
 11805                                  
 11806 000070C0 0F85D8AB0000                    jne L_code_ptr_error                      ; rax <- proc
 11807                                  
 11808                                  
 11809 000070C6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11810                                  
 11811 000070CA 53                              push rbx                                  ; env pushed
 11812                                  
 11813 000070CB FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11814                                  
 11815                                  
 11816 000070CE FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11817                                  
 11818                                          
 11819                                          
 11820 000070D1 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11821                                  
 11822 000070D5 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11823                                  
 11824                                  
 11825 000070DA 4D89CA                          mov r10, r9
 11826 000070DD 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11827                                  
 11828                                                                                         
 11829 000070E1 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11830 000070E4 4983C404                        add r12, 4
 11831                                  
 11832 000070E8 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11833                                  .L_tc_recycle_frame_loop_004f:
 11834 000070EE 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11835                                  
 11836 000070F2 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11837                                  
 11838                                  
 11839                                  
 11840 000070F7 41BE00000000                    mov r14, 0                                ; clean box
 11841                                  
 11842                                  
 11843                                                                  
 11844 000070FD 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11845                                  
 11846 00007101 4983C4FF                        add r12, -1 
 11847                                  
 11848 00007105 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11849 00007109 75E3                    	jne .L_tc_recycle_frame_loop_004f
 11850                                  .L_tc_recycle_frame_done_004f:
 11851 0000710B 5D                      	pop rbp                                  ; restore the old rbp
 11852                                  
 11853 0000710C 488B4D00                        mov rcx, qword [rbp]
 11854 00007110 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11855                                            ; rbx <- code(proc)
 11856                                  
 11857 00007114 FFE3                            jmp rbx
 11858 00007116 E9FC000000              	jmp .L_if_end_0020
 11859                                  	.L_if_else_0020:
 11860 0000711B 488B4528                	mov rax, qword [rbp + 40]
 11861 0000711F 50                      	push rax
 11862 00007120 6A01                    	push 1
 11863 00007122 488B0425[40000000]      	mov rax, qword [free_var_8]
 11864 0000712A 803805                  	cmp byte [rax], T_closure 
 11865 0000712D 0F856BAB0000                    jne L_code_ptr_error
 11866                                  
 11867 00007133 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 11868                                  
 11869 00007137 53                              push rbx
 11870                                  
 11871 00007138 FF5009                          call SOB_CLOSURE_CODE(rax)
 11872                                  
 11873 0000713B 483D[02000000]                  	cmp rax, sob_boolean_false
 11874 00007141 746F                    	je .L_if_else_0021
 11875 00007143 488B4528                mov rax, qword [rbp + 40]
 11876 00007147 50                      	push rax
 11877 00007148 488B4520                mov rax, qword [rbp + 32]
 11878 0000714C 50                      	push rax
 11879 0000714D 6A02                    	push 2
 11880 0000714F 488B0425[00010000]      	mov rax, qword [free_var_32]
 11881                                  .L_lambda_simple_arity_check_ok_008e:
 11882 00007157 803805                  	cmp byte [rax], T_closure
 11883                                  
 11884 0000715A 0F853EAB0000                    jne L_code_ptr_error                      ; rax <- proc
 11885                                  
 11886                                  
 11887 00007160 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11888                                  
 11889 00007164 53                              push rbx                                  ; env pushed
 11890                                  
 11891 00007165 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11892                                  
 11893                                  
 11894 00007168 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11895                                  
 11896                                          
 11897                                          
 11898 0000716B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11899                                  
 11900 0000716F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11901                                  
 11902                                  
 11903 00007174 4D89CA                          mov r10, r9
 11904 00007177 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11905                                  
 11906                                                                                         
 11907 0000717B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11908 0000717E 4983C404                        add r12, 4
 11909                                  
 11910 00007182 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11911                                  .L_tc_recycle_frame_loop_004e:
 11912 00007188 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11913                                  
 11914 0000718C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11915                                  
 11916                                  
 11917                                  
 11918 00007191 41BE00000000                    mov r14, 0                                ; clean box
 11919                                  
 11920                                  
 11921                                                                  
 11922 00007197 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11923                                  
 11924 0000719B 4983C4FF                        add r12, -1 
 11925                                  
 11926 0000719F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11927 000071A3 75E3                    	jne .L_tc_recycle_frame_loop_004e
 11928                                  .L_tc_recycle_frame_done_004e:
 11929 000071A5 5D                      	pop rbp                                  ; restore the old rbp
 11930                                  
 11931 000071A6 488B4D00                        mov rcx, qword [rbp]
 11932 000071AA 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11933                                            ; rbx <- code(proc)
 11934                                  
 11935 000071AE FFE3                            jmp rbx
 11936 000071B0 EB65                    	jmp .L_if_end_0021
 11937                                  	.L_if_else_0021:
 11938 000071B2 6A00                    		push 0
 11939 000071B4 488B4510                mov rax, qword [rbp + 16]
 11940 000071B8 488B00                  mov rax, qword [rax + 0]
 11941 000071BB 488B00                  mov rax, qword [rax + 0]
 11942                                  .L_lambda_simple_arity_check_ok_008d:
 11943 000071BE 803805                  	cmp byte [rax], T_closure
 11944                                  
 11945 000071C1 0F85D7AA0000                    jne L_code_ptr_error                      ; rax <- proc
 11946                                  
 11947                                  
 11948 000071C7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 11949                                  
 11950 000071CB 53                              push rbx                                  ; env pushed
 11951                                  
 11952 000071CC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 11953                                  
 11954                                  
 11955 000071CF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 11956                                  
 11957                                          
 11958                                          
 11959 000071D2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 11960                                  
 11961 000071D6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 11962                                  
 11963                                  
 11964 000071DB 4D89CA                          mov r10, r9
 11965 000071DE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 11966                                  
 11967                                                                                         
 11968 000071E2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 11969 000071E5 4983C404                        add r12, 4
 11970                                  
 11971 000071E9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 11972                                  .L_tc_recycle_frame_loop_004d:
 11973 000071EF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 11974                                  
 11975 000071F3 4E8974E500                      mov [rbp + (r12 * 8)], r14
 11976                                  
 11977                                  
 11978                                  
 11979 000071F8 41BE00000000                    mov r14, 0                                ; clean box
 11980                                  
 11981                                  
 11982                                                                  
 11983 000071FE 4983C2FF                        add r10, -1                               ; args_copied_counter--
 11984                                  
 11985 00007202 4983C4FF                        add r12, -1 
 11986                                  
 11987 00007206 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 11988 0000720A 75E3                    	jne .L_tc_recycle_frame_loop_004d
 11989                                  .L_tc_recycle_frame_done_004d:
 11990 0000720C 5D                      	pop rbp                                  ; restore the old rbp
 11991                                  
 11992 0000720D 488B4D00                        mov rcx, qword [rbp]
 11993 00007211 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 11994                                            ; rbx <- code(proc)
 11995                                  
 11996 00007215 FFE3                            jmp rbx
 11997                                  	.L_if_end_0021:
 11998                                  	.L_if_end_0020:
 11999 00007217 EB65                    	jmp .L_if_end_001f
 12000                                  	.L_if_else_001f:
 12001 00007219 6A00                    		push 0
 12002 0000721B 488B4510                mov rax, qword [rbp + 16]
 12003 0000721F 488B00                  mov rax, qword [rax + 0]
 12004 00007222 488B00                  mov rax, qword [rax + 0]
 12005                                  .L_lambda_simple_arity_check_ok_008c:
 12006 00007225 803805                  	cmp byte [rax], T_closure
 12007                                  
 12008 00007228 0F8570AA0000                    jne L_code_ptr_error                      ; rax <- proc
 12009                                  
 12010                                  
 12011 0000722E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12012                                  
 12013 00007232 53                              push rbx                                  ; env pushed
 12014                                  
 12015 00007233 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12016                                  
 12017                                  
 12018 00007236 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12019                                  
 12020                                          
 12021                                          
 12022 00007239 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12023                                  
 12024 0000723D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12025                                  
 12026                                  
 12027 00007242 4D89CA                          mov r10, r9
 12028 00007245 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12029                                  
 12030                                                                                         
 12031 00007249 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12032 0000724C 4983C404                        add r12, 4
 12033                                  
 12034 00007250 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12035                                  .L_tc_recycle_frame_loop_004c:
 12036 00007256 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12037                                  
 12038 0000725A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12039                                  
 12040                                  
 12041                                  
 12042 0000725F 41BE00000000                    mov r14, 0                                ; clean box
 12043                                  
 12044                                  
 12045                                                                  
 12046 00007265 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12047                                  
 12048 00007269 4983C4FF                        add r12, -1 
 12049                                  
 12050 0000726D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12051 00007271 75E3                    	jne .L_tc_recycle_frame_loop_004c
 12052                                  .L_tc_recycle_frame_done_004c:
 12053 00007273 5D                      	pop rbp                                  ; restore the old rbp
 12054                                  
 12055 00007274 488B4D00                        mov rcx, qword [rbp]
 12056 00007278 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12057                                            ; rbx <- code(proc)
 12058                                  
 12059 0000727C FFE3                            jmp rbx
 12060                                  	.L_if_end_001f:
 12061                                  	.L_if_end_001e:
 12062 0000727E C9                      	leave
 12063 0000727F C22000                  	ret 8 * (2 + 2)
 12064                                  .L_lambda_simple_end_0040:	; new closure is in rax
 12065 00007282 50                      	push rax
 12066 00007283 6A01                    	push 1
 12067 00007285 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12068 0000728A E8879A0000              	call malloc
 12069 0000728F 50                      	push rax
 12070 00007290 BF08000000              	mov rdi, 8 * 1	; new rib
 12071 00007295 E87C9A0000              	call malloc
 12072 0000729A 50                      	push rax
 12073 0000729B BF10000000              	mov rdi, 8 * 2	; extended env
 12074 000072A0 E8719A0000              	call malloc
 12075 000072A5 488B7D10                	mov rdi, ENV
 12076 000072A9 BE00000000              	mov rsi, 0
 12077 000072AE BA01000000              	mov rdx, 1
 12078                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 12079 000072B3 4883FE01                	cmp rsi, 1
 12080 000072B7 7410                    	je .L_lambda_simple_env_end_0041
 12081 000072B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12082 000072BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12083 000072C1 48FFC6                  	inc rsi
 12084 000072C4 48FFC2                  	inc rdx
 12085 000072C7 EBEA                    	jmp .L_lambda_simple_env_loop_0041
 12086                                  .L_lambda_simple_env_end_0041:
 12087 000072C9 5B                      	pop rbx
 12088 000072CA BE00000000              	mov rsi, 0
 12089                                  .L_lambda_simple_params_loop_0041:	; copy params
 12090 000072CF 4883FE01                	cmp rsi, 1
 12091 000072D3 740E                    	je .L_lambda_simple_params_end_0041
 12092 000072D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12093 000072DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12094 000072DE 48FFC6                  	inc rsi
 12095 000072E1 EBEC                    	jmp .L_lambda_simple_params_loop_0041
 12096                                  .L_lambda_simple_params_end_0041:
 12097 000072E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12098 000072E6 4889C3                  	mov rbx, rax
 12099 000072E9 58                      	pop rax
 12100 000072EA C60005                  	mov byte [rax], T_closure
 12101 000072ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12102 000072F1 48C74009[FE720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
 12103 000072F9 E9C6010000              	jmp .L_lambda_simple_end_0041
 12104                                  .L_lambda_simple_code_0041:	; lambda-simple body
 12105 000072FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12106 00007304 740B                    	je .L_lambda_simple_arity_check_ok_0093
 12107 00007306 FF742410                	push qword [rsp + 8 * 2]
 12108 0000730A 6A01                    	push 1
 12109 0000730C E9BE990000              	jmp L_error_incorrect_arity_simple
 12110                                  .L_lambda_simple_arity_check_ok_0093:
 12111 00007311 C8000000                	enter 0, 0
 12112 00007315 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12113 0000731A E8F7990000              	call malloc
 12114 0000731F 50                      	push rax
 12115 00007320 BF08000000              	mov rdi, 8 * 1	; new rib
 12116 00007325 E8EC990000              	call malloc
 12117 0000732A 50                      	push rax
 12118 0000732B BF18000000              	mov rdi, 8 * 3	; extended env
 12119 00007330 E8E1990000              	call malloc
 12120 00007335 488B7D10                	mov rdi, ENV
 12121 00007339 BE00000000              	mov rsi, 0
 12122 0000733E BA01000000              	mov rdx, 1
 12123                                  .L_lambda_opt_env_loop_000c:	; ext_env[i + 1] <-- env[i]
 12124 00007343 4883FE02                	cmp rsi, 2
 12125 00007347 7410                    	je .L_lambda_opt_env_end_000c
 12126 00007349 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12127 0000734D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12128 00007351 48FFC6                  	inc rsi
 12129 00007354 48FFC2                  	inc rdx
 12130 00007357 EBEA                    	jmp .L_lambda_opt_env_loop_000c
 12131                                  .L_lambda_opt_env_end_000c:
 12132 00007359 5B                      	pop rbx
 12133 0000735A BE00000000              	mov rsi, 0
 12134                                  .L_lambda_opt_params_loop_0017:	; copy params
 12135 0000735F 4883FE01                	cmp rsi, 1
 12136 00007363 740E                    	je .L_lambda_opt_params_end_0017
 12137 00007365 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12138 0000736A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12139 0000736E 48FFC6                  	inc rsi
 12140 00007371 EBEC                    	jmp .L_lambda_opt_params_loop_0017
 12141                                  .L_lambda_opt_params_end_0017:
 12142 00007373 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12143 00007376 4889C3                  	mov rbx, rax
 12144 00007379 58                      	pop rax
 12145 0000737A C60005                  	mov byte [rax], T_closure
 12146 0000737D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12147 00007381 48C74009[8E730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000c
 12148 00007389 E932010000              	jmp .L_lambda_opt_end_000c
 12149                                  .L_lambda_opt_code_000c:
 12150 0000738E 4C8B542410              mov r10, qword [rsp+8*2]
 12151 00007393 4983FA00                cmp r10, 0
 12152 00007397 740B                    je .L_lambda_opt_arity_check_exact_000c
 12153 00007399 4983FA00                cmp r10, 0
 12154 0000739D 7F41                    jg .L_lambda_opt_arity_check_more_000c
 12155 0000739F E93F990000              jmp L_error_incorrect_arity_opt
 12156                                  .L_lambda_opt_arity_check_exact_000c:
 12157 000073A4 4883EC08                sub rsp, 8
 12158 000073A8 BA03000000              mov rdx, 3+0
 12159 000073AD 4889E3                  mov qword rbx, rsp
 12160                                  .L_lambda_opt_params_loop_0018:
 12161 000073B0 488B4B08                mov qword rcx, [rbx+8]
 12162 000073B4 48890B                  mov qword [rbx], rcx
 12163 000073B7 48FFCA                  dec rdx
 12164 000073BA 4883C308                add rbx, 8
 12165 000073BE 4883FA00                cmp rdx, 0
 12166 000073C2 7402                    je .L_lambda_opt_params_end_0018
 12167 000073C4 EBEA                    jmp .L_lambda_opt_params_loop_0018
 12168                                  .L_lambda_opt_params_end_0018:
 12169 000073C6 49FFC2                  inc r10
 12170 000073C9 4C89542410              mov qword [rsp+8*2], r10
 12171 000073CE 4983C202                add r10, 2
 12172 000073D2 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 12173 000073DA 4C8B4D00                mov r9, [rbp]
 12174 000073DE EB52                    jmp .L_lambda_opt_stack_adjusted_000c
 12175                                  .L_lambda_opt_arity_check_more_000c:
 12176 000073E0 48B8-                   mov rax, sob_nil
 12176 000073E2 [0100000000000000] 
 12177 000073EA 4C8B542410              mov r10, [rsp+2*8]
 12178 000073EF 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 12179 000073F4 4983EA00                sub r10, 0
 12180                                  .L_lambda_opt_stack_shrink_loop_000c:
 12181 000073F8 4983FA00                cmp r10, 0
 12182 000073FC 7424                    je .L_lambda_opt_stack_shrink_loop_exit_000c
 12183 000073FE 4889C1                  mov rcx, rax
 12184 00007401 498B10                  mov rdx, [r8]
 12185 00007404 BF11000000              mov rdi, 17
 12186 00007409 E808990000              call malloc
 12187 0000740E C60021                  mov byte [rax], T_pair
 12188 00007411 48894809                mov SOB_PAIR_CDR(rax), rcx
 12189 00007415 48895001                mov SOB_PAIR_CAR(rax), rdx
 12190 00007419 4983E808                sub r8, 8
 12191 0000741D 49FFCA                  dec r10
 12192 00007420 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_000c
 12193                                  .L_lambda_opt_stack_shrink_loop_exit_000c:
 12194 00007422 4889442418              mov [rsp+8*(2+1)], rax
 12195 00007427 41BA01000000            mov r10, 1
 12196 0000742D 4C89542410              mov [rsp+16], r10
 12197                                  .L_lambda_opt_stack_adjusted_000c:
 12198 00007432 4C8B4D00                mov r9, [rbp]
 12199 00007436 C8000000                enter 0, 0
 12200 0000743A 488B4520                mov rax, qword [rbp + 32]
 12201 0000743E 50                      	push rax
 12202 0000743F 48B8-                   	mov rax, qword (L_constants + 127)
 12202 00007441 [7F00000000000000] 
 12203 00007449 50                      	push rax
 12204 0000744A 488B4510                mov rax, qword [rbp + 16]
 12205 0000744E 488B00                  mov rax, qword [rax + 0]
 12206 00007451 488B00                  mov rax, qword [rax + 0]
 12207 00007454 50                      	push rax
 12208 00007455 6A03                    	push 3
 12209 00007457 488B0425[F8020000]      	mov rax, qword [free_var_95]
 12210                                  .L_lambda_simple_arity_check_ok_0094:
 12211 0000745F 803805                  	cmp byte [rax], T_closure
 12212                                  
 12213 00007462 0F8536A80000                    jne L_code_ptr_error                      ; rax <- proc
 12214                                  
 12215                                  
 12216 00007468 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12217                                  
 12218 0000746C 53                              push rbx                                  ; env pushed
 12219                                  
 12220 0000746D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12221                                  
 12222                                  
 12223 00007470 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12224                                  
 12225                                          
 12226                                          
 12227 00007473 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12228                                  
 12229 00007477 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12230                                  
 12231                                  
 12232 0000747C 4D89CA                          mov r10, r9
 12233 0000747F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12234                                  
 12235                                                                                         
 12236 00007483 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12237 00007486 4983C404                        add r12, 4
 12238                                  
 12239 0000748A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12240                                  .L_tc_recycle_frame_loop_0053:
 12241 00007490 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12242                                  
 12243 00007494 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12244                                  
 12245                                  
 12246                                  
 12247 00007499 41BE00000000                    mov r14, 0                                ; clean box
 12248                                  
 12249                                  
 12250                                                                  
 12251 0000749F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12252                                  
 12253 000074A3 4983C4FF                        add r12, -1 
 12254                                  
 12255 000074A7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12256 000074AB 75E3                    	jne .L_tc_recycle_frame_loop_0053
 12257                                  .L_tc_recycle_frame_done_0053:
 12258 000074AD 5D                      	pop rbp                                  ; restore the old rbp
 12259                                  
 12260 000074AE 488B4D00                        mov rcx, qword [rbp]
 12261 000074B2 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12262                                            ; rbx <- code(proc)
 12263                                  
 12264 000074B6 FFE3                            jmp rbx
 12265 000074B8 C9                      leave
 12266 000074B9 4C8B4D00                mov r9, [rbp]
 12267 000074BD C22000                  ret 8 * (3 + 1)
 12268                                  .L_lambda_opt_end_000c:	; new closure is in rax
 12269 000074C0 C9                      	leave
 12270 000074C1 C21800                  	ret 8 * (2 + 1)
 12271                                  .L_lambda_simple_end_0041:	; new closure is in rax
 12272                                  .L_lambda_simple_arity_check_ok_0095:
 12273 000074C4 803805                  	cmp byte [rax], T_closure
 12274                                  
 12275 000074C7 0F85D1A70000                    jne L_code_ptr_error                      ; rax <- proc
 12276                                  
 12277                                  
 12278 000074CD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12279                                  
 12280 000074D1 53                              push rbx                                  ; env pushed
 12281                                  
 12282 000074D2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12283                                  
 12284                                  
 12285 000074D5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12286                                  
 12287                                          
 12288                                          
 12289 000074D8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12290                                  
 12291 000074DC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12292                                  
 12293                                  
 12294 000074E1 4D89CA                          mov r10, r9
 12295 000074E4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12296                                  
 12297                                                                                         
 12298 000074E8 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12299 000074EB 4983C404                        add r12, 4
 12300                                  
 12301 000074EF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12302                                  .L_tc_recycle_frame_loop_0054:
 12303 000074F5 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12304                                  
 12305 000074F9 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12306                                  
 12307                                  
 12308                                  
 12309 000074FE 41BE00000000                    mov r14, 0                                ; clean box
 12310                                  
 12311                                  
 12312                                                                  
 12313 00007504 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12314                                  
 12315 00007508 4983C4FF                        add r12, -1 
 12316                                  
 12317 0000750C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12318 00007510 75E3                    	jne .L_tc_recycle_frame_loop_0054
 12319                                  .L_tc_recycle_frame_done_0054:
 12320 00007512 5D                      	pop rbp                                  ; restore the old rbp
 12321                                  
 12322 00007513 488B4D00                        mov rcx, qword [rbp]
 12323 00007517 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12324                                            ; rbx <- code(proc)
 12325                                  
 12326 0000751B FFE3                            jmp rbx
 12327 0000751D C9                      	leave
 12328 0000751E C21800                  	ret 8 * (2 + 1)
 12329                                  .L_lambda_simple_end_003f:	; new closure is in rax
 12330 00007521 803805                  	cmp byte [rax], T_closure 
 12331 00007524 0F8574A70000                    jne L_code_ptr_error
 12332                                  
 12333 0000752A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12334                                  
 12335 0000752E 53                              push rbx
 12336                                  
 12337 0000752F FF5009                          call SOB_CLOSURE_CODE(rax)
 12338                                  
 12339 00007532 48890425[18030000]              	mov qword [free_var_99], rax
 12340 0000753A 48B8-                   	mov rax, sob_void
 12340 0000753C [0000000000000000] 
 12341                                  
 12342 00007544 4889C7                  	mov rdi, rax
 12343 00007547 E8DB970000              	call print_sexpr_if_not_void
 12344                                  
 12345 0000754C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12346 00007551 E8C0970000              	call malloc
 12347 00007556 50                      	push rax
 12348 00007557 BF00000000              	mov rdi, 8 * 0	; new rib
 12349 0000755C E8B5970000              	call malloc
 12350 00007561 50                      	push rax
 12351 00007562 BF08000000              	mov rdi, 8 * 1	; extended env
 12352 00007567 E8AA970000              	call malloc
 12353 0000756C 488B7D10                	mov rdi, ENV
 12354 00007570 BE00000000              	mov rsi, 0
 12355 00007575 BA01000000              	mov rdx, 1
 12356                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 12357 0000757A 4883FE00                	cmp rsi, 0
 12358 0000757E 7410                    	je .L_lambda_simple_env_end_0042
 12359 00007580 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12360 00007584 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12361 00007588 48FFC6                  	inc rsi
 12362 0000758B 48FFC2                  	inc rdx
 12363 0000758E EBEA                    	jmp .L_lambda_simple_env_loop_0042
 12364                                  .L_lambda_simple_env_end_0042:
 12365 00007590 5B                      	pop rbx
 12366 00007591 BE00000000              	mov rsi, 0
 12367                                  .L_lambda_simple_params_loop_0042:	; copy params
 12368 00007596 4883FE00                	cmp rsi, 0
 12369 0000759A 740E                    	je .L_lambda_simple_params_end_0042
 12370 0000759C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12371 000075A1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12372 000075A5 48FFC6                  	inc rsi
 12373 000075A8 EBEC                    	jmp .L_lambda_simple_params_loop_0042
 12374                                  .L_lambda_simple_params_end_0042:
 12375 000075AA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12376 000075AD 4889C3                  	mov rbx, rax
 12377 000075B0 58                      	pop rax
 12378 000075B1 C60005                  	mov byte [rax], T_closure
 12379 000075B4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12380 000075B8 48C74009[C5750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
 12381 000075C0 E994000000              	jmp .L_lambda_simple_end_0042
 12382                                  .L_lambda_simple_code_0042:	; lambda-simple body
 12383 000075C5 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12384 000075CB 740B                    	je .L_lambda_simple_arity_check_ok_0096
 12385 000075CD FF742410                	push qword [rsp + 8 * 2]
 12386 000075D1 6A00                    	push 0
 12387 000075D3 E9F7960000              	jmp L_error_incorrect_arity_simple
 12388                                  .L_lambda_simple_arity_check_ok_0096:
 12389 000075D8 C8000000                	enter 0, 0
 12390 000075DC 48B8-                   	mov rax, qword (L_constants + 67)
 12390 000075DE [4300000000000000] 
 12391 000075E6 50                      	push rax
 12392 000075E7 48B8-                   	mov rax, qword (L_constants + 173)
 12392 000075E9 [AD00000000000000] 
 12393 000075F1 50                      	push rax
 12394 000075F2 6A02                    	push 2
 12395 000075F4 488B0425[30010000]      	mov rax, qword [free_var_38]
 12396                                  .L_lambda_simple_arity_check_ok_0097:
 12397 000075FC 803805                  	cmp byte [rax], T_closure
 12398                                  
 12399 000075FF 0F8599A60000                    jne L_code_ptr_error                      ; rax <- proc
 12400                                  
 12401                                  
 12402 00007605 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12403                                  
 12404 00007609 53                              push rbx                                  ; env pushed
 12405                                  
 12406 0000760A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12407                                  
 12408                                  
 12409 0000760D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12410                                  
 12411                                          
 12412                                          
 12413 00007610 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12414                                  
 12415 00007614 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12416                                  
 12417                                  
 12418 00007619 4D89CA                          mov r10, r9
 12419 0000761C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12420                                  
 12421                                                                                         
 12422 00007620 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12423 00007623 4983C404                        add r12, 4
 12424                                  
 12425 00007627 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12426                                  .L_tc_recycle_frame_loop_0055:
 12427 0000762D 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12428                                  
 12429 00007631 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12430                                  
 12431                                  
 12432                                  
 12433 00007636 41BE00000000                    mov r14, 0                                ; clean box
 12434                                  
 12435                                  
 12436                                                                  
 12437 0000763C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12438                                  
 12439 00007640 4983C4FF                        add r12, -1 
 12440                                  
 12441 00007644 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12442 00007648 75E3                    	jne .L_tc_recycle_frame_loop_0055
 12443                                  .L_tc_recycle_frame_done_0055:
 12444 0000764A 5D                      	pop rbp                                  ; restore the old rbp
 12445                                  
 12446 0000764B 488B4D00                        mov rcx, qword [rbp]
 12447 0000764F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12448                                            ; rbx <- code(proc)
 12449                                  
 12450 00007653 FFE3                            jmp rbx
 12451 00007655 C9                      	leave
 12452 00007656 C21000                  	ret 8 * (2 + 0)
 12453                                  .L_lambda_simple_end_0042:	; new closure is in rax
 12454 00007659 50                      	push rax
 12455 0000765A 6A01                    	push 1
 12456 0000765C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12457 00007661 E8B0960000              	call malloc
 12458 00007666 50                      	push rax
 12459 00007667 BF00000000              	mov rdi, 8 * 0	; new rib
 12460 0000766C E8A5960000              	call malloc
 12461 00007671 50                      	push rax
 12462 00007672 BF08000000              	mov rdi, 8 * 1	; extended env
 12463 00007677 E89A960000              	call malloc
 12464 0000767C 488B7D10                	mov rdi, ENV
 12465 00007680 BE00000000              	mov rsi, 0
 12466 00007685 BA01000000              	mov rdx, 1
 12467                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 12468 0000768A 4883FE00                	cmp rsi, 0
 12469 0000768E 7410                    	je .L_lambda_simple_env_end_0043
 12470 00007690 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12471 00007694 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12472 00007698 48FFC6                  	inc rsi
 12473 0000769B 48FFC2                  	inc rdx
 12474 0000769E EBEA                    	jmp .L_lambda_simple_env_loop_0043
 12475                                  .L_lambda_simple_env_end_0043:
 12476 000076A0 5B                      	pop rbx
 12477 000076A1 BE00000000              	mov rsi, 0
 12478                                  .L_lambda_simple_params_loop_0043:	; copy params
 12479 000076A6 4883FE00                	cmp rsi, 0
 12480 000076AA 740E                    	je .L_lambda_simple_params_end_0043
 12481 000076AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12482 000076B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12483 000076B5 48FFC6                  	inc rsi
 12484 000076B8 EBEC                    	jmp .L_lambda_simple_params_loop_0043
 12485                                  .L_lambda_simple_params_end_0043:
 12486 000076BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12487 000076BD 4889C3                  	mov rbx, rax
 12488 000076C0 58                      	pop rax
 12489 000076C1 C60005                  	mov byte [rax], T_closure
 12490 000076C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12491 000076C8 48C74009[D5760000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
 12492 000076D0 E938090000              	jmp .L_lambda_simple_end_0043
 12493                                  .L_lambda_simple_code_0043:	; lambda-simple body
 12494 000076D5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12495 000076DB 740B                    	je .L_lambda_simple_arity_check_ok_0098
 12496 000076DD FF742410                	push qword [rsp + 8 * 2]
 12497 000076E1 6A01                    	push 1
 12498 000076E3 E9E7950000              	jmp L_error_incorrect_arity_simple
 12499                                  .L_lambda_simple_arity_check_ok_0098:
 12500 000076E8 C8000000                	enter 0, 0
 12501 000076EC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12502 000076F1 E820960000              	call malloc
 12503 000076F6 50                      	push rax
 12504 000076F7 BF08000000              	mov rdi, 8 * 1	; new rib
 12505 000076FC E815960000              	call malloc
 12506 00007701 50                      	push rax
 12507 00007702 BF10000000              	mov rdi, 8 * 2	; extended env
 12508 00007707 E80A960000              	call malloc
 12509 0000770C 488B7D10                	mov rdi, ENV
 12510 00007710 BE00000000              	mov rsi, 0
 12511 00007715 BA01000000              	mov rdx, 1
 12512                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 12513 0000771A 4883FE01                	cmp rsi, 1
 12514 0000771E 7410                    	je .L_lambda_simple_env_end_0044
 12515 00007720 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12516 00007724 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12517 00007728 48FFC6                  	inc rsi
 12518 0000772B 48FFC2                  	inc rdx
 12519 0000772E EBEA                    	jmp .L_lambda_simple_env_loop_0044
 12520                                  .L_lambda_simple_env_end_0044:
 12521 00007730 5B                      	pop rbx
 12522 00007731 BE00000000              	mov rsi, 0
 12523                                  .L_lambda_simple_params_loop_0044:	; copy params
 12524 00007736 4883FE01                	cmp rsi, 1
 12525 0000773A 740E                    	je .L_lambda_simple_params_end_0044
 12526 0000773C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12527 00007741 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12528 00007745 48FFC6                  	inc rsi
 12529 00007748 EBEC                    	jmp .L_lambda_simple_params_loop_0044
 12530                                  .L_lambda_simple_params_end_0044:
 12531 0000774A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12532 0000774D 4889C3                  	mov rbx, rax
 12533 00007750 58                      	pop rax
 12534 00007751 C60005                  	mov byte [rax], T_closure
 12535 00007754 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12536 00007758 48C74009[65770000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
 12537 00007760 E94B040000              	jmp .L_lambda_simple_end_0044
 12538                                  .L_lambda_simple_code_0044:	; lambda-simple body
 12539 00007765 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12540 0000776B 740B                    	je .L_lambda_simple_arity_check_ok_0099
 12541 0000776D FF742410                	push qword [rsp + 8 * 2]
 12542 00007771 6A02                    	push 2
 12543 00007773 E957950000              	jmp L_error_incorrect_arity_simple
 12544                                  .L_lambda_simple_arity_check_ok_0099:
 12545 00007778 C8000000                	enter 0, 0
 12546 0000777C 488B4520                mov rax, qword [rbp + 32]
 12547 00007780 50                      	push rax
 12548 00007781 6A01                    	push 1
 12549 00007783 488B0425[48000000]      	mov rax, qword [free_var_9]
 12550 0000778B 803805                  	cmp byte [rax], T_closure 
 12551 0000778E 0F850AA50000                    jne L_code_ptr_error
 12552                                  
 12553 00007794 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12554                                  
 12555 00007798 53                              push rbx
 12556                                  
 12557 00007799 FF5009                          call SOB_CLOSURE_CODE(rax)
 12558                                  
 12559 0000779C 483D[02000000]                  	cmp rax, sob_boolean_false
 12560 000077A2 0F84BB010000            	je .L_if_else_0024
 12561 000077A8 488B4528                mov rax, qword [rbp + 40]
 12562 000077AC 50                      	push rax
 12563 000077AD 6A01                    	push 1
 12564 000077AF 488B0425[48000000]      	mov rax, qword [free_var_9]
 12565 000077B7 803805                  	cmp byte [rax], T_closure 
 12566 000077BA 0F85DEA40000                    jne L_code_ptr_error
 12567                                  
 12568 000077C0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12569                                  
 12570 000077C4 53                              push rbx
 12571                                  
 12572 000077C5 FF5009                          call SOB_CLOSURE_CODE(rax)
 12573                                  
 12574 000077C8 483D[02000000]                  	cmp rax, sob_boolean_false
 12575 000077CE 7472                    	je .L_if_else_0028
 12576 000077D0 488B4528                mov rax, qword [rbp + 40]
 12577 000077D4 50                      	push rax
 12578 000077D5 488B4520                mov rax, qword [rbp + 32]
 12579 000077D9 50                      	push rax
 12580 000077DA 6A02                    	push 2
 12581 000077DC 488B0425[28010000]      	mov rax, qword [free_var_37]
 12582                                  .L_lambda_simple_arity_check_ok_00a0:
 12583 000077E4 803805                  	cmp byte [rax], T_closure
 12584                                  
 12585 000077E7 0F85B1A40000                    jne L_code_ptr_error                      ; rax <- proc
 12586                                  
 12587                                  
 12588 000077ED 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12589                                  
 12590 000077F1 53                              push rbx                                  ; env pushed
 12591                                  
 12592 000077F2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12593                                  
 12594                                  
 12595 000077F5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12596                                  
 12597                                          
 12598                                          
 12599 000077F8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12600                                  
 12601 000077FC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12602                                  
 12603                                  
 12604 00007801 4D89CA                          mov r10, r9
 12605 00007804 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12606                                  
 12607                                                                                         
 12608 00007808 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12609 0000780B 4983C404                        add r12, 4
 12610                                  
 12611 0000780F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12612                                  .L_tc_recycle_frame_loop_005c:
 12613 00007815 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12614                                  
 12615 00007819 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12616                                  
 12617                                  
 12618                                  
 12619 0000781E 41BE00000000                    mov r14, 0                                ; clean box
 12620                                  
 12621                                  
 12622                                                                  
 12623 00007824 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12624                                  
 12625 00007828 4983C4FF                        add r12, -1 
 12626                                  
 12627 0000782C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12628 00007830 75E3                    	jne .L_tc_recycle_frame_loop_005c
 12629                                  .L_tc_recycle_frame_done_005c:
 12630 00007832 5D                      	pop rbp                                  ; restore the old rbp
 12631                                  
 12632 00007833 488B4D00                        mov rcx, qword [rbp]
 12633 00007837 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12634                                            ; rbx <- code(proc)
 12635                                  
 12636 0000783B FFE3                            jmp rbx
 12637 0000783D E91C010000              	jmp .L_if_end_0028
 12638                                  	.L_if_else_0028:
 12639 00007842 488B4528                	mov rax, qword [rbp + 40]
 12640 00007846 50                      	push rax
 12641 00007847 6A01                    	push 1
 12642 00007849 488B0425[40000000]      	mov rax, qword [free_var_8]
 12643 00007851 803805                  	cmp byte [rax], T_closure 
 12644 00007854 0F8544A40000                    jne L_code_ptr_error
 12645                                  
 12646 0000785A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12647                                  
 12648 0000785E 53                              push rbx
 12649                                  
 12650 0000785F FF5009                          call SOB_CLOSURE_CODE(rax)
 12651                                  
 12652 00007862 483D[02000000]                  	cmp rax, sob_boolean_false
 12653 00007868 0F848B000000            	je .L_if_else_0029
 12654 0000786E 488B4528                mov rax, qword [rbp + 40]
 12655 00007872 50                      	push rax
 12656 00007873 488B4520                mov rax, qword [rbp + 32]
 12657 00007877 50                      	push rax
 12658 00007878 6A01                    	push 1
 12659 0000787A 488B0425[B8000000]      	mov rax, qword [free_var_23]
 12660 00007882 803805                  	cmp byte [rax], T_closure 
 12661 00007885 0F8513A40000                    jne L_code_ptr_error
 12662                                  
 12663 0000788B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12664                                  
 12665 0000788F 53                              push rbx
 12666                                  
 12667 00007890 FF5009                          call SOB_CLOSURE_CODE(rax)
 12668                                  
 12669 00007893 50                              	push rax
 12670 00007894 6A02                    	push 2
 12671 00007896 488B0425[08010000]      	mov rax, qword [free_var_33]
 12672                                  .L_lambda_simple_arity_check_ok_009f:
 12673 0000789E 803805                  	cmp byte [rax], T_closure
 12674                                  
 12675 000078A1 0F85F7A30000                    jne L_code_ptr_error                      ; rax <- proc
 12676                                  
 12677                                  
 12678 000078A7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12679                                  
 12680 000078AB 53                              push rbx                                  ; env pushed
 12681                                  
 12682 000078AC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12683                                  
 12684                                  
 12685 000078AF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12686                                  
 12687                                          
 12688                                          
 12689 000078B2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12690                                  
 12691 000078B6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12692                                  
 12693                                  
 12694 000078BB 4D89CA                          mov r10, r9
 12695 000078BE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12696                                  
 12697                                                                                         
 12698 000078C2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12699 000078C5 4983C404                        add r12, 4
 12700                                  
 12701 000078C9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12702                                  .L_tc_recycle_frame_loop_005b:
 12703 000078CF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12704                                  
 12705 000078D3 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12706                                  
 12707                                  
 12708                                  
 12709 000078D8 41BE00000000                    mov r14, 0                                ; clean box
 12710                                  
 12711                                  
 12712                                                                  
 12713 000078DE 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12714                                  
 12715 000078E2 4983C4FF                        add r12, -1 
 12716                                  
 12717 000078E6 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12718 000078EA 75E3                    	jne .L_tc_recycle_frame_loop_005b
 12719                                  .L_tc_recycle_frame_done_005b:
 12720 000078EC 5D                      	pop rbp                                  ; restore the old rbp
 12721                                  
 12722 000078ED 488B4D00                        mov rcx, qword [rbp]
 12723 000078F1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12724                                            ; rbx <- code(proc)
 12725                                  
 12726 000078F5 FFE3                            jmp rbx
 12727 000078F7 EB65                    	jmp .L_if_end_0029
 12728                                  	.L_if_else_0029:
 12729 000078F9 6A00                    		push 0
 12730 000078FB 488B4510                mov rax, qword [rbp + 16]
 12731 000078FF 488B00                  mov rax, qword [rax + 0]
 12732 00007902 488B00                  mov rax, qword [rax + 0]
 12733                                  .L_lambda_simple_arity_check_ok_009e:
 12734 00007905 803805                  	cmp byte [rax], T_closure
 12735                                  
 12736 00007908 0F8590A30000                    jne L_code_ptr_error                      ; rax <- proc
 12737                                  
 12738                                  
 12739 0000790E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12740                                  
 12741 00007912 53                              push rbx                                  ; env pushed
 12742                                  
 12743 00007913 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12744                                  
 12745                                  
 12746 00007916 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12747                                  
 12748                                          
 12749                                          
 12750 00007919 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12751                                  
 12752 0000791D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12753                                  
 12754                                  
 12755 00007922 4D89CA                          mov r10, r9
 12756 00007925 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12757                                  
 12758                                                                                         
 12759 00007929 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12760 0000792C 4983C404                        add r12, 4
 12761                                  
 12762 00007930 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12763                                  .L_tc_recycle_frame_loop_005a:
 12764 00007936 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12765                                  
 12766 0000793A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12767                                  
 12768                                  
 12769                                  
 12770 0000793F 41BE00000000                    mov r14, 0                                ; clean box
 12771                                  
 12772                                  
 12773                                                                  
 12774 00007945 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12775                                  
 12776 00007949 4983C4FF                        add r12, -1 
 12777                                  
 12778 0000794D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12779 00007951 75E3                    	jne .L_tc_recycle_frame_loop_005a
 12780                                  .L_tc_recycle_frame_done_005a:
 12781 00007953 5D                      	pop rbp                                  ; restore the old rbp
 12782                                  
 12783 00007954 488B4D00                        mov rcx, qword [rbp]
 12784 00007958 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12785                                            ; rbx <- code(proc)
 12786                                  
 12787 0000795C FFE3                            jmp rbx
 12788                                  	.L_if_end_0029:
 12789                                  	.L_if_end_0028:
 12790 0000795E E949020000              	jmp .L_if_end_0024
 12791                                  	.L_if_else_0024:
 12792 00007963 488B4520                	mov rax, qword [rbp + 32]
 12793 00007967 50                      	push rax
 12794 00007968 6A01                    	push 1
 12795 0000796A 488B0425[40000000]      	mov rax, qword [free_var_8]
 12796 00007972 803805                  	cmp byte [rax], T_closure 
 12797 00007975 0F8523A30000                    jne L_code_ptr_error
 12798                                  
 12799 0000797B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12800                                  
 12801 0000797F 53                              push rbx
 12802                                  
 12803 00007980 FF5009                          call SOB_CLOSURE_CODE(rax)
 12804                                  
 12805 00007983 483D[02000000]                  	cmp rax, sob_boolean_false
 12806 00007989 0F84B8010000            	je .L_if_else_0025
 12807 0000798F 488B4528                mov rax, qword [rbp + 40]
 12808 00007993 50                      	push rax
 12809 00007994 6A01                    	push 1
 12810 00007996 488B0425[48000000]      	mov rax, qword [free_var_9]
 12811 0000799E 803805                  	cmp byte [rax], T_closure 
 12812 000079A1 0F85F7A20000                    jne L_code_ptr_error
 12813                                  
 12814 000079A7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12815                                  
 12816 000079AB 53                              push rbx
 12817                                  
 12818 000079AC FF5009                          call SOB_CLOSURE_CODE(rax)
 12819                                  
 12820 000079AF 483D[02000000]                  	cmp rax, sob_boolean_false
 12821 000079B5 0F848E000000            	je .L_if_else_0026
 12822 000079BB 488B4528                mov rax, qword [rbp + 40]
 12823 000079BF 50                      	push rax
 12824 000079C0 6A01                    	push 1
 12825 000079C2 488B0425[B8000000]      	mov rax, qword [free_var_23]
 12826 000079CA 803805                  	cmp byte [rax], T_closure 
 12827 000079CD 0F85CBA20000                    jne L_code_ptr_error
 12828                                  
 12829 000079D3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12830                                  
 12831 000079D7 53                              push rbx
 12832                                  
 12833 000079D8 FF5009                          call SOB_CLOSURE_CODE(rax)
 12834                                  
 12835 000079DB 50                              	push rax
 12836 000079DC 488B4520                mov rax, qword [rbp + 32]
 12837 000079E0 50                      	push rax
 12838 000079E1 6A02                    	push 2
 12839 000079E3 488B0425[08010000]      	mov rax, qword [free_var_33]
 12840                                  .L_lambda_simple_arity_check_ok_009d:
 12841 000079EB 803805                  	cmp byte [rax], T_closure
 12842                                  
 12843 000079EE 0F85AAA20000                    jne L_code_ptr_error                      ; rax <- proc
 12844                                  
 12845                                  
 12846 000079F4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12847                                  
 12848 000079F8 53                              push rbx                                  ; env pushed
 12849                                  
 12850 000079F9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12851                                  
 12852                                  
 12853 000079FC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12854                                  
 12855                                          
 12856                                          
 12857 000079FF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12858                                  
 12859 00007A03 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12860                                  
 12861                                  
 12862 00007A08 4D89CA                          mov r10, r9
 12863 00007A0B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12864                                  
 12865                                                                                         
 12866 00007A0F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12867 00007A12 4983C404                        add r12, 4
 12868                                  
 12869 00007A16 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12870                                  .L_tc_recycle_frame_loop_0059:
 12871 00007A1C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12872                                  
 12873 00007A20 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12874                                  
 12875                                  
 12876                                  
 12877 00007A25 41BE00000000                    mov r14, 0                                ; clean box
 12878                                  
 12879                                  
 12880                                                                  
 12881 00007A2B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12882                                  
 12883 00007A2F 4983C4FF                        add r12, -1 
 12884                                  
 12885 00007A33 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12886 00007A37 75E3                    	jne .L_tc_recycle_frame_loop_0059
 12887                                  .L_tc_recycle_frame_done_0059:
 12888 00007A39 5D                      	pop rbp                                  ; restore the old rbp
 12889                                  
 12890 00007A3A 488B4D00                        mov rcx, qword [rbp]
 12891 00007A3E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12892                                            ; rbx <- code(proc)
 12893                                  
 12894 00007A42 FFE3                            jmp rbx
 12895 00007A44 E9FC000000              	jmp .L_if_end_0026
 12896                                  	.L_if_else_0026:
 12897 00007A49 488B4528                	mov rax, qword [rbp + 40]
 12898 00007A4D 50                      	push rax
 12899 00007A4E 6A01                    	push 1
 12900 00007A50 488B0425[40000000]      	mov rax, qword [free_var_8]
 12901 00007A58 803805                  	cmp byte [rax], T_closure 
 12902 00007A5B 0F853DA20000                    jne L_code_ptr_error
 12903                                  
 12904 00007A61 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 12905                                  
 12906 00007A65 53                              push rbx
 12907                                  
 12908 00007A66 FF5009                          call SOB_CLOSURE_CODE(rax)
 12909                                  
 12910 00007A69 483D[02000000]                  	cmp rax, sob_boolean_false
 12911 00007A6F 746F                    	je .L_if_else_0027
 12912 00007A71 488B4528                mov rax, qword [rbp + 40]
 12913 00007A75 50                      	push rax
 12914 00007A76 488B4520                mov rax, qword [rbp + 32]
 12915 00007A7A 50                      	push rax
 12916 00007A7B 6A02                    	push 2
 12917 00007A7D 488B0425[08010000]      	mov rax, qword [free_var_33]
 12918                                  .L_lambda_simple_arity_check_ok_009c:
 12919 00007A85 803805                  	cmp byte [rax], T_closure
 12920                                  
 12921 00007A88 0F8510A20000                    jne L_code_ptr_error                      ; rax <- proc
 12922                                  
 12923                                  
 12924 00007A8E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12925                                  
 12926 00007A92 53                              push rbx                                  ; env pushed
 12927                                  
 12928 00007A93 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12929                                  
 12930                                  
 12931 00007A96 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12932                                  
 12933                                          
 12934                                          
 12935 00007A99 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12936                                  
 12937 00007A9D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12938                                  
 12939                                  
 12940 00007AA2 4D89CA                          mov r10, r9
 12941 00007AA5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 12942                                  
 12943                                                                                         
 12944 00007AA9 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 12945 00007AAC 4983C404                        add r12, 4
 12946                                  
 12947 00007AB0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 12948                                  .L_tc_recycle_frame_loop_0058:
 12949 00007AB6 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 12950                                  
 12951 00007ABA 4E8974E500                      mov [rbp + (r12 * 8)], r14
 12952                                  
 12953                                  
 12954                                  
 12955 00007ABF 41BE00000000                    mov r14, 0                                ; clean box
 12956                                  
 12957                                  
 12958                                                                  
 12959 00007AC5 4983C2FF                        add r10, -1                               ; args_copied_counter--
 12960                                  
 12961 00007AC9 4983C4FF                        add r12, -1 
 12962                                  
 12963 00007ACD 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 12964 00007AD1 75E3                    	jne .L_tc_recycle_frame_loop_0058
 12965                                  .L_tc_recycle_frame_done_0058:
 12966 00007AD3 5D                      	pop rbp                                  ; restore the old rbp
 12967                                  
 12968 00007AD4 488B4D00                        mov rcx, qword [rbp]
 12969 00007AD8 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 12970                                            ; rbx <- code(proc)
 12971                                  
 12972 00007ADC FFE3                            jmp rbx
 12973 00007ADE EB65                    	jmp .L_if_end_0027
 12974                                  	.L_if_else_0027:
 12975 00007AE0 6A00                    		push 0
 12976 00007AE2 488B4510                mov rax, qword [rbp + 16]
 12977 00007AE6 488B00                  mov rax, qword [rax + 0]
 12978 00007AE9 488B00                  mov rax, qword [rax + 0]
 12979                                  .L_lambda_simple_arity_check_ok_009b:
 12980 00007AEC 803805                  	cmp byte [rax], T_closure
 12981                                  
 12982 00007AEF 0F85A9A10000                    jne L_code_ptr_error                      ; rax <- proc
 12983                                  
 12984                                  
 12985 00007AF5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 12986                                  
 12987 00007AF9 53                              push rbx                                  ; env pushed
 12988                                  
 12989 00007AFA FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 12990                                  
 12991                                  
 12992 00007AFD FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 12993                                  
 12994                                          
 12995                                          
 12996 00007B00 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 12997                                  
 12998 00007B04 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 12999                                  
 13000                                  
 13001 00007B09 4D89CA                          mov r10, r9
 13002 00007B0C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 13003                                  
 13004                                                                                         
 13005 00007B10 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13006 00007B13 4983C404                        add r12, 4
 13007                                  
 13008 00007B17 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13009                                  .L_tc_recycle_frame_loop_0057:
 13010 00007B1D 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 13011                                  
 13012 00007B21 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13013                                  
 13014                                  
 13015                                  
 13016 00007B26 41BE00000000                    mov r14, 0                                ; clean box
 13017                                  
 13018                                  
 13019                                                                  
 13020 00007B2C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13021                                  
 13022 00007B30 4983C4FF                        add r12, -1 
 13023                                  
 13024 00007B34 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13025 00007B38 75E3                    	jne .L_tc_recycle_frame_loop_0057
 13026                                  .L_tc_recycle_frame_done_0057:
 13027 00007B3A 5D                      	pop rbp                                  ; restore the old rbp
 13028                                  
 13029 00007B3B 488B4D00                        mov rcx, qword [rbp]
 13030 00007B3F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13031                                            ; rbx <- code(proc)
 13032                                  
 13033 00007B43 FFE3                            jmp rbx
 13034                                  	.L_if_end_0027:
 13035                                  	.L_if_end_0026:
 13036 00007B45 EB65                    	jmp .L_if_end_0025
 13037                                  	.L_if_else_0025:
 13038 00007B47 6A00                    		push 0
 13039 00007B49 488B4510                mov rax, qword [rbp + 16]
 13040 00007B4D 488B00                  mov rax, qword [rax + 0]
 13041 00007B50 488B00                  mov rax, qword [rax + 0]
 13042                                  .L_lambda_simple_arity_check_ok_009a:
 13043 00007B53 803805                  	cmp byte [rax], T_closure
 13044                                  
 13045 00007B56 0F8542A10000                    jne L_code_ptr_error                      ; rax <- proc
 13046                                  
 13047                                  
 13048 00007B5C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13049                                  
 13050 00007B60 53                              push rbx                                  ; env pushed
 13051                                  
 13052 00007B61 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13053                                  
 13054                                  
 13055 00007B64 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13056                                  
 13057                                          
 13058                                          
 13059 00007B67 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13060                                  
 13061 00007B6B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13062                                  
 13063                                  
 13064 00007B70 4D89CA                          mov r10, r9
 13065 00007B73 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 13066                                  
 13067                                                                                         
 13068 00007B77 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13069 00007B7A 4983C404                        add r12, 4
 13070                                  
 13071 00007B7E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13072                                  .L_tc_recycle_frame_loop_0056:
 13073 00007B84 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 13074                                  
 13075 00007B88 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13076                                  
 13077                                  
 13078                                  
 13079 00007B8D 41BE00000000                    mov r14, 0                                ; clean box
 13080                                  
 13081                                  
 13082                                                                  
 13083 00007B93 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13084                                  
 13085 00007B97 4983C4FF                        add r12, -1 
 13086                                  
 13087 00007B9B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13088 00007B9F 75E3                    	jne .L_tc_recycle_frame_loop_0056
 13089                                  .L_tc_recycle_frame_done_0056:
 13090 00007BA1 5D                      	pop rbp                                  ; restore the old rbp
 13091                                  
 13092 00007BA2 488B4D00                        mov rcx, qword [rbp]
 13093 00007BA6 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13094                                            ; rbx <- code(proc)
 13095                                  
 13096 00007BAA FFE3                            jmp rbx
 13097                                  	.L_if_end_0025:
 13098                                  	.L_if_end_0024:
 13099 00007BAC C9                      	leave
 13100 00007BAD C22000                  	ret 8 * (2 + 2)
 13101                                  .L_lambda_simple_end_0044:	; new closure is in rax
 13102 00007BB0 50                      	push rax
 13103 00007BB1 6A01                    	push 1
 13104 00007BB3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13105 00007BB8 E859910000              	call malloc
 13106 00007BBD 50                      	push rax
 13107 00007BBE BF08000000              	mov rdi, 8 * 1	; new rib
 13108 00007BC3 E84E910000              	call malloc
 13109 00007BC8 50                      	push rax
 13110 00007BC9 BF10000000              	mov rdi, 8 * 2	; extended env
 13111 00007BCE E843910000              	call malloc
 13112 00007BD3 488B7D10                	mov rdi, ENV
 13113 00007BD7 BE00000000              	mov rsi, 0
 13114 00007BDC BA01000000              	mov rdx, 1
 13115                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 13116 00007BE1 4883FE01                	cmp rsi, 1
 13117 00007BE5 7410                    	je .L_lambda_simple_env_end_0045
 13118 00007BE7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13119 00007BEB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13120 00007BEF 48FFC6                  	inc rsi
 13121 00007BF2 48FFC2                  	inc rdx
 13122 00007BF5 EBEA                    	jmp .L_lambda_simple_env_loop_0045
 13123                                  .L_lambda_simple_env_end_0045:
 13124 00007BF7 5B                      	pop rbx
 13125 00007BF8 BE00000000              	mov rsi, 0
 13126                                  .L_lambda_simple_params_loop_0045:	; copy params
 13127 00007BFD 4883FE01                	cmp rsi, 1
 13128 00007C01 740E                    	je .L_lambda_simple_params_end_0045
 13129 00007C03 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13130 00007C08 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13131 00007C0C 48FFC6                  	inc rsi
 13132 00007C0F EBEC                    	jmp .L_lambda_simple_params_loop_0045
 13133                                  .L_lambda_simple_params_end_0045:
 13134 00007C11 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13135 00007C14 4889C3                  	mov rbx, rax
 13136 00007C17 58                      	pop rax
 13137 00007C18 C60005                  	mov byte [rax], T_closure
 13138 00007C1B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13139 00007C1F 48C74009[2C7C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
 13140 00007C27 E984030000              	jmp .L_lambda_simple_end_0045
 13141                                  .L_lambda_simple_code_0045:	; lambda-simple body
 13142 00007C2C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13143 00007C32 740B                    	je .L_lambda_simple_arity_check_ok_00a1
 13144 00007C34 FF742410                	push qword [rsp + 8 * 2]
 13145 00007C38 6A01                    	push 1
 13146 00007C3A E990900000              	jmp L_error_incorrect_arity_simple
 13147                                  .L_lambda_simple_arity_check_ok_00a1:
 13148 00007C3F C8000000                	enter 0, 0
 13149 00007C43 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13150 00007C48 E8C9900000              	call malloc
 13151 00007C4D 50                      	push rax
 13152 00007C4E BF08000000              	mov rdi, 8 * 1	; new rib
 13153 00007C53 E8BE900000              	call malloc
 13154 00007C58 50                      	push rax
 13155 00007C59 BF18000000              	mov rdi, 8 * 3	; extended env
 13156 00007C5E E8B3900000              	call malloc
 13157 00007C63 488B7D10                	mov rdi, ENV
 13158 00007C67 BE00000000              	mov rsi, 0
 13159 00007C6C BA01000000              	mov rdx, 1
 13160                                  .L_lambda_opt_env_loop_000d:	; ext_env[i + 1] <-- env[i]
 13161 00007C71 4883FE02                	cmp rsi, 2
 13162 00007C75 7410                    	je .L_lambda_opt_env_end_000d
 13163 00007C77 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13164 00007C7B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13165 00007C7F 48FFC6                  	inc rsi
 13166 00007C82 48FFC2                  	inc rdx
 13167 00007C85 EBEA                    	jmp .L_lambda_opt_env_loop_000d
 13168                                  .L_lambda_opt_env_end_000d:
 13169 00007C87 5B                      	pop rbx
 13170 00007C88 BE00000000              	mov rsi, 0
 13171                                  .L_lambda_opt_params_loop_0019:	; copy params
 13172 00007C8D 4883FE01                	cmp rsi, 1
 13173 00007C91 740E                    	je .L_lambda_opt_params_end_0019
 13174 00007C93 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13175 00007C98 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13176 00007C9C 48FFC6                  	inc rsi
 13177 00007C9F EBEC                    	jmp .L_lambda_opt_params_loop_0019
 13178                                  .L_lambda_opt_params_end_0019:
 13179 00007CA1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13180 00007CA4 4889C3                  	mov rbx, rax
 13181 00007CA7 58                      	pop rax
 13182 00007CA8 C60005                  	mov byte [rax], T_closure
 13183 00007CAB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13184 00007CAF 48C74009[BC7C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000d
 13185 00007CB7 E9F0020000              	jmp .L_lambda_opt_end_000d
 13186                                  .L_lambda_opt_code_000d:
 13187 00007CBC 4C8B542410              mov r10, qword [rsp+8*2]
 13188 00007CC1 4983FA01                cmp r10, 1
 13189 00007CC5 740B                    je .L_lambda_opt_arity_check_exact_000d
 13190 00007CC7 4983FA01                cmp r10, 1
 13191 00007CCB 7F41                    jg .L_lambda_opt_arity_check_more_000d
 13192 00007CCD E911900000              jmp L_error_incorrect_arity_opt
 13193                                  .L_lambda_opt_arity_check_exact_000d:
 13194 00007CD2 4883EC08                sub rsp, 8
 13195 00007CD6 BA04000000              mov rdx, 3+1
 13196 00007CDB 4889E3                  mov qword rbx, rsp
 13197                                  .L_lambda_opt_params_loop_001a:
 13198 00007CDE 488B4B08                mov qword rcx, [rbx+8]
 13199 00007CE2 48890B                  mov qword [rbx], rcx
 13200 00007CE5 48FFCA                  dec rdx
 13201 00007CE8 4883C308                add rbx, 8
 13202 00007CEC 4883FA00                cmp rdx, 0
 13203 00007CF0 7402                    je .L_lambda_opt_params_end_001a
 13204 00007CF2 EBEA                    jmp .L_lambda_opt_params_loop_001a
 13205                                  .L_lambda_opt_params_end_001a:
 13206 00007CF4 49FFC2                  inc r10
 13207 00007CF7 4C89542410              mov qword [rsp+8*2], r10
 13208 00007CFC 4983C202                add r10, 2
 13209 00007D00 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 13210 00007D08 4C8B4D00                mov r9, [rbp]
 13211 00007D0C EB52                    jmp .L_lambda_opt_stack_adjusted_000d
 13212                                  .L_lambda_opt_arity_check_more_000d:
 13213 00007D0E 48B8-                   mov rax, sob_nil
 13213 00007D10 [0100000000000000] 
 13214 00007D18 4C8B542410              mov r10, [rsp+2*8]
 13215 00007D1D 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 13216 00007D22 4983EA01                sub r10, 1
 13217                                  .L_lambda_opt_stack_shrink_loop_000d:
 13218 00007D26 4983FA00                cmp r10, 0
 13219 00007D2A 7424                    je .L_lambda_opt_stack_shrink_loop_exit_000d
 13220 00007D2C 4889C1                  mov rcx, rax
 13221 00007D2F 498B10                  mov rdx, [r8]
 13222 00007D32 BF11000000              mov rdi, 17
 13223 00007D37 E8DA8F0000              call malloc
 13224 00007D3C C60021                  mov byte [rax], T_pair
 13225 00007D3F 48894809                mov SOB_PAIR_CDR(rax), rcx
 13226 00007D43 48895001                mov SOB_PAIR_CAR(rax), rdx
 13227 00007D47 4983E808                sub r8, 8
 13228 00007D4B 49FFCA                  dec r10
 13229 00007D4E EBD6                    jmp .L_lambda_opt_stack_shrink_loop_000d
 13230                                  .L_lambda_opt_stack_shrink_loop_exit_000d:
 13231 00007D50 4889442420              mov [rsp+8*(2+2)], rax
 13232 00007D55 41BA02000000            mov r10, 2
 13233 00007D5B 4C89542410              mov [rsp+16], r10
 13234                                  .L_lambda_opt_stack_adjusted_000d:
 13235 00007D60 4C8B4D00                mov r9, [rbp]
 13236 00007D64 C8000000                enter 0, 0
 13237 00007D68 488B4528                mov rax, qword [rbp + 40]
 13238 00007D6C 50                      	push rax
 13239 00007D6D 6A01                    	push 1
 13240 00007D6F 488B0425[00000000]      	mov rax, qword [free_var_0]
 13241 00007D77 803805                  	cmp byte [rax], T_closure 
 13242 00007D7A 0F851E9F0000                    jne L_code_ptr_error
 13243                                  
 13244 00007D80 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13245                                  
 13246 00007D84 53                              push rbx
 13247                                  
 13248 00007D85 FF5009                          call SOB_CLOSURE_CODE(rax)
 13249                                  
 13250 00007D88 483D[02000000]                  	cmp rax, sob_boolean_false
 13251 00007D8E 747A                    	je .L_if_else_002a
 13252 00007D90 488B4520                mov rax, qword [rbp + 32]
 13253 00007D94 50                      	push rax
 13254 00007D95 48B8-                   	mov rax, qword (L_constants + 127)
 13254 00007D97 [7F00000000000000] 
 13255 00007D9F 50                      	push rax
 13256 00007DA0 6A02                    	push 2
 13257 00007DA2 488B4510                mov rax, qword [rbp + 16]
 13258 00007DA6 488B00                  mov rax, qword [rax + 0]
 13259 00007DA9 488B00                  mov rax, qword [rax + 0]
 13260                                  .L_lambda_simple_arity_check_ok_00a5:
 13261 00007DAC 803805                  	cmp byte [rax], T_closure
 13262                                  
 13263 00007DAF 0F85E99E0000                    jne L_code_ptr_error                      ; rax <- proc
 13264                                  
 13265                                  
 13266 00007DB5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13267                                  
 13268 00007DB9 53                              push rbx                                  ; env pushed
 13269                                  
 13270 00007DBA FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13271                                  
 13272                                  
 13273 00007DBD FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13274                                  
 13275                                          
 13276                                          
 13277 00007DC0 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13278                                  
 13279 00007DC4 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13280                                  
 13281                                  
 13282 00007DC9 4D89CA                          mov r10, r9
 13283 00007DCC 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 13284                                  
 13285                                                                                         
 13286 00007DD0 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13287 00007DD3 4983C404                        add r12, 4
 13288                                  
 13289 00007DD7 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13290                                  .L_tc_recycle_frame_loop_005f:
 13291 00007DDD 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 13292                                  
 13293 00007DE1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13294                                  
 13295                                  
 13296                                  
 13297 00007DE6 41BE00000000                    mov r14, 0                                ; clean box
 13298                                  
 13299                                  
 13300                                                                  
 13301 00007DEC 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13302                                  
 13303 00007DF0 4983C4FF                        add r12, -1 
 13304                                  
 13305 00007DF4 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13306 00007DF8 75E3                    	jne .L_tc_recycle_frame_loop_005f
 13307                                  .L_tc_recycle_frame_done_005f:
 13308 00007DFA 5D                      	pop rbp                                  ; restore the old rbp
 13309                                  
 13310 00007DFB 488B4D00                        mov rcx, qword [rbp]
 13311 00007DFF 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13312                                            ; rbx <- code(proc)
 13313                                  
 13314 00007E03 FFE3                            jmp rbx
 13315 00007E05 E99A010000              	jmp .L_if_end_002a
 13316                                  	.L_if_else_002a:
 13317 00007E0A 488B4528                	mov rax, qword [rbp + 40]
 13318 00007E0E 50                      	push rax
 13319 00007E0F 48B8-                   	mov rax, qword (L_constants + 127)
 13319 00007E11 [7F00000000000000] 
 13320 00007E19 50                      	push rax
 13321 00007E1A 488B0425[18030000]      	mov rax, qword [free_var_99]
 13322 00007E22 50                      	push rax
 13323 00007E23 6A03                    	push 3
 13324 00007E25 488B0425[F8020000]      	mov rax, qword [free_var_95]
 13325 00007E2D 803805                  	cmp byte [rax], T_closure 
 13326 00007E30 0F85689E0000                    jne L_code_ptr_error
 13327                                  
 13328 00007E36 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13329                                  
 13330 00007E3A 53                              push rbx
 13331                                  
 13332 00007E3B FF5009                          call SOB_CLOSURE_CODE(rax)
 13333                                  
 13334 00007E3E 50                              	push rax
 13335 00007E3F 6A01                    	push 1
 13336 00007E41 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13337 00007E46 E8CB8E0000              	call malloc
 13338 00007E4B 50                      	push rax
 13339 00007E4C BF10000000              	mov rdi, 8 * 2	; new rib
 13340 00007E51 E8C08E0000              	call malloc
 13341 00007E56 50                      	push rax
 13342 00007E57 BF20000000              	mov rdi, 8 * 4	; extended env
 13343 00007E5C E8B58E0000              	call malloc
 13344 00007E61 488B7D10                	mov rdi, ENV
 13345 00007E65 BE00000000              	mov rsi, 0
 13346 00007E6A BA01000000              	mov rdx, 1
 13347                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 13348 00007E6F 4883FE03                	cmp rsi, 3
 13349 00007E73 7410                    	je .L_lambda_simple_env_end_0046
 13350 00007E75 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13351 00007E79 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13352 00007E7D 48FFC6                  	inc rsi
 13353 00007E80 48FFC2                  	inc rdx
 13354 00007E83 EBEA                    	jmp .L_lambda_simple_env_loop_0046
 13355                                  .L_lambda_simple_env_end_0046:
 13356 00007E85 5B                      	pop rbx
 13357 00007E86 BE00000000              	mov rsi, 0
 13358                                  .L_lambda_simple_params_loop_0046:	; copy params
 13359 00007E8B 4883FE02                	cmp rsi, 2
 13360 00007E8F 740E                    	je .L_lambda_simple_params_end_0046
 13361 00007E91 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13362 00007E96 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13363 00007E9A 48FFC6                  	inc rsi
 13364 00007E9D EBEC                    	jmp .L_lambda_simple_params_loop_0046
 13365                                  .L_lambda_simple_params_end_0046:
 13366 00007E9F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13367 00007EA2 4889C3                  	mov rbx, rax
 13368 00007EA5 58                      	pop rax
 13369 00007EA6 C60005                  	mov byte [rax], T_closure
 13370 00007EA9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13371 00007EAD 48C74009[BA7E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
 13372 00007EB5 E991000000              	jmp .L_lambda_simple_end_0046
 13373                                  .L_lambda_simple_code_0046:	; lambda-simple body
 13374 00007EBA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13375 00007EC0 740B                    	je .L_lambda_simple_arity_check_ok_00a2
 13376 00007EC2 FF742410                	push qword [rsp + 8 * 2]
 13377 00007EC6 6A01                    	push 1
 13378 00007EC8 E9028E0000              	jmp L_error_incorrect_arity_simple
 13379                                  .L_lambda_simple_arity_check_ok_00a2:
 13380 00007ECD C8000000                	enter 0, 0
 13381 00007ED1 488B4520                mov rax, qword [rbp + 32]
 13382 00007ED5 50                      	push rax
 13383 00007ED6 488B4510                mov rax, qword [rbp + 16]
 13384 00007EDA 488B00                  mov rax, qword [rax + 0]
 13385 00007EDD 488B00                  mov rax, qword [rax + 0]
 13386 00007EE0 50                      	push rax
 13387 00007EE1 6A02                    	push 2
 13388 00007EE3 488B4510                mov rax, qword [rbp + 16]
 13389 00007EE7 488B4008                mov rax, qword [rax + 8]
 13390 00007EEB 488B00                  mov rax, qword [rax + 0]
 13391                                  .L_lambda_simple_arity_check_ok_00a3:
 13392 00007EEE 803805                  	cmp byte [rax], T_closure
 13393                                  
 13394 00007EF1 0F85A79D0000                    jne L_code_ptr_error                      ; rax <- proc
 13395                                  
 13396                                  
 13397 00007EF7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13398                                  
 13399 00007EFB 53                              push rbx                                  ; env pushed
 13400                                  
 13401 00007EFC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13402                                  
 13403                                  
 13404 00007EFF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13405                                  
 13406                                          
 13407                                          
 13408 00007F02 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13409                                  
 13410 00007F06 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13411                                  
 13412                                  
 13413 00007F0B 4D89CA                          mov r10, r9
 13414 00007F0E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 13415                                  
 13416                                                                                         
 13417 00007F12 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13418 00007F15 4983C404                        add r12, 4
 13419                                  
 13420 00007F19 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13421                                  .L_tc_recycle_frame_loop_005d:
 13422 00007F1F 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 13423                                  
 13424 00007F23 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13425                                  
 13426                                  
 13427                                  
 13428 00007F28 41BE00000000                    mov r14, 0                                ; clean box
 13429                                  
 13430                                  
 13431                                                                  
 13432 00007F2E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13433                                  
 13434 00007F32 4983C4FF                        add r12, -1 
 13435                                  
 13436 00007F36 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13437 00007F3A 75E3                    	jne .L_tc_recycle_frame_loop_005d
 13438                                  .L_tc_recycle_frame_done_005d:
 13439 00007F3C 5D                      	pop rbp                                  ; restore the old rbp
 13440                                  
 13441 00007F3D 488B4D00                        mov rcx, qword [rbp]
 13442 00007F41 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13443                                            ; rbx <- code(proc)
 13444                                  
 13445 00007F45 FFE3                            jmp rbx
 13446 00007F47 C9                      	leave
 13447 00007F48 C21800                  	ret 8 * (2 + 1)
 13448                                  .L_lambda_simple_end_0046:	; new closure is in rax
 13449                                  .L_lambda_simple_arity_check_ok_00a4:
 13450 00007F4B 803805                  	cmp byte [rax], T_closure
 13451                                  
 13452 00007F4E 0F854A9D0000                    jne L_code_ptr_error                      ; rax <- proc
 13453                                  
 13454                                  
 13455 00007F54 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13456                                  
 13457 00007F58 53                              push rbx                                  ; env pushed
 13458                                  
 13459 00007F59 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13460                                  
 13461                                  
 13462 00007F5C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13463                                  
 13464                                          
 13465                                          
 13466 00007F5F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13467                                  
 13468 00007F63 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13469                                  
 13470                                  
 13471 00007F68 4D89CA                          mov r10, r9
 13472 00007F6B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 13473                                  
 13474                                                                                         
 13475 00007F6F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13476 00007F72 4983C404                        add r12, 4
 13477                                  
 13478 00007F76 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13479                                  .L_tc_recycle_frame_loop_005e:
 13480 00007F7C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 13481                                  
 13482 00007F80 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13483                                  
 13484                                  
 13485                                  
 13486 00007F85 41BE00000000                    mov r14, 0                                ; clean box
 13487                                  
 13488                                  
 13489                                                                  
 13490 00007F8B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13491                                  
 13492 00007F8F 4983C4FF                        add r12, -1 
 13493                                  
 13494 00007F93 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13495 00007F97 75E3                    	jne .L_tc_recycle_frame_loop_005e
 13496                                  .L_tc_recycle_frame_done_005e:
 13497 00007F99 5D                      	pop rbp                                  ; restore the old rbp
 13498                                  
 13499 00007F9A 488B4D00                        mov rcx, qword [rbp]
 13500 00007F9E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13501                                            ; rbx <- code(proc)
 13502                                  
 13503 00007FA2 FFE3                            jmp rbx
 13504                                  	.L_if_end_002a:
 13505 00007FA4 C9                      leave
 13506 00007FA5 4C8B4D00                mov r9, [rbp]
 13507 00007FA9 C22800                  ret 8 * (3 + 2)
 13508                                  .L_lambda_opt_end_000d:	; new closure is in rax
 13509 00007FAC C9                      	leave
 13510 00007FAD C21800                  	ret 8 * (2 + 1)
 13511                                  .L_lambda_simple_end_0045:	; new closure is in rax
 13512                                  .L_lambda_simple_arity_check_ok_00a6:
 13513 00007FB0 803805                  	cmp byte [rax], T_closure
 13514                                  
 13515 00007FB3 0F85E59C0000                    jne L_code_ptr_error                      ; rax <- proc
 13516                                  
 13517                                  
 13518 00007FB9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13519                                  
 13520 00007FBD 53                              push rbx                                  ; env pushed
 13521                                  
 13522 00007FBE FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13523                                  
 13524                                  
 13525 00007FC1 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13526                                  
 13527                                          
 13528                                          
 13529 00007FC4 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13530                                  
 13531 00007FC8 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13532                                  
 13533                                  
 13534 00007FCD 4D89CA                          mov r10, r9
 13535 00007FD0 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 13536                                  
 13537                                                                                         
 13538 00007FD4 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13539 00007FD7 4983C404                        add r12, 4
 13540                                  
 13541 00007FDB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13542                                  .L_tc_recycle_frame_loop_0060:
 13543 00007FE1 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 13544                                  
 13545 00007FE5 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13546                                  
 13547                                  
 13548                                  
 13549 00007FEA 41BE00000000                    mov r14, 0                                ; clean box
 13550                                  
 13551                                  
 13552                                                                  
 13553 00007FF0 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13554                                  
 13555 00007FF4 4983C4FF                        add r12, -1 
 13556                                  
 13557 00007FF8 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13558 00007FFC 75E3                    	jne .L_tc_recycle_frame_loop_0060
 13559                                  .L_tc_recycle_frame_done_0060:
 13560 00007FFE 5D                      	pop rbp                                  ; restore the old rbp
 13561                                  
 13562 00007FFF 488B4D00                        mov rcx, qword [rbp]
 13563 00008003 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13564                                            ; rbx <- code(proc)
 13565                                  
 13566 00008007 FFE3                            jmp rbx
 13567 00008009 C9                      	leave
 13568 0000800A C21800                  	ret 8 * (2 + 1)
 13569                                  .L_lambda_simple_end_0043:	; new closure is in rax
 13570 0000800D 803805                  	cmp byte [rax], T_closure 
 13571 00008010 0F85889C0000                    jne L_code_ptr_error
 13572                                  
 13573 00008016 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13574                                  
 13575 0000801A 53                              push rbx
 13576                                  
 13577 0000801B FF5009                          call SOB_CLOSURE_CODE(rax)
 13578                                  
 13579 0000801E 48890425[20030000]              	mov qword [free_var_100], rax
 13580 00008026 48B8-                   	mov rax, sob_void
 13580 00008028 [0000000000000000] 
 13581                                  
 13582 00008030 4889C7                  	mov rdi, rax
 13583 00008033 E8EF8C0000              	call print_sexpr_if_not_void
 13584                                  
 13585 00008038 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13586 0000803D E8D48C0000              	call malloc
 13587 00008042 50                      	push rax
 13588 00008043 BF00000000              	mov rdi, 8 * 0	; new rib
 13589 00008048 E8C98C0000              	call malloc
 13590 0000804D 50                      	push rax
 13591 0000804E BF08000000              	mov rdi, 8 * 1	; extended env
 13592 00008053 E8BE8C0000              	call malloc
 13593 00008058 488B7D10                	mov rdi, ENV
 13594 0000805C BE00000000              	mov rsi, 0
 13595 00008061 BA01000000              	mov rdx, 1
 13596                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 13597 00008066 4883FE00                	cmp rsi, 0
 13598 0000806A 7410                    	je .L_lambda_simple_env_end_0047
 13599 0000806C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13600 00008070 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13601 00008074 48FFC6                  	inc rsi
 13602 00008077 48FFC2                  	inc rdx
 13603 0000807A EBEA                    	jmp .L_lambda_simple_env_loop_0047
 13604                                  .L_lambda_simple_env_end_0047:
 13605 0000807C 5B                      	pop rbx
 13606 0000807D BE00000000              	mov rsi, 0
 13607                                  .L_lambda_simple_params_loop_0047:	; copy params
 13608 00008082 4883FE00                	cmp rsi, 0
 13609 00008086 740E                    	je .L_lambda_simple_params_end_0047
 13610 00008088 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13611 0000808D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13612 00008091 48FFC6                  	inc rsi
 13613 00008094 EBEC                    	jmp .L_lambda_simple_params_loop_0047
 13614                                  .L_lambda_simple_params_end_0047:
 13615 00008096 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13616 00008099 4889C3                  	mov rbx, rax
 13617 0000809C 58                      	pop rax
 13618 0000809D C60005                  	mov byte [rax], T_closure
 13619 000080A0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13620 000080A4 48C74009[B1800000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
 13621 000080AC E902010000              	jmp .L_lambda_simple_end_0047
 13622                                  .L_lambda_simple_code_0047:	; lambda-simple body
 13623 000080B1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13624 000080B7 740B                    	je .L_lambda_simple_arity_check_ok_00a7
 13625 000080B9 FF742410                	push qword [rsp + 8 * 2]
 13626 000080BD 6A01                    	push 1
 13627 000080BF E90B8C0000              	jmp L_error_incorrect_arity_simple
 13628                                  .L_lambda_simple_arity_check_ok_00a7:
 13629 000080C4 C8000000                	enter 0, 0
 13630 000080C8 488B4520                mov rax, qword [rbp + 32]
 13631 000080CC 50                      	push rax
 13632 000080CD 6A01                    	push 1
 13633 000080CF 488B0425[D8000000]      	mov rax, qword [free_var_27]
 13634 000080D7 803805                  	cmp byte [rax], T_closure 
 13635 000080DA 0F85BE9B0000                    jne L_code_ptr_error
 13636                                  
 13637 000080E0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13638                                  
 13639 000080E4 53                              push rbx
 13640                                  
 13641 000080E5 FF5009                          call SOB_CLOSURE_CODE(rax)
 13642                                  
 13643 000080E8 483D[02000000]                  	cmp rax, sob_boolean_false
 13644 000080EE 740F                    	je .L_if_else_002b
 13645 000080F0 48B8-                   	mov rax, qword (L_constants + 127)
 13645 000080F2 [7F00000000000000] 
 13646 000080FA E9B0000000              	jmp .L_if_end_002b
 13647                                  	.L_if_else_002b:
 13648 000080FF 48B8-                   		mov rax, qword (L_constants + 127)
 13648 00008101 [7F00000000000000] 
 13649 00008109 50                      	push rax
 13650 0000810A 488B4520                mov rax, qword [rbp + 32]
 13651 0000810E 50                      	push rax
 13652 0000810F 6A02                    	push 2
 13653 00008111 488B0425[10030000]      	mov rax, qword [free_var_98]
 13654 00008119 803805                  	cmp byte [rax], T_closure 
 13655 0000811C 0F857C9B0000                    jne L_code_ptr_error
 13656                                  
 13657 00008122 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13658                                  
 13659 00008126 53                              push rbx
 13660                                  
 13661 00008127 FF5009                          call SOB_CLOSURE_CODE(rax)
 13662                                  
 13663 0000812A 50                              	push rax
 13664 0000812B 6A01                    	push 1
 13665 0000812D 488B0425[28030000]      	mov rax, qword [free_var_101]
 13666 00008135 803805                  	cmp byte [rax], T_closure 
 13667 00008138 0F85609B0000                    jne L_code_ptr_error
 13668                                  
 13669 0000813E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 13670                                  
 13671 00008142 53                              push rbx
 13672                                  
 13673 00008143 FF5009                          call SOB_CLOSURE_CODE(rax)
 13674                                  
 13675 00008146 50                              	push rax
 13676 00008147 488B4520                mov rax, qword [rbp + 32]
 13677 0000814B 50                      	push rax
 13678 0000814C 6A02                    	push 2
 13679 0000814E 488B0425[18030000]      	mov rax, qword [free_var_99]
 13680                                  .L_lambda_simple_arity_check_ok_00a8:
 13681 00008156 803805                  	cmp byte [rax], T_closure
 13682                                  
 13683 00008159 0F853F9B0000                    jne L_code_ptr_error                      ; rax <- proc
 13684                                  
 13685                                  
 13686 0000815F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13687                                  
 13688 00008163 53                              push rbx                                  ; env pushed
 13689                                  
 13690 00008164 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13691                                  
 13692                                  
 13693 00008167 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13694                                  
 13695                                          
 13696                                          
 13697 0000816A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13698                                  
 13699 0000816E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13700                                  
 13701                                  
 13702 00008173 4D89CA                          mov r10, r9
 13703 00008176 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 13704                                  
 13705                                                                                         
 13706 0000817A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13707 0000817D 4983C404                        add r12, 4
 13708                                  
 13709 00008181 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13710                                  .L_tc_recycle_frame_loop_0061:
 13711 00008187 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 13712                                  
 13713 0000818B 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13714                                  
 13715                                  
 13716                                  
 13717 00008190 41BE00000000                    mov r14, 0                                ; clean box
 13718                                  
 13719                                  
 13720                                                                  
 13721 00008196 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13722                                  
 13723 0000819A 4983C4FF                        add r12, -1 
 13724                                  
 13725 0000819E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13726 000081A2 75E3                    	jne .L_tc_recycle_frame_loop_0061
 13727                                  .L_tc_recycle_frame_done_0061:
 13728 000081A4 5D                      	pop rbp                                  ; restore the old rbp
 13729                                  
 13730 000081A5 488B4D00                        mov rcx, qword [rbp]
 13731 000081A9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13732                                            ; rbx <- code(proc)
 13733                                  
 13734 000081AD FFE3                            jmp rbx
 13735                                  	.L_if_end_002b:
 13736 000081AF C9                      	leave
 13737 000081B0 C21800                  	ret 8 * (2 + 1)
 13738                                  .L_lambda_simple_end_0047:	; new closure is in rax
 13739 000081B3 48890425[28030000]      	mov qword [free_var_101], rax
 13740 000081BB 48B8-                   	mov rax, sob_void
 13740 000081BD [0000000000000000] 
 13741                                  
 13742 000081C5 4889C7                  	mov rdi, rax
 13743 000081C8 E85A8B0000              	call print_sexpr_if_not_void
 13744                                  
 13745 000081CD 48B8-                   	mov rax, qword (L_constants + 0)
 13745 000081CF [0000000000000000] 
 13746 000081D7 48890425[30030000]      	mov qword [free_var_102], rax
 13747 000081DF 48B8-                   	mov rax, sob_void
 13747 000081E1 [0000000000000000] 
 13748                                  
 13749 000081E9 4889C7                  	mov rdi, rax
 13750 000081EC E8368B0000              	call print_sexpr_if_not_void
 13751                                  
 13752 000081F1 48B8-                   	mov rax, qword (L_constants + 0)
 13752 000081F3 [0000000000000000] 
 13753 000081FB 48890425[38030000]      	mov qword [free_var_103], rax
 13754 00008203 48B8-                   	mov rax, sob_void
 13754 00008205 [0000000000000000] 
 13755                                  
 13756 0000820D 4889C7                  	mov rdi, rax
 13757 00008210 E8128B0000              	call print_sexpr_if_not_void
 13758                                  
 13759 00008215 48B8-                   	mov rax, qword (L_constants + 0)
 13759 00008217 [0000000000000000] 
 13760 0000821F 48890425[40030000]      	mov qword [free_var_104], rax
 13761 00008227 48B8-                   	mov rax, sob_void
 13761 00008229 [0000000000000000] 
 13762                                  
 13763 00008231 4889C7                  	mov rdi, rax
 13764 00008234 E8EE8A0000              	call print_sexpr_if_not_void
 13765                                  
 13766 00008239 48B8-                   	mov rax, qword (L_constants + 0)
 13766 0000823B [0000000000000000] 
 13767 00008243 48890425[48030000]      	mov qword [free_var_105], rax
 13768 0000824B 48B8-                   	mov rax, sob_void
 13768 0000824D [0000000000000000] 
 13769                                  
 13770 00008255 4889C7                  	mov rdi, rax
 13771 00008258 E8CA8A0000              	call print_sexpr_if_not_void
 13772                                  
 13773 0000825D 48B8-                   	mov rax, qword (L_constants + 0)
 13773 0000825F [0000000000000000] 
 13774 00008267 48890425[50030000]      	mov qword [free_var_106], rax
 13775 0000826F 48B8-                   	mov rax, sob_void
 13775 00008271 [0000000000000000] 
 13776                                  
 13777 00008279 4889C7                  	mov rdi, rax
 13778 0000827C E8A68A0000              	call print_sexpr_if_not_void
 13779                                  
 13780 00008281 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13781 00008286 E88B8A0000              	call malloc
 13782 0000828B 50                      	push rax
 13783 0000828C BF00000000              	mov rdi, 8 * 0	; new rib
 13784 00008291 E8808A0000              	call malloc
 13785 00008296 50                      	push rax
 13786 00008297 BF08000000              	mov rdi, 8 * 1	; extended env
 13787 0000829C E8758A0000              	call malloc
 13788 000082A1 488B7D10                	mov rdi, ENV
 13789 000082A5 BE00000000              	mov rsi, 0
 13790 000082AA BA01000000              	mov rdx, 1
 13791                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 13792 000082AF 4883FE00                	cmp rsi, 0
 13793 000082B3 7410                    	je .L_lambda_simple_env_end_0048
 13794 000082B5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13795 000082B9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13796 000082BD 48FFC6                  	inc rsi
 13797 000082C0 48FFC2                  	inc rdx
 13798 000082C3 EBEA                    	jmp .L_lambda_simple_env_loop_0048
 13799                                  .L_lambda_simple_env_end_0048:
 13800 000082C5 5B                      	pop rbx
 13801 000082C6 BE00000000              	mov rsi, 0
 13802                                  .L_lambda_simple_params_loop_0048:	; copy params
 13803 000082CB 4883FE00                	cmp rsi, 0
 13804 000082CF 740E                    	je .L_lambda_simple_params_end_0048
 13805 000082D1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13806 000082D6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13807 000082DA 48FFC6                  	inc rsi
 13808 000082DD EBEC                    	jmp .L_lambda_simple_params_loop_0048
 13809                                  .L_lambda_simple_params_end_0048:
 13810 000082DF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13811 000082E2 4889C3                  	mov rbx, rax
 13812 000082E5 58                      	pop rax
 13813 000082E6 C60005                  	mov byte [rax], T_closure
 13814 000082E9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13815 000082ED 48C74009[FA820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
 13816 000082F5 E994000000              	jmp .L_lambda_simple_end_0048
 13817                                  .L_lambda_simple_code_0048:	; lambda-simple body
 13818 000082FA 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13819 00008300 740B                    	je .L_lambda_simple_arity_check_ok_00a9
 13820 00008302 FF742410                	push qword [rsp + 8 * 2]
 13821 00008306 6A00                    	push 0
 13822 00008308 E9C2890000              	jmp L_error_incorrect_arity_simple
 13823                                  .L_lambda_simple_arity_check_ok_00a9:
 13824 0000830D C8000000                	enter 0, 0
 13825 00008311 48B8-                   	mov rax, qword (L_constants + 218)
 13825 00008313 [DA00000000000000] 
 13826 0000831B 50                      	push rax
 13827 0000831C 48B8-                   	mov rax, qword (L_constants + 209)
 13827 0000831E [D100000000000000] 
 13828 00008326 50                      	push rax
 13829 00008327 6A02                    	push 2
 13830 00008329 488B0425[30010000]      	mov rax, qword [free_var_38]
 13831                                  .L_lambda_simple_arity_check_ok_00aa:
 13832 00008331 803805                  	cmp byte [rax], T_closure
 13833                                  
 13834 00008334 0F8564990000                    jne L_code_ptr_error                      ; rax <- proc
 13835                                  
 13836                                  
 13837 0000833A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 13838                                  
 13839 0000833E 53                              push rbx                                  ; env pushed
 13840                                  
 13841 0000833F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 13842                                  
 13843                                  
 13844 00008342 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 13845                                  
 13846                                          
 13847                                          
 13848 00008345 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 13849                                  
 13850 00008349 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 13851                                  
 13852                                  
 13853 0000834E 4D89CA                          mov r10, r9
 13854 00008351 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 13855                                  
 13856                                                                                         
 13857 00008355 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 13858 00008358 4983C404                        add r12, 4
 13859                                  
 13860 0000835C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 13861                                  .L_tc_recycle_frame_loop_0062:
 13862 00008362 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 13863                                  
 13864 00008366 4E8974E500                      mov [rbp + (r12 * 8)], r14
 13865                                  
 13866                                  
 13867                                  
 13868 0000836B 41BE00000000                    mov r14, 0                                ; clean box
 13869                                  
 13870                                  
 13871                                                                  
 13872 00008371 4983C2FF                        add r10, -1                               ; args_copied_counter--
 13873                                  
 13874 00008375 4983C4FF                        add r12, -1 
 13875                                  
 13876 00008379 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 13877 0000837D 75E3                    	jne .L_tc_recycle_frame_loop_0062
 13878                                  .L_tc_recycle_frame_done_0062:
 13879 0000837F 5D                      	pop rbp                                  ; restore the old rbp
 13880                                  
 13881 00008380 488B4D00                        mov rcx, qword [rbp]
 13882 00008384 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 13883                                            ; rbx <- code(proc)
 13884                                  
 13885 00008388 FFE3                            jmp rbx
 13886 0000838A C9                      	leave
 13887 0000838B C21000                  	ret 8 * (2 + 0)
 13888                                  .L_lambda_simple_end_0048:	; new closure is in rax
 13889 0000838E 50                      	push rax
 13890 0000838F 6A01                    	push 1
 13891 00008391 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13892 00008396 E87B890000              	call malloc
 13893 0000839B 50                      	push rax
 13894 0000839C BF00000000              	mov rdi, 8 * 0	; new rib
 13895 000083A1 E870890000              	call malloc
 13896 000083A6 50                      	push rax
 13897 000083A7 BF08000000              	mov rdi, 8 * 1	; extended env
 13898 000083AC E865890000              	call malloc
 13899 000083B1 488B7D10                	mov rdi, ENV
 13900 000083B5 BE00000000              	mov rsi, 0
 13901 000083BA BA01000000              	mov rdx, 1
 13902                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 13903 000083BF 4883FE00                	cmp rsi, 0
 13904 000083C3 7410                    	je .L_lambda_simple_env_end_0049
 13905 000083C5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13906 000083C9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13907 000083CD 48FFC6                  	inc rsi
 13908 000083D0 48FFC2                  	inc rdx
 13909 000083D3 EBEA                    	jmp .L_lambda_simple_env_loop_0049
 13910                                  .L_lambda_simple_env_end_0049:
 13911 000083D5 5B                      	pop rbx
 13912 000083D6 BE00000000              	mov rsi, 0
 13913                                  .L_lambda_simple_params_loop_0049:	; copy params
 13914 000083DB 4883FE00                	cmp rsi, 0
 13915 000083DF 740E                    	je .L_lambda_simple_params_end_0049
 13916 000083E1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13917 000083E6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13918 000083EA 48FFC6                  	inc rsi
 13919 000083ED EBEC                    	jmp .L_lambda_simple_params_loop_0049
 13920                                  .L_lambda_simple_params_end_0049:
 13921 000083EF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13922 000083F2 4889C3                  	mov rbx, rax
 13923 000083F5 58                      	pop rax
 13924 000083F6 C60005                  	mov byte [rax], T_closure
 13925 000083F9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13926 000083FD 48C74009[0A840000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
 13927 00008405 E981150000              	jmp .L_lambda_simple_end_0049
 13928                                  .L_lambda_simple_code_0049:	; lambda-simple body
 13929 0000840A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13930 00008410 740B                    	je .L_lambda_simple_arity_check_ok_00ab
 13931 00008412 FF742410                	push qword [rsp + 8 * 2]
 13932 00008416 6A01                    	push 1
 13933 00008418 E9B2880000              	jmp L_error_incorrect_arity_simple
 13934                                  .L_lambda_simple_arity_check_ok_00ab:
 13935 0000841D C8000000                	enter 0, 0
 13936 00008421 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13937 00008426 E8EB880000              	call malloc
 13938 0000842B 50                      	push rax
 13939 0000842C BF08000000              	mov rdi, 8 * 1	; new rib
 13940 00008431 E8E0880000              	call malloc
 13941 00008436 50                      	push rax
 13942 00008437 BF10000000              	mov rdi, 8 * 2	; extended env
 13943 0000843C E8D5880000              	call malloc
 13944 00008441 488B7D10                	mov rdi, ENV
 13945 00008445 BE00000000              	mov rsi, 0
 13946 0000844A BA01000000              	mov rdx, 1
 13947                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 13948 0000844F 4883FE01                	cmp rsi, 1
 13949 00008453 7410                    	je .L_lambda_simple_env_end_004a
 13950 00008455 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13951 00008459 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13952 0000845D 48FFC6                  	inc rsi
 13953 00008460 48FFC2                  	inc rdx
 13954 00008463 EBEA                    	jmp .L_lambda_simple_env_loop_004a
 13955                                  .L_lambda_simple_env_end_004a:
 13956 00008465 5B                      	pop rbx
 13957 00008466 BE00000000              	mov rsi, 0
 13958                                  .L_lambda_simple_params_loop_004a:	; copy params
 13959 0000846B 4883FE01                	cmp rsi, 1
 13960 0000846F 740E                    	je .L_lambda_simple_params_end_004a
 13961 00008471 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13962 00008476 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13963 0000847A 48FFC6                  	inc rsi
 13964 0000847D EBEC                    	jmp .L_lambda_simple_params_loop_004a
 13965                                  .L_lambda_simple_params_end_004a:
 13966 0000847F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13967 00008482 4889C3                  	mov rbx, rax
 13968 00008485 58                      	pop rax
 13969 00008486 C60005                  	mov byte [rax], T_closure
 13970 00008489 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13971 0000848D 48C74009[9A840000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
 13972 00008495 E991040000              	jmp .L_lambda_simple_end_004a
 13973                                  .L_lambda_simple_code_004a:	; lambda-simple body
 13974 0000849A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13975 000084A0 740B                    	je .L_lambda_simple_arity_check_ok_00ac
 13976 000084A2 FF742410                	push qword [rsp + 8 * 2]
 13977 000084A6 6A02                    	push 2
 13978 000084A8 E922880000              	jmp L_error_incorrect_arity_simple
 13979                                  .L_lambda_simple_arity_check_ok_00ac:
 13980 000084AD C8000000                	enter 0, 0
 13981 000084B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13982 000084B6 E85B880000              	call malloc
 13983 000084BB 50                      	push rax
 13984 000084BC BF10000000              	mov rdi, 8 * 2	; new rib
 13985 000084C1 E850880000              	call malloc
 13986 000084C6 50                      	push rax
 13987 000084C7 BF18000000              	mov rdi, 8 * 3	; extended env
 13988 000084CC E845880000              	call malloc
 13989 000084D1 488B7D10                	mov rdi, ENV
 13990 000084D5 BE00000000              	mov rsi, 0
 13991 000084DA BA01000000              	mov rdx, 1
 13992                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 13993 000084DF 4883FE02                	cmp rsi, 2
 13994 000084E3 7410                    	je .L_lambda_simple_env_end_004b
 13995 000084E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13996 000084E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13997 000084ED 48FFC6                  	inc rsi
 13998 000084F0 48FFC2                  	inc rdx
 13999 000084F3 EBEA                    	jmp .L_lambda_simple_env_loop_004b
 14000                                  .L_lambda_simple_env_end_004b:
 14001 000084F5 5B                      	pop rbx
 14002 000084F6 BE00000000              	mov rsi, 0
 14003                                  .L_lambda_simple_params_loop_004b:	; copy params
 14004 000084FB 4883FE02                	cmp rsi, 2
 14005 000084FF 740E                    	je .L_lambda_simple_params_end_004b
 14006 00008501 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14007 00008506 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14008 0000850A 48FFC6                  	inc rsi
 14009 0000850D EBEC                    	jmp .L_lambda_simple_params_loop_004b
 14010                                  .L_lambda_simple_params_end_004b:
 14011 0000850F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14012 00008512 4889C3                  	mov rbx, rax
 14013 00008515 58                      	pop rax
 14014 00008516 C60005                  	mov byte [rax], T_closure
 14015 00008519 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14016 0000851D 48C74009[2A850000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
 14017 00008525 E9FD030000              	jmp .L_lambda_simple_end_004b
 14018                                  .L_lambda_simple_code_004b:	; lambda-simple body
 14019 0000852A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14020 00008530 740B                    	je .L_lambda_simple_arity_check_ok_00ad
 14021 00008532 FF742410                	push qword [rsp + 8 * 2]
 14022 00008536 6A02                    	push 2
 14023 00008538 E992870000              	jmp L_error_incorrect_arity_simple
 14024                                  .L_lambda_simple_arity_check_ok_00ad:
 14025 0000853D C8000000                	enter 0, 0
 14026 00008541 488B4520                mov rax, qword [rbp + 32]
 14027 00008545 50                      	push rax
 14028 00008546 6A01                    	push 1
 14029 00008548 488B0425[48000000]      	mov rax, qword [free_var_9]
 14030 00008550 803805                  	cmp byte [rax], T_closure 
 14031 00008553 0F8545970000                    jne L_code_ptr_error
 14032                                  
 14033 00008559 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14034                                  
 14035 0000855D 53                              push rbx
 14036                                  
 14037 0000855E FF5009                          call SOB_CLOSURE_CODE(rax)
 14038                                  
 14039 00008561 483D[02000000]                  	cmp rax, sob_boolean_false
 14040 00008567 0F84C1010000            	je .L_if_else_002c
 14041 0000856D 488B4528                mov rax, qword [rbp + 40]
 14042 00008571 50                      	push rax
 14043 00008572 6A01                    	push 1
 14044 00008574 488B0425[48000000]      	mov rax, qword [free_var_9]
 14045 0000857C 803805                  	cmp byte [rax], T_closure 
 14046 0000857F 0F8519970000                    jne L_code_ptr_error
 14047                                  
 14048 00008585 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14049                                  
 14050 00008589 53                              push rbx
 14051                                  
 14052 0000858A FF5009                          call SOB_CLOSURE_CODE(rax)
 14053                                  
 14054 0000858D 483D[02000000]                  	cmp rax, sob_boolean_false
 14055 00008593 7474                    	je .L_if_else_0030
 14056 00008595 488B4528                mov rax, qword [rbp + 40]
 14057 00008599 50                      	push rax
 14058 0000859A 488B4520                mov rax, qword [rbp + 32]
 14059 0000859E 50                      	push rax
 14060 0000859F 6A02                    	push 2
 14061 000085A1 488B4510                mov rax, qword [rbp + 16]
 14062 000085A5 488B00                  mov rax, qword [rax + 0]
 14063 000085A8 488B00                  mov rax, qword [rax + 0]
 14064                                  .L_lambda_simple_arity_check_ok_00b3:
 14065 000085AB 803805                  	cmp byte [rax], T_closure
 14066                                  
 14067 000085AE 0F85EA960000                    jne L_code_ptr_error                      ; rax <- proc
 14068                                  
 14069                                  
 14070 000085B4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14071                                  
 14072 000085B8 53                              push rbx                                  ; env pushed
 14073                                  
 14074 000085B9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14075                                  
 14076                                  
 14077 000085BC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14078                                  
 14079                                          
 14080                                          
 14081 000085BF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14082                                  
 14083 000085C3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14084                                  
 14085                                  
 14086 000085C8 4D89CA                          mov r10, r9
 14087 000085CB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 14088                                  
 14089                                                                                         
 14090 000085CF 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14091 000085D2 4983C404                        add r12, 4
 14092                                  
 14093 000085D6 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14094                                  .L_tc_recycle_frame_loop_0068:
 14095 000085DC 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 14096                                  
 14097 000085E0 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14098                                  
 14099                                  
 14100                                  
 14101 000085E5 41BE00000000                    mov r14, 0                                ; clean box
 14102                                  
 14103                                  
 14104                                                                  
 14105 000085EB 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14106                                  
 14107 000085EF 4983C4FF                        add r12, -1 
 14108                                  
 14109 000085F3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14110 000085F7 75E3                    	jne .L_tc_recycle_frame_loop_0068
 14111                                  .L_tc_recycle_frame_done_0068:
 14112 000085F9 5D                      	pop rbp                                  ; restore the old rbp
 14113                                  
 14114 000085FA 488B4D00                        mov rcx, qword [rbp]
 14115 000085FE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14116                                            ; rbx <- code(proc)
 14117                                  
 14118 00008602 FFE3                            jmp rbx
 14119 00008604 E920010000              	jmp .L_if_end_0030
 14120                                  	.L_if_else_0030:
 14121 00008609 488B4528                	mov rax, qword [rbp + 40]
 14122 0000860D 50                      	push rax
 14123 0000860E 6A01                    	push 1
 14124 00008610 488B0425[40000000]      	mov rax, qword [free_var_8]
 14125 00008618 803805                  	cmp byte [rax], T_closure 
 14126 0000861B 0F857D960000                    jne L_code_ptr_error
 14127                                  
 14128 00008621 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14129                                  
 14130 00008625 53                              push rbx
 14131                                  
 14132 00008626 FF5009                          call SOB_CLOSURE_CODE(rax)
 14133                                  
 14134 00008629 483D[02000000]                  	cmp rax, sob_boolean_false
 14135 0000862F 0F848E000000            	je .L_if_else_0031
 14136 00008635 488B4528                mov rax, qword [rbp + 40]
 14137 00008639 50                      	push rax
 14138 0000863A 488B4520                mov rax, qword [rbp + 32]
 14139 0000863E 50                      	push rax
 14140 0000863F 6A01                    	push 1
 14141 00008641 488B0425[B8000000]      	mov rax, qword [free_var_23]
 14142 00008649 803805                  	cmp byte [rax], T_closure 
 14143 0000864C 0F854C960000                    jne L_code_ptr_error
 14144                                  
 14145 00008652 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14146                                  
 14147 00008656 53                              push rbx
 14148                                  
 14149 00008657 FF5009                          call SOB_CLOSURE_CODE(rax)
 14150                                  
 14151 0000865A 50                              	push rax
 14152 0000865B 6A02                    	push 2
 14153 0000865D 488B4510                mov rax, qword [rbp + 16]
 14154 00008661 488B00                  mov rax, qword [rax + 0]
 14155 00008664 488B4008                mov rax, qword [rax + 8]
 14156                                  .L_lambda_simple_arity_check_ok_00b2:
 14157 00008668 803805                  	cmp byte [rax], T_closure
 14158                                  
 14159 0000866B 0F852D960000                    jne L_code_ptr_error                      ; rax <- proc
 14160                                  
 14161                                  
 14162 00008671 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14163                                  
 14164 00008675 53                              push rbx                                  ; env pushed
 14165                                  
 14166 00008676 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14167                                  
 14168                                  
 14169 00008679 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14170                                  
 14171                                          
 14172                                          
 14173 0000867C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14174                                  
 14175 00008680 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14176                                  
 14177                                  
 14178 00008685 4D89CA                          mov r10, r9
 14179 00008688 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 14180                                  
 14181                                                                                         
 14182 0000868C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14183 0000868F 4983C404                        add r12, 4
 14184                                  
 14185 00008693 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14186                                  .L_tc_recycle_frame_loop_0067:
 14187 00008699 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 14188                                  
 14189 0000869D 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14190                                  
 14191                                  
 14192                                  
 14193 000086A2 41BE00000000                    mov r14, 0                                ; clean box
 14194                                  
 14195                                  
 14196                                                                  
 14197 000086A8 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14198                                  
 14199 000086AC 4983C4FF                        add r12, -1 
 14200                                  
 14201 000086B0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14202 000086B4 75E3                    	jne .L_tc_recycle_frame_loop_0067
 14203                                  .L_tc_recycle_frame_done_0067:
 14204 000086B6 5D                      	pop rbp                                  ; restore the old rbp
 14205                                  
 14206 000086B7 488B4D00                        mov rcx, qword [rbp]
 14207 000086BB 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14208                                            ; rbx <- code(proc)
 14209                                  
 14210 000086BF FFE3                            jmp rbx
 14211 000086C1 EB66                    	jmp .L_if_end_0031
 14212                                  	.L_if_else_0031:
 14213 000086C3 6A00                    		push 0
 14214 000086C5 488B4510                mov rax, qword [rbp + 16]
 14215 000086C9 488B4008                mov rax, qword [rax + 8]
 14216 000086CD 488B00                  mov rax, qword [rax + 0]
 14217                                  .L_lambda_simple_arity_check_ok_00b1:
 14218 000086D0 803805                  	cmp byte [rax], T_closure
 14219                                  
 14220 000086D3 0F85C5950000                    jne L_code_ptr_error                      ; rax <- proc
 14221                                  
 14222                                  
 14223 000086D9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14224                                  
 14225 000086DD 53                              push rbx                                  ; env pushed
 14226                                  
 14227 000086DE FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14228                                  
 14229                                  
 14230 000086E1 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14231                                  
 14232                                          
 14233                                          
 14234 000086E4 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14235                                  
 14236 000086E8 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14237                                  
 14238                                  
 14239 000086ED 4D89CA                          mov r10, r9
 14240 000086F0 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 14241                                  
 14242                                                                                         
 14243 000086F4 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14244 000086F7 4983C404                        add r12, 4
 14245                                  
 14246 000086FB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14247                                  .L_tc_recycle_frame_loop_0066:
 14248 00008701 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 14249                                  
 14250 00008705 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14251                                  
 14252                                  
 14253                                  
 14254 0000870A 41BE00000000                    mov r14, 0                                ; clean box
 14255                                  
 14256                                  
 14257                                                                  
 14258 00008710 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14259                                  
 14260 00008714 4983C4FF                        add r12, -1 
 14261                                  
 14262 00008718 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14263 0000871C 75E3                    	jne .L_tc_recycle_frame_loop_0066
 14264                                  .L_tc_recycle_frame_done_0066:
 14265 0000871E 5D                      	pop rbp                                  ; restore the old rbp
 14266                                  
 14267 0000871F 488B4D00                        mov rcx, qword [rbp]
 14268 00008723 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14269                                            ; rbx <- code(proc)
 14270                                  
 14271 00008727 FFE3                            jmp rbx
 14272                                  	.L_if_end_0031:
 14273                                  	.L_if_end_0030:
 14274 00008729 E9F5010000              	jmp .L_if_end_002c
 14275                                  	.L_if_else_002c:
 14276 0000872E 488B4520                	mov rax, qword [rbp + 32]
 14277 00008732 50                      	push rax
 14278 00008733 6A01                    	push 1
 14279 00008735 488B0425[40000000]      	mov rax, qword [free_var_8]
 14280 0000873D 803805                  	cmp byte [rax], T_closure 
 14281 00008740 0F8558950000                    jne L_code_ptr_error
 14282                                  
 14283 00008746 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14284                                  
 14285 0000874A 53                              push rbx
 14286                                  
 14287 0000874B FF5009                          call SOB_CLOSURE_CODE(rax)
 14288                                  
 14289 0000874E 483D[02000000]                  	cmp rax, sob_boolean_false
 14290 00008754 0F84BF010000            	je .L_if_else_002d
 14291 0000875A 488B4528                mov rax, qword [rbp + 40]
 14292 0000875E 50                      	push rax
 14293 0000875F 6A01                    	push 1
 14294 00008761 488B0425[48000000]      	mov rax, qword [free_var_9]
 14295 00008769 803805                  	cmp byte [rax], T_closure 
 14296 0000876C 0F852C950000                    jne L_code_ptr_error
 14297                                  
 14298 00008772 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14299                                  
 14300 00008776 53                              push rbx
 14301                                  
 14302 00008777 FF5009                          call SOB_CLOSURE_CODE(rax)
 14303                                  
 14304 0000877A 483D[02000000]                  	cmp rax, sob_boolean_false
 14305 00008780 0F8491000000            	je .L_if_else_002e
 14306 00008786 488B4528                mov rax, qword [rbp + 40]
 14307 0000878A 50                      	push rax
 14308 0000878B 6A01                    	push 1
 14309 0000878D 488B0425[B8000000]      	mov rax, qword [free_var_23]
 14310 00008795 803805                  	cmp byte [rax], T_closure 
 14311 00008798 0F8500950000                    jne L_code_ptr_error
 14312                                  
 14313 0000879E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14314                                  
 14315 000087A2 53                              push rbx
 14316                                  
 14317 000087A3 FF5009                          call SOB_CLOSURE_CODE(rax)
 14318                                  
 14319 000087A6 50                              	push rax
 14320 000087A7 488B4520                mov rax, qword [rbp + 32]
 14321 000087AB 50                      	push rax
 14322 000087AC 6A02                    	push 2
 14323 000087AE 488B4510                mov rax, qword [rbp + 16]
 14324 000087B2 488B00                  mov rax, qword [rax + 0]
 14325 000087B5 488B4008                mov rax, qword [rax + 8]
 14326                                  .L_lambda_simple_arity_check_ok_00b0:
 14327 000087B9 803805                  	cmp byte [rax], T_closure
 14328                                  
 14329 000087BC 0F85DC940000                    jne L_code_ptr_error                      ; rax <- proc
 14330                                  
 14331                                  
 14332 000087C2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14333                                  
 14334 000087C6 53                              push rbx                                  ; env pushed
 14335                                  
 14336 000087C7 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14337                                  
 14338                                  
 14339 000087CA FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14340                                  
 14341                                          
 14342                                          
 14343 000087CD 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14344                                  
 14345 000087D1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14346                                  
 14347                                  
 14348 000087D6 4D89CA                          mov r10, r9
 14349 000087D9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 14350                                  
 14351                                                                                         
 14352 000087DD 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14353 000087E0 4983C404                        add r12, 4
 14354                                  
 14355 000087E4 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14356                                  .L_tc_recycle_frame_loop_0065:
 14357 000087EA 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 14358                                  
 14359 000087EE 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14360                                  
 14361                                  
 14362                                  
 14363 000087F3 41BE00000000                    mov r14, 0                                ; clean box
 14364                                  
 14365                                  
 14366                                                                  
 14367 000087F9 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14368                                  
 14369 000087FD 4983C4FF                        add r12, -1 
 14370                                  
 14371 00008801 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14372 00008805 75E3                    	jne .L_tc_recycle_frame_loop_0065
 14373                                  .L_tc_recycle_frame_done_0065:
 14374 00008807 5D                      	pop rbp                                  ; restore the old rbp
 14375                                  
 14376 00008808 488B4D00                        mov rcx, qword [rbp]
 14377 0000880C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14378                                            ; rbx <- code(proc)
 14379                                  
 14380 00008810 FFE3                            jmp rbx
 14381 00008812 E900010000              	jmp .L_if_end_002e
 14382                                  	.L_if_else_002e:
 14383 00008817 488B4528                	mov rax, qword [rbp + 40]
 14384 0000881B 50                      	push rax
 14385 0000881C 6A01                    	push 1
 14386 0000881E 488B0425[40000000]      	mov rax, qword [free_var_8]
 14387 00008826 803805                  	cmp byte [rax], T_closure 
 14388 00008829 0F856F940000                    jne L_code_ptr_error
 14389                                  
 14390 0000882F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14391                                  
 14392 00008833 53                              push rbx
 14393                                  
 14394 00008834 FF5009                          call SOB_CLOSURE_CODE(rax)
 14395                                  
 14396 00008837 483D[02000000]                  	cmp rax, sob_boolean_false
 14397 0000883D 7472                    	je .L_if_else_002f
 14398 0000883F 488B4528                mov rax, qword [rbp + 40]
 14399 00008843 50                      	push rax
 14400 00008844 488B4520                mov rax, qword [rbp + 32]
 14401 00008848 50                      	push rax
 14402 00008849 6A02                    	push 2
 14403 0000884B 488B4510                mov rax, qword [rbp + 16]
 14404 0000884F 488B00                  mov rax, qword [rax + 0]
 14405 00008852 488B4008                mov rax, qword [rax + 8]
 14406                                  .L_lambda_simple_arity_check_ok_00af:
 14407 00008856 803805                  	cmp byte [rax], T_closure
 14408                                  
 14409 00008859 0F853F940000                    jne L_code_ptr_error                      ; rax <- proc
 14410                                  
 14411                                  
 14412 0000885F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14413                                  
 14414 00008863 53                              push rbx                                  ; env pushed
 14415                                  
 14416 00008864 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14417                                  
 14418                                  
 14419 00008867 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14420                                  
 14421                                          
 14422                                          
 14423 0000886A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14424                                  
 14425 0000886E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14426                                  
 14427                                  
 14428 00008873 4D89CA                          mov r10, r9
 14429 00008876 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 14430                                  
 14431                                                                                         
 14432 0000887A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14433 0000887D 4983C404                        add r12, 4
 14434                                  
 14435 00008881 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14436                                  .L_tc_recycle_frame_loop_0064:
 14437 00008887 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 14438                                  
 14439 0000888B 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14440                                  
 14441                                  
 14442                                  
 14443 00008890 41BE00000000                    mov r14, 0                                ; clean box
 14444                                  
 14445                                  
 14446                                                                  
 14447 00008896 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14448                                  
 14449 0000889A 4983C4FF                        add r12, -1 
 14450                                  
 14451 0000889E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14452 000088A2 75E3                    	jne .L_tc_recycle_frame_loop_0064
 14453                                  .L_tc_recycle_frame_done_0064:
 14454 000088A4 5D                      	pop rbp                                  ; restore the old rbp
 14455                                  
 14456 000088A5 488B4D00                        mov rcx, qword [rbp]
 14457 000088A9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14458                                            ; rbx <- code(proc)
 14459                                  
 14460 000088AD FFE3                            jmp rbx
 14461 000088AF EB66                    	jmp .L_if_end_002f
 14462                                  	.L_if_else_002f:
 14463 000088B1 6A00                    		push 0
 14464 000088B3 488B4510                mov rax, qword [rbp + 16]
 14465 000088B7 488B4008                mov rax, qword [rax + 8]
 14466 000088BB 488B00                  mov rax, qword [rax + 0]
 14467                                  .L_lambda_simple_arity_check_ok_00ae:
 14468 000088BE 803805                  	cmp byte [rax], T_closure
 14469                                  
 14470 000088C1 0F85D7930000                    jne L_code_ptr_error                      ; rax <- proc
 14471                                  
 14472                                  
 14473 000088C7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14474                                  
 14475 000088CB 53                              push rbx                                  ; env pushed
 14476                                  
 14477 000088CC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14478                                  
 14479                                  
 14480 000088CF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14481                                  
 14482                                          
 14483                                          
 14484 000088D2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14485                                  
 14486 000088D6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14487                                  
 14488                                  
 14489 000088DB 4D89CA                          mov r10, r9
 14490 000088DE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 14491                                  
 14492                                                                                         
 14493 000088E2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14494 000088E5 4983C404                        add r12, 4
 14495                                  
 14496 000088E9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14497                                  .L_tc_recycle_frame_loop_0063:
 14498 000088EF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 14499                                  
 14500 000088F3 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14501                                  
 14502                                  
 14503                                  
 14504 000088F8 41BE00000000                    mov r14, 0                                ; clean box
 14505                                  
 14506                                  
 14507                                                                  
 14508 000088FE 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14509                                  
 14510 00008902 4983C4FF                        add r12, -1 
 14511                                  
 14512 00008906 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14513 0000890A 75E3                    	jne .L_tc_recycle_frame_loop_0063
 14514                                  .L_tc_recycle_frame_done_0063:
 14515 0000890C 5D                      	pop rbp                                  ; restore the old rbp
 14516                                  
 14517 0000890D 488B4D00                        mov rcx, qword [rbp]
 14518 00008911 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14519                                            ; rbx <- code(proc)
 14520                                  
 14521 00008915 FFE3                            jmp rbx
 14522                                  	.L_if_end_002f:
 14523                                  	.L_if_end_002e:
 14524 00008917 EB0A                    	jmp .L_if_end_002d
 14525                                  	.L_if_else_002d:
 14526 00008919 48B8-                   		mov rax, qword (L_constants + 0)
 14526 0000891B [0000000000000000] 
 14527                                  	.L_if_end_002d:
 14528                                  	.L_if_end_002c:
 14529 00008923 C9                      	leave
 14530 00008924 C22000                  	ret 8 * (2 + 2)
 14531                                  .L_lambda_simple_end_004b:	; new closure is in rax
 14532 00008927 C9                      	leave
 14533 00008928 C22000                  	ret 8 * (2 + 2)
 14534                                  .L_lambda_simple_end_004a:	; new closure is in rax
 14535 0000892B 50                      	push rax
 14536 0000892C 6A01                    	push 1
 14537 0000892E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14538 00008933 E8DE830000              	call malloc
 14539 00008938 50                      	push rax
 14540 00008939 BF08000000              	mov rdi, 8 * 1	; new rib
 14541 0000893E E8D3830000              	call malloc
 14542 00008943 50                      	push rax
 14543 00008944 BF10000000              	mov rdi, 8 * 2	; extended env
 14544 00008949 E8C8830000              	call malloc
 14545 0000894E 488B7D10                	mov rdi, ENV
 14546 00008952 BE00000000              	mov rsi, 0
 14547 00008957 BA01000000              	mov rdx, 1
 14548                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 14549 0000895C 4883FE01                	cmp rsi, 1
 14550 00008960 7410                    	je .L_lambda_simple_env_end_004c
 14551 00008962 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14552 00008966 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14553 0000896A 48FFC6                  	inc rsi
 14554 0000896D 48FFC2                  	inc rdx
 14555 00008970 EBEA                    	jmp .L_lambda_simple_env_loop_004c
 14556                                  .L_lambda_simple_env_end_004c:
 14557 00008972 5B                      	pop rbx
 14558 00008973 BE00000000              	mov rsi, 0
 14559                                  .L_lambda_simple_params_loop_004c:	; copy params
 14560 00008978 4883FE01                	cmp rsi, 1
 14561 0000897C 740E                    	je .L_lambda_simple_params_end_004c
 14562 0000897E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14563 00008983 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14564 00008987 48FFC6                  	inc rsi
 14565 0000898A EBEC                    	jmp .L_lambda_simple_params_loop_004c
 14566                                  .L_lambda_simple_params_end_004c:
 14567 0000898C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14568 0000898F 4889C3                  	mov rbx, rax
 14569 00008992 58                      	pop rax
 14570 00008993 C60005                  	mov byte [rax], T_closure
 14571 00008996 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14572 0000899A 48C74009[A7890000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
 14573 000089A2 E9870F0000              	jmp .L_lambda_simple_end_004c
 14574                                  .L_lambda_simple_code_004c:	; lambda-simple body
 14575 000089A7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14576 000089AD 740B                    	je .L_lambda_simple_arity_check_ok_00b4
 14577 000089AF FF742410                	push qword [rsp + 8 * 2]
 14578 000089B3 6A01                    	push 1
 14579 000089B5 E915830000              	jmp L_error_incorrect_arity_simple
 14580                                  .L_lambda_simple_arity_check_ok_00b4:
 14581 000089BA C8000000                	enter 0, 0
 14582 000089BE 488B0425[38010000]      	mov rax, qword [free_var_39]
 14583 000089C6 50                      	push rax
 14584 000089C7 488B0425[40010000]      	mov rax, qword [free_var_40]
 14585 000089CF 50                      	push rax
 14586 000089D0 6A02                    	push 2
 14587 000089D2 488B4520                mov rax, qword [rbp + 32]
 14588 000089D6 803805                  	cmp byte [rax], T_closure 
 14589 000089D9 0F85BF920000                    jne L_code_ptr_error
 14590                                  
 14591 000089DF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14592                                  
 14593 000089E3 53                              push rbx
 14594                                  
 14595 000089E4 FF5009                          call SOB_CLOSURE_CODE(rax)
 14596                                  
 14597 000089E7 50                              	push rax
 14598 000089E8 6A01                    	push 1
 14599 000089EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14600 000089EF E822830000              	call malloc
 14601 000089F4 50                      	push rax
 14602 000089F5 BF08000000              	mov rdi, 8 * 1	; new rib
 14603 000089FA E817830000              	call malloc
 14604 000089FF 50                      	push rax
 14605 00008A00 BF18000000              	mov rdi, 8 * 3	; extended env
 14606 00008A05 E80C830000              	call malloc
 14607 00008A0A 488B7D10                	mov rdi, ENV
 14608 00008A0E BE00000000              	mov rsi, 0
 14609 00008A13 BA01000000              	mov rdx, 1
 14610                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
 14611 00008A18 4883FE02                	cmp rsi, 2
 14612 00008A1C 7410                    	je .L_lambda_simple_env_end_004d
 14613 00008A1E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14614 00008A22 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14615 00008A26 48FFC6                  	inc rsi
 14616 00008A29 48FFC2                  	inc rdx
 14617 00008A2C EBEA                    	jmp .L_lambda_simple_env_loop_004d
 14618                                  .L_lambda_simple_env_end_004d:
 14619 00008A2E 5B                      	pop rbx
 14620 00008A2F BE00000000              	mov rsi, 0
 14621                                  .L_lambda_simple_params_loop_004d:	; copy params
 14622 00008A34 4883FE01                	cmp rsi, 1
 14623 00008A38 740E                    	je .L_lambda_simple_params_end_004d
 14624 00008A3A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14625 00008A3F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14626 00008A43 48FFC6                  	inc rsi
 14627 00008A46 EBEC                    	jmp .L_lambda_simple_params_loop_004d
 14628                                  .L_lambda_simple_params_end_004d:
 14629 00008A48 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14630 00008A4B 4889C3                  	mov rbx, rax
 14631 00008A4E 58                      	pop rax
 14632 00008A4F C60005                  	mov byte [rax], T_closure
 14633 00008A52 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14634 00008A56 48C74009[638A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
 14635 00008A5E E96E0E0000              	jmp .L_lambda_simple_end_004d
 14636                                  .L_lambda_simple_code_004d:	; lambda-simple body
 14637 00008A63 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14638 00008A69 740B                    	je .L_lambda_simple_arity_check_ok_00b5
 14639 00008A6B FF742410                	push qword [rsp + 8 * 2]
 14640 00008A6F 6A01                    	push 1
 14641 00008A71 E959820000              	jmp L_error_incorrect_arity_simple
 14642                                  .L_lambda_simple_arity_check_ok_00b5:
 14643 00008A76 C8000000                	enter 0, 0
 14644 00008A7A 488B0425[48010000]      	mov rax, qword [free_var_41]
 14645 00008A82 50                      	push rax
 14646 00008A83 488B0425[50010000]      	mov rax, qword [free_var_42]
 14647 00008A8B 50                      	push rax
 14648 00008A8C 6A02                    	push 2
 14649 00008A8E 488B4510                mov rax, qword [rbp + 16]
 14650 00008A92 488B00                  mov rax, qword [rax + 0]
 14651 00008A95 488B00                  mov rax, qword [rax + 0]
 14652 00008A98 803805                  	cmp byte [rax], T_closure 
 14653 00008A9B 0F85FD910000                    jne L_code_ptr_error
 14654                                  
 14655 00008AA1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14656                                  
 14657 00008AA5 53                              push rbx
 14658                                  
 14659 00008AA6 FF5009                          call SOB_CLOSURE_CODE(rax)
 14660                                  
 14661 00008AA9 50                              	push rax
 14662 00008AAA 6A01                    	push 1
 14663 00008AAC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14664 00008AB1 E860820000              	call malloc
 14665 00008AB6 50                      	push rax
 14666 00008AB7 BF08000000              	mov rdi, 8 * 1	; new rib
 14667 00008ABC E855820000              	call malloc
 14668 00008AC1 50                      	push rax
 14669 00008AC2 BF20000000              	mov rdi, 8 * 4	; extended env
 14670 00008AC7 E84A820000              	call malloc
 14671 00008ACC 488B7D10                	mov rdi, ENV
 14672 00008AD0 BE00000000              	mov rsi, 0
 14673 00008AD5 BA01000000              	mov rdx, 1
 14674                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
 14675 00008ADA 4883FE03                	cmp rsi, 3
 14676 00008ADE 7410                    	je .L_lambda_simple_env_end_004e
 14677 00008AE0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14678 00008AE4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14679 00008AE8 48FFC6                  	inc rsi
 14680 00008AEB 48FFC2                  	inc rdx
 14681 00008AEE EBEA                    	jmp .L_lambda_simple_env_loop_004e
 14682                                  .L_lambda_simple_env_end_004e:
 14683 00008AF0 5B                      	pop rbx
 14684 00008AF1 BE00000000              	mov rsi, 0
 14685                                  .L_lambda_simple_params_loop_004e:	; copy params
 14686 00008AF6 4883FE01                	cmp rsi, 1
 14687 00008AFA 740E                    	je .L_lambda_simple_params_end_004e
 14688 00008AFC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14689 00008B01 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14690 00008B05 48FFC6                  	inc rsi
 14691 00008B08 EBEC                    	jmp .L_lambda_simple_params_loop_004e
 14692                                  .L_lambda_simple_params_end_004e:
 14693 00008B0A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14694 00008B0D 4889C3                  	mov rbx, rax
 14695 00008B10 58                      	pop rax
 14696 00008B11 C60005                  	mov byte [rax], T_closure
 14697 00008B14 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14698 00008B18 48C74009[258B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
 14699 00008B20 E94F0D0000              	jmp .L_lambda_simple_end_004e
 14700                                  .L_lambda_simple_code_004e:	; lambda-simple body
 14701 00008B25 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14702 00008B2B 740B                    	je .L_lambda_simple_arity_check_ok_00b6
 14703 00008B2D FF742410                	push qword [rsp + 8 * 2]
 14704 00008B31 6A01                    	push 1
 14705 00008B33 E997810000              	jmp L_error_incorrect_arity_simple
 14706                                  .L_lambda_simple_arity_check_ok_00b6:
 14707 00008B38 C8000000                	enter 0, 0
 14708 00008B3C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14709 00008B41 E8D0810000              	call malloc
 14710 00008B46 50                      	push rax
 14711 00008B47 BF08000000              	mov rdi, 8 * 1	; new rib
 14712 00008B4C E8C5810000              	call malloc
 14713 00008B51 50                      	push rax
 14714 00008B52 BF28000000              	mov rdi, 8 * 5	; extended env
 14715 00008B57 E8BA810000              	call malloc
 14716 00008B5C 488B7D10                	mov rdi, ENV
 14717 00008B60 BE00000000              	mov rsi, 0
 14718 00008B65 BA01000000              	mov rdx, 1
 14719                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
 14720 00008B6A 4883FE04                	cmp rsi, 4
 14721 00008B6E 7410                    	je .L_lambda_simple_env_end_004f
 14722 00008B70 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14723 00008B74 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14724 00008B78 48FFC6                  	inc rsi
 14725 00008B7B 48FFC2                  	inc rdx
 14726 00008B7E EBEA                    	jmp .L_lambda_simple_env_loop_004f
 14727                                  .L_lambda_simple_env_end_004f:
 14728 00008B80 5B                      	pop rbx
 14729 00008B81 BE00000000              	mov rsi, 0
 14730                                  .L_lambda_simple_params_loop_004f:	; copy params
 14731 00008B86 4883FE01                	cmp rsi, 1
 14732 00008B8A 740E                    	je .L_lambda_simple_params_end_004f
 14733 00008B8C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14734 00008B91 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14735 00008B95 48FFC6                  	inc rsi
 14736 00008B98 EBEC                    	jmp .L_lambda_simple_params_loop_004f
 14737                                  .L_lambda_simple_params_end_004f:
 14738 00008B9A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14739 00008B9D 4889C3                  	mov rbx, rax
 14740 00008BA0 58                      	pop rax
 14741 00008BA1 C60005                  	mov byte [rax], T_closure
 14742 00008BA4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14743 00008BA8 48C74009[B58B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
 14744 00008BB0 E9A7000000              	jmp .L_lambda_simple_end_004f
 14745                                  .L_lambda_simple_code_004f:	; lambda-simple body
 14746 00008BB5 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14747 00008BBB 740B                    	je .L_lambda_simple_arity_check_ok_00b7
 14748 00008BBD FF742410                	push qword [rsp + 8 * 2]
 14749 00008BC1 6A02                    	push 2
 14750 00008BC3 E907810000              	jmp L_error_incorrect_arity_simple
 14751                                  .L_lambda_simple_arity_check_ok_00b7:
 14752 00008BC8 C8000000                	enter 0, 0
 14753 00008BCC 488B4528                mov rax, qword [rbp + 40]
 14754 00008BD0 50                      	push rax
 14755 00008BD1 488B4520                mov rax, qword [rbp + 32]
 14756 00008BD5 50                      	push rax
 14757 00008BD6 6A02                    	push 2
 14758 00008BD8 488B4510                mov rax, qword [rbp + 16]
 14759 00008BDC 488B4008                mov rax, qword [rax + 8]
 14760 00008BE0 488B00                  mov rax, qword [rax + 0]
 14761 00008BE3 803805                  	cmp byte [rax], T_closure 
 14762 00008BE6 0F85B2900000                    jne L_code_ptr_error
 14763                                  
 14764 00008BEC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 14765                                  
 14766 00008BF0 53                              push rbx
 14767                                  
 14768 00008BF1 FF5009                          call SOB_CLOSURE_CODE(rax)
 14769                                  
 14770 00008BF4 50                              	push rax
 14771 00008BF5 6A01                    	push 1
 14772 00008BF7 488B0425[B0020000]      	mov rax, qword [free_var_86]
 14773                                  .L_lambda_simple_arity_check_ok_00b8:
 14774 00008BFF 803805                  	cmp byte [rax], T_closure
 14775                                  
 14776 00008C02 0F8596900000                    jne L_code_ptr_error                      ; rax <- proc
 14777                                  
 14778                                  
 14779 00008C08 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14780                                  
 14781 00008C0C 53                              push rbx                                  ; env pushed
 14782                                  
 14783 00008C0D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14784                                  
 14785                                  
 14786 00008C10 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14787                                  
 14788                                          
 14789                                          
 14790 00008C13 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14791                                  
 14792 00008C17 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14793                                  
 14794                                  
 14795 00008C1C 4D89CA                          mov r10, r9
 14796 00008C1F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 14797                                  
 14798                                                                                         
 14799 00008C23 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14800 00008C26 4983C404                        add r12, 4
 14801                                  
 14802 00008C2A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14803                                  .L_tc_recycle_frame_loop_0069:
 14804 00008C30 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 14805                                  
 14806 00008C34 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14807                                  
 14808                                  
 14809                                  
 14810 00008C39 41BE00000000                    mov r14, 0                                ; clean box
 14811                                  
 14812                                  
 14813                                                                  
 14814 00008C3F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14815                                  
 14816 00008C43 4983C4FF                        add r12, -1 
 14817                                  
 14818 00008C47 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14819 00008C4B 75E3                    	jne .L_tc_recycle_frame_loop_0069
 14820                                  .L_tc_recycle_frame_done_0069:
 14821 00008C4D 5D                      	pop rbp                                  ; restore the old rbp
 14822                                  
 14823 00008C4E 488B4D00                        mov rcx, qword [rbp]
 14824 00008C52 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14825                                            ; rbx <- code(proc)
 14826                                  
 14827 00008C56 FFE3                            jmp rbx
 14828 00008C58 C9                      	leave
 14829 00008C59 C22000                  	ret 8 * (2 + 2)
 14830                                  .L_lambda_simple_end_004f:	; new closure is in rax
 14831 00008C5C 50                      	push rax
 14832 00008C5D 6A01                    	push 1
 14833 00008C5F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14834 00008C64 E8AD800000              	call malloc
 14835 00008C69 50                      	push rax
 14836 00008C6A BF08000000              	mov rdi, 8 * 1	; new rib
 14837 00008C6F E8A2800000              	call malloc
 14838 00008C74 50                      	push rax
 14839 00008C75 BF28000000              	mov rdi, 8 * 5	; extended env
 14840 00008C7A E897800000              	call malloc
 14841 00008C7F 488B7D10                	mov rdi, ENV
 14842 00008C83 BE00000000              	mov rsi, 0
 14843 00008C88 BA01000000              	mov rdx, 1
 14844                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
 14845 00008C8D 4883FE04                	cmp rsi, 4
 14846 00008C91 7410                    	je .L_lambda_simple_env_end_0050
 14847 00008C93 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14848 00008C97 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14849 00008C9B 48FFC6                  	inc rsi
 14850 00008C9E 48FFC2                  	inc rdx
 14851 00008CA1 EBEA                    	jmp .L_lambda_simple_env_loop_0050
 14852                                  .L_lambda_simple_env_end_0050:
 14853 00008CA3 5B                      	pop rbx
 14854 00008CA4 BE00000000              	mov rsi, 0
 14855                                  .L_lambda_simple_params_loop_0050:	; copy params
 14856 00008CA9 4883FE01                	cmp rsi, 1
 14857 00008CAD 740E                    	je .L_lambda_simple_params_end_0050
 14858 00008CAF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14859 00008CB4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14860 00008CB8 48FFC6                  	inc rsi
 14861 00008CBB EBEC                    	jmp .L_lambda_simple_params_loop_0050
 14862                                  .L_lambda_simple_params_end_0050:
 14863 00008CBD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14864 00008CC0 4889C3                  	mov rbx, rax
 14865 00008CC3 58                      	pop rax
 14866 00008CC4 C60005                  	mov byte [rax], T_closure
 14867 00008CC7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14868 00008CCB 48C74009[D88C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
 14869 00008CD3 E93F0B0000              	jmp .L_lambda_simple_end_0050
 14870                                  .L_lambda_simple_code_0050:	; lambda-simple body
 14871 00008CD8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14872 00008CDE 740B                    	je .L_lambda_simple_arity_check_ok_00b9
 14873 00008CE0 FF742410                	push qword [rsp + 8 * 2]
 14874 00008CE4 6A01                    	push 1
 14875 00008CE6 E9E47F0000              	jmp L_error_incorrect_arity_simple
 14876                                  .L_lambda_simple_arity_check_ok_00b9:
 14877 00008CEB C8000000                	enter 0, 0
 14878 00008CEF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14879 00008CF4 E81D800000              	call malloc
 14880 00008CF9 50                      	push rax
 14881 00008CFA BF08000000              	mov rdi, 8 * 1	; new rib
 14882 00008CFF E812800000              	call malloc
 14883 00008D04 50                      	push rax
 14884 00008D05 BF30000000              	mov rdi, 8 * 6	; extended env
 14885 00008D0A E807800000              	call malloc
 14886 00008D0F 488B7D10                	mov rdi, ENV
 14887 00008D13 BE00000000              	mov rsi, 0
 14888 00008D18 BA01000000              	mov rdx, 1
 14889                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
 14890 00008D1D 4883FE05                	cmp rsi, 5
 14891 00008D21 7410                    	je .L_lambda_simple_env_end_0051
 14892 00008D23 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14893 00008D27 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14894 00008D2B 48FFC6                  	inc rsi
 14895 00008D2E 48FFC2                  	inc rdx
 14896 00008D31 EBEA                    	jmp .L_lambda_simple_env_loop_0051
 14897                                  .L_lambda_simple_env_end_0051:
 14898 00008D33 5B                      	pop rbx
 14899 00008D34 BE00000000              	mov rsi, 0
 14900                                  .L_lambda_simple_params_loop_0051:	; copy params
 14901 00008D39 4883FE01                	cmp rsi, 1
 14902 00008D3D 740E                    	je .L_lambda_simple_params_end_0051
 14903 00008D3F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14904 00008D44 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14905 00008D48 48FFC6                  	inc rsi
 14906 00008D4B EBEC                    	jmp .L_lambda_simple_params_loop_0051
 14907                                  .L_lambda_simple_params_end_0051:
 14908 00008D4D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14909 00008D50 4889C3                  	mov rbx, rax
 14910 00008D53 58                      	pop rax
 14911 00008D54 C60005                  	mov byte [rax], T_closure
 14912 00008D57 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14913 00008D5B 48C74009[688D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
 14914 00008D63 E98B000000              	jmp .L_lambda_simple_end_0051
 14915                                  .L_lambda_simple_code_0051:	; lambda-simple body
 14916 00008D68 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14917 00008D6E 740B                    	je .L_lambda_simple_arity_check_ok_00ba
 14918 00008D70 FF742410                	push qword [rsp + 8 * 2]
 14919 00008D74 6A02                    	push 2
 14920 00008D76 E9547F0000              	jmp L_error_incorrect_arity_simple
 14921                                  .L_lambda_simple_arity_check_ok_00ba:
 14922 00008D7B C8000000                	enter 0, 0
 14923 00008D7F 488B4520                mov rax, qword [rbp + 32]
 14924 00008D83 50                      	push rax
 14925 00008D84 488B4528                mov rax, qword [rbp + 40]
 14926 00008D88 50                      	push rax
 14927 00008D89 6A02                    	push 2
 14928 00008D8B 488B4510                mov rax, qword [rbp + 16]
 14929 00008D8F 488B4010                mov rax, qword [rax + 16]
 14930 00008D93 488B00                  mov rax, qword [rax + 0]
 14931                                  .L_lambda_simple_arity_check_ok_00bb:
 14932 00008D96 803805                  	cmp byte [rax], T_closure
 14933                                  
 14934 00008D99 0F85FF8E0000                    jne L_code_ptr_error                      ; rax <- proc
 14935                                  
 14936                                  
 14937 00008D9F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 14938                                  
 14939 00008DA3 53                              push rbx                                  ; env pushed
 14940                                  
 14941 00008DA4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 14942                                  
 14943                                  
 14944 00008DA7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 14945                                  
 14946                                          
 14947                                          
 14948 00008DAA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 14949                                  
 14950 00008DAE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 14951                                  
 14952                                  
 14953 00008DB3 4D89CA                          mov r10, r9
 14954 00008DB6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 14955                                  
 14956                                                                                         
 14957 00008DBA 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 14958 00008DBD 4983C404                        add r12, 4
 14959                                  
 14960 00008DC1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 14961                                  .L_tc_recycle_frame_loop_006a:
 14962 00008DC7 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 14963                                  
 14964 00008DCB 4E8974E500                      mov [rbp + (r12 * 8)], r14
 14965                                  
 14966                                  
 14967                                  
 14968 00008DD0 41BE00000000                    mov r14, 0                                ; clean box
 14969                                  
 14970                                  
 14971                                                                  
 14972 00008DD6 4983C2FF                        add r10, -1                               ; args_copied_counter--
 14973                                  
 14974 00008DDA 4983C4FF                        add r12, -1 
 14975                                  
 14976 00008DDE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 14977 00008DE2 75E3                    	jne .L_tc_recycle_frame_loop_006a
 14978                                  .L_tc_recycle_frame_done_006a:
 14979 00008DE4 5D                      	pop rbp                                  ; restore the old rbp
 14980                                  
 14981 00008DE5 488B4D00                        mov rcx, qword [rbp]
 14982 00008DE9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 14983                                            ; rbx <- code(proc)
 14984                                  
 14985 00008DED FFE3                            jmp rbx
 14986 00008DEF C9                      	leave
 14987 00008DF0 C22000                  	ret 8 * (2 + 2)
 14988                                  .L_lambda_simple_end_0051:	; new closure is in rax
 14989 00008DF3 50                      	push rax
 14990 00008DF4 6A01                    	push 1
 14991 00008DF6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14992 00008DFB E8167F0000              	call malloc
 14993 00008E00 50                      	push rax
 14994 00008E01 BF08000000              	mov rdi, 8 * 1	; new rib
 14995 00008E06 E80B7F0000              	call malloc
 14996 00008E0B 50                      	push rax
 14997 00008E0C BF30000000              	mov rdi, 8 * 6	; extended env
 14998 00008E11 E8007F0000              	call malloc
 14999 00008E16 488B7D10                	mov rdi, ENV
 15000 00008E1A BE00000000              	mov rsi, 0
 15001 00008E1F BA01000000              	mov rdx, 1
 15002                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
 15003 00008E24 4883FE05                	cmp rsi, 5
 15004 00008E28 7410                    	je .L_lambda_simple_env_end_0052
 15005 00008E2A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15006 00008E2E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15007 00008E32 48FFC6                  	inc rsi
 15008 00008E35 48FFC2                  	inc rdx
 15009 00008E38 EBEA                    	jmp .L_lambda_simple_env_loop_0052
 15010                                  .L_lambda_simple_env_end_0052:
 15011 00008E3A 5B                      	pop rbx
 15012 00008E3B BE00000000              	mov rsi, 0
 15013                                  .L_lambda_simple_params_loop_0052:	; copy params
 15014 00008E40 4883FE01                	cmp rsi, 1
 15015 00008E44 740E                    	je .L_lambda_simple_params_end_0052
 15016 00008E46 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15017 00008E4B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15018 00008E4F 48FFC6                  	inc rsi
 15019 00008E52 EBEC                    	jmp .L_lambda_simple_params_loop_0052
 15020                                  .L_lambda_simple_params_end_0052:
 15021 00008E54 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15022 00008E57 4889C3                  	mov rbx, rax
 15023 00008E5A 58                      	pop rax
 15024 00008E5B C60005                  	mov byte [rax], T_closure
 15025 00008E5E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15026 00008E62 48C74009[6F8E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
 15027 00008E6A E94B090000              	jmp .L_lambda_simple_end_0052
 15028                                  .L_lambda_simple_code_0052:	; lambda-simple body
 15029 00008E6F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15030 00008E75 740B                    	je .L_lambda_simple_arity_check_ok_00bc
 15031 00008E77 FF742410                	push qword [rsp + 8 * 2]
 15032 00008E7B 6A01                    	push 1
 15033 00008E7D E94D7E0000              	jmp L_error_incorrect_arity_simple
 15034                                  .L_lambda_simple_arity_check_ok_00bc:
 15035 00008E82 C8000000                	enter 0, 0
 15036 00008E86 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15037 00008E8B E8867E0000              	call malloc
 15038 00008E90 50                      	push rax
 15039 00008E91 BF08000000              	mov rdi, 8 * 1	; new rib
 15040 00008E96 E87B7E0000              	call malloc
 15041 00008E9B 50                      	push rax
 15042 00008E9C BF38000000              	mov rdi, 8 * 7	; extended env
 15043 00008EA1 E8707E0000              	call malloc
 15044 00008EA6 488B7D10                	mov rdi, ENV
 15045 00008EAA BE00000000              	mov rsi, 0
 15046 00008EAF BA01000000              	mov rdx, 1
 15047                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
 15048 00008EB4 4883FE06                	cmp rsi, 6
 15049 00008EB8 7410                    	je .L_lambda_simple_env_end_0053
 15050 00008EBA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15051 00008EBE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15052 00008EC2 48FFC6                  	inc rsi
 15053 00008EC5 48FFC2                  	inc rdx
 15054 00008EC8 EBEA                    	jmp .L_lambda_simple_env_loop_0053
 15055                                  .L_lambda_simple_env_end_0053:
 15056 00008ECA 5B                      	pop rbx
 15057 00008ECB BE00000000              	mov rsi, 0
 15058                                  .L_lambda_simple_params_loop_0053:	; copy params
 15059 00008ED0 4883FE01                	cmp rsi, 1
 15060 00008ED4 740E                    	je .L_lambda_simple_params_end_0053
 15061 00008ED6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15062 00008EDB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15063 00008EDF 48FFC6                  	inc rsi
 15064 00008EE2 EBEC                    	jmp .L_lambda_simple_params_loop_0053
 15065                                  .L_lambda_simple_params_end_0053:
 15066 00008EE4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15067 00008EE7 4889C3                  	mov rbx, rax
 15068 00008EEA 58                      	pop rax
 15069 00008EEB C60005                  	mov byte [rax], T_closure
 15070 00008EEE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15071 00008EF2 48C74009[FF8E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
 15072 00008EFA E9A6000000              	jmp .L_lambda_simple_end_0053
 15073                                  .L_lambda_simple_code_0053:	; lambda-simple body
 15074 00008EFF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15075 00008F05 740B                    	je .L_lambda_simple_arity_check_ok_00bd
 15076 00008F07 FF742410                	push qword [rsp + 8 * 2]
 15077 00008F0B 6A02                    	push 2
 15078 00008F0D E9BD7D0000              	jmp L_error_incorrect_arity_simple
 15079                                  .L_lambda_simple_arity_check_ok_00bd:
 15080 00008F12 C8000000                	enter 0, 0
 15081 00008F16 488B4528                mov rax, qword [rbp + 40]
 15082 00008F1A 50                      	push rax
 15083 00008F1B 488B4520                mov rax, qword [rbp + 32]
 15084 00008F1F 50                      	push rax
 15085 00008F20 6A02                    	push 2
 15086 00008F22 488B4510                mov rax, qword [rbp + 16]
 15087 00008F26 488B00                  mov rax, qword [rax + 0]
 15088 00008F29 488B00                  mov rax, qword [rax + 0]
 15089 00008F2C 803805                  	cmp byte [rax], T_closure 
 15090 00008F2F 0F85698D0000                    jne L_code_ptr_error
 15091                                  
 15092 00008F35 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15093                                  
 15094 00008F39 53                              push rbx
 15095                                  
 15096 00008F3A FF5009                          call SOB_CLOSURE_CODE(rax)
 15097                                  
 15098 00008F3D 50                              	push rax
 15099 00008F3E 6A01                    	push 1
 15100 00008F40 488B0425[B0020000]      	mov rax, qword [free_var_86]
 15101                                  .L_lambda_simple_arity_check_ok_00be:
 15102 00008F48 803805                  	cmp byte [rax], T_closure
 15103                                  
 15104 00008F4B 0F854D8D0000                    jne L_code_ptr_error                      ; rax <- proc
 15105                                  
 15106                                  
 15107 00008F51 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15108                                  
 15109 00008F55 53                              push rbx                                  ; env pushed
 15110                                  
 15111 00008F56 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15112                                  
 15113                                  
 15114 00008F59 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15115                                  
 15116                                          
 15117                                          
 15118 00008F5C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15119                                  
 15120 00008F60 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15121                                  
 15122                                  
 15123 00008F65 4D89CA                          mov r10, r9
 15124 00008F68 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 15125                                  
 15126                                                                                         
 15127 00008F6C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15128 00008F6F 4983C404                        add r12, 4
 15129                                  
 15130 00008F73 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15131                                  .L_tc_recycle_frame_loop_006b:
 15132 00008F79 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 15133                                  
 15134 00008F7D 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15135                                  
 15136                                  
 15137                                  
 15138 00008F82 41BE00000000                    mov r14, 0                                ; clean box
 15139                                  
 15140                                  
 15141                                                                  
 15142 00008F88 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15143                                  
 15144 00008F8C 4983C4FF                        add r12, -1 
 15145                                  
 15146 00008F90 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15147 00008F94 75E3                    	jne .L_tc_recycle_frame_loop_006b
 15148                                  .L_tc_recycle_frame_done_006b:
 15149 00008F96 5D                      	pop rbp                                  ; restore the old rbp
 15150                                  
 15151 00008F97 488B4D00                        mov rcx, qword [rbp]
 15152 00008F9B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15153                                            ; rbx <- code(proc)
 15154                                  
 15155 00008F9F FFE3                            jmp rbx
 15156 00008FA1 C9                      	leave
 15157 00008FA2 C22000                  	ret 8 * (2 + 2)
 15158                                  .L_lambda_simple_end_0053:	; new closure is in rax
 15159 00008FA5 50                      	push rax
 15160 00008FA6 6A01                    	push 1
 15161 00008FA8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15162 00008FAD E8647D0000              	call malloc
 15163 00008FB2 50                      	push rax
 15164 00008FB3 BF08000000              	mov rdi, 8 * 1	; new rib
 15165 00008FB8 E8597D0000              	call malloc
 15166 00008FBD 50                      	push rax
 15167 00008FBE BF38000000              	mov rdi, 8 * 7	; extended env
 15168 00008FC3 E84E7D0000              	call malloc
 15169 00008FC8 488B7D10                	mov rdi, ENV
 15170 00008FCC BE00000000              	mov rsi, 0
 15171 00008FD1 BA01000000              	mov rdx, 1
 15172                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
 15173 00008FD6 4883FE06                	cmp rsi, 6
 15174 00008FDA 7410                    	je .L_lambda_simple_env_end_0054
 15175 00008FDC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15176 00008FE0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15177 00008FE4 48FFC6                  	inc rsi
 15178 00008FE7 48FFC2                  	inc rdx
 15179 00008FEA EBEA                    	jmp .L_lambda_simple_env_loop_0054
 15180                                  .L_lambda_simple_env_end_0054:
 15181 00008FEC 5B                      	pop rbx
 15182 00008FED BE00000000              	mov rsi, 0
 15183                                  .L_lambda_simple_params_loop_0054:	; copy params
 15184 00008FF2 4883FE01                	cmp rsi, 1
 15185 00008FF6 740E                    	je .L_lambda_simple_params_end_0054
 15186 00008FF8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15187 00008FFD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15188 00009001 48FFC6                  	inc rsi
 15189 00009004 EBEC                    	jmp .L_lambda_simple_params_loop_0054
 15190                                  .L_lambda_simple_params_end_0054:
 15191 00009006 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15192 00009009 4889C3                  	mov rbx, rax
 15193 0000900C 58                      	pop rax
 15194 0000900D C60005                  	mov byte [rax], T_closure
 15195 00009010 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15196 00009014 48C74009[21900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
 15197 0000901C E93C070000              	jmp .L_lambda_simple_end_0054
 15198                                  .L_lambda_simple_code_0054:	; lambda-simple body
 15199 00009021 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15200 00009027 740B                    	je .L_lambda_simple_arity_check_ok_00bf
 15201 00009029 FF742410                	push qword [rsp + 8 * 2]
 15202 0000902D 6A01                    	push 1
 15203 0000902F E99B7C0000              	jmp L_error_incorrect_arity_simple
 15204                                  .L_lambda_simple_arity_check_ok_00bf:
 15205 00009034 C8000000                	enter 0, 0
 15206 00009038 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15207 0000903D E8D47C0000              	call malloc
 15208 00009042 50                      	push rax
 15209 00009043 BF08000000              	mov rdi, 8 * 1	; new rib
 15210 00009048 E8C97C0000              	call malloc
 15211 0000904D 50                      	push rax
 15212 0000904E BF40000000              	mov rdi, 8 * 8	; extended env
 15213 00009053 E8BE7C0000              	call malloc
 15214 00009058 488B7D10                	mov rdi, ENV
 15215 0000905C BE00000000              	mov rsi, 0
 15216 00009061 BA01000000              	mov rdx, 1
 15217                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
 15218 00009066 4883FE07                	cmp rsi, 7
 15219 0000906A 7410                    	je .L_lambda_simple_env_end_0055
 15220 0000906C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15221 00009070 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15222 00009074 48FFC6                  	inc rsi
 15223 00009077 48FFC2                  	inc rdx
 15224 0000907A EBEA                    	jmp .L_lambda_simple_env_loop_0055
 15225                                  .L_lambda_simple_env_end_0055:
 15226 0000907C 5B                      	pop rbx
 15227 0000907D BE00000000              	mov rsi, 0
 15228                                  .L_lambda_simple_params_loop_0055:	; copy params
 15229 00009082 4883FE01                	cmp rsi, 1
 15230 00009086 740E                    	je .L_lambda_simple_params_end_0055
 15231 00009088 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15232 0000908D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15233 00009091 48FFC6                  	inc rsi
 15234 00009094 EBEC                    	jmp .L_lambda_simple_params_loop_0055
 15235                                  .L_lambda_simple_params_end_0055:
 15236 00009096 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15237 00009099 4889C3                  	mov rbx, rax
 15238 0000909C 58                      	pop rax
 15239 0000909D C60005                  	mov byte [rax], T_closure
 15240 000090A0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15241 000090A4 48C74009[B1900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
 15242 000090AC E9B0040000              	jmp .L_lambda_simple_end_0055
 15243                                  .L_lambda_simple_code_0055:	; lambda-simple body
 15244 000090B1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15245 000090B7 740B                    	je .L_lambda_simple_arity_check_ok_00c0
 15246 000090B9 FF742410                	push qword [rsp + 8 * 2]
 15247 000090BD 6A01                    	push 1
 15248 000090BF E90B7C0000              	jmp L_error_incorrect_arity_simple
 15249                                  .L_lambda_simple_arity_check_ok_00c0:
 15250 000090C4 C8000000                	enter 0, 0
 15251 000090C8 48B8-                   	mov rax, qword (L_constants + 22)
 15251 000090CA [1600000000000000] 
 15252 000090D2 50                      	push rax
 15253 000090D3 6A01                    	push 1
 15254 000090D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15255 000090DA E8377C0000              	call malloc
 15256 000090DF 50                      	push rax
 15257 000090E0 BF08000000              	mov rdi, 8 * 1	; new rib
 15258 000090E5 E82C7C0000              	call malloc
 15259 000090EA 50                      	push rax
 15260 000090EB BF48000000              	mov rdi, 8 * 9	; extended env
 15261 000090F0 E8217C0000              	call malloc
 15262 000090F5 488B7D10                	mov rdi, ENV
 15263 000090F9 BE00000000              	mov rsi, 0
 15264 000090FE BA01000000              	mov rdx, 1
 15265                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
 15266 00009103 4883FE08                	cmp rsi, 8
 15267 00009107 7410                    	je .L_lambda_simple_env_end_0056
 15268 00009109 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15269 0000910D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15270 00009111 48FFC6                  	inc rsi
 15271 00009114 48FFC2                  	inc rdx
 15272 00009117 EBEA                    	jmp .L_lambda_simple_env_loop_0056
 15273                                  .L_lambda_simple_env_end_0056:
 15274 00009119 5B                      	pop rbx
 15275 0000911A BE00000000              	mov rsi, 0
 15276                                  .L_lambda_simple_params_loop_0056:	; copy params
 15277 0000911F 4883FE01                	cmp rsi, 1
 15278 00009123 740E                    	je .L_lambda_simple_params_end_0056
 15279 00009125 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15280 0000912A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15281 0000912E 48FFC6                  	inc rsi
 15282 00009131 EBEC                    	jmp .L_lambda_simple_params_loop_0056
 15283                                  .L_lambda_simple_params_end_0056:
 15284 00009133 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15285 00009136 4889C3                  	mov rbx, rax
 15286 00009139 58                      	pop rax
 15287 0000913A C60005                  	mov byte [rax], T_closure
 15288 0000913D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15289 00009141 48C74009[4E910000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
 15290 00009149 E9B6030000              	jmp .L_lambda_simple_end_0056
 15291                                  .L_lambda_simple_code_0056:	; lambda-simple body
 15292 0000914E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15293 00009154 740B                    	je .L_lambda_simple_arity_check_ok_00c1
 15294 00009156 FF742410                	push qword [rsp + 8 * 2]
 15295 0000915A 6A01                    	push 1
 15296 0000915C E96E7B0000              	jmp L_error_incorrect_arity_simple
 15297                                  .L_lambda_simple_arity_check_ok_00c1:
 15298 00009161 C8000000                	enter 0, 0
 15299 00009165 BF08000000              mov rdi, 8
 15300 0000916A E8A77B0000              call malloc
 15301 0000916F 4889C3                  mov rbx, rax
 15302 00009172 488B4520                mov rax, qword [rbp + 32]
 15303 00009176 488903                  mov qword [rbx], rax
 15304 00009179 4889D8                  mov rax, rbx
 15305 0000917C 48894520                mov qword [rbp + 32], rax
 15306 00009180 48B8-                   mov rax, sob_void
 15306 00009182 [0000000000000000] 
 15307 0000918A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15308 0000918F E8827B0000              	call malloc
 15309 00009194 50                      	push rax
 15310 00009195 BF08000000              	mov rdi, 8 * 1	; new rib
 15311 0000919A E8777B0000              	call malloc
 15312 0000919F 50                      	push rax
 15313 000091A0 BF50000000              	mov rdi, 8 * 10	; extended env
 15314 000091A5 E86C7B0000              	call malloc
 15315 000091AA 488B7D10                	mov rdi, ENV
 15316 000091AE BE00000000              	mov rsi, 0
 15317 000091B3 BA01000000              	mov rdx, 1
 15318                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
 15319 000091B8 4883FE09                	cmp rsi, 9
 15320 000091BC 7410                    	je .L_lambda_simple_env_end_0057
 15321 000091BE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15322 000091C2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15323 000091C6 48FFC6                  	inc rsi
 15324 000091C9 48FFC2                  	inc rdx
 15325 000091CC EBEA                    	jmp .L_lambda_simple_env_loop_0057
 15326                                  .L_lambda_simple_env_end_0057:
 15327 000091CE 5B                      	pop rbx
 15328 000091CF BE00000000              	mov rsi, 0
 15329                                  .L_lambda_simple_params_loop_0057:	; copy params
 15330 000091D4 4883FE01                	cmp rsi, 1
 15331 000091D8 740E                    	je .L_lambda_simple_params_end_0057
 15332 000091DA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15333 000091DF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15334 000091E3 48FFC6                  	inc rsi
 15335 000091E6 EBEC                    	jmp .L_lambda_simple_params_loop_0057
 15336                                  .L_lambda_simple_params_end_0057:
 15337 000091E8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15338 000091EB 4889C3                  	mov rbx, rax
 15339 000091EE 58                      	pop rax
 15340 000091EF C60005                  	mov byte [rax], T_closure
 15341 000091F2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15342 000091F6 48C74009[03920000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
 15343 000091FE E94D010000              	jmp .L_lambda_simple_end_0057
 15344                                  .L_lambda_simple_code_0057:	; lambda-simple body
 15345 00009203 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15346 00009209 740B                    	je .L_lambda_simple_arity_check_ok_00c2
 15347 0000920B FF742410                	push qword [rsp + 8 * 2]
 15348 0000920F 6A02                    	push 2
 15349 00009211 E9B97A0000              	jmp L_error_incorrect_arity_simple
 15350                                  .L_lambda_simple_arity_check_ok_00c2:
 15351 00009216 C8000000                	enter 0, 0
 15352 0000921A 488B4528                mov rax, qword [rbp + 40]
 15353 0000921E 50                      	push rax
 15354 0000921F 6A01                    	push 1
 15355 00009221 488B0425[00000000]      	mov rax, qword [free_var_0]
 15356 00009229 803805                  	cmp byte [rax], T_closure 
 15357 0000922C 0F856C8A0000                    jne L_code_ptr_error
 15358                                  
 15359 00009232 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15360                                  
 15361 00009236 53                              push rbx
 15362                                  
 15363 00009237 FF5009                          call SOB_CLOSURE_CODE(rax)
 15364                                  
 15365 0000923A 483D[02000000]                  	cmp rax, sob_boolean_false
 15366 00009240 0F8506010000            	jne .L_or_end_0004
 15367 00009246 488B4528                mov rax, qword [rbp + 40]
 15368 0000924A 50                      	push rax
 15369 0000924B 6A01                    	push 1
 15370 0000924D 488B0425[80000000]      	mov rax, qword [free_var_16]
 15371 00009255 803805                  	cmp byte [rax], T_closure 
 15372 00009258 0F85408A0000                    jne L_code_ptr_error
 15373                                  
 15374 0000925E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15375                                  
 15376 00009262 53                              push rbx
 15377                                  
 15378 00009263 FF5009                          call SOB_CLOSURE_CODE(rax)
 15379                                  
 15380 00009266 50                              	push rax
 15381 00009267 488B4520                mov rax, qword [rbp + 32]
 15382 0000926B 50                      	push rax
 15383 0000926C 6A02                    	push 2
 15384 0000926E 488B4510                mov rax, qword [rbp + 16]
 15385 00009272 488B4008                mov rax, qword [rax + 8]
 15386 00009276 488B00                  mov rax, qword [rax + 0]
 15387 00009279 803805                  	cmp byte [rax], T_closure 
 15388 0000927C 0F851C8A0000                    jne L_code_ptr_error
 15389                                  
 15390 00009282 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15391                                  
 15392 00009286 53                              push rbx
 15393                                  
 15394 00009287 FF5009                          call SOB_CLOSURE_CODE(rax)
 15395                                  
 15396 0000928A 483D[02000000]                  	cmp rax, sob_boolean_false
 15397 00009290 0F84AC000000            	je .L_if_else_0032
 15398 00009296 488B4528                mov rax, qword [rbp + 40]
 15399 0000929A 50                      	push rax
 15400 0000929B 6A01                    	push 1
 15401 0000929D 488B0425[88000000]      	mov rax, qword [free_var_17]
 15402 000092A5 803805                  	cmp byte [rax], T_closure 
 15403 000092A8 0F85F0890000                    jne L_code_ptr_error
 15404                                  
 15405 000092AE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15406                                  
 15407 000092B2 53                              push rbx
 15408                                  
 15409 000092B3 FF5009                          call SOB_CLOSURE_CODE(rax)
 15410                                  
 15411 000092B6 50                              	push rax
 15412 000092B7 488B4528                mov rax, qword [rbp + 40]
 15413 000092BB 50                      	push rax
 15414 000092BC 6A01                    	push 1
 15415 000092BE 488B0425[80000000]      	mov rax, qword [free_var_16]
 15416 000092C6 803805                  	cmp byte [rax], T_closure 
 15417 000092C9 0F85CF890000                    jne L_code_ptr_error
 15418                                  
 15419 000092CF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15420                                  
 15421 000092D3 53                              push rbx
 15422                                  
 15423 000092D4 FF5009                          call SOB_CLOSURE_CODE(rax)
 15424                                  
 15425 000092D7 50                              	push rax
 15426 000092D8 6A02                    	push 2
 15427 000092DA 488B4510                mov rax, qword [rbp + 16]
 15428 000092DE 488B00                  mov rax, qword [rax + 0]
 15429 000092E1 488B00                  mov rax, qword [rax + 0]
 15430 000092E4 488B00                  	mov rax, qword [rax]
 15431                                  .L_lambda_simple_arity_check_ok_00c3:
 15432 000092E7 803805                  	cmp byte [rax], T_closure
 15433                                  
 15434 000092EA 0F85AE890000                    jne L_code_ptr_error                      ; rax <- proc
 15435                                  
 15436                                  
 15437 000092F0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15438                                  
 15439 000092F4 53                              push rbx                                  ; env pushed
 15440                                  
 15441 000092F5 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15442                                  
 15443                                  
 15444 000092F8 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15445                                  
 15446                                          
 15447                                          
 15448 000092FB 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15449                                  
 15450 000092FF 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15451                                  
 15452                                  
 15453 00009304 4D89CA                          mov r10, r9
 15454 00009307 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 15455                                  
 15456                                                                                         
 15457 0000930B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15458 0000930E 4983C404                        add r12, 4
 15459                                  
 15460 00009312 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15461                                  .L_tc_recycle_frame_loop_006c:
 15462 00009318 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 15463                                  
 15464 0000931C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15465                                  
 15466                                  
 15467                                  
 15468 00009321 41BE00000000                    mov r14, 0                                ; clean box
 15469                                  
 15470                                  
 15471                                                                  
 15472 00009327 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15473                                  
 15474 0000932B 4983C4FF                        add r12, -1 
 15475                                  
 15476 0000932F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15477 00009333 75E3                    	jne .L_tc_recycle_frame_loop_006c
 15478                                  .L_tc_recycle_frame_done_006c:
 15479 00009335 5D                      	pop rbp                                  ; restore the old rbp
 15480                                  
 15481 00009336 488B4D00                        mov rcx, qword [rbp]
 15482 0000933A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15483                                            ; rbx <- code(proc)
 15484                                  
 15485 0000933E FFE3                            jmp rbx
 15486 00009340 EB0A                    	jmp .L_if_end_0032
 15487                                  	.L_if_else_0032:
 15488 00009342 48B8-                   		mov rax, qword (L_constants + 2)
 15488 00009344 [0200000000000000] 
 15489                                  	.L_if_end_0032:
 15490                                  .L_or_end_0004:
 15491 0000934C C9                      	leave
 15492 0000934D C22000                  	ret 8 * (2 + 2)
 15493                                  .L_lambda_simple_end_0057:	; new closure is in rax
 15494 00009350 50                      push rax
 15495 00009351 488B4520                mov rax, qword [rbp + 32]
 15496 00009355 8F00                    pop qword [rax]
 15497 00009357 48B8-                   mov rax, sob_void
 15497 00009359 [0000000000000000] 
 15498                                  
 15499 00009361 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15500 00009366 E8AB790000              	call malloc
 15501 0000936B 50                      	push rax
 15502 0000936C BF08000000              	mov rdi, 8 * 1	; new rib
 15503 00009371 E8A0790000              	call malloc
 15504 00009376 50                      	push rax
 15505 00009377 BF50000000              	mov rdi, 8 * 10	; extended env
 15506 0000937C E895790000              	call malloc
 15507 00009381 488B7D10                	mov rdi, ENV
 15508 00009385 BE00000000              	mov rsi, 0
 15509 0000938A BA01000000              	mov rdx, 1
 15510                                  .L_lambda_opt_env_loop_000e:	; ext_env[i + 1] <-- env[i]
 15511 0000938F 4883FE09                	cmp rsi, 9
 15512 00009393 7410                    	je .L_lambda_opt_env_end_000e
 15513 00009395 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15514 00009399 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15515 0000939D 48FFC6                  	inc rsi
 15516 000093A0 48FFC2                  	inc rdx
 15517 000093A3 EBEA                    	jmp .L_lambda_opt_env_loop_000e
 15518                                  .L_lambda_opt_env_end_000e:
 15519 000093A5 5B                      	pop rbx
 15520 000093A6 BE00000000              	mov rsi, 0
 15521                                  .L_lambda_opt_params_loop_001b:	; copy params
 15522 000093AB 4883FE01                	cmp rsi, 1
 15523 000093AF 740E                    	je .L_lambda_opt_params_end_001b
 15524 000093B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15525 000093B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15526 000093BA 48FFC6                  	inc rsi
 15527 000093BD EBEC                    	jmp .L_lambda_opt_params_loop_001b
 15528                                  .L_lambda_opt_params_end_001b:
 15529 000093BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15530 000093C2 4889C3                  	mov rbx, rax
 15531 000093C5 58                      	pop rax
 15532 000093C6 C60005                  	mov byte [rax], T_closure
 15533 000093C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15534 000093CD 48C74009[DA930000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000e
 15535 000093D5 E926010000              	jmp .L_lambda_opt_end_000e
 15536                                  .L_lambda_opt_code_000e:
 15537 000093DA 4C8B542410              mov r10, qword [rsp+8*2]
 15538 000093DF 4983FA01                cmp r10, 1
 15539 000093E3 740B                    je .L_lambda_opt_arity_check_exact_000e
 15540 000093E5 4983FA01                cmp r10, 1
 15541 000093E9 7F41                    jg .L_lambda_opt_arity_check_more_000e
 15542 000093EB E9F3780000              jmp L_error_incorrect_arity_opt
 15543                                  .L_lambda_opt_arity_check_exact_000e:
 15544 000093F0 4883EC08                sub rsp, 8
 15545 000093F4 BA04000000              mov rdx, 3+1
 15546 000093F9 4889E3                  mov qword rbx, rsp
 15547                                  .L_lambda_opt_params_loop_001c:
 15548 000093FC 488B4B08                mov qword rcx, [rbx+8]
 15549 00009400 48890B                  mov qword [rbx], rcx
 15550 00009403 48FFCA                  dec rdx
 15551 00009406 4883C308                add rbx, 8
 15552 0000940A 4883FA00                cmp rdx, 0
 15553 0000940E 7402                    je .L_lambda_opt_params_end_001c
 15554 00009410 EBEA                    jmp .L_lambda_opt_params_loop_001c
 15555                                  .L_lambda_opt_params_end_001c:
 15556 00009412 49FFC2                  inc r10
 15557 00009415 4C89542410              mov qword [rsp+8*2], r10
 15558 0000941A 4983C202                add r10, 2
 15559 0000941E 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 15560 00009426 4C8B4D00                mov r9, [rbp]
 15561 0000942A EB52                    jmp .L_lambda_opt_stack_adjusted_000e
 15562                                  .L_lambda_opt_arity_check_more_000e:
 15563 0000942C 48B8-                   mov rax, sob_nil
 15563 0000942E [0100000000000000] 
 15564 00009436 4C8B542410              mov r10, [rsp+2*8]
 15565 0000943B 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 15566 00009440 4983EA01                sub r10, 1
 15567                                  .L_lambda_opt_stack_shrink_loop_000e:
 15568 00009444 4983FA00                cmp r10, 0
 15569 00009448 7424                    je .L_lambda_opt_stack_shrink_loop_exit_000e
 15570 0000944A 4889C1                  mov rcx, rax
 15571 0000944D 498B10                  mov rdx, [r8]
 15572 00009450 BF11000000              mov rdi, 17
 15573 00009455 E8BC780000              call malloc
 15574 0000945A C60021                  mov byte [rax], T_pair
 15575 0000945D 48894809                mov SOB_PAIR_CDR(rax), rcx
 15576 00009461 48895001                mov SOB_PAIR_CAR(rax), rdx
 15577 00009465 4983E808                sub r8, 8
 15578 00009469 49FFCA                  dec r10
 15579 0000946C EBD6                    jmp .L_lambda_opt_stack_shrink_loop_000e
 15580                                  .L_lambda_opt_stack_shrink_loop_exit_000e:
 15581 0000946E 4889442420              mov [rsp+8*(2+2)], rax
 15582 00009473 41BA02000000            mov r10, 2
 15583 00009479 4C89542410              mov [rsp+16], r10
 15584                                  .L_lambda_opt_stack_adjusted_000e:
 15585 0000947E 4C8B4D00                mov r9, [rbp]
 15586 00009482 C8000000                enter 0, 0
 15587 00009486 488B4528                mov rax, qword [rbp + 40]
 15588 0000948A 50                      	push rax
 15589 0000948B 488B4520                mov rax, qword [rbp + 32]
 15590 0000948F 50                      	push rax
 15591 00009490 6A02                    	push 2
 15592 00009492 488B4510                mov rax, qword [rbp + 16]
 15593 00009496 488B00                  mov rax, qword [rax + 0]
 15594 00009499 488B00                  mov rax, qword [rax + 0]
 15595 0000949C 488B00                  	mov rax, qword [rax]
 15596                                  .L_lambda_simple_arity_check_ok_00c4:
 15597 0000949F 803805                  	cmp byte [rax], T_closure
 15598                                  
 15599 000094A2 0F85F6870000                    jne L_code_ptr_error                      ; rax <- proc
 15600                                  
 15601                                  
 15602 000094A8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15603                                  
 15604 000094AC 53                              push rbx                                  ; env pushed
 15605                                  
 15606 000094AD FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15607                                  
 15608                                  
 15609 000094B0 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15610                                  
 15611                                          
 15612                                          
 15613 000094B3 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15614                                  
 15615 000094B7 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15616                                  
 15617                                  
 15618 000094BC 4D89CA                          mov r10, r9
 15619 000094BF 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 15620                                  
 15621                                                                                         
 15622 000094C3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15623 000094C6 4983C404                        add r12, 4
 15624                                  
 15625 000094CA 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15626                                  .L_tc_recycle_frame_loop_006d:
 15627 000094D0 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 15628                                  
 15629 000094D4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15630                                  
 15631                                  
 15632                                  
 15633 000094D9 41BE00000000                    mov r14, 0                                ; clean box
 15634                                  
 15635                                  
 15636                                                                  
 15637 000094DF 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15638                                  
 15639 000094E3 4983C4FF                        add r12, -1 
 15640                                  
 15641 000094E7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15642 000094EB 75E3                    	jne .L_tc_recycle_frame_loop_006d
 15643                                  .L_tc_recycle_frame_done_006d:
 15644 000094ED 5D                      	pop rbp                                  ; restore the old rbp
 15645                                  
 15646 000094EE 488B4D00                        mov rcx, qword [rbp]
 15647 000094F2 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15648                                            ; rbx <- code(proc)
 15649                                  
 15650 000094F6 FFE3                            jmp rbx
 15651 000094F8 C9                      leave
 15652 000094F9 4C8B4D00                mov r9, [rbp]
 15653 000094FD C22800                  ret 8 * (3 + 2)
 15654                                  .L_lambda_opt_end_000e:	; new closure is in rax
 15655 00009500 C9                      	leave
 15656 00009501 C21800                  	ret 8 * (2 + 1)
 15657                                  .L_lambda_simple_end_0056:	; new closure is in rax
 15658                                  .L_lambda_simple_arity_check_ok_00c5:
 15659 00009504 803805                  	cmp byte [rax], T_closure
 15660                                  
 15661 00009507 0F8591870000                    jne L_code_ptr_error                      ; rax <- proc
 15662                                  
 15663                                  
 15664 0000950D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15665                                  
 15666 00009511 53                              push rbx                                  ; env pushed
 15667                                  
 15668 00009512 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15669                                  
 15670                                  
 15671 00009515 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15672                                  
 15673                                          
 15674                                          
 15675 00009518 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15676                                  
 15677 0000951C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15678                                  
 15679                                  
 15680 00009521 4D89CA                          mov r10, r9
 15681 00009524 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 15682                                  
 15683                                                                                         
 15684 00009528 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15685 0000952B 4983C404                        add r12, 4
 15686                                  
 15687 0000952F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15688                                  .L_tc_recycle_frame_loop_006e:
 15689 00009535 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 15690                                  
 15691 00009539 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15692                                  
 15693                                  
 15694                                  
 15695 0000953E 41BE00000000                    mov r14, 0                                ; clean box
 15696                                  
 15697                                  
 15698                                                                  
 15699 00009544 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15700                                  
 15701 00009548 4983C4FF                        add r12, -1 
 15702                                  
 15703 0000954C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15704 00009550 75E3                    	jne .L_tc_recycle_frame_loop_006e
 15705                                  .L_tc_recycle_frame_done_006e:
 15706 00009552 5D                      	pop rbp                                  ; restore the old rbp
 15707                                  
 15708 00009553 488B4D00                        mov rcx, qword [rbp]
 15709 00009557 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15710                                            ; rbx <- code(proc)
 15711                                  
 15712 0000955B FFE3                            jmp rbx
 15713 0000955D C9                      	leave
 15714 0000955E C21800                  	ret 8 * (2 + 1)
 15715                                  .L_lambda_simple_end_0055:	; new closure is in rax
 15716 00009561 50                      	push rax
 15717 00009562 6A01                    	push 1
 15718 00009564 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15719 00009569 E8A8770000              	call malloc
 15720 0000956E 50                      	push rax
 15721 0000956F BF08000000              	mov rdi, 8 * 1	; new rib
 15722 00009574 E89D770000              	call malloc
 15723 00009579 50                      	push rax
 15724 0000957A BF40000000              	mov rdi, 8 * 8	; extended env
 15725 0000957F E892770000              	call malloc
 15726 00009584 488B7D10                	mov rdi, ENV
 15727 00009588 BE00000000              	mov rsi, 0
 15728 0000958D BA01000000              	mov rdx, 1
 15729                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
 15730 00009592 4883FE07                	cmp rsi, 7
 15731 00009596 7410                    	je .L_lambda_simple_env_end_0058
 15732 00009598 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15733 0000959C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15734 000095A0 48FFC6                  	inc rsi
 15735 000095A3 48FFC2                  	inc rdx
 15736 000095A6 EBEA                    	jmp .L_lambda_simple_env_loop_0058
 15737                                  .L_lambda_simple_env_end_0058:
 15738 000095A8 5B                      	pop rbx
 15739 000095A9 BE00000000              	mov rsi, 0
 15740                                  .L_lambda_simple_params_loop_0058:	; copy params
 15741 000095AE 4883FE01                	cmp rsi, 1
 15742 000095B2 740E                    	je .L_lambda_simple_params_end_0058
 15743 000095B4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15744 000095B9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15745 000095BD 48FFC6                  	inc rsi
 15746 000095C0 EBEC                    	jmp .L_lambda_simple_params_loop_0058
 15747                                  .L_lambda_simple_params_end_0058:
 15748 000095C2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15749 000095C5 4889C3                  	mov rbx, rax
 15750 000095C8 58                      	pop rax
 15751 000095C9 C60005                  	mov byte [rax], T_closure
 15752 000095CC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15753 000095D0 48C74009[DD950000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
 15754 000095D8 E923010000              	jmp .L_lambda_simple_end_0058
 15755                                  .L_lambda_simple_code_0058:	; lambda-simple body
 15756 000095DD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15757 000095E3 740B                    	je .L_lambda_simple_arity_check_ok_00c6
 15758 000095E5 FF742410                	push qword [rsp + 8 * 2]
 15759 000095E9 6A01                    	push 1
 15760 000095EB E9DF760000              	jmp L_error_incorrect_arity_simple
 15761                                  .L_lambda_simple_arity_check_ok_00c6:
 15762 000095F0 C8000000                	enter 0, 0
 15763 000095F4 488B4510                mov rax, qword [rbp + 16]
 15764 000095F8 488B4020                mov rax, qword [rax + 32]
 15765 000095FC 488B00                  mov rax, qword [rax + 0]
 15766 000095FF 50                      	push rax
 15767 00009600 6A01                    	push 1
 15768 00009602 488B4520                mov rax, qword [rbp + 32]
 15769 00009606 803805                  	cmp byte [rax], T_closure 
 15770 00009609 0F858F860000                    jne L_code_ptr_error
 15771                                  
 15772 0000960F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15773                                  
 15774 00009613 53                              push rbx
 15775                                  
 15776 00009614 FF5009                          call SOB_CLOSURE_CODE(rax)
 15777                                  
 15778 00009617 48890425[30030000]              	mov qword [free_var_102], rax
 15779 0000961F 48B8-                   	mov rax, sob_void
 15779 00009621 [0000000000000000] 
 15780                                  
 15781 00009629 488B4510                mov rax, qword [rbp + 16]
 15782 0000962D 488B00                  mov rax, qword [rax + 0]
 15783 00009630 488B00                  mov rax, qword [rax + 0]
 15784 00009633 50                      	push rax
 15785 00009634 6A01                    	push 1
 15786 00009636 488B4520                mov rax, qword [rbp + 32]
 15787 0000963A 803805                  	cmp byte [rax], T_closure 
 15788 0000963D 0F855B860000                    jne L_code_ptr_error
 15789                                  
 15790 00009643 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15791                                  
 15792 00009647 53                              push rbx
 15793                                  
 15794 00009648 FF5009                          call SOB_CLOSURE_CODE(rax)
 15795                                  
 15796 0000964B 48890425[38030000]              	mov qword [free_var_103], rax
 15797 00009653 48B8-                   	mov rax, sob_void
 15797 00009655 [0000000000000000] 
 15798                                  
 15799 0000965D 488B4510                mov rax, qword [rbp + 16]
 15800 00009661 488B4008                mov rax, qword [rax + 8]
 15801 00009665 488B00                  mov rax, qword [rax + 0]
 15802 00009668 50                      	push rax
 15803 00009669 6A01                    	push 1
 15804 0000966B 488B4520                mov rax, qword [rbp + 32]
 15805 0000966F 803805                  	cmp byte [rax], T_closure 
 15806 00009672 0F8526860000                    jne L_code_ptr_error
 15807                                  
 15808 00009678 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15809                                  
 15810 0000967C 53                              push rbx
 15811                                  
 15812 0000967D FF5009                          call SOB_CLOSURE_CODE(rax)
 15813                                  
 15814 00009680 48890425[40030000]              	mov qword [free_var_104], rax
 15815 00009688 48B8-                   	mov rax, sob_void
 15815 0000968A [0000000000000000] 
 15816                                  
 15817 00009692 488B4510                mov rax, qword [rbp + 16]
 15818 00009696 488B4010                mov rax, qword [rax + 16]
 15819 0000969A 488B00                  mov rax, qword [rax + 0]
 15820 0000969D 50                      	push rax
 15821 0000969E 6A01                    	push 1
 15822 000096A0 488B4520                mov rax, qword [rbp + 32]
 15823 000096A4 803805                  	cmp byte [rax], T_closure 
 15824 000096A7 0F85F1850000                    jne L_code_ptr_error
 15825                                  
 15826 000096AD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15827                                  
 15828 000096B1 53                              push rbx
 15829                                  
 15830 000096B2 FF5009                          call SOB_CLOSURE_CODE(rax)
 15831                                  
 15832 000096B5 48890425[48030000]              	mov qword [free_var_105], rax
 15833 000096BD 48B8-                   	mov rax, sob_void
 15833 000096BF [0000000000000000] 
 15834                                  
 15835 000096C7 488B4510                mov rax, qword [rbp + 16]
 15836 000096CB 488B4018                mov rax, qword [rax + 24]
 15837 000096CF 488B00                  mov rax, qword [rax + 0]
 15838 000096D2 50                      	push rax
 15839 000096D3 6A01                    	push 1
 15840 000096D5 488B4520                mov rax, qword [rbp + 32]
 15841 000096D9 803805                  	cmp byte [rax], T_closure 
 15842 000096DC 0F85BC850000                    jne L_code_ptr_error
 15843                                  
 15844 000096E2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 15845                                  
 15846 000096E6 53                              push rbx
 15847                                  
 15848 000096E7 FF5009                          call SOB_CLOSURE_CODE(rax)
 15849                                  
 15850 000096EA 48890425[50030000]              	mov qword [free_var_106], rax
 15851 000096F2 48B8-                   	mov rax, sob_void
 15851 000096F4 [0000000000000000] 
 15852 000096FC C9                      	leave
 15853 000096FD C21800                  	ret 8 * (2 + 1)
 15854                                  .L_lambda_simple_end_0058:	; new closure is in rax
 15855                                  .L_lambda_simple_arity_check_ok_00c7:
 15856 00009700 803805                  	cmp byte [rax], T_closure
 15857                                  
 15858 00009703 0F8595850000                    jne L_code_ptr_error                      ; rax <- proc
 15859                                  
 15860                                  
 15861 00009709 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15862                                  
 15863 0000970D 53                              push rbx                                  ; env pushed
 15864                                  
 15865 0000970E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15866                                  
 15867                                  
 15868 00009711 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15869                                  
 15870                                          
 15871                                          
 15872 00009714 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15873                                  
 15874 00009718 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15875                                  
 15876                                  
 15877 0000971D 4D89CA                          mov r10, r9
 15878 00009720 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 15879                                  
 15880                                                                                         
 15881 00009724 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15882 00009727 4983C404                        add r12, 4
 15883                                  
 15884 0000972B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15885                                  .L_tc_recycle_frame_loop_006f:
 15886 00009731 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 15887                                  
 15888 00009735 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15889                                  
 15890                                  
 15891                                  
 15892 0000973A 41BE00000000                    mov r14, 0                                ; clean box
 15893                                  
 15894                                  
 15895                                                                  
 15896 00009740 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15897                                  
 15898 00009744 4983C4FF                        add r12, -1 
 15899                                  
 15900 00009748 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15901 0000974C 75E3                    	jne .L_tc_recycle_frame_loop_006f
 15902                                  .L_tc_recycle_frame_done_006f:
 15903 0000974E 5D                      	pop rbp                                  ; restore the old rbp
 15904                                  
 15905 0000974F 488B4D00                        mov rcx, qword [rbp]
 15906 00009753 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15907                                            ; rbx <- code(proc)
 15908                                  
 15909 00009757 FFE3                            jmp rbx
 15910 00009759 C9                      	leave
 15911 0000975A C21800                  	ret 8 * (2 + 1)
 15912                                  .L_lambda_simple_end_0054:	; new closure is in rax
 15913                                  .L_lambda_simple_arity_check_ok_00c8:
 15914 0000975D 803805                  	cmp byte [rax], T_closure
 15915                                  
 15916 00009760 0F8538850000                    jne L_code_ptr_error                      ; rax <- proc
 15917                                  
 15918                                  
 15919 00009766 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15920                                  
 15921 0000976A 53                              push rbx                                  ; env pushed
 15922                                  
 15923 0000976B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15924                                  
 15925                                  
 15926 0000976E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15927                                  
 15928                                          
 15929                                          
 15930 00009771 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15931                                  
 15932 00009775 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15933                                  
 15934                                  
 15935 0000977A 4D89CA                          mov r10, r9
 15936 0000977D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 15937                                  
 15938                                                                                         
 15939 00009781 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15940 00009784 4983C404                        add r12, 4
 15941                                  
 15942 00009788 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 15943                                  .L_tc_recycle_frame_loop_0070:
 15944 0000978E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 15945                                  
 15946 00009792 4E8974E500                      mov [rbp + (r12 * 8)], r14
 15947                                  
 15948                                  
 15949                                  
 15950 00009797 41BE00000000                    mov r14, 0                                ; clean box
 15951                                  
 15952                                  
 15953                                                                  
 15954 0000979D 4983C2FF                        add r10, -1                               ; args_copied_counter--
 15955                                  
 15956 000097A1 4983C4FF                        add r12, -1 
 15957                                  
 15958 000097A5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 15959 000097A9 75E3                    	jne .L_tc_recycle_frame_loop_0070
 15960                                  .L_tc_recycle_frame_done_0070:
 15961 000097AB 5D                      	pop rbp                                  ; restore the old rbp
 15962                                  
 15963 000097AC 488B4D00                        mov rcx, qword [rbp]
 15964 000097B0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 15965                                            ; rbx <- code(proc)
 15966                                  
 15967 000097B4 FFE3                            jmp rbx
 15968 000097B6 C9                      	leave
 15969 000097B7 C21800                  	ret 8 * (2 + 1)
 15970                                  .L_lambda_simple_end_0052:	; new closure is in rax
 15971                                  .L_lambda_simple_arity_check_ok_00c9:
 15972 000097BA 803805                  	cmp byte [rax], T_closure
 15973                                  
 15974 000097BD 0F85DB840000                    jne L_code_ptr_error                      ; rax <- proc
 15975                                  
 15976                                  
 15977 000097C3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 15978                                  
 15979 000097C7 53                              push rbx                                  ; env pushed
 15980                                  
 15981 000097C8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 15982                                  
 15983                                  
 15984 000097CB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 15985                                  
 15986                                          
 15987                                          
 15988 000097CE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 15989                                  
 15990 000097D2 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 15991                                  
 15992                                  
 15993 000097D7 4D89CA                          mov r10, r9
 15994 000097DA 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 15995                                  
 15996                                                                                         
 15997 000097DE 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 15998 000097E1 4983C404                        add r12, 4
 15999                                  
 16000 000097E5 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16001                                  .L_tc_recycle_frame_loop_0071:
 16002 000097EB 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16003                                  
 16004 000097EF 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16005                                  
 16006                                  
 16007                                  
 16008 000097F4 41BE00000000                    mov r14, 0                                ; clean box
 16009                                  
 16010                                  
 16011                                                                  
 16012 000097FA 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16013                                  
 16014 000097FE 4983C4FF                        add r12, -1 
 16015                                  
 16016 00009802 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16017 00009806 75E3                    	jne .L_tc_recycle_frame_loop_0071
 16018                                  .L_tc_recycle_frame_done_0071:
 16019 00009808 5D                      	pop rbp                                  ; restore the old rbp
 16020                                  
 16021 00009809 488B4D00                        mov rcx, qword [rbp]
 16022 0000980D 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16023                                            ; rbx <- code(proc)
 16024                                  
 16025 00009811 FFE3                            jmp rbx
 16026 00009813 C9                      	leave
 16027 00009814 C21800                  	ret 8 * (2 + 1)
 16028                                  .L_lambda_simple_end_0050:	; new closure is in rax
 16029                                  .L_lambda_simple_arity_check_ok_00ca:
 16030 00009817 803805                  	cmp byte [rax], T_closure
 16031                                  
 16032 0000981A 0F857E840000                    jne L_code_ptr_error                      ; rax <- proc
 16033                                  
 16034                                  
 16035 00009820 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16036                                  
 16037 00009824 53                              push rbx                                  ; env pushed
 16038                                  
 16039 00009825 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16040                                  
 16041                                  
 16042 00009828 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16043                                  
 16044                                          
 16045                                          
 16046 0000982B 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16047                                  
 16048 0000982F 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16049                                  
 16050                                  
 16051 00009834 4D89CA                          mov r10, r9
 16052 00009837 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 16053                                  
 16054                                                                                         
 16055 0000983B 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16056 0000983E 4983C404                        add r12, 4
 16057                                  
 16058 00009842 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16059                                  .L_tc_recycle_frame_loop_0072:
 16060 00009848 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16061                                  
 16062 0000984C 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16063                                  
 16064                                  
 16065                                  
 16066 00009851 41BE00000000                    mov r14, 0                                ; clean box
 16067                                  
 16068                                  
 16069                                                                  
 16070 00009857 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16071                                  
 16072 0000985B 4983C4FF                        add r12, -1 
 16073                                  
 16074 0000985F 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16075 00009863 75E3                    	jne .L_tc_recycle_frame_loop_0072
 16076                                  .L_tc_recycle_frame_done_0072:
 16077 00009865 5D                      	pop rbp                                  ; restore the old rbp
 16078                                  
 16079 00009866 488B4D00                        mov rcx, qword [rbp]
 16080 0000986A 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16081                                            ; rbx <- code(proc)
 16082                                  
 16083 0000986E FFE3                            jmp rbx
 16084 00009870 C9                      	leave
 16085 00009871 C21800                  	ret 8 * (2 + 1)
 16086                                  .L_lambda_simple_end_004e:	; new closure is in rax
 16087                                  .L_lambda_simple_arity_check_ok_00cb:
 16088 00009874 803805                  	cmp byte [rax], T_closure
 16089                                  
 16090 00009877 0F8521840000                    jne L_code_ptr_error                      ; rax <- proc
 16091                                  
 16092                                  
 16093 0000987D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16094                                  
 16095 00009881 53                              push rbx                                  ; env pushed
 16096                                  
 16097 00009882 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16098                                  
 16099                                  
 16100 00009885 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16101                                  
 16102                                          
 16103                                          
 16104 00009888 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16105                                  
 16106 0000988C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16107                                  
 16108                                  
 16109 00009891 4D89CA                          mov r10, r9
 16110 00009894 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 16111                                  
 16112                                                                                         
 16113 00009898 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16114 0000989B 4983C404                        add r12, 4
 16115                                  
 16116 0000989F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16117                                  .L_tc_recycle_frame_loop_0073:
 16118 000098A5 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16119                                  
 16120 000098A9 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16121                                  
 16122                                  
 16123                                  
 16124 000098AE 41BE00000000                    mov r14, 0                                ; clean box
 16125                                  
 16126                                  
 16127                                                                  
 16128 000098B4 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16129                                  
 16130 000098B8 4983C4FF                        add r12, -1 
 16131                                  
 16132 000098BC 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16133 000098C0 75E3                    	jne .L_tc_recycle_frame_loop_0073
 16134                                  .L_tc_recycle_frame_done_0073:
 16135 000098C2 5D                      	pop rbp                                  ; restore the old rbp
 16136                                  
 16137 000098C3 488B4D00                        mov rcx, qword [rbp]
 16138 000098C7 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16139                                            ; rbx <- code(proc)
 16140                                  
 16141 000098CB FFE3                            jmp rbx
 16142 000098CD C9                      	leave
 16143 000098CE C21800                  	ret 8 * (2 + 1)
 16144                                  .L_lambda_simple_end_004d:	; new closure is in rax
 16145                                  .L_lambda_simple_arity_check_ok_00cc:
 16146 000098D1 803805                  	cmp byte [rax], T_closure
 16147                                  
 16148 000098D4 0F85C4830000                    jne L_code_ptr_error                      ; rax <- proc
 16149                                  
 16150                                  
 16151 000098DA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16152                                  
 16153 000098DE 53                              push rbx                                  ; env pushed
 16154                                  
 16155 000098DF FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16156                                  
 16157                                  
 16158 000098E2 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16159                                  
 16160                                          
 16161                                          
 16162 000098E5 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16163                                  
 16164 000098E9 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16165                                  
 16166                                  
 16167 000098EE 4D89CA                          mov r10, r9
 16168 000098F1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 16169                                  
 16170                                                                                         
 16171 000098F5 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16172 000098F8 4983C404                        add r12, 4
 16173                                  
 16174 000098FC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16175                                  .L_tc_recycle_frame_loop_0074:
 16176 00009902 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16177                                  
 16178 00009906 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16179                                  
 16180                                  
 16181                                  
 16182 0000990B 41BE00000000                    mov r14, 0                                ; clean box
 16183                                  
 16184                                  
 16185                                                                  
 16186 00009911 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16187                                  
 16188 00009915 4983C4FF                        add r12, -1 
 16189                                  
 16190 00009919 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16191 0000991D 75E3                    	jne .L_tc_recycle_frame_loop_0074
 16192                                  .L_tc_recycle_frame_done_0074:
 16193 0000991F 5D                      	pop rbp                                  ; restore the old rbp
 16194                                  
 16195 00009920 488B4D00                        mov rcx, qword [rbp]
 16196 00009924 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16197                                            ; rbx <- code(proc)
 16198                                  
 16199 00009928 FFE3                            jmp rbx
 16200 0000992A C9                      	leave
 16201 0000992B C21800                  	ret 8 * (2 + 1)
 16202                                  .L_lambda_simple_end_004c:	; new closure is in rax
 16203                                  .L_lambda_simple_arity_check_ok_00cd:
 16204 0000992E 803805                  	cmp byte [rax], T_closure
 16205                                  
 16206 00009931 0F8567830000                    jne L_code_ptr_error                      ; rax <- proc
 16207                                  
 16208                                  
 16209 00009937 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16210                                  
 16211 0000993B 53                              push rbx                                  ; env pushed
 16212                                  
 16213 0000993C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16214                                  
 16215                                  
 16216 0000993F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16217                                  
 16218                                          
 16219                                          
 16220 00009942 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16221                                  
 16222 00009946 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16223                                  
 16224                                  
 16225 0000994B 4D89CA                          mov r10, r9
 16226 0000994E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 16227                                  
 16228                                                                                         
 16229 00009952 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16230 00009955 4983C404                        add r12, 4
 16231                                  
 16232 00009959 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16233                                  .L_tc_recycle_frame_loop_0075:
 16234 0000995F 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16235                                  
 16236 00009963 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16237                                  
 16238                                  
 16239                                  
 16240 00009968 41BE00000000                    mov r14, 0                                ; clean box
 16241                                  
 16242                                  
 16243                                                                  
 16244 0000996E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16245                                  
 16246 00009972 4983C4FF                        add r12, -1 
 16247                                  
 16248 00009976 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16249 0000997A 75E3                    	jne .L_tc_recycle_frame_loop_0075
 16250                                  .L_tc_recycle_frame_done_0075:
 16251 0000997C 5D                      	pop rbp                                  ; restore the old rbp
 16252                                  
 16253 0000997D 488B4D00                        mov rcx, qword [rbp]
 16254 00009981 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16255                                            ; rbx <- code(proc)
 16256                                  
 16257 00009985 FFE3                            jmp rbx
 16258 00009987 C9                      	leave
 16259 00009988 C21800                  	ret 8 * (2 + 1)
 16260                                  .L_lambda_simple_end_0049:	; new closure is in rax
 16261 0000998B 803805                  	cmp byte [rax], T_closure 
 16262 0000998E 0F850A830000                    jne L_code_ptr_error
 16263                                  
 16264 00009994 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16265                                  
 16266 00009998 53                              push rbx
 16267                                  
 16268 00009999 FF5009                          call SOB_CLOSURE_CODE(rax)
 16269                                  
 16270                                          
 16271 0000999C 4889C7                  	mov rdi, rax
 16272 0000999F E883730000              	call print_sexpr_if_not_void
 16273                                  
 16274 000099A4 48B8-                   	mov rax, qword (L_constants + 22)
 16274 000099A6 [1600000000000000] 
 16275 000099AE 50                      	push rax
 16276 000099AF 6A01                    	push 1
 16277 000099B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16278 000099B6 E85B730000              	call malloc
 16279 000099BB 50                      	push rax
 16280 000099BC BF00000000              	mov rdi, 8 * 0	; new rib
 16281 000099C1 E850730000              	call malloc
 16282 000099C6 50                      	push rax
 16283 000099C7 BF08000000              	mov rdi, 8 * 1	; extended env
 16284 000099CC E845730000              	call malloc
 16285 000099D1 488B7D10                	mov rdi, ENV
 16286 000099D5 BE00000000              	mov rsi, 0
 16287 000099DA BA01000000              	mov rdx, 1
 16288                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
 16289 000099DF 4883FE00                	cmp rsi, 0
 16290 000099E3 7410                    	je .L_lambda_simple_env_end_0059
 16291 000099E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16292 000099E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16293 000099ED 48FFC6                  	inc rsi
 16294 000099F0 48FFC2                  	inc rdx
 16295 000099F3 EBEA                    	jmp .L_lambda_simple_env_loop_0059
 16296                                  .L_lambda_simple_env_end_0059:
 16297 000099F5 5B                      	pop rbx
 16298 000099F6 BE00000000              	mov rsi, 0
 16299                                  .L_lambda_simple_params_loop_0059:	; copy params
 16300 000099FB 4883FE00                	cmp rsi, 0
 16301 000099FF 740E                    	je .L_lambda_simple_params_end_0059
 16302 00009A01 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16303 00009A06 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16304 00009A0A 48FFC6                  	inc rsi
 16305 00009A0D EBEC                    	jmp .L_lambda_simple_params_loop_0059
 16306                                  .L_lambda_simple_params_end_0059:
 16307 00009A0F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16308 00009A12 4889C3                  	mov rbx, rax
 16309 00009A15 58                      	pop rax
 16310 00009A16 C60005                  	mov byte [rax], T_closure
 16311 00009A19 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16312 00009A1D 48C74009[2A9A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
 16313 00009A25 E985050000              	jmp .L_lambda_simple_end_0059
 16314                                  .L_lambda_simple_code_0059:	; lambda-simple body
 16315 00009A2A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16316 00009A30 740B                    	je .L_lambda_simple_arity_check_ok_00ce
 16317 00009A32 FF742410                	push qword [rsp + 8 * 2]
 16318 00009A36 6A01                    	push 1
 16319 00009A38 E992720000              	jmp L_error_incorrect_arity_simple
 16320                                  .L_lambda_simple_arity_check_ok_00ce:
 16321 00009A3D C8000000                	enter 0, 0
 16322 00009A41 BF08000000              mov rdi, 8
 16323 00009A46 E8CB720000              call malloc
 16324 00009A4B 4889C3                  mov rbx, rax
 16325 00009A4E 488B4520                mov rax, qword [rbp + 32]
 16326 00009A52 488903                  mov qword [rbx], rax
 16327 00009A55 4889D8                  mov rax, rbx
 16328 00009A58 48894520                mov qword [rbp + 32], rax
 16329 00009A5C 48B8-                   mov rax, sob_void
 16329 00009A5E [0000000000000000] 
 16330 00009A66 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16331 00009A6B E8A6720000              	call malloc
 16332 00009A70 50                      	push rax
 16333 00009A71 BF08000000              	mov rdi, 8 * 1	; new rib
 16334 00009A76 E89B720000              	call malloc
 16335 00009A7B 50                      	push rax
 16336 00009A7C BF10000000              	mov rdi, 8 * 2	; extended env
 16337 00009A81 E890720000              	call malloc
 16338 00009A86 488B7D10                	mov rdi, ENV
 16339 00009A8A BE00000000              	mov rsi, 0
 16340 00009A8F BA01000000              	mov rdx, 1
 16341                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
 16342 00009A94 4883FE01                	cmp rsi, 1
 16343 00009A98 7410                    	je .L_lambda_simple_env_end_005a
 16344 00009A9A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16345 00009A9E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16346 00009AA2 48FFC6                  	inc rsi
 16347 00009AA5 48FFC2                  	inc rdx
 16348 00009AA8 EBEA                    	jmp .L_lambda_simple_env_loop_005a
 16349                                  .L_lambda_simple_env_end_005a:
 16350 00009AAA 5B                      	pop rbx
 16351 00009AAB BE00000000              	mov rsi, 0
 16352                                  .L_lambda_simple_params_loop_005a:	; copy params
 16353 00009AB0 4883FE01                	cmp rsi, 1
 16354 00009AB4 740E                    	je .L_lambda_simple_params_end_005a
 16355 00009AB6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16356 00009ABB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16357 00009ABF 48FFC6                  	inc rsi
 16358 00009AC2 EBEC                    	jmp .L_lambda_simple_params_loop_005a
 16359                                  .L_lambda_simple_params_end_005a:
 16360 00009AC4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16361 00009AC7 4889C3                  	mov rbx, rax
 16362 00009ACA 58                      	pop rax
 16363 00009ACB C60005                  	mov byte [rax], T_closure
 16364 00009ACE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16365 00009AD2 48C74009[DF9A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
 16366 00009ADA E90C010000              	jmp .L_lambda_simple_end_005a
 16367                                  .L_lambda_simple_code_005a:	; lambda-simple body
 16368 00009ADF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16369 00009AE5 740B                    	je .L_lambda_simple_arity_check_ok_00cf
 16370 00009AE7 FF742410                	push qword [rsp + 8 * 2]
 16371 00009AEB 6A02                    	push 2
 16372 00009AED E9DD710000              	jmp L_error_incorrect_arity_simple
 16373                                  .L_lambda_simple_arity_check_ok_00cf:
 16374 00009AF2 C8000000                	enter 0, 0
 16375 00009AF6 488B4520                mov rax, qword [rbp + 32]
 16376 00009AFA 50                      	push rax
 16377 00009AFB 6A01                    	push 1
 16378 00009AFD 488B0425[D8000000]      	mov rax, qword [free_var_27]
 16379 00009B05 803805                  	cmp byte [rax], T_closure 
 16380 00009B08 0F8590810000                    jne L_code_ptr_error
 16381                                  
 16382 00009B0E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16383                                  
 16384 00009B12 53                              push rbx
 16385                                  
 16386 00009B13 FF5009                          call SOB_CLOSURE_CODE(rax)
 16387                                  
 16388 00009B16 483D[02000000]                  	cmp rax, sob_boolean_false
 16389 00009B1C 740F                    	je .L_if_else_0033
 16390 00009B1E 48B8-                   	mov rax, qword (L_constants + 1)
 16390 00009B20 [0100000000000000] 
 16391 00009B28 E9BA000000              	jmp .L_if_end_0033
 16392                                  	.L_if_else_0033:
 16393 00009B2D 488B4528                	mov rax, qword [rbp + 40]
 16394 00009B31 50                      	push rax
 16395 00009B32 48B8-                   	mov rax, qword (L_constants + 127)
 16395 00009B34 [7F00000000000000] 
 16396 00009B3C 50                      	push rax
 16397 00009B3D 488B4520                mov rax, qword [rbp + 32]
 16398 00009B41 50                      	push rax
 16399 00009B42 6A02                    	push 2
 16400 00009B44 488B0425[10030000]      	mov rax, qword [free_var_98]
 16401 00009B4C 803805                  	cmp byte [rax], T_closure 
 16402 00009B4F 0F8549810000                    jne L_code_ptr_error
 16403                                  
 16404 00009B55 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16405                                  
 16406 00009B59 53                              push rbx
 16407                                  
 16408 00009B5A FF5009                          call SOB_CLOSURE_CODE(rax)
 16409                                  
 16410 00009B5D 50                              	push rax
 16411 00009B5E 6A02                    	push 2
 16412 00009B60 488B4510                mov rax, qword [rbp + 16]
 16413 00009B64 488B00                  mov rax, qword [rax + 0]
 16414 00009B67 488B00                  mov rax, qword [rax + 0]
 16415 00009B6A 488B00                  	mov rax, qword [rax]
 16416 00009B6D 803805                  	cmp byte [rax], T_closure 
 16417 00009B70 0F8528810000                    jne L_code_ptr_error
 16418                                  
 16419 00009B76 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16420                                  
 16421 00009B7A 53                              push rbx
 16422                                  
 16423 00009B7B FF5009                          call SOB_CLOSURE_CODE(rax)
 16424                                  
 16425 00009B7E 50                              	push rax
 16426 00009B7F 488B4528                mov rax, qword [rbp + 40]
 16427 00009B83 50                      	push rax
 16428 00009B84 6A02                    	push 2
 16429 00009B86 488B0425[68000000]      	mov rax, qword [free_var_13]
 16430                                  .L_lambda_simple_arity_check_ok_00d0:
 16431 00009B8E 803805                  	cmp byte [rax], T_closure
 16432                                  
 16433 00009B91 0F8507810000                    jne L_code_ptr_error                      ; rax <- proc
 16434                                  
 16435                                  
 16436 00009B97 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16437                                  
 16438 00009B9B 53                              push rbx                                  ; env pushed
 16439                                  
 16440 00009B9C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16441                                  
 16442                                  
 16443 00009B9F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16444                                  
 16445                                          
 16446                                          
 16447 00009BA2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16448                                  
 16449 00009BA6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16450                                  
 16451                                  
 16452 00009BAB 4D89CA                          mov r10, r9
 16453 00009BAE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 16454                                  
 16455                                                                                         
 16456 00009BB2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16457 00009BB5 4983C404                        add r12, 4
 16458                                  
 16459 00009BB9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16460                                  .L_tc_recycle_frame_loop_0076:
 16461 00009BBF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16462                                  
 16463 00009BC3 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16464                                  
 16465                                  
 16466                                  
 16467 00009BC8 41BE00000000                    mov r14, 0                                ; clean box
 16468                                  
 16469                                  
 16470                                                                  
 16471 00009BCE 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16472                                  
 16473 00009BD2 4983C4FF                        add r12, -1 
 16474                                  
 16475 00009BD6 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16476 00009BDA 75E3                    	jne .L_tc_recycle_frame_loop_0076
 16477                                  .L_tc_recycle_frame_done_0076:
 16478 00009BDC 5D                      	pop rbp                                  ; restore the old rbp
 16479                                  
 16480 00009BDD 488B4D00                        mov rcx, qword [rbp]
 16481 00009BE1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16482                                            ; rbx <- code(proc)
 16483                                  
 16484 00009BE5 FFE3                            jmp rbx
 16485                                  	.L_if_end_0033:
 16486 00009BE7 C9                      	leave
 16487 00009BE8 C22000                  	ret 8 * (2 + 2)
 16488                                  .L_lambda_simple_end_005a:	; new closure is in rax
 16489 00009BEB 50                      push rax
 16490 00009BEC 488B4520                mov rax, qword [rbp + 32]
 16491 00009BF0 8F00                    pop qword [rax]
 16492 00009BF2 48B8-                   mov rax, sob_void
 16492 00009BF4 [0000000000000000] 
 16493                                  
 16494 00009BFC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16495 00009C01 E810710000              	call malloc
 16496 00009C06 50                      	push rax
 16497 00009C07 BF08000000              	mov rdi, 8 * 1	; new rib
 16498 00009C0C E805710000              	call malloc
 16499 00009C11 50                      	push rax
 16500 00009C12 BF10000000              	mov rdi, 8 * 2	; extended env
 16501 00009C17 E8FA700000              	call malloc
 16502 00009C1C 488B7D10                	mov rdi, ENV
 16503 00009C20 BE00000000              	mov rsi, 0
 16504 00009C25 BA01000000              	mov rdx, 1
 16505                                  .L_lambda_opt_env_loop_000f:	; ext_env[i + 1] <-- env[i]
 16506 00009C2A 4883FE01                	cmp rsi, 1
 16507 00009C2E 7410                    	je .L_lambda_opt_env_end_000f
 16508 00009C30 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16509 00009C34 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16510 00009C38 48FFC6                  	inc rsi
 16511 00009C3B 48FFC2                  	inc rdx
 16512 00009C3E EBEA                    	jmp .L_lambda_opt_env_loop_000f
 16513                                  .L_lambda_opt_env_end_000f:
 16514 00009C40 5B                      	pop rbx
 16515 00009C41 BE00000000              	mov rsi, 0
 16516                                  .L_lambda_opt_params_loop_001d:	; copy params
 16517 00009C46 4883FE01                	cmp rsi, 1
 16518 00009C4A 740E                    	je .L_lambda_opt_params_end_001d
 16519 00009C4C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16520 00009C51 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16521 00009C55 48FFC6                  	inc rsi
 16522 00009C58 EBEC                    	jmp .L_lambda_opt_params_loop_001d
 16523                                  .L_lambda_opt_params_end_001d:
 16524 00009C5A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16525 00009C5D 4889C3                  	mov rbx, rax
 16526 00009C60 58                      	pop rax
 16527 00009C61 C60005                  	mov byte [rax], T_closure
 16528 00009C64 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16529 00009C68 48C74009[759C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000f
 16530 00009C70 E936030000              	jmp .L_lambda_opt_end_000f
 16531                                  .L_lambda_opt_code_000f:
 16532 00009C75 4C8B542410              mov r10, qword [rsp+8*2]
 16533 00009C7A 4983FA01                cmp r10, 1
 16534 00009C7E 740B                    je .L_lambda_opt_arity_check_exact_000f
 16535 00009C80 4983FA01                cmp r10, 1
 16536 00009C84 7F41                    jg .L_lambda_opt_arity_check_more_000f
 16537 00009C86 E958700000              jmp L_error_incorrect_arity_opt
 16538                                  .L_lambda_opt_arity_check_exact_000f:
 16539 00009C8B 4883EC08                sub rsp, 8
 16540 00009C8F BA04000000              mov rdx, 3+1
 16541 00009C94 4889E3                  mov qword rbx, rsp
 16542                                  .L_lambda_opt_params_loop_001e:
 16543 00009C97 488B4B08                mov qword rcx, [rbx+8]
 16544 00009C9B 48890B                  mov qword [rbx], rcx
 16545 00009C9E 48FFCA                  dec rdx
 16546 00009CA1 4883C308                add rbx, 8
 16547 00009CA5 4883FA00                cmp rdx, 0
 16548 00009CA9 7402                    je .L_lambda_opt_params_end_001e
 16549 00009CAB EBEA                    jmp .L_lambda_opt_params_loop_001e
 16550                                  .L_lambda_opt_params_end_001e:
 16551 00009CAD 49FFC2                  inc r10
 16552 00009CB0 4C89542410              mov qword [rsp+8*2], r10
 16553 00009CB5 4983C202                add r10, 2
 16554 00009CB9 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 16555 00009CC1 4C8B4D00                mov r9, [rbp]
 16556 00009CC5 EB52                    jmp .L_lambda_opt_stack_adjusted_000f
 16557                                  .L_lambda_opt_arity_check_more_000f:
 16558 00009CC7 48B8-                   mov rax, sob_nil
 16558 00009CC9 [0100000000000000] 
 16559 00009CD1 4C8B542410              mov r10, [rsp+2*8]
 16560 00009CD6 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 16561 00009CDB 4983EA01                sub r10, 1
 16562                                  .L_lambda_opt_stack_shrink_loop_000f:
 16563 00009CDF 4983FA00                cmp r10, 0
 16564 00009CE3 7424                    je .L_lambda_opt_stack_shrink_loop_exit_000f
 16565 00009CE5 4889C1                  mov rcx, rax
 16566 00009CE8 498B10                  mov rdx, [r8]
 16567 00009CEB BF11000000              mov rdi, 17
 16568 00009CF0 E821700000              call malloc
 16569 00009CF5 C60021                  mov byte [rax], T_pair
 16570 00009CF8 48894809                mov SOB_PAIR_CDR(rax), rcx
 16571 00009CFC 48895001                mov SOB_PAIR_CAR(rax), rdx
 16572 00009D00 4983E808                sub r8, 8
 16573 00009D04 49FFCA                  dec r10
 16574 00009D07 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_000f
 16575                                  .L_lambda_opt_stack_shrink_loop_exit_000f:
 16576 00009D09 4889442420              mov [rsp+8*(2+2)], rax
 16577 00009D0E 41BA02000000            mov r10, 2
 16578 00009D14 4C89542410              mov [rsp+16], r10
 16579                                  .L_lambda_opt_stack_adjusted_000f:
 16580 00009D19 4C8B4D00                mov r9, [rbp]
 16581 00009D1D C8000000                enter 0, 0
 16582 00009D21 488B4528                mov rax, qword [rbp + 40]
 16583 00009D25 50                      	push rax
 16584 00009D26 6A01                    	push 1
 16585 00009D28 488B0425[00000000]      	mov rax, qword [free_var_0]
 16586 00009D30 803805                  	cmp byte [rax], T_closure 
 16587 00009D33 0F85657F0000                    jne L_code_ptr_error
 16588                                  
 16589 00009D39 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16590                                  
 16591 00009D3D 53                              push rbx
 16592                                  
 16593 00009D3E FF5009                          call SOB_CLOSURE_CODE(rax)
 16594                                  
 16595 00009D41 483D[02000000]                  	cmp rax, sob_boolean_false
 16596 00009D47 0F847D000000            	je .L_if_else_0034
 16597 00009D4D 48B8-                   	mov rax, qword (L_constants + 4)
 16597 00009D4F [0400000000000000] 
 16598 00009D57 50                      	push rax
 16599 00009D58 488B4520                mov rax, qword [rbp + 32]
 16600 00009D5C 50                      	push rax
 16601 00009D5D 6A02                    	push 2
 16602 00009D5F 488B4510                mov rax, qword [rbp + 16]
 16603 00009D63 488B00                  mov rax, qword [rax + 0]
 16604 00009D66 488B00                  mov rax, qword [rax + 0]
 16605 00009D69 488B00                  	mov rax, qword [rax]
 16606                                  .L_lambda_simple_arity_check_ok_00d3:
 16607 00009D6C 803805                  	cmp byte [rax], T_closure
 16608                                  
 16609 00009D6F 0F85297F0000                    jne L_code_ptr_error                      ; rax <- proc
 16610                                  
 16611                                  
 16612 00009D75 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16613                                  
 16614 00009D79 53                              push rbx                                  ; env pushed
 16615                                  
 16616 00009D7A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16617                                  
 16618                                  
 16619 00009D7D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16620                                  
 16621                                          
 16622                                          
 16623 00009D80 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16624                                  
 16625 00009D84 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16626                                  
 16627                                  
 16628 00009D89 4D89CA                          mov r10, r9
 16629 00009D8C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 16630                                  
 16631                                                                                         
 16632 00009D90 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16633 00009D93 4983C404                        add r12, 4
 16634                                  
 16635 00009D97 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16636                                  .L_tc_recycle_frame_loop_0079:
 16637 00009D9D 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16638                                  
 16639 00009DA1 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16640                                  
 16641                                  
 16642                                  
 16643 00009DA6 41BE00000000                    mov r14, 0                                ; clean box
 16644                                  
 16645                                  
 16646                                                                  
 16647 00009DAC 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16648                                  
 16649 00009DB0 4983C4FF                        add r12, -1 
 16650                                  
 16651 00009DB4 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16652 00009DB8 75E3                    	jne .L_tc_recycle_frame_loop_0079
 16653                                  .L_tc_recycle_frame_done_0079:
 16654 00009DBA 5D                      	pop rbp                                  ; restore the old rbp
 16655                                  
 16656 00009DBB 488B4D00                        mov rcx, qword [rbp]
 16657 00009DBF 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16658                                            ; rbx <- code(proc)
 16659                                  
 16660 00009DC3 FFE3                            jmp rbx
 16661 00009DC5 E9D9010000              	jmp .L_if_end_0034
 16662                                  	.L_if_else_0034:
 16663 00009DCA 488B4528                	mov rax, qword [rbp + 40]
 16664 00009DCE 50                      	push rax
 16665 00009DCF 6A01                    	push 1
 16666 00009DD1 488B0425[08000000]      	mov rax, qword [free_var_1]
 16667 00009DD9 803805                  	cmp byte [rax], T_closure 
 16668 00009DDC 0F85BC7E0000                    jne L_code_ptr_error
 16669                                  
 16670 00009DE2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16671                                  
 16672 00009DE6 53                              push rbx
 16673                                  
 16674 00009DE7 FF5009                          call SOB_CLOSURE_CODE(rax)
 16675                                  
 16676 00009DEA 483D[02000000]                  	cmp rax, sob_boolean_false
 16677 00009DF0 0F848E000000            	je .L_if_else_0036
 16678 00009DF6 488B4528                mov rax, qword [rbp + 40]
 16679 00009DFA 50                      	push rax
 16680 00009DFB 6A01                    	push 1
 16681 00009DFD 488B0425[88000000]      	mov rax, qword [free_var_17]
 16682 00009E05 803805                  	cmp byte [rax], T_closure 
 16683 00009E08 0F85907E0000                    jne L_code_ptr_error
 16684                                  
 16685 00009E0E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16686                                  
 16687 00009E12 53                              push rbx
 16688                                  
 16689 00009E13 FF5009                          call SOB_CLOSURE_CODE(rax)
 16690                                  
 16691 00009E16 50                              	push rax
 16692 00009E17 6A01                    	push 1
 16693 00009E19 488B0425[00000000]      	mov rax, qword [free_var_0]
 16694 00009E21 803805                  	cmp byte [rax], T_closure 
 16695 00009E24 0F85747E0000                    jne L_code_ptr_error
 16696                                  
 16697 00009E2A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16698                                  
 16699 00009E2E 53                              push rbx
 16700                                  
 16701 00009E2F FF5009                          call SOB_CLOSURE_CODE(rax)
 16702                                  
 16703 00009E32 483D[02000000]                  	cmp rax, sob_boolean_false
 16704 00009E38 743E                    	je .L_if_else_0037
 16705 00009E3A 488B4528                mov rax, qword [rbp + 40]
 16706 00009E3E 50                      	push rax
 16707 00009E3F 6A01                    	push 1
 16708 00009E41 488B0425[80000000]      	mov rax, qword [free_var_16]
 16709 00009E49 803805                  	cmp byte [rax], T_closure 
 16710 00009E4C 0F854C7E0000                    jne L_code_ptr_error
 16711                                  
 16712 00009E52 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16713                                  
 16714 00009E56 53                              push rbx
 16715                                  
 16716 00009E57 FF5009                          call SOB_CLOSURE_CODE(rax)
 16717                                  
 16718 00009E5A 50                              	push rax
 16719 00009E5B 6A01                    	push 1
 16720 00009E5D 488B0425[18000000]      	mov rax, qword [free_var_3]
 16721 00009E65 803805                  	cmp byte [rax], T_closure 
 16722 00009E68 0F85307E0000                    jne L_code_ptr_error
 16723                                  
 16724 00009E6E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16725                                  
 16726 00009E72 53                              push rbx
 16727                                  
 16728 00009E73 FF5009                          call SOB_CLOSURE_CODE(rax)
 16729                                  
 16730 00009E76 EB0A                            	jmp .L_if_end_0037
 16731                                  	.L_if_else_0037:
 16732 00009E78 48B8-                   		mov rax, qword (L_constants + 2)
 16732 00009E7A [0200000000000000] 
 16733                                  	.L_if_end_0037:
 16734 00009E82 EB0A                    	jmp .L_if_end_0036
 16735                                  	.L_if_else_0036:
 16736 00009E84 48B8-                   		mov rax, qword (L_constants + 2)
 16736 00009E86 [0200000000000000] 
 16737                                  	.L_if_end_0036:
 16738 00009E8E 483D[02000000]          	cmp rax, sob_boolean_false
 16739 00009E94 0F8490000000            	je .L_if_else_0035
 16740 00009E9A 488B4528                mov rax, qword [rbp + 40]
 16741 00009E9E 50                      	push rax
 16742 00009E9F 6A01                    	push 1
 16743 00009EA1 488B0425[80000000]      	mov rax, qword [free_var_16]
 16744 00009EA9 803805                  	cmp byte [rax], T_closure 
 16745 00009EAC 0F85EC7D0000                    jne L_code_ptr_error
 16746                                  
 16747 00009EB2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16748                                  
 16749 00009EB6 53                              push rbx
 16750                                  
 16751 00009EB7 FF5009                          call SOB_CLOSURE_CODE(rax)
 16752                                  
 16753 00009EBA 50                              	push rax
 16754 00009EBB 488B4520                mov rax, qword [rbp + 32]
 16755 00009EBF 50                      	push rax
 16756 00009EC0 6A02                    	push 2
 16757 00009EC2 488B4510                mov rax, qword [rbp + 16]
 16758 00009EC6 488B00                  mov rax, qword [rax + 0]
 16759 00009EC9 488B00                  mov rax, qword [rax + 0]
 16760 00009ECC 488B00                  	mov rax, qword [rax]
 16761                                  .L_lambda_simple_arity_check_ok_00d2:
 16762 00009ECF 803805                  	cmp byte [rax], T_closure
 16763                                  
 16764 00009ED2 0F85C67D0000                    jne L_code_ptr_error                      ; rax <- proc
 16765                                  
 16766                                  
 16767 00009ED8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16768                                  
 16769 00009EDC 53                              push rbx                                  ; env pushed
 16770                                  
 16771 00009EDD FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16772                                  
 16773                                  
 16774 00009EE0 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16775                                  
 16776                                          
 16777                                          
 16778 00009EE3 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16779                                  
 16780 00009EE7 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16781                                  
 16782                                  
 16783 00009EEC 4D89CA                          mov r10, r9
 16784 00009EEF 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 16785                                  
 16786                                                                                         
 16787 00009EF3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16788 00009EF6 4983C404                        add r12, 4
 16789                                  
 16790 00009EFA 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16791                                  .L_tc_recycle_frame_loop_0078:
 16792 00009F00 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16793                                  
 16794 00009F04 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16795                                  
 16796                                  
 16797                                  
 16798 00009F09 41BE00000000                    mov r14, 0                                ; clean box
 16799                                  
 16800                                  
 16801                                                                  
 16802 00009F0F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16803                                  
 16804 00009F13 4983C4FF                        add r12, -1 
 16805                                  
 16806 00009F17 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16807 00009F1B 75E3                    	jne .L_tc_recycle_frame_loop_0078
 16808                                  .L_tc_recycle_frame_done_0078:
 16809 00009F1D 5D                      	pop rbp                                  ; restore the old rbp
 16810                                  
 16811 00009F1E 488B4D00                        mov rcx, qword [rbp]
 16812 00009F22 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16813                                            ; rbx <- code(proc)
 16814                                  
 16815 00009F26 FFE3                            jmp rbx
 16816 00009F28 EB79                    	jmp .L_if_end_0035
 16817                                  	.L_if_else_0035:
 16818 00009F2A 48B8-                   		mov rax, qword (L_constants + 287)
 16818 00009F2C [1F01000000000000] 
 16819 00009F34 50                      	push rax
 16820 00009F35 48B8-                   	mov rax, qword (L_constants + 278)
 16820 00009F37 [1601000000000000] 
 16821 00009F3F 50                      	push rax
 16822 00009F40 6A02                    	push 2
 16823 00009F42 488B0425[30010000]      	mov rax, qword [free_var_38]
 16824                                  .L_lambda_simple_arity_check_ok_00d1:
 16825 00009F4A 803805                  	cmp byte [rax], T_closure
 16826                                  
 16827 00009F4D 0F854B7D0000                    jne L_code_ptr_error                      ; rax <- proc
 16828                                  
 16829                                  
 16830 00009F53 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 16831                                  
 16832 00009F57 53                              push rbx                                  ; env pushed
 16833                                  
 16834 00009F58 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 16835                                  
 16836                                  
 16837 00009F5B FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 16838                                  
 16839                                          
 16840                                          
 16841 00009F5E 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 16842                                  
 16843 00009F62 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 16844                                  
 16845                                  
 16846 00009F67 4D89CA                          mov r10, r9
 16847 00009F6A 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 16848                                  
 16849                                                                                         
 16850 00009F6E 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 16851 00009F71 4983C404                        add r12, 4
 16852                                  
 16853 00009F75 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 16854                                  .L_tc_recycle_frame_loop_0077:
 16855 00009F7B 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 16856                                  
 16857 00009F7F 4E8974E500                      mov [rbp + (r12 * 8)], r14
 16858                                  
 16859                                  
 16860                                  
 16861 00009F84 41BE00000000                    mov r14, 0                                ; clean box
 16862                                  
 16863                                  
 16864                                                                  
 16865 00009F8A 4983C2FF                        add r10, -1                               ; args_copied_counter--
 16866                                  
 16867 00009F8E 4983C4FF                        add r12, -1 
 16868                                  
 16869 00009F92 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 16870 00009F96 75E3                    	jne .L_tc_recycle_frame_loop_0077
 16871                                  .L_tc_recycle_frame_done_0077:
 16872 00009F98 5D                      	pop rbp                                  ; restore the old rbp
 16873                                  
 16874 00009F99 488B4D00                        mov rcx, qword [rbp]
 16875 00009F9D 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 16876                                            ; rbx <- code(proc)
 16877                                  
 16878 00009FA1 FFE3                            jmp rbx
 16879                                  	.L_if_end_0035:
 16880                                  	.L_if_end_0034:
 16881 00009FA3 C9                      leave
 16882 00009FA4 4C8B4D00                mov r9, [rbp]
 16883 00009FA8 C22800                  ret 8 * (3 + 2)
 16884                                  .L_lambda_opt_end_000f:	; new closure is in rax
 16885 00009FAB C9                      	leave
 16886 00009FAC C21800                  	ret 8 * (2 + 1)
 16887                                  .L_lambda_simple_end_0059:	; new closure is in rax
 16888 00009FAF 803805                  	cmp byte [rax], T_closure 
 16889 00009FB2 0F85E67C0000                    jne L_code_ptr_error
 16890                                  
 16891 00009FB8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 16892                                  
 16893 00009FBC 53                              push rbx
 16894                                  
 16895 00009FBD FF5009                          call SOB_CLOSURE_CODE(rax)
 16896                                  
 16897 00009FC0 48890425[58030000]              	mov qword [free_var_107], rax
 16898 00009FC8 48B8-                   	mov rax, sob_void
 16898 00009FCA [0000000000000000] 
 16899                                  
 16900 00009FD2 4889C7                  	mov rdi, rax
 16901 00009FD5 E84D6D0000              	call print_sexpr_if_not_void
 16902                                  
 16903 00009FDA 48B8-                   	mov rax, qword (L_constants + 0)
 16903 00009FDC [0000000000000000] 
 16904 00009FE4 48890425[60030000]      	mov qword [free_var_108], rax
 16905 00009FEC 48B8-                   	mov rax, sob_void
 16905 00009FEE [0000000000000000] 
 16906                                  
 16907 00009FF6 4889C7                  	mov rdi, rax
 16908 00009FF9 E8296D0000              	call print_sexpr_if_not_void
 16909                                  
 16910 00009FFE 48B8-                   	mov rax, qword (L_constants + 0)
 16910 0000A000 [0000000000000000] 
 16911 0000A008 48890425[68030000]      	mov qword [free_var_109], rax
 16912 0000A010 48B8-                   	mov rax, sob_void
 16912 0000A012 [0000000000000000] 
 16913                                  
 16914 0000A01A 4889C7                  	mov rdi, rax
 16915 0000A01D E8056D0000              	call print_sexpr_if_not_void
 16916                                  
 16917 0000A022 48B8-                   	mov rax, qword (L_constants + 0)
 16917 0000A024 [0000000000000000] 
 16918 0000A02C 48890425[70030000]      	mov qword [free_var_110], rax
 16919 0000A034 48B8-                   	mov rax, sob_void
 16919 0000A036 [0000000000000000] 
 16920                                  
 16921 0000A03E 4889C7                  	mov rdi, rax
 16922 0000A041 E8E16C0000              	call print_sexpr_if_not_void
 16923                                  
 16924 0000A046 48B8-                   	mov rax, qword (L_constants + 0)
 16924 0000A048 [0000000000000000] 
 16925 0000A050 48890425[78030000]      	mov qword [free_var_111], rax
 16926 0000A058 48B8-                   	mov rax, sob_void
 16926 0000A05A [0000000000000000] 
 16927                                  
 16928 0000A062 4889C7                  	mov rdi, rax
 16929 0000A065 E8BD6C0000              	call print_sexpr_if_not_void
 16930                                  
 16931 0000A06A 48B8-                   	mov rax, qword (L_constants + 0)
 16931 0000A06C [0000000000000000] 
 16932 0000A074 48890425[80030000]      	mov qword [free_var_112], rax
 16933 0000A07C 48B8-                   	mov rax, sob_void
 16933 0000A07E [0000000000000000] 
 16934                                  
 16935 0000A086 4889C7                  	mov rdi, rax
 16936 0000A089 E8996C0000              	call print_sexpr_if_not_void
 16937                                  
 16938 0000A08E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16939 0000A093 E87E6C0000              	call malloc
 16940 0000A098 50                      	push rax
 16941 0000A099 BF00000000              	mov rdi, 8 * 0	; new rib
 16942 0000A09E E8736C0000              	call malloc
 16943 0000A0A3 50                      	push rax
 16944 0000A0A4 BF08000000              	mov rdi, 8 * 1	; extended env
 16945 0000A0A9 E8686C0000              	call malloc
 16946 0000A0AE 488B7D10                	mov rdi, ENV
 16947 0000A0B2 BE00000000              	mov rsi, 0
 16948 0000A0B7 BA01000000              	mov rdx, 1
 16949                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
 16950 0000A0BC 4883FE00                	cmp rsi, 0
 16951 0000A0C0 7410                    	je .L_lambda_simple_env_end_005b
 16952 0000A0C2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16953 0000A0C6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16954 0000A0CA 48FFC6                  	inc rsi
 16955 0000A0CD 48FFC2                  	inc rdx
 16956 0000A0D0 EBEA                    	jmp .L_lambda_simple_env_loop_005b
 16957                                  .L_lambda_simple_env_end_005b:
 16958 0000A0D2 5B                      	pop rbx
 16959 0000A0D3 BE00000000              	mov rsi, 0
 16960                                  .L_lambda_simple_params_loop_005b:	; copy params
 16961 0000A0D8 4883FE00                	cmp rsi, 0
 16962 0000A0DC 740E                    	je .L_lambda_simple_params_end_005b
 16963 0000A0DE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16964 0000A0E3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16965 0000A0E7 48FFC6                  	inc rsi
 16966 0000A0EA EBEC                    	jmp .L_lambda_simple_params_loop_005b
 16967                                  .L_lambda_simple_params_end_005b:
 16968 0000A0EC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16969 0000A0EF 4889C3                  	mov rbx, rax
 16970 0000A0F2 58                      	pop rax
 16971 0000A0F3 C60005                  	mov byte [rax], T_closure
 16972 0000A0F6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16973 0000A0FA 48C74009[07A10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
 16974 0000A102 E9E0010000              	jmp .L_lambda_simple_end_005b
 16975                                  .L_lambda_simple_code_005b:	; lambda-simple body
 16976 0000A107 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16977 0000A10D 740B                    	je .L_lambda_simple_arity_check_ok_00d4
 16978 0000A10F FF742410                	push qword [rsp + 8 * 2]
 16979 0000A113 6A01                    	push 1
 16980 0000A115 E9B56B0000              	jmp L_error_incorrect_arity_simple
 16981                                  .L_lambda_simple_arity_check_ok_00d4:
 16982 0000A11A C8000000                	enter 0, 0
 16983 0000A11E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16984 0000A123 E8EE6B0000              	call malloc
 16985 0000A128 50                      	push rax
 16986 0000A129 BF08000000              	mov rdi, 8 * 1	; new rib
 16987 0000A12E E8E36B0000              	call malloc
 16988 0000A133 50                      	push rax
 16989 0000A134 BF10000000              	mov rdi, 8 * 2	; extended env
 16990 0000A139 E8D86B0000              	call malloc
 16991 0000A13E 488B7D10                	mov rdi, ENV
 16992 0000A142 BE00000000              	mov rsi, 0
 16993 0000A147 BA01000000              	mov rdx, 1
 16994                                  .L_lambda_opt_env_loop_0010:	; ext_env[i + 1] <-- env[i]
 16995 0000A14C 4883FE01                	cmp rsi, 1
 16996 0000A150 7410                    	je .L_lambda_opt_env_end_0010
 16997 0000A152 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16998 0000A156 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16999 0000A15A 48FFC6                  	inc rsi
 17000 0000A15D 48FFC2                  	inc rdx
 17001 0000A160 EBEA                    	jmp .L_lambda_opt_env_loop_0010
 17002                                  .L_lambda_opt_env_end_0010:
 17003 0000A162 5B                      	pop rbx
 17004 0000A163 BE00000000              	mov rsi, 0
 17005                                  .L_lambda_opt_params_loop_001f:	; copy params
 17006 0000A168 4883FE01                	cmp rsi, 1
 17007 0000A16C 740E                    	je .L_lambda_opt_params_end_001f
 17008 0000A16E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17009 0000A173 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17010 0000A177 48FFC6                  	inc rsi
 17011 0000A17A EBEC                    	jmp .L_lambda_opt_params_loop_001f
 17012                                  .L_lambda_opt_params_end_001f:
 17013 0000A17C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17014 0000A17F 4889C3                  	mov rbx, rax
 17015 0000A182 58                      	pop rax
 17016 0000A183 C60005                  	mov byte [rax], T_closure
 17017 0000A186 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17018 0000A18A 48C74009[97A10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0010
 17019 0000A192 E94C010000              	jmp .L_lambda_opt_end_0010
 17020                                  .L_lambda_opt_code_0010:
 17021 0000A197 4C8B542410              mov r10, qword [rsp+8*2]
 17022 0000A19C 4983FA00                cmp r10, 0
 17023 0000A1A0 740B                    je .L_lambda_opt_arity_check_exact_0010
 17024 0000A1A2 4983FA00                cmp r10, 0
 17025 0000A1A6 7F41                    jg .L_lambda_opt_arity_check_more_0010
 17026 0000A1A8 E9366B0000              jmp L_error_incorrect_arity_opt
 17027                                  .L_lambda_opt_arity_check_exact_0010:
 17028 0000A1AD 4883EC08                sub rsp, 8
 17029 0000A1B1 BA03000000              mov rdx, 3+0
 17030 0000A1B6 4889E3                  mov qword rbx, rsp
 17031                                  .L_lambda_opt_params_loop_0020:
 17032 0000A1B9 488B4B08                mov qword rcx, [rbx+8]
 17033 0000A1BD 48890B                  mov qword [rbx], rcx
 17034 0000A1C0 48FFCA                  dec rdx
 17035 0000A1C3 4883C308                add rbx, 8
 17036 0000A1C7 4883FA00                cmp rdx, 0
 17037 0000A1CB 7402                    je .L_lambda_opt_params_end_0020
 17038 0000A1CD EBEA                    jmp .L_lambda_opt_params_loop_0020
 17039                                  .L_lambda_opt_params_end_0020:
 17040 0000A1CF 49FFC2                  inc r10
 17041 0000A1D2 4C89542410              mov qword [rsp+8*2], r10
 17042 0000A1D7 4983C202                add r10, 2
 17043 0000A1DB 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 17044 0000A1E3 4C8B4D00                mov r9, [rbp]
 17045 0000A1E7 EB52                    jmp .L_lambda_opt_stack_adjusted_0010
 17046                                  .L_lambda_opt_arity_check_more_0010:
 17047 0000A1E9 48B8-                   mov rax, sob_nil
 17047 0000A1EB [0100000000000000] 
 17048 0000A1F3 4C8B542410              mov r10, [rsp+2*8]
 17049 0000A1F8 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 17050 0000A1FD 4983EA00                sub r10, 0
 17051                                  .L_lambda_opt_stack_shrink_loop_0010:
 17052 0000A201 4983FA00                cmp r10, 0
 17053 0000A205 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0010
 17054 0000A207 4889C1                  mov rcx, rax
 17055 0000A20A 498B10                  mov rdx, [r8]
 17056 0000A20D BF11000000              mov rdi, 17
 17057 0000A212 E8FF6A0000              call malloc
 17058 0000A217 C60021                  mov byte [rax], T_pair
 17059 0000A21A 48894809                mov SOB_PAIR_CDR(rax), rcx
 17060 0000A21E 48895001                mov SOB_PAIR_CAR(rax), rdx
 17061 0000A222 4983E808                sub r8, 8
 17062 0000A226 49FFCA                  dec r10
 17063 0000A229 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0010
 17064                                  .L_lambda_opt_stack_shrink_loop_exit_0010:
 17065 0000A22B 4889442418              mov [rsp+8*(2+1)], rax
 17066 0000A230 41BA01000000            mov r10, 1
 17067 0000A236 4C89542410              mov [rsp+16], r10
 17068                                  .L_lambda_opt_stack_adjusted_0010:
 17069 0000A23B 4C8B4D00                mov r9, [rbp]
 17070 0000A23F C8000000                enter 0, 0
 17071 0000A243 488B4520                mov rax, qword [rbp + 32]
 17072 0000A247 50                      	push rax
 17073 0000A248 488B0425[C0000000]      	mov rax, qword [free_var_24]
 17074 0000A250 50                      	push rax
 17075 0000A251 6A02                    	push 2
 17076 0000A253 488B0425[D8020000]      	mov rax, qword [free_var_91]
 17077 0000A25B 803805                  	cmp byte [rax], T_closure 
 17078 0000A25E 0F853A7A0000                    jne L_code_ptr_error
 17079                                  
 17080 0000A264 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17081                                  
 17082 0000A268 53                              push rbx
 17083                                  
 17084 0000A269 FF5009                          call SOB_CLOSURE_CODE(rax)
 17085                                  
 17086 0000A26C 50                              	push rax
 17087 0000A26D 488B4510                mov rax, qword [rbp + 16]
 17088 0000A271 488B00                  mov rax, qword [rax + 0]
 17089 0000A274 488B00                  mov rax, qword [rax + 0]
 17090 0000A277 50                      	push rax
 17091 0000A278 6A02                    	push 2
 17092 0000A27A 488B0425[C8020000]      	mov rax, qword [free_var_89]
 17093                                  .L_lambda_simple_arity_check_ok_00d5:
 17094 0000A282 803805                  	cmp byte [rax], T_closure
 17095                                  
 17096 0000A285 0F85137A0000                    jne L_code_ptr_error                      ; rax <- proc
 17097                                  
 17098                                  
 17099 0000A28B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17100                                  
 17101 0000A28F 53                              push rbx                                  ; env pushed
 17102                                  
 17103 0000A290 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17104                                  
 17105                                  
 17106 0000A293 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17107                                  
 17108                                          
 17109                                          
 17110 0000A296 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17111                                  
 17112 0000A29A 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17113                                  
 17114                                  
 17115 0000A29F 4D89CA                          mov r10, r9
 17116 0000A2A2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 17117                                  
 17118                                                                                         
 17119 0000A2A6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17120 0000A2A9 4983C404                        add r12, 4
 17121                                  
 17122 0000A2AD 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17123                                  .L_tc_recycle_frame_loop_007a:
 17124 0000A2B3 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 17125                                  
 17126 0000A2B7 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17127                                  
 17128                                  
 17129                                  
 17130 0000A2BC 41BE00000000                    mov r14, 0                                ; clean box
 17131                                  
 17132                                  
 17133                                                                  
 17134 0000A2C2 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17135                                  
 17136 0000A2C6 4983C4FF                        add r12, -1 
 17137                                  
 17138 0000A2CA 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17139 0000A2CE 75E3                    	jne .L_tc_recycle_frame_loop_007a
 17140                                  .L_tc_recycle_frame_done_007a:
 17141 0000A2D0 5D                      	pop rbp                                  ; restore the old rbp
 17142                                  
 17143 0000A2D1 488B4D00                        mov rcx, qword [rbp]
 17144 0000A2D5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17145                                            ; rbx <- code(proc)
 17146                                  
 17147 0000A2D9 FFE3                            jmp rbx
 17148 0000A2DB C9                      leave
 17149 0000A2DC 4C8B4D00                mov r9, [rbp]
 17150 0000A2E0 C22000                  ret 8 * (3 + 1)
 17151                                  .L_lambda_opt_end_0010:	; new closure is in rax
 17152 0000A2E3 C9                      	leave
 17153 0000A2E4 C21800                  	ret 8 * (2 + 1)
 17154                                  .L_lambda_simple_end_005b:	; new closure is in rax
 17155 0000A2E7 50                      	push rax
 17156 0000A2E8 6A01                    	push 1
 17157 0000A2EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17158 0000A2EF E8226A0000              	call malloc
 17159 0000A2F4 50                      	push rax
 17160 0000A2F5 BF00000000              	mov rdi, 8 * 0	; new rib
 17161 0000A2FA E8176A0000              	call malloc
 17162 0000A2FF 50                      	push rax
 17163 0000A300 BF08000000              	mov rdi, 8 * 1	; extended env
 17164 0000A305 E80C6A0000              	call malloc
 17165 0000A30A 488B7D10                	mov rdi, ENV
 17166 0000A30E BE00000000              	mov rsi, 0
 17167 0000A313 BA01000000              	mov rdx, 1
 17168                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
 17169 0000A318 4883FE00                	cmp rsi, 0
 17170 0000A31C 7410                    	je .L_lambda_simple_env_end_005c
 17171 0000A31E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17172 0000A322 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17173 0000A326 48FFC6                  	inc rsi
 17174 0000A329 48FFC2                  	inc rdx
 17175 0000A32C EBEA                    	jmp .L_lambda_simple_env_loop_005c
 17176                                  .L_lambda_simple_env_end_005c:
 17177 0000A32E 5B                      	pop rbx
 17178 0000A32F BE00000000              	mov rsi, 0
 17179                                  .L_lambda_simple_params_loop_005c:	; copy params
 17180 0000A334 4883FE00                	cmp rsi, 0
 17181 0000A338 740E                    	je .L_lambda_simple_params_end_005c
 17182 0000A33A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17183 0000A33F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17184 0000A343 48FFC6                  	inc rsi
 17185 0000A346 EBEC                    	jmp .L_lambda_simple_params_loop_005c
 17186                                  .L_lambda_simple_params_end_005c:
 17187 0000A348 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17188 0000A34B 4889C3                  	mov rbx, rax
 17189 0000A34E 58                      	pop rax
 17190 0000A34F C60005                  	mov byte [rax], T_closure
 17191 0000A352 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17192 0000A356 48C74009[63A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
 17193 0000A35E E915010000              	jmp .L_lambda_simple_end_005c
 17194                                  .L_lambda_simple_code_005c:	; lambda-simple body
 17195 0000A363 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17196 0000A369 740B                    	je .L_lambda_simple_arity_check_ok_00d6
 17197 0000A36B FF742410                	push qword [rsp + 8 * 2]
 17198 0000A36F 6A01                    	push 1
 17199 0000A371 E959690000              	jmp L_error_incorrect_arity_simple
 17200                                  .L_lambda_simple_arity_check_ok_00d6:
 17201 0000A376 C8000000                	enter 0, 0
 17202 0000A37A 488B0425[30030000]      	mov rax, qword [free_var_102]
 17203 0000A382 50                      	push rax
 17204 0000A383 6A01                    	push 1
 17205 0000A385 488B4520                mov rax, qword [rbp + 32]
 17206 0000A389 803805                  	cmp byte [rax], T_closure 
 17207 0000A38C 0F850C790000                    jne L_code_ptr_error
 17208                                  
 17209 0000A392 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17210                                  
 17211 0000A396 53                              push rbx
 17212                                  
 17213 0000A397 FF5009                          call SOB_CLOSURE_CODE(rax)
 17214                                  
 17215 0000A39A 48890425[60030000]              	mov qword [free_var_108], rax
 17216 0000A3A2 48B8-                   	mov rax, sob_void
 17216 0000A3A4 [0000000000000000] 
 17217                                  
 17218 0000A3AC 488B0425[38030000]      	mov rax, qword [free_var_103]
 17219 0000A3B4 50                      	push rax
 17220 0000A3B5 6A01                    	push 1
 17221 0000A3B7 488B4520                mov rax, qword [rbp + 32]
 17222 0000A3BB 803805                  	cmp byte [rax], T_closure 
 17223 0000A3BE 0F85DA780000                    jne L_code_ptr_error
 17224                                  
 17225 0000A3C4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17226                                  
 17227 0000A3C8 53                              push rbx
 17228                                  
 17229 0000A3C9 FF5009                          call SOB_CLOSURE_CODE(rax)
 17230                                  
 17231 0000A3CC 48890425[68030000]              	mov qword [free_var_109], rax
 17232 0000A3D4 48B8-                   	mov rax, sob_void
 17232 0000A3D6 [0000000000000000] 
 17233                                  
 17234 0000A3DE 488B0425[50030000]      	mov rax, qword [free_var_106]
 17235 0000A3E6 50                      	push rax
 17236 0000A3E7 6A01                    	push 1
 17237 0000A3E9 488B4520                mov rax, qword [rbp + 32]
 17238 0000A3ED 803805                  	cmp byte [rax], T_closure 
 17239 0000A3F0 0F85A8780000                    jne L_code_ptr_error
 17240                                  
 17241 0000A3F6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17242                                  
 17243 0000A3FA 53                              push rbx
 17244                                  
 17245 0000A3FB FF5009                          call SOB_CLOSURE_CODE(rax)
 17246                                  
 17247 0000A3FE 48890425[70030000]              	mov qword [free_var_110], rax
 17248 0000A406 48B8-                   	mov rax, sob_void
 17248 0000A408 [0000000000000000] 
 17249                                  
 17250 0000A410 488B0425[40030000]      	mov rax, qword [free_var_104]
 17251 0000A418 50                      	push rax
 17252 0000A419 6A01                    	push 1
 17253 0000A41B 488B4520                mov rax, qword [rbp + 32]
 17254 0000A41F 803805                  	cmp byte [rax], T_closure 
 17255 0000A422 0F8576780000                    jne L_code_ptr_error
 17256                                  
 17257 0000A428 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17258                                  
 17259 0000A42C 53                              push rbx
 17260                                  
 17261 0000A42D FF5009                          call SOB_CLOSURE_CODE(rax)
 17262                                  
 17263 0000A430 48890425[78030000]              	mov qword [free_var_111], rax
 17264 0000A438 48B8-                   	mov rax, sob_void
 17264 0000A43A [0000000000000000] 
 17265                                  
 17266 0000A442 488B0425[48030000]      	mov rax, qword [free_var_105]
 17267 0000A44A 50                      	push rax
 17268 0000A44B 6A01                    	push 1
 17269 0000A44D 488B4520                mov rax, qword [rbp + 32]
 17270 0000A451 803805                  	cmp byte [rax], T_closure 
 17271 0000A454 0F8544780000                    jne L_code_ptr_error
 17272                                  
 17273 0000A45A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17274                                  
 17275 0000A45E 53                              push rbx
 17276                                  
 17277 0000A45F FF5009                          call SOB_CLOSURE_CODE(rax)
 17278                                  
 17279 0000A462 48890425[80030000]              	mov qword [free_var_112], rax
 17280 0000A46A 48B8-                   	mov rax, sob_void
 17280 0000A46C [0000000000000000] 
 17281 0000A474 C9                      	leave
 17282 0000A475 C21800                  	ret 8 * (2 + 1)
 17283                                  .L_lambda_simple_end_005c:	; new closure is in rax
 17284 0000A478 803805                  	cmp byte [rax], T_closure 
 17285 0000A47B 0F851D780000                    jne L_code_ptr_error
 17286                                  
 17287 0000A481 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17288                                  
 17289 0000A485 53                              push rbx
 17290                                  
 17291 0000A486 FF5009                          call SOB_CLOSURE_CODE(rax)
 17292                                  
 17293                                          
 17294 0000A489 4889C7                  	mov rdi, rax
 17295 0000A48C E896680000              	call print_sexpr_if_not_void
 17296                                  
 17297 0000A491 48B8-                   	mov rax, qword (L_constants + 0)
 17297 0000A493 [0000000000000000] 
 17298 0000A49B 48890425[88030000]      	mov qword [free_var_113], rax
 17299 0000A4A3 48B8-                   	mov rax, sob_void
 17299 0000A4A5 [0000000000000000] 
 17300                                  
 17301 0000A4AD 4889C7                  	mov rdi, rax
 17302 0000A4B0 E872680000              	call print_sexpr_if_not_void
 17303                                  
 17304 0000A4B5 48B8-                   	mov rax, qword (L_constants + 0)
 17304 0000A4B7 [0000000000000000] 
 17305 0000A4BF 48890425[90030000]      	mov qword [free_var_114], rax
 17306 0000A4C7 48B8-                   	mov rax, sob_void
 17306 0000A4C9 [0000000000000000] 
 17307                                  
 17308 0000A4D1 4889C7                  	mov rdi, rax
 17309 0000A4D4 E84E680000              	call print_sexpr_if_not_void
 17310                                  
 17311 0000A4D9 48B8-                   	mov rax, qword (L_constants + 341)
 17311 0000A4DB [5501000000000000] 
 17312 0000A4E3 50                      	push rax
 17313 0000A4E4 6A01                    	push 1
 17314 0000A4E6 488B0425[C0000000]      	mov rax, qword [free_var_24]
 17315 0000A4EE 803805                  	cmp byte [rax], T_closure 
 17316 0000A4F1 0F85A7770000                    jne L_code_ptr_error
 17317                                  
 17318 0000A4F7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17319                                  
 17320 0000A4FB 53                              push rbx
 17321                                  
 17322 0000A4FC FF5009                          call SOB_CLOSURE_CODE(rax)
 17323                                  
 17324 0000A4FF 50                              	push rax
 17325 0000A500 48B8-                   	mov rax, qword (L_constants + 345)
 17325 0000A502 [5901000000000000] 
 17326 0000A50A 50                      	push rax
 17327 0000A50B 6A01                    	push 1
 17328 0000A50D 488B0425[C0000000]      	mov rax, qword [free_var_24]
 17329 0000A515 803805                  	cmp byte [rax], T_closure 
 17330 0000A518 0F8580770000                    jne L_code_ptr_error
 17331                                  
 17332 0000A51E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17333                                  
 17334 0000A522 53                              push rbx
 17335                                  
 17336 0000A523 FF5009                          call SOB_CLOSURE_CODE(rax)
 17337                                  
 17338 0000A526 50                              	push rax
 17339 0000A527 6A02                    	push 2
 17340 0000A529 488B0425[10030000]      	mov rax, qword [free_var_98]
 17341 0000A531 803805                  	cmp byte [rax], T_closure 
 17342 0000A534 0F8564770000                    jne L_code_ptr_error
 17343                                  
 17344 0000A53A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17345                                  
 17346 0000A53E 53                              push rbx
 17347                                  
 17348 0000A53F FF5009                          call SOB_CLOSURE_CODE(rax)
 17349                                  
 17350 0000A542 50                              	push rax
 17351 0000A543 6A01                    	push 1
 17352 0000A545 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17353 0000A54A E8C7670000              	call malloc
 17354 0000A54F 50                      	push rax
 17355 0000A550 BF00000000              	mov rdi, 8 * 0	; new rib
 17356 0000A555 E8BC670000              	call malloc
 17357 0000A55A 50                      	push rax
 17358 0000A55B BF08000000              	mov rdi, 8 * 1	; extended env
 17359 0000A560 E8B1670000              	call malloc
 17360 0000A565 488B7D10                	mov rdi, ENV
 17361 0000A569 BE00000000              	mov rsi, 0
 17362 0000A56E BA01000000              	mov rdx, 1
 17363                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
 17364 0000A573 4883FE00                	cmp rsi, 0
 17365 0000A577 7410                    	je .L_lambda_simple_env_end_005d
 17366 0000A579 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17367 0000A57D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17368 0000A581 48FFC6                  	inc rsi
 17369 0000A584 48FFC2                  	inc rdx
 17370 0000A587 EBEA                    	jmp .L_lambda_simple_env_loop_005d
 17371                                  .L_lambda_simple_env_end_005d:
 17372 0000A589 5B                      	pop rbx
 17373 0000A58A BE00000000              	mov rsi, 0
 17374                                  .L_lambda_simple_params_loop_005d:	; copy params
 17375 0000A58F 4883FE00                	cmp rsi, 0
 17376 0000A593 740E                    	je .L_lambda_simple_params_end_005d
 17377 0000A595 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17378 0000A59A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17379 0000A59E 48FFC6                  	inc rsi
 17380 0000A5A1 EBEC                    	jmp .L_lambda_simple_params_loop_005d
 17381                                  .L_lambda_simple_params_end_005d:
 17382 0000A5A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17383 0000A5A6 4889C3                  	mov rbx, rax
 17384 0000A5A9 58                      	pop rax
 17385 0000A5AA C60005                  	mov byte [rax], T_closure
 17386 0000A5AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17387 0000A5B1 48C74009[BEA50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
 17388 0000A5B9 E94D030000              	jmp .L_lambda_simple_end_005d
 17389                                  .L_lambda_simple_code_005d:	; lambda-simple body
 17390 0000A5BE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17391 0000A5C4 740B                    	je .L_lambda_simple_arity_check_ok_00d7
 17392 0000A5C6 FF742410                	push qword [rsp + 8 * 2]
 17393 0000A5CA 6A01                    	push 1
 17394 0000A5CC E9FE660000              	jmp L_error_incorrect_arity_simple
 17395                                  .L_lambda_simple_arity_check_ok_00d7:
 17396 0000A5D1 C8000000                	enter 0, 0
 17397 0000A5D5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17398 0000A5DA E837670000              	call malloc
 17399 0000A5DF 50                      	push rax
 17400 0000A5E0 BF08000000              	mov rdi, 8 * 1	; new rib
 17401 0000A5E5 E82C670000              	call malloc
 17402 0000A5EA 50                      	push rax
 17403 0000A5EB BF10000000              	mov rdi, 8 * 2	; extended env
 17404 0000A5F0 E821670000              	call malloc
 17405 0000A5F5 488B7D10                	mov rdi, ENV
 17406 0000A5F9 BE00000000              	mov rsi, 0
 17407 0000A5FE BA01000000              	mov rdx, 1
 17408                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
 17409 0000A603 4883FE01                	cmp rsi, 1
 17410 0000A607 7410                    	je .L_lambda_simple_env_end_005e
 17411 0000A609 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17412 0000A60D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17413 0000A611 48FFC6                  	inc rsi
 17414 0000A614 48FFC2                  	inc rdx
 17415 0000A617 EBEA                    	jmp .L_lambda_simple_env_loop_005e
 17416                                  .L_lambda_simple_env_end_005e:
 17417 0000A619 5B                      	pop rbx
 17418 0000A61A BE00000000              	mov rsi, 0
 17419                                  .L_lambda_simple_params_loop_005e:	; copy params
 17420 0000A61F 4883FE01                	cmp rsi, 1
 17421 0000A623 740E                    	je .L_lambda_simple_params_end_005e
 17422 0000A625 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17423 0000A62A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17424 0000A62E 48FFC6                  	inc rsi
 17425 0000A631 EBEC                    	jmp .L_lambda_simple_params_loop_005e
 17426                                  .L_lambda_simple_params_end_005e:
 17427 0000A633 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17428 0000A636 4889C3                  	mov rbx, rax
 17429 0000A639 58                      	pop rax
 17430 0000A63A C60005                  	mov byte [rax], T_closure
 17431 0000A63D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17432 0000A641 48C74009[4EA60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
 17433 0000A649 E90E010000              	jmp .L_lambda_simple_end_005e
 17434                                  .L_lambda_simple_code_005e:	; lambda-simple body
 17435 0000A64E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17436 0000A654 740B                    	je .L_lambda_simple_arity_check_ok_00d8
 17437 0000A656 FF742410                	push qword [rsp + 8 * 2]
 17438 0000A65A 6A01                    	push 1
 17439 0000A65C E96E660000              	jmp L_error_incorrect_arity_simple
 17440                                  .L_lambda_simple_arity_check_ok_00d8:
 17441 0000A661 C8000000                	enter 0, 0
 17442 0000A665 48B8-                   	mov rax, qword (L_constants + 343)
 17442 0000A667 [5701000000000000] 
 17443 0000A66F 50                      	push rax
 17444 0000A670 488B4520                mov rax, qword [rbp + 32]
 17445 0000A674 50                      	push rax
 17446 0000A675 48B8-                   	mov rax, qword (L_constants + 341)
 17446 0000A677 [5501000000000000] 
 17447 0000A67F 50                      	push rax
 17448 0000A680 6A03                    	push 3
 17449 0000A682 488B0425[68030000]      	mov rax, qword [free_var_109]
 17450 0000A68A 803805                  	cmp byte [rax], T_closure 
 17451 0000A68D 0F850B760000                    jne L_code_ptr_error
 17452                                  
 17453 0000A693 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17454                                  
 17455 0000A697 53                              push rbx
 17456                                  
 17457 0000A698 FF5009                          call SOB_CLOSURE_CODE(rax)
 17458                                  
 17459 0000A69B 483D[02000000]                  	cmp rax, sob_boolean_false
 17460 0000A6A1 0F84AD000000            	je .L_if_else_0038
 17461 0000A6A7 488B4510                mov rax, qword [rbp + 16]
 17462 0000A6AB 488B00                  mov rax, qword [rax + 0]
 17463 0000A6AE 488B00                  mov rax, qword [rax + 0]
 17464 0000A6B1 50                      	push rax
 17465 0000A6B2 488B4520                mov rax, qword [rbp + 32]
 17466 0000A6B6 50                      	push rax
 17467 0000A6B7 6A01                    	push 1
 17468 0000A6B9 488B0425[C0000000]      	mov rax, qword [free_var_24]
 17469 0000A6C1 803805                  	cmp byte [rax], T_closure 
 17470 0000A6C4 0F85D4750000                    jne L_code_ptr_error
 17471                                  
 17472 0000A6CA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17473                                  
 17474 0000A6CE 53                              push rbx
 17475                                  
 17476 0000A6CF FF5009                          call SOB_CLOSURE_CODE(rax)
 17477                                  
 17478 0000A6D2 50                              	push rax
 17479 0000A6D3 6A02                    	push 2
 17480 0000A6D5 488B0425[08030000]      	mov rax, qword [free_var_97]
 17481 0000A6DD 803805                  	cmp byte [rax], T_closure 
 17482 0000A6E0 0F85B8750000                    jne L_code_ptr_error
 17483                                  
 17484 0000A6E6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17485                                  
 17486 0000A6EA 53                              push rbx
 17487                                  
 17488 0000A6EB FF5009                          call SOB_CLOSURE_CODE(rax)
 17489                                  
 17490 0000A6EE 50                              	push rax
 17491 0000A6EF 6A01                    	push 1
 17492 0000A6F1 488B0425[C8000000]      	mov rax, qword [free_var_25]
 17493                                  .L_lambda_simple_arity_check_ok_00d9:
 17494 0000A6F9 803805                  	cmp byte [rax], T_closure
 17495                                  
 17496 0000A6FC 0F859C750000                    jne L_code_ptr_error                      ; rax <- proc
 17497                                  
 17498                                  
 17499 0000A702 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17500                                  
 17501 0000A706 53                              push rbx                                  ; env pushed
 17502                                  
 17503 0000A707 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17504                                  
 17505                                  
 17506 0000A70A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17507                                  
 17508                                          
 17509                                          
 17510 0000A70D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17511                                  
 17512 0000A711 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17513                                  
 17514                                  
 17515 0000A716 4D89CA                          mov r10, r9
 17516 0000A719 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 17517                                  
 17518                                                                                         
 17519 0000A71D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17520 0000A720 4983C404                        add r12, 4
 17521                                  
 17522 0000A724 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17523                                  .L_tc_recycle_frame_loop_007b:
 17524 0000A72A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 17525                                  
 17526 0000A72E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17527                                  
 17528                                  
 17529                                  
 17530 0000A733 41BE00000000                    mov r14, 0                                ; clean box
 17531                                  
 17532                                  
 17533                                                                  
 17534 0000A739 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17535                                  
 17536 0000A73D 4983C4FF                        add r12, -1 
 17537                                  
 17538 0000A741 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17539 0000A745 75E3                    	jne .L_tc_recycle_frame_loop_007b
 17540                                  .L_tc_recycle_frame_done_007b:
 17541 0000A747 5D                      	pop rbp                                  ; restore the old rbp
 17542                                  
 17543 0000A748 488B4D00                        mov rcx, qword [rbp]
 17544 0000A74C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17545                                            ; rbx <- code(proc)
 17546                                  
 17547 0000A750 FFE3                            jmp rbx
 17548 0000A752 EB04                    	jmp .L_if_end_0038
 17549                                  	.L_if_else_0038:
 17550 0000A754 488B4520                	mov rax, qword [rbp + 32]
 17551                                  	.L_if_end_0038:
 17552 0000A758 C9                      	leave
 17553 0000A759 C21800                  	ret 8 * (2 + 1)
 17554                                  .L_lambda_simple_end_005e:	; new closure is in rax
 17555 0000A75C 48890425[88030000]      	mov qword [free_var_113], rax
 17556 0000A764 48B8-                   	mov rax, sob_void
 17556 0000A766 [0000000000000000] 
 17557                                  
 17558 0000A76E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17559 0000A773 E89E650000              	call malloc
 17560 0000A778 50                      	push rax
 17561 0000A779 BF08000000              	mov rdi, 8 * 1	; new rib
 17562 0000A77E E893650000              	call malloc
 17563 0000A783 50                      	push rax
 17564 0000A784 BF10000000              	mov rdi, 8 * 2	; extended env
 17565 0000A789 E888650000              	call malloc
 17566 0000A78E 488B7D10                	mov rdi, ENV
 17567 0000A792 BE00000000              	mov rsi, 0
 17568 0000A797 BA01000000              	mov rdx, 1
 17569                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
 17570 0000A79C 4883FE01                	cmp rsi, 1
 17571 0000A7A0 7410                    	je .L_lambda_simple_env_end_005f
 17572 0000A7A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17573 0000A7A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17574 0000A7AA 48FFC6                  	inc rsi
 17575 0000A7AD 48FFC2                  	inc rdx
 17576 0000A7B0 EBEA                    	jmp .L_lambda_simple_env_loop_005f
 17577                                  .L_lambda_simple_env_end_005f:
 17578 0000A7B2 5B                      	pop rbx
 17579 0000A7B3 BE00000000              	mov rsi, 0
 17580                                  .L_lambda_simple_params_loop_005f:	; copy params
 17581 0000A7B8 4883FE01                	cmp rsi, 1
 17582 0000A7BC 740E                    	je .L_lambda_simple_params_end_005f
 17583 0000A7BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17584 0000A7C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17585 0000A7C7 48FFC6                  	inc rsi
 17586 0000A7CA EBEC                    	jmp .L_lambda_simple_params_loop_005f
 17587                                  .L_lambda_simple_params_end_005f:
 17588 0000A7CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17589 0000A7CF 4889C3                  	mov rbx, rax
 17590 0000A7D2 58                      	pop rax
 17591 0000A7D3 C60005                  	mov byte [rax], T_closure
 17592 0000A7D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17593 0000A7DA 48C74009[E7A70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
 17594 0000A7E2 E90E010000              	jmp .L_lambda_simple_end_005f
 17595                                  .L_lambda_simple_code_005f:	; lambda-simple body
 17596 0000A7E7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17597 0000A7ED 740B                    	je .L_lambda_simple_arity_check_ok_00da
 17598 0000A7EF FF742410                	push qword [rsp + 8 * 2]
 17599 0000A7F3 6A01                    	push 1
 17600 0000A7F5 E9D5640000              	jmp L_error_incorrect_arity_simple
 17601                                  .L_lambda_simple_arity_check_ok_00da:
 17602 0000A7FA C8000000                	enter 0, 0
 17603 0000A7FE 48B8-                   	mov rax, qword (L_constants + 347)
 17603 0000A800 [5B01000000000000] 
 17604 0000A808 50                      	push rax
 17605 0000A809 488B4520                mov rax, qword [rbp + 32]
 17606 0000A80D 50                      	push rax
 17607 0000A80E 48B8-                   	mov rax, qword (L_constants + 345)
 17607 0000A810 [5901000000000000] 
 17608 0000A818 50                      	push rax
 17609 0000A819 6A03                    	push 3
 17610 0000A81B 488B0425[68030000]      	mov rax, qword [free_var_109]
 17611 0000A823 803805                  	cmp byte [rax], T_closure 
 17612 0000A826 0F8572740000                    jne L_code_ptr_error
 17613                                  
 17614 0000A82C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17615                                  
 17616 0000A830 53                              push rbx
 17617                                  
 17618 0000A831 FF5009                          call SOB_CLOSURE_CODE(rax)
 17619                                  
 17620 0000A834 483D[02000000]                  	cmp rax, sob_boolean_false
 17621 0000A83A 0F84AD000000            	je .L_if_else_0039
 17622 0000A840 488B4510                mov rax, qword [rbp + 16]
 17623 0000A844 488B00                  mov rax, qword [rax + 0]
 17624 0000A847 488B00                  mov rax, qword [rax + 0]
 17625 0000A84A 50                      	push rax
 17626 0000A84B 488B4520                mov rax, qword [rbp + 32]
 17627 0000A84F 50                      	push rax
 17628 0000A850 6A01                    	push 1
 17629 0000A852 488B0425[C0000000]      	mov rax, qword [free_var_24]
 17630 0000A85A 803805                  	cmp byte [rax], T_closure 
 17631 0000A85D 0F853B740000                    jne L_code_ptr_error
 17632                                  
 17633 0000A863 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17634                                  
 17635 0000A867 53                              push rbx
 17636                                  
 17637 0000A868 FF5009                          call SOB_CLOSURE_CODE(rax)
 17638                                  
 17639 0000A86B 50                              	push rax
 17640 0000A86C 6A02                    	push 2
 17641 0000A86E 488B0425[10030000]      	mov rax, qword [free_var_98]
 17642 0000A876 803805                  	cmp byte [rax], T_closure 
 17643 0000A879 0F851F740000                    jne L_code_ptr_error
 17644                                  
 17645 0000A87F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17646                                  
 17647 0000A883 53                              push rbx
 17648                                  
 17649 0000A884 FF5009                          call SOB_CLOSURE_CODE(rax)
 17650                                  
 17651 0000A887 50                              	push rax
 17652 0000A888 6A01                    	push 1
 17653 0000A88A 488B0425[C8000000]      	mov rax, qword [free_var_25]
 17654                                  .L_lambda_simple_arity_check_ok_00db:
 17655 0000A892 803805                  	cmp byte [rax], T_closure
 17656                                  
 17657 0000A895 0F8503740000                    jne L_code_ptr_error                      ; rax <- proc
 17658                                  
 17659                                  
 17660 0000A89B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17661                                  
 17662 0000A89F 53                              push rbx                                  ; env pushed
 17663                                  
 17664 0000A8A0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17665                                  
 17666                                  
 17667 0000A8A3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17668                                  
 17669                                          
 17670                                          
 17671 0000A8A6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17672                                  
 17673 0000A8AA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17674                                  
 17675                                  
 17676 0000A8AF 4D89CA                          mov r10, r9
 17677 0000A8B2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 17678                                  
 17679                                                                                         
 17680 0000A8B6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17681 0000A8B9 4983C404                        add r12, 4
 17682                                  
 17683 0000A8BD 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17684                                  .L_tc_recycle_frame_loop_007c:
 17685 0000A8C3 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 17686                                  
 17687 0000A8C7 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17688                                  
 17689                                  
 17690                                  
 17691 0000A8CC 41BE00000000                    mov r14, 0                                ; clean box
 17692                                  
 17693                                  
 17694                                                                  
 17695 0000A8D2 4983C2FF                        add r10, -1                               ; args_copied_counter--
 17696                                  
 17697 0000A8D6 4983C4FF                        add r12, -1 
 17698                                  
 17699 0000A8DA 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 17700 0000A8DE 75E3                    	jne .L_tc_recycle_frame_loop_007c
 17701                                  .L_tc_recycle_frame_done_007c:
 17702 0000A8E0 5D                      	pop rbp                                  ; restore the old rbp
 17703                                  
 17704 0000A8E1 488B4D00                        mov rcx, qword [rbp]
 17705 0000A8E5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 17706                                            ; rbx <- code(proc)
 17707                                  
 17708 0000A8E9 FFE3                            jmp rbx
 17709 0000A8EB EB04                    	jmp .L_if_end_0039
 17710                                  	.L_if_else_0039:
 17711 0000A8ED 488B4520                	mov rax, qword [rbp + 32]
 17712                                  	.L_if_end_0039:
 17713 0000A8F1 C9                      	leave
 17714 0000A8F2 C21800                  	ret 8 * (2 + 1)
 17715                                  .L_lambda_simple_end_005f:	; new closure is in rax
 17716 0000A8F5 48890425[90030000]      	mov qword [free_var_114], rax
 17717 0000A8FD 48B8-                   	mov rax, sob_void
 17717 0000A8FF [0000000000000000] 
 17718 0000A907 C9                      	leave
 17719 0000A908 C21800                  	ret 8 * (2 + 1)
 17720                                  .L_lambda_simple_end_005d:	; new closure is in rax
 17721 0000A90B 803805                  	cmp byte [rax], T_closure 
 17722 0000A90E 0F858A730000                    jne L_code_ptr_error
 17723                                  
 17724 0000A914 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17725                                  
 17726 0000A918 53                              push rbx
 17727                                  
 17728 0000A919 FF5009                          call SOB_CLOSURE_CODE(rax)
 17729                                  
 17730                                          
 17731 0000A91C 4889C7                  	mov rdi, rax
 17732 0000A91F E803640000              	call print_sexpr_if_not_void
 17733                                  
 17734 0000A924 48B8-                   	mov rax, qword (L_constants + 0)
 17734 0000A926 [0000000000000000] 
 17735 0000A92E 48890425[98030000]      	mov qword [free_var_115], rax
 17736 0000A936 48B8-                   	mov rax, sob_void
 17736 0000A938 [0000000000000000] 
 17737                                  
 17738 0000A940 4889C7                  	mov rdi, rax
 17739 0000A943 E8DF630000              	call print_sexpr_if_not_void
 17740                                  
 17741 0000A948 48B8-                   	mov rax, qword (L_constants + 0)
 17741 0000A94A [0000000000000000] 
 17742 0000A952 48890425[A0030000]      	mov qword [free_var_116], rax
 17743 0000A95A 48B8-                   	mov rax, sob_void
 17743 0000A95C [0000000000000000] 
 17744                                  
 17745 0000A964 4889C7                  	mov rdi, rax
 17746 0000A967 E8BB630000              	call print_sexpr_if_not_void
 17747                                  
 17748 0000A96C 48B8-                   	mov rax, qword (L_constants + 0)
 17748 0000A96E [0000000000000000] 
 17749 0000A976 48890425[A8030000]      	mov qword [free_var_117], rax
 17750 0000A97E 48B8-                   	mov rax, sob_void
 17750 0000A980 [0000000000000000] 
 17751                                  
 17752 0000A988 4889C7                  	mov rdi, rax
 17753 0000A98B E897630000              	call print_sexpr_if_not_void
 17754                                  
 17755 0000A990 48B8-                   	mov rax, qword (L_constants + 0)
 17755 0000A992 [0000000000000000] 
 17756 0000A99A 48890425[B0030000]      	mov qword [free_var_118], rax
 17757 0000A9A2 48B8-                   	mov rax, sob_void
 17757 0000A9A4 [0000000000000000] 
 17758                                  
 17759 0000A9AC 4889C7                  	mov rdi, rax
 17760 0000A9AF E873630000              	call print_sexpr_if_not_void
 17761                                  
 17762 0000A9B4 48B8-                   	mov rax, qword (L_constants + 0)
 17762 0000A9B6 [0000000000000000] 
 17763 0000A9BE 48890425[B8030000]      	mov qword [free_var_119], rax
 17764 0000A9C6 48B8-                   	mov rax, sob_void
 17764 0000A9C8 [0000000000000000] 
 17765                                  
 17766 0000A9D0 4889C7                  	mov rdi, rax
 17767 0000A9D3 E84F630000              	call print_sexpr_if_not_void
 17768                                  
 17769 0000A9D8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17770 0000A9DD E834630000              	call malloc
 17771 0000A9E2 50                      	push rax
 17772 0000A9E3 BF00000000              	mov rdi, 8 * 0	; new rib
 17773 0000A9E8 E829630000              	call malloc
 17774 0000A9ED 50                      	push rax
 17775 0000A9EE BF08000000              	mov rdi, 8 * 1	; extended env
 17776 0000A9F3 E81E630000              	call malloc
 17777 0000A9F8 488B7D10                	mov rdi, ENV
 17778 0000A9FC BE00000000              	mov rsi, 0
 17779 0000AA01 BA01000000              	mov rdx, 1
 17780                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
 17781 0000AA06 4883FE00                	cmp rsi, 0
 17782 0000AA0A 7410                    	je .L_lambda_simple_env_end_0060
 17783 0000AA0C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17784 0000AA10 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17785 0000AA14 48FFC6                  	inc rsi
 17786 0000AA17 48FFC2                  	inc rdx
 17787 0000AA1A EBEA                    	jmp .L_lambda_simple_env_loop_0060
 17788                                  .L_lambda_simple_env_end_0060:
 17789 0000AA1C 5B                      	pop rbx
 17790 0000AA1D BE00000000              	mov rsi, 0
 17791                                  .L_lambda_simple_params_loop_0060:	; copy params
 17792 0000AA22 4883FE00                	cmp rsi, 0
 17793 0000AA26 740E                    	je .L_lambda_simple_params_end_0060
 17794 0000AA28 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17795 0000AA2D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17796 0000AA31 48FFC6                  	inc rsi
 17797 0000AA34 EBEC                    	jmp .L_lambda_simple_params_loop_0060
 17798                                  .L_lambda_simple_params_end_0060:
 17799 0000AA36 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17800 0000AA39 4889C3                  	mov rbx, rax
 17801 0000AA3C 58                      	pop rax
 17802 0000AA3D C60005                  	mov byte [rax], T_closure
 17803 0000AA40 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17804 0000AA44 48C74009[51AA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
 17805 0000AA4C E9F0020000              	jmp .L_lambda_simple_end_0060
 17806                                  .L_lambda_simple_code_0060:	; lambda-simple body
 17807 0000AA51 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17808 0000AA57 740B                    	je .L_lambda_simple_arity_check_ok_00dc
 17809 0000AA59 FF742410                	push qword [rsp + 8 * 2]
 17810 0000AA5D 6A01                    	push 1
 17811 0000AA5F E96B620000              	jmp L_error_incorrect_arity_simple
 17812                                  .L_lambda_simple_arity_check_ok_00dc:
 17813 0000AA64 C8000000                	enter 0, 0
 17814 0000AA68 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17815 0000AA6D E8A4620000              	call malloc
 17816 0000AA72 50                      	push rax
 17817 0000AA73 BF08000000              	mov rdi, 8 * 1	; new rib
 17818 0000AA78 E899620000              	call malloc
 17819 0000AA7D 50                      	push rax
 17820 0000AA7E BF10000000              	mov rdi, 8 * 2	; extended env
 17821 0000AA83 E88E620000              	call malloc
 17822 0000AA88 488B7D10                	mov rdi, ENV
 17823 0000AA8C BE00000000              	mov rsi, 0
 17824 0000AA91 BA01000000              	mov rdx, 1
 17825                                  .L_lambda_opt_env_loop_0011:	; ext_env[i + 1] <-- env[i]
 17826 0000AA96 4883FE01                	cmp rsi, 1
 17827 0000AA9A 7410                    	je .L_lambda_opt_env_end_0011
 17828 0000AA9C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17829 0000AAA0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17830 0000AAA4 48FFC6                  	inc rsi
 17831 0000AAA7 48FFC2                  	inc rdx
 17832 0000AAAA EBEA                    	jmp .L_lambda_opt_env_loop_0011
 17833                                  .L_lambda_opt_env_end_0011:
 17834 0000AAAC 5B                      	pop rbx
 17835 0000AAAD BE00000000              	mov rsi, 0
 17836                                  .L_lambda_opt_params_loop_0021:	; copy params
 17837 0000AAB2 4883FE01                	cmp rsi, 1
 17838 0000AAB6 740E                    	je .L_lambda_opt_params_end_0021
 17839 0000AAB8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17840 0000AABD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17841 0000AAC1 48FFC6                  	inc rsi
 17842 0000AAC4 EBEC                    	jmp .L_lambda_opt_params_loop_0021
 17843                                  .L_lambda_opt_params_end_0021:
 17844 0000AAC6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17845 0000AAC9 4889C3                  	mov rbx, rax
 17846 0000AACC 58                      	pop rax
 17847 0000AACD C60005                  	mov byte [rax], T_closure
 17848 0000AAD0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17849 0000AAD4 48C74009[E1AA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0011
 17850 0000AADC E95C020000              	jmp .L_lambda_opt_end_0011
 17851                                  .L_lambda_opt_code_0011:
 17852 0000AAE1 4C8B542410              mov r10, qword [rsp+8*2]
 17853 0000AAE6 4983FA00                cmp r10, 0
 17854 0000AAEA 740B                    je .L_lambda_opt_arity_check_exact_0011
 17855 0000AAEC 4983FA00                cmp r10, 0
 17856 0000AAF0 7F41                    jg .L_lambda_opt_arity_check_more_0011
 17857 0000AAF2 E9EC610000              jmp L_error_incorrect_arity_opt
 17858                                  .L_lambda_opt_arity_check_exact_0011:
 17859 0000AAF7 4883EC08                sub rsp, 8
 17860 0000AAFB BA03000000              mov rdx, 3+0
 17861 0000AB00 4889E3                  mov qword rbx, rsp
 17862                                  .L_lambda_opt_params_loop_0022:
 17863 0000AB03 488B4B08                mov qword rcx, [rbx+8]
 17864 0000AB07 48890B                  mov qword [rbx], rcx
 17865 0000AB0A 48FFCA                  dec rdx
 17866 0000AB0D 4883C308                add rbx, 8
 17867 0000AB11 4883FA00                cmp rdx, 0
 17868 0000AB15 7402                    je .L_lambda_opt_params_end_0022
 17869 0000AB17 EBEA                    jmp .L_lambda_opt_params_loop_0022
 17870                                  .L_lambda_opt_params_end_0022:
 17871 0000AB19 49FFC2                  inc r10
 17872 0000AB1C 4C89542410              mov qword [rsp+8*2], r10
 17873 0000AB21 4983C202                add r10, 2
 17874 0000AB25 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 17875 0000AB2D 4C8B4D00                mov r9, [rbp]
 17876 0000AB31 EB52                    jmp .L_lambda_opt_stack_adjusted_0011
 17877                                  .L_lambda_opt_arity_check_more_0011:
 17878 0000AB33 48B8-                   mov rax, sob_nil
 17878 0000AB35 [0100000000000000] 
 17879 0000AB3D 4C8B542410              mov r10, [rsp+2*8]
 17880 0000AB42 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 17881 0000AB47 4983EA00                sub r10, 0
 17882                                  .L_lambda_opt_stack_shrink_loop_0011:
 17883 0000AB4B 4983FA00                cmp r10, 0
 17884 0000AB4F 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0011
 17885 0000AB51 4889C1                  mov rcx, rax
 17886 0000AB54 498B10                  mov rdx, [r8]
 17887 0000AB57 BF11000000              mov rdi, 17
 17888 0000AB5C E8B5610000              call malloc
 17889 0000AB61 C60021                  mov byte [rax], T_pair
 17890 0000AB64 48894809                mov SOB_PAIR_CDR(rax), rcx
 17891 0000AB68 48895001                mov SOB_PAIR_CAR(rax), rdx
 17892 0000AB6C 4983E808                sub r8, 8
 17893 0000AB70 49FFCA                  dec r10
 17894 0000AB73 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0011
 17895                                  .L_lambda_opt_stack_shrink_loop_exit_0011:
 17896 0000AB75 4889442418              mov [rsp+8*(2+1)], rax
 17897 0000AB7A 41BA01000000            mov r10, 1
 17898 0000AB80 4C89542410              mov [rsp+16], r10
 17899                                  .L_lambda_opt_stack_adjusted_0011:
 17900 0000AB85 4C8B4D00                mov r9, [rbp]
 17901 0000AB89 C8000000                enter 0, 0
 17902 0000AB8D 488B4520                mov rax, qword [rbp + 32]
 17903 0000AB91 50                      	push rax
 17904 0000AB92 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17905 0000AB97 E87A610000              	call malloc
 17906 0000AB9C 50                      	push rax
 17907 0000AB9D BF08000000              	mov rdi, 8 * 1	; new rib
 17908 0000ABA2 E86F610000              	call malloc
 17909 0000ABA7 50                      	push rax
 17910 0000ABA8 BF18000000              	mov rdi, 8 * 3	; extended env
 17911 0000ABAD E864610000              	call malloc
 17912 0000ABB2 488B7D10                	mov rdi, ENV
 17913 0000ABB6 BE00000000              	mov rsi, 0
 17914 0000ABBB BA01000000              	mov rdx, 1
 17915                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
 17916 0000ABC0 4883FE02                	cmp rsi, 2
 17917 0000ABC4 7410                    	je .L_lambda_simple_env_end_0061
 17918 0000ABC6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17919 0000ABCA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17920 0000ABCE 48FFC6                  	inc rsi
 17921 0000ABD1 48FFC2                  	inc rdx
 17922 0000ABD4 EBEA                    	jmp .L_lambda_simple_env_loop_0061
 17923                                  .L_lambda_simple_env_end_0061:
 17924 0000ABD6 5B                      	pop rbx
 17925 0000ABD7 BE00000000              	mov rsi, 0
 17926                                  .L_lambda_simple_params_loop_0061:	; copy params
 17927 0000ABDC 4883FE01                	cmp rsi, 1
 17928 0000ABE0 740E                    	je .L_lambda_simple_params_end_0061
 17929 0000ABE2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17930 0000ABE7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17931 0000ABEB 48FFC6                  	inc rsi
 17932 0000ABEE EBEC                    	jmp .L_lambda_simple_params_loop_0061
 17933                                  .L_lambda_simple_params_end_0061:
 17934 0000ABF0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17935 0000ABF3 4889C3                  	mov rbx, rax
 17936 0000ABF6 58                      	pop rax
 17937 0000ABF7 C60005                  	mov byte [rax], T_closure
 17938 0000ABFA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17939 0000ABFE 48C74009[0BAC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
 17940 0000AC06 E99F000000              	jmp .L_lambda_simple_end_0061
 17941                                  .L_lambda_simple_code_0061:	; lambda-simple body
 17942 0000AC0B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17943 0000AC11 740B                    	je .L_lambda_simple_arity_check_ok_00dd
 17944 0000AC13 FF742410                	push qword [rsp + 8 * 2]
 17945 0000AC17 6A01                    	push 1
 17946 0000AC19 E9B1600000              	jmp L_error_incorrect_arity_simple
 17947                                  .L_lambda_simple_arity_check_ok_00dd:
 17948 0000AC1E C8000000                	enter 0, 0
 17949 0000AC22 488B4520                mov rax, qword [rbp + 32]
 17950 0000AC26 50                      	push rax
 17951 0000AC27 6A01                    	push 1
 17952 0000AC29 488B0425[88030000]      	mov rax, qword [free_var_113]
 17953 0000AC31 803805                  	cmp byte [rax], T_closure 
 17954 0000AC34 0F8564700000                    jne L_code_ptr_error
 17955                                  
 17956 0000AC3A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 17957                                  
 17958 0000AC3E 53                              push rbx
 17959                                  
 17960 0000AC3F FF5009                          call SOB_CLOSURE_CODE(rax)
 17961                                  
 17962 0000AC42 50                              	push rax
 17963 0000AC43 6A01                    	push 1
 17964 0000AC45 488B0425[C0000000]      	mov rax, qword [free_var_24]
 17965                                  .L_lambda_simple_arity_check_ok_00de:
 17966 0000AC4D 803805                  	cmp byte [rax], T_closure
 17967                                  
 17968 0000AC50 0F8548700000                    jne L_code_ptr_error                      ; rax <- proc
 17969                                  
 17970                                  
 17971 0000AC56 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 17972                                  
 17973 0000AC5A 53                              push rbx                                  ; env pushed
 17974                                  
 17975 0000AC5B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 17976                                  
 17977                                  
 17978 0000AC5E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 17979                                  
 17980                                          
 17981                                          
 17982 0000AC61 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 17983                                  
 17984 0000AC65 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 17985                                  
 17986                                  
 17987 0000AC6A 4D89CA                          mov r10, r9
 17988 0000AC6D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 17989                                  
 17990                                                                                         
 17991 0000AC71 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 17992 0000AC74 4983C404                        add r12, 4
 17993                                  
 17994 0000AC78 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 17995                                  .L_tc_recycle_frame_loop_007d:
 17996 0000AC7E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 17997                                  
 17998 0000AC82 4E8974E500                      mov [rbp + (r12 * 8)], r14
 17999                                  
 18000                                  
 18001                                  
 18002 0000AC87 41BE00000000                    mov r14, 0                                ; clean box
 18003                                  
 18004                                  
 18005                                                                  
 18006 0000AC8D 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18007                                  
 18008 0000AC91 4983C4FF                        add r12, -1 
 18009                                  
 18010 0000AC95 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18011 0000AC99 75E3                    	jne .L_tc_recycle_frame_loop_007d
 18012                                  .L_tc_recycle_frame_done_007d:
 18013 0000AC9B 5D                      	pop rbp                                  ; restore the old rbp
 18014                                  
 18015 0000AC9C 488B4D00                        mov rcx, qword [rbp]
 18016 0000ACA0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18017                                            ; rbx <- code(proc)
 18018                                  
 18019 0000ACA4 FFE3                            jmp rbx
 18020 0000ACA6 C9                      	leave
 18021 0000ACA7 C21800                  	ret 8 * (2 + 1)
 18022                                  .L_lambda_simple_end_0061:	; new closure is in rax
 18023 0000ACAA 50                      	push rax
 18024 0000ACAB 6A02                    	push 2
 18025 0000ACAD 488B0425[D8020000]      	mov rax, qword [free_var_91]
 18026 0000ACB5 803805                  	cmp byte [rax], T_closure 
 18027 0000ACB8 0F85E06F0000                    jne L_code_ptr_error
 18028                                  
 18029 0000ACBE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18030                                  
 18031 0000ACC2 53                              push rbx
 18032                                  
 18033 0000ACC3 FF5009                          call SOB_CLOSURE_CODE(rax)
 18034                                  
 18035 0000ACC6 50                              	push rax
 18036 0000ACC7 488B4510                mov rax, qword [rbp + 16]
 18037 0000ACCB 488B00                  mov rax, qword [rax + 0]
 18038 0000ACCE 488B00                  mov rax, qword [rax + 0]
 18039 0000ACD1 50                      	push rax
 18040 0000ACD2 6A02                    	push 2
 18041 0000ACD4 488B0425[C8020000]      	mov rax, qword [free_var_89]
 18042                                  .L_lambda_simple_arity_check_ok_00df:
 18043 0000ACDC 803805                  	cmp byte [rax], T_closure
 18044                                  
 18045 0000ACDF 0F85B96F0000                    jne L_code_ptr_error                      ; rax <- proc
 18046                                  
 18047                                  
 18048 0000ACE5 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 18049                                  
 18050 0000ACE9 53                              push rbx                                  ; env pushed
 18051                                  
 18052 0000ACEA FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 18053                                  
 18054                                  
 18055 0000ACED FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 18056                                  
 18057                                          
 18058                                          
 18059 0000ACF0 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 18060                                  
 18061 0000ACF4 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 18062                                  
 18063                                  
 18064 0000ACF9 4D89CA                          mov r10, r9
 18065 0000ACFC 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 18066                                  
 18067                                                                                         
 18068 0000AD00 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 18069 0000AD03 4983C404                        add r12, 4
 18070                                  
 18071 0000AD07 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 18072                                  .L_tc_recycle_frame_loop_007e:
 18073 0000AD0D 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 18074                                  
 18075 0000AD11 4E8974E500                      mov [rbp + (r12 * 8)], r14
 18076                                  
 18077                                  
 18078                                  
 18079 0000AD16 41BE00000000                    mov r14, 0                                ; clean box
 18080                                  
 18081                                  
 18082                                                                  
 18083 0000AD1C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18084                                  
 18085 0000AD20 4983C4FF                        add r12, -1 
 18086                                  
 18087 0000AD24 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18088 0000AD28 75E3                    	jne .L_tc_recycle_frame_loop_007e
 18089                                  .L_tc_recycle_frame_done_007e:
 18090 0000AD2A 5D                      	pop rbp                                  ; restore the old rbp
 18091                                  
 18092 0000AD2B 488B4D00                        mov rcx, qword [rbp]
 18093 0000AD2F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18094                                            ; rbx <- code(proc)
 18095                                  
 18096 0000AD33 FFE3                            jmp rbx
 18097 0000AD35 C9                      leave
 18098 0000AD36 4C8B4D00                mov r9, [rbp]
 18099 0000AD3A C22000                  ret 8 * (3 + 1)
 18100                                  .L_lambda_opt_end_0011:	; new closure is in rax
 18101 0000AD3D C9                      	leave
 18102 0000AD3E C21800                  	ret 8 * (2 + 1)
 18103                                  .L_lambda_simple_end_0060:	; new closure is in rax
 18104 0000AD41 50                      	push rax
 18105 0000AD42 6A01                    	push 1
 18106 0000AD44 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18107 0000AD49 E8C85F0000              	call malloc
 18108 0000AD4E 50                      	push rax
 18109 0000AD4F BF00000000              	mov rdi, 8 * 0	; new rib
 18110 0000AD54 E8BD5F0000              	call malloc
 18111 0000AD59 50                      	push rax
 18112 0000AD5A BF08000000              	mov rdi, 8 * 1	; extended env
 18113 0000AD5F E8B25F0000              	call malloc
 18114 0000AD64 488B7D10                	mov rdi, ENV
 18115 0000AD68 BE00000000              	mov rsi, 0
 18116 0000AD6D BA01000000              	mov rdx, 1
 18117                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
 18118 0000AD72 4883FE00                	cmp rsi, 0
 18119 0000AD76 7410                    	je .L_lambda_simple_env_end_0062
 18120 0000AD78 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18121 0000AD7C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18122 0000AD80 48FFC6                  	inc rsi
 18123 0000AD83 48FFC2                  	inc rdx
 18124 0000AD86 EBEA                    	jmp .L_lambda_simple_env_loop_0062
 18125                                  .L_lambda_simple_env_end_0062:
 18126 0000AD88 5B                      	pop rbx
 18127 0000AD89 BE00000000              	mov rsi, 0
 18128                                  .L_lambda_simple_params_loop_0062:	; copy params
 18129 0000AD8E 4883FE00                	cmp rsi, 0
 18130 0000AD92 740E                    	je .L_lambda_simple_params_end_0062
 18131 0000AD94 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18132 0000AD99 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18133 0000AD9D 48FFC6                  	inc rsi
 18134 0000ADA0 EBEC                    	jmp .L_lambda_simple_params_loop_0062
 18135                                  .L_lambda_simple_params_end_0062:
 18136 0000ADA2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18137 0000ADA5 4889C3                  	mov rbx, rax
 18138 0000ADA8 58                      	pop rax
 18139 0000ADA9 C60005                  	mov byte [rax], T_closure
 18140 0000ADAC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18141 0000ADB0 48C74009[BDAD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
 18142 0000ADB8 E915010000              	jmp .L_lambda_simple_end_0062
 18143                                  .L_lambda_simple_code_0062:	; lambda-simple body
 18144 0000ADBD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18145 0000ADC3 740B                    	je .L_lambda_simple_arity_check_ok_00e0
 18146 0000ADC5 FF742410                	push qword [rsp + 8 * 2]
 18147 0000ADC9 6A01                    	push 1
 18148 0000ADCB E9FF5E0000              	jmp L_error_incorrect_arity_simple
 18149                                  .L_lambda_simple_arity_check_ok_00e0:
 18150 0000ADD0 C8000000                	enter 0, 0
 18151 0000ADD4 488B0425[30030000]      	mov rax, qword [free_var_102]
 18152 0000ADDC 50                      	push rax
 18153 0000ADDD 6A01                    	push 1
 18154 0000ADDF 488B4520                mov rax, qword [rbp + 32]
 18155 0000ADE3 803805                  	cmp byte [rax], T_closure 
 18156 0000ADE6 0F85B26E0000                    jne L_code_ptr_error
 18157                                  
 18158 0000ADEC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18159                                  
 18160 0000ADF0 53                              push rbx
 18161                                  
 18162 0000ADF1 FF5009                          call SOB_CLOSURE_CODE(rax)
 18163                                  
 18164 0000ADF4 48890425[98030000]              	mov qword [free_var_115], rax
 18165 0000ADFC 48B8-                   	mov rax, sob_void
 18165 0000ADFE [0000000000000000] 
 18166                                  
 18167 0000AE06 488B0425[38030000]      	mov rax, qword [free_var_103]
 18168 0000AE0E 50                      	push rax
 18169 0000AE0F 6A01                    	push 1
 18170 0000AE11 488B4520                mov rax, qword [rbp + 32]
 18171 0000AE15 803805                  	cmp byte [rax], T_closure 
 18172 0000AE18 0F85806E0000                    jne L_code_ptr_error
 18173                                  
 18174 0000AE1E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18175                                  
 18176 0000AE22 53                              push rbx
 18177                                  
 18178 0000AE23 FF5009                          call SOB_CLOSURE_CODE(rax)
 18179                                  
 18180 0000AE26 48890425[A0030000]              	mov qword [free_var_116], rax
 18181 0000AE2E 48B8-                   	mov rax, sob_void
 18181 0000AE30 [0000000000000000] 
 18182                                  
 18183 0000AE38 488B0425[50030000]      	mov rax, qword [free_var_106]
 18184 0000AE40 50                      	push rax
 18185 0000AE41 6A01                    	push 1
 18186 0000AE43 488B4520                mov rax, qword [rbp + 32]
 18187 0000AE47 803805                  	cmp byte [rax], T_closure 
 18188 0000AE4A 0F854E6E0000                    jne L_code_ptr_error
 18189                                  
 18190 0000AE50 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18191                                  
 18192 0000AE54 53                              push rbx
 18193                                  
 18194 0000AE55 FF5009                          call SOB_CLOSURE_CODE(rax)
 18195                                  
 18196 0000AE58 48890425[A8030000]              	mov qword [free_var_117], rax
 18197 0000AE60 48B8-                   	mov rax, sob_void
 18197 0000AE62 [0000000000000000] 
 18198                                  
 18199 0000AE6A 488B0425[40030000]      	mov rax, qword [free_var_104]
 18200 0000AE72 50                      	push rax
 18201 0000AE73 6A01                    	push 1
 18202 0000AE75 488B4520                mov rax, qword [rbp + 32]
 18203 0000AE79 803805                  	cmp byte [rax], T_closure 
 18204 0000AE7C 0F851C6E0000                    jne L_code_ptr_error
 18205                                  
 18206 0000AE82 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18207                                  
 18208 0000AE86 53                              push rbx
 18209                                  
 18210 0000AE87 FF5009                          call SOB_CLOSURE_CODE(rax)
 18211                                  
 18212 0000AE8A 48890425[B0030000]              	mov qword [free_var_118], rax
 18213 0000AE92 48B8-                   	mov rax, sob_void
 18213 0000AE94 [0000000000000000] 
 18214                                  
 18215 0000AE9C 488B0425[48030000]      	mov rax, qword [free_var_105]
 18216 0000AEA4 50                      	push rax
 18217 0000AEA5 6A01                    	push 1
 18218 0000AEA7 488B4520                mov rax, qword [rbp + 32]
 18219 0000AEAB 803805                  	cmp byte [rax], T_closure 
 18220 0000AEAE 0F85EA6D0000                    jne L_code_ptr_error
 18221                                  
 18222 0000AEB4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18223                                  
 18224 0000AEB8 53                              push rbx
 18225                                  
 18226 0000AEB9 FF5009                          call SOB_CLOSURE_CODE(rax)
 18227                                  
 18228 0000AEBC 48890425[B8030000]              	mov qword [free_var_119], rax
 18229 0000AEC4 48B8-                   	mov rax, sob_void
 18229 0000AEC6 [0000000000000000] 
 18230 0000AECE C9                      	leave
 18231 0000AECF C21800                  	ret 8 * (2 + 1)
 18232                                  .L_lambda_simple_end_0062:	; new closure is in rax
 18233 0000AED2 803805                  	cmp byte [rax], T_closure 
 18234 0000AED5 0F85C36D0000                    jne L_code_ptr_error
 18235                                  
 18236 0000AEDB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18237                                  
 18238 0000AEDF 53                              push rbx
 18239                                  
 18240 0000AEE0 FF5009                          call SOB_CLOSURE_CODE(rax)
 18241                                  
 18242                                          
 18243 0000AEE3 4889C7                  	mov rdi, rax
 18244 0000AEE6 E83C5E0000              	call print_sexpr_if_not_void
 18245                                  
 18246 0000AEEB 48B8-                   	mov rax, qword (L_constants + 0)
 18246 0000AEED [0000000000000000] 
 18247 0000AEF5 48890425[C0030000]      	mov qword [free_var_120], rax
 18248 0000AEFD 48B8-                   	mov rax, sob_void
 18248 0000AEFF [0000000000000000] 
 18249                                  
 18250 0000AF07 4889C7                  	mov rdi, rax
 18251 0000AF0A E8185E0000              	call print_sexpr_if_not_void
 18252                                  
 18253 0000AF0F 48B8-                   	mov rax, qword (L_constants + 0)
 18253 0000AF11 [0000000000000000] 
 18254 0000AF19 48890425[C8030000]      	mov qword [free_var_121], rax
 18255 0000AF21 48B8-                   	mov rax, sob_void
 18255 0000AF23 [0000000000000000] 
 18256                                  
 18257 0000AF2B 4889C7                  	mov rdi, rax
 18258 0000AF2E E8F45D0000              	call print_sexpr_if_not_void
 18259                                  
 18260 0000AF33 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18261 0000AF38 E8D95D0000              	call malloc
 18262 0000AF3D 50                      	push rax
 18263 0000AF3E BF00000000              	mov rdi, 8 * 0	; new rib
 18264 0000AF43 E8CE5D0000              	call malloc
 18265 0000AF48 50                      	push rax
 18266 0000AF49 BF08000000              	mov rdi, 8 * 1	; extended env
 18267 0000AF4E E8C35D0000              	call malloc
 18268 0000AF53 488B7D10                	mov rdi, ENV
 18269 0000AF57 BE00000000              	mov rsi, 0
 18270 0000AF5C BA01000000              	mov rdx, 1
 18271                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
 18272 0000AF61 4883FE00                	cmp rsi, 0
 18273 0000AF65 7410                    	je .L_lambda_simple_env_end_0063
 18274 0000AF67 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18275 0000AF6B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18276 0000AF6F 48FFC6                  	inc rsi
 18277 0000AF72 48FFC2                  	inc rdx
 18278 0000AF75 EBEA                    	jmp .L_lambda_simple_env_loop_0063
 18279                                  .L_lambda_simple_env_end_0063:
 18280 0000AF77 5B                      	pop rbx
 18281 0000AF78 BE00000000              	mov rsi, 0
 18282                                  .L_lambda_simple_params_loop_0063:	; copy params
 18283 0000AF7D 4883FE00                	cmp rsi, 0
 18284 0000AF81 740E                    	je .L_lambda_simple_params_end_0063
 18285 0000AF83 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18286 0000AF88 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18287 0000AF8C 48FFC6                  	inc rsi
 18288 0000AF8F EBEC                    	jmp .L_lambda_simple_params_loop_0063
 18289                                  .L_lambda_simple_params_end_0063:
 18290 0000AF91 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18291 0000AF94 4889C3                  	mov rbx, rax
 18292 0000AF97 58                      	pop rax
 18293 0000AF98 C60005                  	mov byte [rax], T_closure
 18294 0000AF9B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18295 0000AF9F 48C74009[ACAF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
 18296 0000AFA7 E95A010000              	jmp .L_lambda_simple_end_0063
 18297                                  .L_lambda_simple_code_0063:	; lambda-simple body
 18298 0000AFAC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18299 0000AFB2 740B                    	je .L_lambda_simple_arity_check_ok_00e1
 18300 0000AFB4 FF742410                	push qword [rsp + 8 * 2]
 18301 0000AFB8 6A01                    	push 1
 18302 0000AFBA E9105D0000              	jmp L_error_incorrect_arity_simple
 18303                                  .L_lambda_simple_arity_check_ok_00e1:
 18304 0000AFBF C8000000                	enter 0, 0
 18305 0000AFC3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18306 0000AFC8 E8495D0000              	call malloc
 18307 0000AFCD 50                      	push rax
 18308 0000AFCE BF08000000              	mov rdi, 8 * 1	; new rib
 18309 0000AFD3 E83E5D0000              	call malloc
 18310 0000AFD8 50                      	push rax
 18311 0000AFD9 BF10000000              	mov rdi, 8 * 2	; extended env
 18312 0000AFDE E8335D0000              	call malloc
 18313 0000AFE3 488B7D10                	mov rdi, ENV
 18314 0000AFE7 BE00000000              	mov rsi, 0
 18315 0000AFEC BA01000000              	mov rdx, 1
 18316                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
 18317 0000AFF1 4883FE01                	cmp rsi, 1
 18318 0000AFF5 7410                    	je .L_lambda_simple_env_end_0064
 18319 0000AFF7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18320 0000AFFB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18321 0000AFFF 48FFC6                  	inc rsi
 18322 0000B002 48FFC2                  	inc rdx
 18323 0000B005 EBEA                    	jmp .L_lambda_simple_env_loop_0064
 18324                                  .L_lambda_simple_env_end_0064:
 18325 0000B007 5B                      	pop rbx
 18326 0000B008 BE00000000              	mov rsi, 0
 18327                                  .L_lambda_simple_params_loop_0064:	; copy params
 18328 0000B00D 4883FE01                	cmp rsi, 1
 18329 0000B011 740E                    	je .L_lambda_simple_params_end_0064
 18330 0000B013 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18331 0000B018 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18332 0000B01C 48FFC6                  	inc rsi
 18333 0000B01F EBEC                    	jmp .L_lambda_simple_params_loop_0064
 18334                                  .L_lambda_simple_params_end_0064:
 18335 0000B021 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18336 0000B024 4889C3                  	mov rbx, rax
 18337 0000B027 58                      	pop rax
 18338 0000B028 C60005                  	mov byte [rax], T_closure
 18339 0000B02B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18340 0000B02F 48C74009[3CB00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
 18341 0000B037 E9C6000000              	jmp .L_lambda_simple_end_0064
 18342                                  .L_lambda_simple_code_0064:	; lambda-simple body
 18343 0000B03C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18344 0000B042 740B                    	je .L_lambda_simple_arity_check_ok_00e2
 18345 0000B044 FF742410                	push qword [rsp + 8 * 2]
 18346 0000B048 6A01                    	push 1
 18347 0000B04A E9805C0000              	jmp L_error_incorrect_arity_simple
 18348                                  .L_lambda_simple_arity_check_ok_00e2:
 18349 0000B04F C8000000                	enter 0, 0
 18350 0000B053 488B4520                mov rax, qword [rbp + 32]
 18351 0000B057 50                      	push rax
 18352 0000B058 6A01                    	push 1
 18353 0000B05A 488B0425[D8030000]      	mov rax, qword [free_var_123]
 18354 0000B062 803805                  	cmp byte [rax], T_closure 
 18355 0000B065 0F85336C0000                    jne L_code_ptr_error
 18356                                  
 18357 0000B06B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18358                                  
 18359 0000B06F 53                              push rbx
 18360                                  
 18361 0000B070 FF5009                          call SOB_CLOSURE_CODE(rax)
 18362                                  
 18363 0000B073 50                              	push rax
 18364 0000B074 488B4510                mov rax, qword [rbp + 16]
 18365 0000B078 488B00                  mov rax, qword [rax + 0]
 18366 0000B07B 488B00                  mov rax, qword [rax + 0]
 18367 0000B07E 50                      	push rax
 18368 0000B07F 6A02                    	push 2
 18369 0000B081 488B0425[D8020000]      	mov rax, qword [free_var_91]
 18370 0000B089 803805                  	cmp byte [rax], T_closure 
 18371 0000B08C 0F850C6C0000                    jne L_code_ptr_error
 18372                                  
 18373 0000B092 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18374                                  
 18375 0000B096 53                              push rbx
 18376                                  
 18377 0000B097 FF5009                          call SOB_CLOSURE_CODE(rax)
 18378                                  
 18379 0000B09A 50                              	push rax
 18380 0000B09B 6A01                    	push 1
 18381 0000B09D 488B0425[D0030000]      	mov rax, qword [free_var_122]
 18382                                  .L_lambda_simple_arity_check_ok_00e3:
 18383 0000B0A5 803805                  	cmp byte [rax], T_closure
 18384                                  
 18385 0000B0A8 0F85F06B0000                    jne L_code_ptr_error                      ; rax <- proc
 18386                                  
 18387                                  
 18388 0000B0AE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 18389                                  
 18390 0000B0B2 53                              push rbx                                  ; env pushed
 18391                                  
 18392 0000B0B3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 18393                                  
 18394                                  
 18395 0000B0B6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 18396                                  
 18397                                          
 18398                                          
 18399 0000B0B9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 18400                                  
 18401 0000B0BD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 18402                                  
 18403                                  
 18404 0000B0C2 4D89CA                          mov r10, r9
 18405 0000B0C5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 18406                                  
 18407                                                                                         
 18408 0000B0C9 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 18409 0000B0CC 4983C404                        add r12, 4
 18410                                  
 18411 0000B0D0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 18412                                  .L_tc_recycle_frame_loop_007f:
 18413 0000B0D6 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 18414                                  
 18415 0000B0DA 4E8974E500                      mov [rbp + (r12 * 8)], r14
 18416                                  
 18417                                  
 18418                                  
 18419 0000B0DF 41BE00000000                    mov r14, 0                                ; clean box
 18420                                  
 18421                                  
 18422                                                                  
 18423 0000B0E5 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18424                                  
 18425 0000B0E9 4983C4FF                        add r12, -1 
 18426                                  
 18427 0000B0ED 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18428 0000B0F1 75E3                    	jne .L_tc_recycle_frame_loop_007f
 18429                                  .L_tc_recycle_frame_done_007f:
 18430 0000B0F3 5D                      	pop rbp                                  ; restore the old rbp
 18431                                  
 18432 0000B0F4 488B4D00                        mov rcx, qword [rbp]
 18433 0000B0F8 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18434                                            ; rbx <- code(proc)
 18435                                  
 18436 0000B0FC FFE3                            jmp rbx
 18437 0000B0FE C9                      	leave
 18438 0000B0FF C21800                  	ret 8 * (2 + 1)
 18439                                  .L_lambda_simple_end_0064:	; new closure is in rax
 18440 0000B102 C9                      	leave
 18441 0000B103 C21800                  	ret 8 * (2 + 1)
 18442                                  .L_lambda_simple_end_0063:	; new closure is in rax
 18443 0000B106 50                      	push rax
 18444 0000B107 6A01                    	push 1
 18445 0000B109 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18446 0000B10E E8035C0000              	call malloc
 18447 0000B113 50                      	push rax
 18448 0000B114 BF00000000              	mov rdi, 8 * 0	; new rib
 18449 0000B119 E8F85B0000              	call malloc
 18450 0000B11E 50                      	push rax
 18451 0000B11F BF08000000              	mov rdi, 8 * 1	; extended env
 18452 0000B124 E8ED5B0000              	call malloc
 18453 0000B129 488B7D10                	mov rdi, ENV
 18454 0000B12D BE00000000              	mov rsi, 0
 18455 0000B132 BA01000000              	mov rdx, 1
 18456                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
 18457 0000B137 4883FE00                	cmp rsi, 0
 18458 0000B13B 7410                    	je .L_lambda_simple_env_end_0065
 18459 0000B13D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18460 0000B141 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18461 0000B145 48FFC6                  	inc rsi
 18462 0000B148 48FFC2                  	inc rdx
 18463 0000B14B EBEA                    	jmp .L_lambda_simple_env_loop_0065
 18464                                  .L_lambda_simple_env_end_0065:
 18465 0000B14D 5B                      	pop rbx
 18466 0000B14E BE00000000              	mov rsi, 0
 18467                                  .L_lambda_simple_params_loop_0065:	; copy params
 18468 0000B153 4883FE00                	cmp rsi, 0
 18469 0000B157 740E                    	je .L_lambda_simple_params_end_0065
 18470 0000B159 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18471 0000B15E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18472 0000B162 48FFC6                  	inc rsi
 18473 0000B165 EBEC                    	jmp .L_lambda_simple_params_loop_0065
 18474                                  .L_lambda_simple_params_end_0065:
 18475 0000B167 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18476 0000B16A 4889C3                  	mov rbx, rax
 18477 0000B16D 58                      	pop rax
 18478 0000B16E C60005                  	mov byte [rax], T_closure
 18479 0000B171 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18480 0000B175 48C74009[82B10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
 18481 0000B17D E97F000000              	jmp .L_lambda_simple_end_0065
 18482                                  .L_lambda_simple_code_0065:	; lambda-simple body
 18483 0000B182 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18484 0000B188 740B                    	je .L_lambda_simple_arity_check_ok_00e4
 18485 0000B18A FF742410                	push qword [rsp + 8 * 2]
 18486 0000B18E 6A01                    	push 1
 18487 0000B190 E93A5B0000              	jmp L_error_incorrect_arity_simple
 18488                                  .L_lambda_simple_arity_check_ok_00e4:
 18489 0000B195 C8000000                	enter 0, 0
 18490 0000B199 488B0425[88030000]      	mov rax, qword [free_var_113]
 18491 0000B1A1 50                      	push rax
 18492 0000B1A2 6A01                    	push 1
 18493 0000B1A4 488B4520                mov rax, qword [rbp + 32]
 18494 0000B1A8 803805                  	cmp byte [rax], T_closure 
 18495 0000B1AB 0F85ED6A0000                    jne L_code_ptr_error
 18496                                  
 18497 0000B1B1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18498                                  
 18499 0000B1B5 53                              push rbx
 18500                                  
 18501 0000B1B6 FF5009                          call SOB_CLOSURE_CODE(rax)
 18502                                  
 18503 0000B1B9 48890425[C0030000]              	mov qword [free_var_120], rax
 18504 0000B1C1 48B8-                   	mov rax, sob_void
 18504 0000B1C3 [0000000000000000] 
 18505                                  
 18506 0000B1CB 488B0425[90030000]      	mov rax, qword [free_var_114]
 18507 0000B1D3 50                      	push rax
 18508 0000B1D4 6A01                    	push 1
 18509 0000B1D6 488B4520                mov rax, qword [rbp + 32]
 18510 0000B1DA 803805                  	cmp byte [rax], T_closure 
 18511 0000B1DD 0F85BB6A0000                    jne L_code_ptr_error
 18512                                  
 18513 0000B1E3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18514                                  
 18515 0000B1E7 53                              push rbx
 18516                                  
 18517 0000B1E8 FF5009                          call SOB_CLOSURE_CODE(rax)
 18518                                  
 18519 0000B1EB 48890425[C8030000]              	mov qword [free_var_121], rax
 18520 0000B1F3 48B8-                   	mov rax, sob_void
 18520 0000B1F5 [0000000000000000] 
 18521 0000B1FD C9                      	leave
 18522 0000B1FE C21800                  	ret 8 * (2 + 1)
 18523                                  .L_lambda_simple_end_0065:	; new closure is in rax
 18524 0000B201 803805                  	cmp byte [rax], T_closure 
 18525 0000B204 0F85946A0000                    jne L_code_ptr_error
 18526                                  
 18527 0000B20A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18528                                  
 18529 0000B20E 53                              push rbx
 18530                                  
 18531 0000B20F FF5009                          call SOB_CLOSURE_CODE(rax)
 18532                                  
 18533                                          
 18534 0000B212 4889C7                  	mov rdi, rax
 18535 0000B215 E80D5B0000              	call print_sexpr_if_not_void
 18536                                  
 18537 0000B21A 48B8-                   	mov rax, qword (L_constants + 0)
 18537 0000B21C [0000000000000000] 
 18538 0000B224 48890425[E0030000]      	mov qword [free_var_124], rax
 18539 0000B22C 48B8-                   	mov rax, sob_void
 18539 0000B22E [0000000000000000] 
 18540                                  
 18541 0000B236 4889C7                  	mov rdi, rax
 18542 0000B239 E8E95A0000              	call print_sexpr_if_not_void
 18543                                  
 18544 0000B23E 48B8-                   	mov rax, qword (L_constants + 0)
 18544 0000B240 [0000000000000000] 
 18545 0000B248 48890425[E8030000]      	mov qword [free_var_125], rax
 18546 0000B250 48B8-                   	mov rax, sob_void
 18546 0000B252 [0000000000000000] 
 18547                                  
 18548 0000B25A 4889C7                  	mov rdi, rax
 18549 0000B25D E8C55A0000              	call print_sexpr_if_not_void
 18550                                  
 18551 0000B262 48B8-                   	mov rax, qword (L_constants + 0)
 18551 0000B264 [0000000000000000] 
 18552 0000B26C 48890425[F0030000]      	mov qword [free_var_126], rax
 18553 0000B274 48B8-                   	mov rax, sob_void
 18553 0000B276 [0000000000000000] 
 18554                                  
 18555 0000B27E 4889C7                  	mov rdi, rax
 18556 0000B281 E8A15A0000              	call print_sexpr_if_not_void
 18557                                  
 18558 0000B286 48B8-                   	mov rax, qword (L_constants + 0)
 18558 0000B288 [0000000000000000] 
 18559 0000B290 48890425[F8030000]      	mov qword [free_var_127], rax
 18560 0000B298 48B8-                   	mov rax, sob_void
 18560 0000B29A [0000000000000000] 
 18561                                  
 18562 0000B2A2 4889C7                  	mov rdi, rax
 18563 0000B2A5 E87D5A0000              	call print_sexpr_if_not_void
 18564                                  
 18565 0000B2AA 48B8-                   	mov rax, qword (L_constants + 0)
 18565 0000B2AC [0000000000000000] 
 18566 0000B2B4 48890425[00040000]      	mov qword [free_var_128], rax
 18567 0000B2BC 48B8-                   	mov rax, sob_void
 18567 0000B2BE [0000000000000000] 
 18568                                  
 18569 0000B2C6 4889C7                  	mov rdi, rax
 18570 0000B2C9 E8595A0000              	call print_sexpr_if_not_void
 18571                                  
 18572 0000B2CE 48B8-                   	mov rax, qword (L_constants + 0)
 18572 0000B2D0 [0000000000000000] 
 18573 0000B2D8 48890425[08040000]      	mov qword [free_var_129], rax
 18574 0000B2E0 48B8-                   	mov rax, sob_void
 18574 0000B2E2 [0000000000000000] 
 18575                                  
 18576 0000B2EA 4889C7                  	mov rdi, rax
 18577 0000B2ED E8355A0000              	call print_sexpr_if_not_void
 18578                                  
 18579 0000B2F2 48B8-                   	mov rax, qword (L_constants + 0)
 18579 0000B2F4 [0000000000000000] 
 18580 0000B2FC 48890425[10040000]      	mov qword [free_var_130], rax
 18581 0000B304 48B8-                   	mov rax, sob_void
 18581 0000B306 [0000000000000000] 
 18582                                  
 18583 0000B30E 4889C7                  	mov rdi, rax
 18584 0000B311 E8115A0000              	call print_sexpr_if_not_void
 18585                                  
 18586 0000B316 48B8-                   	mov rax, qword (L_constants + 0)
 18586 0000B318 [0000000000000000] 
 18587 0000B320 48890425[18040000]      	mov qword [free_var_131], rax
 18588 0000B328 48B8-                   	mov rax, sob_void
 18588 0000B32A [0000000000000000] 
 18589                                  
 18590 0000B332 4889C7                  	mov rdi, rax
 18591 0000B335 E8ED590000              	call print_sexpr_if_not_void
 18592                                  
 18593 0000B33A 48B8-                   	mov rax, qword (L_constants + 0)
 18593 0000B33C [0000000000000000] 
 18594 0000B344 48890425[20040000]      	mov qword [free_var_132], rax
 18595 0000B34C 48B8-                   	mov rax, sob_void
 18595 0000B34E [0000000000000000] 
 18596                                  
 18597 0000B356 4889C7                  	mov rdi, rax
 18598 0000B359 E8C9590000              	call print_sexpr_if_not_void
 18599                                  
 18600 0000B35E 48B8-                   	mov rax, qword (L_constants + 0)
 18600 0000B360 [0000000000000000] 
 18601 0000B368 48890425[28040000]      	mov qword [free_var_133], rax
 18602 0000B370 48B8-                   	mov rax, sob_void
 18602 0000B372 [0000000000000000] 
 18603                                  
 18604 0000B37A 4889C7                  	mov rdi, rax
 18605 0000B37D E8A5590000              	call print_sexpr_if_not_void
 18606                                  
 18607 0000B382 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18608 0000B387 E88A590000              	call malloc
 18609 0000B38C 50                      	push rax
 18610 0000B38D BF00000000              	mov rdi, 8 * 0	; new rib
 18611 0000B392 E87F590000              	call malloc
 18612 0000B397 50                      	push rax
 18613 0000B398 BF08000000              	mov rdi, 8 * 1	; extended env
 18614 0000B39D E874590000              	call malloc
 18615 0000B3A2 488B7D10                	mov rdi, ENV
 18616 0000B3A6 BE00000000              	mov rsi, 0
 18617 0000B3AB BA01000000              	mov rdx, 1
 18618                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
 18619 0000B3B0 4883FE00                	cmp rsi, 0
 18620 0000B3B4 7410                    	je .L_lambda_simple_env_end_0066
 18621 0000B3B6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18622 0000B3BA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18623 0000B3BE 48FFC6                  	inc rsi
 18624 0000B3C1 48FFC2                  	inc rdx
 18625 0000B3C4 EBEA                    	jmp .L_lambda_simple_env_loop_0066
 18626                                  .L_lambda_simple_env_end_0066:
 18627 0000B3C6 5B                      	pop rbx
 18628 0000B3C7 BE00000000              	mov rsi, 0
 18629                                  .L_lambda_simple_params_loop_0066:	; copy params
 18630 0000B3CC 4883FE00                	cmp rsi, 0
 18631 0000B3D0 740E                    	je .L_lambda_simple_params_end_0066
 18632 0000B3D2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18633 0000B3D7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18634 0000B3DB 48FFC6                  	inc rsi
 18635 0000B3DE EBEC                    	jmp .L_lambda_simple_params_loop_0066
 18636                                  .L_lambda_simple_params_end_0066:
 18637 0000B3E0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18638 0000B3E3 4889C3                  	mov rbx, rax
 18639 0000B3E6 58                      	pop rax
 18640 0000B3E7 C60005                  	mov byte [rax], T_closure
 18641 0000B3EA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18642 0000B3EE 48C74009[FBB30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
 18643 0000B3F6 E9D10C0000              	jmp .L_lambda_simple_end_0066
 18644                                  .L_lambda_simple_code_0066:	; lambda-simple body
 18645 0000B3FB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18646 0000B401 740B                    	je .L_lambda_simple_arity_check_ok_00e5
 18647 0000B403 FF742410                	push qword [rsp + 8 * 2]
 18648 0000B407 6A02                    	push 2
 18649 0000B409 E9C1580000              	jmp L_error_incorrect_arity_simple
 18650                                  .L_lambda_simple_arity_check_ok_00e5:
 18651 0000B40E C8000000                	enter 0, 0
 18652 0000B412 48B8-                   	mov rax, qword (L_constants + 22)
 18652 0000B414 [1600000000000000] 
 18653 0000B41C 50                      	push rax
 18654 0000B41D 6A01                    	push 1
 18655 0000B41F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18656 0000B424 E8ED580000              	call malloc
 18657 0000B429 50                      	push rax
 18658 0000B42A BF10000000              	mov rdi, 8 * 2	; new rib
 18659 0000B42F E8E2580000              	call malloc
 18660 0000B434 50                      	push rax
 18661 0000B435 BF10000000              	mov rdi, 8 * 2	; extended env
 18662 0000B43A E8D7580000              	call malloc
 18663 0000B43F 488B7D10                	mov rdi, ENV
 18664 0000B443 BE00000000              	mov rsi, 0
 18665 0000B448 BA01000000              	mov rdx, 1
 18666                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
 18667 0000B44D 4883FE01                	cmp rsi, 1
 18668 0000B451 7410                    	je .L_lambda_simple_env_end_0067
 18669 0000B453 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18670 0000B457 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18671 0000B45B 48FFC6                  	inc rsi
 18672 0000B45E 48FFC2                  	inc rdx
 18673 0000B461 EBEA                    	jmp .L_lambda_simple_env_loop_0067
 18674                                  .L_lambda_simple_env_end_0067:
 18675 0000B463 5B                      	pop rbx
 18676 0000B464 BE00000000              	mov rsi, 0
 18677                                  .L_lambda_simple_params_loop_0067:	; copy params
 18678 0000B469 4883FE02                	cmp rsi, 2
 18679 0000B46D 740E                    	je .L_lambda_simple_params_end_0067
 18680 0000B46F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18681 0000B474 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18682 0000B478 48FFC6                  	inc rsi
 18683 0000B47B EBEC                    	jmp .L_lambda_simple_params_loop_0067
 18684                                  .L_lambda_simple_params_end_0067:
 18685 0000B47D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18686 0000B480 4889C3                  	mov rbx, rax
 18687 0000B483 58                      	pop rax
 18688 0000B484 C60005                  	mov byte [rax], T_closure
 18689 0000B487 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18690 0000B48B 48C74009[98B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
 18691 0000B493 E9D70B0000              	jmp .L_lambda_simple_end_0067
 18692                                  .L_lambda_simple_code_0067:	; lambda-simple body
 18693 0000B498 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18694 0000B49E 740B                    	je .L_lambda_simple_arity_check_ok_00e6
 18695 0000B4A0 FF742410                	push qword [rsp + 8 * 2]
 18696 0000B4A4 6A01                    	push 1
 18697 0000B4A6 E924580000              	jmp L_error_incorrect_arity_simple
 18698                                  .L_lambda_simple_arity_check_ok_00e6:
 18699 0000B4AB C8000000                	enter 0, 0
 18700 0000B4AF BF08000000              mov rdi, 8
 18701 0000B4B4 E85D580000              call malloc
 18702 0000B4B9 4889C3                  mov rbx, rax
 18703 0000B4BC 488B4520                mov rax, qword [rbp + 32]
 18704 0000B4C0 488903                  mov qword [rbx], rax
 18705 0000B4C3 4889D8                  mov rax, rbx
 18706 0000B4C6 48894520                mov qword [rbp + 32], rax
 18707 0000B4CA 48B8-                   mov rax, sob_void
 18707 0000B4CC [0000000000000000] 
 18708 0000B4D4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18709 0000B4D9 E838580000              	call malloc
 18710 0000B4DE 50                      	push rax
 18711 0000B4DF BF08000000              	mov rdi, 8 * 1	; new rib
 18712 0000B4E4 E82D580000              	call malloc
 18713 0000B4E9 50                      	push rax
 18714 0000B4EA BF18000000              	mov rdi, 8 * 3	; extended env
 18715 0000B4EF E822580000              	call malloc
 18716 0000B4F4 488B7D10                	mov rdi, ENV
 18717 0000B4F8 BE00000000              	mov rsi, 0
 18718 0000B4FD BA01000000              	mov rdx, 1
 18719                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
 18720 0000B502 4883FE02                	cmp rsi, 2
 18721 0000B506 7410                    	je .L_lambda_simple_env_end_0068
 18722 0000B508 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18723 0000B50C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18724 0000B510 48FFC6                  	inc rsi
 18725 0000B513 48FFC2                  	inc rdx
 18726 0000B516 EBEA                    	jmp .L_lambda_simple_env_loop_0068
 18727                                  .L_lambda_simple_env_end_0068:
 18728 0000B518 5B                      	pop rbx
 18729 0000B519 BE00000000              	mov rsi, 0
 18730                                  .L_lambda_simple_params_loop_0068:	; copy params
 18731 0000B51E 4883FE01                	cmp rsi, 1
 18732 0000B522 740E                    	je .L_lambda_simple_params_end_0068
 18733 0000B524 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18734 0000B529 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18735 0000B52D 48FFC6                  	inc rsi
 18736 0000B530 EBEC                    	jmp .L_lambda_simple_params_loop_0068
 18737                                  .L_lambda_simple_params_end_0068:
 18738 0000B532 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18739 0000B535 4889C3                  	mov rbx, rax
 18740 0000B538 58                      	pop rax
 18741 0000B539 C60005                  	mov byte [rax], T_closure
 18742 0000B53C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18743 0000B540 48C74009[4DB50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
 18744 0000B548 E963020000              	jmp .L_lambda_simple_end_0068
 18745                                  .L_lambda_simple_code_0068:	; lambda-simple body
 18746 0000B54D 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18747 0000B553 740B                    	je .L_lambda_simple_arity_check_ok_00e7
 18748 0000B555 FF742410                	push qword [rsp + 8 * 2]
 18749 0000B559 6A05                    	push 5
 18750 0000B55B E96F570000              	jmp L_error_incorrect_arity_simple
 18751                                  .L_lambda_simple_arity_check_ok_00e7:
 18752 0000B560 C8000000                	enter 0, 0
 18753 0000B564 488B4530                mov rax, qword [rbp + 48]
 18754 0000B568 50                      	push rax
 18755 0000B569 488B4520                mov rax, qword [rbp + 32]
 18756 0000B56D 50                      	push rax
 18757 0000B56E 6A02                    	push 2
 18758 0000B570 488B0425[50030000]      	mov rax, qword [free_var_106]
 18759 0000B578 803805                  	cmp byte [rax], T_closure 
 18760 0000B57B 0F851D670000                    jne L_code_ptr_error
 18761                                  
 18762 0000B581 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18763                                  
 18764 0000B585 53                              push rbx
 18765                                  
 18766 0000B586 FF5009                          call SOB_CLOSURE_CODE(rax)
 18767                                  
 18768 0000B589 483D[02000000]                  	cmp rax, sob_boolean_false
 18769 0000B58F 7427                    	je .L_if_else_003a
 18770 0000B591 488B4540                mov rax, qword [rbp + 64]
 18771 0000B595 50                      	push rax
 18772 0000B596 488B4530                mov rax, qword [rbp + 48]
 18773 0000B59A 50                      	push rax
 18774 0000B59B 6A02                    	push 2
 18775 0000B59D 488B0425[30030000]      	mov rax, qword [free_var_102]
 18776 0000B5A5 803805                  	cmp byte [rax], T_closure 
 18777 0000B5A8 0F85F0660000                    jne L_code_ptr_error
 18778                                  
 18779 0000B5AE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18780                                  
 18781 0000B5B2 53                              push rbx
 18782                                  
 18783 0000B5B3 FF5009                          call SOB_CLOSURE_CODE(rax)
 18784                                  
 18785 0000B5B6 EB0A                            	jmp .L_if_end_003a
 18786                                  	.L_if_else_003a:
 18787 0000B5B8 48B8-                   		mov rax, qword (L_constants + 2)
 18787 0000B5BA [0200000000000000] 
 18788                                  	.L_if_end_003a:
 18789 0000B5C2 483D[02000000]          	cmp rax, sob_boolean_false
 18790 0000B5C8 0F85DE010000            	jne .L_or_end_0005
 18791 0000B5CE 488B4530                mov rax, qword [rbp + 48]
 18792 0000B5D2 50                      	push rax
 18793 0000B5D3 488B4520                mov rax, qword [rbp + 32]
 18794 0000B5D7 50                      	push rax
 18795 0000B5D8 6A02                    	push 2
 18796 0000B5DA 488B0425[30030000]      	mov rax, qword [free_var_102]
 18797 0000B5E2 803805                  	cmp byte [rax], T_closure 
 18798 0000B5E5 0F85B3660000                    jne L_code_ptr_error
 18799                                  
 18800 0000B5EB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18801                                  
 18802 0000B5EF 53                              push rbx
 18803                                  
 18804 0000B5F0 FF5009                          call SOB_CLOSURE_CODE(rax)
 18805                                  
 18806 0000B5F3 483D[02000000]                  	cmp rax, sob_boolean_false
 18807 0000B5F9 0F84A3010000            	je .L_if_else_003b
 18808 0000B5FF 488B4520                mov rax, qword [rbp + 32]
 18809 0000B603 50                      	push rax
 18810 0000B604 488B4538                mov rax, qword [rbp + 56]
 18811 0000B608 50                      	push rax
 18812 0000B609 6A02                    	push 2
 18813 0000B60B 488B0425[78010000]      	mov rax, qword [free_var_47]
 18814 0000B613 803805                  	cmp byte [rax], T_closure 
 18815 0000B616 0F8582660000                    jne L_code_ptr_error
 18816                                  
 18817 0000B61C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18818                                  
 18819 0000B620 53                              push rbx
 18820                                  
 18821 0000B621 FF5009                          call SOB_CLOSURE_CODE(rax)
 18822                                  
 18823 0000B624 50                              	push rax
 18824 0000B625 488B4520                mov rax, qword [rbp + 32]
 18825 0000B629 50                      	push rax
 18826 0000B62A 488B4528                mov rax, qword [rbp + 40]
 18827 0000B62E 50                      	push rax
 18828 0000B62F 6A02                    	push 2
 18829 0000B631 488B0425[78010000]      	mov rax, qword [free_var_47]
 18830 0000B639 803805                  	cmp byte [rax], T_closure 
 18831 0000B63C 0F855C660000                    jne L_code_ptr_error
 18832                                  
 18833 0000B642 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18834                                  
 18835 0000B646 53                              push rbx
 18836                                  
 18837 0000B647 FF5009                          call SOB_CLOSURE_CODE(rax)
 18838                                  
 18839 0000B64A 50                              	push rax
 18840 0000B64B 6A02                    	push 2
 18841 0000B64D 488B4510                mov rax, qword [rbp + 16]
 18842 0000B651 488B4008                mov rax, qword [rax + 8]
 18843 0000B655 488B00                  mov rax, qword [rax + 0]
 18844 0000B658 803805                  	cmp byte [rax], T_closure 
 18845 0000B65B 0F853D660000                    jne L_code_ptr_error
 18846                                  
 18847 0000B661 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18848                                  
 18849 0000B665 53                              push rbx
 18850                                  
 18851 0000B666 FF5009                          call SOB_CLOSURE_CODE(rax)
 18852                                  
 18853 0000B669 483D[02000000]                  	cmp rax, sob_boolean_false
 18854 0000B66F 0F852B010000            	jne .L_or_end_0006
 18855 0000B675 488B4520                mov rax, qword [rbp + 32]
 18856 0000B679 50                      	push rax
 18857 0000B67A 488B4538                mov rax, qword [rbp + 56]
 18858 0000B67E 50                      	push rax
 18859 0000B67F 6A02                    	push 2
 18860 0000B681 488B0425[78010000]      	mov rax, qword [free_var_47]
 18861 0000B689 803805                  	cmp byte [rax], T_closure 
 18862 0000B68C 0F850C660000                    jne L_code_ptr_error
 18863                                  
 18864 0000B692 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18865                                  
 18866 0000B696 53                              push rbx
 18867                                  
 18868 0000B697 FF5009                          call SOB_CLOSURE_CODE(rax)
 18869                                  
 18870 0000B69A 50                              	push rax
 18871 0000B69B 488B4520                mov rax, qword [rbp + 32]
 18872 0000B69F 50                      	push rax
 18873 0000B6A0 488B4528                mov rax, qword [rbp + 40]
 18874 0000B6A4 50                      	push rax
 18875 0000B6A5 6A02                    	push 2
 18876 0000B6A7 488B0425[78010000]      	mov rax, qword [free_var_47]
 18877 0000B6AF 803805                  	cmp byte [rax], T_closure 
 18878 0000B6B2 0F85E6650000                    jne L_code_ptr_error
 18879                                  
 18880 0000B6B8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18881                                  
 18882 0000B6BC 53                              push rbx
 18883                                  
 18884 0000B6BD FF5009                          call SOB_CLOSURE_CODE(rax)
 18885                                  
 18886 0000B6C0 50                              	push rax
 18887 0000B6C1 6A02                    	push 2
 18888 0000B6C3 488B4510                mov rax, qword [rbp + 16]
 18889 0000B6C7 488B4008                mov rax, qword [rax + 8]
 18890 0000B6CB 488B4008                mov rax, qword [rax + 8]
 18891 0000B6CF 803805                  	cmp byte [rax], T_closure 
 18892 0000B6D2 0F85C6650000                    jne L_code_ptr_error
 18893                                  
 18894 0000B6D8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18895                                  
 18896 0000B6DC 53                              push rbx
 18897                                  
 18898 0000B6DD FF5009                          call SOB_CLOSURE_CODE(rax)
 18899                                  
 18900 0000B6E0 483D[02000000]                  	cmp rax, sob_boolean_false
 18901 0000B6E6 0F84AA000000            	je .L_if_else_003c
 18902 0000B6EC 488B4540                mov rax, qword [rbp + 64]
 18903 0000B6F0 50                      	push rax
 18904 0000B6F1 488B4538                mov rax, qword [rbp + 56]
 18905 0000B6F5 50                      	push rax
 18906 0000B6F6 488B4530                mov rax, qword [rbp + 48]
 18907 0000B6FA 50                      	push rax
 18908 0000B6FB 488B4528                mov rax, qword [rbp + 40]
 18909 0000B6FF 50                      	push rax
 18910 0000B700 48B8-                   	mov rax, qword (L_constants + 127)
 18910 0000B702 [7F00000000000000] 
 18911 0000B70A 50                      	push rax
 18912 0000B70B 488B4520                mov rax, qword [rbp + 32]
 18913 0000B70F 50                      	push rax
 18914 0000B710 6A02                    	push 2
 18915 0000B712 488B0425[08030000]      	mov rax, qword [free_var_97]
 18916 0000B71A 803805                  	cmp byte [rax], T_closure 
 18917 0000B71D 0F857B650000                    jne L_code_ptr_error
 18918                                  
 18919 0000B723 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 18920                                  
 18921 0000B727 53                              push rbx
 18922                                  
 18923 0000B728 FF5009                          call SOB_CLOSURE_CODE(rax)
 18924                                  
 18925 0000B72B 50                              	push rax
 18926 0000B72C 6A05                    	push 5
 18927 0000B72E 488B4510                mov rax, qword [rbp + 16]
 18928 0000B732 488B00                  mov rax, qword [rax + 0]
 18929 0000B735 488B00                  mov rax, qword [rax + 0]
 18930 0000B738 488B00                  	mov rax, qword [rax]
 18931                                  .L_lambda_simple_arity_check_ok_00e8:
 18932 0000B73B 803805                  	cmp byte [rax], T_closure
 18933                                  
 18934 0000B73E 0F855A650000                    jne L_code_ptr_error                      ; rax <- proc
 18935                                  
 18936                                  
 18937 0000B744 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 18938                                  
 18939 0000B748 53                              push rbx                                  ; env pushed
 18940                                  
 18941 0000B749 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 18942                                  
 18943                                  
 18944 0000B74C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 18945                                  
 18946                                          
 18947                                          
 18948 0000B74F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 18949                                  
 18950 0000B753 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 18951                                  
 18952                                  
 18953 0000B758 4D89CA                          mov r10, r9
 18954 0000B75B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 18955                                  
 18956                                                                                         
 18957 0000B75F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 18958 0000B762 4983C404                        add r12, 4
 18959                                  
 18960 0000B766 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 18961                                  .L_tc_recycle_frame_loop_0080:
 18962 0000B76C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 18963                                  
 18964 0000B770 4E8974E500                      mov [rbp + (r12 * 8)], r14
 18965                                  
 18966                                  
 18967                                  
 18968 0000B775 41BE00000000                    mov r14, 0                                ; clean box
 18969                                  
 18970                                  
 18971                                                                  
 18972 0000B77B 4983C2FF                        add r10, -1                               ; args_copied_counter--
 18973                                  
 18974 0000B77F 4983C4FF                        add r12, -1 
 18975                                  
 18976 0000B783 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 18977 0000B787 75E3                    	jne .L_tc_recycle_frame_loop_0080
 18978                                  .L_tc_recycle_frame_done_0080:
 18979 0000B789 5D                      	pop rbp                                  ; restore the old rbp
 18980                                  
 18981 0000B78A 488B4D00                        mov rcx, qword [rbp]
 18982 0000B78E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 18983                                            ; rbx <- code(proc)
 18984                                  
 18985 0000B792 FFE3                            jmp rbx
 18986 0000B794 EB0A                    	jmp .L_if_end_003c
 18987                                  	.L_if_else_003c:
 18988 0000B796 48B8-                   		mov rax, qword (L_constants + 2)
 18988 0000B798 [0200000000000000] 
 18989                                  	.L_if_end_003c:
 18990                                  .L_or_end_0006:
 18991 0000B7A0 EB0A                    	jmp .L_if_end_003b
 18992                                  	.L_if_else_003b:
 18993 0000B7A2 48B8-                   		mov rax, qword (L_constants + 2)
 18993 0000B7A4 [0200000000000000] 
 18994                                  	.L_if_end_003b:
 18995                                  .L_or_end_0005:
 18996 0000B7AC C9                      	leave
 18997 0000B7AD C23800                  	ret 8 * (2 + 5)
 18998                                  .L_lambda_simple_end_0068:	; new closure is in rax
 18999 0000B7B0 50                      push rax
 19000 0000B7B1 488B4520                mov rax, qword [rbp + 32]
 19001 0000B7B5 8F00                    pop qword [rax]
 19002 0000B7B7 48B8-                   mov rax, sob_void
 19002 0000B7B9 [0000000000000000] 
 19003                                  
 19004 0000B7C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19005 0000B7C6 E84B550000              	call malloc
 19006 0000B7CB 50                      	push rax
 19007 0000B7CC BF08000000              	mov rdi, 8 * 1	; new rib
 19008 0000B7D1 E840550000              	call malloc
 19009 0000B7D6 50                      	push rax
 19010 0000B7D7 BF18000000              	mov rdi, 8 * 3	; extended env
 19011 0000B7DC E835550000              	call malloc
 19012 0000B7E1 488B7D10                	mov rdi, ENV
 19013 0000B7E5 BE00000000              	mov rsi, 0
 19014 0000B7EA BA01000000              	mov rdx, 1
 19015                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
 19016 0000B7EF 4883FE02                	cmp rsi, 2
 19017 0000B7F3 7410                    	je .L_lambda_simple_env_end_0069
 19018 0000B7F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19019 0000B7F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19020 0000B7FD 48FFC6                  	inc rsi
 19021 0000B800 48FFC2                  	inc rdx
 19022 0000B803 EBEA                    	jmp .L_lambda_simple_env_loop_0069
 19023                                  .L_lambda_simple_env_end_0069:
 19024 0000B805 5B                      	pop rbx
 19025 0000B806 BE00000000              	mov rsi, 0
 19026                                  .L_lambda_simple_params_loop_0069:	; copy params
 19027 0000B80B 4883FE01                	cmp rsi, 1
 19028 0000B80F 740E                    	je .L_lambda_simple_params_end_0069
 19029 0000B811 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19030 0000B816 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19031 0000B81A 48FFC6                  	inc rsi
 19032 0000B81D EBEC                    	jmp .L_lambda_simple_params_loop_0069
 19033                                  .L_lambda_simple_params_end_0069:
 19034 0000B81F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19035 0000B822 4889C3                  	mov rbx, rax
 19036 0000B825 58                      	pop rax
 19037 0000B826 C60005                  	mov byte [rax], T_closure
 19038 0000B829 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19039 0000B82D 48C74009[3AB80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
 19040 0000B835 E9AC020000              	jmp .L_lambda_simple_end_0069
 19041                                  .L_lambda_simple_code_0069:	; lambda-simple body
 19042 0000B83A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19043 0000B840 740B                    	je .L_lambda_simple_arity_check_ok_00e9
 19044 0000B842 FF742410                	push qword [rsp + 8 * 2]
 19045 0000B846 6A02                    	push 2
 19046 0000B848 E982540000              	jmp L_error_incorrect_arity_simple
 19047                                  .L_lambda_simple_arity_check_ok_00e9:
 19048 0000B84D C8000000                	enter 0, 0
 19049 0000B851 488B4528                mov rax, qword [rbp + 40]
 19050 0000B855 50                      	push rax
 19051 0000B856 6A01                    	push 1
 19052 0000B858 488B0425[90000000]      	mov rax, qword [free_var_18]
 19053 0000B860 803805                  	cmp byte [rax], T_closure 
 19054 0000B863 0F8535640000                    jne L_code_ptr_error
 19055                                  
 19056 0000B869 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19057                                  
 19058 0000B86D 53                              push rbx
 19059                                  
 19060 0000B86E FF5009                          call SOB_CLOSURE_CODE(rax)
 19061                                  
 19062 0000B871 50                              	push rax
 19063 0000B872 488B4520                mov rax, qword [rbp + 32]
 19064 0000B876 50                      	push rax
 19065 0000B877 6A01                    	push 1
 19066 0000B879 488B0425[90000000]      	mov rax, qword [free_var_18]
 19067 0000B881 803805                  	cmp byte [rax], T_closure 
 19068 0000B884 0F8514640000                    jne L_code_ptr_error
 19069                                  
 19070 0000B88A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19071                                  
 19072 0000B88E 53                              push rbx
 19073                                  
 19074 0000B88F FF5009                          call SOB_CLOSURE_CODE(rax)
 19075                                  
 19076 0000B892 50                              	push rax
 19077 0000B893 6A02                    	push 2
 19078 0000B895 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19079 0000B89A E877540000              	call malloc
 19080 0000B89F 50                      	push rax
 19081 0000B8A0 BF10000000              	mov rdi, 8 * 2	; new rib
 19082 0000B8A5 E86C540000              	call malloc
 19083 0000B8AA 50                      	push rax
 19084 0000B8AB BF20000000              	mov rdi, 8 * 4	; extended env
 19085 0000B8B0 E861540000              	call malloc
 19086 0000B8B5 488B7D10                	mov rdi, ENV
 19087 0000B8B9 BE00000000              	mov rsi, 0
 19088 0000B8BE BA01000000              	mov rdx, 1
 19089                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
 19090 0000B8C3 4883FE03                	cmp rsi, 3
 19091 0000B8C7 7410                    	je .L_lambda_simple_env_end_006a
 19092 0000B8C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19093 0000B8CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19094 0000B8D1 48FFC6                  	inc rsi
 19095 0000B8D4 48FFC2                  	inc rdx
 19096 0000B8D7 EBEA                    	jmp .L_lambda_simple_env_loop_006a
 19097                                  .L_lambda_simple_env_end_006a:
 19098 0000B8D9 5B                      	pop rbx
 19099 0000B8DA BE00000000              	mov rsi, 0
 19100                                  .L_lambda_simple_params_loop_006a:	; copy params
 19101 0000B8DF 4883FE02                	cmp rsi, 2
 19102 0000B8E3 740E                    	je .L_lambda_simple_params_end_006a
 19103 0000B8E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19104 0000B8EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19105 0000B8EE 48FFC6                  	inc rsi
 19106 0000B8F1 EBEC                    	jmp .L_lambda_simple_params_loop_006a
 19107                                  .L_lambda_simple_params_end_006a:
 19108 0000B8F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19109 0000B8F6 4889C3                  	mov rbx, rax
 19110 0000B8F9 58                      	pop rax
 19111 0000B8FA C60005                  	mov byte [rax], T_closure
 19112 0000B8FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19113 0000B901 48C74009[0EB90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
 19114 0000B909 E97B010000              	jmp .L_lambda_simple_end_006a
 19115                                  .L_lambda_simple_code_006a:	; lambda-simple body
 19116 0000B90E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19117 0000B914 740B                    	je .L_lambda_simple_arity_check_ok_00ea
 19118 0000B916 FF742410                	push qword [rsp + 8 * 2]
 19119 0000B91A 6A02                    	push 2
 19120 0000B91C E9AE530000              	jmp L_error_incorrect_arity_simple
 19121                                  .L_lambda_simple_arity_check_ok_00ea:
 19122 0000B921 C8000000                	enter 0, 0
 19123 0000B925 488B4528                mov rax, qword [rbp + 40]
 19124 0000B929 50                      	push rax
 19125 0000B92A 488B4520                mov rax, qword [rbp + 32]
 19126 0000B92E 50                      	push rax
 19127 0000B92F 6A02                    	push 2
 19128 0000B931 488B0425[38030000]      	mov rax, qword [free_var_103]
 19129 0000B939 803805                  	cmp byte [rax], T_closure 
 19130 0000B93C 0F855C630000                    jne L_code_ptr_error
 19131                                  
 19132 0000B942 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19133                                  
 19134 0000B946 53                              push rbx
 19135                                  
 19136 0000B947 FF5009                          call SOB_CLOSURE_CODE(rax)
 19137                                  
 19138 0000B94A 483D[02000000]                  	cmp rax, sob_boolean_false
 19139 0000B950 0F849A000000            	je .L_if_else_003d
 19140 0000B956 488B4528                mov rax, qword [rbp + 40]
 19141 0000B95A 50                      	push rax
 19142 0000B95B 488B4510                mov rax, qword [rbp + 16]
 19143 0000B95F 488B00                  mov rax, qword [rax + 0]
 19144 0000B962 488B4008                mov rax, qword [rax + 8]
 19145 0000B966 50                      	push rax
 19146 0000B967 488B4520                mov rax, qword [rbp + 32]
 19147 0000B96B 50                      	push rax
 19148 0000B96C 488B4510                mov rax, qword [rbp + 16]
 19149 0000B970 488B00                  mov rax, qword [rax + 0]
 19150 0000B973 488B00                  mov rax, qword [rax + 0]
 19151 0000B976 50                      	push rax
 19152 0000B977 48B8-                   	mov rax, qword (L_constants + 31)
 19152 0000B979 [1F00000000000000] 
 19153 0000B981 50                      	push rax
 19154 0000B982 6A05                    	push 5
 19155 0000B984 488B4510                mov rax, qword [rbp + 16]
 19156 0000B988 488B4008                mov rax, qword [rax + 8]
 19157 0000B98C 488B00                  mov rax, qword [rax + 0]
 19158 0000B98F 488B00                  	mov rax, qword [rax]
 19159                                  .L_lambda_simple_arity_check_ok_00ec:
 19160 0000B992 803805                  	cmp byte [rax], T_closure
 19161                                  
 19162 0000B995 0F8503630000                    jne L_code_ptr_error                      ; rax <- proc
 19163                                  
 19164                                  
 19165 0000B99B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19166                                  
 19167 0000B99F 53                              push rbx                                  ; env pushed
 19168                                  
 19169 0000B9A0 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19170                                  
 19171                                  
 19172 0000B9A3 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19173                                  
 19174                                          
 19175                                          
 19176 0000B9A6 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19177                                  
 19178 0000B9AA 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19179                                  
 19180                                  
 19181 0000B9AF 4D89CA                          mov r10, r9
 19182 0000B9B2 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 19183                                  
 19184                                                                                         
 19185 0000B9B6 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19186 0000B9B9 4983C404                        add r12, 4
 19187                                  
 19188 0000B9BD 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19189                                  .L_tc_recycle_frame_loop_0082:
 19190 0000B9C3 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 19191                                  
 19192 0000B9C7 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19193                                  
 19194                                  
 19195                                  
 19196 0000B9CC 41BE00000000                    mov r14, 0                                ; clean box
 19197                                  
 19198                                  
 19199                                                                  
 19200 0000B9D2 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19201                                  
 19202 0000B9D6 4983C4FF                        add r12, -1 
 19203                                  
 19204 0000B9DA 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19205 0000B9DE 75E3                    	jne .L_tc_recycle_frame_loop_0082
 19206                                  .L_tc_recycle_frame_done_0082:
 19207 0000B9E0 5D                      	pop rbp                                  ; restore the old rbp
 19208                                  
 19209 0000B9E1 488B4D00                        mov rcx, qword [rbp]
 19210 0000B9E5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19211                                            ; rbx <- code(proc)
 19212                                  
 19213 0000B9E9 FFE3                            jmp rbx
 19214 0000B9EB E995000000              	jmp .L_if_end_003d
 19215                                  	.L_if_else_003d:
 19216 0000B9F0 488B4520                	mov rax, qword [rbp + 32]
 19217 0000B9F4 50                      	push rax
 19218 0000B9F5 488B4510                mov rax, qword [rbp + 16]
 19219 0000B9F9 488B00                  mov rax, qword [rax + 0]
 19220 0000B9FC 488B00                  mov rax, qword [rax + 0]
 19221 0000B9FF 50                      	push rax
 19222 0000BA00 488B4528                mov rax, qword [rbp + 40]
 19223 0000BA04 50                      	push rax
 19224 0000BA05 488B4510                mov rax, qword [rbp + 16]
 19225 0000BA09 488B00                  mov rax, qword [rax + 0]
 19226 0000BA0C 488B4008                mov rax, qword [rax + 8]
 19227 0000BA10 50                      	push rax
 19228 0000BA11 48B8-                   	mov rax, qword (L_constants + 31)
 19228 0000BA13 [1F00000000000000] 
 19229 0000BA1B 50                      	push rax
 19230 0000BA1C 6A05                    	push 5
 19231 0000BA1E 488B4510                mov rax, qword [rbp + 16]
 19232 0000BA22 488B4008                mov rax, qword [rax + 8]
 19233 0000BA26 488B00                  mov rax, qword [rax + 0]
 19234 0000BA29 488B00                  	mov rax, qword [rax]
 19235                                  .L_lambda_simple_arity_check_ok_00eb:
 19236 0000BA2C 803805                  	cmp byte [rax], T_closure
 19237                                  
 19238 0000BA2F 0F8569620000                    jne L_code_ptr_error                      ; rax <- proc
 19239                                  
 19240                                  
 19241 0000BA35 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19242                                  
 19243 0000BA39 53                              push rbx                                  ; env pushed
 19244                                  
 19245 0000BA3A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19246                                  
 19247                                  
 19248 0000BA3D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19249                                  
 19250                                          
 19251                                          
 19252 0000BA40 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19253                                  
 19254 0000BA44 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19255                                  
 19256                                  
 19257 0000BA49 4D89CA                          mov r10, r9
 19258 0000BA4C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 19259                                  
 19260                                                                                         
 19261 0000BA50 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19262 0000BA53 4983C404                        add r12, 4
 19263                                  
 19264 0000BA57 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19265                                  .L_tc_recycle_frame_loop_0081:
 19266 0000BA5D 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 19267                                  
 19268 0000BA61 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19269                                  
 19270                                  
 19271                                  
 19272 0000BA66 41BE00000000                    mov r14, 0                                ; clean box
 19273                                  
 19274                                  
 19275                                                                  
 19276 0000BA6C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19277                                  
 19278 0000BA70 4983C4FF                        add r12, -1 
 19279                                  
 19280 0000BA74 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19281 0000BA78 75E3                    	jne .L_tc_recycle_frame_loop_0081
 19282                                  .L_tc_recycle_frame_done_0081:
 19283 0000BA7A 5D                      	pop rbp                                  ; restore the old rbp
 19284                                  
 19285 0000BA7B 488B4D00                        mov rcx, qword [rbp]
 19286 0000BA7F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19287                                            ; rbx <- code(proc)
 19288                                  
 19289 0000BA83 FFE3                            jmp rbx
 19290                                  	.L_if_end_003d:
 19291 0000BA85 C9                      	leave
 19292 0000BA86 C22000                  	ret 8 * (2 + 2)
 19293                                  .L_lambda_simple_end_006a:	; new closure is in rax
 19294                                  .L_lambda_simple_arity_check_ok_00ed:
 19295 0000BA89 803805                  	cmp byte [rax], T_closure
 19296                                  
 19297 0000BA8C 0F850C620000                    jne L_code_ptr_error                      ; rax <- proc
 19298                                  
 19299                                  
 19300 0000BA92 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19301                                  
 19302 0000BA96 53                              push rbx                                  ; env pushed
 19303                                  
 19304 0000BA97 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19305                                  
 19306                                  
 19307 0000BA9A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19308                                  
 19309                                          
 19310                                          
 19311 0000BA9D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19312                                  
 19313 0000BAA1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19314                                  
 19315                                  
 19316 0000BAA6 4D89CA                          mov r10, r9
 19317 0000BAA9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 19318                                  
 19319                                                                                         
 19320 0000BAAD 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19321 0000BAB0 4983C404                        add r12, 4
 19322                                  
 19323 0000BAB4 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19324                                  .L_tc_recycle_frame_loop_0083:
 19325 0000BABA 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 19326                                  
 19327 0000BABE 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19328                                  
 19329                                  
 19330                                  
 19331 0000BAC3 41BE00000000                    mov r14, 0                                ; clean box
 19332                                  
 19333                                  
 19334                                                                  
 19335 0000BAC9 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19336                                  
 19337 0000BACD 4983C4FF                        add r12, -1 
 19338                                  
 19339 0000BAD1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19340 0000BAD5 75E3                    	jne .L_tc_recycle_frame_loop_0083
 19341                                  .L_tc_recycle_frame_done_0083:
 19342 0000BAD7 5D                      	pop rbp                                  ; restore the old rbp
 19343                                  
 19344 0000BAD8 488B4D00                        mov rcx, qword [rbp]
 19345 0000BADC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19346                                            ; rbx <- code(proc)
 19347                                  
 19348 0000BAE0 FFE3                            jmp rbx
 19349 0000BAE2 C9                      	leave
 19350 0000BAE3 C22000                  	ret 8 * (2 + 2)
 19351                                  .L_lambda_simple_end_0069:	; new closure is in rax
 19352 0000BAE6 50                      	push rax
 19353 0000BAE7 6A01                    	push 1
 19354 0000BAE9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19355 0000BAEE E823520000              	call malloc
 19356 0000BAF3 50                      	push rax
 19357 0000BAF4 BF08000000              	mov rdi, 8 * 1	; new rib
 19358 0000BAF9 E818520000              	call malloc
 19359 0000BAFE 50                      	push rax
 19360 0000BAFF BF18000000              	mov rdi, 8 * 3	; extended env
 19361 0000BB04 E80D520000              	call malloc
 19362 0000BB09 488B7D10                	mov rdi, ENV
 19363 0000BB0D BE00000000              	mov rsi, 0
 19364 0000BB12 BA01000000              	mov rdx, 1
 19365                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
 19366 0000BB17 4883FE02                	cmp rsi, 2
 19367 0000BB1B 7410                    	je .L_lambda_simple_env_end_006b
 19368 0000BB1D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19369 0000BB21 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19370 0000BB25 48FFC6                  	inc rsi
 19371 0000BB28 48FFC2                  	inc rdx
 19372 0000BB2B EBEA                    	jmp .L_lambda_simple_env_loop_006b
 19373                                  .L_lambda_simple_env_end_006b:
 19374 0000BB2D 5B                      	pop rbx
 19375 0000BB2E BE00000000              	mov rsi, 0
 19376                                  .L_lambda_simple_params_loop_006b:	; copy params
 19377 0000BB33 4883FE01                	cmp rsi, 1
 19378 0000BB37 740E                    	je .L_lambda_simple_params_end_006b
 19379 0000BB39 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19380 0000BB3E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19381 0000BB42 48FFC6                  	inc rsi
 19382 0000BB45 EBEC                    	jmp .L_lambda_simple_params_loop_006b
 19383                                  .L_lambda_simple_params_end_006b:
 19384 0000BB47 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19385 0000BB4A 4889C3                  	mov rbx, rax
 19386 0000BB4D 58                      	pop rax
 19387 0000BB4E C60005                  	mov byte [rax], T_closure
 19388 0000BB51 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19389 0000BB55 48C74009[62BB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
 19390 0000BB5D E9B0040000              	jmp .L_lambda_simple_end_006b
 19391                                  .L_lambda_simple_code_006b:	; lambda-simple body
 19392 0000BB62 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19393 0000BB68 740B                    	je .L_lambda_simple_arity_check_ok_00ee
 19394 0000BB6A FF742410                	push qword [rsp + 8 * 2]
 19395 0000BB6E 6A01                    	push 1
 19396 0000BB70 E95A510000              	jmp L_error_incorrect_arity_simple
 19397                                  .L_lambda_simple_arity_check_ok_00ee:
 19398 0000BB75 C8000000                	enter 0, 0
 19399 0000BB79 48B8-                   	mov rax, qword (L_constants + 22)
 19399 0000BB7B [1600000000000000] 
 19400 0000BB83 50                      	push rax
 19401 0000BB84 6A01                    	push 1
 19402 0000BB86 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19403 0000BB8B E886510000              	call malloc
 19404 0000BB90 50                      	push rax
 19405 0000BB91 BF08000000              	mov rdi, 8 * 1	; new rib
 19406 0000BB96 E87B510000              	call malloc
 19407 0000BB9B 50                      	push rax
 19408 0000BB9C BF20000000              	mov rdi, 8 * 4	; extended env
 19409 0000BBA1 E870510000              	call malloc
 19410 0000BBA6 488B7D10                	mov rdi, ENV
 19411 0000BBAA BE00000000              	mov rsi, 0
 19412 0000BBAF BA01000000              	mov rdx, 1
 19413                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
 19414 0000BBB4 4883FE03                	cmp rsi, 3
 19415 0000BBB8 7410                    	je .L_lambda_simple_env_end_006c
 19416 0000BBBA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19417 0000BBBE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19418 0000BBC2 48FFC6                  	inc rsi
 19419 0000BBC5 48FFC2                  	inc rdx
 19420 0000BBC8 EBEA                    	jmp .L_lambda_simple_env_loop_006c
 19421                                  .L_lambda_simple_env_end_006c:
 19422 0000BBCA 5B                      	pop rbx
 19423 0000BBCB BE00000000              	mov rsi, 0
 19424                                  .L_lambda_simple_params_loop_006c:	; copy params
 19425 0000BBD0 4883FE01                	cmp rsi, 1
 19426 0000BBD4 740E                    	je .L_lambda_simple_params_end_006c
 19427 0000BBD6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19428 0000BBDB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19429 0000BBDF 48FFC6                  	inc rsi
 19430 0000BBE2 EBEC                    	jmp .L_lambda_simple_params_loop_006c
 19431                                  .L_lambda_simple_params_end_006c:
 19432 0000BBE4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19433 0000BBE7 4889C3                  	mov rbx, rax
 19434 0000BBEA 58                      	pop rax
 19435 0000BBEB C60005                  	mov byte [rax], T_closure
 19436 0000BBEE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19437 0000BBF2 48C74009[FFBB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
 19438 0000BBFA E9B6030000              	jmp .L_lambda_simple_end_006c
 19439                                  .L_lambda_simple_code_006c:	; lambda-simple body
 19440 0000BBFF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19441 0000BC05 740B                    	je .L_lambda_simple_arity_check_ok_00ef
 19442 0000BC07 FF742410                	push qword [rsp + 8 * 2]
 19443 0000BC0B 6A01                    	push 1
 19444 0000BC0D E9BD500000              	jmp L_error_incorrect_arity_simple
 19445                                  .L_lambda_simple_arity_check_ok_00ef:
 19446 0000BC12 C8000000                	enter 0, 0
 19447 0000BC16 BF08000000              mov rdi, 8
 19448 0000BC1B E8F6500000              call malloc
 19449 0000BC20 4889C3                  mov rbx, rax
 19450 0000BC23 488B4520                mov rax, qword [rbp + 32]
 19451 0000BC27 488903                  mov qword [rbx], rax
 19452 0000BC2A 4889D8                  mov rax, rbx
 19453 0000BC2D 48894520                mov qword [rbp + 32], rax
 19454 0000BC31 48B8-                   mov rax, sob_void
 19454 0000BC33 [0000000000000000] 
 19455 0000BC3B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19456 0000BC40 E8D1500000              	call malloc
 19457 0000BC45 50                      	push rax
 19458 0000BC46 BF08000000              	mov rdi, 8 * 1	; new rib
 19459 0000BC4B E8C6500000              	call malloc
 19460 0000BC50 50                      	push rax
 19461 0000BC51 BF28000000              	mov rdi, 8 * 5	; extended env
 19462 0000BC56 E8BB500000              	call malloc
 19463 0000BC5B 488B7D10                	mov rdi, ENV
 19464 0000BC5F BE00000000              	mov rsi, 0
 19465 0000BC64 BA01000000              	mov rdx, 1
 19466                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
 19467 0000BC69 4883FE04                	cmp rsi, 4
 19468 0000BC6D 7410                    	je .L_lambda_simple_env_end_006d
 19469 0000BC6F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19470 0000BC73 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19471 0000BC77 48FFC6                  	inc rsi
 19472 0000BC7A 48FFC2                  	inc rdx
 19473 0000BC7D EBEA                    	jmp .L_lambda_simple_env_loop_006d
 19474                                  .L_lambda_simple_env_end_006d:
 19475 0000BC7F 5B                      	pop rbx
 19476 0000BC80 BE00000000              	mov rsi, 0
 19477                                  .L_lambda_simple_params_loop_006d:	; copy params
 19478 0000BC85 4883FE01                	cmp rsi, 1
 19479 0000BC89 740E                    	je .L_lambda_simple_params_end_006d
 19480 0000BC8B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19481 0000BC90 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19482 0000BC94 48FFC6                  	inc rsi
 19483 0000BC97 EBEC                    	jmp .L_lambda_simple_params_loop_006d
 19484                                  .L_lambda_simple_params_end_006d:
 19485 0000BC99 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19486 0000BC9C 4889C3                  	mov rbx, rax
 19487 0000BC9F 58                      	pop rax
 19488 0000BCA0 C60005                  	mov byte [rax], T_closure
 19489 0000BCA3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19490 0000BCA7 48C74009[B4BC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
 19491 0000BCAF E94D010000              	jmp .L_lambda_simple_end_006d
 19492                                  .L_lambda_simple_code_006d:	; lambda-simple body
 19493 0000BCB4 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19494 0000BCBA 740B                    	je .L_lambda_simple_arity_check_ok_00f0
 19495 0000BCBC FF742410                	push qword [rsp + 8 * 2]
 19496 0000BCC0 6A02                    	push 2
 19497 0000BCC2 E908500000              	jmp L_error_incorrect_arity_simple
 19498                                  .L_lambda_simple_arity_check_ok_00f0:
 19499 0000BCC7 C8000000                	enter 0, 0
 19500 0000BCCB 488B4528                mov rax, qword [rbp + 40]
 19501 0000BCCF 50                      	push rax
 19502 0000BCD0 6A01                    	push 1
 19503 0000BCD2 488B0425[00000000]      	mov rax, qword [free_var_0]
 19504 0000BCDA 803805                  	cmp byte [rax], T_closure 
 19505 0000BCDD 0F85BB5F0000                    jne L_code_ptr_error
 19506                                  
 19507 0000BCE3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19508                                  
 19509 0000BCE7 53                              push rbx
 19510                                  
 19511 0000BCE8 FF5009                          call SOB_CLOSURE_CODE(rax)
 19512                                  
 19513 0000BCEB 483D[02000000]                  	cmp rax, sob_boolean_false
 19514 0000BCF1 0F8506010000            	jne .L_or_end_0007
 19515 0000BCF7 488B4528                mov rax, qword [rbp + 40]
 19516 0000BCFB 50                      	push rax
 19517 0000BCFC 6A01                    	push 1
 19518 0000BCFE 488B0425[80000000]      	mov rax, qword [free_var_16]
 19519 0000BD06 803805                  	cmp byte [rax], T_closure 
 19520 0000BD09 0F858F5F0000                    jne L_code_ptr_error
 19521                                  
 19522 0000BD0F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19523                                  
 19524 0000BD13 53                              push rbx
 19525                                  
 19526 0000BD14 FF5009                          call SOB_CLOSURE_CODE(rax)
 19527                                  
 19528 0000BD17 50                              	push rax
 19529 0000BD18 488B4520                mov rax, qword [rbp + 32]
 19530 0000BD1C 50                      	push rax
 19531 0000BD1D 6A02                    	push 2
 19532 0000BD1F 488B4510                mov rax, qword [rbp + 16]
 19533 0000BD23 488B4008                mov rax, qword [rax + 8]
 19534 0000BD27 488B00                  mov rax, qword [rax + 0]
 19535 0000BD2A 803805                  	cmp byte [rax], T_closure 
 19536 0000BD2D 0F856B5F0000                    jne L_code_ptr_error
 19537                                  
 19538 0000BD33 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19539                                  
 19540 0000BD37 53                              push rbx
 19541                                  
 19542 0000BD38 FF5009                          call SOB_CLOSURE_CODE(rax)
 19543                                  
 19544 0000BD3B 483D[02000000]                  	cmp rax, sob_boolean_false
 19545 0000BD41 0F84AC000000            	je .L_if_else_003e
 19546 0000BD47 488B4528                mov rax, qword [rbp + 40]
 19547 0000BD4B 50                      	push rax
 19548 0000BD4C 6A01                    	push 1
 19549 0000BD4E 488B0425[88000000]      	mov rax, qword [free_var_17]
 19550 0000BD56 803805                  	cmp byte [rax], T_closure 
 19551 0000BD59 0F853F5F0000                    jne L_code_ptr_error
 19552                                  
 19553 0000BD5F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19554                                  
 19555 0000BD63 53                              push rbx
 19556                                  
 19557 0000BD64 FF5009                          call SOB_CLOSURE_CODE(rax)
 19558                                  
 19559 0000BD67 50                              	push rax
 19560 0000BD68 488B4528                mov rax, qword [rbp + 40]
 19561 0000BD6C 50                      	push rax
 19562 0000BD6D 6A01                    	push 1
 19563 0000BD6F 488B0425[80000000]      	mov rax, qword [free_var_16]
 19564 0000BD77 803805                  	cmp byte [rax], T_closure 
 19565 0000BD7A 0F851E5F0000                    jne L_code_ptr_error
 19566                                  
 19567 0000BD80 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 19568                                  
 19569 0000BD84 53                              push rbx
 19570                                  
 19571 0000BD85 FF5009                          call SOB_CLOSURE_CODE(rax)
 19572                                  
 19573 0000BD88 50                              	push rax
 19574 0000BD89 6A02                    	push 2
 19575 0000BD8B 488B4510                mov rax, qword [rbp + 16]
 19576 0000BD8F 488B00                  mov rax, qword [rax + 0]
 19577 0000BD92 488B00                  mov rax, qword [rax + 0]
 19578 0000BD95 488B00                  	mov rax, qword [rax]
 19579                                  .L_lambda_simple_arity_check_ok_00f1:
 19580 0000BD98 803805                  	cmp byte [rax], T_closure
 19581                                  
 19582 0000BD9B 0F85FD5E0000                    jne L_code_ptr_error                      ; rax <- proc
 19583                                  
 19584                                  
 19585 0000BDA1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19586                                  
 19587 0000BDA5 53                              push rbx                                  ; env pushed
 19588                                  
 19589 0000BDA6 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19590                                  
 19591                                  
 19592 0000BDA9 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19593                                  
 19594                                          
 19595                                          
 19596 0000BDAC 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19597                                  
 19598 0000BDB0 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19599                                  
 19600                                  
 19601 0000BDB5 4D89CA                          mov r10, r9
 19602 0000BDB8 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 19603                                  
 19604                                                                                         
 19605 0000BDBC 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19606 0000BDBF 4983C404                        add r12, 4
 19607                                  
 19608 0000BDC3 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19609                                  .L_tc_recycle_frame_loop_0084:
 19610 0000BDC9 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 19611                                  
 19612 0000BDCD 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19613                                  
 19614                                  
 19615                                  
 19616 0000BDD2 41BE00000000                    mov r14, 0                                ; clean box
 19617                                  
 19618                                  
 19619                                                                  
 19620 0000BDD8 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19621                                  
 19622 0000BDDC 4983C4FF                        add r12, -1 
 19623                                  
 19624 0000BDE0 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19625 0000BDE4 75E3                    	jne .L_tc_recycle_frame_loop_0084
 19626                                  .L_tc_recycle_frame_done_0084:
 19627 0000BDE6 5D                      	pop rbp                                  ; restore the old rbp
 19628                                  
 19629 0000BDE7 488B4D00                        mov rcx, qword [rbp]
 19630 0000BDEB 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19631                                            ; rbx <- code(proc)
 19632                                  
 19633 0000BDEF FFE3                            jmp rbx
 19634 0000BDF1 EB0A                    	jmp .L_if_end_003e
 19635                                  	.L_if_else_003e:
 19636 0000BDF3 48B8-                   		mov rax, qword (L_constants + 2)
 19636 0000BDF5 [0200000000000000] 
 19637                                  	.L_if_end_003e:
 19638                                  .L_or_end_0007:
 19639 0000BDFD C9                      	leave
 19640 0000BDFE C22000                  	ret 8 * (2 + 2)
 19641                                  .L_lambda_simple_end_006d:	; new closure is in rax
 19642 0000BE01 50                      push rax
 19643 0000BE02 488B4520                mov rax, qword [rbp + 32]
 19644 0000BE06 8F00                    pop qword [rax]
 19645 0000BE08 48B8-                   mov rax, sob_void
 19645 0000BE0A [0000000000000000] 
 19646                                  
 19647 0000BE12 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19648 0000BE17 E8FA4E0000              	call malloc
 19649 0000BE1C 50                      	push rax
 19650 0000BE1D BF08000000              	mov rdi, 8 * 1	; new rib
 19651 0000BE22 E8EF4E0000              	call malloc
 19652 0000BE27 50                      	push rax
 19653 0000BE28 BF28000000              	mov rdi, 8 * 5	; extended env
 19654 0000BE2D E8E44E0000              	call malloc
 19655 0000BE32 488B7D10                	mov rdi, ENV
 19656 0000BE36 BE00000000              	mov rsi, 0
 19657 0000BE3B BA01000000              	mov rdx, 1
 19658                                  .L_lambda_opt_env_loop_0012:	; ext_env[i + 1] <-- env[i]
 19659 0000BE40 4883FE04                	cmp rsi, 4
 19660 0000BE44 7410                    	je .L_lambda_opt_env_end_0012
 19661 0000BE46 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19662 0000BE4A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19663 0000BE4E 48FFC6                  	inc rsi
 19664 0000BE51 48FFC2                  	inc rdx
 19665 0000BE54 EBEA                    	jmp .L_lambda_opt_env_loop_0012
 19666                                  .L_lambda_opt_env_end_0012:
 19667 0000BE56 5B                      	pop rbx
 19668 0000BE57 BE00000000              	mov rsi, 0
 19669                                  .L_lambda_opt_params_loop_0023:	; copy params
 19670 0000BE5C 4883FE01                	cmp rsi, 1
 19671 0000BE60 740E                    	je .L_lambda_opt_params_end_0023
 19672 0000BE62 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19673 0000BE67 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19674 0000BE6B 48FFC6                  	inc rsi
 19675 0000BE6E EBEC                    	jmp .L_lambda_opt_params_loop_0023
 19676                                  .L_lambda_opt_params_end_0023:
 19677 0000BE70 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19678 0000BE73 4889C3                  	mov rbx, rax
 19679 0000BE76 58                      	pop rax
 19680 0000BE77 C60005                  	mov byte [rax], T_closure
 19681 0000BE7A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19682 0000BE7E 48C74009[8BBE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0012
 19683 0000BE86 E926010000              	jmp .L_lambda_opt_end_0012
 19684                                  .L_lambda_opt_code_0012:
 19685 0000BE8B 4C8B542410              mov r10, qword [rsp+8*2]
 19686 0000BE90 4983FA01                cmp r10, 1
 19687 0000BE94 740B                    je .L_lambda_opt_arity_check_exact_0012
 19688 0000BE96 4983FA01                cmp r10, 1
 19689 0000BE9A 7F41                    jg .L_lambda_opt_arity_check_more_0012
 19690 0000BE9C E9424E0000              jmp L_error_incorrect_arity_opt
 19691                                  .L_lambda_opt_arity_check_exact_0012:
 19692 0000BEA1 4883EC08                sub rsp, 8
 19693 0000BEA5 BA04000000              mov rdx, 3+1
 19694 0000BEAA 4889E3                  mov qword rbx, rsp
 19695                                  .L_lambda_opt_params_loop_0024:
 19696 0000BEAD 488B4B08                mov qword rcx, [rbx+8]
 19697 0000BEB1 48890B                  mov qword [rbx], rcx
 19698 0000BEB4 48FFCA                  dec rdx
 19699 0000BEB7 4883C308                add rbx, 8
 19700 0000BEBB 4883FA00                cmp rdx, 0
 19701 0000BEBF 7402                    je .L_lambda_opt_params_end_0024
 19702 0000BEC1 EBEA                    jmp .L_lambda_opt_params_loop_0024
 19703                                  .L_lambda_opt_params_end_0024:
 19704 0000BEC3 49FFC2                  inc r10
 19705 0000BEC6 4C89542410              mov qword [rsp+8*2], r10
 19706 0000BECB 4983C202                add r10, 2
 19707 0000BECF 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 19708 0000BED7 4C8B4D00                mov r9, [rbp]
 19709 0000BEDB EB52                    jmp .L_lambda_opt_stack_adjusted_0012
 19710                                  .L_lambda_opt_arity_check_more_0012:
 19711 0000BEDD 48B8-                   mov rax, sob_nil
 19711 0000BEDF [0100000000000000] 
 19712 0000BEE7 4C8B542410              mov r10, [rsp+2*8]
 19713 0000BEEC 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 19714 0000BEF1 4983EA01                sub r10, 1
 19715                                  .L_lambda_opt_stack_shrink_loop_0012:
 19716 0000BEF5 4983FA00                cmp r10, 0
 19717 0000BEF9 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0012
 19718 0000BEFB 4889C1                  mov rcx, rax
 19719 0000BEFE 498B10                  mov rdx, [r8]
 19720 0000BF01 BF11000000              mov rdi, 17
 19721 0000BF06 E80B4E0000              call malloc
 19722 0000BF0B C60021                  mov byte [rax], T_pair
 19723 0000BF0E 48894809                mov SOB_PAIR_CDR(rax), rcx
 19724 0000BF12 48895001                mov SOB_PAIR_CAR(rax), rdx
 19725 0000BF16 4983E808                sub r8, 8
 19726 0000BF1A 49FFCA                  dec r10
 19727 0000BF1D EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0012
 19728                                  .L_lambda_opt_stack_shrink_loop_exit_0012:
 19729 0000BF1F 4889442420              mov [rsp+8*(2+2)], rax
 19730 0000BF24 41BA02000000            mov r10, 2
 19731 0000BF2A 4C89542410              mov [rsp+16], r10
 19732                                  .L_lambda_opt_stack_adjusted_0012:
 19733 0000BF2F 4C8B4D00                mov r9, [rbp]
 19734 0000BF33 C8000000                enter 0, 0
 19735 0000BF37 488B4528                mov rax, qword [rbp + 40]
 19736 0000BF3B 50                      	push rax
 19737 0000BF3C 488B4520                mov rax, qword [rbp + 32]
 19738 0000BF40 50                      	push rax
 19739 0000BF41 6A02                    	push 2
 19740 0000BF43 488B4510                mov rax, qword [rbp + 16]
 19741 0000BF47 488B00                  mov rax, qword [rax + 0]
 19742 0000BF4A 488B00                  mov rax, qword [rax + 0]
 19743 0000BF4D 488B00                  	mov rax, qword [rax]
 19744                                  .L_lambda_simple_arity_check_ok_00f2:
 19745 0000BF50 803805                  	cmp byte [rax], T_closure
 19746                                  
 19747 0000BF53 0F85455D0000                    jne L_code_ptr_error                      ; rax <- proc
 19748                                  
 19749                                  
 19750 0000BF59 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19751                                  
 19752 0000BF5D 53                              push rbx                                  ; env pushed
 19753                                  
 19754 0000BF5E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19755                                  
 19756                                  
 19757 0000BF61 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19758                                  
 19759                                          
 19760                                          
 19761 0000BF64 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19762                                  
 19763 0000BF68 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19764                                  
 19765                                  
 19766 0000BF6D 4D89CA                          mov r10, r9
 19767 0000BF70 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 19768                                  
 19769                                                                                         
 19770 0000BF74 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19771 0000BF77 4983C404                        add r12, 4
 19772                                  
 19773 0000BF7B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19774                                  .L_tc_recycle_frame_loop_0085:
 19775 0000BF81 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 19776                                  
 19777 0000BF85 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19778                                  
 19779                                  
 19780                                  
 19781 0000BF8A 41BE00000000                    mov r14, 0                                ; clean box
 19782                                  
 19783                                  
 19784                                                                  
 19785 0000BF90 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19786                                  
 19787 0000BF94 4983C4FF                        add r12, -1 
 19788                                  
 19789 0000BF98 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19790 0000BF9C 75E3                    	jne .L_tc_recycle_frame_loop_0085
 19791                                  .L_tc_recycle_frame_done_0085:
 19792 0000BF9E 5D                      	pop rbp                                  ; restore the old rbp
 19793                                  
 19794 0000BF9F 488B4D00                        mov rcx, qword [rbp]
 19795 0000BFA3 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19796                                            ; rbx <- code(proc)
 19797                                  
 19798 0000BFA7 FFE3                            jmp rbx
 19799 0000BFA9 C9                      leave
 19800 0000BFAA 4C8B4D00                mov r9, [rbp]
 19801 0000BFAE C22800                  ret 8 * (3 + 2)
 19802                                  .L_lambda_opt_end_0012:	; new closure is in rax
 19803 0000BFB1 C9                      	leave
 19804 0000BFB2 C21800                  	ret 8 * (2 + 1)
 19805                                  .L_lambda_simple_end_006c:	; new closure is in rax
 19806                                  .L_lambda_simple_arity_check_ok_00f3:
 19807 0000BFB5 803805                  	cmp byte [rax], T_closure
 19808                                  
 19809 0000BFB8 0F85E05C0000                    jne L_code_ptr_error                      ; rax <- proc
 19810                                  
 19811                                  
 19812 0000BFBE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19813                                  
 19814 0000BFC2 53                              push rbx                                  ; env pushed
 19815                                  
 19816 0000BFC3 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19817                                  
 19818                                  
 19819 0000BFC6 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19820                                  
 19821                                          
 19822                                          
 19823 0000BFC9 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19824                                  
 19825 0000BFCD 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19826                                  
 19827                                  
 19828 0000BFD2 4D89CA                          mov r10, r9
 19829 0000BFD5 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 19830                                  
 19831                                                                                         
 19832 0000BFD9 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19833 0000BFDC 4983C404                        add r12, 4
 19834                                  
 19835 0000BFE0 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19836                                  .L_tc_recycle_frame_loop_0086:
 19837 0000BFE6 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 19838                                  
 19839 0000BFEA 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19840                                  
 19841                                  
 19842                                  
 19843 0000BFEF 41BE00000000                    mov r14, 0                                ; clean box
 19844                                  
 19845                                  
 19846                                                                  
 19847 0000BFF5 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19848                                  
 19849 0000BFF9 4983C4FF                        add r12, -1 
 19850                                  
 19851 0000BFFD 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19852 0000C001 75E3                    	jne .L_tc_recycle_frame_loop_0086
 19853                                  .L_tc_recycle_frame_done_0086:
 19854 0000C003 5D                      	pop rbp                                  ; restore the old rbp
 19855                                  
 19856 0000C004 488B4D00                        mov rcx, qword [rbp]
 19857 0000C008 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19858                                            ; rbx <- code(proc)
 19859                                  
 19860 0000C00C FFE3                            jmp rbx
 19861 0000C00E C9                      	leave
 19862 0000C00F C21800                  	ret 8 * (2 + 1)
 19863                                  .L_lambda_simple_end_006b:	; new closure is in rax
 19864                                  .L_lambda_simple_arity_check_ok_00f4:
 19865 0000C012 803805                  	cmp byte [rax], T_closure
 19866                                  
 19867 0000C015 0F85835C0000                    jne L_code_ptr_error                      ; rax <- proc
 19868                                  
 19869                                  
 19870 0000C01B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19871                                  
 19872 0000C01F 53                              push rbx                                  ; env pushed
 19873                                  
 19874 0000C020 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19875                                  
 19876                                  
 19877 0000C023 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19878                                  
 19879                                          
 19880                                          
 19881 0000C026 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19882                                  
 19883 0000C02A 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19884                                  
 19885                                  
 19886 0000C02F 4D89CA                          mov r10, r9
 19887 0000C032 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 19888                                  
 19889                                                                                         
 19890 0000C036 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19891 0000C039 4983C404                        add r12, 4
 19892                                  
 19893 0000C03D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19894                                  .L_tc_recycle_frame_loop_0087:
 19895 0000C043 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 19896                                  
 19897 0000C047 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19898                                  
 19899                                  
 19900                                  
 19901 0000C04C 41BE00000000                    mov r14, 0                                ; clean box
 19902                                  
 19903                                  
 19904                                                                  
 19905 0000C052 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19906                                  
 19907 0000C056 4983C4FF                        add r12, -1 
 19908                                  
 19909 0000C05A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19910 0000C05E 75E3                    	jne .L_tc_recycle_frame_loop_0087
 19911                                  .L_tc_recycle_frame_done_0087:
 19912 0000C060 5D                      	pop rbp                                  ; restore the old rbp
 19913                                  
 19914 0000C061 488B4D00                        mov rcx, qword [rbp]
 19915 0000C065 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19916                                            ; rbx <- code(proc)
 19917                                  
 19918 0000C069 FFE3                            jmp rbx
 19919 0000C06B C9                      	leave
 19920 0000C06C C21800                  	ret 8 * (2 + 1)
 19921                                  .L_lambda_simple_end_0067:	; new closure is in rax
 19922                                  .L_lambda_simple_arity_check_ok_00f5:
 19923 0000C06F 803805                  	cmp byte [rax], T_closure
 19924                                  
 19925 0000C072 0F85265C0000                    jne L_code_ptr_error                      ; rax <- proc
 19926                                  
 19927                                  
 19928 0000C078 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 19929                                  
 19930 0000C07C 53                              push rbx                                  ; env pushed
 19931                                  
 19932 0000C07D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 19933                                  
 19934                                  
 19935 0000C080 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 19936                                  
 19937                                          
 19938                                          
 19939 0000C083 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 19940                                  
 19941 0000C087 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 19942                                  
 19943                                  
 19944 0000C08C 4D89CA                          mov r10, r9
 19945 0000C08F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 19946                                  
 19947                                                                                         
 19948 0000C093 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 19949 0000C096 4983C404                        add r12, 4
 19950                                  
 19951 0000C09A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 19952                                  .L_tc_recycle_frame_loop_0088:
 19953 0000C0A0 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 19954                                  
 19955 0000C0A4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 19956                                  
 19957                                  
 19958                                  
 19959 0000C0A9 41BE00000000                    mov r14, 0                                ; clean box
 19960                                  
 19961                                  
 19962                                                                  
 19963 0000C0AF 4983C2FF                        add r10, -1                               ; args_copied_counter--
 19964                                  
 19965 0000C0B3 4983C4FF                        add r12, -1 
 19966                                  
 19967 0000C0B7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 19968 0000C0BB 75E3                    	jne .L_tc_recycle_frame_loop_0088
 19969                                  .L_tc_recycle_frame_done_0088:
 19970 0000C0BD 5D                      	pop rbp                                  ; restore the old rbp
 19971                                  
 19972 0000C0BE 488B4D00                        mov rcx, qword [rbp]
 19973 0000C0C2 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 19974                                            ; rbx <- code(proc)
 19975                                  
 19976 0000C0C6 FFE3                            jmp rbx
 19977 0000C0C8 C9                      	leave
 19978 0000C0C9 C22000                  	ret 8 * (2 + 2)
 19979                                  .L_lambda_simple_end_0066:	; new closure is in rax
 19980 0000C0CC 50                      	push rax
 19981 0000C0CD 6A01                    	push 1
 19982 0000C0CF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19983 0000C0D4 E83D4C0000              	call malloc
 19984 0000C0D9 50                      	push rax
 19985 0000C0DA BF00000000              	mov rdi, 8 * 0	; new rib
 19986 0000C0DF E8324C0000              	call malloc
 19987 0000C0E4 50                      	push rax
 19988 0000C0E5 BF08000000              	mov rdi, 8 * 1	; extended env
 19989 0000C0EA E8274C0000              	call malloc
 19990 0000C0EF 488B7D10                	mov rdi, ENV
 19991 0000C0F3 BE00000000              	mov rsi, 0
 19992 0000C0F8 BA01000000              	mov rdx, 1
 19993                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
 19994 0000C0FD 4883FE00                	cmp rsi, 0
 19995 0000C101 7410                    	je .L_lambda_simple_env_end_006e
 19996 0000C103 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19997 0000C107 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19998 0000C10B 48FFC6                  	inc rsi
 19999 0000C10E 48FFC2                  	inc rdx
 20000 0000C111 EBEA                    	jmp .L_lambda_simple_env_loop_006e
 20001                                  .L_lambda_simple_env_end_006e:
 20002 0000C113 5B                      	pop rbx
 20003 0000C114 BE00000000              	mov rsi, 0
 20004                                  .L_lambda_simple_params_loop_006e:	; copy params
 20005 0000C119 4883FE00                	cmp rsi, 0
 20006 0000C11D 740E                    	je .L_lambda_simple_params_end_006e
 20007 0000C11F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20008 0000C124 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20009 0000C128 48FFC6                  	inc rsi
 20010 0000C12B EBEC                    	jmp .L_lambda_simple_params_loop_006e
 20011                                  .L_lambda_simple_params_end_006e:
 20012 0000C12D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20013 0000C130 4889C3                  	mov rbx, rax
 20014 0000C133 58                      	pop rax
 20015 0000C134 C60005                  	mov byte [rax], T_closure
 20016 0000C137 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20017 0000C13B 48C74009[48C10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
 20018 0000C143 E907010000              	jmp .L_lambda_simple_end_006e
 20019                                  .L_lambda_simple_code_006e:	; lambda-simple body
 20020 0000C148 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20021 0000C14E 740B                    	je .L_lambda_simple_arity_check_ok_00f6
 20022 0000C150 FF742410                	push qword [rsp + 8 * 2]
 20023 0000C154 6A01                    	push 1
 20024 0000C156 E9744B0000              	jmp L_error_incorrect_arity_simple
 20025                                  .L_lambda_simple_arity_check_ok_00f6:
 20026 0000C15B C8000000                	enter 0, 0
 20027 0000C15F 488B0425[70030000]      	mov rax, qword [free_var_110]
 20028 0000C167 50                      	push rax
 20029 0000C168 488B0425[60030000]      	mov rax, qword [free_var_108]
 20030 0000C170 50                      	push rax
 20031 0000C171 6A02                    	push 2
 20032 0000C173 488B4520                mov rax, qword [rbp + 32]
 20033 0000C177 803805                  	cmp byte [rax], T_closure 
 20034 0000C17A 0F851E5B0000                    jne L_code_ptr_error
 20035                                  
 20036 0000C180 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20037                                  
 20038 0000C184 53                              push rbx
 20039                                  
 20040 0000C185 FF5009                          call SOB_CLOSURE_CODE(rax)
 20041                                  
 20042 0000C188 48890425[E0030000]              	mov qword [free_var_124], rax
 20043 0000C190 48B8-                   	mov rax, sob_void
 20043 0000C192 [0000000000000000] 
 20044                                  
 20045 0000C19A 488B0425[A8030000]      	mov rax, qword [free_var_117]
 20046 0000C1A2 50                      	push rax
 20047 0000C1A3 488B0425[98030000]      	mov rax, qword [free_var_115]
 20048 0000C1AB 50                      	push rax
 20049 0000C1AC 6A02                    	push 2
 20050 0000C1AE 488B4520                mov rax, qword [rbp + 32]
 20051 0000C1B2 803805                  	cmp byte [rax], T_closure 
 20052 0000C1B5 0F85E35A0000                    jne L_code_ptr_error
 20053                                  
 20054 0000C1BB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20055                                  
 20056 0000C1BF 53                              push rbx
 20057                                  
 20058 0000C1C0 FF5009                          call SOB_CLOSURE_CODE(rax)
 20059                                  
 20060 0000C1C3 48890425[08040000]              	mov qword [free_var_129], rax
 20061 0000C1CB 48B8-                   	mov rax, sob_void
 20061 0000C1CD [0000000000000000] 
 20062                                  
 20063 0000C1D5 488B0425[70030000]      	mov rax, qword [free_var_110]
 20064 0000C1DD 50                      	push rax
 20065 0000C1DE 488B0425[78030000]      	mov rax, qword [free_var_111]
 20066 0000C1E6 50                      	push rax
 20067 0000C1E7 6A02                    	push 2
 20068 0000C1E9 488B4520                mov rax, qword [rbp + 32]
 20069 0000C1ED 803805                  	cmp byte [rax], T_closure 
 20070 0000C1F0 0F85A85A0000                    jne L_code_ptr_error
 20071                                  
 20072 0000C1F6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20073                                  
 20074 0000C1FA 53                              push rbx
 20075                                  
 20076 0000C1FB FF5009                          call SOB_CLOSURE_CODE(rax)
 20077                                  
 20078 0000C1FE 48890425[00040000]              	mov qword [free_var_128], rax
 20079 0000C206 48B8-                   	mov rax, sob_void
 20079 0000C208 [0000000000000000] 
 20080                                  
 20081 0000C210 488B0425[A8030000]      	mov rax, qword [free_var_117]
 20082 0000C218 50                      	push rax
 20083 0000C219 488B0425[B0030000]      	mov rax, qword [free_var_118]
 20084 0000C221 50                      	push rax
 20085 0000C222 6A02                    	push 2
 20086 0000C224 488B4520                mov rax, qword [rbp + 32]
 20087 0000C228 803805                  	cmp byte [rax], T_closure 
 20088 0000C22B 0F856D5A0000                    jne L_code_ptr_error
 20089                                  
 20090 0000C231 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20091                                  
 20092 0000C235 53                              push rbx
 20093                                  
 20094 0000C236 FF5009                          call SOB_CLOSURE_CODE(rax)
 20095                                  
 20096 0000C239 48890425[28040000]              	mov qword [free_var_133], rax
 20097 0000C241 48B8-                   	mov rax, sob_void
 20097 0000C243 [0000000000000000] 
 20098 0000C24B C9                      	leave
 20099 0000C24C C21800                  	ret 8 * (2 + 1)
 20100                                  .L_lambda_simple_end_006e:	; new closure is in rax
 20101 0000C24F 803805                  	cmp byte [rax], T_closure 
 20102 0000C252 0F85465A0000                    jne L_code_ptr_error
 20103                                  
 20104 0000C258 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20105                                  
 20106 0000C25C 53                              push rbx
 20107                                  
 20108 0000C25D FF5009                          call SOB_CLOSURE_CODE(rax)
 20109                                  
 20110                                          
 20111 0000C260 4889C7                  	mov rdi, rax
 20112 0000C263 E8BF4A0000              	call print_sexpr_if_not_void
 20113                                  
 20114 0000C268 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20115 0000C26D E8A44A0000              	call malloc
 20116 0000C272 50                      	push rax
 20117 0000C273 BF00000000              	mov rdi, 8 * 0	; new rib
 20118 0000C278 E8994A0000              	call malloc
 20119 0000C27D 50                      	push rax
 20120 0000C27E BF08000000              	mov rdi, 8 * 1	; extended env
 20121 0000C283 E88E4A0000              	call malloc
 20122 0000C288 488B7D10                	mov rdi, ENV
 20123 0000C28C BE00000000              	mov rsi, 0
 20124 0000C291 BA01000000              	mov rdx, 1
 20125                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
 20126 0000C296 4883FE00                	cmp rsi, 0
 20127 0000C29A 7410                    	je .L_lambda_simple_env_end_006f
 20128 0000C29C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20129 0000C2A0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20130 0000C2A4 48FFC6                  	inc rsi
 20131 0000C2A7 48FFC2                  	inc rdx
 20132 0000C2AA EBEA                    	jmp .L_lambda_simple_env_loop_006f
 20133                                  .L_lambda_simple_env_end_006f:
 20134 0000C2AC 5B                      	pop rbx
 20135 0000C2AD BE00000000              	mov rsi, 0
 20136                                  .L_lambda_simple_params_loop_006f:	; copy params
 20137 0000C2B2 4883FE00                	cmp rsi, 0
 20138 0000C2B6 740E                    	je .L_lambda_simple_params_end_006f
 20139 0000C2B8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20140 0000C2BD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20141 0000C2C1 48FFC6                  	inc rsi
 20142 0000C2C4 EBEC                    	jmp .L_lambda_simple_params_loop_006f
 20143                                  .L_lambda_simple_params_end_006f:
 20144 0000C2C6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20145 0000C2C9 4889C3                  	mov rbx, rax
 20146 0000C2CC 58                      	pop rax
 20147 0000C2CD C60005                  	mov byte [rax], T_closure
 20148 0000C2D0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20149 0000C2D4 48C74009[E1C20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
 20150 0000C2DC E9980C0000              	jmp .L_lambda_simple_end_006f
 20151                                  .L_lambda_simple_code_006f:	; lambda-simple body
 20152 0000C2E1 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20153 0000C2E7 740B                    	je .L_lambda_simple_arity_check_ok_00f7
 20154 0000C2E9 FF742410                	push qword [rsp + 8 * 2]
 20155 0000C2ED 6A02                    	push 2
 20156 0000C2EF E9DB490000              	jmp L_error_incorrect_arity_simple
 20157                                  .L_lambda_simple_arity_check_ok_00f7:
 20158 0000C2F4 C8000000                	enter 0, 0
 20159 0000C2F8 48B8-                   	mov rax, qword (L_constants + 22)
 20159 0000C2FA [1600000000000000] 
 20160 0000C302 50                      	push rax
 20161 0000C303 6A01                    	push 1
 20162 0000C305 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20163 0000C30A E8074A0000              	call malloc
 20164 0000C30F 50                      	push rax
 20165 0000C310 BF10000000              	mov rdi, 8 * 2	; new rib
 20166 0000C315 E8FC490000              	call malloc
 20167 0000C31A 50                      	push rax
 20168 0000C31B BF10000000              	mov rdi, 8 * 2	; extended env
 20169 0000C320 E8F1490000              	call malloc
 20170 0000C325 488B7D10                	mov rdi, ENV
 20171 0000C329 BE00000000              	mov rsi, 0
 20172 0000C32E BA01000000              	mov rdx, 1
 20173                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
 20174 0000C333 4883FE01                	cmp rsi, 1
 20175 0000C337 7410                    	je .L_lambda_simple_env_end_0070
 20176 0000C339 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20177 0000C33D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20178 0000C341 48FFC6                  	inc rsi
 20179 0000C344 48FFC2                  	inc rdx
 20180 0000C347 EBEA                    	jmp .L_lambda_simple_env_loop_0070
 20181                                  .L_lambda_simple_env_end_0070:
 20182 0000C349 5B                      	pop rbx
 20183 0000C34A BE00000000              	mov rsi, 0
 20184                                  .L_lambda_simple_params_loop_0070:	; copy params
 20185 0000C34F 4883FE02                	cmp rsi, 2
 20186 0000C353 740E                    	je .L_lambda_simple_params_end_0070
 20187 0000C355 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20188 0000C35A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20189 0000C35E 48FFC6                  	inc rsi
 20190 0000C361 EBEC                    	jmp .L_lambda_simple_params_loop_0070
 20191                                  .L_lambda_simple_params_end_0070:
 20192 0000C363 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20193 0000C366 4889C3                  	mov rbx, rax
 20194 0000C369 58                      	pop rax
 20195 0000C36A C60005                  	mov byte [rax], T_closure
 20196 0000C36D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20197 0000C371 48C74009[7EC30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
 20198 0000C379 E99E0B0000              	jmp .L_lambda_simple_end_0070
 20199                                  .L_lambda_simple_code_0070:	; lambda-simple body
 20200 0000C37E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20201 0000C384 740B                    	je .L_lambda_simple_arity_check_ok_00f8
 20202 0000C386 FF742410                	push qword [rsp + 8 * 2]
 20203 0000C38A 6A01                    	push 1
 20204 0000C38C E93E490000              	jmp L_error_incorrect_arity_simple
 20205                                  .L_lambda_simple_arity_check_ok_00f8:
 20206 0000C391 C8000000                	enter 0, 0
 20207 0000C395 BF08000000              mov rdi, 8
 20208 0000C39A E877490000              call malloc
 20209 0000C39F 4889C3                  mov rbx, rax
 20210 0000C3A2 488B4520                mov rax, qword [rbp + 32]
 20211 0000C3A6 488903                  mov qword [rbx], rax
 20212 0000C3A9 4889D8                  mov rax, rbx
 20213 0000C3AC 48894520                mov qword [rbp + 32], rax
 20214 0000C3B0 48B8-                   mov rax, sob_void
 20214 0000C3B2 [0000000000000000] 
 20215 0000C3BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20216 0000C3BF E852490000              	call malloc
 20217 0000C3C4 50                      	push rax
 20218 0000C3C5 BF08000000              	mov rdi, 8 * 1	; new rib
 20219 0000C3CA E847490000              	call malloc
 20220 0000C3CF 50                      	push rax
 20221 0000C3D0 BF18000000              	mov rdi, 8 * 3	; extended env
 20222 0000C3D5 E83C490000              	call malloc
 20223 0000C3DA 488B7D10                	mov rdi, ENV
 20224 0000C3DE BE00000000              	mov rsi, 0
 20225 0000C3E3 BA01000000              	mov rdx, 1
 20226                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
 20227 0000C3E8 4883FE02                	cmp rsi, 2
 20228 0000C3EC 7410                    	je .L_lambda_simple_env_end_0071
 20229 0000C3EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20230 0000C3F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20231 0000C3F6 48FFC6                  	inc rsi
 20232 0000C3F9 48FFC2                  	inc rdx
 20233 0000C3FC EBEA                    	jmp .L_lambda_simple_env_loop_0071
 20234                                  .L_lambda_simple_env_end_0071:
 20235 0000C3FE 5B                      	pop rbx
 20236 0000C3FF BE00000000              	mov rsi, 0
 20237                                  .L_lambda_simple_params_loop_0071:	; copy params
 20238 0000C404 4883FE01                	cmp rsi, 1
 20239 0000C408 740E                    	je .L_lambda_simple_params_end_0071
 20240 0000C40A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20241 0000C40F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20242 0000C413 48FFC6                  	inc rsi
 20243 0000C416 EBEC                    	jmp .L_lambda_simple_params_loop_0071
 20244                                  .L_lambda_simple_params_end_0071:
 20245 0000C418 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20246 0000C41B 4889C3                  	mov rbx, rax
 20247 0000C41E 58                      	pop rax
 20248 0000C41F C60005                  	mov byte [rax], T_closure
 20249 0000C422 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20250 0000C426 48C74009[33C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
 20251 0000C42E E92A020000              	jmp .L_lambda_simple_end_0071
 20252                                  .L_lambda_simple_code_0071:	; lambda-simple body
 20253 0000C433 48837C241005            	cmp qword [rsp + 8 * 2], 5
 20254 0000C439 740B                    	je .L_lambda_simple_arity_check_ok_00f9
 20255 0000C43B FF742410                	push qword [rsp + 8 * 2]
 20256 0000C43F 6A05                    	push 5
 20257 0000C441 E989480000              	jmp L_error_incorrect_arity_simple
 20258                                  .L_lambda_simple_arity_check_ok_00f9:
 20259 0000C446 C8000000                	enter 0, 0
 20260 0000C44A 488B4530                mov rax, qword [rbp + 48]
 20261 0000C44E 50                      	push rax
 20262 0000C44F 488B4520                mov rax, qword [rbp + 32]
 20263 0000C453 50                      	push rax
 20264 0000C454 6A02                    	push 2
 20265 0000C456 488B0425[50030000]      	mov rax, qword [free_var_106]
 20266 0000C45E 803805                  	cmp byte [rax], T_closure 
 20267 0000C461 0F8537580000                    jne L_code_ptr_error
 20268                                  
 20269 0000C467 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20270                                  
 20271 0000C46B 53                              push rbx
 20272                                  
 20273 0000C46C FF5009                          call SOB_CLOSURE_CODE(rax)
 20274                                  
 20275 0000C46F 483D[02000000]                  	cmp rax, sob_boolean_false
 20276 0000C475 0F85DE010000            	jne .L_or_end_0008
 20277 0000C47B 488B4520                mov rax, qword [rbp + 32]
 20278 0000C47F 50                      	push rax
 20279 0000C480 488B4538                mov rax, qword [rbp + 56]
 20280 0000C484 50                      	push rax
 20281 0000C485 6A02                    	push 2
 20282 0000C487 488B0425[78010000]      	mov rax, qword [free_var_47]
 20283 0000C48F 803805                  	cmp byte [rax], T_closure 
 20284 0000C492 0F8506580000                    jne L_code_ptr_error
 20285                                  
 20286 0000C498 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20287                                  
 20288 0000C49C 53                              push rbx
 20289                                  
 20290 0000C49D FF5009                          call SOB_CLOSURE_CODE(rax)
 20291                                  
 20292 0000C4A0 50                              	push rax
 20293 0000C4A1 488B4520                mov rax, qword [rbp + 32]
 20294 0000C4A5 50                      	push rax
 20295 0000C4A6 488B4528                mov rax, qword [rbp + 40]
 20296 0000C4AA 50                      	push rax
 20297 0000C4AB 6A02                    	push 2
 20298 0000C4AD 488B0425[78010000]      	mov rax, qword [free_var_47]
 20299 0000C4B5 803805                  	cmp byte [rax], T_closure 
 20300 0000C4B8 0F85E0570000                    jne L_code_ptr_error
 20301                                  
 20302 0000C4BE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20303                                  
 20304 0000C4C2 53                              push rbx
 20305                                  
 20306 0000C4C3 FF5009                          call SOB_CLOSURE_CODE(rax)
 20307                                  
 20308 0000C4C6 50                              	push rax
 20309 0000C4C7 6A02                    	push 2
 20310 0000C4C9 488B4510                mov rax, qword [rbp + 16]
 20311 0000C4CD 488B4008                mov rax, qword [rax + 8]
 20312 0000C4D1 488B00                  mov rax, qword [rax + 0]
 20313 0000C4D4 803805                  	cmp byte [rax], T_closure 
 20314 0000C4D7 0F85C1570000                    jne L_code_ptr_error
 20315                                  
 20316 0000C4DD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20317                                  
 20318 0000C4E1 53                              push rbx
 20319                                  
 20320 0000C4E2 FF5009                          call SOB_CLOSURE_CODE(rax)
 20321                                  
 20322 0000C4E5 483D[02000000]                  	cmp rax, sob_boolean_false
 20323 0000C4EB 0F8568010000            	jne .L_or_end_0008
 20324 0000C4F1 488B4530                mov rax, qword [rbp + 48]
 20325 0000C4F5 50                      	push rax
 20326 0000C4F6 488B4520                mov rax, qword [rbp + 32]
 20327 0000C4FA 50                      	push rax
 20328 0000C4FB 6A02                    	push 2
 20329 0000C4FD 488B0425[30030000]      	mov rax, qword [free_var_102]
 20330 0000C505 803805                  	cmp byte [rax], T_closure 
 20331 0000C508 0F8590570000                    jne L_code_ptr_error
 20332                                  
 20333 0000C50E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20334                                  
 20335 0000C512 53                              push rbx
 20336                                  
 20337 0000C513 FF5009                          call SOB_CLOSURE_CODE(rax)
 20338                                  
 20339 0000C516 483D[02000000]                  	cmp rax, sob_boolean_false
 20340 0000C51C 0F842D010000            	je .L_if_else_003f
 20341 0000C522 488B4520                mov rax, qword [rbp + 32]
 20342 0000C526 50                      	push rax
 20343 0000C527 488B4538                mov rax, qword [rbp + 56]
 20344 0000C52B 50                      	push rax
 20345 0000C52C 6A02                    	push 2
 20346 0000C52E 488B0425[78010000]      	mov rax, qword [free_var_47]
 20347 0000C536 803805                  	cmp byte [rax], T_closure 
 20348 0000C539 0F855F570000                    jne L_code_ptr_error
 20349                                  
 20350 0000C53F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20351                                  
 20352 0000C543 53                              push rbx
 20353                                  
 20354 0000C544 FF5009                          call SOB_CLOSURE_CODE(rax)
 20355                                  
 20356 0000C547 50                              	push rax
 20357 0000C548 488B4520                mov rax, qword [rbp + 32]
 20358 0000C54C 50                      	push rax
 20359 0000C54D 488B4528                mov rax, qword [rbp + 40]
 20360 0000C551 50                      	push rax
 20361 0000C552 6A02                    	push 2
 20362 0000C554 488B0425[78010000]      	mov rax, qword [free_var_47]
 20363 0000C55C 803805                  	cmp byte [rax], T_closure 
 20364 0000C55F 0F8539570000                    jne L_code_ptr_error
 20365                                  
 20366 0000C565 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20367                                  
 20368 0000C569 53                              push rbx
 20369                                  
 20370 0000C56A FF5009                          call SOB_CLOSURE_CODE(rax)
 20371                                  
 20372 0000C56D 50                              	push rax
 20373 0000C56E 6A02                    	push 2
 20374 0000C570 488B4510                mov rax, qword [rbp + 16]
 20375 0000C574 488B4008                mov rax, qword [rax + 8]
 20376 0000C578 488B4008                mov rax, qword [rax + 8]
 20377 0000C57C 803805                  	cmp byte [rax], T_closure 
 20378 0000C57F 0F8519570000                    jne L_code_ptr_error
 20379                                  
 20380 0000C585 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20381                                  
 20382 0000C589 53                              push rbx
 20383                                  
 20384 0000C58A FF5009                          call SOB_CLOSURE_CODE(rax)
 20385                                  
 20386 0000C58D 483D[02000000]                  	cmp rax, sob_boolean_false
 20387 0000C593 0F84AA000000            	je .L_if_else_0040
 20388 0000C599 488B4540                mov rax, qword [rbp + 64]
 20389 0000C59D 50                      	push rax
 20390 0000C59E 488B4538                mov rax, qword [rbp + 56]
 20391 0000C5A2 50                      	push rax
 20392 0000C5A3 488B4530                mov rax, qword [rbp + 48]
 20393 0000C5A7 50                      	push rax
 20394 0000C5A8 488B4528                mov rax, qword [rbp + 40]
 20395 0000C5AC 50                      	push rax
 20396 0000C5AD 48B8-                   	mov rax, qword (L_constants + 127)
 20396 0000C5AF [7F00000000000000] 
 20397 0000C5B7 50                      	push rax
 20398 0000C5B8 488B4520                mov rax, qword [rbp + 32]
 20399 0000C5BC 50                      	push rax
 20400 0000C5BD 6A02                    	push 2
 20401 0000C5BF 488B0425[08030000]      	mov rax, qword [free_var_97]
 20402 0000C5C7 803805                  	cmp byte [rax], T_closure 
 20403 0000C5CA 0F85CE560000                    jne L_code_ptr_error
 20404                                  
 20405 0000C5D0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20406                                  
 20407 0000C5D4 53                              push rbx
 20408                                  
 20409 0000C5D5 FF5009                          call SOB_CLOSURE_CODE(rax)
 20410                                  
 20411 0000C5D8 50                              	push rax
 20412 0000C5D9 6A05                    	push 5
 20413 0000C5DB 488B4510                mov rax, qword [rbp + 16]
 20414 0000C5DF 488B00                  mov rax, qword [rax + 0]
 20415 0000C5E2 488B00                  mov rax, qword [rax + 0]
 20416 0000C5E5 488B00                  	mov rax, qword [rax]
 20417                                  .L_lambda_simple_arity_check_ok_00fa:
 20418 0000C5E8 803805                  	cmp byte [rax], T_closure
 20419                                  
 20420 0000C5EB 0F85AD560000                    jne L_code_ptr_error                      ; rax <- proc
 20421                                  
 20422                                  
 20423 0000C5F1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 20424                                  
 20425 0000C5F5 53                              push rbx                                  ; env pushed
 20426                                  
 20427 0000C5F6 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 20428                                  
 20429                                  
 20430 0000C5F9 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 20431                                  
 20432                                          
 20433                                          
 20434 0000C5FC 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 20435                                  
 20436 0000C600 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 20437                                  
 20438                                  
 20439 0000C605 4D89CA                          mov r10, r9
 20440 0000C608 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 20441                                  
 20442                                                                                         
 20443 0000C60C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 20444 0000C60F 4983C404                        add r12, 4
 20445                                  
 20446 0000C613 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 20447                                  .L_tc_recycle_frame_loop_0089:
 20448 0000C619 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 20449                                  
 20450 0000C61D 4E8974E500                      mov [rbp + (r12 * 8)], r14
 20451                                  
 20452                                  
 20453                                  
 20454 0000C622 41BE00000000                    mov r14, 0                                ; clean box
 20455                                  
 20456                                  
 20457                                                                  
 20458 0000C628 4983C2FF                        add r10, -1                               ; args_copied_counter--
 20459                                  
 20460 0000C62C 4983C4FF                        add r12, -1 
 20461                                  
 20462 0000C630 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 20463 0000C634 75E3                    	jne .L_tc_recycle_frame_loop_0089
 20464                                  .L_tc_recycle_frame_done_0089:
 20465 0000C636 5D                      	pop rbp                                  ; restore the old rbp
 20466                                  
 20467 0000C637 488B4D00                        mov rcx, qword [rbp]
 20468 0000C63B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 20469                                            ; rbx <- code(proc)
 20470                                  
 20471 0000C63F FFE3                            jmp rbx
 20472 0000C641 EB0A                    	jmp .L_if_end_0040
 20473                                  	.L_if_else_0040:
 20474 0000C643 48B8-                   		mov rax, qword (L_constants + 2)
 20474 0000C645 [0200000000000000] 
 20475                                  	.L_if_end_0040:
 20476 0000C64D EB0A                    	jmp .L_if_end_003f
 20477                                  	.L_if_else_003f:
 20478 0000C64F 48B8-                   		mov rax, qword (L_constants + 2)
 20478 0000C651 [0200000000000000] 
 20479                                  	.L_if_end_003f:
 20480                                  .L_or_end_0008:
 20481 0000C659 C9                      	leave
 20482 0000C65A C23800                  	ret 8 * (2 + 5)
 20483                                  .L_lambda_simple_end_0071:	; new closure is in rax
 20484 0000C65D 50                      push rax
 20485 0000C65E 488B4520                mov rax, qword [rbp + 32]
 20486 0000C662 8F00                    pop qword [rax]
 20487 0000C664 48B8-                   mov rax, sob_void
 20487 0000C666 [0000000000000000] 
 20488                                  
 20489 0000C66E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20490 0000C673 E89E460000              	call malloc
 20491 0000C678 50                      	push rax
 20492 0000C679 BF08000000              	mov rdi, 8 * 1	; new rib
 20493 0000C67E E893460000              	call malloc
 20494 0000C683 50                      	push rax
 20495 0000C684 BF18000000              	mov rdi, 8 * 3	; extended env
 20496 0000C689 E888460000              	call malloc
 20497 0000C68E 488B7D10                	mov rdi, ENV
 20498 0000C692 BE00000000              	mov rsi, 0
 20499 0000C697 BA01000000              	mov rdx, 1
 20500                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
 20501 0000C69C 4883FE02                	cmp rsi, 2
 20502 0000C6A0 7410                    	je .L_lambda_simple_env_end_0072
 20503 0000C6A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20504 0000C6A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20505 0000C6AA 48FFC6                  	inc rsi
 20506 0000C6AD 48FFC2                  	inc rdx
 20507 0000C6B0 EBEA                    	jmp .L_lambda_simple_env_loop_0072
 20508                                  .L_lambda_simple_env_end_0072:
 20509 0000C6B2 5B                      	pop rbx
 20510 0000C6B3 BE00000000              	mov rsi, 0
 20511                                  .L_lambda_simple_params_loop_0072:	; copy params
 20512 0000C6B8 4883FE01                	cmp rsi, 1
 20513 0000C6BC 740E                    	je .L_lambda_simple_params_end_0072
 20514 0000C6BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20515 0000C6C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20516 0000C6C7 48FFC6                  	inc rsi
 20517 0000C6CA EBEC                    	jmp .L_lambda_simple_params_loop_0072
 20518                                  .L_lambda_simple_params_end_0072:
 20519 0000C6CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20520 0000C6CF 4889C3                  	mov rbx, rax
 20521 0000C6D2 58                      	pop rax
 20522 0000C6D3 C60005                  	mov byte [rax], T_closure
 20523 0000C6D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20524 0000C6DA 48C74009[E7C60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
 20525 0000C6E2 E9AC020000              	jmp .L_lambda_simple_end_0072
 20526                                  .L_lambda_simple_code_0072:	; lambda-simple body
 20527 0000C6E7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20528 0000C6ED 740B                    	je .L_lambda_simple_arity_check_ok_00fb
 20529 0000C6EF FF742410                	push qword [rsp + 8 * 2]
 20530 0000C6F3 6A02                    	push 2
 20531 0000C6F5 E9D5450000              	jmp L_error_incorrect_arity_simple
 20532                                  .L_lambda_simple_arity_check_ok_00fb:
 20533 0000C6FA C8000000                	enter 0, 0
 20534 0000C6FE 488B4528                mov rax, qword [rbp + 40]
 20535 0000C702 50                      	push rax
 20536 0000C703 6A01                    	push 1
 20537 0000C705 488B0425[90000000]      	mov rax, qword [free_var_18]
 20538 0000C70D 803805                  	cmp byte [rax], T_closure 
 20539 0000C710 0F8588550000                    jne L_code_ptr_error
 20540                                  
 20541 0000C716 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20542                                  
 20543 0000C71A 53                              push rbx
 20544                                  
 20545 0000C71B FF5009                          call SOB_CLOSURE_CODE(rax)
 20546                                  
 20547 0000C71E 50                              	push rax
 20548 0000C71F 488B4520                mov rax, qword [rbp + 32]
 20549 0000C723 50                      	push rax
 20550 0000C724 6A01                    	push 1
 20551 0000C726 488B0425[90000000]      	mov rax, qword [free_var_18]
 20552 0000C72E 803805                  	cmp byte [rax], T_closure 
 20553 0000C731 0F8567550000                    jne L_code_ptr_error
 20554                                  
 20555 0000C737 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20556                                  
 20557 0000C73B 53                              push rbx
 20558                                  
 20559 0000C73C FF5009                          call SOB_CLOSURE_CODE(rax)
 20560                                  
 20561 0000C73F 50                              	push rax
 20562 0000C740 6A02                    	push 2
 20563 0000C742 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20564 0000C747 E8CA450000              	call malloc
 20565 0000C74C 50                      	push rax
 20566 0000C74D BF10000000              	mov rdi, 8 * 2	; new rib
 20567 0000C752 E8BF450000              	call malloc
 20568 0000C757 50                      	push rax
 20569 0000C758 BF20000000              	mov rdi, 8 * 4	; extended env
 20570 0000C75D E8B4450000              	call malloc
 20571 0000C762 488B7D10                	mov rdi, ENV
 20572 0000C766 BE00000000              	mov rsi, 0
 20573 0000C76B BA01000000              	mov rdx, 1
 20574                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
 20575 0000C770 4883FE03                	cmp rsi, 3
 20576 0000C774 7410                    	je .L_lambda_simple_env_end_0073
 20577 0000C776 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20578 0000C77A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20579 0000C77E 48FFC6                  	inc rsi
 20580 0000C781 48FFC2                  	inc rdx
 20581 0000C784 EBEA                    	jmp .L_lambda_simple_env_loop_0073
 20582                                  .L_lambda_simple_env_end_0073:
 20583 0000C786 5B                      	pop rbx
 20584 0000C787 BE00000000              	mov rsi, 0
 20585                                  .L_lambda_simple_params_loop_0073:	; copy params
 20586 0000C78C 4883FE02                	cmp rsi, 2
 20587 0000C790 740E                    	je .L_lambda_simple_params_end_0073
 20588 0000C792 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20589 0000C797 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20590 0000C79B 48FFC6                  	inc rsi
 20591 0000C79E EBEC                    	jmp .L_lambda_simple_params_loop_0073
 20592                                  .L_lambda_simple_params_end_0073:
 20593 0000C7A0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20594 0000C7A3 4889C3                  	mov rbx, rax
 20595 0000C7A6 58                      	pop rax
 20596 0000C7A7 C60005                  	mov byte [rax], T_closure
 20597 0000C7AA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20598 0000C7AE 48C74009[BBC70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
 20599 0000C7B6 E97B010000              	jmp .L_lambda_simple_end_0073
 20600                                  .L_lambda_simple_code_0073:	; lambda-simple body
 20601 0000C7BB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20602 0000C7C1 740B                    	je .L_lambda_simple_arity_check_ok_00fc
 20603 0000C7C3 FF742410                	push qword [rsp + 8 * 2]
 20604 0000C7C7 6A02                    	push 2
 20605 0000C7C9 E901450000              	jmp L_error_incorrect_arity_simple
 20606                                  .L_lambda_simple_arity_check_ok_00fc:
 20607 0000C7CE C8000000                	enter 0, 0
 20608 0000C7D2 488B4528                mov rax, qword [rbp + 40]
 20609 0000C7D6 50                      	push rax
 20610 0000C7D7 488B4520                mov rax, qword [rbp + 32]
 20611 0000C7DB 50                      	push rax
 20612 0000C7DC 6A02                    	push 2
 20613 0000C7DE 488B0425[38030000]      	mov rax, qword [free_var_103]
 20614 0000C7E6 803805                  	cmp byte [rax], T_closure 
 20615 0000C7E9 0F85AF540000                    jne L_code_ptr_error
 20616                                  
 20617 0000C7EF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20618                                  
 20619 0000C7F3 53                              push rbx
 20620                                  
 20621 0000C7F4 FF5009                          call SOB_CLOSURE_CODE(rax)
 20622                                  
 20623 0000C7F7 483D[02000000]                  	cmp rax, sob_boolean_false
 20624 0000C7FD 0F849A000000            	je .L_if_else_0041
 20625 0000C803 488B4528                mov rax, qword [rbp + 40]
 20626 0000C807 50                      	push rax
 20627 0000C808 488B4510                mov rax, qword [rbp + 16]
 20628 0000C80C 488B00                  mov rax, qword [rax + 0]
 20629 0000C80F 488B4008                mov rax, qword [rax + 8]
 20630 0000C813 50                      	push rax
 20631 0000C814 488B4520                mov rax, qword [rbp + 32]
 20632 0000C818 50                      	push rax
 20633 0000C819 488B4510                mov rax, qword [rbp + 16]
 20634 0000C81D 488B00                  mov rax, qword [rax + 0]
 20635 0000C820 488B00                  mov rax, qword [rax + 0]
 20636 0000C823 50                      	push rax
 20637 0000C824 48B8-                   	mov rax, qword (L_constants + 31)
 20637 0000C826 [1F00000000000000] 
 20638 0000C82E 50                      	push rax
 20639 0000C82F 6A05                    	push 5
 20640 0000C831 488B4510                mov rax, qword [rbp + 16]
 20641 0000C835 488B4008                mov rax, qword [rax + 8]
 20642 0000C839 488B00                  mov rax, qword [rax + 0]
 20643 0000C83C 488B00                  	mov rax, qword [rax]
 20644                                  .L_lambda_simple_arity_check_ok_00fe:
 20645 0000C83F 803805                  	cmp byte [rax], T_closure
 20646                                  
 20647 0000C842 0F8556540000                    jne L_code_ptr_error                      ; rax <- proc
 20648                                  
 20649                                  
 20650 0000C848 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 20651                                  
 20652 0000C84C 53                              push rbx                                  ; env pushed
 20653                                  
 20654 0000C84D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 20655                                  
 20656                                  
 20657 0000C850 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 20658                                  
 20659                                          
 20660                                          
 20661 0000C853 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 20662                                  
 20663 0000C857 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 20664                                  
 20665                                  
 20666 0000C85C 4D89CA                          mov r10, r9
 20667 0000C85F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 20668                                  
 20669                                                                                         
 20670 0000C863 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 20671 0000C866 4983C404                        add r12, 4
 20672                                  
 20673 0000C86A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 20674                                  .L_tc_recycle_frame_loop_008b:
 20675 0000C870 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 20676                                  
 20677 0000C874 4E8974E500                      mov [rbp + (r12 * 8)], r14
 20678                                  
 20679                                  
 20680                                  
 20681 0000C879 41BE00000000                    mov r14, 0                                ; clean box
 20682                                  
 20683                                  
 20684                                                                  
 20685 0000C87F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 20686                                  
 20687 0000C883 4983C4FF                        add r12, -1 
 20688                                  
 20689 0000C887 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 20690 0000C88B 75E3                    	jne .L_tc_recycle_frame_loop_008b
 20691                                  .L_tc_recycle_frame_done_008b:
 20692 0000C88D 5D                      	pop rbp                                  ; restore the old rbp
 20693                                  
 20694 0000C88E 488B4D00                        mov rcx, qword [rbp]
 20695 0000C892 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 20696                                            ; rbx <- code(proc)
 20697                                  
 20698 0000C896 FFE3                            jmp rbx
 20699 0000C898 E995000000              	jmp .L_if_end_0041
 20700                                  	.L_if_else_0041:
 20701 0000C89D 488B4520                	mov rax, qword [rbp + 32]
 20702 0000C8A1 50                      	push rax
 20703 0000C8A2 488B4510                mov rax, qword [rbp + 16]
 20704 0000C8A6 488B00                  mov rax, qword [rax + 0]
 20705 0000C8A9 488B00                  mov rax, qword [rax + 0]
 20706 0000C8AC 50                      	push rax
 20707 0000C8AD 488B4528                mov rax, qword [rbp + 40]
 20708 0000C8B1 50                      	push rax
 20709 0000C8B2 488B4510                mov rax, qword [rbp + 16]
 20710 0000C8B6 488B00                  mov rax, qword [rax + 0]
 20711 0000C8B9 488B4008                mov rax, qword [rax + 8]
 20712 0000C8BD 50                      	push rax
 20713 0000C8BE 48B8-                   	mov rax, qword (L_constants + 31)
 20713 0000C8C0 [1F00000000000000] 
 20714 0000C8C8 50                      	push rax
 20715 0000C8C9 6A05                    	push 5
 20716 0000C8CB 488B4510                mov rax, qword [rbp + 16]
 20717 0000C8CF 488B4008                mov rax, qword [rax + 8]
 20718 0000C8D3 488B00                  mov rax, qword [rax + 0]
 20719 0000C8D6 488B00                  	mov rax, qword [rax]
 20720                                  .L_lambda_simple_arity_check_ok_00fd:
 20721 0000C8D9 803805                  	cmp byte [rax], T_closure
 20722                                  
 20723 0000C8DC 0F85BC530000                    jne L_code_ptr_error                      ; rax <- proc
 20724                                  
 20725                                  
 20726 0000C8E2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 20727                                  
 20728 0000C8E6 53                              push rbx                                  ; env pushed
 20729                                  
 20730 0000C8E7 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 20731                                  
 20732                                  
 20733 0000C8EA FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 20734                                  
 20735                                          
 20736                                          
 20737 0000C8ED 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 20738                                  
 20739 0000C8F1 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 20740                                  
 20741                                  
 20742 0000C8F6 4D89CA                          mov r10, r9
 20743 0000C8F9 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 20744                                  
 20745                                                                                         
 20746 0000C8FD 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 20747 0000C900 4983C404                        add r12, 4
 20748                                  
 20749 0000C904 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 20750                                  .L_tc_recycle_frame_loop_008a:
 20751 0000C90A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 20752                                  
 20753 0000C90E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 20754                                  
 20755                                  
 20756                                  
 20757 0000C913 41BE00000000                    mov r14, 0                                ; clean box
 20758                                  
 20759                                  
 20760                                                                  
 20761 0000C919 4983C2FF                        add r10, -1                               ; args_copied_counter--
 20762                                  
 20763 0000C91D 4983C4FF                        add r12, -1 
 20764                                  
 20765 0000C921 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 20766 0000C925 75E3                    	jne .L_tc_recycle_frame_loop_008a
 20767                                  .L_tc_recycle_frame_done_008a:
 20768 0000C927 5D                      	pop rbp                                  ; restore the old rbp
 20769                                  
 20770 0000C928 488B4D00                        mov rcx, qword [rbp]
 20771 0000C92C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 20772                                            ; rbx <- code(proc)
 20773                                  
 20774 0000C930 FFE3                            jmp rbx
 20775                                  	.L_if_end_0041:
 20776 0000C932 C9                      	leave
 20777 0000C933 C22000                  	ret 8 * (2 + 2)
 20778                                  .L_lambda_simple_end_0073:	; new closure is in rax
 20779                                  .L_lambda_simple_arity_check_ok_00ff:
 20780 0000C936 803805                  	cmp byte [rax], T_closure
 20781                                  
 20782 0000C939 0F855F530000                    jne L_code_ptr_error                      ; rax <- proc
 20783                                  
 20784                                  
 20785 0000C93F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 20786                                  
 20787 0000C943 53                              push rbx                                  ; env pushed
 20788                                  
 20789 0000C944 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 20790                                  
 20791                                  
 20792 0000C947 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 20793                                  
 20794                                          
 20795                                          
 20796 0000C94A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 20797                                  
 20798 0000C94E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 20799                                  
 20800                                  
 20801 0000C953 4D89CA                          mov r10, r9
 20802 0000C956 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 20803                                  
 20804                                                                                         
 20805 0000C95A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 20806 0000C95D 4983C404                        add r12, 4
 20807                                  
 20808 0000C961 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 20809                                  .L_tc_recycle_frame_loop_008c:
 20810 0000C967 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 20811                                  
 20812 0000C96B 4E8974E500                      mov [rbp + (r12 * 8)], r14
 20813                                  
 20814                                  
 20815                                  
 20816 0000C970 41BE00000000                    mov r14, 0                                ; clean box
 20817                                  
 20818                                  
 20819                                                                  
 20820 0000C976 4983C2FF                        add r10, -1                               ; args_copied_counter--
 20821                                  
 20822 0000C97A 4983C4FF                        add r12, -1 
 20823                                  
 20824 0000C97E 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 20825 0000C982 75E3                    	jne .L_tc_recycle_frame_loop_008c
 20826                                  .L_tc_recycle_frame_done_008c:
 20827 0000C984 5D                      	pop rbp                                  ; restore the old rbp
 20828                                  
 20829 0000C985 488B4D00                        mov rcx, qword [rbp]
 20830 0000C989 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 20831                                            ; rbx <- code(proc)
 20832                                  
 20833 0000C98D FFE3                            jmp rbx
 20834 0000C98F C9                      	leave
 20835 0000C990 C22000                  	ret 8 * (2 + 2)
 20836                                  .L_lambda_simple_end_0072:	; new closure is in rax
 20837 0000C993 50                      	push rax
 20838 0000C994 6A01                    	push 1
 20839 0000C996 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20840 0000C99B E876430000              	call malloc
 20841 0000C9A0 50                      	push rax
 20842 0000C9A1 BF08000000              	mov rdi, 8 * 1	; new rib
 20843 0000C9A6 E86B430000              	call malloc
 20844 0000C9AB 50                      	push rax
 20845 0000C9AC BF18000000              	mov rdi, 8 * 3	; extended env
 20846 0000C9B1 E860430000              	call malloc
 20847 0000C9B6 488B7D10                	mov rdi, ENV
 20848 0000C9BA BE00000000              	mov rsi, 0
 20849 0000C9BF BA01000000              	mov rdx, 1
 20850                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
 20851 0000C9C4 4883FE02                	cmp rsi, 2
 20852 0000C9C8 7410                    	je .L_lambda_simple_env_end_0074
 20853 0000C9CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20854 0000C9CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20855 0000C9D2 48FFC6                  	inc rsi
 20856 0000C9D5 48FFC2                  	inc rdx
 20857 0000C9D8 EBEA                    	jmp .L_lambda_simple_env_loop_0074
 20858                                  .L_lambda_simple_env_end_0074:
 20859 0000C9DA 5B                      	pop rbx
 20860 0000C9DB BE00000000              	mov rsi, 0
 20861                                  .L_lambda_simple_params_loop_0074:	; copy params
 20862 0000C9E0 4883FE01                	cmp rsi, 1
 20863 0000C9E4 740E                    	je .L_lambda_simple_params_end_0074
 20864 0000C9E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20865 0000C9EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20866 0000C9EF 48FFC6                  	inc rsi
 20867 0000C9F2 EBEC                    	jmp .L_lambda_simple_params_loop_0074
 20868                                  .L_lambda_simple_params_end_0074:
 20869 0000C9F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20870 0000C9F7 4889C3                  	mov rbx, rax
 20871 0000C9FA 58                      	pop rax
 20872 0000C9FB C60005                  	mov byte [rax], T_closure
 20873 0000C9FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20874 0000CA02 48C74009[0FCA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
 20875 0000CA0A E9B0040000              	jmp .L_lambda_simple_end_0074
 20876                                  .L_lambda_simple_code_0074:	; lambda-simple body
 20877 0000CA0F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20878 0000CA15 740B                    	je .L_lambda_simple_arity_check_ok_0100
 20879 0000CA17 FF742410                	push qword [rsp + 8 * 2]
 20880 0000CA1B 6A01                    	push 1
 20881 0000CA1D E9AD420000              	jmp L_error_incorrect_arity_simple
 20882                                  .L_lambda_simple_arity_check_ok_0100:
 20883 0000CA22 C8000000                	enter 0, 0
 20884 0000CA26 48B8-                   	mov rax, qword (L_constants + 22)
 20884 0000CA28 [1600000000000000] 
 20885 0000CA30 50                      	push rax
 20886 0000CA31 6A01                    	push 1
 20887 0000CA33 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20888 0000CA38 E8D9420000              	call malloc
 20889 0000CA3D 50                      	push rax
 20890 0000CA3E BF08000000              	mov rdi, 8 * 1	; new rib
 20891 0000CA43 E8CE420000              	call malloc
 20892 0000CA48 50                      	push rax
 20893 0000CA49 BF20000000              	mov rdi, 8 * 4	; extended env
 20894 0000CA4E E8C3420000              	call malloc
 20895 0000CA53 488B7D10                	mov rdi, ENV
 20896 0000CA57 BE00000000              	mov rsi, 0
 20897 0000CA5C BA01000000              	mov rdx, 1
 20898                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
 20899 0000CA61 4883FE03                	cmp rsi, 3
 20900 0000CA65 7410                    	je .L_lambda_simple_env_end_0075
 20901 0000CA67 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20902 0000CA6B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20903 0000CA6F 48FFC6                  	inc rsi
 20904 0000CA72 48FFC2                  	inc rdx
 20905 0000CA75 EBEA                    	jmp .L_lambda_simple_env_loop_0075
 20906                                  .L_lambda_simple_env_end_0075:
 20907 0000CA77 5B                      	pop rbx
 20908 0000CA78 BE00000000              	mov rsi, 0
 20909                                  .L_lambda_simple_params_loop_0075:	; copy params
 20910 0000CA7D 4883FE01                	cmp rsi, 1
 20911 0000CA81 740E                    	je .L_lambda_simple_params_end_0075
 20912 0000CA83 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20913 0000CA88 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20914 0000CA8C 48FFC6                  	inc rsi
 20915 0000CA8F EBEC                    	jmp .L_lambda_simple_params_loop_0075
 20916                                  .L_lambda_simple_params_end_0075:
 20917 0000CA91 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20918 0000CA94 4889C3                  	mov rbx, rax
 20919 0000CA97 58                      	pop rax
 20920 0000CA98 C60005                  	mov byte [rax], T_closure
 20921 0000CA9B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20922 0000CA9F 48C74009[ACCA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
 20923 0000CAA7 E9B6030000              	jmp .L_lambda_simple_end_0075
 20924                                  .L_lambda_simple_code_0075:	; lambda-simple body
 20925 0000CAAC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20926 0000CAB2 740B                    	je .L_lambda_simple_arity_check_ok_0101
 20927 0000CAB4 FF742410                	push qword [rsp + 8 * 2]
 20928 0000CAB8 6A01                    	push 1
 20929 0000CABA E910420000              	jmp L_error_incorrect_arity_simple
 20930                                  .L_lambda_simple_arity_check_ok_0101:
 20931 0000CABF C8000000                	enter 0, 0
 20932 0000CAC3 BF08000000              mov rdi, 8
 20933 0000CAC8 E849420000              call malloc
 20934 0000CACD 4889C3                  mov rbx, rax
 20935 0000CAD0 488B4520                mov rax, qword [rbp + 32]
 20936 0000CAD4 488903                  mov qword [rbx], rax
 20937 0000CAD7 4889D8                  mov rax, rbx
 20938 0000CADA 48894520                mov qword [rbp + 32], rax
 20939 0000CADE 48B8-                   mov rax, sob_void
 20939 0000CAE0 [0000000000000000] 
 20940 0000CAE8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20941 0000CAED E824420000              	call malloc
 20942 0000CAF2 50                      	push rax
 20943 0000CAF3 BF08000000              	mov rdi, 8 * 1	; new rib
 20944 0000CAF8 E819420000              	call malloc
 20945 0000CAFD 50                      	push rax
 20946 0000CAFE BF28000000              	mov rdi, 8 * 5	; extended env
 20947 0000CB03 E80E420000              	call malloc
 20948 0000CB08 488B7D10                	mov rdi, ENV
 20949 0000CB0C BE00000000              	mov rsi, 0
 20950 0000CB11 BA01000000              	mov rdx, 1
 20951                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
 20952 0000CB16 4883FE04                	cmp rsi, 4
 20953 0000CB1A 7410                    	je .L_lambda_simple_env_end_0076
 20954 0000CB1C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20955 0000CB20 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20956 0000CB24 48FFC6                  	inc rsi
 20957 0000CB27 48FFC2                  	inc rdx
 20958 0000CB2A EBEA                    	jmp .L_lambda_simple_env_loop_0076
 20959                                  .L_lambda_simple_env_end_0076:
 20960 0000CB2C 5B                      	pop rbx
 20961 0000CB2D BE00000000              	mov rsi, 0
 20962                                  .L_lambda_simple_params_loop_0076:	; copy params
 20963 0000CB32 4883FE01                	cmp rsi, 1
 20964 0000CB36 740E                    	je .L_lambda_simple_params_end_0076
 20965 0000CB38 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20966 0000CB3D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20967 0000CB41 48FFC6                  	inc rsi
 20968 0000CB44 EBEC                    	jmp .L_lambda_simple_params_loop_0076
 20969                                  .L_lambda_simple_params_end_0076:
 20970 0000CB46 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20971 0000CB49 4889C3                  	mov rbx, rax
 20972 0000CB4C 58                      	pop rax
 20973 0000CB4D C60005                  	mov byte [rax], T_closure
 20974 0000CB50 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20975 0000CB54 48C74009[61CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
 20976 0000CB5C E94D010000              	jmp .L_lambda_simple_end_0076
 20977                                  .L_lambda_simple_code_0076:	; lambda-simple body
 20978 0000CB61 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20979 0000CB67 740B                    	je .L_lambda_simple_arity_check_ok_0102
 20980 0000CB69 FF742410                	push qword [rsp + 8 * 2]
 20981 0000CB6D 6A02                    	push 2
 20982 0000CB6F E95B410000              	jmp L_error_incorrect_arity_simple
 20983                                  .L_lambda_simple_arity_check_ok_0102:
 20984 0000CB74 C8000000                	enter 0, 0
 20985 0000CB78 488B4528                mov rax, qword [rbp + 40]
 20986 0000CB7C 50                      	push rax
 20987 0000CB7D 6A01                    	push 1
 20988 0000CB7F 488B0425[00000000]      	mov rax, qword [free_var_0]
 20989 0000CB87 803805                  	cmp byte [rax], T_closure 
 20990 0000CB8A 0F850E510000                    jne L_code_ptr_error
 20991                                  
 20992 0000CB90 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 20993                                  
 20994 0000CB94 53                              push rbx
 20995                                  
 20996 0000CB95 FF5009                          call SOB_CLOSURE_CODE(rax)
 20997                                  
 20998 0000CB98 483D[02000000]                  	cmp rax, sob_boolean_false
 20999 0000CB9E 0F8506010000            	jne .L_or_end_0009
 21000 0000CBA4 488B4528                mov rax, qword [rbp + 40]
 21001 0000CBA8 50                      	push rax
 21002 0000CBA9 6A01                    	push 1
 21003 0000CBAB 488B0425[80000000]      	mov rax, qword [free_var_16]
 21004 0000CBB3 803805                  	cmp byte [rax], T_closure 
 21005 0000CBB6 0F85E2500000                    jne L_code_ptr_error
 21006                                  
 21007 0000CBBC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21008                                  
 21009 0000CBC0 53                              push rbx
 21010                                  
 21011 0000CBC1 FF5009                          call SOB_CLOSURE_CODE(rax)
 21012                                  
 21013 0000CBC4 50                              	push rax
 21014 0000CBC5 488B4520                mov rax, qword [rbp + 32]
 21015 0000CBC9 50                      	push rax
 21016 0000CBCA 6A02                    	push 2
 21017 0000CBCC 488B4510                mov rax, qword [rbp + 16]
 21018 0000CBD0 488B4008                mov rax, qword [rax + 8]
 21019 0000CBD4 488B00                  mov rax, qword [rax + 0]
 21020 0000CBD7 803805                  	cmp byte [rax], T_closure 
 21021 0000CBDA 0F85BE500000                    jne L_code_ptr_error
 21022                                  
 21023 0000CBE0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21024                                  
 21025 0000CBE4 53                              push rbx
 21026                                  
 21027 0000CBE5 FF5009                          call SOB_CLOSURE_CODE(rax)
 21028                                  
 21029 0000CBE8 483D[02000000]                  	cmp rax, sob_boolean_false
 21030 0000CBEE 0F84AC000000            	je .L_if_else_0042
 21031 0000CBF4 488B4528                mov rax, qword [rbp + 40]
 21032 0000CBF8 50                      	push rax
 21033 0000CBF9 6A01                    	push 1
 21034 0000CBFB 488B0425[88000000]      	mov rax, qword [free_var_17]
 21035 0000CC03 803805                  	cmp byte [rax], T_closure 
 21036 0000CC06 0F8592500000                    jne L_code_ptr_error
 21037                                  
 21038 0000CC0C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21039                                  
 21040 0000CC10 53                              push rbx
 21041                                  
 21042 0000CC11 FF5009                          call SOB_CLOSURE_CODE(rax)
 21043                                  
 21044 0000CC14 50                              	push rax
 21045 0000CC15 488B4528                mov rax, qword [rbp + 40]
 21046 0000CC19 50                      	push rax
 21047 0000CC1A 6A01                    	push 1
 21048 0000CC1C 488B0425[80000000]      	mov rax, qword [free_var_16]
 21049 0000CC24 803805                  	cmp byte [rax], T_closure 
 21050 0000CC27 0F8571500000                    jne L_code_ptr_error
 21051                                  
 21052 0000CC2D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21053                                  
 21054 0000CC31 53                              push rbx
 21055                                  
 21056 0000CC32 FF5009                          call SOB_CLOSURE_CODE(rax)
 21057                                  
 21058 0000CC35 50                              	push rax
 21059 0000CC36 6A02                    	push 2
 21060 0000CC38 488B4510                mov rax, qword [rbp + 16]
 21061 0000CC3C 488B00                  mov rax, qword [rax + 0]
 21062 0000CC3F 488B00                  mov rax, qword [rax + 0]
 21063 0000CC42 488B00                  	mov rax, qword [rax]
 21064                                  .L_lambda_simple_arity_check_ok_0103:
 21065 0000CC45 803805                  	cmp byte [rax], T_closure
 21066                                  
 21067 0000CC48 0F8550500000                    jne L_code_ptr_error                      ; rax <- proc
 21068                                  
 21069                                  
 21070 0000CC4E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21071                                  
 21072 0000CC52 53                              push rbx                                  ; env pushed
 21073                                  
 21074 0000CC53 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21075                                  
 21076                                  
 21077 0000CC56 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21078                                  
 21079                                          
 21080                                          
 21081 0000CC59 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21082                                  
 21083 0000CC5D 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21084                                  
 21085                                  
 21086 0000CC62 4D89CA                          mov r10, r9
 21087 0000CC65 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 21088                                  
 21089                                                                                         
 21090 0000CC69 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21091 0000CC6C 4983C404                        add r12, 4
 21092                                  
 21093 0000CC70 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21094                                  .L_tc_recycle_frame_loop_008d:
 21095 0000CC76 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 21096                                  
 21097 0000CC7A 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21098                                  
 21099                                  
 21100                                  
 21101 0000CC7F 41BE00000000                    mov r14, 0                                ; clean box
 21102                                  
 21103                                  
 21104                                                                  
 21105 0000CC85 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21106                                  
 21107 0000CC89 4983C4FF                        add r12, -1 
 21108                                  
 21109 0000CC8D 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21110 0000CC91 75E3                    	jne .L_tc_recycle_frame_loop_008d
 21111                                  .L_tc_recycle_frame_done_008d:
 21112 0000CC93 5D                      	pop rbp                                  ; restore the old rbp
 21113                                  
 21114 0000CC94 488B4D00                        mov rcx, qword [rbp]
 21115 0000CC98 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21116                                            ; rbx <- code(proc)
 21117                                  
 21118 0000CC9C FFE3                            jmp rbx
 21119 0000CC9E EB0A                    	jmp .L_if_end_0042
 21120                                  	.L_if_else_0042:
 21121 0000CCA0 48B8-                   		mov rax, qword (L_constants + 2)
 21121 0000CCA2 [0200000000000000] 
 21122                                  	.L_if_end_0042:
 21123                                  .L_or_end_0009:
 21124 0000CCAA C9                      	leave
 21125 0000CCAB C22000                  	ret 8 * (2 + 2)
 21126                                  .L_lambda_simple_end_0076:	; new closure is in rax
 21127 0000CCAE 50                      push rax
 21128 0000CCAF 488B4520                mov rax, qword [rbp + 32]
 21129 0000CCB3 8F00                    pop qword [rax]
 21130 0000CCB5 48B8-                   mov rax, sob_void
 21130 0000CCB7 [0000000000000000] 
 21131                                  
 21132 0000CCBF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21133 0000CCC4 E84D400000              	call malloc
 21134 0000CCC9 50                      	push rax
 21135 0000CCCA BF08000000              	mov rdi, 8 * 1	; new rib
 21136 0000CCCF E842400000              	call malloc
 21137 0000CCD4 50                      	push rax
 21138 0000CCD5 BF28000000              	mov rdi, 8 * 5	; extended env
 21139 0000CCDA E837400000              	call malloc
 21140 0000CCDF 488B7D10                	mov rdi, ENV
 21141 0000CCE3 BE00000000              	mov rsi, 0
 21142 0000CCE8 BA01000000              	mov rdx, 1
 21143                                  .L_lambda_opt_env_loop_0013:	; ext_env[i + 1] <-- env[i]
 21144 0000CCED 4883FE04                	cmp rsi, 4
 21145 0000CCF1 7410                    	je .L_lambda_opt_env_end_0013
 21146 0000CCF3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21147 0000CCF7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21148 0000CCFB 48FFC6                  	inc rsi
 21149 0000CCFE 48FFC2                  	inc rdx
 21150 0000CD01 EBEA                    	jmp .L_lambda_opt_env_loop_0013
 21151                                  .L_lambda_opt_env_end_0013:
 21152 0000CD03 5B                      	pop rbx
 21153 0000CD04 BE00000000              	mov rsi, 0
 21154                                  .L_lambda_opt_params_loop_0025:	; copy params
 21155 0000CD09 4883FE01                	cmp rsi, 1
 21156 0000CD0D 740E                    	je .L_lambda_opt_params_end_0025
 21157 0000CD0F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21158 0000CD14 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21159 0000CD18 48FFC6                  	inc rsi
 21160 0000CD1B EBEC                    	jmp .L_lambda_opt_params_loop_0025
 21161                                  .L_lambda_opt_params_end_0025:
 21162 0000CD1D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21163 0000CD20 4889C3                  	mov rbx, rax
 21164 0000CD23 58                      	pop rax
 21165 0000CD24 C60005                  	mov byte [rax], T_closure
 21166 0000CD27 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21167 0000CD2B 48C74009[38CD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0013
 21168 0000CD33 E926010000              	jmp .L_lambda_opt_end_0013
 21169                                  .L_lambda_opt_code_0013:
 21170 0000CD38 4C8B542410              mov r10, qword [rsp+8*2]
 21171 0000CD3D 4983FA01                cmp r10, 1
 21172 0000CD41 740B                    je .L_lambda_opt_arity_check_exact_0013
 21173 0000CD43 4983FA01                cmp r10, 1
 21174 0000CD47 7F41                    jg .L_lambda_opt_arity_check_more_0013
 21175 0000CD49 E9953F0000              jmp L_error_incorrect_arity_opt
 21176                                  .L_lambda_opt_arity_check_exact_0013:
 21177 0000CD4E 4883EC08                sub rsp, 8
 21178 0000CD52 BA04000000              mov rdx, 3+1
 21179 0000CD57 4889E3                  mov qword rbx, rsp
 21180                                  .L_lambda_opt_params_loop_0026:
 21181 0000CD5A 488B4B08                mov qword rcx, [rbx+8]
 21182 0000CD5E 48890B                  mov qword [rbx], rcx
 21183 0000CD61 48FFCA                  dec rdx
 21184 0000CD64 4883C308                add rbx, 8
 21185 0000CD68 4883FA00                cmp rdx, 0
 21186 0000CD6C 7402                    je .L_lambda_opt_params_end_0026
 21187 0000CD6E EBEA                    jmp .L_lambda_opt_params_loop_0026
 21188                                  .L_lambda_opt_params_end_0026:
 21189 0000CD70 49FFC2                  inc r10
 21190 0000CD73 4C89542410              mov qword [rsp+8*2], r10
 21191 0000CD78 4983C202                add r10, 2
 21192 0000CD7C 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 21193 0000CD84 4C8B4D00                mov r9, [rbp]
 21194 0000CD88 EB52                    jmp .L_lambda_opt_stack_adjusted_0013
 21195                                  .L_lambda_opt_arity_check_more_0013:
 21196 0000CD8A 48B8-                   mov rax, sob_nil
 21196 0000CD8C [0100000000000000] 
 21197 0000CD94 4C8B542410              mov r10, [rsp+2*8]
 21198 0000CD99 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 21199 0000CD9E 4983EA01                sub r10, 1
 21200                                  .L_lambda_opt_stack_shrink_loop_0013:
 21201 0000CDA2 4983FA00                cmp r10, 0
 21202 0000CDA6 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0013
 21203 0000CDA8 4889C1                  mov rcx, rax
 21204 0000CDAB 498B10                  mov rdx, [r8]
 21205 0000CDAE BF11000000              mov rdi, 17
 21206 0000CDB3 E85E3F0000              call malloc
 21207 0000CDB8 C60021                  mov byte [rax], T_pair
 21208 0000CDBB 48894809                mov SOB_PAIR_CDR(rax), rcx
 21209 0000CDBF 48895001                mov SOB_PAIR_CAR(rax), rdx
 21210 0000CDC3 4983E808                sub r8, 8
 21211 0000CDC7 49FFCA                  dec r10
 21212 0000CDCA EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0013
 21213                                  .L_lambda_opt_stack_shrink_loop_exit_0013:
 21214 0000CDCC 4889442420              mov [rsp+8*(2+2)], rax
 21215 0000CDD1 41BA02000000            mov r10, 2
 21216 0000CDD7 4C89542410              mov [rsp+16], r10
 21217                                  .L_lambda_opt_stack_adjusted_0013:
 21218 0000CDDC 4C8B4D00                mov r9, [rbp]
 21219 0000CDE0 C8000000                enter 0, 0
 21220 0000CDE4 488B4528                mov rax, qword [rbp + 40]
 21221 0000CDE8 50                      	push rax
 21222 0000CDE9 488B4520                mov rax, qword [rbp + 32]
 21223 0000CDED 50                      	push rax
 21224 0000CDEE 6A02                    	push 2
 21225 0000CDF0 488B4510                mov rax, qword [rbp + 16]
 21226 0000CDF4 488B00                  mov rax, qword [rax + 0]
 21227 0000CDF7 488B00                  mov rax, qword [rax + 0]
 21228 0000CDFA 488B00                  	mov rax, qword [rax]
 21229                                  .L_lambda_simple_arity_check_ok_0104:
 21230 0000CDFD 803805                  	cmp byte [rax], T_closure
 21231                                  
 21232 0000CE00 0F85984E0000                    jne L_code_ptr_error                      ; rax <- proc
 21233                                  
 21234                                  
 21235 0000CE06 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21236                                  
 21237 0000CE0A 53                              push rbx                                  ; env pushed
 21238                                  
 21239 0000CE0B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21240                                  
 21241                                  
 21242 0000CE0E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21243                                  
 21244                                          
 21245                                          
 21246 0000CE11 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21247                                  
 21248 0000CE15 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21249                                  
 21250                                  
 21251 0000CE1A 4D89CA                          mov r10, r9
 21252 0000CE1D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 21253                                  
 21254                                                                                         
 21255 0000CE21 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21256 0000CE24 4983C404                        add r12, 4
 21257                                  
 21258 0000CE28 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21259                                  .L_tc_recycle_frame_loop_008e:
 21260 0000CE2E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 21261                                  
 21262 0000CE32 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21263                                  
 21264                                  
 21265                                  
 21266 0000CE37 41BE00000000                    mov r14, 0                                ; clean box
 21267                                  
 21268                                  
 21269                                                                  
 21270 0000CE3D 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21271                                  
 21272 0000CE41 4983C4FF                        add r12, -1 
 21273                                  
 21274 0000CE45 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21275 0000CE49 75E3                    	jne .L_tc_recycle_frame_loop_008e
 21276                                  .L_tc_recycle_frame_done_008e:
 21277 0000CE4B 5D                      	pop rbp                                  ; restore the old rbp
 21278                                  
 21279 0000CE4C 488B4D00                        mov rcx, qword [rbp]
 21280 0000CE50 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21281                                            ; rbx <- code(proc)
 21282                                  
 21283 0000CE54 FFE3                            jmp rbx
 21284 0000CE56 C9                      leave
 21285 0000CE57 4C8B4D00                mov r9, [rbp]
 21286 0000CE5B C22800                  ret 8 * (3 + 2)
 21287                                  .L_lambda_opt_end_0013:	; new closure is in rax
 21288 0000CE5E C9                      	leave
 21289 0000CE5F C21800                  	ret 8 * (2 + 1)
 21290                                  .L_lambda_simple_end_0075:	; new closure is in rax
 21291                                  .L_lambda_simple_arity_check_ok_0105:
 21292 0000CE62 803805                  	cmp byte [rax], T_closure
 21293                                  
 21294 0000CE65 0F85334E0000                    jne L_code_ptr_error                      ; rax <- proc
 21295                                  
 21296                                  
 21297 0000CE6B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21298                                  
 21299 0000CE6F 53                              push rbx                                  ; env pushed
 21300                                  
 21301 0000CE70 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21302                                  
 21303                                  
 21304 0000CE73 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21305                                  
 21306                                          
 21307                                          
 21308 0000CE76 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21309                                  
 21310 0000CE7A 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21311                                  
 21312                                  
 21313 0000CE7F 4D89CA                          mov r10, r9
 21314 0000CE82 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 21315                                  
 21316                                                                                         
 21317 0000CE86 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21318 0000CE89 4983C404                        add r12, 4
 21319                                  
 21320 0000CE8D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21321                                  .L_tc_recycle_frame_loop_008f:
 21322 0000CE93 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 21323                                  
 21324 0000CE97 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21325                                  
 21326                                  
 21327                                  
 21328 0000CE9C 41BE00000000                    mov r14, 0                                ; clean box
 21329                                  
 21330                                  
 21331                                                                  
 21332 0000CEA2 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21333                                  
 21334 0000CEA6 4983C4FF                        add r12, -1 
 21335                                  
 21336 0000CEAA 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21337 0000CEAE 75E3                    	jne .L_tc_recycle_frame_loop_008f
 21338                                  .L_tc_recycle_frame_done_008f:
 21339 0000CEB0 5D                      	pop rbp                                  ; restore the old rbp
 21340                                  
 21341 0000CEB1 488B4D00                        mov rcx, qword [rbp]
 21342 0000CEB5 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21343                                            ; rbx <- code(proc)
 21344                                  
 21345 0000CEB9 FFE3                            jmp rbx
 21346 0000CEBB C9                      	leave
 21347 0000CEBC C21800                  	ret 8 * (2 + 1)
 21348                                  .L_lambda_simple_end_0074:	; new closure is in rax
 21349                                  .L_lambda_simple_arity_check_ok_0106:
 21350 0000CEBF 803805                  	cmp byte [rax], T_closure
 21351                                  
 21352 0000CEC2 0F85D64D0000                    jne L_code_ptr_error                      ; rax <- proc
 21353                                  
 21354                                  
 21355 0000CEC8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21356                                  
 21357 0000CECC 53                              push rbx                                  ; env pushed
 21358                                  
 21359 0000CECD FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21360                                  
 21361                                  
 21362 0000CED0 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21363                                  
 21364                                          
 21365                                          
 21366 0000CED3 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21367                                  
 21368 0000CED7 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21369                                  
 21370                                  
 21371 0000CEDC 4D89CA                          mov r10, r9
 21372 0000CEDF 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 21373                                  
 21374                                                                                         
 21375 0000CEE3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21376 0000CEE6 4983C404                        add r12, 4
 21377                                  
 21378 0000CEEA 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21379                                  .L_tc_recycle_frame_loop_0090:
 21380 0000CEF0 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 21381                                  
 21382 0000CEF4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21383                                  
 21384                                  
 21385                                  
 21386 0000CEF9 41BE00000000                    mov r14, 0                                ; clean box
 21387                                  
 21388                                  
 21389                                                                  
 21390 0000CEFF 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21391                                  
 21392 0000CF03 4983C4FF                        add r12, -1 
 21393                                  
 21394 0000CF07 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21395 0000CF0B 75E3                    	jne .L_tc_recycle_frame_loop_0090
 21396                                  .L_tc_recycle_frame_done_0090:
 21397 0000CF0D 5D                      	pop rbp                                  ; restore the old rbp
 21398                                  
 21399 0000CF0E 488B4D00                        mov rcx, qword [rbp]
 21400 0000CF12 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21401                                            ; rbx <- code(proc)
 21402                                  
 21403 0000CF16 FFE3                            jmp rbx
 21404 0000CF18 C9                      	leave
 21405 0000CF19 C21800                  	ret 8 * (2 + 1)
 21406                                  .L_lambda_simple_end_0070:	; new closure is in rax
 21407                                  .L_lambda_simple_arity_check_ok_0107:
 21408 0000CF1C 803805                  	cmp byte [rax], T_closure
 21409                                  
 21410 0000CF1F 0F85794D0000                    jne L_code_ptr_error                      ; rax <- proc
 21411                                  
 21412                                  
 21413 0000CF25 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21414                                  
 21415 0000CF29 53                              push rbx                                  ; env pushed
 21416                                  
 21417 0000CF2A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21418                                  
 21419                                  
 21420 0000CF2D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21421                                  
 21422                                          
 21423                                          
 21424 0000CF30 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21425                                  
 21426 0000CF34 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21427                                  
 21428                                  
 21429 0000CF39 4D89CA                          mov r10, r9
 21430 0000CF3C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 21431                                  
 21432                                                                                         
 21433 0000CF40 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21434 0000CF43 4983C404                        add r12, 4
 21435                                  
 21436 0000CF47 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21437                                  .L_tc_recycle_frame_loop_0091:
 21438 0000CF4D 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 21439                                  
 21440 0000CF51 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21441                                  
 21442                                  
 21443                                  
 21444 0000CF56 41BE00000000                    mov r14, 0                                ; clean box
 21445                                  
 21446                                  
 21447                                                                  
 21448 0000CF5C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21449                                  
 21450 0000CF60 4983C4FF                        add r12, -1 
 21451                                  
 21452 0000CF64 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21453 0000CF68 75E3                    	jne .L_tc_recycle_frame_loop_0091
 21454                                  .L_tc_recycle_frame_done_0091:
 21455 0000CF6A 5D                      	pop rbp                                  ; restore the old rbp
 21456                                  
 21457 0000CF6B 488B4D00                        mov rcx, qword [rbp]
 21458 0000CF6F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21459                                            ; rbx <- code(proc)
 21460                                  
 21461 0000CF73 FFE3                            jmp rbx
 21462 0000CF75 C9                      	leave
 21463 0000CF76 C22000                  	ret 8 * (2 + 2)
 21464                                  .L_lambda_simple_end_006f:	; new closure is in rax
 21465 0000CF79 50                      	push rax
 21466 0000CF7A 6A01                    	push 1
 21467 0000CF7C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21468 0000CF81 E8903D0000              	call malloc
 21469 0000CF86 50                      	push rax
 21470 0000CF87 BF00000000              	mov rdi, 8 * 0	; new rib
 21471 0000CF8C E8853D0000              	call malloc
 21472 0000CF91 50                      	push rax
 21473 0000CF92 BF08000000              	mov rdi, 8 * 1	; extended env
 21474 0000CF97 E87A3D0000              	call malloc
 21475 0000CF9C 488B7D10                	mov rdi, ENV
 21476 0000CFA0 BE00000000              	mov rsi, 0
 21477 0000CFA5 BA01000000              	mov rdx, 1
 21478                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
 21479 0000CFAA 4883FE00                	cmp rsi, 0
 21480 0000CFAE 7410                    	je .L_lambda_simple_env_end_0077
 21481 0000CFB0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21482 0000CFB4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21483 0000CFB8 48FFC6                  	inc rsi
 21484 0000CFBB 48FFC2                  	inc rdx
 21485 0000CFBE EBEA                    	jmp .L_lambda_simple_env_loop_0077
 21486                                  .L_lambda_simple_env_end_0077:
 21487 0000CFC0 5B                      	pop rbx
 21488 0000CFC1 BE00000000              	mov rsi, 0
 21489                                  .L_lambda_simple_params_loop_0077:	; copy params
 21490 0000CFC6 4883FE00                	cmp rsi, 0
 21491 0000CFCA 740E                    	je .L_lambda_simple_params_end_0077
 21492 0000CFCC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21493 0000CFD1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21494 0000CFD5 48FFC6                  	inc rsi
 21495 0000CFD8 EBEC                    	jmp .L_lambda_simple_params_loop_0077
 21496                                  .L_lambda_simple_params_end_0077:
 21497 0000CFDA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21498 0000CFDD 4889C3                  	mov rbx, rax
 21499 0000CFE0 58                      	pop rax
 21500 0000CFE1 C60005                  	mov byte [rax], T_closure
 21501 0000CFE4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21502 0000CFE8 48C74009[F5CF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
 21503 0000CFF0 E907010000              	jmp .L_lambda_simple_end_0077
 21504                                  .L_lambda_simple_code_0077:	; lambda-simple body
 21505 0000CFF5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21506 0000CFFB 740B                    	je .L_lambda_simple_arity_check_ok_0108
 21507 0000CFFD FF742410                	push qword [rsp + 8 * 2]
 21508 0000D001 6A01                    	push 1
 21509 0000D003 E9C73C0000              	jmp L_error_incorrect_arity_simple
 21510                                  .L_lambda_simple_arity_check_ok_0108:
 21511 0000D008 C8000000                	enter 0, 0
 21512 0000D00C 488B0425[70030000]      	mov rax, qword [free_var_110]
 21513 0000D014 50                      	push rax
 21514 0000D015 488B0425[60030000]      	mov rax, qword [free_var_108]
 21515 0000D01D 50                      	push rax
 21516 0000D01E 6A02                    	push 2
 21517 0000D020 488B4520                mov rax, qword [rbp + 32]
 21518 0000D024 803805                  	cmp byte [rax], T_closure 
 21519 0000D027 0F85714C0000                    jne L_code_ptr_error
 21520                                  
 21521 0000D02D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21522                                  
 21523 0000D031 53                              push rbx
 21524                                  
 21525 0000D032 FF5009                          call SOB_CLOSURE_CODE(rax)
 21526                                  
 21527 0000D035 48890425[E8030000]              	mov qword [free_var_125], rax
 21528 0000D03D 48B8-                   	mov rax, sob_void
 21528 0000D03F [0000000000000000] 
 21529                                  
 21530 0000D047 488B0425[70030000]      	mov rax, qword [free_var_110]
 21531 0000D04F 50                      	push rax
 21532 0000D050 488B0425[60030000]      	mov rax, qword [free_var_108]
 21533 0000D058 50                      	push rax
 21534 0000D059 6A02                    	push 2
 21535 0000D05B 488B4520                mov rax, qword [rbp + 32]
 21536 0000D05F 803805                  	cmp byte [rax], T_closure 
 21537 0000D062 0F85364C0000                    jne L_code_ptr_error
 21538                                  
 21539 0000D068 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21540                                  
 21541 0000D06C 53                              push rbx
 21542                                  
 21543 0000D06D FF5009                          call SOB_CLOSURE_CODE(rax)
 21544                                  
 21545 0000D070 48890425[10040000]              	mov qword [free_var_130], rax
 21546 0000D078 48B8-                   	mov rax, sob_void
 21546 0000D07A [0000000000000000] 
 21547                                  
 21548 0000D082 488B0425[70030000]      	mov rax, qword [free_var_110]
 21549 0000D08A 50                      	push rax
 21550 0000D08B 488B0425[78030000]      	mov rax, qword [free_var_111]
 21551 0000D093 50                      	push rax
 21552 0000D094 6A02                    	push 2
 21553 0000D096 488B4520                mov rax, qword [rbp + 32]
 21554 0000D09A 803805                  	cmp byte [rax], T_closure 
 21555 0000D09D 0F85FB4B0000                    jne L_code_ptr_error
 21556                                  
 21557 0000D0A3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21558                                  
 21559 0000D0A7 53                              push rbx
 21560                                  
 21561 0000D0A8 FF5009                          call SOB_CLOSURE_CODE(rax)
 21562                                  
 21563 0000D0AB 48890425[F8030000]              	mov qword [free_var_127], rax
 21564 0000D0B3 48B8-                   	mov rax, sob_void
 21564 0000D0B5 [0000000000000000] 
 21565                                  
 21566 0000D0BD 488B0425[A8030000]      	mov rax, qword [free_var_117]
 21567 0000D0C5 50                      	push rax
 21568 0000D0C6 488B0425[B0030000]      	mov rax, qword [free_var_118]
 21569 0000D0CE 50                      	push rax
 21570 0000D0CF 6A02                    	push 2
 21571 0000D0D1 488B4520                mov rax, qword [rbp + 32]
 21572 0000D0D5 803805                  	cmp byte [rax], T_closure 
 21573 0000D0D8 0F85C04B0000                    jne L_code_ptr_error
 21574                                  
 21575 0000D0DE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21576                                  
 21577 0000D0E2 53                              push rbx
 21578                                  
 21579 0000D0E3 FF5009                          call SOB_CLOSURE_CODE(rax)
 21580                                  
 21581 0000D0E6 48890425[20040000]              	mov qword [free_var_132], rax
 21582 0000D0EE 48B8-                   	mov rax, sob_void
 21582 0000D0F0 [0000000000000000] 
 21583 0000D0F8 C9                      	leave
 21584 0000D0F9 C21800                  	ret 8 * (2 + 1)
 21585                                  .L_lambda_simple_end_0077:	; new closure is in rax
 21586 0000D0FC 803805                  	cmp byte [rax], T_closure 
 21587 0000D0FF 0F85994B0000                    jne L_code_ptr_error
 21588                                  
 21589 0000D105 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21590                                  
 21591 0000D109 53                              push rbx
 21592                                  
 21593 0000D10A FF5009                          call SOB_CLOSURE_CODE(rax)
 21594                                  
 21595                                          
 21596 0000D10D 4889C7                  	mov rdi, rax
 21597 0000D110 E8123C0000              	call print_sexpr_if_not_void
 21598                                  
 21599 0000D115 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21600 0000D11A E8F73B0000              	call malloc
 21601 0000D11F 50                      	push rax
 21602 0000D120 BF00000000              	mov rdi, 8 * 0	; new rib
 21603 0000D125 E8EC3B0000              	call malloc
 21604 0000D12A 50                      	push rax
 21605 0000D12B BF08000000              	mov rdi, 8 * 1	; extended env
 21606 0000D130 E8E13B0000              	call malloc
 21607 0000D135 488B7D10                	mov rdi, ENV
 21608 0000D139 BE00000000              	mov rsi, 0
 21609 0000D13E BA01000000              	mov rdx, 1
 21610                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
 21611 0000D143 4883FE00                	cmp rsi, 0
 21612 0000D147 7410                    	je .L_lambda_simple_env_end_0078
 21613 0000D149 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21614 0000D14D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21615 0000D151 48FFC6                  	inc rsi
 21616 0000D154 48FFC2                  	inc rdx
 21617 0000D157 EBEA                    	jmp .L_lambda_simple_env_loop_0078
 21618                                  .L_lambda_simple_env_end_0078:
 21619 0000D159 5B                      	pop rbx
 21620 0000D15A BE00000000              	mov rsi, 0
 21621                                  .L_lambda_simple_params_loop_0078:	; copy params
 21622 0000D15F 4883FE00                	cmp rsi, 0
 21623 0000D163 740E                    	je .L_lambda_simple_params_end_0078
 21624 0000D165 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21625 0000D16A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21626 0000D16E 48FFC6                  	inc rsi
 21627 0000D171 EBEC                    	jmp .L_lambda_simple_params_loop_0078
 21628                                  .L_lambda_simple_params_end_0078:
 21629 0000D173 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21630 0000D176 4889C3                  	mov rbx, rax
 21631 0000D179 58                      	pop rax
 21632 0000D17A C60005                  	mov byte [rax], T_closure
 21633 0000D17D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21634 0000D181 48C74009[8ED10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
 21635 0000D189 E9890B0000              	jmp .L_lambda_simple_end_0078
 21636                                  .L_lambda_simple_code_0078:	; lambda-simple body
 21637 0000D18E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21638 0000D194 740B                    	je .L_lambda_simple_arity_check_ok_0109
 21639 0000D196 FF742410                	push qword [rsp + 8 * 2]
 21640 0000D19A 6A01                    	push 1
 21641 0000D19C E92E3B0000              	jmp L_error_incorrect_arity_simple
 21642                                  .L_lambda_simple_arity_check_ok_0109:
 21643 0000D1A1 C8000000                	enter 0, 0
 21644 0000D1A5 48B8-                   	mov rax, qword (L_constants + 22)
 21644 0000D1A7 [1600000000000000] 
 21645 0000D1AF 50                      	push rax
 21646 0000D1B0 6A01                    	push 1
 21647 0000D1B2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21648 0000D1B7 E85A3B0000              	call malloc
 21649 0000D1BC 50                      	push rax
 21650 0000D1BD BF08000000              	mov rdi, 8 * 1	; new rib
 21651 0000D1C2 E84F3B0000              	call malloc
 21652 0000D1C7 50                      	push rax
 21653 0000D1C8 BF10000000              	mov rdi, 8 * 2	; extended env
 21654 0000D1CD E8443B0000              	call malloc
 21655 0000D1D2 488B7D10                	mov rdi, ENV
 21656 0000D1D6 BE00000000              	mov rsi, 0
 21657 0000D1DB BA01000000              	mov rdx, 1
 21658                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
 21659 0000D1E0 4883FE01                	cmp rsi, 1
 21660 0000D1E4 7410                    	je .L_lambda_simple_env_end_0079
 21661 0000D1E6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21662 0000D1EA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21663 0000D1EE 48FFC6                  	inc rsi
 21664 0000D1F1 48FFC2                  	inc rdx
 21665 0000D1F4 EBEA                    	jmp .L_lambda_simple_env_loop_0079
 21666                                  .L_lambda_simple_env_end_0079:
 21667 0000D1F6 5B                      	pop rbx
 21668 0000D1F7 BE00000000              	mov rsi, 0
 21669                                  .L_lambda_simple_params_loop_0079:	; copy params
 21670 0000D1FC 4883FE01                	cmp rsi, 1
 21671 0000D200 740E                    	je .L_lambda_simple_params_end_0079
 21672 0000D202 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21673 0000D207 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21674 0000D20B 48FFC6                  	inc rsi
 21675 0000D20E EBEC                    	jmp .L_lambda_simple_params_loop_0079
 21676                                  .L_lambda_simple_params_end_0079:
 21677 0000D210 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21678 0000D213 4889C3                  	mov rbx, rax
 21679 0000D216 58                      	pop rax
 21680 0000D217 C60005                  	mov byte [rax], T_closure
 21681 0000D21A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21682 0000D21E 48C74009[2BD20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
 21683 0000D226 E98F0A0000              	jmp .L_lambda_simple_end_0079
 21684                                  .L_lambda_simple_code_0079:	; lambda-simple body
 21685 0000D22B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21686 0000D231 740B                    	je .L_lambda_simple_arity_check_ok_010a
 21687 0000D233 FF742410                	push qword [rsp + 8 * 2]
 21688 0000D237 6A01                    	push 1
 21689 0000D239 E9913A0000              	jmp L_error_incorrect_arity_simple
 21690                                  .L_lambda_simple_arity_check_ok_010a:
 21691 0000D23E C8000000                	enter 0, 0
 21692 0000D242 BF08000000              mov rdi, 8
 21693 0000D247 E8CA3A0000              call malloc
 21694 0000D24C 4889C3                  mov rbx, rax
 21695 0000D24F 488B4520                mov rax, qword [rbp + 32]
 21696 0000D253 488903                  mov qword [rbx], rax
 21697 0000D256 4889D8                  mov rax, rbx
 21698 0000D259 48894520                mov qword [rbp + 32], rax
 21699 0000D25D 48B8-                   mov rax, sob_void
 21699 0000D25F [0000000000000000] 
 21700 0000D267 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21701 0000D26C E8A53A0000              	call malloc
 21702 0000D271 50                      	push rax
 21703 0000D272 BF08000000              	mov rdi, 8 * 1	; new rib
 21704 0000D277 E89A3A0000              	call malloc
 21705 0000D27C 50                      	push rax
 21706 0000D27D BF18000000              	mov rdi, 8 * 3	; extended env
 21707 0000D282 E88F3A0000              	call malloc
 21708 0000D287 488B7D10                	mov rdi, ENV
 21709 0000D28B BE00000000              	mov rsi, 0
 21710 0000D290 BA01000000              	mov rdx, 1
 21711                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
 21712 0000D295 4883FE02                	cmp rsi, 2
 21713 0000D299 7410                    	je .L_lambda_simple_env_end_007a
 21714 0000D29B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21715 0000D29F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21716 0000D2A3 48FFC6                  	inc rsi
 21717 0000D2A6 48FFC2                  	inc rdx
 21718 0000D2A9 EBEA                    	jmp .L_lambda_simple_env_loop_007a
 21719                                  .L_lambda_simple_env_end_007a:
 21720 0000D2AB 5B                      	pop rbx
 21721 0000D2AC BE00000000              	mov rsi, 0
 21722                                  .L_lambda_simple_params_loop_007a:	; copy params
 21723 0000D2B1 4883FE01                	cmp rsi, 1
 21724 0000D2B5 740E                    	je .L_lambda_simple_params_end_007a
 21725 0000D2B7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21726 0000D2BC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21727 0000D2C0 48FFC6                  	inc rsi
 21728 0000D2C3 EBEC                    	jmp .L_lambda_simple_params_loop_007a
 21729                                  .L_lambda_simple_params_end_007a:
 21730 0000D2C5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21731 0000D2C8 4889C3                  	mov rbx, rax
 21732 0000D2CB 58                      	pop rax
 21733 0000D2CC C60005                  	mov byte [rax], T_closure
 21734 0000D2CF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21735 0000D2D3 48C74009[E0D20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
 21736 0000D2DB E9AE010000              	jmp .L_lambda_simple_end_007a
 21737                                  .L_lambda_simple_code_007a:	; lambda-simple body
 21738 0000D2E0 48837C241004            	cmp qword [rsp + 8 * 2], 4
 21739 0000D2E6 740B                    	je .L_lambda_simple_arity_check_ok_010b
 21740 0000D2E8 FF742410                	push qword [rsp + 8 * 2]
 21741 0000D2EC 6A04                    	push 4
 21742 0000D2EE E9DC390000              	jmp L_error_incorrect_arity_simple
 21743                                  .L_lambda_simple_arity_check_ok_010b:
 21744 0000D2F3 C8000000                	enter 0, 0
 21745 0000D2F7 488B4538                mov rax, qword [rbp + 56]
 21746 0000D2FB 50                      	push rax
 21747 0000D2FC 488B4520                mov rax, qword [rbp + 32]
 21748 0000D300 50                      	push rax
 21749 0000D301 6A02                    	push 2
 21750 0000D303 488B0425[50030000]      	mov rax, qword [free_var_106]
 21751 0000D30B 803805                  	cmp byte [rax], T_closure 
 21752 0000D30E 0F858A490000                    jne L_code_ptr_error
 21753                                  
 21754 0000D314 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21755                                  
 21756 0000D318 53                              push rbx
 21757                                  
 21758 0000D319 FF5009                          call SOB_CLOSURE_CODE(rax)
 21759                                  
 21760 0000D31C 483D[02000000]                  	cmp rax, sob_boolean_false
 21761 0000D322 0F8562010000            	jne .L_or_end_000a
 21762 0000D328 488B4538                mov rax, qword [rbp + 56]
 21763 0000D32C 50                      	push rax
 21764 0000D32D 488B4520                mov rax, qword [rbp + 32]
 21765 0000D331 50                      	push rax
 21766 0000D332 6A02                    	push 2
 21767 0000D334 488B0425[30030000]      	mov rax, qword [free_var_102]
 21768 0000D33C 803805                  	cmp byte [rax], T_closure 
 21769 0000D33F 0F8559490000                    jne L_code_ptr_error
 21770                                  
 21771 0000D345 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21772                                  
 21773 0000D349 53                              push rbx
 21774                                  
 21775 0000D34A FF5009                          call SOB_CLOSURE_CODE(rax)
 21776                                  
 21777 0000D34D 483D[02000000]                  	cmp rax, sob_boolean_false
 21778 0000D353 0F8427010000            	je .L_if_else_0043
 21779 0000D359 488B4520                mov rax, qword [rbp + 32]
 21780 0000D35D 50                      	push rax
 21781 0000D35E 488B4530                mov rax, qword [rbp + 48]
 21782 0000D362 50                      	push rax
 21783 0000D363 6A02                    	push 2
 21784 0000D365 488B0425[78010000]      	mov rax, qword [free_var_47]
 21785 0000D36D 803805                  	cmp byte [rax], T_closure 
 21786 0000D370 0F8528490000                    jne L_code_ptr_error
 21787                                  
 21788 0000D376 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21789                                  
 21790 0000D37A 53                              push rbx
 21791                                  
 21792 0000D37B FF5009                          call SOB_CLOSURE_CODE(rax)
 21793                                  
 21794 0000D37E 50                              	push rax
 21795 0000D37F 488B4520                mov rax, qword [rbp + 32]
 21796 0000D383 50                      	push rax
 21797 0000D384 488B4528                mov rax, qword [rbp + 40]
 21798 0000D388 50                      	push rax
 21799 0000D389 6A02                    	push 2
 21800 0000D38B 488B0425[78010000]      	mov rax, qword [free_var_47]
 21801 0000D393 803805                  	cmp byte [rax], T_closure 
 21802 0000D396 0F8502490000                    jne L_code_ptr_error
 21803                                  
 21804 0000D39C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21805                                  
 21806 0000D3A0 53                              push rbx
 21807                                  
 21808 0000D3A1 FF5009                          call SOB_CLOSURE_CODE(rax)
 21809                                  
 21810 0000D3A4 50                              	push rax
 21811 0000D3A5 6A02                    	push 2
 21812 0000D3A7 488B4510                mov rax, qword [rbp + 16]
 21813 0000D3AB 488B4008                mov rax, qword [rax + 8]
 21814 0000D3AF 488B00                  mov rax, qword [rax + 0]
 21815 0000D3B2 803805                  	cmp byte [rax], T_closure 
 21816 0000D3B5 0F85E3480000                    jne L_code_ptr_error
 21817                                  
 21818 0000D3BB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21819                                  
 21820 0000D3BF 53                              push rbx
 21821                                  
 21822 0000D3C0 FF5009                          call SOB_CLOSURE_CODE(rax)
 21823                                  
 21824 0000D3C3 483D[02000000]                  	cmp rax, sob_boolean_false
 21825 0000D3C9 0F84A5000000            	je .L_if_else_0044
 21826 0000D3CF 488B4538                mov rax, qword [rbp + 56]
 21827 0000D3D3 50                      	push rax
 21828 0000D3D4 488B4530                mov rax, qword [rbp + 48]
 21829 0000D3D8 50                      	push rax
 21830 0000D3D9 488B4528                mov rax, qword [rbp + 40]
 21831 0000D3DD 50                      	push rax
 21832 0000D3DE 48B8-                   	mov rax, qword (L_constants + 127)
 21832 0000D3E0 [7F00000000000000] 
 21833 0000D3E8 50                      	push rax
 21834 0000D3E9 488B4520                mov rax, qword [rbp + 32]
 21835 0000D3ED 50                      	push rax
 21836 0000D3EE 6A02                    	push 2
 21837 0000D3F0 488B0425[08030000]      	mov rax, qword [free_var_97]
 21838 0000D3F8 803805                  	cmp byte [rax], T_closure 
 21839 0000D3FB 0F859D480000                    jne L_code_ptr_error
 21840                                  
 21841 0000D401 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21842                                  
 21843 0000D405 53                              push rbx
 21844                                  
 21845 0000D406 FF5009                          call SOB_CLOSURE_CODE(rax)
 21846                                  
 21847 0000D409 50                              	push rax
 21848 0000D40A 6A04                    	push 4
 21849 0000D40C 488B4510                mov rax, qword [rbp + 16]
 21850 0000D410 488B00                  mov rax, qword [rax + 0]
 21851 0000D413 488B00                  mov rax, qword [rax + 0]
 21852 0000D416 488B00                  	mov rax, qword [rax]
 21853                                  .L_lambda_simple_arity_check_ok_010c:
 21854 0000D419 803805                  	cmp byte [rax], T_closure
 21855                                  
 21856 0000D41C 0F857C480000                    jne L_code_ptr_error                      ; rax <- proc
 21857                                  
 21858                                  
 21859 0000D422 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 21860                                  
 21861 0000D426 53                              push rbx                                  ; env pushed
 21862                                  
 21863 0000D427 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 21864                                  
 21865                                  
 21866 0000D42A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 21867                                  
 21868                                          
 21869                                          
 21870 0000D42D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 21871                                  
 21872 0000D431 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 21873                                  
 21874                                  
 21875 0000D436 4D89CA                          mov r10, r9
 21876 0000D439 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 21877                                  
 21878                                                                                         
 21879 0000D43D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 21880 0000D440 4983C404                        add r12, 4
 21881                                  
 21882 0000D444 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 21883                                  .L_tc_recycle_frame_loop_0092:
 21884 0000D44A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 21885                                  
 21886 0000D44E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 21887                                  
 21888                                  
 21889                                  
 21890 0000D453 41BE00000000                    mov r14, 0                                ; clean box
 21891                                  
 21892                                  
 21893                                                                  
 21894 0000D459 4983C2FF                        add r10, -1                               ; args_copied_counter--
 21895                                  
 21896 0000D45D 4983C4FF                        add r12, -1 
 21897                                  
 21898 0000D461 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 21899 0000D465 75E3                    	jne .L_tc_recycle_frame_loop_0092
 21900                                  .L_tc_recycle_frame_done_0092:
 21901 0000D467 5D                      	pop rbp                                  ; restore the old rbp
 21902                                  
 21903 0000D468 488B4D00                        mov rcx, qword [rbp]
 21904 0000D46C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 21905                                            ; rbx <- code(proc)
 21906                                  
 21907 0000D470 FFE3                            jmp rbx
 21908 0000D472 EB0A                    	jmp .L_if_end_0044
 21909                                  	.L_if_else_0044:
 21910 0000D474 48B8-                   		mov rax, qword (L_constants + 2)
 21910 0000D476 [0200000000000000] 
 21911                                  	.L_if_end_0044:
 21912 0000D47E EB0A                    	jmp .L_if_end_0043
 21913                                  	.L_if_else_0043:
 21914 0000D480 48B8-                   		mov rax, qword (L_constants + 2)
 21914 0000D482 [0200000000000000] 
 21915                                  	.L_if_end_0043:
 21916                                  .L_or_end_000a:
 21917 0000D48A C9                      	leave
 21918 0000D48B C23000                  	ret 8 * (2 + 4)
 21919                                  .L_lambda_simple_end_007a:	; new closure is in rax
 21920 0000D48E 50                      push rax
 21921 0000D48F 488B4520                mov rax, qword [rbp + 32]
 21922 0000D493 8F00                    pop qword [rax]
 21923 0000D495 48B8-                   mov rax, sob_void
 21923 0000D497 [0000000000000000] 
 21924                                  
 21925 0000D49F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21926 0000D4A4 E86D380000              	call malloc
 21927 0000D4A9 50                      	push rax
 21928 0000D4AA BF08000000              	mov rdi, 8 * 1	; new rib
 21929 0000D4AF E862380000              	call malloc
 21930 0000D4B4 50                      	push rax
 21931 0000D4B5 BF18000000              	mov rdi, 8 * 3	; extended env
 21932 0000D4BA E857380000              	call malloc
 21933 0000D4BF 488B7D10                	mov rdi, ENV
 21934 0000D4C3 BE00000000              	mov rsi, 0
 21935 0000D4C8 BA01000000              	mov rdx, 1
 21936                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
 21937 0000D4CD 4883FE02                	cmp rsi, 2
 21938 0000D4D1 7410                    	je .L_lambda_simple_env_end_007b
 21939 0000D4D3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21940 0000D4D7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21941 0000D4DB 48FFC6                  	inc rsi
 21942 0000D4DE 48FFC2                  	inc rdx
 21943 0000D4E1 EBEA                    	jmp .L_lambda_simple_env_loop_007b
 21944                                  .L_lambda_simple_env_end_007b:
 21945 0000D4E3 5B                      	pop rbx
 21946 0000D4E4 BE00000000              	mov rsi, 0
 21947                                  .L_lambda_simple_params_loop_007b:	; copy params
 21948 0000D4E9 4883FE01                	cmp rsi, 1
 21949 0000D4ED 740E                    	je .L_lambda_simple_params_end_007b
 21950 0000D4EF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21951 0000D4F4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21952 0000D4F8 48FFC6                  	inc rsi
 21953 0000D4FB EBEC                    	jmp .L_lambda_simple_params_loop_007b
 21954                                  .L_lambda_simple_params_end_007b:
 21955 0000D4FD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21956 0000D500 4889C3                  	mov rbx, rax
 21957 0000D503 58                      	pop rax
 21958 0000D504 C60005                  	mov byte [rax], T_closure
 21959 0000D507 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21960 0000D50B 48C74009[18D50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
 21961 0000D513 E919020000              	jmp .L_lambda_simple_end_007b
 21962                                  .L_lambda_simple_code_007b:	; lambda-simple body
 21963 0000D518 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21964 0000D51E 740B                    	je .L_lambda_simple_arity_check_ok_010d
 21965 0000D520 FF742410                	push qword [rsp + 8 * 2]
 21966 0000D524 6A02                    	push 2
 21967 0000D526 E9A4370000              	jmp L_error_incorrect_arity_simple
 21968                                  .L_lambda_simple_arity_check_ok_010d:
 21969 0000D52B C8000000                	enter 0, 0
 21970 0000D52F 488B4528                mov rax, qword [rbp + 40]
 21971 0000D533 50                      	push rax
 21972 0000D534 6A01                    	push 1
 21973 0000D536 488B0425[90000000]      	mov rax, qword [free_var_18]
 21974 0000D53E 803805                  	cmp byte [rax], T_closure 
 21975 0000D541 0F8557470000                    jne L_code_ptr_error
 21976                                  
 21977 0000D547 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21978                                  
 21979 0000D54B 53                              push rbx
 21980                                  
 21981 0000D54C FF5009                          call SOB_CLOSURE_CODE(rax)
 21982                                  
 21983 0000D54F 50                              	push rax
 21984 0000D550 488B4520                mov rax, qword [rbp + 32]
 21985 0000D554 50                      	push rax
 21986 0000D555 6A01                    	push 1
 21987 0000D557 488B0425[90000000]      	mov rax, qword [free_var_18]
 21988 0000D55F 803805                  	cmp byte [rax], T_closure 
 21989 0000D562 0F8536470000                    jne L_code_ptr_error
 21990                                  
 21991 0000D568 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 21992                                  
 21993 0000D56C 53                              push rbx
 21994                                  
 21995 0000D56D FF5009                          call SOB_CLOSURE_CODE(rax)
 21996                                  
 21997 0000D570 50                              	push rax
 21998 0000D571 6A02                    	push 2
 21999 0000D573 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22000 0000D578 E899370000              	call malloc
 22001 0000D57D 50                      	push rax
 22002 0000D57E BF10000000              	mov rdi, 8 * 2	; new rib
 22003 0000D583 E88E370000              	call malloc
 22004 0000D588 50                      	push rax
 22005 0000D589 BF20000000              	mov rdi, 8 * 4	; extended env
 22006 0000D58E E883370000              	call malloc
 22007 0000D593 488B7D10                	mov rdi, ENV
 22008 0000D597 BE00000000              	mov rsi, 0
 22009 0000D59C BA01000000              	mov rdx, 1
 22010                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
 22011 0000D5A1 4883FE03                	cmp rsi, 3
 22012 0000D5A5 7410                    	je .L_lambda_simple_env_end_007c
 22013 0000D5A7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22014 0000D5AB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22015 0000D5AF 48FFC6                  	inc rsi
 22016 0000D5B2 48FFC2                  	inc rdx
 22017 0000D5B5 EBEA                    	jmp .L_lambda_simple_env_loop_007c
 22018                                  .L_lambda_simple_env_end_007c:
 22019 0000D5B7 5B                      	pop rbx
 22020 0000D5B8 BE00000000              	mov rsi, 0
 22021                                  .L_lambda_simple_params_loop_007c:	; copy params
 22022 0000D5BD 4883FE02                	cmp rsi, 2
 22023 0000D5C1 740E                    	je .L_lambda_simple_params_end_007c
 22024 0000D5C3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22025 0000D5C8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22026 0000D5CC 48FFC6                  	inc rsi
 22027 0000D5CF EBEC                    	jmp .L_lambda_simple_params_loop_007c
 22028                                  .L_lambda_simple_params_end_007c:
 22029 0000D5D1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22030 0000D5D4 4889C3                  	mov rbx, rax
 22031 0000D5D7 58                      	pop rax
 22032 0000D5D8 C60005                  	mov byte [rax], T_closure
 22033 0000D5DB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22034 0000D5DF 48C74009[ECD50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
 22035 0000D5E7 E9E8000000              	jmp .L_lambda_simple_end_007c
 22036                                  .L_lambda_simple_code_007c:	; lambda-simple body
 22037 0000D5EC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22038 0000D5F2 740B                    	je .L_lambda_simple_arity_check_ok_010e
 22039 0000D5F4 FF742410                	push qword [rsp + 8 * 2]
 22040 0000D5F8 6A02                    	push 2
 22041 0000D5FA E9D0360000              	jmp L_error_incorrect_arity_simple
 22042                                  .L_lambda_simple_arity_check_ok_010e:
 22043 0000D5FF C8000000                	enter 0, 0
 22044 0000D603 488B4528                mov rax, qword [rbp + 40]
 22045 0000D607 50                      	push rax
 22046 0000D608 488B4520                mov rax, qword [rbp + 32]
 22047 0000D60C 50                      	push rax
 22048 0000D60D 6A02                    	push 2
 22049 0000D60F 488B0425[50030000]      	mov rax, qword [free_var_106]
 22050 0000D617 803805                  	cmp byte [rax], T_closure 
 22051 0000D61A 0F857E460000                    jne L_code_ptr_error
 22052                                  
 22053 0000D620 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22054                                  
 22055 0000D624 53                              push rbx
 22056                                  
 22057 0000D625 FF5009                          call SOB_CLOSURE_CODE(rax)
 22058                                  
 22059 0000D628 483D[02000000]                  	cmp rax, sob_boolean_false
 22060 0000D62E 0F8492000000            	je .L_if_else_0045
 22061 0000D634 488B4520                mov rax, qword [rbp + 32]
 22062 0000D638 50                      	push rax
 22063 0000D639 488B4510                mov rax, qword [rbp + 16]
 22064 0000D63D 488B00                  mov rax, qword [rax + 0]
 22065 0000D640 488B4008                mov rax, qword [rax + 8]
 22066 0000D644 50                      	push rax
 22067 0000D645 488B4510                mov rax, qword [rbp + 16]
 22068 0000D649 488B00                  mov rax, qword [rax + 0]
 22069 0000D64C 488B00                  mov rax, qword [rax + 0]
 22070 0000D64F 50                      	push rax
 22071 0000D650 48B8-                   	mov rax, qword (L_constants + 31)
 22071 0000D652 [1F00000000000000] 
 22072 0000D65A 50                      	push rax
 22073 0000D65B 6A04                    	push 4
 22074 0000D65D 488B4510                mov rax, qword [rbp + 16]
 22075 0000D661 488B4008                mov rax, qword [rax + 8]
 22076 0000D665 488B00                  mov rax, qword [rax + 0]
 22077 0000D668 488B00                  	mov rax, qword [rax]
 22078                                  .L_lambda_simple_arity_check_ok_010f:
 22079 0000D66B 803805                  	cmp byte [rax], T_closure
 22080                                  
 22081 0000D66E 0F852A460000                    jne L_code_ptr_error                      ; rax <- proc
 22082                                  
 22083                                  
 22084 0000D674 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22085                                  
 22086 0000D678 53                              push rbx                                  ; env pushed
 22087                                  
 22088 0000D679 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22089                                  
 22090                                  
 22091 0000D67C FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22092                                  
 22093                                          
 22094                                          
 22095 0000D67F 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22096                                  
 22097 0000D683 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22098                                  
 22099                                  
 22100 0000D688 4D89CA                          mov r10, r9
 22101 0000D68B 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 22102                                  
 22103                                                                                         
 22104 0000D68F 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22105 0000D692 4983C404                        add r12, 4
 22106                                  
 22107 0000D696 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22108                                  .L_tc_recycle_frame_loop_0093:
 22109 0000D69C 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 22110                                  
 22111 0000D6A0 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22112                                  
 22113                                  
 22114                                  
 22115 0000D6A5 41BE00000000                    mov r14, 0                                ; clean box
 22116                                  
 22117                                  
 22118                                                                  
 22119 0000D6AB 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22120                                  
 22121 0000D6AF 4983C4FF                        add r12, -1 
 22122                                  
 22123 0000D6B3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22124 0000D6B7 75E3                    	jne .L_tc_recycle_frame_loop_0093
 22125                                  .L_tc_recycle_frame_done_0093:
 22126 0000D6B9 5D                      	pop rbp                                  ; restore the old rbp
 22127                                  
 22128 0000D6BA 488B4D00                        mov rcx, qword [rbp]
 22129 0000D6BE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22130                                            ; rbx <- code(proc)
 22131                                  
 22132 0000D6C2 FFE3                            jmp rbx
 22133 0000D6C4 EB0A                    	jmp .L_if_end_0045
 22134                                  	.L_if_else_0045:
 22135 0000D6C6 48B8-                   		mov rax, qword (L_constants + 2)
 22135 0000D6C8 [0200000000000000] 
 22136                                  	.L_if_end_0045:
 22137 0000D6D0 C9                      	leave
 22138 0000D6D1 C22000                  	ret 8 * (2 + 2)
 22139                                  .L_lambda_simple_end_007c:	; new closure is in rax
 22140                                  .L_lambda_simple_arity_check_ok_0110:
 22141 0000D6D4 803805                  	cmp byte [rax], T_closure
 22142                                  
 22143 0000D6D7 0F85C1450000                    jne L_code_ptr_error                      ; rax <- proc
 22144                                  
 22145                                  
 22146 0000D6DD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22147                                  
 22148 0000D6E1 53                              push rbx                                  ; env pushed
 22149                                  
 22150 0000D6E2 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22151                                  
 22152                                  
 22153 0000D6E5 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22154                                  
 22155                                          
 22156                                          
 22157 0000D6E8 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22158                                  
 22159 0000D6EC 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22160                                  
 22161                                  
 22162 0000D6F1 4D89CA                          mov r10, r9
 22163 0000D6F4 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 22164                                  
 22165                                                                                         
 22166 0000D6F8 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22167 0000D6FB 4983C404                        add r12, 4
 22168                                  
 22169 0000D6FF 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22170                                  .L_tc_recycle_frame_loop_0094:
 22171 0000D705 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 22172                                  
 22173 0000D709 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22174                                  
 22175                                  
 22176                                  
 22177 0000D70E 41BE00000000                    mov r14, 0                                ; clean box
 22178                                  
 22179                                  
 22180                                                                  
 22181 0000D714 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22182                                  
 22183 0000D718 4983C4FF                        add r12, -1 
 22184                                  
 22185 0000D71C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22186 0000D720 75E3                    	jne .L_tc_recycle_frame_loop_0094
 22187                                  .L_tc_recycle_frame_done_0094:
 22188 0000D722 5D                      	pop rbp                                  ; restore the old rbp
 22189                                  
 22190 0000D723 488B4D00                        mov rcx, qword [rbp]
 22191 0000D727 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22192                                            ; rbx <- code(proc)
 22193                                  
 22194 0000D72B FFE3                            jmp rbx
 22195 0000D72D C9                      	leave
 22196 0000D72E C22000                  	ret 8 * (2 + 2)
 22197                                  .L_lambda_simple_end_007b:	; new closure is in rax
 22198 0000D731 50                      	push rax
 22199 0000D732 6A01                    	push 1
 22200 0000D734 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22201 0000D739 E8D8350000              	call malloc
 22202 0000D73E 50                      	push rax
 22203 0000D73F BF08000000              	mov rdi, 8 * 1	; new rib
 22204 0000D744 E8CD350000              	call malloc
 22205 0000D749 50                      	push rax
 22206 0000D74A BF18000000              	mov rdi, 8 * 3	; extended env
 22207 0000D74F E8C2350000              	call malloc
 22208 0000D754 488B7D10                	mov rdi, ENV
 22209 0000D758 BE00000000              	mov rsi, 0
 22210 0000D75D BA01000000              	mov rdx, 1
 22211                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
 22212 0000D762 4883FE02                	cmp rsi, 2
 22213 0000D766 7410                    	je .L_lambda_simple_env_end_007d
 22214 0000D768 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22215 0000D76C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22216 0000D770 48FFC6                  	inc rsi
 22217 0000D773 48FFC2                  	inc rdx
 22218 0000D776 EBEA                    	jmp .L_lambda_simple_env_loop_007d
 22219                                  .L_lambda_simple_env_end_007d:
 22220 0000D778 5B                      	pop rbx
 22221 0000D779 BE00000000              	mov rsi, 0
 22222                                  .L_lambda_simple_params_loop_007d:	; copy params
 22223 0000D77E 4883FE01                	cmp rsi, 1
 22224 0000D782 740E                    	je .L_lambda_simple_params_end_007d
 22225 0000D784 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22226 0000D789 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22227 0000D78D 48FFC6                  	inc rsi
 22228 0000D790 EBEC                    	jmp .L_lambda_simple_params_loop_007d
 22229                                  .L_lambda_simple_params_end_007d:
 22230 0000D792 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22231 0000D795 4889C3                  	mov rbx, rax
 22232 0000D798 58                      	pop rax
 22233 0000D799 C60005                  	mov byte [rax], T_closure
 22234 0000D79C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22235 0000D7A0 48C74009[ADD70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
 22236 0000D7A8 E9B0040000              	jmp .L_lambda_simple_end_007d
 22237                                  .L_lambda_simple_code_007d:	; lambda-simple body
 22238 0000D7AD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22239 0000D7B3 740B                    	je .L_lambda_simple_arity_check_ok_0111
 22240 0000D7B5 FF742410                	push qword [rsp + 8 * 2]
 22241 0000D7B9 6A01                    	push 1
 22242 0000D7BB E90F350000              	jmp L_error_incorrect_arity_simple
 22243                                  .L_lambda_simple_arity_check_ok_0111:
 22244 0000D7C0 C8000000                	enter 0, 0
 22245 0000D7C4 48B8-                   	mov rax, qword (L_constants + 22)
 22245 0000D7C6 [1600000000000000] 
 22246 0000D7CE 50                      	push rax
 22247 0000D7CF 6A01                    	push 1
 22248 0000D7D1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22249 0000D7D6 E83B350000              	call malloc
 22250 0000D7DB 50                      	push rax
 22251 0000D7DC BF08000000              	mov rdi, 8 * 1	; new rib
 22252 0000D7E1 E830350000              	call malloc
 22253 0000D7E6 50                      	push rax
 22254 0000D7E7 BF20000000              	mov rdi, 8 * 4	; extended env
 22255 0000D7EC E825350000              	call malloc
 22256 0000D7F1 488B7D10                	mov rdi, ENV
 22257 0000D7F5 BE00000000              	mov rsi, 0
 22258 0000D7FA BA01000000              	mov rdx, 1
 22259                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
 22260 0000D7FF 4883FE03                	cmp rsi, 3
 22261 0000D803 7410                    	je .L_lambda_simple_env_end_007e
 22262 0000D805 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22263 0000D809 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22264 0000D80D 48FFC6                  	inc rsi
 22265 0000D810 48FFC2                  	inc rdx
 22266 0000D813 EBEA                    	jmp .L_lambda_simple_env_loop_007e
 22267                                  .L_lambda_simple_env_end_007e:
 22268 0000D815 5B                      	pop rbx
 22269 0000D816 BE00000000              	mov rsi, 0
 22270                                  .L_lambda_simple_params_loop_007e:	; copy params
 22271 0000D81B 4883FE01                	cmp rsi, 1
 22272 0000D81F 740E                    	je .L_lambda_simple_params_end_007e
 22273 0000D821 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22274 0000D826 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22275 0000D82A 48FFC6                  	inc rsi
 22276 0000D82D EBEC                    	jmp .L_lambda_simple_params_loop_007e
 22277                                  .L_lambda_simple_params_end_007e:
 22278 0000D82F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22279 0000D832 4889C3                  	mov rbx, rax
 22280 0000D835 58                      	pop rax
 22281 0000D836 C60005                  	mov byte [rax], T_closure
 22282 0000D839 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22283 0000D83D 48C74009[4AD80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
 22284 0000D845 E9B6030000              	jmp .L_lambda_simple_end_007e
 22285                                  .L_lambda_simple_code_007e:	; lambda-simple body
 22286 0000D84A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22287 0000D850 740B                    	je .L_lambda_simple_arity_check_ok_0112
 22288 0000D852 FF742410                	push qword [rsp + 8 * 2]
 22289 0000D856 6A01                    	push 1
 22290 0000D858 E972340000              	jmp L_error_incorrect_arity_simple
 22291                                  .L_lambda_simple_arity_check_ok_0112:
 22292 0000D85D C8000000                	enter 0, 0
 22293 0000D861 BF08000000              mov rdi, 8
 22294 0000D866 E8AB340000              call malloc
 22295 0000D86B 4889C3                  mov rbx, rax
 22296 0000D86E 488B4520                mov rax, qword [rbp + 32]
 22297 0000D872 488903                  mov qword [rbx], rax
 22298 0000D875 4889D8                  mov rax, rbx
 22299 0000D878 48894520                mov qword [rbp + 32], rax
 22300 0000D87C 48B8-                   mov rax, sob_void
 22300 0000D87E [0000000000000000] 
 22301 0000D886 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22302 0000D88B E886340000              	call malloc
 22303 0000D890 50                      	push rax
 22304 0000D891 BF08000000              	mov rdi, 8 * 1	; new rib
 22305 0000D896 E87B340000              	call malloc
 22306 0000D89B 50                      	push rax
 22307 0000D89C BF28000000              	mov rdi, 8 * 5	; extended env
 22308 0000D8A1 E870340000              	call malloc
 22309 0000D8A6 488B7D10                	mov rdi, ENV
 22310 0000D8AA BE00000000              	mov rsi, 0
 22311 0000D8AF BA01000000              	mov rdx, 1
 22312                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
 22313 0000D8B4 4883FE04                	cmp rsi, 4
 22314 0000D8B8 7410                    	je .L_lambda_simple_env_end_007f
 22315 0000D8BA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22316 0000D8BE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22317 0000D8C2 48FFC6                  	inc rsi
 22318 0000D8C5 48FFC2                  	inc rdx
 22319 0000D8C8 EBEA                    	jmp .L_lambda_simple_env_loop_007f
 22320                                  .L_lambda_simple_env_end_007f:
 22321 0000D8CA 5B                      	pop rbx
 22322 0000D8CB BE00000000              	mov rsi, 0
 22323                                  .L_lambda_simple_params_loop_007f:	; copy params
 22324 0000D8D0 4883FE01                	cmp rsi, 1
 22325 0000D8D4 740E                    	je .L_lambda_simple_params_end_007f
 22326 0000D8D6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22327 0000D8DB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22328 0000D8DF 48FFC6                  	inc rsi
 22329 0000D8E2 EBEC                    	jmp .L_lambda_simple_params_loop_007f
 22330                                  .L_lambda_simple_params_end_007f:
 22331 0000D8E4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22332 0000D8E7 4889C3                  	mov rbx, rax
 22333 0000D8EA 58                      	pop rax
 22334 0000D8EB C60005                  	mov byte [rax], T_closure
 22335 0000D8EE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22336 0000D8F2 48C74009[FFD80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
 22337 0000D8FA E94D010000              	jmp .L_lambda_simple_end_007f
 22338                                  .L_lambda_simple_code_007f:	; lambda-simple body
 22339 0000D8FF 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22340 0000D905 740B                    	je .L_lambda_simple_arity_check_ok_0113
 22341 0000D907 FF742410                	push qword [rsp + 8 * 2]
 22342 0000D90B 6A02                    	push 2
 22343 0000D90D E9BD330000              	jmp L_error_incorrect_arity_simple
 22344                                  .L_lambda_simple_arity_check_ok_0113:
 22345 0000D912 C8000000                	enter 0, 0
 22346 0000D916 488B4528                mov rax, qword [rbp + 40]
 22347 0000D91A 50                      	push rax
 22348 0000D91B 6A01                    	push 1
 22349 0000D91D 488B0425[00000000]      	mov rax, qword [free_var_0]
 22350 0000D925 803805                  	cmp byte [rax], T_closure 
 22351 0000D928 0F8570430000                    jne L_code_ptr_error
 22352                                  
 22353 0000D92E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22354                                  
 22355 0000D932 53                              push rbx
 22356                                  
 22357 0000D933 FF5009                          call SOB_CLOSURE_CODE(rax)
 22358                                  
 22359 0000D936 483D[02000000]                  	cmp rax, sob_boolean_false
 22360 0000D93C 0F8506010000            	jne .L_or_end_000b
 22361 0000D942 488B4528                mov rax, qword [rbp + 40]
 22362 0000D946 50                      	push rax
 22363 0000D947 6A01                    	push 1
 22364 0000D949 488B0425[80000000]      	mov rax, qword [free_var_16]
 22365 0000D951 803805                  	cmp byte [rax], T_closure 
 22366 0000D954 0F8544430000                    jne L_code_ptr_error
 22367                                  
 22368 0000D95A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22369                                  
 22370 0000D95E 53                              push rbx
 22371                                  
 22372 0000D95F FF5009                          call SOB_CLOSURE_CODE(rax)
 22373                                  
 22374 0000D962 50                              	push rax
 22375 0000D963 488B4520                mov rax, qword [rbp + 32]
 22376 0000D967 50                      	push rax
 22377 0000D968 6A02                    	push 2
 22378 0000D96A 488B4510                mov rax, qword [rbp + 16]
 22379 0000D96E 488B4008                mov rax, qword [rax + 8]
 22380 0000D972 488B00                  mov rax, qword [rax + 0]
 22381 0000D975 803805                  	cmp byte [rax], T_closure 
 22382 0000D978 0F8520430000                    jne L_code_ptr_error
 22383                                  
 22384 0000D97E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22385                                  
 22386 0000D982 53                              push rbx
 22387                                  
 22388 0000D983 FF5009                          call SOB_CLOSURE_CODE(rax)
 22389                                  
 22390 0000D986 483D[02000000]                  	cmp rax, sob_boolean_false
 22391 0000D98C 0F84AC000000            	je .L_if_else_0046
 22392 0000D992 488B4528                mov rax, qword [rbp + 40]
 22393 0000D996 50                      	push rax
 22394 0000D997 6A01                    	push 1
 22395 0000D999 488B0425[88000000]      	mov rax, qword [free_var_17]
 22396 0000D9A1 803805                  	cmp byte [rax], T_closure 
 22397 0000D9A4 0F85F4420000                    jne L_code_ptr_error
 22398                                  
 22399 0000D9AA 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22400                                  
 22401 0000D9AE 53                              push rbx
 22402                                  
 22403 0000D9AF FF5009                          call SOB_CLOSURE_CODE(rax)
 22404                                  
 22405 0000D9B2 50                              	push rax
 22406 0000D9B3 488B4528                mov rax, qword [rbp + 40]
 22407 0000D9B7 50                      	push rax
 22408 0000D9B8 6A01                    	push 1
 22409 0000D9BA 488B0425[80000000]      	mov rax, qword [free_var_16]
 22410 0000D9C2 803805                  	cmp byte [rax], T_closure 
 22411 0000D9C5 0F85D3420000                    jne L_code_ptr_error
 22412                                  
 22413 0000D9CB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22414                                  
 22415 0000D9CF 53                              push rbx
 22416                                  
 22417 0000D9D0 FF5009                          call SOB_CLOSURE_CODE(rax)
 22418                                  
 22419 0000D9D3 50                              	push rax
 22420 0000D9D4 6A02                    	push 2
 22421 0000D9D6 488B4510                mov rax, qword [rbp + 16]
 22422 0000D9DA 488B00                  mov rax, qword [rax + 0]
 22423 0000D9DD 488B00                  mov rax, qword [rax + 0]
 22424 0000D9E0 488B00                  	mov rax, qword [rax]
 22425                                  .L_lambda_simple_arity_check_ok_0114:
 22426 0000D9E3 803805                  	cmp byte [rax], T_closure
 22427                                  
 22428 0000D9E6 0F85B2420000                    jne L_code_ptr_error                      ; rax <- proc
 22429                                  
 22430                                  
 22431 0000D9EC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22432                                  
 22433 0000D9F0 53                              push rbx                                  ; env pushed
 22434                                  
 22435 0000D9F1 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22436                                  
 22437                                  
 22438 0000D9F4 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22439                                  
 22440                                          
 22441                                          
 22442 0000D9F7 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22443                                  
 22444 0000D9FB 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22445                                  
 22446                                  
 22447 0000DA00 4D89CA                          mov r10, r9
 22448 0000DA03 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 22449                                  
 22450                                                                                         
 22451 0000DA07 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22452 0000DA0A 4983C404                        add r12, 4
 22453                                  
 22454 0000DA0E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22455                                  .L_tc_recycle_frame_loop_0095:
 22456 0000DA14 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 22457                                  
 22458 0000DA18 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22459                                  
 22460                                  
 22461                                  
 22462 0000DA1D 41BE00000000                    mov r14, 0                                ; clean box
 22463                                  
 22464                                  
 22465                                                                  
 22466 0000DA23 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22467                                  
 22468 0000DA27 4983C4FF                        add r12, -1 
 22469                                  
 22470 0000DA2B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22471 0000DA2F 75E3                    	jne .L_tc_recycle_frame_loop_0095
 22472                                  .L_tc_recycle_frame_done_0095:
 22473 0000DA31 5D                      	pop rbp                                  ; restore the old rbp
 22474                                  
 22475 0000DA32 488B4D00                        mov rcx, qword [rbp]
 22476 0000DA36 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22477                                            ; rbx <- code(proc)
 22478                                  
 22479 0000DA3A FFE3                            jmp rbx
 22480 0000DA3C EB0A                    	jmp .L_if_end_0046
 22481                                  	.L_if_else_0046:
 22482 0000DA3E 48B8-                   		mov rax, qword (L_constants + 2)
 22482 0000DA40 [0200000000000000] 
 22483                                  	.L_if_end_0046:
 22484                                  .L_or_end_000b:
 22485 0000DA48 C9                      	leave
 22486 0000DA49 C22000                  	ret 8 * (2 + 2)
 22487                                  .L_lambda_simple_end_007f:	; new closure is in rax
 22488 0000DA4C 50                      push rax
 22489 0000DA4D 488B4520                mov rax, qword [rbp + 32]
 22490 0000DA51 8F00                    pop qword [rax]
 22491 0000DA53 48B8-                   mov rax, sob_void
 22491 0000DA55 [0000000000000000] 
 22492                                  
 22493 0000DA5D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22494 0000DA62 E8AF320000              	call malloc
 22495 0000DA67 50                      	push rax
 22496 0000DA68 BF08000000              	mov rdi, 8 * 1	; new rib
 22497 0000DA6D E8A4320000              	call malloc
 22498 0000DA72 50                      	push rax
 22499 0000DA73 BF28000000              	mov rdi, 8 * 5	; extended env
 22500 0000DA78 E899320000              	call malloc
 22501 0000DA7D 488B7D10                	mov rdi, ENV
 22502 0000DA81 BE00000000              	mov rsi, 0
 22503 0000DA86 BA01000000              	mov rdx, 1
 22504                                  .L_lambda_opt_env_loop_0014:	; ext_env[i + 1] <-- env[i]
 22505 0000DA8B 4883FE04                	cmp rsi, 4
 22506 0000DA8F 7410                    	je .L_lambda_opt_env_end_0014
 22507 0000DA91 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22508 0000DA95 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22509 0000DA99 48FFC6                  	inc rsi
 22510 0000DA9C 48FFC2                  	inc rdx
 22511 0000DA9F EBEA                    	jmp .L_lambda_opt_env_loop_0014
 22512                                  .L_lambda_opt_env_end_0014:
 22513 0000DAA1 5B                      	pop rbx
 22514 0000DAA2 BE00000000              	mov rsi, 0
 22515                                  .L_lambda_opt_params_loop_0027:	; copy params
 22516 0000DAA7 4883FE01                	cmp rsi, 1
 22517 0000DAAB 740E                    	je .L_lambda_opt_params_end_0027
 22518 0000DAAD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22519 0000DAB2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22520 0000DAB6 48FFC6                  	inc rsi
 22521 0000DAB9 EBEC                    	jmp .L_lambda_opt_params_loop_0027
 22522                                  .L_lambda_opt_params_end_0027:
 22523 0000DABB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22524 0000DABE 4889C3                  	mov rbx, rax
 22525 0000DAC1 58                      	pop rax
 22526 0000DAC2 C60005                  	mov byte [rax], T_closure
 22527 0000DAC5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22528 0000DAC9 48C74009[D6DA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0014
 22529 0000DAD1 E926010000              	jmp .L_lambda_opt_end_0014
 22530                                  .L_lambda_opt_code_0014:
 22531 0000DAD6 4C8B542410              mov r10, qword [rsp+8*2]
 22532 0000DADB 4983FA01                cmp r10, 1
 22533 0000DADF 740B                    je .L_lambda_opt_arity_check_exact_0014
 22534 0000DAE1 4983FA01                cmp r10, 1
 22535 0000DAE5 7F41                    jg .L_lambda_opt_arity_check_more_0014
 22536 0000DAE7 E9F7310000              jmp L_error_incorrect_arity_opt
 22537                                  .L_lambda_opt_arity_check_exact_0014:
 22538 0000DAEC 4883EC08                sub rsp, 8
 22539 0000DAF0 BA04000000              mov rdx, 3+1
 22540 0000DAF5 4889E3                  mov qword rbx, rsp
 22541                                  .L_lambda_opt_params_loop_0028:
 22542 0000DAF8 488B4B08                mov qword rcx, [rbx+8]
 22543 0000DAFC 48890B                  mov qword [rbx], rcx
 22544 0000DAFF 48FFCA                  dec rdx
 22545 0000DB02 4883C308                add rbx, 8
 22546 0000DB06 4883FA00                cmp rdx, 0
 22547 0000DB0A 7402                    je .L_lambda_opt_params_end_0028
 22548 0000DB0C EBEA                    jmp .L_lambda_opt_params_loop_0028
 22549                                  .L_lambda_opt_params_end_0028:
 22550 0000DB0E 49FFC2                  inc r10
 22551 0000DB11 4C89542410              mov qword [rsp+8*2], r10
 22552 0000DB16 4983C202                add r10, 2
 22553 0000DB1A 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 22554 0000DB22 4C8B4D00                mov r9, [rbp]
 22555 0000DB26 EB52                    jmp .L_lambda_opt_stack_adjusted_0014
 22556                                  .L_lambda_opt_arity_check_more_0014:
 22557 0000DB28 48B8-                   mov rax, sob_nil
 22557 0000DB2A [0100000000000000] 
 22558 0000DB32 4C8B542410              mov r10, [rsp+2*8]
 22559 0000DB37 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 22560 0000DB3C 4983EA01                sub r10, 1
 22561                                  .L_lambda_opt_stack_shrink_loop_0014:
 22562 0000DB40 4983FA00                cmp r10, 0
 22563 0000DB44 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0014
 22564 0000DB46 4889C1                  mov rcx, rax
 22565 0000DB49 498B10                  mov rdx, [r8]
 22566 0000DB4C BF11000000              mov rdi, 17
 22567 0000DB51 E8C0310000              call malloc
 22568 0000DB56 C60021                  mov byte [rax], T_pair
 22569 0000DB59 48894809                mov SOB_PAIR_CDR(rax), rcx
 22570 0000DB5D 48895001                mov SOB_PAIR_CAR(rax), rdx
 22571 0000DB61 4983E808                sub r8, 8
 22572 0000DB65 49FFCA                  dec r10
 22573 0000DB68 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0014
 22574                                  .L_lambda_opt_stack_shrink_loop_exit_0014:
 22575 0000DB6A 4889442420              mov [rsp+8*(2+2)], rax
 22576 0000DB6F 41BA02000000            mov r10, 2
 22577 0000DB75 4C89542410              mov [rsp+16], r10
 22578                                  .L_lambda_opt_stack_adjusted_0014:
 22579 0000DB7A 4C8B4D00                mov r9, [rbp]
 22580 0000DB7E C8000000                enter 0, 0
 22581 0000DB82 488B4528                mov rax, qword [rbp + 40]
 22582 0000DB86 50                      	push rax
 22583 0000DB87 488B4520                mov rax, qword [rbp + 32]
 22584 0000DB8B 50                      	push rax
 22585 0000DB8C 6A02                    	push 2
 22586 0000DB8E 488B4510                mov rax, qword [rbp + 16]
 22587 0000DB92 488B00                  mov rax, qword [rax + 0]
 22588 0000DB95 488B00                  mov rax, qword [rax + 0]
 22589 0000DB98 488B00                  	mov rax, qword [rax]
 22590                                  .L_lambda_simple_arity_check_ok_0115:
 22591 0000DB9B 803805                  	cmp byte [rax], T_closure
 22592                                  
 22593 0000DB9E 0F85FA400000                    jne L_code_ptr_error                      ; rax <- proc
 22594                                  
 22595                                  
 22596 0000DBA4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22597                                  
 22598 0000DBA8 53                              push rbx                                  ; env pushed
 22599                                  
 22600 0000DBA9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22601                                  
 22602                                  
 22603 0000DBAC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22604                                  
 22605                                          
 22606                                          
 22607 0000DBAF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22608                                  
 22609 0000DBB3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22610                                  
 22611                                  
 22612 0000DBB8 4D89CA                          mov r10, r9
 22613 0000DBBB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 22614                                  
 22615                                                                                         
 22616 0000DBBF 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22617 0000DBC2 4983C404                        add r12, 4
 22618                                  
 22619 0000DBC6 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22620                                  .L_tc_recycle_frame_loop_0096:
 22621 0000DBCC 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 22622                                  
 22623 0000DBD0 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22624                                  
 22625                                  
 22626                                  
 22627 0000DBD5 41BE00000000                    mov r14, 0                                ; clean box
 22628                                  
 22629                                  
 22630                                                                  
 22631 0000DBDB 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22632                                  
 22633 0000DBDF 4983C4FF                        add r12, -1 
 22634                                  
 22635 0000DBE3 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22636 0000DBE7 75E3                    	jne .L_tc_recycle_frame_loop_0096
 22637                                  .L_tc_recycle_frame_done_0096:
 22638 0000DBE9 5D                      	pop rbp                                  ; restore the old rbp
 22639                                  
 22640 0000DBEA 488B4D00                        mov rcx, qword [rbp]
 22641 0000DBEE 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22642                                            ; rbx <- code(proc)
 22643                                  
 22644 0000DBF2 FFE3                            jmp rbx
 22645 0000DBF4 C9                      leave
 22646 0000DBF5 4C8B4D00                mov r9, [rbp]
 22647 0000DBF9 C22800                  ret 8 * (3 + 2)
 22648                                  .L_lambda_opt_end_0014:	; new closure is in rax
 22649 0000DBFC C9                      	leave
 22650 0000DBFD C21800                  	ret 8 * (2 + 1)
 22651                                  .L_lambda_simple_end_007e:	; new closure is in rax
 22652                                  .L_lambda_simple_arity_check_ok_0116:
 22653 0000DC00 803805                  	cmp byte [rax], T_closure
 22654                                  
 22655 0000DC03 0F8595400000                    jne L_code_ptr_error                      ; rax <- proc
 22656                                  
 22657                                  
 22658 0000DC09 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22659                                  
 22660 0000DC0D 53                              push rbx                                  ; env pushed
 22661                                  
 22662 0000DC0E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22663                                  
 22664                                  
 22665 0000DC11 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22666                                  
 22667                                          
 22668                                          
 22669 0000DC14 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22670                                  
 22671 0000DC18 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22672                                  
 22673                                  
 22674 0000DC1D 4D89CA                          mov r10, r9
 22675 0000DC20 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 22676                                  
 22677                                                                                         
 22678 0000DC24 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22679 0000DC27 4983C404                        add r12, 4
 22680                                  
 22681 0000DC2B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22682                                  .L_tc_recycle_frame_loop_0097:
 22683 0000DC31 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 22684                                  
 22685 0000DC35 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22686                                  
 22687                                  
 22688                                  
 22689 0000DC3A 41BE00000000                    mov r14, 0                                ; clean box
 22690                                  
 22691                                  
 22692                                                                  
 22693 0000DC40 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22694                                  
 22695 0000DC44 4983C4FF                        add r12, -1 
 22696                                  
 22697 0000DC48 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22698 0000DC4C 75E3                    	jne .L_tc_recycle_frame_loop_0097
 22699                                  .L_tc_recycle_frame_done_0097:
 22700 0000DC4E 5D                      	pop rbp                                  ; restore the old rbp
 22701                                  
 22702 0000DC4F 488B4D00                        mov rcx, qword [rbp]
 22703 0000DC53 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22704                                            ; rbx <- code(proc)
 22705                                  
 22706 0000DC57 FFE3                            jmp rbx
 22707 0000DC59 C9                      	leave
 22708 0000DC5A C21800                  	ret 8 * (2 + 1)
 22709                                  .L_lambda_simple_end_007d:	; new closure is in rax
 22710                                  .L_lambda_simple_arity_check_ok_0117:
 22711 0000DC5D 803805                  	cmp byte [rax], T_closure
 22712                                  
 22713 0000DC60 0F8538400000                    jne L_code_ptr_error                      ; rax <- proc
 22714                                  
 22715                                  
 22716 0000DC66 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22717                                  
 22718 0000DC6A 53                              push rbx                                  ; env pushed
 22719                                  
 22720 0000DC6B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22721                                  
 22722                                  
 22723 0000DC6E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22724                                  
 22725                                          
 22726                                          
 22727 0000DC71 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22728                                  
 22729 0000DC75 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22730                                  
 22731                                  
 22732 0000DC7A 4D89CA                          mov r10, r9
 22733 0000DC7D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 22734                                  
 22735                                                                                         
 22736 0000DC81 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22737 0000DC84 4983C404                        add r12, 4
 22738                                  
 22739 0000DC88 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22740                                  .L_tc_recycle_frame_loop_0098:
 22741 0000DC8E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 22742                                  
 22743 0000DC92 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22744                                  
 22745                                  
 22746                                  
 22747 0000DC97 41BE00000000                    mov r14, 0                                ; clean box
 22748                                  
 22749                                  
 22750                                                                  
 22751 0000DC9D 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22752                                  
 22753 0000DCA1 4983C4FF                        add r12, -1 
 22754                                  
 22755 0000DCA5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22756 0000DCA9 75E3                    	jne .L_tc_recycle_frame_loop_0098
 22757                                  .L_tc_recycle_frame_done_0098:
 22758 0000DCAB 5D                      	pop rbp                                  ; restore the old rbp
 22759                                  
 22760 0000DCAC 488B4D00                        mov rcx, qword [rbp]
 22761 0000DCB0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22762                                            ; rbx <- code(proc)
 22763                                  
 22764 0000DCB4 FFE3                            jmp rbx
 22765 0000DCB6 C9                      	leave
 22766 0000DCB7 C21800                  	ret 8 * (2 + 1)
 22767                                  .L_lambda_simple_end_0079:	; new closure is in rax
 22768                                  .L_lambda_simple_arity_check_ok_0118:
 22769 0000DCBA 803805                  	cmp byte [rax], T_closure
 22770                                  
 22771 0000DCBD 0F85DB3F0000                    jne L_code_ptr_error                      ; rax <- proc
 22772                                  
 22773                                  
 22774 0000DCC3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 22775                                  
 22776 0000DCC7 53                              push rbx                                  ; env pushed
 22777                                  
 22778 0000DCC8 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 22779                                  
 22780                                  
 22781 0000DCCB FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 22782                                  
 22783                                          
 22784                                          
 22785 0000DCCE 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 22786                                  
 22787 0000DCD2 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 22788                                  
 22789                                  
 22790 0000DCD7 4D89CA                          mov r10, r9
 22791 0000DCDA 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 22792                                  
 22793                                                                                         
 22794 0000DCDE 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 22795 0000DCE1 4983C404                        add r12, 4
 22796                                  
 22797 0000DCE5 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 22798                                  .L_tc_recycle_frame_loop_0099:
 22799 0000DCEB 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 22800                                  
 22801 0000DCEF 4E8974E500                      mov [rbp + (r12 * 8)], r14
 22802                                  
 22803                                  
 22804                                  
 22805 0000DCF4 41BE00000000                    mov r14, 0                                ; clean box
 22806                                  
 22807                                  
 22808                                                                  
 22809 0000DCFA 4983C2FF                        add r10, -1                               ; args_copied_counter--
 22810                                  
 22811 0000DCFE 4983C4FF                        add r12, -1 
 22812                                  
 22813 0000DD02 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 22814 0000DD06 75E3                    	jne .L_tc_recycle_frame_loop_0099
 22815                                  .L_tc_recycle_frame_done_0099:
 22816 0000DD08 5D                      	pop rbp                                  ; restore the old rbp
 22817                                  
 22818 0000DD09 488B4D00                        mov rcx, qword [rbp]
 22819 0000DD0D 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 22820                                            ; rbx <- code(proc)
 22821                                  
 22822 0000DD11 FFE3                            jmp rbx
 22823 0000DD13 C9                      	leave
 22824 0000DD14 C21800                  	ret 8 * (2 + 1)
 22825                                  .L_lambda_simple_end_0078:	; new closure is in rax
 22826 0000DD17 50                      	push rax
 22827 0000DD18 6A01                    	push 1
 22828 0000DD1A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22829 0000DD1F E8F22F0000              	call malloc
 22830 0000DD24 50                      	push rax
 22831 0000DD25 BF00000000              	mov rdi, 8 * 0	; new rib
 22832 0000DD2A E8E72F0000              	call malloc
 22833 0000DD2F 50                      	push rax
 22834 0000DD30 BF08000000              	mov rdi, 8 * 1	; extended env
 22835 0000DD35 E8DC2F0000              	call malloc
 22836 0000DD3A 488B7D10                	mov rdi, ENV
 22837 0000DD3E BE00000000              	mov rsi, 0
 22838 0000DD43 BA01000000              	mov rdx, 1
 22839                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
 22840 0000DD48 4883FE00                	cmp rsi, 0
 22841 0000DD4C 7410                    	je .L_lambda_simple_env_end_0080
 22842 0000DD4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22843 0000DD52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22844 0000DD56 48FFC6                  	inc rsi
 22845 0000DD59 48FFC2                  	inc rdx
 22846 0000DD5C EBEA                    	jmp .L_lambda_simple_env_loop_0080
 22847                                  .L_lambda_simple_env_end_0080:
 22848 0000DD5E 5B                      	pop rbx
 22849 0000DD5F BE00000000              	mov rsi, 0
 22850                                  .L_lambda_simple_params_loop_0080:	; copy params
 22851 0000DD64 4883FE00                	cmp rsi, 0
 22852 0000DD68 740E                    	je .L_lambda_simple_params_end_0080
 22853 0000DD6A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22854 0000DD6F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22855 0000DD73 48FFC6                  	inc rsi
 22856 0000DD76 EBEC                    	jmp .L_lambda_simple_params_loop_0080
 22857                                  .L_lambda_simple_params_end_0080:
 22858 0000DD78 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22859 0000DD7B 4889C3                  	mov rbx, rax
 22860 0000DD7E 58                      	pop rax
 22861 0000DD7F C60005                  	mov byte [rax], T_closure
 22862 0000DD82 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22863 0000DD86 48C74009[93DD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
 22864 0000DD8E E97F000000              	jmp .L_lambda_simple_end_0080
 22865                                  .L_lambda_simple_code_0080:	; lambda-simple body
 22866 0000DD93 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22867 0000DD99 740B                    	je .L_lambda_simple_arity_check_ok_0119
 22868 0000DD9B FF742410                	push qword [rsp + 8 * 2]
 22869 0000DD9F 6A01                    	push 1
 22870 0000DDA1 E9292F0000              	jmp L_error_incorrect_arity_simple
 22871                                  .L_lambda_simple_arity_check_ok_0119:
 22872 0000DDA6 C8000000                	enter 0, 0
 22873 0000DDAA 488B0425[70030000]      	mov rax, qword [free_var_110]
 22874 0000DDB2 50                      	push rax
 22875 0000DDB3 6A01                    	push 1
 22876 0000DDB5 488B4520                mov rax, qword [rbp + 32]
 22877 0000DDB9 803805                  	cmp byte [rax], T_closure 
 22878 0000DDBC 0F85DC3E0000                    jne L_code_ptr_error
 22879                                  
 22880 0000DDC2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22881                                  
 22882 0000DDC6 53                              push rbx
 22883                                  
 22884 0000DDC7 FF5009                          call SOB_CLOSURE_CODE(rax)
 22885                                  
 22886 0000DDCA 48890425[F0030000]              	mov qword [free_var_126], rax
 22887 0000DDD2 48B8-                   	mov rax, sob_void
 22887 0000DDD4 [0000000000000000] 
 22888                                  
 22889 0000DDDC 488B0425[A8030000]      	mov rax, qword [free_var_117]
 22890 0000DDE4 50                      	push rax
 22891 0000DDE5 6A01                    	push 1
 22892 0000DDE7 488B4520                mov rax, qword [rbp + 32]
 22893 0000DDEB 803805                  	cmp byte [rax], T_closure 
 22894 0000DDEE 0F85AA3E0000                    jne L_code_ptr_error
 22895                                  
 22896 0000DDF4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22897                                  
 22898 0000DDF8 53                              push rbx
 22899                                  
 22900 0000DDF9 FF5009                          call SOB_CLOSURE_CODE(rax)
 22901                                  
 22902 0000DDFC 48890425[18040000]              	mov qword [free_var_131], rax
 22903 0000DE04 48B8-                   	mov rax, sob_void
 22903 0000DE06 [0000000000000000] 
 22904 0000DE0E C9                      	leave
 22905 0000DE0F C21800                  	ret 8 * (2 + 1)
 22906                                  .L_lambda_simple_end_0080:	; new closure is in rax
 22907 0000DE12 803805                  	cmp byte [rax], T_closure 
 22908 0000DE15 0F85833E0000                    jne L_code_ptr_error
 22909                                  
 22910 0000DE1B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22911                                  
 22912 0000DE1F 53                              push rbx
 22913                                  
 22914 0000DE20 FF5009                          call SOB_CLOSURE_CODE(rax)
 22915                                  
 22916                                          
 22917 0000DE23 4889C7                  	mov rdi, rax
 22918 0000DE26 E8FC2E0000              	call print_sexpr_if_not_void
 22919                                  
 22920 0000DE2B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22921 0000DE30 E8E12E0000              	call malloc
 22922 0000DE35 50                      	push rax
 22923 0000DE36 BF00000000              	mov rdi, 8 * 0	; new rib
 22924 0000DE3B E8D62E0000              	call malloc
 22925 0000DE40 50                      	push rax
 22926 0000DE41 BF08000000              	mov rdi, 8 * 1	; extended env
 22927 0000DE46 E8CB2E0000              	call malloc
 22928 0000DE4B 488B7D10                	mov rdi, ENV
 22929 0000DE4F BE00000000              	mov rsi, 0
 22930 0000DE54 BA01000000              	mov rdx, 1
 22931                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
 22932 0000DE59 4883FE00                	cmp rsi, 0
 22933 0000DE5D 7410                    	je .L_lambda_simple_env_end_0081
 22934 0000DE5F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22935 0000DE63 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22936 0000DE67 48FFC6                  	inc rsi
 22937 0000DE6A 48FFC2                  	inc rdx
 22938 0000DE6D EBEA                    	jmp .L_lambda_simple_env_loop_0081
 22939                                  .L_lambda_simple_env_end_0081:
 22940 0000DE6F 5B                      	pop rbx
 22941 0000DE70 BE00000000              	mov rsi, 0
 22942                                  .L_lambda_simple_params_loop_0081:	; copy params
 22943 0000DE75 4883FE00                	cmp rsi, 0
 22944 0000DE79 740E                    	je .L_lambda_simple_params_end_0081
 22945 0000DE7B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22946 0000DE80 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22947 0000DE84 48FFC6                  	inc rsi
 22948 0000DE87 EBEC                    	jmp .L_lambda_simple_params_loop_0081
 22949                                  .L_lambda_simple_params_end_0081:
 22950 0000DE89 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22951 0000DE8C 4889C3                  	mov rbx, rax
 22952 0000DE8F 58                      	pop rax
 22953 0000DE90 C60005                  	mov byte [rax], T_closure
 22954 0000DE93 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22955 0000DE97 48C74009[A4DE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
 22956 0000DE9F E9FD000000              	jmp .L_lambda_simple_end_0081
 22957                                  .L_lambda_simple_code_0081:	; lambda-simple body
 22958 0000DEA4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22959 0000DEAA 740B                    	je .L_lambda_simple_arity_check_ok_011a
 22960 0000DEAC FF742410                	push qword [rsp + 8 * 2]
 22961 0000DEB0 6A01                    	push 1
 22962 0000DEB2 E9182E0000              	jmp L_error_incorrect_arity_simple
 22963                                  .L_lambda_simple_arity_check_ok_011a:
 22964 0000DEB7 C8000000                	enter 0, 0
 22965 0000DEBB 488B4520                mov rax, qword [rbp + 32]
 22966 0000DEBF 50                      	push rax
 22967 0000DEC0 6A01                    	push 1
 22968 0000DEC2 488B0425[00000000]      	mov rax, qword [free_var_0]
 22969 0000DECA 803805                  	cmp byte [rax], T_closure 
 22970 0000DECD 0F85CB3D0000                    jne L_code_ptr_error
 22971                                  
 22972 0000DED3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22973                                  
 22974 0000DED7 53                              push rbx
 22975                                  
 22976 0000DED8 FF5009                          call SOB_CLOSURE_CODE(rax)
 22977                                  
 22978 0000DEDB 483D[02000000]                  	cmp rax, sob_boolean_false
 22979 0000DEE1 740F                    	je .L_if_else_0047
 22980 0000DEE3 48B8-                   	mov rax, qword (L_constants + 31)
 22980 0000DEE5 [1F00000000000000] 
 22981 0000DEED E9AB000000              	jmp .L_if_end_0047
 22982                                  	.L_if_else_0047:
 22983 0000DEF2 488B4520                	mov rax, qword [rbp + 32]
 22984 0000DEF6 50                      	push rax
 22985 0000DEF7 6A01                    	push 1
 22986 0000DEF9 488B0425[88000000]      	mov rax, qword [free_var_17]
 22987 0000DF01 803805                  	cmp byte [rax], T_closure 
 22988 0000DF04 0F85943D0000                    jne L_code_ptr_error
 22989                                  
 22990 0000DF0A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 22991                                  
 22992 0000DF0E 53                              push rbx
 22993                                  
 22994 0000DF0F FF5009                          call SOB_CLOSURE_CODE(rax)
 22995                                  
 22996 0000DF12 50                              	push rax
 22997 0000DF13 6A01                    	push 1
 22998 0000DF15 488B0425[30040000]      	mov rax, qword [free_var_134]
 22999 0000DF1D 803805                  	cmp byte [rax], T_closure 
 23000 0000DF20 0F85783D0000                    jne L_code_ptr_error
 23001                                  
 23002 0000DF26 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23003                                  
 23004 0000DF2A 53                              push rbx
 23005                                  
 23006 0000DF2B FF5009                          call SOB_CLOSURE_CODE(rax)
 23007                                  
 23008 0000DF2E 50                              	push rax
 23009 0000DF2F 48B8-                   	mov rax, qword (L_constants + 127)
 23009 0000DF31 [7F00000000000000] 
 23010 0000DF39 50                      	push rax
 23011 0000DF3A 6A02                    	push 2
 23012 0000DF3C 488B0425[08030000]      	mov rax, qword [free_var_97]
 23013                                  .L_lambda_simple_arity_check_ok_011b:
 23014 0000DF44 803805                  	cmp byte [rax], T_closure
 23015                                  
 23016 0000DF47 0F85513D0000                    jne L_code_ptr_error                      ; rax <- proc
 23017                                  
 23018                                  
 23019 0000DF4D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23020                                  
 23021 0000DF51 53                              push rbx                                  ; env pushed
 23022                                  
 23023 0000DF52 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23024                                  
 23025                                  
 23026 0000DF55 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23027                                  
 23028                                          
 23029                                          
 23030 0000DF58 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23031                                  
 23032 0000DF5C 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23033                                  
 23034                                  
 23035 0000DF61 4D89CA                          mov r10, r9
 23036 0000DF64 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 23037                                  
 23038                                                                                         
 23039 0000DF68 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23040 0000DF6B 4983C404                        add r12, 4
 23041                                  
 23042 0000DF6F 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23043                                  .L_tc_recycle_frame_loop_009a:
 23044 0000DF75 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 23045                                  
 23046 0000DF79 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23047                                  
 23048                                  
 23049                                  
 23050 0000DF7E 41BE00000000                    mov r14, 0                                ; clean box
 23051                                  
 23052                                  
 23053                                                                  
 23054 0000DF84 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23055                                  
 23056 0000DF88 4983C4FF                        add r12, -1 
 23057                                  
 23058 0000DF8C 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23059 0000DF90 75E3                    	jne .L_tc_recycle_frame_loop_009a
 23060                                  .L_tc_recycle_frame_done_009a:
 23061 0000DF92 5D                      	pop rbp                                  ; restore the old rbp
 23062                                  
 23063 0000DF93 488B4D00                        mov rcx, qword [rbp]
 23064 0000DF97 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23065                                            ; rbx <- code(proc)
 23066                                  
 23067 0000DF9B FFE3                            jmp rbx
 23068                                  	.L_if_end_0047:
 23069 0000DF9D C9                      	leave
 23070 0000DF9E C21800                  	ret 8 * (2 + 1)
 23071                                  .L_lambda_simple_end_0081:	; new closure is in rax
 23072 0000DFA1 48890425[30040000]      	mov qword [free_var_134], rax
 23073 0000DFA9 48B8-                   	mov rax, sob_void
 23073 0000DFAB [0000000000000000] 
 23074                                  
 23075 0000DFB3 4889C7                  	mov rdi, rax
 23076 0000DFB6 E86C2D0000              	call print_sexpr_if_not_void
 23077                                  
 23078 0000DFBB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23079 0000DFC0 E8512D0000              	call malloc
 23080 0000DFC5 50                      	push rax
 23081 0000DFC6 BF00000000              	mov rdi, 8 * 0	; new rib
 23082 0000DFCB E8462D0000              	call malloc
 23083 0000DFD0 50                      	push rax
 23084 0000DFD1 BF08000000              	mov rdi, 8 * 1	; extended env
 23085 0000DFD6 E83B2D0000              	call malloc
 23086 0000DFDB 488B7D10                	mov rdi, ENV
 23087 0000DFDF BE00000000              	mov rsi, 0
 23088 0000DFE4 BA01000000              	mov rdx, 1
 23089                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
 23090 0000DFE9 4883FE00                	cmp rsi, 0
 23091 0000DFED 7410                    	je .L_lambda_simple_env_end_0082
 23092 0000DFEF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23093 0000DFF3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23094 0000DFF7 48FFC6                  	inc rsi
 23095 0000DFFA 48FFC2                  	inc rdx
 23096 0000DFFD EBEA                    	jmp .L_lambda_simple_env_loop_0082
 23097                                  .L_lambda_simple_env_end_0082:
 23098 0000DFFF 5B                      	pop rbx
 23099 0000E000 BE00000000              	mov rsi, 0
 23100                                  .L_lambda_simple_params_loop_0082:	; copy params
 23101 0000E005 4883FE00                	cmp rsi, 0
 23102 0000E009 740E                    	je .L_lambda_simple_params_end_0082
 23103 0000E00B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23104 0000E010 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23105 0000E014 48FFC6                  	inc rsi
 23106 0000E017 EBEC                    	jmp .L_lambda_simple_params_loop_0082
 23107                                  .L_lambda_simple_params_end_0082:
 23108 0000E019 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23109 0000E01C 4889C3                  	mov rbx, rax
 23110 0000E01F 58                      	pop rax
 23111 0000E020 C60005                  	mov byte [rax], T_closure
 23112 0000E023 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23113 0000E027 48C74009[34E00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
 23114 0000E02F E903010000              	jmp .L_lambda_simple_end_0082
 23115                                  .L_lambda_simple_code_0082:	; lambda-simple body
 23116 0000E034 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23117 0000E03A 740B                    	je .L_lambda_simple_arity_check_ok_011c
 23118 0000E03C FF742410                	push qword [rsp + 8 * 2]
 23119 0000E040 6A01                    	push 1
 23120 0000E042 E9882C0000              	jmp L_error_incorrect_arity_simple
 23121                                  .L_lambda_simple_arity_check_ok_011c:
 23122 0000E047 C8000000                	enter 0, 0
 23123 0000E04B 488B4520                mov rax, qword [rbp + 32]
 23124 0000E04F 50                      	push rax
 23125 0000E050 6A01                    	push 1
 23126 0000E052 488B0425[00000000]      	mov rax, qword [free_var_0]
 23127 0000E05A 803805                  	cmp byte [rax], T_closure 
 23128 0000E05D 0F853B3C0000                    jne L_code_ptr_error
 23129                                  
 23130 0000E063 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23131                                  
 23132 0000E067 53                              push rbx
 23133                                  
 23134 0000E068 FF5009                          call SOB_CLOSURE_CODE(rax)
 23135                                  
 23136 0000E06B 483D[02000000]                  	cmp rax, sob_boolean_false
 23137 0000E071 0F85BC000000            	jne .L_or_end_000c
 23138 0000E077 488B4520                mov rax, qword [rbp + 32]
 23139 0000E07B 50                      	push rax
 23140 0000E07C 6A01                    	push 1
 23141 0000E07E 488B0425[08000000]      	mov rax, qword [free_var_1]
 23142 0000E086 803805                  	cmp byte [rax], T_closure 
 23143 0000E089 0F850F3C0000                    jne L_code_ptr_error
 23144                                  
 23145 0000E08F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23146                                  
 23147 0000E093 53                              push rbx
 23148                                  
 23149 0000E094 FF5009                          call SOB_CLOSURE_CODE(rax)
 23150                                  
 23151 0000E097 483D[02000000]                  	cmp rax, sob_boolean_false
 23152 0000E09D 0F8486000000            	je .L_if_else_0048
 23153 0000E0A3 488B4520                mov rax, qword [rbp + 32]
 23154 0000E0A7 50                      	push rax
 23155 0000E0A8 6A01                    	push 1
 23156 0000E0AA 488B0425[88000000]      	mov rax, qword [free_var_17]
 23157 0000E0B2 803805                  	cmp byte [rax], T_closure 
 23158 0000E0B5 0F85E33B0000                    jne L_code_ptr_error
 23159                                  
 23160 0000E0BB 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23161                                  
 23162 0000E0BF 53                              push rbx
 23163                                  
 23164 0000E0C0 FF5009                          call SOB_CLOSURE_CODE(rax)
 23165                                  
 23166 0000E0C3 50                              	push rax
 23167 0000E0C4 6A01                    	push 1
 23168 0000E0C6 488B0425[A0020000]      	mov rax, qword [free_var_84]
 23169                                  .L_lambda_simple_arity_check_ok_011d:
 23170 0000E0CE 803805                  	cmp byte [rax], T_closure
 23171                                  
 23172 0000E0D1 0F85C73B0000                    jne L_code_ptr_error                      ; rax <- proc
 23173                                  
 23174                                  
 23175 0000E0D7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23176                                  
 23177 0000E0DB 53                              push rbx                                  ; env pushed
 23178                                  
 23179 0000E0DC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23180                                  
 23181                                  
 23182 0000E0DF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23183                                  
 23184                                          
 23185                                          
 23186 0000E0E2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23187                                  
 23188 0000E0E6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23189                                  
 23190                                  
 23191 0000E0EB 4D89CA                          mov r10, r9
 23192 0000E0EE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 23193                                  
 23194                                                                                         
 23195 0000E0F2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23196 0000E0F5 4983C404                        add r12, 4
 23197                                  
 23198 0000E0F9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23199                                  .L_tc_recycle_frame_loop_009b:
 23200 0000E0FF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 23201                                  
 23202 0000E103 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23203                                  
 23204                                  
 23205                                  
 23206 0000E108 41BE00000000                    mov r14, 0                                ; clean box
 23207                                  
 23208                                  
 23209                                                                  
 23210 0000E10E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23211                                  
 23212 0000E112 4983C4FF                        add r12, -1 
 23213                                  
 23214 0000E116 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23215 0000E11A 75E3                    	jne .L_tc_recycle_frame_loop_009b
 23216                                  .L_tc_recycle_frame_done_009b:
 23217 0000E11C 5D                      	pop rbp                                  ; restore the old rbp
 23218                                  
 23219 0000E11D 488B4D00                        mov rcx, qword [rbp]
 23220 0000E121 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23221                                            ; rbx <- code(proc)
 23222                                  
 23223 0000E125 FFE3                            jmp rbx
 23224 0000E127 EB0A                    	jmp .L_if_end_0048
 23225                                  	.L_if_else_0048:
 23226 0000E129 48B8-                   		mov rax, qword (L_constants + 2)
 23226 0000E12B [0200000000000000] 
 23227                                  	.L_if_end_0048:
 23228                                  .L_or_end_000c:
 23229 0000E133 C9                      	leave
 23230 0000E134 C21800                  	ret 8 * (2 + 1)
 23231                                  .L_lambda_simple_end_0082:	; new closure is in rax
 23232 0000E137 48890425[A0020000]      	mov qword [free_var_84], rax
 23233 0000E13F 48B8-                   	mov rax, sob_void
 23233 0000E141 [0000000000000000] 
 23234                                  
 23235 0000E149 4889C7                  	mov rdi, rax
 23236 0000E14C E8D62B0000              	call print_sexpr_if_not_void
 23237                                  
 23238 0000E151 488B0425[98010000]      	mov rax, qword [free_var_51]
 23239 0000E159 50                      	push rax
 23240 0000E15A 6A01                    	push 1
 23241 0000E15C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23242 0000E161 E8B02B0000              	call malloc
 23243 0000E166 50                      	push rax
 23244 0000E167 BF00000000              	mov rdi, 8 * 0	; new rib
 23245 0000E16C E8A52B0000              	call malloc
 23246 0000E171 50                      	push rax
 23247 0000E172 BF08000000              	mov rdi, 8 * 1	; extended env
 23248 0000E177 E89A2B0000              	call malloc
 23249 0000E17C 488B7D10                	mov rdi, ENV
 23250 0000E180 BE00000000              	mov rsi, 0
 23251 0000E185 BA01000000              	mov rdx, 1
 23252                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
 23253 0000E18A 4883FE00                	cmp rsi, 0
 23254 0000E18E 7410                    	je .L_lambda_simple_env_end_0083
 23255 0000E190 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23256 0000E194 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23257 0000E198 48FFC6                  	inc rsi
 23258 0000E19B 48FFC2                  	inc rdx
 23259 0000E19E EBEA                    	jmp .L_lambda_simple_env_loop_0083
 23260                                  .L_lambda_simple_env_end_0083:
 23261 0000E1A0 5B                      	pop rbx
 23262 0000E1A1 BE00000000              	mov rsi, 0
 23263                                  .L_lambda_simple_params_loop_0083:	; copy params
 23264 0000E1A6 4883FE00                	cmp rsi, 0
 23265 0000E1AA 740E                    	je .L_lambda_simple_params_end_0083
 23266 0000E1AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23267 0000E1B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23268 0000E1B5 48FFC6                  	inc rsi
 23269 0000E1B8 EBEC                    	jmp .L_lambda_simple_params_loop_0083
 23270                                  .L_lambda_simple_params_end_0083:
 23271 0000E1BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23272 0000E1BD 4889C3                  	mov rbx, rax
 23273 0000E1C0 58                      	pop rax
 23274 0000E1C1 C60005                  	mov byte [rax], T_closure
 23275 0000E1C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23276 0000E1C8 48C74009[D5E10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
 23277 0000E1D0 E9B0030000              	jmp .L_lambda_simple_end_0083
 23278                                  .L_lambda_simple_code_0083:	; lambda-simple body
 23279 0000E1D5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23280 0000E1DB 740B                    	je .L_lambda_simple_arity_check_ok_011e
 23281 0000E1DD FF742410                	push qword [rsp + 8 * 2]
 23282 0000E1E1 6A01                    	push 1
 23283 0000E1E3 E9E72A0000              	jmp L_error_incorrect_arity_simple
 23284                                  .L_lambda_simple_arity_check_ok_011e:
 23285 0000E1E8 C8000000                	enter 0, 0
 23286 0000E1EC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23287 0000E1F1 E8202B0000              	call malloc
 23288 0000E1F6 50                      	push rax
 23289 0000E1F7 BF08000000              	mov rdi, 8 * 1	; new rib
 23290 0000E1FC E8152B0000              	call malloc
 23291 0000E201 50                      	push rax
 23292 0000E202 BF10000000              	mov rdi, 8 * 2	; extended env
 23293 0000E207 E80A2B0000              	call malloc
 23294 0000E20C 488B7D10                	mov rdi, ENV
 23295 0000E210 BE00000000              	mov rsi, 0
 23296 0000E215 BA01000000              	mov rdx, 1
 23297                                  .L_lambda_opt_env_loop_0015:	; ext_env[i + 1] <-- env[i]
 23298 0000E21A 4883FE01                	cmp rsi, 1
 23299 0000E21E 7410                    	je .L_lambda_opt_env_end_0015
 23300 0000E220 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23301 0000E224 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23302 0000E228 48FFC6                  	inc rsi
 23303 0000E22B 48FFC2                  	inc rdx
 23304 0000E22E EBEA                    	jmp .L_lambda_opt_env_loop_0015
 23305                                  .L_lambda_opt_env_end_0015:
 23306 0000E230 5B                      	pop rbx
 23307 0000E231 BE00000000              	mov rsi, 0
 23308                                  .L_lambda_opt_params_loop_0029:	; copy params
 23309 0000E236 4883FE01                	cmp rsi, 1
 23310 0000E23A 740E                    	je .L_lambda_opt_params_end_0029
 23311 0000E23C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23312 0000E241 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23313 0000E245 48FFC6                  	inc rsi
 23314 0000E248 EBEC                    	jmp .L_lambda_opt_params_loop_0029
 23315                                  .L_lambda_opt_params_end_0029:
 23316 0000E24A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23317 0000E24D 4889C3                  	mov rbx, rax
 23318 0000E250 58                      	pop rax
 23319 0000E251 C60005                  	mov byte [rax], T_closure
 23320 0000E254 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23321 0000E258 48C74009[65E20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0015
 23322 0000E260 E91C030000              	jmp .L_lambda_opt_end_0015
 23323                                  .L_lambda_opt_code_0015:
 23324 0000E265 4C8B542410              mov r10, qword [rsp+8*2]
 23325 0000E26A 4983FA01                cmp r10, 1
 23326 0000E26E 740B                    je .L_lambda_opt_arity_check_exact_0015
 23327 0000E270 4983FA01                cmp r10, 1
 23328 0000E274 7F41                    jg .L_lambda_opt_arity_check_more_0015
 23329 0000E276 E9682A0000              jmp L_error_incorrect_arity_opt
 23330                                  .L_lambda_opt_arity_check_exact_0015:
 23331 0000E27B 4883EC08                sub rsp, 8
 23332 0000E27F BA04000000              mov rdx, 3+1
 23333 0000E284 4889E3                  mov qword rbx, rsp
 23334                                  .L_lambda_opt_params_loop_002a:
 23335 0000E287 488B4B08                mov qword rcx, [rbx+8]
 23336 0000E28B 48890B                  mov qword [rbx], rcx
 23337 0000E28E 48FFCA                  dec rdx
 23338 0000E291 4883C308                add rbx, 8
 23339 0000E295 4883FA00                cmp rdx, 0
 23340 0000E299 7402                    je .L_lambda_opt_params_end_002a
 23341 0000E29B EBEA                    jmp .L_lambda_opt_params_loop_002a
 23342                                  .L_lambda_opt_params_end_002a:
 23343 0000E29D 49FFC2                  inc r10
 23344 0000E2A0 4C89542410              mov qword [rsp+8*2], r10
 23345 0000E2A5 4983C202                add r10, 2
 23346 0000E2A9 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 23347 0000E2B1 4C8B4D00                mov r9, [rbp]
 23348 0000E2B5 EB52                    jmp .L_lambda_opt_stack_adjusted_0015
 23349                                  .L_lambda_opt_arity_check_more_0015:
 23350 0000E2B7 48B8-                   mov rax, sob_nil
 23350 0000E2B9 [0100000000000000] 
 23351 0000E2C1 4C8B542410              mov r10, [rsp+2*8]
 23352 0000E2C6 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 23353 0000E2CB 4983EA01                sub r10, 1
 23354                                  .L_lambda_opt_stack_shrink_loop_0015:
 23355 0000E2CF 4983FA00                cmp r10, 0
 23356 0000E2D3 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0015
 23357 0000E2D5 4889C1                  mov rcx, rax
 23358 0000E2D8 498B10                  mov rdx, [r8]
 23359 0000E2DB BF11000000              mov rdi, 17
 23360 0000E2E0 E8312A0000              call malloc
 23361 0000E2E5 C60021                  mov byte [rax], T_pair
 23362 0000E2E8 48894809                mov SOB_PAIR_CDR(rax), rcx
 23363 0000E2EC 48895001                mov SOB_PAIR_CAR(rax), rdx
 23364 0000E2F0 4983E808                sub r8, 8
 23365 0000E2F4 49FFCA                  dec r10
 23366 0000E2F7 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0015
 23367                                  .L_lambda_opt_stack_shrink_loop_exit_0015:
 23368 0000E2F9 4889442420              mov [rsp+8*(2+2)], rax
 23369 0000E2FE 41BA02000000            mov r10, 2
 23370 0000E304 4C89542410              mov [rsp+16], r10
 23371                                  .L_lambda_opt_stack_adjusted_0015:
 23372 0000E309 4C8B4D00                mov r9, [rbp]
 23373 0000E30D C8000000                enter 0, 0
 23374 0000E311 488B4528                mov rax, qword [rbp + 40]
 23375 0000E315 50                      	push rax
 23376 0000E316 6A01                    	push 1
 23377 0000E318 488B0425[00000000]      	mov rax, qword [free_var_0]
 23378 0000E320 803805                  	cmp byte [rax], T_closure 
 23379 0000E323 0F8575390000                    jne L_code_ptr_error
 23380                                  
 23381 0000E329 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23382                                  
 23383 0000E32D 53                              push rbx
 23384                                  
 23385 0000E32E FF5009                          call SOB_CLOSURE_CODE(rax)
 23386                                  
 23387 0000E331 483D[02000000]                  	cmp rax, sob_boolean_false
 23388 0000E337 740F                    	je .L_if_else_0049
 23389 0000E339 48B8-                   	mov rax, qword (L_constants + 0)
 23389 0000E33B [0000000000000000] 
 23390 0000E343 E9CB000000              	jmp .L_if_end_0049
 23391                                  	.L_if_else_0049:
 23392 0000E348 488B4528                	mov rax, qword [rbp + 40]
 23393 0000E34C 50                      	push rax
 23394 0000E34D 6A01                    	push 1
 23395 0000E34F 488B0425[08000000]      	mov rax, qword [free_var_1]
 23396 0000E357 803805                  	cmp byte [rax], T_closure 
 23397 0000E35A 0F853E390000                    jne L_code_ptr_error
 23398                                  
 23399 0000E360 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23400                                  
 23401 0000E364 53                              push rbx
 23402                                  
 23403 0000E365 FF5009                          call SOB_CLOSURE_CODE(rax)
 23404                                  
 23405 0000E368 483D[02000000]                  	cmp rax, sob_boolean_false
 23406 0000E36E 743E                    	je .L_if_else_004b
 23407 0000E370 488B4528                mov rax, qword [rbp + 40]
 23408 0000E374 50                      	push rax
 23409 0000E375 6A01                    	push 1
 23410 0000E377 488B0425[88000000]      	mov rax, qword [free_var_17]
 23411 0000E37F 803805                  	cmp byte [rax], T_closure 
 23412 0000E382 0F8516390000                    jne L_code_ptr_error
 23413                                  
 23414 0000E388 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23415                                  
 23416 0000E38C 53                              push rbx
 23417                                  
 23418 0000E38D FF5009                          call SOB_CLOSURE_CODE(rax)
 23419                                  
 23420 0000E390 50                              	push rax
 23421 0000E391 6A01                    	push 1
 23422 0000E393 488B0425[00000000]      	mov rax, qword [free_var_0]
 23423 0000E39B 803805                  	cmp byte [rax], T_closure 
 23424 0000E39E 0F85FA380000                    jne L_code_ptr_error
 23425                                  
 23426 0000E3A4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23427                                  
 23428 0000E3A8 53                              push rbx
 23429                                  
 23430 0000E3A9 FF5009                          call SOB_CLOSURE_CODE(rax)
 23431                                  
 23432 0000E3AC EB0A                            	jmp .L_if_end_004b
 23433                                  	.L_if_else_004b:
 23434 0000E3AE 48B8-                   		mov rax, qword (L_constants + 2)
 23434 0000E3B0 [0200000000000000] 
 23435                                  	.L_if_end_004b:
 23436 0000E3B8 483D[02000000]          	cmp rax, sob_boolean_false
 23437 0000E3BE 7422                    	je .L_if_else_004a
 23438 0000E3C0 488B4528                mov rax, qword [rbp + 40]
 23439 0000E3C4 50                      	push rax
 23440 0000E3C5 6A01                    	push 1
 23441 0000E3C7 488B0425[80000000]      	mov rax, qword [free_var_16]
 23442 0000E3CF 803805                  	cmp byte [rax], T_closure 
 23443 0000E3D2 0F85C6380000                    jne L_code_ptr_error
 23444                                  
 23445 0000E3D8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23446                                  
 23447 0000E3DC 53                              push rbx
 23448                                  
 23449 0000E3DD FF5009                          call SOB_CLOSURE_CODE(rax)
 23450                                  
 23451 0000E3E0 EB31                            	jmp .L_if_end_004a
 23452                                  	.L_if_else_004a:
 23453 0000E3E2 48B8-                   		mov rax, qword (L_constants + 378)
 23453 0000E3E4 [7A01000000000000] 
 23454 0000E3EC 50                      	push rax
 23455 0000E3ED 48B8-                   	mov rax, qword (L_constants + 369)
 23455 0000E3EF [7101000000000000] 
 23456 0000E3F7 50                      	push rax
 23457 0000E3F8 6A02                    	push 2
 23458 0000E3FA 488B0425[30010000]      	mov rax, qword [free_var_38]
 23459 0000E402 803805                  	cmp byte [rax], T_closure 
 23460 0000E405 0F8593380000                    jne L_code_ptr_error
 23461                                  
 23462 0000E40B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23463                                  
 23464 0000E40F 53                              push rbx
 23465                                  
 23466 0000E410 FF5009                          call SOB_CLOSURE_CODE(rax)
 23467                                  
 23468                                          	.L_if_end_004a:
 23469                                  	.L_if_end_0049:
 23470 0000E413 50                      	push rax
 23471 0000E414 6A01                    	push 1
 23472 0000E416 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23473 0000E41B E8F6280000              	call malloc
 23474 0000E420 50                      	push rax
 23475 0000E421 BF10000000              	mov rdi, 8 * 2	; new rib
 23476 0000E426 E8EB280000              	call malloc
 23477 0000E42B 50                      	push rax
 23478 0000E42C BF18000000              	mov rdi, 8 * 3	; extended env
 23479 0000E431 E8E0280000              	call malloc
 23480 0000E436 488B7D10                	mov rdi, ENV
 23481 0000E43A BE00000000              	mov rsi, 0
 23482 0000E43F BA01000000              	mov rdx, 1
 23483                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
 23484 0000E444 4883FE02                	cmp rsi, 2
 23485 0000E448 7410                    	je .L_lambda_simple_env_end_0084
 23486 0000E44A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23487 0000E44E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23488 0000E452 48FFC6                  	inc rsi
 23489 0000E455 48FFC2                  	inc rdx
 23490 0000E458 EBEA                    	jmp .L_lambda_simple_env_loop_0084
 23491                                  .L_lambda_simple_env_end_0084:
 23492 0000E45A 5B                      	pop rbx
 23493 0000E45B BE00000000              	mov rsi, 0
 23494                                  .L_lambda_simple_params_loop_0084:	; copy params
 23495 0000E460 4883FE02                	cmp rsi, 2
 23496 0000E464 740E                    	je .L_lambda_simple_params_end_0084
 23497 0000E466 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23498 0000E46B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23499 0000E46F 48FFC6                  	inc rsi
 23500 0000E472 EBEC                    	jmp .L_lambda_simple_params_loop_0084
 23501                                  .L_lambda_simple_params_end_0084:
 23502 0000E474 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23503 0000E477 4889C3                  	mov rbx, rax
 23504 0000E47A 58                      	pop rax
 23505 0000E47B C60005                  	mov byte [rax], T_closure
 23506 0000E47E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23507 0000E482 48C74009[8FE40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
 23508 0000E48A E991000000              	jmp .L_lambda_simple_end_0084
 23509                                  .L_lambda_simple_code_0084:	; lambda-simple body
 23510 0000E48F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23511 0000E495 740B                    	je .L_lambda_simple_arity_check_ok_011f
 23512 0000E497 FF742410                	push qword [rsp + 8 * 2]
 23513 0000E49B 6A01                    	push 1
 23514 0000E49D E92D280000              	jmp L_error_incorrect_arity_simple
 23515                                  .L_lambda_simple_arity_check_ok_011f:
 23516 0000E4A2 C8000000                	enter 0, 0
 23517 0000E4A6 488B4520                mov rax, qword [rbp + 32]
 23518 0000E4AA 50                      	push rax
 23519 0000E4AB 488B4510                mov rax, qword [rbp + 16]
 23520 0000E4AF 488B00                  mov rax, qword [rax + 0]
 23521 0000E4B2 488B00                  mov rax, qword [rax + 0]
 23522 0000E4B5 50                      	push rax
 23523 0000E4B6 6A02                    	push 2
 23524 0000E4B8 488B4510                mov rax, qword [rbp + 16]
 23525 0000E4BC 488B4008                mov rax, qword [rax + 8]
 23526 0000E4C0 488B00                  mov rax, qword [rax + 0]
 23527                                  .L_lambda_simple_arity_check_ok_0120:
 23528 0000E4C3 803805                  	cmp byte [rax], T_closure
 23529                                  
 23530 0000E4C6 0F85D2370000                    jne L_code_ptr_error                      ; rax <- proc
 23531                                  
 23532                                  
 23533 0000E4CC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23534                                  
 23535 0000E4D0 53                              push rbx                                  ; env pushed
 23536                                  
 23537 0000E4D1 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23538                                  
 23539                                  
 23540 0000E4D4 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23541                                  
 23542                                          
 23543                                          
 23544 0000E4D7 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23545                                  
 23546 0000E4DB 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23547                                  
 23548                                  
 23549 0000E4E0 4D89CA                          mov r10, r9
 23550 0000E4E3 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 23551                                  
 23552                                                                                         
 23553 0000E4E7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23554 0000E4EA 4983C404                        add r12, 4
 23555                                  
 23556 0000E4EE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23557                                  .L_tc_recycle_frame_loop_009c:
 23558 0000E4F4 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 23559                                  
 23560 0000E4F8 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23561                                  
 23562                                  
 23563                                  
 23564 0000E4FD 41BE00000000                    mov r14, 0                                ; clean box
 23565                                  
 23566                                  
 23567                                                                  
 23568 0000E503 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23569                                  
 23570 0000E507 4983C4FF                        add r12, -1 
 23571                                  
 23572 0000E50B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23573 0000E50F 75E3                    	jne .L_tc_recycle_frame_loop_009c
 23574                                  .L_tc_recycle_frame_done_009c:
 23575 0000E511 5D                      	pop rbp                                  ; restore the old rbp
 23576                                  
 23577 0000E512 488B4D00                        mov rcx, qword [rbp]
 23578 0000E516 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23579                                            ; rbx <- code(proc)
 23580                                  
 23581 0000E51A FFE3                            jmp rbx
 23582 0000E51C C9                      	leave
 23583 0000E51D C21800                  	ret 8 * (2 + 1)
 23584                                  .L_lambda_simple_end_0084:	; new closure is in rax
 23585                                  .L_lambda_simple_arity_check_ok_0121:
 23586 0000E520 803805                  	cmp byte [rax], T_closure
 23587                                  
 23588 0000E523 0F8575370000                    jne L_code_ptr_error                      ; rax <- proc
 23589                                  
 23590                                  
 23591 0000E529 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23592                                  
 23593 0000E52D 53                              push rbx                                  ; env pushed
 23594                                  
 23595 0000E52E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23596                                  
 23597                                  
 23598 0000E531 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23599                                  
 23600                                          
 23601                                          
 23602 0000E534 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23603                                  
 23604 0000E538 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23605                                  
 23606                                  
 23607 0000E53D 4D89CA                          mov r10, r9
 23608 0000E540 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 23609                                  
 23610                                                                                         
 23611 0000E544 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23612 0000E547 4983C404                        add r12, 4
 23613                                  
 23614 0000E54B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23615                                  .L_tc_recycle_frame_loop_009d:
 23616 0000E551 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 23617                                  
 23618 0000E555 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23619                                  
 23620                                  
 23621                                  
 23622 0000E55A 41BE00000000                    mov r14, 0                                ; clean box
 23623                                  
 23624                                  
 23625                                                                  
 23626 0000E560 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23627                                  
 23628 0000E564 4983C4FF                        add r12, -1 
 23629                                  
 23630 0000E568 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23631 0000E56C 75E3                    	jne .L_tc_recycle_frame_loop_009d
 23632                                  .L_tc_recycle_frame_done_009d:
 23633 0000E56E 5D                      	pop rbp                                  ; restore the old rbp
 23634                                  
 23635 0000E56F 488B4D00                        mov rcx, qword [rbp]
 23636 0000E573 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 23637                                            ; rbx <- code(proc)
 23638                                  
 23639 0000E577 FFE3                            jmp rbx
 23640 0000E579 C9                      leave
 23641 0000E57A 4C8B4D00                mov r9, [rbp]
 23642 0000E57E C22800                  ret 8 * (3 + 2)
 23643                                  .L_lambda_opt_end_0015:	; new closure is in rax
 23644 0000E581 C9                      	leave
 23645 0000E582 C21800                  	ret 8 * (2 + 1)
 23646                                  .L_lambda_simple_end_0083:	; new closure is in rax
 23647 0000E585 803805                  	cmp byte [rax], T_closure 
 23648 0000E588 0F8510370000                    jne L_code_ptr_error
 23649                                  
 23650 0000E58E 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23651                                  
 23652 0000E592 53                              push rbx
 23653                                  
 23654 0000E593 FF5009                          call SOB_CLOSURE_CODE(rax)
 23655                                  
 23656 0000E596 48890425[98010000]              	mov qword [free_var_51], rax
 23657 0000E59E 48B8-                   	mov rax, sob_void
 23657 0000E5A0 [0000000000000000] 
 23658                                  
 23659 0000E5A8 4889C7                  	mov rdi, rax
 23660 0000E5AB E877270000              	call print_sexpr_if_not_void
 23661                                  
 23662 0000E5B0 488B0425[A0010000]      	mov rax, qword [free_var_52]
 23663 0000E5B8 50                      	push rax
 23664 0000E5B9 6A01                    	push 1
 23665 0000E5BB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23666 0000E5C0 E851270000              	call malloc
 23667 0000E5C5 50                      	push rax
 23668 0000E5C6 BF00000000              	mov rdi, 8 * 0	; new rib
 23669 0000E5CB E846270000              	call malloc
 23670 0000E5D0 50                      	push rax
 23671 0000E5D1 BF08000000              	mov rdi, 8 * 1	; extended env
 23672 0000E5D6 E83B270000              	call malloc
 23673 0000E5DB 488B7D10                	mov rdi, ENV
 23674 0000E5DF BE00000000              	mov rsi, 0
 23675 0000E5E4 BA01000000              	mov rdx, 1
 23676                                  .L_lambda_simple_env_loop_0085:	; ext_env[i + 1] <-- env[i]
 23677 0000E5E9 4883FE00                	cmp rsi, 0
 23678 0000E5ED 7410                    	je .L_lambda_simple_env_end_0085
 23679 0000E5EF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23680 0000E5F3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23681 0000E5F7 48FFC6                  	inc rsi
 23682 0000E5FA 48FFC2                  	inc rdx
 23683 0000E5FD EBEA                    	jmp .L_lambda_simple_env_loop_0085
 23684                                  .L_lambda_simple_env_end_0085:
 23685 0000E5FF 5B                      	pop rbx
 23686 0000E600 BE00000000              	mov rsi, 0
 23687                                  .L_lambda_simple_params_loop_0085:	; copy params
 23688 0000E605 4883FE00                	cmp rsi, 0
 23689 0000E609 740E                    	je .L_lambda_simple_params_end_0085
 23690 0000E60B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23691 0000E610 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23692 0000E614 48FFC6                  	inc rsi
 23693 0000E617 EBEC                    	jmp .L_lambda_simple_params_loop_0085
 23694                                  .L_lambda_simple_params_end_0085:
 23695 0000E619 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23696 0000E61C 4889C3                  	mov rbx, rax
 23697 0000E61F 58                      	pop rax
 23698 0000E620 C60005                  	mov byte [rax], T_closure
 23699 0000E623 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23700 0000E627 48C74009[34E60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0085
 23701 0000E62F E9B0030000              	jmp .L_lambda_simple_end_0085
 23702                                  .L_lambda_simple_code_0085:	; lambda-simple body
 23703 0000E634 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23704 0000E63A 740B                    	je .L_lambda_simple_arity_check_ok_0122
 23705 0000E63C FF742410                	push qword [rsp + 8 * 2]
 23706 0000E640 6A01                    	push 1
 23707 0000E642 E988260000              	jmp L_error_incorrect_arity_simple
 23708                                  .L_lambda_simple_arity_check_ok_0122:
 23709 0000E647 C8000000                	enter 0, 0
 23710 0000E64B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23711 0000E650 E8C1260000              	call malloc
 23712 0000E655 50                      	push rax
 23713 0000E656 BF08000000              	mov rdi, 8 * 1	; new rib
 23714 0000E65B E8B6260000              	call malloc
 23715 0000E660 50                      	push rax
 23716 0000E661 BF10000000              	mov rdi, 8 * 2	; extended env
 23717 0000E666 E8AB260000              	call malloc
 23718 0000E66B 488B7D10                	mov rdi, ENV
 23719 0000E66F BE00000000              	mov rsi, 0
 23720 0000E674 BA01000000              	mov rdx, 1
 23721                                  .L_lambda_opt_env_loop_0016:	; ext_env[i + 1] <-- env[i]
 23722 0000E679 4883FE01                	cmp rsi, 1
 23723 0000E67D 7410                    	je .L_lambda_opt_env_end_0016
 23724 0000E67F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23725 0000E683 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23726 0000E687 48FFC6                  	inc rsi
 23727 0000E68A 48FFC2                  	inc rdx
 23728 0000E68D EBEA                    	jmp .L_lambda_opt_env_loop_0016
 23729                                  .L_lambda_opt_env_end_0016:
 23730 0000E68F 5B                      	pop rbx
 23731 0000E690 BE00000000              	mov rsi, 0
 23732                                  .L_lambda_opt_params_loop_002b:	; copy params
 23733 0000E695 4883FE01                	cmp rsi, 1
 23734 0000E699 740E                    	je .L_lambda_opt_params_end_002b
 23735 0000E69B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23736 0000E6A0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23737 0000E6A4 48FFC6                  	inc rsi
 23738 0000E6A7 EBEC                    	jmp .L_lambda_opt_params_loop_002b
 23739                                  .L_lambda_opt_params_end_002b:
 23740 0000E6A9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23741 0000E6AC 4889C3                  	mov rbx, rax
 23742 0000E6AF 58                      	pop rax
 23743 0000E6B0 C60005                  	mov byte [rax], T_closure
 23744 0000E6B3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23745 0000E6B7 48C74009[C4E60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0016
 23746 0000E6BF E91C030000              	jmp .L_lambda_opt_end_0016
 23747                                  .L_lambda_opt_code_0016:
 23748 0000E6C4 4C8B542410              mov r10, qword [rsp+8*2]
 23749 0000E6C9 4983FA01                cmp r10, 1
 23750 0000E6CD 740B                    je .L_lambda_opt_arity_check_exact_0016
 23751 0000E6CF 4983FA01                cmp r10, 1
 23752 0000E6D3 7F41                    jg .L_lambda_opt_arity_check_more_0016
 23753 0000E6D5 E909260000              jmp L_error_incorrect_arity_opt
 23754                                  .L_lambda_opt_arity_check_exact_0016:
 23755 0000E6DA 4883EC08                sub rsp, 8
 23756 0000E6DE BA04000000              mov rdx, 3+1
 23757 0000E6E3 4889E3                  mov qword rbx, rsp
 23758                                  .L_lambda_opt_params_loop_002c:
 23759 0000E6E6 488B4B08                mov qword rcx, [rbx+8]
 23760 0000E6EA 48890B                  mov qword [rbx], rcx
 23761 0000E6ED 48FFCA                  dec rdx
 23762 0000E6F0 4883C308                add rbx, 8
 23763 0000E6F4 4883FA00                cmp rdx, 0
 23764 0000E6F8 7402                    je .L_lambda_opt_params_end_002c
 23765 0000E6FA EBEA                    jmp .L_lambda_opt_params_loop_002c
 23766                                  .L_lambda_opt_params_end_002c:
 23767 0000E6FC 49FFC2                  inc r10
 23768 0000E6FF 4C89542410              mov qword [rsp+8*2], r10
 23769 0000E704 4983C202                add r10, 2
 23770 0000E708 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 23771 0000E710 4C8B4D00                mov r9, [rbp]
 23772 0000E714 EB52                    jmp .L_lambda_opt_stack_adjusted_0016
 23773                                  .L_lambda_opt_arity_check_more_0016:
 23774 0000E716 48B8-                   mov rax, sob_nil
 23774 0000E718 [0100000000000000] 
 23775 0000E720 4C8B542410              mov r10, [rsp+2*8]
 23776 0000E725 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 23777 0000E72A 4983EA01                sub r10, 1
 23778                                  .L_lambda_opt_stack_shrink_loop_0016:
 23779 0000E72E 4983FA00                cmp r10, 0
 23780 0000E732 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0016
 23781 0000E734 4889C1                  mov rcx, rax
 23782 0000E737 498B10                  mov rdx, [r8]
 23783 0000E73A BF11000000              mov rdi, 17
 23784 0000E73F E8D2250000              call malloc
 23785 0000E744 C60021                  mov byte [rax], T_pair
 23786 0000E747 48894809                mov SOB_PAIR_CDR(rax), rcx
 23787 0000E74B 48895001                mov SOB_PAIR_CAR(rax), rdx
 23788 0000E74F 4983E808                sub r8, 8
 23789 0000E753 49FFCA                  dec r10
 23790 0000E756 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0016
 23791                                  .L_lambda_opt_stack_shrink_loop_exit_0016:
 23792 0000E758 4889442420              mov [rsp+8*(2+2)], rax
 23793 0000E75D 41BA02000000            mov r10, 2
 23794 0000E763 4C89542410              mov [rsp+16], r10
 23795                                  .L_lambda_opt_stack_adjusted_0016:
 23796 0000E768 4C8B4D00                mov r9, [rbp]
 23797 0000E76C C8000000                enter 0, 0
 23798 0000E770 488B4528                mov rax, qword [rbp + 40]
 23799 0000E774 50                      	push rax
 23800 0000E775 6A01                    	push 1
 23801 0000E777 488B0425[00000000]      	mov rax, qword [free_var_0]
 23802 0000E77F 803805                  	cmp byte [rax], T_closure 
 23803 0000E782 0F8516350000                    jne L_code_ptr_error
 23804                                  
 23805 0000E788 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23806                                  
 23807 0000E78C 53                              push rbx
 23808                                  
 23809 0000E78D FF5009                          call SOB_CLOSURE_CODE(rax)
 23810                                  
 23811 0000E790 483D[02000000]                  	cmp rax, sob_boolean_false
 23812 0000E796 740F                    	je .L_if_else_004c
 23813 0000E798 48B8-                   	mov rax, qword (L_constants + 4)
 23813 0000E79A [0400000000000000] 
 23814 0000E7A2 E9CB000000              	jmp .L_if_end_004c
 23815                                  	.L_if_else_004c:
 23816 0000E7A7 488B4528                	mov rax, qword [rbp + 40]
 23817 0000E7AB 50                      	push rax
 23818 0000E7AC 6A01                    	push 1
 23819 0000E7AE 488B0425[08000000]      	mov rax, qword [free_var_1]
 23820 0000E7B6 803805                  	cmp byte [rax], T_closure 
 23821 0000E7B9 0F85DF340000                    jne L_code_ptr_error
 23822                                  
 23823 0000E7BF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23824                                  
 23825 0000E7C3 53                              push rbx
 23826                                  
 23827 0000E7C4 FF5009                          call SOB_CLOSURE_CODE(rax)
 23828                                  
 23829 0000E7C7 483D[02000000]                  	cmp rax, sob_boolean_false
 23830 0000E7CD 743E                    	je .L_if_else_004e
 23831 0000E7CF 488B4528                mov rax, qword [rbp + 40]
 23832 0000E7D3 50                      	push rax
 23833 0000E7D4 6A01                    	push 1
 23834 0000E7D6 488B0425[88000000]      	mov rax, qword [free_var_17]
 23835 0000E7DE 803805                  	cmp byte [rax], T_closure 
 23836 0000E7E1 0F85B7340000                    jne L_code_ptr_error
 23837                                  
 23838 0000E7E7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23839                                  
 23840 0000E7EB 53                              push rbx
 23841                                  
 23842 0000E7EC FF5009                          call SOB_CLOSURE_CODE(rax)
 23843                                  
 23844 0000E7EF 50                              	push rax
 23845 0000E7F0 6A01                    	push 1
 23846 0000E7F2 488B0425[00000000]      	mov rax, qword [free_var_0]
 23847 0000E7FA 803805                  	cmp byte [rax], T_closure 
 23848 0000E7FD 0F859B340000                    jne L_code_ptr_error
 23849                                  
 23850 0000E803 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23851                                  
 23852 0000E807 53                              push rbx
 23853                                  
 23854 0000E808 FF5009                          call SOB_CLOSURE_CODE(rax)
 23855                                  
 23856 0000E80B EB0A                            	jmp .L_if_end_004e
 23857                                  	.L_if_else_004e:
 23858 0000E80D 48B8-                   		mov rax, qword (L_constants + 2)
 23858 0000E80F [0200000000000000] 
 23859                                  	.L_if_end_004e:
 23860 0000E817 483D[02000000]          	cmp rax, sob_boolean_false
 23861 0000E81D 7422                    	je .L_if_else_004d
 23862 0000E81F 488B4528                mov rax, qword [rbp + 40]
 23863 0000E823 50                      	push rax
 23864 0000E824 6A01                    	push 1
 23865 0000E826 488B0425[80000000]      	mov rax, qword [free_var_16]
 23866 0000E82E 803805                  	cmp byte [rax], T_closure 
 23867 0000E831 0F8567340000                    jne L_code_ptr_error
 23868                                  
 23869 0000E837 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23870                                  
 23871 0000E83B 53                              push rbx
 23872                                  
 23873 0000E83C FF5009                          call SOB_CLOSURE_CODE(rax)
 23874                                  
 23875 0000E83F EB31                            	jmp .L_if_end_004d
 23876                                  	.L_if_else_004d:
 23877 0000E841 48B8-                   		mov rax, qword (L_constants + 459)
 23877 0000E843 [CB01000000000000] 
 23878 0000E84B 50                      	push rax
 23879 0000E84C 48B8-                   	mov rax, qword (L_constants + 450)
 23879 0000E84E [C201000000000000] 
 23880 0000E856 50                      	push rax
 23881 0000E857 6A02                    	push 2
 23882 0000E859 488B0425[30010000]      	mov rax, qword [free_var_38]
 23883 0000E861 803805                  	cmp byte [rax], T_closure 
 23884 0000E864 0F8534340000                    jne L_code_ptr_error
 23885                                  
 23886 0000E86A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 23887                                  
 23888 0000E86E 53                              push rbx
 23889                                  
 23890 0000E86F FF5009                          call SOB_CLOSURE_CODE(rax)
 23891                                  
 23892                                          	.L_if_end_004d:
 23893                                  	.L_if_end_004c:
 23894 0000E872 50                      	push rax
 23895 0000E873 6A01                    	push 1
 23896 0000E875 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23897 0000E87A E897240000              	call malloc
 23898 0000E87F 50                      	push rax
 23899 0000E880 BF10000000              	mov rdi, 8 * 2	; new rib
 23900 0000E885 E88C240000              	call malloc
 23901 0000E88A 50                      	push rax
 23902 0000E88B BF18000000              	mov rdi, 8 * 3	; extended env
 23903 0000E890 E881240000              	call malloc
 23904 0000E895 488B7D10                	mov rdi, ENV
 23905 0000E899 BE00000000              	mov rsi, 0
 23906 0000E89E BA01000000              	mov rdx, 1
 23907                                  .L_lambda_simple_env_loop_0086:	; ext_env[i + 1] <-- env[i]
 23908 0000E8A3 4883FE02                	cmp rsi, 2
 23909 0000E8A7 7410                    	je .L_lambda_simple_env_end_0086
 23910 0000E8A9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23911 0000E8AD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23912 0000E8B1 48FFC6                  	inc rsi
 23913 0000E8B4 48FFC2                  	inc rdx
 23914 0000E8B7 EBEA                    	jmp .L_lambda_simple_env_loop_0086
 23915                                  .L_lambda_simple_env_end_0086:
 23916 0000E8B9 5B                      	pop rbx
 23917 0000E8BA BE00000000              	mov rsi, 0
 23918                                  .L_lambda_simple_params_loop_0086:	; copy params
 23919 0000E8BF 4883FE02                	cmp rsi, 2
 23920 0000E8C3 740E                    	je .L_lambda_simple_params_end_0086
 23921 0000E8C5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23922 0000E8CA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23923 0000E8CE 48FFC6                  	inc rsi
 23924 0000E8D1 EBEC                    	jmp .L_lambda_simple_params_loop_0086
 23925                                  .L_lambda_simple_params_end_0086:
 23926 0000E8D3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23927 0000E8D6 4889C3                  	mov rbx, rax
 23928 0000E8D9 58                      	pop rax
 23929 0000E8DA C60005                  	mov byte [rax], T_closure
 23930 0000E8DD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23931 0000E8E1 48C74009[EEE80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0086
 23932 0000E8E9 E991000000              	jmp .L_lambda_simple_end_0086
 23933                                  .L_lambda_simple_code_0086:	; lambda-simple body
 23934 0000E8EE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23935 0000E8F4 740B                    	je .L_lambda_simple_arity_check_ok_0123
 23936 0000E8F6 FF742410                	push qword [rsp + 8 * 2]
 23937 0000E8FA 6A01                    	push 1
 23938 0000E8FC E9CE230000              	jmp L_error_incorrect_arity_simple
 23939                                  .L_lambda_simple_arity_check_ok_0123:
 23940 0000E901 C8000000                	enter 0, 0
 23941 0000E905 488B4520                mov rax, qword [rbp + 32]
 23942 0000E909 50                      	push rax
 23943 0000E90A 488B4510                mov rax, qword [rbp + 16]
 23944 0000E90E 488B00                  mov rax, qword [rax + 0]
 23945 0000E911 488B00                  mov rax, qword [rax + 0]
 23946 0000E914 50                      	push rax
 23947 0000E915 6A02                    	push 2
 23948 0000E917 488B4510                mov rax, qword [rbp + 16]
 23949 0000E91B 488B4008                mov rax, qword [rax + 8]
 23950 0000E91F 488B00                  mov rax, qword [rax + 0]
 23951                                  .L_lambda_simple_arity_check_ok_0124:
 23952 0000E922 803805                  	cmp byte [rax], T_closure
 23953                                  
 23954 0000E925 0F8573330000                    jne L_code_ptr_error                      ; rax <- proc
 23955                                  
 23956                                  
 23957 0000E92B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 23958                                  
 23959 0000E92F 53                              push rbx                                  ; env pushed
 23960                                  
 23961 0000E930 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 23962                                  
 23963                                  
 23964 0000E933 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 23965                                  
 23966                                          
 23967                                          
 23968 0000E936 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 23969                                  
 23970 0000E93A 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 23971                                  
 23972                                  
 23973 0000E93F 4D89CA                          mov r10, r9
 23974 0000E942 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 23975                                  
 23976                                                                                         
 23977 0000E946 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 23978 0000E949 4983C404                        add r12, 4
 23979                                  
 23980 0000E94D 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 23981                                  .L_tc_recycle_frame_loop_009e:
 23982 0000E953 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 23983                                  
 23984 0000E957 4E8974E500                      mov [rbp + (r12 * 8)], r14
 23985                                  
 23986                                  
 23987                                  
 23988 0000E95C 41BE00000000                    mov r14, 0                                ; clean box
 23989                                  
 23990                                  
 23991                                                                  
 23992 0000E962 4983C2FF                        add r10, -1                               ; args_copied_counter--
 23993                                  
 23994 0000E966 4983C4FF                        add r12, -1 
 23995                                  
 23996 0000E96A 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 23997 0000E96E 75E3                    	jne .L_tc_recycle_frame_loop_009e
 23998                                  .L_tc_recycle_frame_done_009e:
 23999 0000E970 5D                      	pop rbp                                  ; restore the old rbp
 24000                                  
 24001 0000E971 488B4D00                        mov rcx, qword [rbp]
 24002 0000E975 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24003                                            ; rbx <- code(proc)
 24004                                  
 24005 0000E979 FFE3                            jmp rbx
 24006 0000E97B C9                      	leave
 24007 0000E97C C21800                  	ret 8 * (2 + 1)
 24008                                  .L_lambda_simple_end_0086:	; new closure is in rax
 24009                                  .L_lambda_simple_arity_check_ok_0125:
 24010 0000E97F 803805                  	cmp byte [rax], T_closure
 24011                                  
 24012 0000E982 0F8516330000                    jne L_code_ptr_error                      ; rax <- proc
 24013                                  
 24014                                  
 24015 0000E988 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24016                                  
 24017 0000E98C 53                              push rbx                                  ; env pushed
 24018                                  
 24019 0000E98D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24020                                  
 24021                                  
 24022 0000E990 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24023                                  
 24024                                          
 24025                                          
 24026 0000E993 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24027                                  
 24028 0000E997 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24029                                  
 24030                                  
 24031 0000E99C 4D89CA                          mov r10, r9
 24032 0000E99F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 24033                                  
 24034                                                                                         
 24035 0000E9A3 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24036 0000E9A6 4983C404                        add r12, 4
 24037                                  
 24038 0000E9AA 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24039                                  .L_tc_recycle_frame_loop_009f:
 24040 0000E9B0 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 24041                                  
 24042 0000E9B4 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24043                                  
 24044                                  
 24045                                  
 24046 0000E9B9 41BE00000000                    mov r14, 0                                ; clean box
 24047                                  
 24048                                  
 24049                                                                  
 24050 0000E9BF 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24051                                  
 24052 0000E9C3 4983C4FF                        add r12, -1 
 24053                                  
 24054 0000E9C7 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24055 0000E9CB 75E3                    	jne .L_tc_recycle_frame_loop_009f
 24056                                  .L_tc_recycle_frame_done_009f:
 24057 0000E9CD 5D                      	pop rbp                                  ; restore the old rbp
 24058                                  
 24059 0000E9CE 488B4D00                        mov rcx, qword [rbp]
 24060 0000E9D2 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24061                                            ; rbx <- code(proc)
 24062                                  
 24063 0000E9D6 FFE3                            jmp rbx
 24064 0000E9D8 C9                      leave
 24065 0000E9D9 4C8B4D00                mov r9, [rbp]
 24066 0000E9DD C22800                  ret 8 * (3 + 2)
 24067                                  .L_lambda_opt_end_0016:	; new closure is in rax
 24068 0000E9E0 C9                      	leave
 24069 0000E9E1 C21800                  	ret 8 * (2 + 1)
 24070                                  .L_lambda_simple_end_0085:	; new closure is in rax
 24071 0000E9E4 803805                  	cmp byte [rax], T_closure 
 24072 0000E9E7 0F85B1320000                    jne L_code_ptr_error
 24073                                  
 24074 0000E9ED 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24075                                  
 24076 0000E9F1 53                              push rbx
 24077                                  
 24078 0000E9F2 FF5009                          call SOB_CLOSURE_CODE(rax)
 24079                                  
 24080 0000E9F5 48890425[A0010000]              	mov qword [free_var_52], rax
 24081 0000E9FD 48B8-                   	mov rax, sob_void
 24081 0000E9FF [0000000000000000] 
 24082                                  
 24083 0000EA07 4889C7                  	mov rdi, rax
 24084 0000EA0A E818230000              	call print_sexpr_if_not_void
 24085                                  
 24086 0000EA0F 48B8-                   	mov rax, qword (L_constants + 22)
 24086 0000EA11 [1600000000000000] 
 24087 0000EA19 50                      	push rax
 24088 0000EA1A 6A01                    	push 1
 24089 0000EA1C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24090 0000EA21 E8F0220000              	call malloc
 24091 0000EA26 50                      	push rax
 24092 0000EA27 BF00000000              	mov rdi, 8 * 0	; new rib
 24093 0000EA2C E8E5220000              	call malloc
 24094 0000EA31 50                      	push rax
 24095 0000EA32 BF08000000              	mov rdi, 8 * 1	; extended env
 24096 0000EA37 E8DA220000              	call malloc
 24097 0000EA3C 488B7D10                	mov rdi, ENV
 24098 0000EA40 BE00000000              	mov rsi, 0
 24099 0000EA45 BA01000000              	mov rdx, 1
 24100                                  .L_lambda_simple_env_loop_0087:	; ext_env[i + 1] <-- env[i]
 24101 0000EA4A 4883FE00                	cmp rsi, 0
 24102 0000EA4E 7410                    	je .L_lambda_simple_env_end_0087
 24103 0000EA50 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24104 0000EA54 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24105 0000EA58 48FFC6                  	inc rsi
 24106 0000EA5B 48FFC2                  	inc rdx
 24107 0000EA5E EBEA                    	jmp .L_lambda_simple_env_loop_0087
 24108                                  .L_lambda_simple_env_end_0087:
 24109 0000EA60 5B                      	pop rbx
 24110 0000EA61 BE00000000              	mov rsi, 0
 24111                                  .L_lambda_simple_params_loop_0087:	; copy params
 24112 0000EA66 4883FE00                	cmp rsi, 0
 24113 0000EA6A 740E                    	je .L_lambda_simple_params_end_0087
 24114 0000EA6C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24115 0000EA71 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24116 0000EA75 48FFC6                  	inc rsi
 24117 0000EA78 EBEC                    	jmp .L_lambda_simple_params_loop_0087
 24118                                  .L_lambda_simple_params_end_0087:
 24119 0000EA7A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24120 0000EA7D 4889C3                  	mov rbx, rax
 24121 0000EA80 58                      	pop rax
 24122 0000EA81 C60005                  	mov byte [rax], T_closure
 24123 0000EA84 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24124 0000EA88 48C74009[95EA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0087
 24125 0000EA90 E942040000              	jmp .L_lambda_simple_end_0087
 24126                                  .L_lambda_simple_code_0087:	; lambda-simple body
 24127 0000EA95 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24128 0000EA9B 740B                    	je .L_lambda_simple_arity_check_ok_0126
 24129 0000EA9D FF742410                	push qword [rsp + 8 * 2]
 24130 0000EAA1 6A01                    	push 1
 24131 0000EAA3 E927220000              	jmp L_error_incorrect_arity_simple
 24132                                  .L_lambda_simple_arity_check_ok_0126:
 24133 0000EAA8 C8000000                	enter 0, 0
 24134 0000EAAC BF08000000              mov rdi, 8
 24135 0000EAB1 E860220000              call malloc
 24136 0000EAB6 4889C3                  mov rbx, rax
 24137 0000EAB9 488B4520                mov rax, qword [rbp + 32]
 24138 0000EABD 488903                  mov qword [rbx], rax
 24139 0000EAC0 4889D8                  mov rax, rbx
 24140 0000EAC3 48894520                mov qword [rbp + 32], rax
 24141 0000EAC7 48B8-                   mov rax, sob_void
 24141 0000EAC9 [0000000000000000] 
 24142 0000EAD1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24143 0000EAD6 E83B220000              	call malloc
 24144 0000EADB 50                      	push rax
 24145 0000EADC BF08000000              	mov rdi, 8 * 1	; new rib
 24146 0000EAE1 E830220000              	call malloc
 24147 0000EAE6 50                      	push rax
 24148 0000EAE7 BF10000000              	mov rdi, 8 * 2	; extended env
 24149 0000EAEC E825220000              	call malloc
 24150 0000EAF1 488B7D10                	mov rdi, ENV
 24151 0000EAF5 BE00000000              	mov rsi, 0
 24152 0000EAFA BA01000000              	mov rdx, 1
 24153                                  .L_lambda_simple_env_loop_0088:	; ext_env[i + 1] <-- env[i]
 24154 0000EAFF 4883FE01                	cmp rsi, 1
 24155 0000EB03 7410                    	je .L_lambda_simple_env_end_0088
 24156 0000EB05 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24157 0000EB09 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24158 0000EB0D 48FFC6                  	inc rsi
 24159 0000EB10 48FFC2                  	inc rdx
 24160 0000EB13 EBEA                    	jmp .L_lambda_simple_env_loop_0088
 24161                                  .L_lambda_simple_env_end_0088:
 24162 0000EB15 5B                      	pop rbx
 24163 0000EB16 BE00000000              	mov rsi, 0
 24164                                  .L_lambda_simple_params_loop_0088:	; copy params
 24165 0000EB1B 4883FE01                	cmp rsi, 1
 24166 0000EB1F 740E                    	je .L_lambda_simple_params_end_0088
 24167 0000EB21 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24168 0000EB26 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24169 0000EB2A 48FFC6                  	inc rsi
 24170 0000EB2D EBEC                    	jmp .L_lambda_simple_params_loop_0088
 24171                                  .L_lambda_simple_params_end_0088:
 24172 0000EB2F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24173 0000EB32 4889C3                  	mov rbx, rax
 24174 0000EB35 58                      	pop rax
 24175 0000EB36 C60005                  	mov byte [rax], T_closure
 24176 0000EB39 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24177 0000EB3D 48C74009[4AEB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0088
 24178 0000EB45 E96C020000              	jmp .L_lambda_simple_end_0088
 24179                                  .L_lambda_simple_code_0088:	; lambda-simple body
 24180 0000EB4A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24181 0000EB50 740B                    	je .L_lambda_simple_arity_check_ok_0127
 24182 0000EB52 FF742410                	push qword [rsp + 8 * 2]
 24183 0000EB56 6A02                    	push 2
 24184 0000EB58 E972210000              	jmp L_error_incorrect_arity_simple
 24185                                  .L_lambda_simple_arity_check_ok_0127:
 24186 0000EB5D C8000000                	enter 0, 0
 24187 0000EB61 488B4520                mov rax, qword [rbp + 32]
 24188 0000EB65 50                      	push rax
 24189 0000EB66 6A01                    	push 1
 24190 0000EB68 488B0425[00000000]      	mov rax, qword [free_var_0]
 24191 0000EB70 803805                  	cmp byte [rax], T_closure 
 24192 0000EB73 0F8525310000                    jne L_code_ptr_error
 24193                                  
 24194 0000EB79 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24195                                  
 24196 0000EB7D 53                              push rbx
 24197                                  
 24198 0000EB7E FF5009                          call SOB_CLOSURE_CODE(rax)
 24199                                  
 24200 0000EB81 483D[02000000]                  	cmp rax, sob_boolean_false
 24201 0000EB87 7478                    	je .L_if_else_004f
 24202 0000EB89 48B8-                   	mov rax, qword (L_constants + 0)
 24202 0000EB8B [0000000000000000] 
 24203 0000EB93 50                      	push rax
 24204 0000EB94 488B4528                mov rax, qword [rbp + 40]
 24205 0000EB98 50                      	push rax
 24206 0000EB99 6A02                    	push 2
 24207 0000EB9B 488B0425[98010000]      	mov rax, qword [free_var_51]
 24208                                  .L_lambda_simple_arity_check_ok_012a:
 24209 0000EBA3 803805                  	cmp byte [rax], T_closure
 24210                                  
 24211 0000EBA6 0F85F2300000                    jne L_code_ptr_error                      ; rax <- proc
 24212                                  
 24213                                  
 24214 0000EBAC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24215                                  
 24216 0000EBB0 53                              push rbx                                  ; env pushed
 24217                                  
 24218 0000EBB1 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24219                                  
 24220                                  
 24221 0000EBB4 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24222                                  
 24223                                          
 24224                                          
 24225 0000EBB7 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24226                                  
 24227 0000EBBB 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24228                                  
 24229                                  
 24230 0000EBC0 4D89CA                          mov r10, r9
 24231 0000EBC3 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 24232                                  
 24233                                                                                         
 24234 0000EBC7 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24235 0000EBCA 4983C404                        add r12, 4
 24236                                  
 24237 0000EBCE 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24238                                  .L_tc_recycle_frame_loop_00a1:
 24239 0000EBD4 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 24240                                  
 24241 0000EBD8 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24242                                  
 24243                                  
 24244                                  
 24245 0000EBDD 41BE00000000                    mov r14, 0                                ; clean box
 24246                                  
 24247                                  
 24248                                                                  
 24249 0000EBE3 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24250                                  
 24251 0000EBE7 4983C4FF                        add r12, -1 
 24252                                  
 24253 0000EBEB 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24254 0000EBEF 75E3                    	jne .L_tc_recycle_frame_loop_00a1
 24255                                  .L_tc_recycle_frame_done_00a1:
 24256 0000EBF1 5D                      	pop rbp                                  ; restore the old rbp
 24257                                  
 24258 0000EBF2 488B4D00                        mov rcx, qword [rbp]
 24259 0000EBF6 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24260                                            ; rbx <- code(proc)
 24261                                  
 24262 0000EBFA FFE3                            jmp rbx
 24263 0000EBFC E9B1010000              	jmp .L_if_end_004f
 24264                                  	.L_if_else_004f:
 24265 0000EC01 48B8-                   		mov rax, qword (L_constants + 127)
 24265 0000EC03 [7F00000000000000] 
 24266 0000EC0B 50                      	push rax
 24267 0000EC0C 488B4528                mov rax, qword [rbp + 40]
 24268 0000EC10 50                      	push rax
 24269 0000EC11 6A02                    	push 2
 24270 0000EC13 488B0425[08030000]      	mov rax, qword [free_var_97]
 24271 0000EC1B 803805                  	cmp byte [rax], T_closure 
 24272 0000EC1E 0F857A300000                    jne L_code_ptr_error
 24273                                  
 24274 0000EC24 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24275                                  
 24276 0000EC28 53                              push rbx
 24277                                  
 24278 0000EC29 FF5009                          call SOB_CLOSURE_CODE(rax)
 24279                                  
 24280 0000EC2C 50                              	push rax
 24281 0000EC2D 488B4520                mov rax, qword [rbp + 32]
 24282 0000EC31 50                      	push rax
 24283 0000EC32 6A01                    	push 1
 24284 0000EC34 488B0425[88000000]      	mov rax, qword [free_var_17]
 24285 0000EC3C 803805                  	cmp byte [rax], T_closure 
 24286 0000EC3F 0F8559300000                    jne L_code_ptr_error
 24287                                  
 24288 0000EC45 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24289                                  
 24290 0000EC49 53                              push rbx
 24291                                  
 24292 0000EC4A FF5009                          call SOB_CLOSURE_CODE(rax)
 24293                                  
 24294 0000EC4D 50                              	push rax
 24295 0000EC4E 6A02                    	push 2
 24296 0000EC50 488B4510                mov rax, qword [rbp + 16]
 24297 0000EC54 488B00                  mov rax, qword [rax + 0]
 24298 0000EC57 488B00                  mov rax, qword [rax + 0]
 24299 0000EC5A 488B00                  	mov rax, qword [rax]
 24300 0000EC5D 803805                  	cmp byte [rax], T_closure 
 24301 0000EC60 0F8538300000                    jne L_code_ptr_error
 24302                                  
 24303 0000EC66 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24304                                  
 24305 0000EC6A 53                              push rbx
 24306                                  
 24307 0000EC6B FF5009                          call SOB_CLOSURE_CODE(rax)
 24308                                  
 24309 0000EC6E 50                              	push rax
 24310 0000EC6F 6A01                    	push 1
 24311 0000EC71 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24312 0000EC76 E89B200000              	call malloc
 24313 0000EC7B 50                      	push rax
 24314 0000EC7C BF10000000              	mov rdi, 8 * 2	; new rib
 24315 0000EC81 E890200000              	call malloc
 24316 0000EC86 50                      	push rax
 24317 0000EC87 BF18000000              	mov rdi, 8 * 3	; extended env
 24318 0000EC8C E885200000              	call malloc
 24319 0000EC91 488B7D10                	mov rdi, ENV
 24320 0000EC95 BE00000000              	mov rsi, 0
 24321 0000EC9A BA01000000              	mov rdx, 1
 24322                                  .L_lambda_simple_env_loop_0089:	; ext_env[i + 1] <-- env[i]
 24323 0000EC9F 4883FE02                	cmp rsi, 2
 24324 0000ECA3 7410                    	je .L_lambda_simple_env_end_0089
 24325 0000ECA5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24326 0000ECA9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24327 0000ECAD 48FFC6                  	inc rsi
 24328 0000ECB0 48FFC2                  	inc rdx
 24329 0000ECB3 EBEA                    	jmp .L_lambda_simple_env_loop_0089
 24330                                  .L_lambda_simple_env_end_0089:
 24331 0000ECB5 5B                      	pop rbx
 24332 0000ECB6 BE00000000              	mov rsi, 0
 24333                                  .L_lambda_simple_params_loop_0089:	; copy params
 24334 0000ECBB 4883FE02                	cmp rsi, 2
 24335 0000ECBF 740E                    	je .L_lambda_simple_params_end_0089
 24336 0000ECC1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24337 0000ECC6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24338 0000ECCA 48FFC6                  	inc rsi
 24339 0000ECCD EBEC                    	jmp .L_lambda_simple_params_loop_0089
 24340                                  .L_lambda_simple_params_end_0089:
 24341 0000ECCF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24342 0000ECD2 4889C3                  	mov rbx, rax
 24343 0000ECD5 58                      	pop rax
 24344 0000ECD6 C60005                  	mov byte [rax], T_closure
 24345 0000ECD9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24346 0000ECDD 48C74009[E7EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0089
 24347 0000ECE5 EB72                    	jmp .L_lambda_simple_end_0089
 24348                                  .L_lambda_simple_code_0089:	; lambda-simple body
 24349 0000ECE7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24350 0000ECED 740B                    	je .L_lambda_simple_arity_check_ok_0128
 24351 0000ECEF FF742410                	push qword [rsp + 8 * 2]
 24352 0000ECF3 6A01                    	push 1
 24353 0000ECF5 E9D51F0000              	jmp L_error_incorrect_arity_simple
 24354                                  .L_lambda_simple_arity_check_ok_0128:
 24355 0000ECFA C8000000                	enter 0, 0
 24356 0000ECFE 488B4510                mov rax, qword [rbp + 16]
 24357 0000ED02 488B00                  mov rax, qword [rax + 0]
 24358 0000ED05 488B00                  mov rax, qword [rax + 0]
 24359 0000ED08 50                      	push rax
 24360 0000ED09 6A01                    	push 1
 24361 0000ED0B 488B0425[80000000]      	mov rax, qword [free_var_16]
 24362 0000ED13 803805                  	cmp byte [rax], T_closure 
 24363 0000ED16 0F85822F0000                    jne L_code_ptr_error
 24364                                  
 24365 0000ED1C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24366                                  
 24367 0000ED20 53                              push rbx
 24368                                  
 24369 0000ED21 FF5009                          call SOB_CLOSURE_CODE(rax)
 24370                                  
 24371 0000ED24 50                              	push rax
 24372 0000ED25 488B4510                mov rax, qword [rbp + 16]
 24373 0000ED29 488B00                  mov rax, qword [rax + 0]
 24374 0000ED2C 488B4008                mov rax, qword [rax + 8]
 24375 0000ED30 50                      	push rax
 24376 0000ED31 488B4520                mov rax, qword [rbp + 32]
 24377 0000ED35 50                      	push rax
 24378 0000ED36 6A03                    	push 3
 24379 0000ED38 488B0425[88010000]      	mov rax, qword [free_var_49]
 24380 0000ED40 803805                  	cmp byte [rax], T_closure 
 24381 0000ED43 0F85552F0000                    jne L_code_ptr_error
 24382                                  
 24383 0000ED49 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24384                                  
 24385 0000ED4D 53                              push rbx
 24386                                  
 24387 0000ED4E FF5009                          call SOB_CLOSURE_CODE(rax)
 24388                                  
 24389                                          
 24390 0000ED51 488B4520                mov rax, qword [rbp + 32]
 24391 0000ED55 C9                      	leave
 24392 0000ED56 C21800                  	ret 8 * (2 + 1)
 24393                                  .L_lambda_simple_end_0089:	; new closure is in rax
 24394                                  .L_lambda_simple_arity_check_ok_0129:
 24395 0000ED59 803805                  	cmp byte [rax], T_closure
 24396                                  
 24397 0000ED5C 0F853C2F0000                    jne L_code_ptr_error                      ; rax <- proc
 24398                                  
 24399                                  
 24400 0000ED62 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24401                                  
 24402 0000ED66 53                              push rbx                                  ; env pushed
 24403                                  
 24404 0000ED67 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24405                                  
 24406                                  
 24407 0000ED6A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24408                                  
 24409                                          
 24410                                          
 24411 0000ED6D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24412                                  
 24413 0000ED71 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24414                                  
 24415                                  
 24416 0000ED76 4D89CA                          mov r10, r9
 24417 0000ED79 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 24418                                  
 24419                                                                                         
 24420 0000ED7D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24421 0000ED80 4983C404                        add r12, 4
 24422                                  
 24423 0000ED84 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24424                                  .L_tc_recycle_frame_loop_00a0:
 24425 0000ED8A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 24426                                  
 24427 0000ED8E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24428                                  
 24429                                  
 24430                                  
 24431 0000ED93 41BE00000000                    mov r14, 0                                ; clean box
 24432                                  
 24433                                  
 24434                                                                  
 24435 0000ED99 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24436                                  
 24437 0000ED9D 4983C4FF                        add r12, -1 
 24438                                  
 24439 0000EDA1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24440 0000EDA5 75E3                    	jne .L_tc_recycle_frame_loop_00a0
 24441                                  .L_tc_recycle_frame_done_00a0:
 24442 0000EDA7 5D                      	pop rbp                                  ; restore the old rbp
 24443                                  
 24444 0000EDA8 488B4D00                        mov rcx, qword [rbp]
 24445 0000EDAC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24446                                            ; rbx <- code(proc)
 24447                                  
 24448 0000EDB0 FFE3                            jmp rbx
 24449                                  	.L_if_end_004f:
 24450 0000EDB2 C9                      	leave
 24451 0000EDB3 C22000                  	ret 8 * (2 + 2)
 24452                                  .L_lambda_simple_end_0088:	; new closure is in rax
 24453 0000EDB6 50                      push rax
 24454 0000EDB7 488B4520                mov rax, qword [rbp + 32]
 24455 0000EDBB 8F00                    pop qword [rax]
 24456 0000EDBD 48B8-                   mov rax, sob_void
 24456 0000EDBF [0000000000000000] 
 24457                                  
 24458 0000EDC7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24459 0000EDCC E8451F0000              	call malloc
 24460 0000EDD1 50                      	push rax
 24461 0000EDD2 BF08000000              	mov rdi, 8 * 1	; new rib
 24462 0000EDD7 E83A1F0000              	call malloc
 24463 0000EDDC 50                      	push rax
 24464 0000EDDD BF10000000              	mov rdi, 8 * 2	; extended env
 24465 0000EDE2 E82F1F0000              	call malloc
 24466 0000EDE7 488B7D10                	mov rdi, ENV
 24467 0000EDEB BE00000000              	mov rsi, 0
 24468 0000EDF0 BA01000000              	mov rdx, 1
 24469                                  .L_lambda_simple_env_loop_008a:	; ext_env[i + 1] <-- env[i]
 24470 0000EDF5 4883FE01                	cmp rsi, 1
 24471 0000EDF9 7410                    	je .L_lambda_simple_env_end_008a
 24472 0000EDFB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24473 0000EDFF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24474 0000EE03 48FFC6                  	inc rsi
 24475 0000EE06 48FFC2                  	inc rdx
 24476 0000EE09 EBEA                    	jmp .L_lambda_simple_env_loop_008a
 24477                                  .L_lambda_simple_env_end_008a:
 24478 0000EE0B 5B                      	pop rbx
 24479 0000EE0C BE00000000              	mov rsi, 0
 24480                                  .L_lambda_simple_params_loop_008a:	; copy params
 24481 0000EE11 4883FE01                	cmp rsi, 1
 24482 0000EE15 740E                    	je .L_lambda_simple_params_end_008a
 24483 0000EE17 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24484 0000EE1C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24485 0000EE20 48FFC6                  	inc rsi
 24486 0000EE23 EBEC                    	jmp .L_lambda_simple_params_loop_008a
 24487                                  .L_lambda_simple_params_end_008a:
 24488 0000EE25 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24489 0000EE28 4889C3                  	mov rbx, rax
 24490 0000EE2B 58                      	pop rax
 24491 0000EE2C C60005                  	mov byte [rax], T_closure
 24492 0000EE2F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24493 0000EE33 48C74009[40EE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008a
 24494 0000EE3B E993000000              	jmp .L_lambda_simple_end_008a
 24495                                  .L_lambda_simple_code_008a:	; lambda-simple body
 24496 0000EE40 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24497 0000EE46 740B                    	je .L_lambda_simple_arity_check_ok_012b
 24498 0000EE48 FF742410                	push qword [rsp + 8 * 2]
 24499 0000EE4C 6A01                    	push 1
 24500 0000EE4E E97C1E0000              	jmp L_error_incorrect_arity_simple
 24501                                  .L_lambda_simple_arity_check_ok_012b:
 24502 0000EE53 C8000000                	enter 0, 0
 24503 0000EE57 48B8-                   	mov rax, qword (L_constants + 31)
 24503 0000EE59 [1F00000000000000] 
 24504 0000EE61 50                      	push rax
 24505 0000EE62 488B4520                mov rax, qword [rbp + 32]
 24506 0000EE66 50                      	push rax
 24507 0000EE67 6A02                    	push 2
 24508 0000EE69 488B4510                mov rax, qword [rbp + 16]
 24509 0000EE6D 488B00                  mov rax, qword [rax + 0]
 24510 0000EE70 488B00                  mov rax, qword [rax + 0]
 24511 0000EE73 488B00                  	mov rax, qword [rax]
 24512                                  .L_lambda_simple_arity_check_ok_012c:
 24513 0000EE76 803805                  	cmp byte [rax], T_closure
 24514                                  
 24515 0000EE79 0F851F2E0000                    jne L_code_ptr_error                      ; rax <- proc
 24516                                  
 24517                                  
 24518 0000EE7F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24519                                  
 24520 0000EE83 53                              push rbx                                  ; env pushed
 24521                                  
 24522 0000EE84 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24523                                  
 24524                                  
 24525 0000EE87 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24526                                  
 24527                                          
 24528                                          
 24529 0000EE8A 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24530                                  
 24531 0000EE8E 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24532                                  
 24533                                  
 24534 0000EE93 4D89CA                          mov r10, r9
 24535 0000EE96 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 24536                                  
 24537                                                                                         
 24538 0000EE9A 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24539 0000EE9D 4983C404                        add r12, 4
 24540                                  
 24541 0000EEA1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24542                                  .L_tc_recycle_frame_loop_00a2:
 24543 0000EEA7 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 24544                                  
 24545 0000EEAB 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24546                                  
 24547                                  
 24548                                  
 24549 0000EEB0 41BE00000000                    mov r14, 0                                ; clean box
 24550                                  
 24551                                  
 24552                                                                  
 24553 0000EEB6 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24554                                  
 24555 0000EEBA 4983C4FF                        add r12, -1 
 24556                                  
 24557 0000EEBE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24558 0000EEC2 75E3                    	jne .L_tc_recycle_frame_loop_00a2
 24559                                  .L_tc_recycle_frame_done_00a2:
 24560 0000EEC4 5D                      	pop rbp                                  ; restore the old rbp
 24561                                  
 24562 0000EEC5 488B4D00                        mov rcx, qword [rbp]
 24563 0000EEC9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24564                                            ; rbx <- code(proc)
 24565                                  
 24566 0000EECD FFE3                            jmp rbx
 24567 0000EECF C9                      	leave
 24568 0000EED0 C21800                  	ret 8 * (2 + 1)
 24569                                  .L_lambda_simple_end_008a:	; new closure is in rax
 24570 0000EED3 C9                      	leave
 24571 0000EED4 C21800                  	ret 8 * (2 + 1)
 24572                                  .L_lambda_simple_end_0087:	; new closure is in rax
 24573 0000EED7 803805                  	cmp byte [rax], T_closure 
 24574 0000EEDA 0F85BE2D0000                    jne L_code_ptr_error
 24575                                  
 24576 0000EEE0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24577                                  
 24578 0000EEE4 53                              push rbx
 24579                                  
 24580 0000EEE5 FF5009                          call SOB_CLOSURE_CODE(rax)
 24581                                  
 24582 0000EEE8 48890425[38040000]              	mov qword [free_var_135], rax
 24583 0000EEF0 48B8-                   	mov rax, sob_void
 24583 0000EEF2 [0000000000000000] 
 24584                                  
 24585 0000EEFA 4889C7                  	mov rdi, rax
 24586 0000EEFD E8251E0000              	call print_sexpr_if_not_void
 24587                                  
 24588 0000EF02 48B8-                   	mov rax, qword (L_constants + 22)
 24588 0000EF04 [1600000000000000] 
 24589 0000EF0C 50                      	push rax
 24590 0000EF0D 6A01                    	push 1
 24591 0000EF0F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24592 0000EF14 E8FD1D0000              	call malloc
 24593 0000EF19 50                      	push rax
 24594 0000EF1A BF00000000              	mov rdi, 8 * 0	; new rib
 24595 0000EF1F E8F21D0000              	call malloc
 24596 0000EF24 50                      	push rax
 24597 0000EF25 BF08000000              	mov rdi, 8 * 1	; extended env
 24598 0000EF2A E8E71D0000              	call malloc
 24599 0000EF2F 488B7D10                	mov rdi, ENV
 24600 0000EF33 BE00000000              	mov rsi, 0
 24601 0000EF38 BA01000000              	mov rdx, 1
 24602                                  .L_lambda_simple_env_loop_008b:	; ext_env[i + 1] <-- env[i]
 24603 0000EF3D 4883FE00                	cmp rsi, 0
 24604 0000EF41 7410                    	je .L_lambda_simple_env_end_008b
 24605 0000EF43 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24606 0000EF47 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24607 0000EF4B 48FFC6                  	inc rsi
 24608 0000EF4E 48FFC2                  	inc rdx
 24609 0000EF51 EBEA                    	jmp .L_lambda_simple_env_loop_008b
 24610                                  .L_lambda_simple_env_end_008b:
 24611 0000EF53 5B                      	pop rbx
 24612 0000EF54 BE00000000              	mov rsi, 0
 24613                                  .L_lambda_simple_params_loop_008b:	; copy params
 24614 0000EF59 4883FE00                	cmp rsi, 0
 24615 0000EF5D 740E                    	je .L_lambda_simple_params_end_008b
 24616 0000EF5F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24617 0000EF64 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24618 0000EF68 48FFC6                  	inc rsi
 24619 0000EF6B EBEC                    	jmp .L_lambda_simple_params_loop_008b
 24620                                  .L_lambda_simple_params_end_008b:
 24621 0000EF6D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24622 0000EF70 4889C3                  	mov rbx, rax
 24623 0000EF73 58                      	pop rax
 24624 0000EF74 C60005                  	mov byte [rax], T_closure
 24625 0000EF77 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24626 0000EF7B 48C74009[88EF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008b
 24627 0000EF83 E942040000              	jmp .L_lambda_simple_end_008b
 24628                                  .L_lambda_simple_code_008b:	; lambda-simple body
 24629 0000EF88 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24630 0000EF8E 740B                    	je .L_lambda_simple_arity_check_ok_012d
 24631 0000EF90 FF742410                	push qword [rsp + 8 * 2]
 24632 0000EF94 6A01                    	push 1
 24633 0000EF96 E9341D0000              	jmp L_error_incorrect_arity_simple
 24634                                  .L_lambda_simple_arity_check_ok_012d:
 24635 0000EF9B C8000000                	enter 0, 0
 24636 0000EF9F BF08000000              mov rdi, 8
 24637 0000EFA4 E86D1D0000              call malloc
 24638 0000EFA9 4889C3                  mov rbx, rax
 24639 0000EFAC 488B4520                mov rax, qword [rbp + 32]
 24640 0000EFB0 488903                  mov qword [rbx], rax
 24641 0000EFB3 4889D8                  mov rax, rbx
 24642 0000EFB6 48894520                mov qword [rbp + 32], rax
 24643 0000EFBA 48B8-                   mov rax, sob_void
 24643 0000EFBC [0000000000000000] 
 24644 0000EFC4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24645 0000EFC9 E8481D0000              	call malloc
 24646 0000EFCE 50                      	push rax
 24647 0000EFCF BF08000000              	mov rdi, 8 * 1	; new rib
 24648 0000EFD4 E83D1D0000              	call malloc
 24649 0000EFD9 50                      	push rax
 24650 0000EFDA BF10000000              	mov rdi, 8 * 2	; extended env
 24651 0000EFDF E8321D0000              	call malloc
 24652 0000EFE4 488B7D10                	mov rdi, ENV
 24653 0000EFE8 BE00000000              	mov rsi, 0
 24654 0000EFED BA01000000              	mov rdx, 1
 24655                                  .L_lambda_simple_env_loop_008c:	; ext_env[i + 1] <-- env[i]
 24656 0000EFF2 4883FE01                	cmp rsi, 1
 24657 0000EFF6 7410                    	je .L_lambda_simple_env_end_008c
 24658 0000EFF8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24659 0000EFFC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24660 0000F000 48FFC6                  	inc rsi
 24661 0000F003 48FFC2                  	inc rdx
 24662 0000F006 EBEA                    	jmp .L_lambda_simple_env_loop_008c
 24663                                  .L_lambda_simple_env_end_008c:
 24664 0000F008 5B                      	pop rbx
 24665 0000F009 BE00000000              	mov rsi, 0
 24666                                  .L_lambda_simple_params_loop_008c:	; copy params
 24667 0000F00E 4883FE01                	cmp rsi, 1
 24668 0000F012 740E                    	je .L_lambda_simple_params_end_008c
 24669 0000F014 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24670 0000F019 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24671 0000F01D 48FFC6                  	inc rsi
 24672 0000F020 EBEC                    	jmp .L_lambda_simple_params_loop_008c
 24673                                  .L_lambda_simple_params_end_008c:
 24674 0000F022 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24675 0000F025 4889C3                  	mov rbx, rax
 24676 0000F028 58                      	pop rax
 24677 0000F029 C60005                  	mov byte [rax], T_closure
 24678 0000F02C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24679 0000F030 48C74009[3DF00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008c
 24680 0000F038 E96C020000              	jmp .L_lambda_simple_end_008c
 24681                                  .L_lambda_simple_code_008c:	; lambda-simple body
 24682 0000F03D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24683 0000F043 740B                    	je .L_lambda_simple_arity_check_ok_012e
 24684 0000F045 FF742410                	push qword [rsp + 8 * 2]
 24685 0000F049 6A02                    	push 2
 24686 0000F04B E97F1C0000              	jmp L_error_incorrect_arity_simple
 24687                                  .L_lambda_simple_arity_check_ok_012e:
 24688 0000F050 C8000000                	enter 0, 0
 24689 0000F054 488B4520                mov rax, qword [rbp + 32]
 24690 0000F058 50                      	push rax
 24691 0000F059 6A01                    	push 1
 24692 0000F05B 488B0425[00000000]      	mov rax, qword [free_var_0]
 24693 0000F063 803805                  	cmp byte [rax], T_closure 
 24694 0000F066 0F85322C0000                    jne L_code_ptr_error
 24695                                  
 24696 0000F06C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24697                                  
 24698 0000F070 53                              push rbx
 24699                                  
 24700 0000F071 FF5009                          call SOB_CLOSURE_CODE(rax)
 24701                                  
 24702 0000F074 483D[02000000]                  	cmp rax, sob_boolean_false
 24703 0000F07A 7478                    	je .L_if_else_0050
 24704 0000F07C 48B8-                   	mov rax, qword (L_constants + 4)
 24704 0000F07E [0400000000000000] 
 24705 0000F086 50                      	push rax
 24706 0000F087 488B4528                mov rax, qword [rbp + 40]
 24707 0000F08B 50                      	push rax
 24708 0000F08C 6A02                    	push 2
 24709 0000F08E 488B0425[A0010000]      	mov rax, qword [free_var_52]
 24710                                  .L_lambda_simple_arity_check_ok_0131:
 24711 0000F096 803805                  	cmp byte [rax], T_closure
 24712                                  
 24713 0000F099 0F85FF2B0000                    jne L_code_ptr_error                      ; rax <- proc
 24714                                  
 24715                                  
 24716 0000F09F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24717                                  
 24718 0000F0A3 53                              push rbx                                  ; env pushed
 24719                                  
 24720 0000F0A4 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24721                                  
 24722                                  
 24723 0000F0A7 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24724                                  
 24725                                          
 24726                                          
 24727 0000F0AA 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24728                                  
 24729 0000F0AE 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24730                                  
 24731                                  
 24732 0000F0B3 4D89CA                          mov r10, r9
 24733 0000F0B6 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 24734                                  
 24735                                                                                         
 24736 0000F0BA 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24737 0000F0BD 4983C404                        add r12, 4
 24738                                  
 24739 0000F0C1 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24740                                  .L_tc_recycle_frame_loop_00a4:
 24741 0000F0C7 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 24742                                  
 24743 0000F0CB 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24744                                  
 24745                                  
 24746                                  
 24747 0000F0D0 41BE00000000                    mov r14, 0                                ; clean box
 24748                                  
 24749                                  
 24750                                                                  
 24751 0000F0D6 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24752                                  
 24753 0000F0DA 4983C4FF                        add r12, -1 
 24754                                  
 24755 0000F0DE 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24756 0000F0E2 75E3                    	jne .L_tc_recycle_frame_loop_00a4
 24757                                  .L_tc_recycle_frame_done_00a4:
 24758 0000F0E4 5D                      	pop rbp                                  ; restore the old rbp
 24759                                  
 24760 0000F0E5 488B4D00                        mov rcx, qword [rbp]
 24761 0000F0E9 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24762                                            ; rbx <- code(proc)
 24763                                  
 24764 0000F0ED FFE3                            jmp rbx
 24765 0000F0EF E9B1010000              	jmp .L_if_end_0050
 24766                                  	.L_if_else_0050:
 24767 0000F0F4 48B8-                   		mov rax, qword (L_constants + 127)
 24767 0000F0F6 [7F00000000000000] 
 24768 0000F0FE 50                      	push rax
 24769 0000F0FF 488B4528                mov rax, qword [rbp + 40]
 24770 0000F103 50                      	push rax
 24771 0000F104 6A02                    	push 2
 24772 0000F106 488B0425[08030000]      	mov rax, qword [free_var_97]
 24773 0000F10E 803805                  	cmp byte [rax], T_closure 
 24774 0000F111 0F85872B0000                    jne L_code_ptr_error
 24775                                  
 24776 0000F117 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24777                                  
 24778 0000F11B 53                              push rbx
 24779                                  
 24780 0000F11C FF5009                          call SOB_CLOSURE_CODE(rax)
 24781                                  
 24782 0000F11F 50                              	push rax
 24783 0000F120 488B4520                mov rax, qword [rbp + 32]
 24784 0000F124 50                      	push rax
 24785 0000F125 6A01                    	push 1
 24786 0000F127 488B0425[88000000]      	mov rax, qword [free_var_17]
 24787 0000F12F 803805                  	cmp byte [rax], T_closure 
 24788 0000F132 0F85662B0000                    jne L_code_ptr_error
 24789                                  
 24790 0000F138 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24791                                  
 24792 0000F13C 53                              push rbx
 24793                                  
 24794 0000F13D FF5009                          call SOB_CLOSURE_CODE(rax)
 24795                                  
 24796 0000F140 50                              	push rax
 24797 0000F141 6A02                    	push 2
 24798 0000F143 488B4510                mov rax, qword [rbp + 16]
 24799 0000F147 488B00                  mov rax, qword [rax + 0]
 24800 0000F14A 488B00                  mov rax, qword [rax + 0]
 24801 0000F14D 488B00                  	mov rax, qword [rax]
 24802 0000F150 803805                  	cmp byte [rax], T_closure 
 24803 0000F153 0F85452B0000                    jne L_code_ptr_error
 24804                                  
 24805 0000F159 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24806                                  
 24807 0000F15D 53                              push rbx
 24808                                  
 24809 0000F15E FF5009                          call SOB_CLOSURE_CODE(rax)
 24810                                  
 24811 0000F161 50                              	push rax
 24812 0000F162 6A01                    	push 1
 24813 0000F164 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24814 0000F169 E8A81B0000              	call malloc
 24815 0000F16E 50                      	push rax
 24816 0000F16F BF10000000              	mov rdi, 8 * 2	; new rib
 24817 0000F174 E89D1B0000              	call malloc
 24818 0000F179 50                      	push rax
 24819 0000F17A BF18000000              	mov rdi, 8 * 3	; extended env
 24820 0000F17F E8921B0000              	call malloc
 24821 0000F184 488B7D10                	mov rdi, ENV
 24822 0000F188 BE00000000              	mov rsi, 0
 24823 0000F18D BA01000000              	mov rdx, 1
 24824                                  .L_lambda_simple_env_loop_008d:	; ext_env[i + 1] <-- env[i]
 24825 0000F192 4883FE02                	cmp rsi, 2
 24826 0000F196 7410                    	je .L_lambda_simple_env_end_008d
 24827 0000F198 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24828 0000F19C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24829 0000F1A0 48FFC6                  	inc rsi
 24830 0000F1A3 48FFC2                  	inc rdx
 24831 0000F1A6 EBEA                    	jmp .L_lambda_simple_env_loop_008d
 24832                                  .L_lambda_simple_env_end_008d:
 24833 0000F1A8 5B                      	pop rbx
 24834 0000F1A9 BE00000000              	mov rsi, 0
 24835                                  .L_lambda_simple_params_loop_008d:	; copy params
 24836 0000F1AE 4883FE02                	cmp rsi, 2
 24837 0000F1B2 740E                    	je .L_lambda_simple_params_end_008d
 24838 0000F1B4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24839 0000F1B9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24840 0000F1BD 48FFC6                  	inc rsi
 24841 0000F1C0 EBEC                    	jmp .L_lambda_simple_params_loop_008d
 24842                                  .L_lambda_simple_params_end_008d:
 24843 0000F1C2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24844 0000F1C5 4889C3                  	mov rbx, rax
 24845 0000F1C8 58                      	pop rax
 24846 0000F1C9 C60005                  	mov byte [rax], T_closure
 24847 0000F1CC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24848 0000F1D0 48C74009[DAF10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008d
 24849 0000F1D8 EB72                    	jmp .L_lambda_simple_end_008d
 24850                                  .L_lambda_simple_code_008d:	; lambda-simple body
 24851 0000F1DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24852 0000F1E0 740B                    	je .L_lambda_simple_arity_check_ok_012f
 24853 0000F1E2 FF742410                	push qword [rsp + 8 * 2]
 24854 0000F1E6 6A01                    	push 1
 24855 0000F1E8 E9E21A0000              	jmp L_error_incorrect_arity_simple
 24856                                  .L_lambda_simple_arity_check_ok_012f:
 24857 0000F1ED C8000000                	enter 0, 0
 24858 0000F1F1 488B4510                mov rax, qword [rbp + 16]
 24859 0000F1F5 488B00                  mov rax, qword [rax + 0]
 24860 0000F1F8 488B00                  mov rax, qword [rax + 0]
 24861 0000F1FB 50                      	push rax
 24862 0000F1FC 6A01                    	push 1
 24863 0000F1FE 488B0425[80000000]      	mov rax, qword [free_var_16]
 24864 0000F206 803805                  	cmp byte [rax], T_closure 
 24865 0000F209 0F858F2A0000                    jne L_code_ptr_error
 24866                                  
 24867 0000F20F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24868                                  
 24869 0000F213 53                              push rbx
 24870                                  
 24871 0000F214 FF5009                          call SOB_CLOSURE_CODE(rax)
 24872                                  
 24873 0000F217 50                              	push rax
 24874 0000F218 488B4510                mov rax, qword [rbp + 16]
 24875 0000F21C 488B00                  mov rax, qword [rax + 0]
 24876 0000F21F 488B4008                mov rax, qword [rax + 8]
 24877 0000F223 50                      	push rax
 24878 0000F224 488B4520                mov rax, qword [rbp + 32]
 24879 0000F228 50                      	push rax
 24880 0000F229 6A03                    	push 3
 24881 0000F22B 488B0425[90010000]      	mov rax, qword [free_var_50]
 24882 0000F233 803805                  	cmp byte [rax], T_closure 
 24883 0000F236 0F85622A0000                    jne L_code_ptr_error
 24884                                  
 24885 0000F23C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 24886                                  
 24887 0000F240 53                              push rbx
 24888                                  
 24889 0000F241 FF5009                          call SOB_CLOSURE_CODE(rax)
 24890                                  
 24891                                          
 24892 0000F244 488B4520                mov rax, qword [rbp + 32]
 24893 0000F248 C9                      	leave
 24894 0000F249 C21800                  	ret 8 * (2 + 1)
 24895                                  .L_lambda_simple_end_008d:	; new closure is in rax
 24896                                  .L_lambda_simple_arity_check_ok_0130:
 24897 0000F24C 803805                  	cmp byte [rax], T_closure
 24898                                  
 24899 0000F24F 0F85492A0000                    jne L_code_ptr_error                      ; rax <- proc
 24900                                  
 24901                                  
 24902 0000F255 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 24903                                  
 24904 0000F259 53                              push rbx                                  ; env pushed
 24905                                  
 24906 0000F25A FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 24907                                  
 24908                                  
 24909 0000F25D FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 24910                                  
 24911                                          
 24912                                          
 24913 0000F260 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 24914                                  
 24915 0000F264 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 24916                                  
 24917                                  
 24918 0000F269 4D89CA                          mov r10, r9
 24919 0000F26C 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 24920                                  
 24921                                                                                         
 24922 0000F270 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 24923 0000F273 4983C404                        add r12, 4
 24924                                  
 24925 0000F277 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 24926                                  .L_tc_recycle_frame_loop_00a3:
 24927 0000F27D 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 24928                                  
 24929 0000F281 4E8974E500                      mov [rbp + (r12 * 8)], r14
 24930                                  
 24931                                  
 24932                                  
 24933 0000F286 41BE00000000                    mov r14, 0                                ; clean box
 24934                                  
 24935                                  
 24936                                                                  
 24937 0000F28C 4983C2FF                        add r10, -1                               ; args_copied_counter--
 24938                                  
 24939 0000F290 4983C4FF                        add r12, -1 
 24940                                  
 24941 0000F294 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 24942 0000F298 75E3                    	jne .L_tc_recycle_frame_loop_00a3
 24943                                  .L_tc_recycle_frame_done_00a3:
 24944 0000F29A 5D                      	pop rbp                                  ; restore the old rbp
 24945                                  
 24946 0000F29B 488B4D00                        mov rcx, qword [rbp]
 24947 0000F29F 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 24948                                            ; rbx <- code(proc)
 24949                                  
 24950 0000F2A3 FFE3                            jmp rbx
 24951                                  	.L_if_end_0050:
 24952 0000F2A5 C9                      	leave
 24953 0000F2A6 C22000                  	ret 8 * (2 + 2)
 24954                                  .L_lambda_simple_end_008c:	; new closure is in rax
 24955 0000F2A9 50                      push rax
 24956 0000F2AA 488B4520                mov rax, qword [rbp + 32]
 24957 0000F2AE 8F00                    pop qword [rax]
 24958 0000F2B0 48B8-                   mov rax, sob_void
 24958 0000F2B2 [0000000000000000] 
 24959                                  
 24960 0000F2BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24961 0000F2BF E8521A0000              	call malloc
 24962 0000F2C4 50                      	push rax
 24963 0000F2C5 BF08000000              	mov rdi, 8 * 1	; new rib
 24964 0000F2CA E8471A0000              	call malloc
 24965 0000F2CF 50                      	push rax
 24966 0000F2D0 BF10000000              	mov rdi, 8 * 2	; extended env
 24967 0000F2D5 E83C1A0000              	call malloc
 24968 0000F2DA 488B7D10                	mov rdi, ENV
 24969 0000F2DE BE00000000              	mov rsi, 0
 24970 0000F2E3 BA01000000              	mov rdx, 1
 24971                                  .L_lambda_simple_env_loop_008e:	; ext_env[i + 1] <-- env[i]
 24972 0000F2E8 4883FE01                	cmp rsi, 1
 24973 0000F2EC 7410                    	je .L_lambda_simple_env_end_008e
 24974 0000F2EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24975 0000F2F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24976 0000F2F6 48FFC6                  	inc rsi
 24977 0000F2F9 48FFC2                  	inc rdx
 24978 0000F2FC EBEA                    	jmp .L_lambda_simple_env_loop_008e
 24979                                  .L_lambda_simple_env_end_008e:
 24980 0000F2FE 5B                      	pop rbx
 24981 0000F2FF BE00000000              	mov rsi, 0
 24982                                  .L_lambda_simple_params_loop_008e:	; copy params
 24983 0000F304 4883FE01                	cmp rsi, 1
 24984 0000F308 740E                    	je .L_lambda_simple_params_end_008e
 24985 0000F30A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24986 0000F30F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24987 0000F313 48FFC6                  	inc rsi
 24988 0000F316 EBEC                    	jmp .L_lambda_simple_params_loop_008e
 24989                                  .L_lambda_simple_params_end_008e:
 24990 0000F318 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24991 0000F31B 4889C3                  	mov rbx, rax
 24992 0000F31E 58                      	pop rax
 24993 0000F31F C60005                  	mov byte [rax], T_closure
 24994 0000F322 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24995 0000F326 48C74009[33F30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008e
 24996 0000F32E E993000000              	jmp .L_lambda_simple_end_008e
 24997                                  .L_lambda_simple_code_008e:	; lambda-simple body
 24998 0000F333 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24999 0000F339 740B                    	je .L_lambda_simple_arity_check_ok_0132
 25000 0000F33B FF742410                	push qword [rsp + 8 * 2]
 25001 0000F33F 6A01                    	push 1
 25002 0000F341 E989190000              	jmp L_error_incorrect_arity_simple
 25003                                  .L_lambda_simple_arity_check_ok_0132:
 25004 0000F346 C8000000                	enter 0, 0
 25005 0000F34A 48B8-                   	mov rax, qword (L_constants + 31)
 25005 0000F34C [1F00000000000000] 
 25006 0000F354 50                      	push rax
 25007 0000F355 488B4520                mov rax, qword [rbp + 32]
 25008 0000F359 50                      	push rax
 25009 0000F35A 6A02                    	push 2
 25010 0000F35C 488B4510                mov rax, qword [rbp + 16]
 25011 0000F360 488B00                  mov rax, qword [rax + 0]
 25012 0000F363 488B00                  mov rax, qword [rax + 0]
 25013 0000F366 488B00                  	mov rax, qword [rax]
 25014                                  .L_lambda_simple_arity_check_ok_0133:
 25015 0000F369 803805                  	cmp byte [rax], T_closure
 25016                                  
 25017 0000F36C 0F852C290000                    jne L_code_ptr_error                      ; rax <- proc
 25018                                  
 25019                                  
 25020 0000F372 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25021                                  
 25022 0000F376 53                              push rbx                                  ; env pushed
 25023                                  
 25024 0000F377 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25025                                  
 25026                                  
 25027 0000F37A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25028                                  
 25029                                          
 25030                                          
 25031 0000F37D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25032                                  
 25033 0000F381 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25034                                  
 25035                                  
 25036 0000F386 4D89CA                          mov r10, r9
 25037 0000F389 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 25038                                  
 25039                                                                                         
 25040 0000F38D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25041 0000F390 4983C404                        add r12, 4
 25042                                  
 25043 0000F394 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25044                                  .L_tc_recycle_frame_loop_00a5:
 25045 0000F39A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 25046                                  
 25047 0000F39E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25048                                  
 25049                                  
 25050                                  
 25051 0000F3A3 41BE00000000                    mov r14, 0                                ; clean box
 25052                                  
 25053                                  
 25054                                                                  
 25055 0000F3A9 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25056                                  
 25057 0000F3AD 4983C4FF                        add r12, -1 
 25058                                  
 25059 0000F3B1 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25060 0000F3B5 75E3                    	jne .L_tc_recycle_frame_loop_00a5
 25061                                  .L_tc_recycle_frame_done_00a5:
 25062 0000F3B7 5D                      	pop rbp                                  ; restore the old rbp
 25063                                  
 25064 0000F3B8 488B4D00                        mov rcx, qword [rbp]
 25065 0000F3BC 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25066                                            ; rbx <- code(proc)
 25067                                  
 25068 0000F3C0 FFE3                            jmp rbx
 25069 0000F3C2 C9                      	leave
 25070 0000F3C3 C21800                  	ret 8 * (2 + 1)
 25071                                  .L_lambda_simple_end_008e:	; new closure is in rax
 25072 0000F3C6 C9                      	leave
 25073 0000F3C7 C21800                  	ret 8 * (2 + 1)
 25074                                  .L_lambda_simple_end_008b:	; new closure is in rax
 25075 0000F3CA 803805                  	cmp byte [rax], T_closure 
 25076 0000F3CD 0F85CB280000                    jne L_code_ptr_error
 25077                                  
 25078 0000F3D3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25079                                  
 25080 0000F3D7 53                              push rbx
 25081                                  
 25082 0000F3D8 FF5009                          call SOB_CLOSURE_CODE(rax)
 25083                                  
 25084 0000F3DB 48890425[D0030000]              	mov qword [free_var_122], rax
 25085 0000F3E3 48B8-                   	mov rax, sob_void
 25085 0000F3E5 [0000000000000000] 
 25086                                  
 25087 0000F3ED 4889C7                  	mov rdi, rax
 25088 0000F3F0 E832190000              	call print_sexpr_if_not_void
 25089                                  
 25090 0000F3F5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25091 0000F3FA E817190000              	call malloc
 25092 0000F3FF 50                      	push rax
 25093 0000F400 BF00000000              	mov rdi, 8 * 0	; new rib
 25094 0000F405 E80C190000              	call malloc
 25095 0000F40A 50                      	push rax
 25096 0000F40B BF08000000              	mov rdi, 8 * 1	; extended env
 25097 0000F410 E801190000              	call malloc
 25098 0000F415 488B7D10                	mov rdi, ENV
 25099 0000F419 BE00000000              	mov rsi, 0
 25100 0000F41E BA01000000              	mov rdx, 1
 25101                                  .L_lambda_opt_env_loop_0017:	; ext_env[i + 1] <-- env[i]
 25102 0000F423 4883FE00                	cmp rsi, 0
 25103 0000F427 7410                    	je .L_lambda_opt_env_end_0017
 25104 0000F429 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25105 0000F42D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25106 0000F431 48FFC6                  	inc rsi
 25107 0000F434 48FFC2                  	inc rdx
 25108 0000F437 EBEA                    	jmp .L_lambda_opt_env_loop_0017
 25109                                  .L_lambda_opt_env_end_0017:
 25110 0000F439 5B                      	pop rbx
 25111 0000F43A BE00000000              	mov rsi, 0
 25112                                  .L_lambda_opt_params_loop_002d:	; copy params
 25113 0000F43F 4883FE00                	cmp rsi, 0
 25114 0000F443 740E                    	je .L_lambda_opt_params_end_002d
 25115 0000F445 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25116 0000F44A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25117 0000F44E 48FFC6                  	inc rsi
 25118 0000F451 EBEC                    	jmp .L_lambda_opt_params_loop_002d
 25119                                  .L_lambda_opt_params_end_002d:
 25120 0000F453 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25121 0000F456 4889C3                  	mov rbx, rax
 25122 0000F459 58                      	pop rax
 25123 0000F45A C60005                  	mov byte [rax], T_closure
 25124 0000F45D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25125 0000F461 48C74009[6EF40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0017
 25126 0000F469 E91C010000              	jmp .L_lambda_opt_end_0017
 25127                                  .L_lambda_opt_code_0017:
 25128 0000F46E 4C8B542410              mov r10, qword [rsp+8*2]
 25129 0000F473 4983FA00                cmp r10, 0
 25130 0000F477 740B                    je .L_lambda_opt_arity_check_exact_0017
 25131 0000F479 4983FA00                cmp r10, 0
 25132 0000F47D 7F41                    jg .L_lambda_opt_arity_check_more_0017
 25133 0000F47F E95F180000              jmp L_error_incorrect_arity_opt
 25134                                  .L_lambda_opt_arity_check_exact_0017:
 25135 0000F484 4883EC08                sub rsp, 8
 25136 0000F488 BA03000000              mov rdx, 3+0
 25137 0000F48D 4889E3                  mov qword rbx, rsp
 25138                                  .L_lambda_opt_params_loop_002e:
 25139 0000F490 488B4B08                mov qword rcx, [rbx+8]
 25140 0000F494 48890B                  mov qword [rbx], rcx
 25141 0000F497 48FFCA                  dec rdx
 25142 0000F49A 4883C308                add rbx, 8
 25143 0000F49E 4883FA00                cmp rdx, 0
 25144 0000F4A2 7402                    je .L_lambda_opt_params_end_002e
 25145 0000F4A4 EBEA                    jmp .L_lambda_opt_params_loop_002e
 25146                                  .L_lambda_opt_params_end_002e:
 25147 0000F4A6 49FFC2                  inc r10
 25148 0000F4A9 4C89542410              mov qword [rsp+8*2], r10
 25149 0000F4AE 4983C202                add r10, 2
 25150 0000F4B2 4AC704D4[01000000]      mov qword [rsp + 8*(r10)], sob_nil
 25151 0000F4BA 4C8B4D00                mov r9, [rbp]
 25152 0000F4BE EB52                    jmp .L_lambda_opt_stack_adjusted_0017
 25153                                  .L_lambda_opt_arity_check_more_0017:
 25154 0000F4C0 48B8-                   mov rax, sob_nil
 25154 0000F4C2 [0100000000000000] 
 25155 0000F4CA 4C8B542410              mov r10, [rsp+2*8]
 25156 0000F4CF 4E8D44D410              lea r8, [rsp+ 8*(2+r10)]
 25157 0000F4D4 4983EA00                sub r10, 0
 25158                                  .L_lambda_opt_stack_shrink_loop_0017:
 25159 0000F4D8 4983FA00                cmp r10, 0
 25160 0000F4DC 7424                    je .L_lambda_opt_stack_shrink_loop_exit_0017
 25161 0000F4DE 4889C1                  mov rcx, rax
 25162 0000F4E1 498B10                  mov rdx, [r8]
 25163 0000F4E4 BF11000000              mov rdi, 17
 25164 0000F4E9 E828180000              call malloc
 25165 0000F4EE C60021                  mov byte [rax], T_pair
 25166 0000F4F1 48894809                mov SOB_PAIR_CDR(rax), rcx
 25167 0000F4F5 48895001                mov SOB_PAIR_CAR(rax), rdx
 25168 0000F4F9 4983E808                sub r8, 8
 25169 0000F4FD 49FFCA                  dec r10
 25170 0000F500 EBD6                    jmp .L_lambda_opt_stack_shrink_loop_0017
 25171                                  .L_lambda_opt_stack_shrink_loop_exit_0017:
 25172 0000F502 4889442418              mov [rsp+8*(2+1)], rax
 25173 0000F507 41BA01000000            mov r10, 1
 25174 0000F50D 4C89542410              mov [rsp+16], r10
 25175                                  .L_lambda_opt_stack_adjusted_0017:
 25176 0000F512 4C8B4D00                mov r9, [rbp]
 25177 0000F516 C8000000                enter 0, 0
 25178 0000F51A 488B4520                mov rax, qword [rbp + 32]
 25179 0000F51E 50                      	push rax
 25180 0000F51F 6A01                    	push 1
 25181 0000F521 488B0425[38040000]      	mov rax, qword [free_var_135]
 25182                                  .L_lambda_simple_arity_check_ok_0134:
 25183 0000F529 803805                  	cmp byte [rax], T_closure
 25184                                  
 25185 0000F52C 0F856C270000                    jne L_code_ptr_error                      ; rax <- proc
 25186                                  
 25187                                  
 25188 0000F532 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25189                                  
 25190 0000F536 53                              push rbx                                  ; env pushed
 25191                                  
 25192 0000F537 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25193                                  
 25194                                  
 25195 0000F53A FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25196                                  
 25197                                          
 25198                                          
 25199 0000F53D 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25200                                  
 25201 0000F541 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25202                                  
 25203                                  
 25204 0000F546 4D89CA                          mov r10, r9
 25205 0000F549 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 25206                                  
 25207                                                                                         
 25208 0000F54D 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25209 0000F550 4983C404                        add r12, 4
 25210                                  
 25211 0000F554 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25212                                  .L_tc_recycle_frame_loop_00a6:
 25213 0000F55A 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 25214                                  
 25215 0000F55E 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25216                                  
 25217                                  
 25218                                  
 25219 0000F563 41BE00000000                    mov r14, 0                                ; clean box
 25220                                  
 25221                                  
 25222                                                                  
 25223 0000F569 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25224                                  
 25225 0000F56D 4983C4FF                        add r12, -1 
 25226                                  
 25227 0000F571 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25228 0000F575 75E3                    	jne .L_tc_recycle_frame_loop_00a6
 25229                                  .L_tc_recycle_frame_done_00a6:
 25230 0000F577 5D                      	pop rbp                                  ; restore the old rbp
 25231                                  
 25232 0000F578 488B4D00                        mov rcx, qword [rbp]
 25233 0000F57C 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25234                                            ; rbx <- code(proc)
 25235                                  
 25236 0000F580 FFE3                            jmp rbx
 25237 0000F582 C9                      leave
 25238 0000F583 4C8B4D00                mov r9, [rbp]
 25239 0000F587 C22000                  ret 8 * (3 + 1)
 25240                                  .L_lambda_opt_end_0017:	; new closure is in rax
 25241 0000F58A 48890425[40040000]      	mov qword [free_var_136], rax
 25242 0000F592 48B8-                   	mov rax, sob_void
 25242 0000F594 [0000000000000000] 
 25243                                  
 25244 0000F59C 4889C7                  	mov rdi, rax
 25245 0000F59F E883170000              	call print_sexpr_if_not_void
 25246                                  
 25247 0000F5A4 48B8-                   	mov rax, qword (L_constants + 22)
 25247 0000F5A6 [1600000000000000] 
 25248 0000F5AE 50                      	push rax
 25249 0000F5AF 6A01                    	push 1
 25250 0000F5B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25251 0000F5B6 E85B170000              	call malloc
 25252 0000F5BB 50                      	push rax
 25253 0000F5BC BF00000000              	mov rdi, 8 * 0	; new rib
 25254 0000F5C1 E850170000              	call malloc
 25255 0000F5C6 50                      	push rax
 25256 0000F5C7 BF08000000              	mov rdi, 8 * 1	; extended env
 25257 0000F5CC E845170000              	call malloc
 25258 0000F5D1 488B7D10                	mov rdi, ENV
 25259 0000F5D5 BE00000000              	mov rsi, 0
 25260 0000F5DA BA01000000              	mov rdx, 1
 25261                                  .L_lambda_simple_env_loop_008f:	; ext_env[i + 1] <-- env[i]
 25262 0000F5DF 4883FE00                	cmp rsi, 0
 25263 0000F5E3 7410                    	je .L_lambda_simple_env_end_008f
 25264 0000F5E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25265 0000F5E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25266 0000F5ED 48FFC6                  	inc rsi
 25267 0000F5F0 48FFC2                  	inc rdx
 25268 0000F5F3 EBEA                    	jmp .L_lambda_simple_env_loop_008f
 25269                                  .L_lambda_simple_env_end_008f:
 25270 0000F5F5 5B                      	pop rbx
 25271 0000F5F6 BE00000000              	mov rsi, 0
 25272                                  .L_lambda_simple_params_loop_008f:	; copy params
 25273 0000F5FB 4883FE00                	cmp rsi, 0
 25274 0000F5FF 740E                    	je .L_lambda_simple_params_end_008f
 25275 0000F601 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25276 0000F606 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25277 0000F60A 48FFC6                  	inc rsi
 25278 0000F60D EBEC                    	jmp .L_lambda_simple_params_loop_008f
 25279                                  .L_lambda_simple_params_end_008f:
 25280 0000F60F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25281 0000F612 4889C3                  	mov rbx, rax
 25282 0000F615 58                      	pop rax
 25283 0000F616 C60005                  	mov byte [rax], T_closure
 25284 0000F619 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25285 0000F61D 48C74009[2AF60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008f
 25286 0000F625 E92F030000              	jmp .L_lambda_simple_end_008f
 25287                                  .L_lambda_simple_code_008f:	; lambda-simple body
 25288 0000F62A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25289 0000F630 740B                    	je .L_lambda_simple_arity_check_ok_0135
 25290 0000F632 FF742410                	push qword [rsp + 8 * 2]
 25291 0000F636 6A01                    	push 1
 25292 0000F638 E992160000              	jmp L_error_incorrect_arity_simple
 25293                                  .L_lambda_simple_arity_check_ok_0135:
 25294 0000F63D C8000000                	enter 0, 0
 25295 0000F641 BF08000000              mov rdi, 8
 25296 0000F646 E8CB160000              call malloc
 25297 0000F64B 4889C3                  mov rbx, rax
 25298 0000F64E 488B4520                mov rax, qword [rbp + 32]
 25299 0000F652 488903                  mov qword [rbx], rax
 25300 0000F655 4889D8                  mov rax, rbx
 25301 0000F658 48894520                mov qword [rbp + 32], rax
 25302 0000F65C 48B8-                   mov rax, sob_void
 25302 0000F65E [0000000000000000] 
 25303 0000F666 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25304 0000F66B E8A6160000              	call malloc
 25305 0000F670 50                      	push rax
 25306 0000F671 BF08000000              	mov rdi, 8 * 1	; new rib
 25307 0000F676 E89B160000              	call malloc
 25308 0000F67B 50                      	push rax
 25309 0000F67C BF10000000              	mov rdi, 8 * 2	; extended env
 25310 0000F681 E890160000              	call malloc
 25311 0000F686 488B7D10                	mov rdi, ENV
 25312 0000F68A BE00000000              	mov rsi, 0
 25313 0000F68F BA01000000              	mov rdx, 1
 25314                                  .L_lambda_simple_env_loop_0090:	; ext_env[i + 1] <-- env[i]
 25315 0000F694 4883FE01                	cmp rsi, 1
 25316 0000F698 7410                    	je .L_lambda_simple_env_end_0090
 25317 0000F69A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25318 0000F69E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25319 0000F6A2 48FFC6                  	inc rsi
 25320 0000F6A5 48FFC2                  	inc rdx
 25321 0000F6A8 EBEA                    	jmp .L_lambda_simple_env_loop_0090
 25322                                  .L_lambda_simple_env_end_0090:
 25323 0000F6AA 5B                      	pop rbx
 25324 0000F6AB BE00000000              	mov rsi, 0
 25325                                  .L_lambda_simple_params_loop_0090:	; copy params
 25326 0000F6B0 4883FE01                	cmp rsi, 1
 25327 0000F6B4 740E                    	je .L_lambda_simple_params_end_0090
 25328 0000F6B6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25329 0000F6BB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25330 0000F6BF 48FFC6                  	inc rsi
 25331 0000F6C2 EBEC                    	jmp .L_lambda_simple_params_loop_0090
 25332                                  .L_lambda_simple_params_end_0090:
 25333 0000F6C4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25334 0000F6C7 4889C3                  	mov rbx, rax
 25335 0000F6CA 58                      	pop rax
 25336 0000F6CB C60005                  	mov byte [rax], T_closure
 25337 0000F6CE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25338 0000F6D2 48C74009[DFF60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0090
 25339 0000F6DA E938010000              	jmp .L_lambda_simple_end_0090
 25340                                  .L_lambda_simple_code_0090:	; lambda-simple body
 25341 0000F6DF 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25342 0000F6E5 740B                    	je .L_lambda_simple_arity_check_ok_0136
 25343 0000F6E7 FF742410                	push qword [rsp + 8 * 2]
 25344 0000F6EB 6A03                    	push 3
 25345 0000F6ED E9DD150000              	jmp L_error_incorrect_arity_simple
 25346                                  .L_lambda_simple_arity_check_ok_0136:
 25347 0000F6F2 C8000000                	enter 0, 0
 25348 0000F6F6 488B4530                mov rax, qword [rbp + 48]
 25349 0000F6FA 50                      	push rax
 25350 0000F6FB 488B4528                mov rax, qword [rbp + 40]
 25351 0000F6FF 50                      	push rax
 25352 0000F700 6A02                    	push 2
 25353 0000F702 488B0425[30030000]      	mov rax, qword [free_var_102]
 25354 0000F70A 803805                  	cmp byte [rax], T_closure 
 25355 0000F70D 0F858B250000                    jne L_code_ptr_error
 25356                                  
 25357 0000F713 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25358                                  
 25359 0000F717 53                              push rbx
 25360                                  
 25361 0000F718 FF5009                          call SOB_CLOSURE_CODE(rax)
 25362                                  
 25363 0000F71B 483D[02000000]                  	cmp rax, sob_boolean_false
 25364 0000F721 0F84E2000000            	je .L_if_else_0051
 25365 0000F727 488B4530                mov rax, qword [rbp + 48]
 25366 0000F72B 50                      	push rax
 25367 0000F72C 48B8-                   	mov rax, qword (L_constants + 127)
 25367 0000F72E [7F00000000000000] 
 25368 0000F736 50                      	push rax
 25369 0000F737 488B4528                mov rax, qword [rbp + 40]
 25370 0000F73B 50                      	push rax
 25371 0000F73C 6A02                    	push 2
 25372 0000F73E 488B0425[08030000]      	mov rax, qword [free_var_97]
 25373 0000F746 803805                  	cmp byte [rax], T_closure 
 25374 0000F749 0F854F250000                    jne L_code_ptr_error
 25375                                  
 25376 0000F74F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25377                                  
 25378 0000F753 53                              push rbx
 25379                                  
 25380 0000F754 FF5009                          call SOB_CLOSURE_CODE(rax)
 25381                                  
 25382 0000F757 50                              	push rax
 25383 0000F758 488B4520                mov rax, qword [rbp + 32]
 25384 0000F75C 50                      	push rax
 25385 0000F75D 6A03                    	push 3
 25386 0000F75F 488B4510                mov rax, qword [rbp + 16]
 25387 0000F763 488B00                  mov rax, qword [rax + 0]
 25388 0000F766 488B00                  mov rax, qword [rax + 0]
 25389 0000F769 488B00                  	mov rax, qword [rax]
 25390 0000F76C 803805                  	cmp byte [rax], T_closure 
 25391 0000F76F 0F8529250000                    jne L_code_ptr_error
 25392                                  
 25393 0000F775 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25394                                  
 25395 0000F779 53                              push rbx
 25396                                  
 25397 0000F77A FF5009                          call SOB_CLOSURE_CODE(rax)
 25398                                  
 25399 0000F77D 50                              	push rax
 25400 0000F77E 488B4528                mov rax, qword [rbp + 40]
 25401 0000F782 50                      	push rax
 25402 0000F783 488B4520                mov rax, qword [rbp + 32]
 25403 0000F787 50                      	push rax
 25404 0000F788 6A02                    	push 2
 25405 0000F78A 488B0425[78010000]      	mov rax, qword [free_var_47]
 25406 0000F792 803805                  	cmp byte [rax], T_closure 
 25407 0000F795 0F8503250000                    jne L_code_ptr_error
 25408                                  
 25409 0000F79B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25410                                  
 25411 0000F79F 53                              push rbx
 25412                                  
 25413 0000F7A0 FF5009                          call SOB_CLOSURE_CODE(rax)
 25414                                  
 25415 0000F7A3 50                              	push rax
 25416 0000F7A4 6A02                    	push 2
 25417 0000F7A6 488B0425[68000000]      	mov rax, qword [free_var_13]
 25418                                  .L_lambda_simple_arity_check_ok_0137:
 25419 0000F7AE 803805                  	cmp byte [rax], T_closure
 25420                                  
 25421 0000F7B1 0F85E7240000                    jne L_code_ptr_error                      ; rax <- proc
 25422                                  
 25423                                  
 25424 0000F7B7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25425                                  
 25426 0000F7BB 53                              push rbx                                  ; env pushed
 25427                                  
 25428 0000F7BC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25429                                  
 25430                                  
 25431 0000F7BF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25432                                  
 25433                                          
 25434                                          
 25435 0000F7C2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25436                                  
 25437 0000F7C6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25438                                  
 25439                                  
 25440 0000F7CB 4D89CA                          mov r10, r9
 25441 0000F7CE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 25442                                  
 25443                                                                                         
 25444 0000F7D2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25445 0000F7D5 4983C404                        add r12, 4
 25446                                  
 25447 0000F7D9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25448                                  .L_tc_recycle_frame_loop_00a7:
 25449 0000F7DF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 25450                                  
 25451 0000F7E3 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25452                                  
 25453                                  
 25454                                  
 25455 0000F7E8 41BE00000000                    mov r14, 0                                ; clean box
 25456                                  
 25457                                  
 25458                                                                  
 25459 0000F7EE 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25460                                  
 25461 0000F7F2 4983C4FF                        add r12, -1 
 25462                                  
 25463 0000F7F6 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25464 0000F7FA 75E3                    	jne .L_tc_recycle_frame_loop_00a7
 25465                                  .L_tc_recycle_frame_done_00a7:
 25466 0000F7FC 5D                      	pop rbp                                  ; restore the old rbp
 25467                                  
 25468 0000F7FD 488B4D00                        mov rcx, qword [rbp]
 25469 0000F801 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25470                                            ; rbx <- code(proc)
 25471                                  
 25472 0000F805 FFE3                            jmp rbx
 25473 0000F807 EB0A                    	jmp .L_if_end_0051
 25474                                  	.L_if_else_0051:
 25475 0000F809 48B8-                   		mov rax, qword (L_constants + 1)
 25475 0000F80B [0100000000000000] 
 25476                                  	.L_if_end_0051:
 25477 0000F813 C9                      	leave
 25478 0000F814 C22800                  	ret 8 * (2 + 3)
 25479                                  .L_lambda_simple_end_0090:	; new closure is in rax
 25480 0000F817 50                      push rax
 25481 0000F818 488B4520                mov rax, qword [rbp + 32]
 25482 0000F81C 8F00                    pop qword [rax]
 25483 0000F81E 48B8-                   mov rax, sob_void
 25483 0000F820 [0000000000000000] 
 25484                                  
 25485 0000F828 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25486 0000F82D E8E4140000              	call malloc
 25487 0000F832 50                      	push rax
 25488 0000F833 BF08000000              	mov rdi, 8 * 1	; new rib
 25489 0000F838 E8D9140000              	call malloc
 25490 0000F83D 50                      	push rax
 25491 0000F83E BF10000000              	mov rdi, 8 * 2	; extended env
 25492 0000F843 E8CE140000              	call malloc
 25493 0000F848 488B7D10                	mov rdi, ENV
 25494 0000F84C BE00000000              	mov rsi, 0
 25495 0000F851 BA01000000              	mov rdx, 1
 25496                                  .L_lambda_simple_env_loop_0091:	; ext_env[i + 1] <-- env[i]
 25497 0000F856 4883FE01                	cmp rsi, 1
 25498 0000F85A 7410                    	je .L_lambda_simple_env_end_0091
 25499 0000F85C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25500 0000F860 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25501 0000F864 48FFC6                  	inc rsi
 25502 0000F867 48FFC2                  	inc rdx
 25503 0000F86A EBEA                    	jmp .L_lambda_simple_env_loop_0091
 25504                                  .L_lambda_simple_env_end_0091:
 25505 0000F86C 5B                      	pop rbx
 25506 0000F86D BE00000000              	mov rsi, 0
 25507                                  .L_lambda_simple_params_loop_0091:	; copy params
 25508 0000F872 4883FE01                	cmp rsi, 1
 25509 0000F876 740E                    	je .L_lambda_simple_params_end_0091
 25510 0000F878 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25511 0000F87D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25512 0000F881 48FFC6                  	inc rsi
 25513 0000F884 EBEC                    	jmp .L_lambda_simple_params_loop_0091
 25514                                  .L_lambda_simple_params_end_0091:
 25515 0000F886 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25516 0000F889 4889C3                  	mov rbx, rax
 25517 0000F88C 58                      	pop rax
 25518 0000F88D C60005                  	mov byte [rax], T_closure
 25519 0000F890 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25520 0000F894 48C74009[A1F80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0091
 25521 0000F89C E9B4000000              	jmp .L_lambda_simple_end_0091
 25522                                  .L_lambda_simple_code_0091:	; lambda-simple body
 25523 0000F8A1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25524 0000F8A7 740B                    	je .L_lambda_simple_arity_check_ok_0138
 25525 0000F8A9 FF742410                	push qword [rsp + 8 * 2]
 25526 0000F8AD 6A01                    	push 1
 25527 0000F8AF E91B140000              	jmp L_error_incorrect_arity_simple
 25528                                  .L_lambda_simple_arity_check_ok_0138:
 25529 0000F8B4 C8000000                	enter 0, 0
 25530 0000F8B8 488B4520                mov rax, qword [rbp + 32]
 25531 0000F8BC 50                      	push rax
 25532 0000F8BD 6A01                    	push 1
 25533 0000F8BF 488B0425[90000000]      	mov rax, qword [free_var_18]
 25534 0000F8C7 803805                  	cmp byte [rax], T_closure 
 25535 0000F8CA 0F85CE230000                    jne L_code_ptr_error
 25536                                  
 25537 0000F8D0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25538                                  
 25539 0000F8D4 53                              push rbx
 25540                                  
 25541 0000F8D5 FF5009                          call SOB_CLOSURE_CODE(rax)
 25542                                  
 25543 0000F8D8 50                              	push rax
 25544 0000F8D9 48B8-                   	mov rax, qword (L_constants + 31)
 25544 0000F8DB [1F00000000000000] 
 25545 0000F8E3 50                      	push rax
 25546 0000F8E4 488B4520                mov rax, qword [rbp + 32]
 25547 0000F8E8 50                      	push rax
 25548 0000F8E9 6A03                    	push 3
 25549 0000F8EB 488B4510                mov rax, qword [rbp + 16]
 25550 0000F8EF 488B00                  mov rax, qword [rax + 0]
 25551 0000F8F2 488B00                  mov rax, qword [rax + 0]
 25552 0000F8F5 488B00                  	mov rax, qword [rax]
 25553                                  .L_lambda_simple_arity_check_ok_0139:
 25554 0000F8F8 803805                  	cmp byte [rax], T_closure
 25555                                  
 25556 0000F8FB 0F859D230000                    jne L_code_ptr_error                      ; rax <- proc
 25557                                  
 25558                                  
 25559 0000F901 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25560                                  
 25561 0000F905 53                              push rbx                                  ; env pushed
 25562                                  
 25563 0000F906 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25564                                  
 25565                                  
 25566 0000F909 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25567                                  
 25568                                          
 25569                                          
 25570 0000F90C 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25571                                  
 25572 0000F910 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25573                                  
 25574                                  
 25575 0000F915 4D89CA                          mov r10, r9
 25576 0000F918 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 25577                                  
 25578                                                                                         
 25579 0000F91C 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25580 0000F91F 4983C404                        add r12, 4
 25581                                  
 25582 0000F923 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25583                                  .L_tc_recycle_frame_loop_00a8:
 25584 0000F929 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 25585                                  
 25586 0000F92D 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25587                                  
 25588                                  
 25589                                  
 25590 0000F932 41BE00000000                    mov r14, 0                                ; clean box
 25591                                  
 25592                                  
 25593                                                                  
 25594 0000F938 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25595                                  
 25596 0000F93C 4983C4FF                        add r12, -1 
 25597                                  
 25598 0000F940 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25599 0000F944 75E3                    	jne .L_tc_recycle_frame_loop_00a8
 25600                                  .L_tc_recycle_frame_done_00a8:
 25601 0000F946 5D                      	pop rbp                                  ; restore the old rbp
 25602                                  
 25603 0000F947 488B4D00                        mov rcx, qword [rbp]
 25604 0000F94B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25605                                            ; rbx <- code(proc)
 25606                                  
 25607 0000F94F FFE3                            jmp rbx
 25608 0000F951 C9                      	leave
 25609 0000F952 C21800                  	ret 8 * (2 + 1)
 25610                                  .L_lambda_simple_end_0091:	; new closure is in rax
 25611 0000F955 C9                      	leave
 25612 0000F956 C21800                  	ret 8 * (2 + 1)
 25613                                  .L_lambda_simple_end_008f:	; new closure is in rax
 25614 0000F959 803805                  	cmp byte [rax], T_closure 
 25615 0000F95C 0F853C230000                    jne L_code_ptr_error
 25616                                  
 25617 0000F962 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25618                                  
 25619 0000F966 53                              push rbx
 25620                                  
 25621 0000F967 FF5009                          call SOB_CLOSURE_CODE(rax)
 25622                                  
 25623 0000F96A 48890425[D8030000]              	mov qword [free_var_123], rax
 25624 0000F972 48B8-                   	mov rax, sob_void
 25624 0000F974 [0000000000000000] 
 25625                                  
 25626 0000F97C 4889C7                  	mov rdi, rax
 25627 0000F97F E8A3130000              	call print_sexpr_if_not_void
 25628                                  
 25629 0000F984 48B8-                   	mov rax, qword (L_constants + 22)
 25629 0000F986 [1600000000000000] 
 25630 0000F98E 50                      	push rax
 25631 0000F98F 6A01                    	push 1
 25632 0000F991 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25633 0000F996 E87B130000              	call malloc
 25634 0000F99B 50                      	push rax
 25635 0000F99C BF00000000              	mov rdi, 8 * 0	; new rib
 25636 0000F9A1 E870130000              	call malloc
 25637 0000F9A6 50                      	push rax
 25638 0000F9A7 BF08000000              	mov rdi, 8 * 1	; extended env
 25639 0000F9AC E865130000              	call malloc
 25640 0000F9B1 488B7D10                	mov rdi, ENV
 25641 0000F9B5 BE00000000              	mov rsi, 0
 25642 0000F9BA BA01000000              	mov rdx, 1
 25643                                  .L_lambda_simple_env_loop_0092:	; ext_env[i + 1] <-- env[i]
 25644 0000F9BF 4883FE00                	cmp rsi, 0
 25645 0000F9C3 7410                    	je .L_lambda_simple_env_end_0092
 25646 0000F9C5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25647 0000F9C9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25648 0000F9CD 48FFC6                  	inc rsi
 25649 0000F9D0 48FFC2                  	inc rdx
 25650 0000F9D3 EBEA                    	jmp .L_lambda_simple_env_loop_0092
 25651                                  .L_lambda_simple_env_end_0092:
 25652 0000F9D5 5B                      	pop rbx
 25653 0000F9D6 BE00000000              	mov rsi, 0
 25654                                  .L_lambda_simple_params_loop_0092:	; copy params
 25655 0000F9DB 4883FE00                	cmp rsi, 0
 25656 0000F9DF 740E                    	je .L_lambda_simple_params_end_0092
 25657 0000F9E1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25658 0000F9E6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25659 0000F9EA 48FFC6                  	inc rsi
 25660 0000F9ED EBEC                    	jmp .L_lambda_simple_params_loop_0092
 25661                                  .L_lambda_simple_params_end_0092:
 25662 0000F9EF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25663 0000F9F2 4889C3                  	mov rbx, rax
 25664 0000F9F5 58                      	pop rax
 25665 0000F9F6 C60005                  	mov byte [rax], T_closure
 25666 0000F9F9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25667 0000F9FD 48C74009[0AFA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0092
 25668 0000FA05 E92F030000              	jmp .L_lambda_simple_end_0092
 25669                                  .L_lambda_simple_code_0092:	; lambda-simple body
 25670 0000FA0A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25671 0000FA10 740B                    	je .L_lambda_simple_arity_check_ok_013a
 25672 0000FA12 FF742410                	push qword [rsp + 8 * 2]
 25673 0000FA16 6A01                    	push 1
 25674 0000FA18 E9B2120000              	jmp L_error_incorrect_arity_simple
 25675                                  .L_lambda_simple_arity_check_ok_013a:
 25676 0000FA1D C8000000                	enter 0, 0
 25677 0000FA21 BF08000000              mov rdi, 8
 25678 0000FA26 E8EB120000              call malloc
 25679 0000FA2B 4889C3                  mov rbx, rax
 25680 0000FA2E 488B4520                mov rax, qword [rbp + 32]
 25681 0000FA32 488903                  mov qword [rbx], rax
 25682 0000FA35 4889D8                  mov rax, rbx
 25683 0000FA38 48894520                mov qword [rbp + 32], rax
 25684 0000FA3C 48B8-                   mov rax, sob_void
 25684 0000FA3E [0000000000000000] 
 25685 0000FA46 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25686 0000FA4B E8C6120000              	call malloc
 25687 0000FA50 50                      	push rax
 25688 0000FA51 BF08000000              	mov rdi, 8 * 1	; new rib
 25689 0000FA56 E8BB120000              	call malloc
 25690 0000FA5B 50                      	push rax
 25691 0000FA5C BF10000000              	mov rdi, 8 * 2	; extended env
 25692 0000FA61 E8B0120000              	call malloc
 25693 0000FA66 488B7D10                	mov rdi, ENV
 25694 0000FA6A BE00000000              	mov rsi, 0
 25695 0000FA6F BA01000000              	mov rdx, 1
 25696                                  .L_lambda_simple_env_loop_0093:	; ext_env[i + 1] <-- env[i]
 25697 0000FA74 4883FE01                	cmp rsi, 1
 25698 0000FA78 7410                    	je .L_lambda_simple_env_end_0093
 25699 0000FA7A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25700 0000FA7E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25701 0000FA82 48FFC6                  	inc rsi
 25702 0000FA85 48FFC2                  	inc rdx
 25703 0000FA88 EBEA                    	jmp .L_lambda_simple_env_loop_0093
 25704                                  .L_lambda_simple_env_end_0093:
 25705 0000FA8A 5B                      	pop rbx
 25706 0000FA8B BE00000000              	mov rsi, 0
 25707                                  .L_lambda_simple_params_loop_0093:	; copy params
 25708 0000FA90 4883FE01                	cmp rsi, 1
 25709 0000FA94 740E                    	je .L_lambda_simple_params_end_0093
 25710 0000FA96 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25711 0000FA9B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25712 0000FA9F 48FFC6                  	inc rsi
 25713 0000FAA2 EBEC                    	jmp .L_lambda_simple_params_loop_0093
 25714                                  .L_lambda_simple_params_end_0093:
 25715 0000FAA4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25716 0000FAA7 4889C3                  	mov rbx, rax
 25717 0000FAAA 58                      	pop rax
 25718 0000FAAB C60005                  	mov byte [rax], T_closure
 25719 0000FAAE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25720 0000FAB2 48C74009[BFFA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0093
 25721 0000FABA E938010000              	jmp .L_lambda_simple_end_0093
 25722                                  .L_lambda_simple_code_0093:	; lambda-simple body
 25723 0000FABF 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25724 0000FAC5 740B                    	je .L_lambda_simple_arity_check_ok_013b
 25725 0000FAC7 FF742410                	push qword [rsp + 8 * 2]
 25726 0000FACB 6A03                    	push 3
 25727 0000FACD E9FD110000              	jmp L_error_incorrect_arity_simple
 25728                                  .L_lambda_simple_arity_check_ok_013b:
 25729 0000FAD2 C8000000                	enter 0, 0
 25730 0000FAD6 488B4530                mov rax, qword [rbp + 48]
 25731 0000FADA 50                      	push rax
 25732 0000FADB 488B4528                mov rax, qword [rbp + 40]
 25733 0000FADF 50                      	push rax
 25734 0000FAE0 6A02                    	push 2
 25735 0000FAE2 488B0425[30030000]      	mov rax, qword [free_var_102]
 25736 0000FAEA 803805                  	cmp byte [rax], T_closure 
 25737 0000FAED 0F85AB210000                    jne L_code_ptr_error
 25738                                  
 25739 0000FAF3 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25740                                  
 25741 0000FAF7 53                              push rbx
 25742                                  
 25743 0000FAF8 FF5009                          call SOB_CLOSURE_CODE(rax)
 25744                                  
 25745 0000FAFB 483D[02000000]                  	cmp rax, sob_boolean_false
 25746 0000FB01 0F84E2000000            	je .L_if_else_0052
 25747 0000FB07 488B4530                mov rax, qword [rbp + 48]
 25748 0000FB0B 50                      	push rax
 25749 0000FB0C 48B8-                   	mov rax, qword (L_constants + 127)
 25749 0000FB0E [7F00000000000000] 
 25750 0000FB16 50                      	push rax
 25751 0000FB17 488B4528                mov rax, qword [rbp + 40]
 25752 0000FB1B 50                      	push rax
 25753 0000FB1C 6A02                    	push 2
 25754 0000FB1E 488B0425[08030000]      	mov rax, qword [free_var_97]
 25755 0000FB26 803805                  	cmp byte [rax], T_closure 
 25756 0000FB29 0F856F210000                    jne L_code_ptr_error
 25757                                  
 25758 0000FB2F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25759                                  
 25760 0000FB33 53                              push rbx
 25761                                  
 25762 0000FB34 FF5009                          call SOB_CLOSURE_CODE(rax)
 25763                                  
 25764 0000FB37 50                              	push rax
 25765 0000FB38 488B4520                mov rax, qword [rbp + 32]
 25766 0000FB3C 50                      	push rax
 25767 0000FB3D 6A03                    	push 3
 25768 0000FB3F 488B4510                mov rax, qword [rbp + 16]
 25769 0000FB43 488B00                  mov rax, qword [rax + 0]
 25770 0000FB46 488B00                  mov rax, qword [rax + 0]
 25771 0000FB49 488B00                  	mov rax, qword [rax]
 25772 0000FB4C 803805                  	cmp byte [rax], T_closure 
 25773 0000FB4F 0F8549210000                    jne L_code_ptr_error
 25774                                  
 25775 0000FB55 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25776                                  
 25777 0000FB59 53                              push rbx
 25778                                  
 25779 0000FB5A FF5009                          call SOB_CLOSURE_CODE(rax)
 25780                                  
 25781 0000FB5D 50                              	push rax
 25782 0000FB5E 488B4528                mov rax, qword [rbp + 40]
 25783 0000FB62 50                      	push rax
 25784 0000FB63 488B4520                mov rax, qword [rbp + 32]
 25785 0000FB67 50                      	push rax
 25786 0000FB68 6A02                    	push 2
 25787 0000FB6A 488B0425[80010000]      	mov rax, qword [free_var_48]
 25788 0000FB72 803805                  	cmp byte [rax], T_closure 
 25789 0000FB75 0F8523210000                    jne L_code_ptr_error
 25790                                  
 25791 0000FB7B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25792                                  
 25793 0000FB7F 53                              push rbx
 25794                                  
 25795 0000FB80 FF5009                          call SOB_CLOSURE_CODE(rax)
 25796                                  
 25797 0000FB83 50                              	push rax
 25798 0000FB84 6A02                    	push 2
 25799 0000FB86 488B0425[68000000]      	mov rax, qword [free_var_13]
 25800                                  .L_lambda_simple_arity_check_ok_013c:
 25801 0000FB8E 803805                  	cmp byte [rax], T_closure
 25802                                  
 25803 0000FB91 0F8507210000                    jne L_code_ptr_error                      ; rax <- proc
 25804                                  
 25805                                  
 25806 0000FB97 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25807                                  
 25808 0000FB9B 53                              push rbx                                  ; env pushed
 25809                                  
 25810 0000FB9C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25811                                  
 25812                                  
 25813 0000FB9F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25814                                  
 25815                                          
 25816                                          
 25817 0000FBA2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25818                                  
 25819 0000FBA6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25820                                  
 25821                                  
 25822 0000FBAB 4D89CA                          mov r10, r9
 25823 0000FBAE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 25824                                  
 25825                                                                                         
 25826 0000FBB2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25827 0000FBB5 4983C404                        add r12, 4
 25828                                  
 25829 0000FBB9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25830                                  .L_tc_recycle_frame_loop_00a9:
 25831 0000FBBF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 25832                                  
 25833 0000FBC3 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25834                                  
 25835                                  
 25836                                  
 25837 0000FBC8 41BE00000000                    mov r14, 0                                ; clean box
 25838                                  
 25839                                  
 25840                                                                  
 25841 0000FBCE 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25842                                  
 25843 0000FBD2 4983C4FF                        add r12, -1 
 25844                                  
 25845 0000FBD6 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25846 0000FBDA 75E3                    	jne .L_tc_recycle_frame_loop_00a9
 25847                                  .L_tc_recycle_frame_done_00a9:
 25848 0000FBDC 5D                      	pop rbp                                  ; restore the old rbp
 25849                                  
 25850 0000FBDD 488B4D00                        mov rcx, qword [rbp]
 25851 0000FBE1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25852                                            ; rbx <- code(proc)
 25853                                  
 25854 0000FBE5 FFE3                            jmp rbx
 25855 0000FBE7 EB0A                    	jmp .L_if_end_0052
 25856                                  	.L_if_else_0052:
 25857 0000FBE9 48B8-                   		mov rax, qword (L_constants + 1)
 25857 0000FBEB [0100000000000000] 
 25858                                  	.L_if_end_0052:
 25859 0000FBF3 C9                      	leave
 25860 0000FBF4 C22800                  	ret 8 * (2 + 3)
 25861                                  .L_lambda_simple_end_0093:	; new closure is in rax
 25862 0000FBF7 50                      push rax
 25863 0000FBF8 488B4520                mov rax, qword [rbp + 32]
 25864 0000FBFC 8F00                    pop qword [rax]
 25865 0000FBFE 48B8-                   mov rax, sob_void
 25865 0000FC00 [0000000000000000] 
 25866                                  
 25867 0000FC08 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25868 0000FC0D E804110000              	call malloc
 25869 0000FC12 50                      	push rax
 25870 0000FC13 BF08000000              	mov rdi, 8 * 1	; new rib
 25871 0000FC18 E8F9100000              	call malloc
 25872 0000FC1D 50                      	push rax
 25873 0000FC1E BF10000000              	mov rdi, 8 * 2	; extended env
 25874 0000FC23 E8EE100000              	call malloc
 25875 0000FC28 488B7D10                	mov rdi, ENV
 25876 0000FC2C BE00000000              	mov rsi, 0
 25877 0000FC31 BA01000000              	mov rdx, 1
 25878                                  .L_lambda_simple_env_loop_0094:	; ext_env[i + 1] <-- env[i]
 25879 0000FC36 4883FE01                	cmp rsi, 1
 25880 0000FC3A 7410                    	je .L_lambda_simple_env_end_0094
 25881 0000FC3C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25882 0000FC40 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25883 0000FC44 48FFC6                  	inc rsi
 25884 0000FC47 48FFC2                  	inc rdx
 25885 0000FC4A EBEA                    	jmp .L_lambda_simple_env_loop_0094
 25886                                  .L_lambda_simple_env_end_0094:
 25887 0000FC4C 5B                      	pop rbx
 25888 0000FC4D BE00000000              	mov rsi, 0
 25889                                  .L_lambda_simple_params_loop_0094:	; copy params
 25890 0000FC52 4883FE01                	cmp rsi, 1
 25891 0000FC56 740E                    	je .L_lambda_simple_params_end_0094
 25892 0000FC58 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25893 0000FC5D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25894 0000FC61 48FFC6                  	inc rsi
 25895 0000FC64 EBEC                    	jmp .L_lambda_simple_params_loop_0094
 25896                                  .L_lambda_simple_params_end_0094:
 25897 0000FC66 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25898 0000FC69 4889C3                  	mov rbx, rax
 25899 0000FC6C 58                      	pop rax
 25900 0000FC6D C60005                  	mov byte [rax], T_closure
 25901 0000FC70 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25902 0000FC74 48C74009[81FC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0094
 25903 0000FC7C E9B4000000              	jmp .L_lambda_simple_end_0094
 25904                                  .L_lambda_simple_code_0094:	; lambda-simple body
 25905 0000FC81 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25906 0000FC87 740B                    	je .L_lambda_simple_arity_check_ok_013d
 25907 0000FC89 FF742410                	push qword [rsp + 8 * 2]
 25908 0000FC8D 6A01                    	push 1
 25909 0000FC8F E93B100000              	jmp L_error_incorrect_arity_simple
 25910                                  .L_lambda_simple_arity_check_ok_013d:
 25911 0000FC94 C8000000                	enter 0, 0
 25912 0000FC98 488B4520                mov rax, qword [rbp + 32]
 25913 0000FC9C 50                      	push rax
 25914 0000FC9D 6A01                    	push 1
 25915 0000FC9F 488B0425[98000000]      	mov rax, qword [free_var_19]
 25916 0000FCA7 803805                  	cmp byte [rax], T_closure 
 25917 0000FCAA 0F85EE1F0000                    jne L_code_ptr_error
 25918                                  
 25919 0000FCB0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 25920                                  
 25921 0000FCB4 53                              push rbx
 25922                                  
 25923 0000FCB5 FF5009                          call SOB_CLOSURE_CODE(rax)
 25924                                  
 25925 0000FCB8 50                              	push rax
 25926 0000FCB9 48B8-                   	mov rax, qword (L_constants + 31)
 25926 0000FCBB [1F00000000000000] 
 25927 0000FCC3 50                      	push rax
 25928 0000FCC4 488B4520                mov rax, qword [rbp + 32]
 25929 0000FCC8 50                      	push rax
 25930 0000FCC9 6A03                    	push 3
 25931 0000FCCB 488B4510                mov rax, qword [rbp + 16]
 25932 0000FCCF 488B00                  mov rax, qword [rax + 0]
 25933 0000FCD2 488B00                  mov rax, qword [rax + 0]
 25934 0000FCD5 488B00                  	mov rax, qword [rax]
 25935                                  .L_lambda_simple_arity_check_ok_013e:
 25936 0000FCD8 803805                  	cmp byte [rax], T_closure
 25937                                  
 25938 0000FCDB 0F85BD1F0000                    jne L_code_ptr_error                      ; rax <- proc
 25939                                  
 25940                                  
 25941 0000FCE1 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 25942                                  
 25943 0000FCE5 53                              push rbx                                  ; env pushed
 25944                                  
 25945 0000FCE6 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 25946                                  
 25947                                  
 25948 0000FCE9 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 25949                                  
 25950                                          
 25951                                          
 25952 0000FCEC 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 25953                                  
 25954 0000FCF0 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 25955                                  
 25956                                  
 25957 0000FCF5 4D89CA                          mov r10, r9
 25958 0000FCF8 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 25959                                  
 25960                                                                                         
 25961 0000FCFC 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 25962 0000FCFF 4983C404                        add r12, 4
 25963                                  
 25964 0000FD03 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 25965                                  .L_tc_recycle_frame_loop_00aa:
 25966 0000FD09 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 25967                                  
 25968 0000FD0D 4E8974E500                      mov [rbp + (r12 * 8)], r14
 25969                                  
 25970                                  
 25971                                  
 25972 0000FD12 41BE00000000                    mov r14, 0                                ; clean box
 25973                                  
 25974                                  
 25975                                                                  
 25976 0000FD18 4983C2FF                        add r10, -1                               ; args_copied_counter--
 25977                                  
 25978 0000FD1C 4983C4FF                        add r12, -1 
 25979                                  
 25980 0000FD20 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 25981 0000FD24 75E3                    	jne .L_tc_recycle_frame_loop_00aa
 25982                                  .L_tc_recycle_frame_done_00aa:
 25983 0000FD26 5D                      	pop rbp                                  ; restore the old rbp
 25984                                  
 25985 0000FD27 488B4D00                        mov rcx, qword [rbp]
 25986 0000FD2B 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 25987                                            ; rbx <- code(proc)
 25988                                  
 25989 0000FD2F FFE3                            jmp rbx
 25990 0000FD31 C9                      	leave
 25991 0000FD32 C21800                  	ret 8 * (2 + 1)
 25992                                  .L_lambda_simple_end_0094:	; new closure is in rax
 25993 0000FD35 C9                      	leave
 25994 0000FD36 C21800                  	ret 8 * (2 + 1)
 25995                                  .L_lambda_simple_end_0092:	; new closure is in rax
 25996 0000FD39 803805                  	cmp byte [rax], T_closure 
 25997 0000FD3C 0F855C1F0000                    jne L_code_ptr_error
 25998                                  
 25999 0000FD42 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26000                                  
 26001 0000FD46 53                              push rbx
 26002                                  
 26003 0000FD47 FF5009                          call SOB_CLOSURE_CODE(rax)
 26004                                  
 26005 0000FD4A 48890425[48040000]              	mov qword [free_var_137], rax
 26006 0000FD52 48B8-                   	mov rax, sob_void
 26006 0000FD54 [0000000000000000] 
 26007                                  
 26008 0000FD5C 4889C7                  	mov rdi, rax
 26009 0000FD5F E8C30F0000              	call print_sexpr_if_not_void
 26010                                  
 26011 0000FD64 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26012 0000FD69 E8A80F0000              	call malloc
 26013 0000FD6E 50                      	push rax
 26014 0000FD6F BF00000000              	mov rdi, 8 * 0	; new rib
 26015 0000FD74 E89D0F0000              	call malloc
 26016 0000FD79 50                      	push rax
 26017 0000FD7A BF08000000              	mov rdi, 8 * 1	; extended env
 26018 0000FD7F E8920F0000              	call malloc
 26019 0000FD84 488B7D10                	mov rdi, ENV
 26020 0000FD88 BE00000000              	mov rsi, 0
 26021 0000FD8D BA01000000              	mov rdx, 1
 26022                                  .L_lambda_simple_env_loop_0095:	; ext_env[i + 1] <-- env[i]
 26023 0000FD92 4883FE00                	cmp rsi, 0
 26024 0000FD96 7410                    	je .L_lambda_simple_env_end_0095
 26025 0000FD98 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26026 0000FD9C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26027 0000FDA0 48FFC6                  	inc rsi
 26028 0000FDA3 48FFC2                  	inc rdx
 26029 0000FDA6 EBEA                    	jmp .L_lambda_simple_env_loop_0095
 26030                                  .L_lambda_simple_env_end_0095:
 26031 0000FDA8 5B                      	pop rbx
 26032 0000FDA9 BE00000000              	mov rsi, 0
 26033                                  .L_lambda_simple_params_loop_0095:	; copy params
 26034 0000FDAE 4883FE00                	cmp rsi, 0
 26035 0000FDB2 740E                    	je .L_lambda_simple_params_end_0095
 26036 0000FDB4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26037 0000FDB9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26038 0000FDBD 48FFC6                  	inc rsi
 26039 0000FDC0 EBEC                    	jmp .L_lambda_simple_params_loop_0095
 26040                                  .L_lambda_simple_params_end_0095:
 26041 0000FDC2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26042 0000FDC5 4889C3                  	mov rbx, rax
 26043 0000FDC8 58                      	pop rax
 26044 0000FDC9 C60005                  	mov byte [rax], T_closure
 26045 0000FDCC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26046 0000FDD0 48C74009[DDFD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0095
 26047 0000FDD8 E99F000000              	jmp .L_lambda_simple_end_0095
 26048                                  .L_lambda_simple_code_0095:	; lambda-simple body
 26049 0000FDDD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26050 0000FDE3 740B                    	je .L_lambda_simple_arity_check_ok_013f
 26051 0000FDE5 FF742410                	push qword [rsp + 8 * 2]
 26052 0000FDE9 6A01                    	push 1
 26053 0000FDEB E9DF0E0000              	jmp L_error_incorrect_arity_simple
 26054                                  .L_lambda_simple_arity_check_ok_013f:
 26055 0000FDF0 C8000000                	enter 0, 0
 26056 0000FDF4 488B4520                mov rax, qword [rbp + 32]
 26057 0000FDF8 50                      	push rax
 26058 0000FDF9 6A00                    	push 0
 26059 0000FDFB 488B0425[D0000000]      	mov rax, qword [free_var_26]
 26060 0000FE03 803805                  	cmp byte [rax], T_closure 
 26061 0000FE06 0F85921E0000                    jne L_code_ptr_error
 26062                                  
 26063 0000FE0C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26064                                  
 26065 0000FE10 53                              push rbx
 26066                                  
 26067 0000FE11 FF5009                          call SOB_CLOSURE_CODE(rax)
 26068                                  
 26069 0000FE14 50                              	push rax
 26070 0000FE15 6A02                    	push 2
 26071 0000FE17 488B0425[60010000]      	mov rax, qword [free_var_44]
 26072                                  .L_lambda_simple_arity_check_ok_0140:
 26073 0000FE1F 803805                  	cmp byte [rax], T_closure
 26074                                  
 26075 0000FE22 0F85761E0000                    jne L_code_ptr_error                      ; rax <- proc
 26076                                  
 26077                                  
 26078 0000FE28 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26079                                  
 26080 0000FE2C 53                              push rbx                                  ; env pushed
 26081                                  
 26082 0000FE2D FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26083                                  
 26084                                  
 26085 0000FE30 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26086                                  
 26087                                          
 26088                                          
 26089 0000FE33 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26090                                  
 26091 0000FE37 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26092                                  
 26093                                  
 26094 0000FE3C 4D89CA                          mov r10, r9
 26095 0000FE3F 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 26096                                  
 26097                                                                                         
 26098 0000FE43 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26099 0000FE46 4983C404                        add r12, 4
 26100                                  
 26101 0000FE4A 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26102                                  .L_tc_recycle_frame_loop_00ab:
 26103 0000FE50 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 26104                                  
 26105 0000FE54 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26106                                  
 26107                                  
 26108                                  
 26109 0000FE59 41BE00000000                    mov r14, 0                                ; clean box
 26110                                  
 26111                                  
 26112                                                                  
 26113 0000FE5F 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26114                                  
 26115 0000FE63 4983C4FF                        add r12, -1 
 26116                                  
 26117 0000FE67 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26118 0000FE6B 75E3                    	jne .L_tc_recycle_frame_loop_00ab
 26119                                  .L_tc_recycle_frame_done_00ab:
 26120 0000FE6D 5D                      	pop rbp                                  ; restore the old rbp
 26121                                  
 26122 0000FE6E 488B4D00                        mov rcx, qword [rbp]
 26123 0000FE72 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26124                                            ; rbx <- code(proc)
 26125                                  
 26126 0000FE76 FFE3                            jmp rbx
 26127 0000FE78 C9                      	leave
 26128 0000FE79 C21800                  	ret 8 * (2 + 1)
 26129                                  .L_lambda_simple_end_0095:	; new closure is in rax
 26130 0000FE7C 48890425[50040000]      	mov qword [free_var_138], rax
 26131 0000FE84 48B8-                   	mov rax, sob_void
 26131 0000FE86 [0000000000000000] 
 26132                                  
 26133 0000FE8E 4889C7                  	mov rdi, rax
 26134 0000FE91 E8910E0000              	call print_sexpr_if_not_void
 26135                                  
 26136 0000FE96 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26137 0000FE9B E8760E0000              	call malloc
 26138 0000FEA0 50                      	push rax
 26139 0000FEA1 BF00000000              	mov rdi, 8 * 0	; new rib
 26140 0000FEA6 E86B0E0000              	call malloc
 26141 0000FEAB 50                      	push rax
 26142 0000FEAC BF08000000              	mov rdi, 8 * 1	; extended env
 26143 0000FEB1 E8600E0000              	call malloc
 26144 0000FEB6 488B7D10                	mov rdi, ENV
 26145 0000FEBA BE00000000              	mov rsi, 0
 26146 0000FEBF BA01000000              	mov rdx, 1
 26147                                  .L_lambda_simple_env_loop_0096:	; ext_env[i + 1] <-- env[i]
 26148 0000FEC4 4883FE00                	cmp rsi, 0
 26149 0000FEC8 7410                    	je .L_lambda_simple_env_end_0096
 26150 0000FECA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26151 0000FECE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26152 0000FED2 48FFC6                  	inc rsi
 26153 0000FED5 48FFC2                  	inc rdx
 26154 0000FED8 EBEA                    	jmp .L_lambda_simple_env_loop_0096
 26155                                  .L_lambda_simple_env_end_0096:
 26156 0000FEDA 5B                      	pop rbx
 26157 0000FEDB BE00000000              	mov rsi, 0
 26158                                  .L_lambda_simple_params_loop_0096:	; copy params
 26159 0000FEE0 4883FE00                	cmp rsi, 0
 26160 0000FEE4 740E                    	je .L_lambda_simple_params_end_0096
 26161 0000FEE6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26162 0000FEEB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26163 0000FEEF 48FFC6                  	inc rsi
 26164 0000FEF2 EBEC                    	jmp .L_lambda_simple_params_loop_0096
 26165                                  .L_lambda_simple_params_end_0096:
 26166 0000FEF4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26167 0000FEF7 4889C3                  	mov rbx, rax
 26168 0000FEFA 58                      	pop rax
 26169 0000FEFB C60005                  	mov byte [rax], T_closure
 26170 0000FEFE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26171 0000FF02 48C74009[0FFF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0096
 26172 0000FF0A E98E000000              	jmp .L_lambda_simple_end_0096
 26173                                  .L_lambda_simple_code_0096:	; lambda-simple body
 26174 0000FF0F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26175 0000FF15 740B                    	je .L_lambda_simple_arity_check_ok_0141
 26176 0000FF17 FF742410                	push qword [rsp + 8 * 2]
 26177 0000FF1B 6A01                    	push 1
 26178 0000FF1D E9AD0D0000              	jmp L_error_incorrect_arity_simple
 26179                                  .L_lambda_simple_arity_check_ok_0141:
 26180 0000FF22 C8000000                	enter 0, 0
 26181 0000FF26 488B4520                mov rax, qword [rbp + 32]
 26182 0000FF2A 50                      	push rax
 26183 0000FF2B 48B8-                   	mov rax, qword (L_constants + 31)
 26183 0000FF2D [1F00000000000000] 
 26184 0000FF35 50                      	push rax
 26185 0000FF36 6A02                    	push 2
 26186 0000FF38 488B0425[30030000]      	mov rax, qword [free_var_102]
 26187                                  .L_lambda_simple_arity_check_ok_0142:
 26188 0000FF40 803805                  	cmp byte [rax], T_closure
 26189                                  
 26190 0000FF43 0F85551D0000                    jne L_code_ptr_error                      ; rax <- proc
 26191                                  
 26192                                  
 26193 0000FF49 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26194                                  
 26195 0000FF4D 53                              push rbx                                  ; env pushed
 26196                                  
 26197 0000FF4E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26198                                  
 26199                                  
 26200 0000FF51 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26201                                  
 26202                                          
 26203                                          
 26204 0000FF54 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26205                                  
 26206 0000FF58 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26207                                  
 26208                                  
 26209 0000FF5D 4D89CA                          mov r10, r9
 26210 0000FF60 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 26211                                  
 26212                                                                                         
 26213 0000FF64 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26214 0000FF67 4983C404                        add r12, 4
 26215                                  
 26216 0000FF6B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26217                                  .L_tc_recycle_frame_loop_00ac:
 26218 0000FF71 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 26219                                  
 26220 0000FF75 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26221                                  
 26222                                  
 26223                                  
 26224 0000FF7A 41BE00000000                    mov r14, 0                                ; clean box
 26225                                  
 26226                                  
 26227                                                                  
 26228 0000FF80 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26229                                  
 26230 0000FF84 4983C4FF                        add r12, -1 
 26231                                  
 26232 0000FF88 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26233 0000FF8C 75E3                    	jne .L_tc_recycle_frame_loop_00ac
 26234                                  .L_tc_recycle_frame_done_00ac:
 26235 0000FF8E 5D                      	pop rbp                                  ; restore the old rbp
 26236                                  
 26237 0000FF8F 488B4D00                        mov rcx, qword [rbp]
 26238 0000FF93 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26239                                            ; rbx <- code(proc)
 26240                                  
 26241 0000FF97 FFE3                            jmp rbx
 26242 0000FF99 C9                      	leave
 26243 0000FF9A C21800                  	ret 8 * (2 + 1)
 26244                                  .L_lambda_simple_end_0096:	; new closure is in rax
 26245 0000FF9D 48890425[58040000]      	mov qword [free_var_139], rax
 26246 0000FFA5 48B8-                   	mov rax, sob_void
 26246 0000FFA7 [0000000000000000] 
 26247                                  
 26248 0000FFAF 4889C7                  	mov rdi, rax
 26249 0000FFB2 E8700D0000              	call print_sexpr_if_not_void
 26250                                  
 26251 0000FFB7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26252 0000FFBC E8550D0000              	call malloc
 26253 0000FFC1 50                      	push rax
 26254 0000FFC2 BF00000000              	mov rdi, 8 * 0	; new rib
 26255 0000FFC7 E84A0D0000              	call malloc
 26256 0000FFCC 50                      	push rax
 26257 0000FFCD BF08000000              	mov rdi, 8 * 1	; extended env
 26258 0000FFD2 E83F0D0000              	call malloc
 26259 0000FFD7 488B7D10                	mov rdi, ENV
 26260 0000FFDB BE00000000              	mov rsi, 0
 26261 0000FFE0 BA01000000              	mov rdx, 1
 26262                                  .L_lambda_simple_env_loop_0097:	; ext_env[i + 1] <-- env[i]
 26263 0000FFE5 4883FE00                	cmp rsi, 0
 26264 0000FFE9 7410                    	je .L_lambda_simple_env_end_0097
 26265 0000FFEB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26266 0000FFEF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26267 0000FFF3 48FFC6                  	inc rsi
 26268 0000FFF6 48FFC2                  	inc rdx
 26269 0000FFF9 EBEA                    	jmp .L_lambda_simple_env_loop_0097
 26270                                  .L_lambda_simple_env_end_0097:
 26271 0000FFFB 5B                      	pop rbx
 26272 0000FFFC BE00000000              	mov rsi, 0
 26273                                  .L_lambda_simple_params_loop_0097:	; copy params
 26274 00010001 4883FE00                	cmp rsi, 0
 26275 00010005 740E                    	je .L_lambda_simple_params_end_0097
 26276 00010007 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26277 0001000C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26278 00010010 48FFC6                  	inc rsi
 26279 00010013 EBEC                    	jmp .L_lambda_simple_params_loop_0097
 26280                                  .L_lambda_simple_params_end_0097:
 26281 00010015 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26282 00010018 4889C3                  	mov rbx, rax
 26283 0001001B 58                      	pop rax
 26284 0001001C C60005                  	mov byte [rax], T_closure
 26285 0001001F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26286 00010023 48C74009[30000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0097
 26287 0001002B E98E000000              	jmp .L_lambda_simple_end_0097
 26288                                  .L_lambda_simple_code_0097:	; lambda-simple body
 26289 00010030 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26290 00010036 740B                    	je .L_lambda_simple_arity_check_ok_0143
 26291 00010038 FF742410                	push qword [rsp + 8 * 2]
 26292 0001003C 6A01                    	push 1
 26293 0001003E E98C0C0000              	jmp L_error_incorrect_arity_simple
 26294                                  .L_lambda_simple_arity_check_ok_0143:
 26295 00010043 C8000000                	enter 0, 0
 26296 00010047 48B8-                   	mov rax, qword (L_constants + 31)
 26296 00010049 [1F00000000000000] 
 26297 00010051 50                      	push rax
 26298 00010052 488B4520                mov rax, qword [rbp + 32]
 26299 00010056 50                      	push rax
 26300 00010057 6A02                    	push 2
 26301 00010059 488B0425[30030000]      	mov rax, qword [free_var_102]
 26302                                  .L_lambda_simple_arity_check_ok_0144:
 26303 00010061 803805                  	cmp byte [rax], T_closure
 26304                                  
 26305 00010064 0F85341C0000                    jne L_code_ptr_error                      ; rax <- proc
 26306                                  
 26307                                  
 26308 0001006A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26309                                  
 26310 0001006E 53                              push rbx                                  ; env pushed
 26311                                  
 26312 0001006F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26313                                  
 26314                                  
 26315 00010072 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26316                                  
 26317                                          
 26318                                          
 26319 00010075 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26320                                  
 26321 00010079 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26322                                  
 26323                                  
 26324 0001007E 4D89CA                          mov r10, r9
 26325 00010081 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 26326                                  
 26327                                                                                         
 26328 00010085 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26329 00010088 4983C404                        add r12, 4
 26330                                  
 26331 0001008C 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26332                                  .L_tc_recycle_frame_loop_00ad:
 26333 00010092 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 26334                                  
 26335 00010096 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26336                                  
 26337                                  
 26338                                  
 26339 0001009B 41BE00000000                    mov r14, 0                                ; clean box
 26340                                  
 26341                                  
 26342                                                                  
 26343 000100A1 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26344                                  
 26345 000100A5 4983C4FF                        add r12, -1 
 26346                                  
 26347 000100A9 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26348 000100AD 75E3                    	jne .L_tc_recycle_frame_loop_00ad
 26349                                  .L_tc_recycle_frame_done_00ad:
 26350 000100AF 5D                      	pop rbp                                  ; restore the old rbp
 26351                                  
 26352 000100B0 488B4D00                        mov rcx, qword [rbp]
 26353 000100B4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26354                                            ; rbx <- code(proc)
 26355                                  
 26356 000100B8 FFE3                            jmp rbx
 26357 000100BA C9                      	leave
 26358 000100BB C21800                  	ret 8 * (2 + 1)
 26359                                  .L_lambda_simple_end_0097:	; new closure is in rax
 26360 000100BE 48890425[60040000]      	mov qword [free_var_140], rax
 26361 000100C6 48B8-                   	mov rax, sob_void
 26361 000100C8 [0000000000000000] 
 26362                                  
 26363 000100D0 4889C7                  	mov rdi, rax
 26364 000100D3 E84F0C0000              	call print_sexpr_if_not_void
 26365                                  
 26366 000100D8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26367 000100DD E8340C0000              	call malloc
 26368 000100E2 50                      	push rax
 26369 000100E3 BF00000000              	mov rdi, 8 * 0	; new rib
 26370 000100E8 E8290C0000              	call malloc
 26371 000100ED 50                      	push rax
 26372 000100EE BF08000000              	mov rdi, 8 * 1	; extended env
 26373 000100F3 E81E0C0000              	call malloc
 26374 000100F8 488B7D10                	mov rdi, ENV
 26375 000100FC BE00000000              	mov rsi, 0
 26376 00010101 BA01000000              	mov rdx, 1
 26377                                  .L_lambda_simple_env_loop_0098:	; ext_env[i + 1] <-- env[i]
 26378 00010106 4883FE00                	cmp rsi, 0
 26379 0001010A 7410                    	je .L_lambda_simple_env_end_0098
 26380 0001010C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26381 00010110 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26382 00010114 48FFC6                  	inc rsi
 26383 00010117 48FFC2                  	inc rdx
 26384 0001011A EBEA                    	jmp .L_lambda_simple_env_loop_0098
 26385                                  .L_lambda_simple_env_end_0098:
 26386 0001011C 5B                      	pop rbx
 26387 0001011D BE00000000              	mov rsi, 0
 26388                                  .L_lambda_simple_params_loop_0098:	; copy params
 26389 00010122 4883FE00                	cmp rsi, 0
 26390 00010126 740E                    	je .L_lambda_simple_params_end_0098
 26391 00010128 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26392 0001012D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26393 00010131 48FFC6                  	inc rsi
 26394 00010134 EBEC                    	jmp .L_lambda_simple_params_loop_0098
 26395                                  .L_lambda_simple_params_end_0098:
 26396 00010136 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26397 00010139 4889C3                  	mov rbx, rax
 26398 0001013C 58                      	pop rax
 26399 0001013D C60005                  	mov byte [rax], T_closure
 26400 00010140 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26401 00010144 48C74009[51010100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0098
 26402 0001014C E9AA000000              	jmp .L_lambda_simple_end_0098
 26403                                  .L_lambda_simple_code_0098:	; lambda-simple body
 26404 00010151 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26405 00010157 740B                    	je .L_lambda_simple_arity_check_ok_0145
 26406 00010159 FF742410                	push qword [rsp + 8 * 2]
 26407 0001015D 6A01                    	push 1
 26408 0001015F E96B0B0000              	jmp L_error_incorrect_arity_simple
 26409                                  .L_lambda_simple_arity_check_ok_0145:
 26410 00010164 C8000000                	enter 0, 0
 26411 00010168 48B8-                   	mov rax, qword (L_constants + 511)
 26411 0001016A [FF01000000000000] 
 26412 00010172 50                      	push rax
 26413 00010173 488B4520                mov rax, qword [rbp + 32]
 26414 00010177 50                      	push rax
 26415 00010178 6A02                    	push 2
 26416 0001017A 488B0425[60010000]      	mov rax, qword [free_var_44]
 26417 00010182 803805                  	cmp byte [rax], T_closure 
 26418 00010185 0F85131B0000                    jne L_code_ptr_error
 26419                                  
 26420 0001018B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26421                                  
 26422 0001018F 53                              push rbx
 26423                                  
 26424 00010190 FF5009                          call SOB_CLOSURE_CODE(rax)
 26425                                  
 26426 00010193 50                              	push rax
 26427 00010194 6A01                    	push 1
 26428 00010196 488B0425[D8000000]      	mov rax, qword [free_var_27]
 26429                                  .L_lambda_simple_arity_check_ok_0146:
 26430 0001019E 803805                  	cmp byte [rax], T_closure
 26431                                  
 26432 000101A1 0F85F71A0000                    jne L_code_ptr_error                      ; rax <- proc
 26433                                  
 26434                                  
 26435 000101A7 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26436                                  
 26437 000101AB 53                              push rbx                                  ; env pushed
 26438                                  
 26439 000101AC FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26440                                  
 26441                                  
 26442 000101AF FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26443                                  
 26444                                          
 26445                                          
 26446 000101B2 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26447                                  
 26448 000101B6 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26449                                  
 26450                                  
 26451 000101BB 4D89CA                          mov r10, r9
 26452 000101BE 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 26453                                  
 26454                                                                                         
 26455 000101C2 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26456 000101C5 4983C404                        add r12, 4
 26457                                  
 26458 000101C9 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26459                                  .L_tc_recycle_frame_loop_00ae:
 26460 000101CF 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 26461                                  
 26462 000101D3 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26463                                  
 26464                                  
 26465                                  
 26466 000101D8 41BE00000000                    mov r14, 0                                ; clean box
 26467                                  
 26468                                  
 26469                                                                  
 26470 000101DE 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26471                                  
 26472 000101E2 4983C4FF                        add r12, -1 
 26473                                  
 26474 000101E6 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26475 000101EA 75E3                    	jne .L_tc_recycle_frame_loop_00ae
 26476                                  .L_tc_recycle_frame_done_00ae:
 26477 000101EC 5D                      	pop rbp                                  ; restore the old rbp
 26478                                  
 26479 000101ED 488B4D00                        mov rcx, qword [rbp]
 26480 000101F1 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26481                                            ; rbx <- code(proc)
 26482                                  
 26483 000101F5 FFE3                            jmp rbx
 26484 000101F7 C9                      	leave
 26485 000101F8 C21800                  	ret 8 * (2 + 1)
 26486                                  .L_lambda_simple_end_0098:	; new closure is in rax
 26487 000101FB 48890425[68040000]      	mov qword [free_var_141], rax
 26488 00010203 48B8-                   	mov rax, sob_void
 26488 00010205 [0000000000000000] 
 26489                                  
 26490 0001020D 4889C7                  	mov rdi, rax
 26491 00010210 E8120B0000              	call print_sexpr_if_not_void
 26492                                  
 26493 00010215 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26494 0001021A E8F70A0000              	call malloc
 26495 0001021F 50                      	push rax
 26496 00010220 BF00000000              	mov rdi, 8 * 0	; new rib
 26497 00010225 E8EC0A0000              	call malloc
 26498 0001022A 50                      	push rax
 26499 0001022B BF08000000              	mov rdi, 8 * 1	; extended env
 26500 00010230 E8E10A0000              	call malloc
 26501 00010235 488B7D10                	mov rdi, ENV
 26502 00010239 BE00000000              	mov rsi, 0
 26503 0001023E BA01000000              	mov rdx, 1
 26504                                  .L_lambda_simple_env_loop_0099:	; ext_env[i + 1] <-- env[i]
 26505 00010243 4883FE00                	cmp rsi, 0
 26506 00010247 7410                    	je .L_lambda_simple_env_end_0099
 26507 00010249 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26508 0001024D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26509 00010251 48FFC6                  	inc rsi
 26510 00010254 48FFC2                  	inc rdx
 26511 00010257 EBEA                    	jmp .L_lambda_simple_env_loop_0099
 26512                                  .L_lambda_simple_env_end_0099:
 26513 00010259 5B                      	pop rbx
 26514 0001025A BE00000000              	mov rsi, 0
 26515                                  .L_lambda_simple_params_loop_0099:	; copy params
 26516 0001025F 4883FE00                	cmp rsi, 0
 26517 00010263 740E                    	je .L_lambda_simple_params_end_0099
 26518 00010265 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26519 0001026A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26520 0001026E 48FFC6                  	inc rsi
 26521 00010271 EBEC                    	jmp .L_lambda_simple_params_loop_0099
 26522                                  .L_lambda_simple_params_end_0099:
 26523 00010273 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26524 00010276 4889C3                  	mov rbx, rax
 26525 00010279 58                      	pop rax
 26526 0001027A C60005                  	mov byte [rax], T_closure
 26527 0001027D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26528 00010281 48C74009[8E020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0099
 26529 00010289 E99F000000              	jmp .L_lambda_simple_end_0099
 26530                                  .L_lambda_simple_code_0099:	; lambda-simple body
 26531 0001028E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26532 00010294 740B                    	je .L_lambda_simple_arity_check_ok_0147
 26533 00010296 FF742410                	push qword [rsp + 8 * 2]
 26534 0001029A 6A01                    	push 1
 26535 0001029C E92E0A0000              	jmp L_error_incorrect_arity_simple
 26536                                  .L_lambda_simple_arity_check_ok_0147:
 26537 000102A1 C8000000                	enter 0, 0
 26538 000102A5 488B4520                mov rax, qword [rbp + 32]
 26539 000102A9 50                      	push rax
 26540 000102AA 6A01                    	push 1
 26541 000102AC 488B0425[68040000]      	mov rax, qword [free_var_141]
 26542 000102B4 803805                  	cmp byte [rax], T_closure 
 26543 000102B7 0F85E1190000                    jne L_code_ptr_error
 26544                                  
 26545 000102BD 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26546                                  
 26547 000102C1 53                              push rbx
 26548                                  
 26549 000102C2 FF5009                          call SOB_CLOSURE_CODE(rax)
 26550                                  
 26551 000102C5 50                              	push rax
 26552 000102C6 6A01                    	push 1
 26553 000102C8 488B0425[B0020000]      	mov rax, qword [free_var_86]
 26554                                  .L_lambda_simple_arity_check_ok_0148:
 26555 000102D0 803805                  	cmp byte [rax], T_closure
 26556                                  
 26557 000102D3 0F85C5190000                    jne L_code_ptr_error                      ; rax <- proc
 26558                                  
 26559                                  
 26560 000102D9 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26561                                  
 26562 000102DD 53                              push rbx                                  ; env pushed
 26563                                  
 26564 000102DE FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26565                                  
 26566                                  
 26567 000102E1 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26568                                  
 26569                                          
 26570                                          
 26571 000102E4 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26572                                  
 26573 000102E8 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26574                                  
 26575                                  
 26576 000102ED 4D89CA                          mov r10, r9
 26577 000102F0 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 26578                                  
 26579                                                                                         
 26580 000102F4 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26581 000102F7 4983C404                        add r12, 4
 26582                                  
 26583 000102FB 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26584                                  .L_tc_recycle_frame_loop_00af:
 26585 00010301 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 26586                                  
 26587 00010305 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26588                                  
 26589                                  
 26590                                  
 26591 0001030A 41BE00000000                    mov r14, 0                                ; clean box
 26592                                  
 26593                                  
 26594                                                                  
 26595 00010310 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26596                                  
 26597 00010314 4983C4FF                        add r12, -1 
 26598                                  
 26599 00010318 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26600 0001031C 75E3                    	jne .L_tc_recycle_frame_loop_00af
 26601                                  .L_tc_recycle_frame_done_00af:
 26602 0001031E 5D                      	pop rbp                                  ; restore the old rbp
 26603                                  
 26604 0001031F 488B4D00                        mov rcx, qword [rbp]
 26605 00010323 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26606                                            ; rbx <- code(proc)
 26607                                  
 26608 00010327 FFE3                            jmp rbx
 26609 00010329 C9                      	leave
 26610 0001032A C21800                  	ret 8 * (2 + 1)
 26611                                  .L_lambda_simple_end_0099:	; new closure is in rax
 26612 0001032D 48890425[70040000]      	mov qword [free_var_142], rax
 26613 00010335 48B8-                   	mov rax, sob_void
 26613 00010337 [0000000000000000] 
 26614                                  
 26615 0001033F 4889C7                  	mov rdi, rax
 26616 00010342 E8E0090000              	call print_sexpr_if_not_void
 26617                                  
 26618 00010347 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26619 0001034C E8C5090000              	call malloc
 26620 00010351 50                      	push rax
 26621 00010352 BF00000000              	mov rdi, 8 * 0	; new rib
 26622 00010357 E8BA090000              	call malloc
 26623 0001035C 50                      	push rax
 26624 0001035D BF08000000              	mov rdi, 8 * 1	; extended env
 26625 00010362 E8AF090000              	call malloc
 26626 00010367 488B7D10                	mov rdi, ENV
 26627 0001036B BE00000000              	mov rsi, 0
 26628 00010370 BA01000000              	mov rdx, 1
 26629                                  .L_lambda_simple_env_loop_009a:	; ext_env[i + 1] <-- env[i]
 26630 00010375 4883FE00                	cmp rsi, 0
 26631 00010379 7410                    	je .L_lambda_simple_env_end_009a
 26632 0001037B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26633 0001037F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26634 00010383 48FFC6                  	inc rsi
 26635 00010386 48FFC2                  	inc rdx
 26636 00010389 EBEA                    	jmp .L_lambda_simple_env_loop_009a
 26637                                  .L_lambda_simple_env_end_009a:
 26638 0001038B 5B                      	pop rbx
 26639 0001038C BE00000000              	mov rsi, 0
 26640                                  .L_lambda_simple_params_loop_009a:	; copy params
 26641 00010391 4883FE00                	cmp rsi, 0
 26642 00010395 740E                    	je .L_lambda_simple_params_end_009a
 26643 00010397 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26644 0001039C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26645 000103A0 48FFC6                  	inc rsi
 26646 000103A3 EBEC                    	jmp .L_lambda_simple_params_loop_009a
 26647                                  .L_lambda_simple_params_end_009a:
 26648 000103A5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26649 000103A8 4889C3                  	mov rbx, rax
 26650 000103AB 58                      	pop rax
 26651 000103AC C60005                  	mov byte [rax], T_closure
 26652 000103AF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26653 000103B3 48C74009[C0030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009a
 26654 000103BB E9B1000000              	jmp .L_lambda_simple_end_009a
 26655                                  .L_lambda_simple_code_009a:	; lambda-simple body
 26656 000103C0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26657 000103C6 740B                    	je .L_lambda_simple_arity_check_ok_0149
 26658 000103C8 FF742410                	push qword [rsp + 8 * 2]
 26659 000103CC 6A01                    	push 1
 26660 000103CE E9FC080000              	jmp L_error_incorrect_arity_simple
 26661                                  .L_lambda_simple_arity_check_ok_0149:
 26662 000103D3 C8000000                	enter 0, 0
 26663 000103D7 488B4520                mov rax, qword [rbp + 32]
 26664 000103DB 50                      	push rax
 26665 000103DC 6A01                    	push 1
 26666 000103DE 488B0425[60040000]      	mov rax, qword [free_var_140]
 26667 000103E6 803805                  	cmp byte [rax], T_closure 
 26668 000103E9 0F85AF180000                    jne L_code_ptr_error
 26669                                  
 26670 000103EF 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26671                                  
 26672 000103F3 53                              push rbx
 26673                                  
 26674 000103F4 FF5009                          call SOB_CLOSURE_CODE(rax)
 26675                                  
 26676 000103F7 483D[02000000]                  	cmp rax, sob_boolean_false
 26677 000103FD 746A                    	je .L_if_else_0053
 26678 000103FF 488B4520                mov rax, qword [rbp + 32]
 26679 00010403 50                      	push rax
 26680 00010404 6A01                    	push 1
 26681 00010406 488B0425[10030000]      	mov rax, qword [free_var_98]
 26682                                  .L_lambda_simple_arity_check_ok_014a:
 26683 0001040E 803805                  	cmp byte [rax], T_closure
 26684                                  
 26685 00010411 0F8587180000                    jne L_code_ptr_error                      ; rax <- proc
 26686                                  
 26687                                  
 26688 00010417 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26689                                  
 26690 0001041B 53                              push rbx                                  ; env pushed
 26691                                  
 26692 0001041C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26693                                  
 26694                                  
 26695 0001041F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26696                                  
 26697                                          
 26698                                          
 26699 00010422 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26700                                  
 26701 00010426 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26702                                  
 26703                                  
 26704 0001042B 4D89CA                          mov r10, r9
 26705 0001042E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 26706                                  
 26707                                                                                         
 26708 00010432 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26709 00010435 4983C404                        add r12, 4
 26710                                  
 26711 00010439 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26712                                  .L_tc_recycle_frame_loop_00b0:
 26713 0001043F 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 26714                                  
 26715 00010443 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26716                                  
 26717                                  
 26718                                  
 26719 00010448 41BE00000000                    mov r14, 0                                ; clean box
 26720                                  
 26721                                  
 26722                                                                  
 26723 0001044E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26724                                  
 26725 00010452 4983C4FF                        add r12, -1 
 26726                                  
 26727 00010456 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26728 0001045A 75E3                    	jne .L_tc_recycle_frame_loop_00b0
 26729                                  .L_tc_recycle_frame_done_00b0:
 26730 0001045C 5D                      	pop rbp                                  ; restore the old rbp
 26731                                  
 26732 0001045D 488B4D00                        mov rcx, qword [rbp]
 26733 00010461 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26734                                            ; rbx <- code(proc)
 26735                                  
 26736 00010465 FFE3                            jmp rbx
 26737 00010467 EB04                    	jmp .L_if_end_0053
 26738                                  	.L_if_else_0053:
 26739 00010469 488B4520                	mov rax, qword [rbp + 32]
 26740                                  	.L_if_end_0053:
 26741 0001046D C9                      	leave
 26742 0001046E C21800                  	ret 8 * (2 + 1)
 26743                                  .L_lambda_simple_end_009a:	; new closure is in rax
 26744 00010471 48890425[78040000]      	mov qword [free_var_143], rax
 26745 00010479 48B8-                   	mov rax, sob_void
 26745 0001047B [0000000000000000] 
 26746                                  
 26747 00010483 4889C7                  	mov rdi, rax
 26748 00010486 E89C080000              	call print_sexpr_if_not_void
 26749                                  
 26750 0001048B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26751 00010490 E881080000              	call malloc
 26752 00010495 50                      	push rax
 26753 00010496 BF00000000              	mov rdi, 8 * 0	; new rib
 26754 0001049B E876080000              	call malloc
 26755 000104A0 50                      	push rax
 26756 000104A1 BF08000000              	mov rdi, 8 * 1	; extended env
 26757 000104A6 E86B080000              	call malloc
 26758 000104AB 488B7D10                	mov rdi, ENV
 26759 000104AF BE00000000              	mov rsi, 0
 26760 000104B4 BA01000000              	mov rdx, 1
 26761                                  .L_lambda_simple_env_loop_009b:	; ext_env[i + 1] <-- env[i]
 26762 000104B9 4883FE00                	cmp rsi, 0
 26763 000104BD 7410                    	je .L_lambda_simple_env_end_009b
 26764 000104BF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26765 000104C3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26766 000104C7 48FFC6                  	inc rsi
 26767 000104CA 48FFC2                  	inc rdx
 26768 000104CD EBEA                    	jmp .L_lambda_simple_env_loop_009b
 26769                                  .L_lambda_simple_env_end_009b:
 26770 000104CF 5B                      	pop rbx
 26771 000104D0 BE00000000              	mov rsi, 0
 26772                                  .L_lambda_simple_params_loop_009b:	; copy params
 26773 000104D5 4883FE00                	cmp rsi, 0
 26774 000104D9 740E                    	je .L_lambda_simple_params_end_009b
 26775 000104DB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26776 000104E0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26777 000104E4 48FFC6                  	inc rsi
 26778 000104E7 EBEC                    	jmp .L_lambda_simple_params_loop_009b
 26779                                  .L_lambda_simple_params_end_009b:
 26780 000104E9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26781 000104EC 4889C3                  	mov rbx, rax
 26782 000104EF 58                      	pop rax
 26783 000104F0 C60005                  	mov byte [rax], T_closure
 26784 000104F3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26785 000104F7 48C74009[04050100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009b
 26786 000104FF E9C6040000              	jmp .L_lambda_simple_end_009b
 26787                                  .L_lambda_simple_code_009b:	; lambda-simple body
 26788 00010504 48837C241002            	cmp qword [rsp + 8 * 2], 2
 26789 0001050A 740B                    	je .L_lambda_simple_arity_check_ok_014b
 26790 0001050C FF742410                	push qword [rsp + 8 * 2]
 26791 00010510 6A02                    	push 2
 26792 00010512 E9B8070000              	jmp L_error_incorrect_arity_simple
 26793                                  .L_lambda_simple_arity_check_ok_014b:
 26794 00010517 C8000000                	enter 0, 0
 26795 0001051B 488B4520                mov rax, qword [rbp + 32]
 26796 0001051F 50                      	push rax
 26797 00010520 6A01                    	push 1
 26798 00010522 488B0425[08000000]      	mov rax, qword [free_var_1]
 26799 0001052A 803805                  	cmp byte [rax], T_closure 
 26800 0001052D 0F856B170000                    jne L_code_ptr_error
 26801                                  
 26802 00010533 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26803                                  
 26804 00010537 53                              push rbx
 26805                                  
 26806 00010538 FF5009                          call SOB_CLOSURE_CODE(rax)
 26807                                  
 26808 0001053B 483D[02000000]                  	cmp rax, sob_boolean_false
 26809 00010541 7422                    	je .L_if_else_005c
 26810 00010543 488B4528                mov rax, qword [rbp + 40]
 26811 00010547 50                      	push rax
 26812 00010548 6A01                    	push 1
 26813 0001054A 488B0425[08000000]      	mov rax, qword [free_var_1]
 26814 00010552 803805                  	cmp byte [rax], T_closure 
 26815 00010555 0F8543170000                    jne L_code_ptr_error
 26816                                  
 26817 0001055B 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26818                                  
 26819 0001055F 53                              push rbx
 26820                                  
 26821 00010560 FF5009                          call SOB_CLOSURE_CODE(rax)
 26822                                  
 26823 00010563 EB0A                            	jmp .L_if_end_005c
 26824                                  	.L_if_else_005c:
 26825 00010565 48B8-                   		mov rax, qword (L_constants + 2)
 26825 00010567 [0200000000000000] 
 26826                                  	.L_if_end_005c:
 26827 0001056F 483D[02000000]          	cmp rax, sob_boolean_false
 26828 00010575 0F841F010000            	je .L_if_else_0054
 26829 0001057B 488B4528                mov rax, qword [rbp + 40]
 26830 0001057F 50                      	push rax
 26831 00010580 6A01                    	push 1
 26832 00010582 488B0425[80000000]      	mov rax, qword [free_var_16]
 26833 0001058A 803805                  	cmp byte [rax], T_closure 
 26834 0001058D 0F850B170000                    jne L_code_ptr_error
 26835                                  
 26836 00010593 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26837                                  
 26838 00010597 53                              push rbx
 26839                                  
 26840 00010598 FF5009                          call SOB_CLOSURE_CODE(rax)
 26841                                  
 26842 0001059B 50                              	push rax
 26843 0001059C 488B4520                mov rax, qword [rbp + 32]
 26844 000105A0 50                      	push rax
 26845 000105A1 6A01                    	push 1
 26846 000105A3 488B0425[80000000]      	mov rax, qword [free_var_16]
 26847 000105AB 803805                  	cmp byte [rax], T_closure 
 26848 000105AE 0F85EA160000                    jne L_code_ptr_error
 26849                                  
 26850 000105B4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26851                                  
 26852 000105B8 53                              push rbx
 26853                                  
 26854 000105B9 FF5009                          call SOB_CLOSURE_CODE(rax)
 26855                                  
 26856 000105BC 50                              	push rax
 26857 000105BD 6A02                    	push 2
 26858 000105BF 488B0425[80040000]      	mov rax, qword [free_var_144]
 26859 000105C7 803805                  	cmp byte [rax], T_closure 
 26860 000105CA 0F85CE160000                    jne L_code_ptr_error
 26861                                  
 26862 000105D0 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26863                                  
 26864 000105D4 53                              push rbx
 26865                                  
 26866 000105D5 FF5009                          call SOB_CLOSURE_CODE(rax)
 26867                                  
 26868 000105D8 483D[02000000]                  	cmp rax, sob_boolean_false
 26869 000105DE 0F84A7000000            	je .L_if_else_005b
 26870 000105E4 488B4528                mov rax, qword [rbp + 40]
 26871 000105E8 50                      	push rax
 26872 000105E9 6A01                    	push 1
 26873 000105EB 488B0425[88000000]      	mov rax, qword [free_var_17]
 26874 000105F3 803805                  	cmp byte [rax], T_closure 
 26875 000105F6 0F85A2160000                    jne L_code_ptr_error
 26876                                  
 26877 000105FC 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26878                                  
 26879 00010600 53                              push rbx
 26880                                  
 26881 00010601 FF5009                          call SOB_CLOSURE_CODE(rax)
 26882                                  
 26883 00010604 50                              	push rax
 26884 00010605 488B4520                mov rax, qword [rbp + 32]
 26885 00010609 50                      	push rax
 26886 0001060A 6A01                    	push 1
 26887 0001060C 488B0425[88000000]      	mov rax, qword [free_var_17]
 26888 00010614 803805                  	cmp byte [rax], T_closure 
 26889 00010617 0F8581160000                    jne L_code_ptr_error
 26890                                  
 26891 0001061D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26892                                  
 26893 00010621 53                              push rbx
 26894                                  
 26895 00010622 FF5009                          call SOB_CLOSURE_CODE(rax)
 26896                                  
 26897 00010625 50                              	push rax
 26898 00010626 6A02                    	push 2
 26899 00010628 488B0425[80040000]      	mov rax, qword [free_var_144]
 26900                                  .L_lambda_simple_arity_check_ok_014f:
 26901 00010630 803805                  	cmp byte [rax], T_closure
 26902                                  
 26903 00010633 0F8565160000                    jne L_code_ptr_error                      ; rax <- proc
 26904                                  
 26905                                  
 26906 00010639 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 26907                                  
 26908 0001063D 53                              push rbx                                  ; env pushed
 26909                                  
 26910 0001063E FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 26911                                  
 26912                                  
 26913 00010641 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 26914                                  
 26915                                          
 26916                                          
 26917 00010644 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 26918                                  
 26919 00010648 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 26920                                  
 26921                                  
 26922 0001064D 4D89CA                          mov r10, r9
 26923 00010650 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 26924                                  
 26925                                                                                         
 26926 00010654 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 26927 00010657 4983C404                        add r12, 4
 26928                                  
 26929 0001065B 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 26930                                  .L_tc_recycle_frame_loop_00b4:
 26931 00010661 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 26932                                  
 26933 00010665 4E8974E500                      mov [rbp + (r12 * 8)], r14
 26934                                  
 26935                                  
 26936                                  
 26937 0001066A 41BE00000000                    mov r14, 0                                ; clean box
 26938                                  
 26939                                  
 26940                                                                  
 26941 00010670 4983C2FF                        add r10, -1                               ; args_copied_counter--
 26942                                  
 26943 00010674 4983C4FF                        add r12, -1 
 26944                                  
 26945 00010678 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 26946 0001067C 75E3                    	jne .L_tc_recycle_frame_loop_00b4
 26947                                  .L_tc_recycle_frame_done_00b4:
 26948 0001067E 5D                      	pop rbp                                  ; restore the old rbp
 26949                                  
 26950 0001067F 488B4D00                        mov rcx, qword [rbp]
 26951 00010683 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 26952                                            ; rbx <- code(proc)
 26953                                  
 26954 00010687 FFE3                            jmp rbx
 26955 00010689 EB0A                    	jmp .L_if_end_005b
 26956                                  	.L_if_else_005b:
 26957 0001068B 48B8-                   		mov rax, qword (L_constants + 2)
 26957 0001068D [0200000000000000] 
 26958                                  	.L_if_end_005b:
 26959 00010695 E92C030000              	jmp .L_if_end_0054
 26960                                  	.L_if_else_0054:
 26961 0001069A 488B4520                	mov rax, qword [rbp + 32]
 26962 0001069E 50                      	push rax
 26963 0001069F 6A01                    	push 1
 26964 000106A1 488B0425[30000000]      	mov rax, qword [free_var_6]
 26965 000106A9 803805                  	cmp byte [rax], T_closure 
 26966 000106AC 0F85EC150000                    jne L_code_ptr_error
 26967                                  
 26968 000106B2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26969                                  
 26970 000106B6 53                              push rbx
 26971                                  
 26972 000106B7 FF5009                          call SOB_CLOSURE_CODE(rax)
 26973                                  
 26974 000106BA 483D[02000000]                  	cmp rax, sob_boolean_false
 26975 000106C0 0F8493000000            	je .L_if_else_0059
 26976 000106C6 488B4528                mov rax, qword [rbp + 40]
 26977 000106CA 50                      	push rax
 26978 000106CB 6A01                    	push 1
 26979 000106CD 488B0425[30000000]      	mov rax, qword [free_var_6]
 26980 000106D5 803805                  	cmp byte [rax], T_closure 
 26981 000106D8 0F85C0150000                    jne L_code_ptr_error
 26982                                  
 26983 000106DE 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26984                                  
 26985 000106E2 53                              push rbx
 26986                                  
 26987 000106E3 FF5009                          call SOB_CLOSURE_CODE(rax)
 26988                                  
 26989 000106E6 483D[02000000]                  	cmp rax, sob_boolean_false
 26990 000106EC 745F                    	je .L_if_else_005a
 26991 000106EE 488B4528                mov rax, qword [rbp + 40]
 26992 000106F2 50                      	push rax
 26993 000106F3 6A01                    	push 1
 26994 000106F5 488B0425[98000000]      	mov rax, qword [free_var_19]
 26995 000106FD 803805                  	cmp byte [rax], T_closure 
 26996 00010700 0F8598150000                    jne L_code_ptr_error
 26997                                  
 26998 00010706 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 26999                                  
 27000 0001070A 53                              push rbx
 27001                                  
 27002 0001070B FF5009                          call SOB_CLOSURE_CODE(rax)
 27003                                  
 27004 0001070E 50                              	push rax
 27005 0001070F 488B4520                mov rax, qword [rbp + 32]
 27006 00010713 50                      	push rax
 27007 00010714 6A01                    	push 1
 27008 00010716 488B0425[98000000]      	mov rax, qword [free_var_19]
 27009 0001071E 803805                  	cmp byte [rax], T_closure 
 27010 00010721 0F8577150000                    jne L_code_ptr_error
 27011                                  
 27012 00010727 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27013                                  
 27014 0001072B 53                              push rbx
 27015                                  
 27016 0001072C FF5009                          call SOB_CLOSURE_CODE(rax)
 27017                                  
 27018 0001072F 50                              	push rax
 27019 00010730 6A02                    	push 2
 27020 00010732 488B0425[50030000]      	mov rax, qword [free_var_106]
 27021 0001073A 803805                  	cmp byte [rax], T_closure 
 27022 0001073D 0F855B150000                    jne L_code_ptr_error
 27023                                  
 27024 00010743 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27025                                  
 27026 00010747 53                              push rbx
 27027                                  
 27028 00010748 FF5009                          call SOB_CLOSURE_CODE(rax)
 27029                                  
 27030 0001074B EB0A                            	jmp .L_if_end_005a
 27031                                  	.L_if_else_005a:
 27032 0001074D 48B8-                   		mov rax, qword (L_constants + 2)
 27032 0001074F [0200000000000000] 
 27033                                  	.L_if_end_005a:
 27034 00010757 EB0A                    	jmp .L_if_end_0059
 27035                                  	.L_if_else_0059:
 27036 00010759 48B8-                   		mov rax, qword (L_constants + 2)
 27036 0001075B [0200000000000000] 
 27037                                  	.L_if_end_0059:
 27038 00010763 483D[02000000]          	cmp rax, sob_boolean_false
 27039 00010769 0F84AA000000            	je .L_if_else_0055
 27040 0001076F 488B4528                mov rax, qword [rbp + 40]
 27041 00010773 50                      	push rax
 27042 00010774 6A01                    	push 1
 27043 00010776 488B0425[48040000]      	mov rax, qword [free_var_137]
 27044 0001077E 803805                  	cmp byte [rax], T_closure 
 27045 00010781 0F8517150000                    jne L_code_ptr_error
 27046                                  
 27047 00010787 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27048                                  
 27049 0001078B 53                              push rbx
 27050                                  
 27051 0001078C FF5009                          call SOB_CLOSURE_CODE(rax)
 27052                                  
 27053 0001078F 50                              	push rax
 27054 00010790 488B4520                mov rax, qword [rbp + 32]
 27055 00010794 50                      	push rax
 27056 00010795 6A01                    	push 1
 27057 00010797 488B0425[48040000]      	mov rax, qword [free_var_137]
 27058 0001079F 803805                  	cmp byte [rax], T_closure 
 27059 000107A2 0F85F6140000                    jne L_code_ptr_error
 27060                                  
 27061 000107A8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27062                                  
 27063 000107AC 53                              push rbx
 27064                                  
 27065 000107AD FF5009                          call SOB_CLOSURE_CODE(rax)
 27066                                  
 27067 000107B0 50                              	push rax
 27068 000107B1 6A02                    	push 2
 27069 000107B3 488B0425[80040000]      	mov rax, qword [free_var_144]
 27070                                  .L_lambda_simple_arity_check_ok_014e:
 27071 000107BB 803805                  	cmp byte [rax], T_closure
 27072                                  
 27073 000107BE 0F85DA140000                    jne L_code_ptr_error                      ; rax <- proc
 27074                                  
 27075                                  
 27076 000107C4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27077                                  
 27078 000107C8 53                              push rbx                                  ; env pushed
 27079                                  
 27080 000107C9 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27081                                  
 27082                                  
 27083 000107CC FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27084                                  
 27085                                          
 27086                                          
 27087 000107CF 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27088                                  
 27089 000107D3 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27090                                  
 27091                                  
 27092 000107D8 4D89CA                          mov r10, r9
 27093 000107DB 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 27094                                  
 27095                                                                                         
 27096 000107DF 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27097 000107E2 4983C404                        add r12, 4
 27098                                  
 27099 000107E6 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27100                                  .L_tc_recycle_frame_loop_00b3:
 27101 000107EC 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 27102                                  
 27103 000107F0 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27104                                  
 27105                                  
 27106                                  
 27107 000107F5 41BE00000000                    mov r14, 0                                ; clean box
 27108                                  
 27109                                  
 27110                                                                  
 27111 000107FB 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27112                                  
 27113 000107FF 4983C4FF                        add r12, -1 
 27114                                  
 27115 00010803 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27116 00010807 75E3                    	jne .L_tc_recycle_frame_loop_00b3
 27117                                  .L_tc_recycle_frame_done_00b3:
 27118 00010809 5D                      	pop rbp                                  ; restore the old rbp
 27119                                  
 27120 0001080A 488B4D00                        mov rcx, qword [rbp]
 27121 0001080E 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27122                                            ; rbx <- code(proc)
 27123                                  
 27124 00010812 FFE3                            jmp rbx
 27125 00010814 E9AD010000              	jmp .L_if_end_0055
 27126                                  	.L_if_else_0055:
 27127 00010819 488B4520                	mov rax, qword [rbp + 32]
 27128 0001081D 50                      	push rax
 27129 0001081E 6A01                    	push 1
 27130 00010820 488B0425[20000000]      	mov rax, qword [free_var_4]
 27131 00010828 803805                  	cmp byte [rax], T_closure 
 27132 0001082B 0F856D140000                    jne L_code_ptr_error
 27133                                  
 27134 00010831 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27135                                  
 27136 00010835 53                              push rbx
 27137                                  
 27138 00010836 FF5009                          call SOB_CLOSURE_CODE(rax)
 27139                                  
 27140 00010839 483D[02000000]                  	cmp rax, sob_boolean_false
 27141 0001083F 0F8493000000            	je .L_if_else_0057
 27142 00010845 488B4528                mov rax, qword [rbp + 40]
 27143 00010849 50                      	push rax
 27144 0001084A 6A01                    	push 1
 27145 0001084C 488B0425[20000000]      	mov rax, qword [free_var_4]
 27146 00010854 803805                  	cmp byte [rax], T_closure 
 27147 00010857 0F8541140000                    jne L_code_ptr_error
 27148                                  
 27149 0001085D 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27150                                  
 27151 00010861 53                              push rbx
 27152                                  
 27153 00010862 FF5009                          call SOB_CLOSURE_CODE(rax)
 27154                                  
 27155 00010865 483D[02000000]                  	cmp rax, sob_boolean_false
 27156 0001086B 745F                    	je .L_if_else_0058
 27157 0001086D 488B4528                mov rax, qword [rbp + 40]
 27158 00010871 50                      	push rax
 27159 00010872 6A01                    	push 1
 27160 00010874 488B0425[90000000]      	mov rax, qword [free_var_18]
 27161 0001087C 803805                  	cmp byte [rax], T_closure 
 27162 0001087F 0F8519140000                    jne L_code_ptr_error
 27163                                  
 27164 00010885 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27165                                  
 27166 00010889 53                              push rbx
 27167                                  
 27168 0001088A FF5009                          call SOB_CLOSURE_CODE(rax)
 27169                                  
 27170 0001088D 50                              	push rax
 27171 0001088E 488B4520                mov rax, qword [rbp + 32]
 27172 00010892 50                      	push rax
 27173 00010893 6A01                    	push 1
 27174 00010895 488B0425[90000000]      	mov rax, qword [free_var_18]
 27175 0001089D 803805                  	cmp byte [rax], T_closure 
 27176 000108A0 0F85F8130000                    jne L_code_ptr_error
 27177                                  
 27178 000108A6 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27179                                  
 27180 000108AA 53                              push rbx
 27181                                  
 27182 000108AB FF5009                          call SOB_CLOSURE_CODE(rax)
 27183                                  
 27184 000108AE 50                              	push rax
 27185 000108AF 6A02                    	push 2
 27186 000108B1 488B0425[50030000]      	mov rax, qword [free_var_106]
 27187 000108B9 803805                  	cmp byte [rax], T_closure 
 27188 000108BC 0F85DC130000                    jne L_code_ptr_error
 27189                                  
 27190 000108C2 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27191                                  
 27192 000108C6 53                              push rbx
 27193                                  
 27194 000108C7 FF5009                          call SOB_CLOSURE_CODE(rax)
 27195                                  
 27196 000108CA EB0A                            	jmp .L_if_end_0058
 27197                                  	.L_if_else_0058:
 27198 000108CC 48B8-                   		mov rax, qword (L_constants + 2)
 27198 000108CE [0200000000000000] 
 27199                                  	.L_if_end_0058:
 27200 000108D6 EB0A                    	jmp .L_if_end_0057
 27201                                  	.L_if_else_0057:
 27202 000108D8 48B8-                   		mov rax, qword (L_constants + 2)
 27202 000108DA [0200000000000000] 
 27203                                  	.L_if_end_0057:
 27204 000108E2 483D[02000000]          	cmp rax, sob_boolean_false
 27205 000108E8 746F                    	je .L_if_else_0056
 27206 000108EA 488B4528                mov rax, qword [rbp + 40]
 27207 000108EE 50                      	push rax
 27208 000108EF 488B4520                mov rax, qword [rbp + 32]
 27209 000108F3 50                      	push rax
 27210 000108F4 6A02                    	push 2
 27211 000108F6 488B0425[F0030000]      	mov rax, qword [free_var_126]
 27212                                  .L_lambda_simple_arity_check_ok_014d:
 27213 000108FE 803805                  	cmp byte [rax], T_closure
 27214                                  
 27215 00010901 0F8597130000                    jne L_code_ptr_error                      ; rax <- proc
 27216                                  
 27217                                  
 27218 00010907 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27219                                  
 27220 0001090B 53                              push rbx                                  ; env pushed
 27221                                  
 27222 0001090C FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27223                                  
 27224                                  
 27225 0001090F FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27226                                  
 27227                                          
 27228                                          
 27229 00010912 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27230                                  
 27231 00010916 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27232                                  
 27233                                  
 27234 0001091B 4D89CA                          mov r10, r9
 27235 0001091E 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 27236                                  
 27237                                                                                         
 27238 00010922 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27239 00010925 4983C404                        add r12, 4
 27240                                  
 27241 00010929 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27242                                  .L_tc_recycle_frame_loop_00b2:
 27243 0001092F 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 27244                                  
 27245 00010933 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27246                                  
 27247                                  
 27248                                  
 27249 00010938 41BE00000000                    mov r14, 0                                ; clean box
 27250                                  
 27251                                  
 27252                                                                  
 27253 0001093E 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27254                                  
 27255 00010942 4983C4FF                        add r12, -1 
 27256                                  
 27257 00010946 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27258 0001094A 75E3                    	jne .L_tc_recycle_frame_loop_00b2
 27259                                  .L_tc_recycle_frame_done_00b2:
 27260 0001094C 5D                      	pop rbp                                  ; restore the old rbp
 27261                                  
 27262 0001094D 488B4D00                        mov rcx, qword [rbp]
 27263 00010951 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27264                                            ; rbx <- code(proc)
 27265                                  
 27266 00010955 FFE3                            jmp rbx
 27267 00010957 EB6D                    	jmp .L_if_end_0056
 27268                                  	.L_if_else_0056:
 27269 00010959 488B4528                	mov rax, qword [rbp + 40]
 27270 0001095D 50                      	push rax
 27271 0001095E 488B4520                mov rax, qword [rbp + 32]
 27272 00010962 50                      	push rax
 27273 00010963 6A02                    	push 2
 27274 00010965 488B0425[B8010000]      	mov rax, qword [free_var_55]
 27275                                  .L_lambda_simple_arity_check_ok_014c:
 27276 0001096D 803805                  	cmp byte [rax], T_closure
 27277                                  
 27278 00010970 0F8528130000                    jne L_code_ptr_error                      ; rax <- proc
 27279                                  
 27280                                  
 27281 00010976 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27282                                  
 27283 0001097A 53                              push rbx                                  ; env pushed
 27284                                  
 27285 0001097B FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27286                                  
 27287                                  
 27288 0001097E FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27289                                  
 27290                                          
 27291                                          
 27292 00010981 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27293                                  
 27294 00010985 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27295                                  
 27296                                  
 27297 0001098A 4D89CA                          mov r10, r9
 27298 0001098D 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 27299                                  
 27300                                                                                         
 27301 00010991 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27302 00010994 4983C404                        add r12, 4
 27303                                  
 27304 00010998 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27305                                  .L_tc_recycle_frame_loop_00b1:
 27306 0001099E 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 27307                                  
 27308 000109A2 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27309                                  
 27310                                  
 27311                                  
 27312 000109A7 41BE00000000                    mov r14, 0                                ; clean box
 27313                                  
 27314                                  
 27315                                                                  
 27316 000109AD 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27317                                  
 27318 000109B1 4983C4FF                        add r12, -1 
 27319                                  
 27320 000109B5 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27321 000109B9 75E3                    	jne .L_tc_recycle_frame_loop_00b1
 27322                                  .L_tc_recycle_frame_done_00b1:
 27323 000109BB 5D                      	pop rbp                                  ; restore the old rbp
 27324                                  
 27325 000109BC 488B4D00                        mov rcx, qword [rbp]
 27326 000109C0 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27327                                            ; rbx <- code(proc)
 27328                                  
 27329 000109C4 FFE3                            jmp rbx
 27330                                  	.L_if_end_0056:
 27331                                  	.L_if_end_0055:
 27332                                  	.L_if_end_0054:
 27333 000109C6 C9                      	leave
 27334 000109C7 C22000                  	ret 8 * (2 + 2)
 27335                                  .L_lambda_simple_end_009b:	; new closure is in rax
 27336 000109CA 48890425[80040000]      	mov qword [free_var_144], rax
 27337 000109D2 48B8-                   	mov rax, sob_void
 27337 000109D4 [0000000000000000] 
 27338                                  
 27339 000109DC 4889C7                  	mov rdi, rax
 27340 000109DF E843030000              	call print_sexpr_if_not_void
 27341                                  
 27342 000109E4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27343 000109E9 E828030000              	call malloc
 27344 000109EE 50                      	push rax
 27345 000109EF BF00000000              	mov rdi, 8 * 0	; new rib
 27346 000109F4 E81D030000              	call malloc
 27347 000109F9 50                      	push rax
 27348 000109FA BF08000000              	mov rdi, 8 * 1	; extended env
 27349 000109FF E812030000              	call malloc
 27350 00010A04 488B7D10                	mov rdi, ENV
 27351 00010A08 BE00000000              	mov rsi, 0
 27352 00010A0D BA01000000              	mov rdx, 1
 27353                                  .L_lambda_simple_env_loop_009c:	; ext_env[i + 1] <-- env[i]
 27354 00010A12 4883FE00                	cmp rsi, 0
 27355 00010A16 7410                    	je .L_lambda_simple_env_end_009c
 27356 00010A18 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27357 00010A1C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27358 00010A20 48FFC6                  	inc rsi
 27359 00010A23 48FFC2                  	inc rdx
 27360 00010A26 EBEA                    	jmp .L_lambda_simple_env_loop_009c
 27361                                  .L_lambda_simple_env_end_009c:
 27362 00010A28 5B                      	pop rbx
 27363 00010A29 BE00000000              	mov rsi, 0
 27364                                  .L_lambda_simple_params_loop_009c:	; copy params
 27365 00010A2E 4883FE00                	cmp rsi, 0
 27366 00010A32 740E                    	je .L_lambda_simple_params_end_009c
 27367 00010A34 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27368 00010A39 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27369 00010A3D 48FFC6                  	inc rsi
 27370 00010A40 EBEC                    	jmp .L_lambda_simple_params_loop_009c
 27371                                  .L_lambda_simple_params_end_009c:
 27372 00010A42 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27373 00010A45 4889C3                  	mov rbx, rax
 27374 00010A48 58                      	pop rax
 27375 00010A49 C60005                  	mov byte [rax], T_closure
 27376 00010A4C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27377 00010A50 48C74009[5D0A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009c
 27378 00010A58 E991010000              	jmp .L_lambda_simple_end_009c
 27379                                  .L_lambda_simple_code_009c:	; lambda-simple body
 27380 00010A5D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 27381 00010A63 740B                    	je .L_lambda_simple_arity_check_ok_0150
 27382 00010A65 FF742410                	push qword [rsp + 8 * 2]
 27383 00010A69 6A02                    	push 2
 27384 00010A6B E95F020000              	jmp L_error_incorrect_arity_simple
 27385                                  .L_lambda_simple_arity_check_ok_0150:
 27386 00010A70 C8000000                	enter 0, 0
 27387 00010A74 488B4528                mov rax, qword [rbp + 40]
 27388 00010A78 50                      	push rax
 27389 00010A79 6A01                    	push 1
 27390 00010A7B 488B0425[00000000]      	mov rax, qword [free_var_0]
 27391 00010A83 803805                  	cmp byte [rax], T_closure 
 27392 00010A86 0F8512120000                    jne L_code_ptr_error
 27393                                  
 27394 00010A8C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27395                                  
 27396 00010A90 53                              push rbx
 27397                                  
 27398 00010A91 FF5009                          call SOB_CLOSURE_CODE(rax)
 27399                                  
 27400 00010A94 483D[02000000]                  	cmp rax, sob_boolean_false
 27401 00010A9A 740F                    	je .L_if_else_005d
 27402 00010A9C 48B8-                   	mov rax, qword (L_constants + 2)
 27402 00010A9E [0200000000000000] 
 27403 00010AA6 E93F010000              	jmp .L_if_end_005d
 27404                                  	.L_if_else_005d:
 27405 00010AAB 488B4520                	mov rax, qword [rbp + 32]
 27406 00010AAF 50                      	push rax
 27407 00010AB0 488B4528                mov rax, qword [rbp + 40]
 27408 00010AB4 50                      	push rax
 27409 00010AB5 6A01                    	push 1
 27410 00010AB7 488B0425[C0010000]      	mov rax, qword [free_var_56]
 27411 00010ABF 803805                  	cmp byte [rax], T_closure 
 27412 00010AC2 0F85D6110000                    jne L_code_ptr_error
 27413                                  
 27414 00010AC8 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27415                                  
 27416 00010ACC 53                              push rbx
 27417                                  
 27418 00010ACD FF5009                          call SOB_CLOSURE_CODE(rax)
 27419                                  
 27420 00010AD0 50                              	push rax
 27421 00010AD1 6A02                    	push 2
 27422 00010AD3 488B0425[B8010000]      	mov rax, qword [free_var_55]
 27423 00010ADB 803805                  	cmp byte [rax], T_closure 
 27424 00010ADE 0F85BA110000                    jne L_code_ptr_error
 27425                                  
 27426 00010AE4 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27427                                  
 27428 00010AE8 53                              push rbx
 27429                                  
 27430 00010AE9 FF5009                          call SOB_CLOSURE_CODE(rax)
 27431                                  
 27432 00010AEC 483D[02000000]                  	cmp rax, sob_boolean_false
 27433 00010AF2 746D                    	je .L_if_else_005e
 27434 00010AF4 488B4528                mov rax, qword [rbp + 40]
 27435 00010AF8 50                      	push rax
 27436 00010AF9 6A01                    	push 1
 27437 00010AFB 488B0425[80000000]      	mov rax, qword [free_var_16]
 27438                                  .L_lambda_simple_arity_check_ok_0152:
 27439 00010B03 803805                  	cmp byte [rax], T_closure
 27440                                  
 27441 00010B06 0F8592110000                    jne L_code_ptr_error                      ; rax <- proc
 27442                                  
 27443                                  
 27444 00010B0C 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27445                                  
 27446 00010B10 53                              push rbx                                  ; env pushed
 27447                                  
 27448 00010B11 FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27449                                  
 27450                                  
 27451 00010B14 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27452                                  
 27453                                          
 27454                                          
 27455 00010B17 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27456                                  
 27457 00010B1B 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27458                                  
 27459                                  
 27460 00010B20 4D89CA                          mov r10, r9
 27461 00010B23 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 27462                                  
 27463                                                                                         
 27464 00010B27 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27465 00010B2A 4983C404                        add r12, 4
 27466                                  
 27467 00010B2E 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27468                                  .L_tc_recycle_frame_loop_00b6:
 27469 00010B34 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 27470                                  
 27471 00010B38 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27472                                  
 27473                                  
 27474                                  
 27475 00010B3D 41BE00000000                    mov r14, 0                                ; clean box
 27476                                  
 27477                                  
 27478                                                                  
 27479 00010B43 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27480                                  
 27481 00010B47 4983C4FF                        add r12, -1 
 27482                                  
 27483 00010B4B 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27484 00010B4F 75E3                    	jne .L_tc_recycle_frame_loop_00b6
 27485                                  .L_tc_recycle_frame_done_00b6:
 27486 00010B51 5D                      	pop rbp                                  ; restore the old rbp
 27487                                  
 27488 00010B52 488B4D00                        mov rcx, qword [rbp]
 27489 00010B56 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27490                                            ; rbx <- code(proc)
 27491                                  
 27492 00010B5A FFE3                            jmp rbx
 27493 00010B5C E989000000              	jmp .L_if_end_005e
 27494                                  	.L_if_else_005e:
 27495 00010B61 488B4528                	mov rax, qword [rbp + 40]
 27496 00010B65 50                      	push rax
 27497 00010B66 6A01                    	push 1
 27498 00010B68 488B0425[88000000]      	mov rax, qword [free_var_17]
 27499 00010B70 803805                  	cmp byte [rax], T_closure 
 27500 00010B73 0F8525110000                    jne L_code_ptr_error
 27501                                  
 27502 00010B79 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27503                                  
 27504 00010B7D 53                              push rbx
 27505                                  
 27506 00010B7E FF5009                          call SOB_CLOSURE_CODE(rax)
 27507                                  
 27508 00010B81 50                              	push rax
 27509 00010B82 488B4520                mov rax, qword [rbp + 32]
 27510 00010B86 50                      	push rax
 27511 00010B87 6A02                    	push 2
 27512 00010B89 488B0425[88040000]      	mov rax, qword [free_var_145]
 27513                                  .L_lambda_simple_arity_check_ok_0151:
 27514 00010B91 803805                  	cmp byte [rax], T_closure
 27515                                  
 27516 00010B94 0F8504110000                    jne L_code_ptr_error                      ; rax <- proc
 27517                                  
 27518                                  
 27519 00010B9A 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)             ; rbx <- env(proc)
 27520                                  
 27521 00010B9E 53                              push rbx                                  ; env pushed
 27522                                  
 27523 00010B9F FF7508                          push qword [ rbp + 8 * 1]                 ; old ret addr pushed
 27524                                  
 27525                                  
 27526 00010BA2 FF7500                          push qword [ rbp ]                        ; the same old rbp pushed
 27527                                  
 27528                                          
 27529                                          
 27530 00010BA5 4C8B4518                        mov r8, [ rbp + 3 * 8]                    ; r8 <- old_code_num_of_args_n
 27531                                  
 27532 00010BA9 4C8B4C2418                      mov r9, [ rsp + 3 * 8 ]                   ; r9 <- new_code_num_of_args_m
 27533                                  
 27534                                  
 27535 00010BAE 4D89CA                          mov r10, r9
 27536 00010BB1 4983C204                        add r10, 4                                ; total elemnts left to copy: num_of_args + 4 (num_of_args, lexenv retf, rbp in f)
 27537                                  
 27538                                                                                         
 27539 00010BB5 4D89C4                          mov r12, r8                               ; r12 <- index in new code
 27540 00010BB8 4983C404                        add r12, 4
 27541                                  
 27542 00010BBC 41BE00000000                    mov r14, 0                                ; r14 <- 0 : init box: curr_arg_to_copy
 27543                                  .L_tc_recycle_frame_loop_00b5:
 27544 00010BC2 4E8B34D4                	mov r14, [rsp + (r10 * 8)]               ; r14 <- i_element_old_code
 27545                                  
 27546 00010BC6 4E8974E500                      mov [rbp + (r12 * 8)], r14
 27547                                  
 27548                                  
 27549                                  
 27550 00010BCB 41BE00000000                    mov r14, 0                                ; clean box
 27551                                  
 27552                                  
 27553                                                                  
 27554 00010BD1 4983C2FF                        add r10, -1                               ; args_copied_counter--
 27555                                  
 27556 00010BD5 4983C4FF                        add r12, -1 
 27557                                  
 27558 00010BD9 4983FA00                        cmp r10, 0                                ; element_copied_counter == 0 ?
 27559 00010BDD 75E3                    	jne .L_tc_recycle_frame_loop_00b5
 27560                                  .L_tc_recycle_frame_done_00b5:
 27561 00010BDF 5D                      	pop rbp                                  ; restore the old rbp
 27562                                  
 27563 00010BE0 488B4D00                        mov rcx, qword [rbp]
 27564 00010BE4 488B5809                        mov rbx, SOB_CLOSURE_CODE(rax)
 27565                                            ; rbx <- code(proc)
 27566                                  
 27567 00010BE8 FFE3                            jmp rbx
 27568                                  	.L_if_end_005e:
 27569                                  	.L_if_end_005d:
 27570 00010BEA C9                      	leave
 27571 00010BEB C22000                  	ret 8 * (2 + 2)
 27572                                  .L_lambda_simple_end_009c:	; new closure is in rax
 27573 00010BEE 48890425[88040000]      	mov qword [free_var_145], rax
 27574 00010BF6 48B8-                   	mov rax, sob_void
 27574 00010BF8 [0000000000000000] 
 27575                                  
 27576 00010C00 4889C7                  	mov rdi, rax
 27577 00010C03 E81F010000              	call print_sexpr_if_not_void
 27578                                  
 27579 00010C08 48B8-                   	mov rax, qword (L_constants + 647)
 27579 00010C0A [8702000000000000] 
 27580 00010C12 50                      	push rax
 27581 00010C13 488B0425[08030000]      	mov rax, qword [free_var_97]
 27582 00010C1B 50                      	push rax
 27583 00010C1C 6A02                    	push 2
 27584 00010C1E 488B0425[C8020000]      	mov rax, qword [free_var_89]
 27585 00010C26 803805                  	cmp byte [rax], T_closure 
 27586 00010C29 0F856F100000                    jne L_code_ptr_error
 27587                                  
 27588 00010C2F 488B5801                        mov rbx, SOB_CLOSURE_ENV(rax)
 27589                                  
 27590 00010C33 53                              push rbx
 27591                                  
 27592 00010C34 FF5009                          call SOB_CLOSURE_CODE(rax)
 27593                                  
 27594                                          
 27595 00010C37 4889C7                  	mov rdi, rax
 27596 00010C3A E8E8000000              	call print_sexpr_if_not_void
 27597                                  
 27598 00010C3F 48BF-                           mov rdi, fmt_memory_usage
 27598 00010C41 [F702000000000000] 
 27599 00010C49 488B3425[7E030000]              mov rsi, qword [top_of_memory]
 27600 00010C51 4881EE[90040000]                sub rsi, memory
 27601 00010C58 B800000000                      mov rax, 0
 27602                                  	ENTER
 27602 00010C5D C8000000            <1>  enter 0, 0
 27602 00010C61 4883E4F0            <1>  and rsp, ~15
 27603 00010C65 E8(00000000)                    call printf
 27604                                  	LEAVE
 27604 00010C6A C9                  <1>  leave
 27605 00010C6B C9                      	leave
 27606 00010C6C C3                      	ret
 27607                                  
 27608                                  L_error_non_closure:
 27609 00010C6D 488B3C25[00000000]              mov rdi, qword [stderr]
 27610 00010C75 48BE-                           mov rsi, fmt_non_closure
 27610 00010C77 [2E03000000000000] 
 27611 00010C7F B800000000                      mov rax, 0
 27612                                  	ENTER
 27612 00010C84 C8000000            <1>  enter 0, 0
 27612 00010C88 4883E4F0            <1>  and rsp, ~15
 27613 00010C8C E8(00000000)                    call fprintf
 27614                                  	LEAVE
 27614 00010C91 C9                  <1>  leave
 27615 00010C92 48C7C0FEFFFFFF                  mov rax, -2
 27616 00010C99 E8(00000000)                    call exit
 27617                                  
 27618                                  L_error_improper_list:
 27619 00010C9E 488B3C25[00000000]      	mov rdi, qword [stderr]
 27620 00010CA6 48BE-                   	mov rsi, fmt_error_improper_list
 27620 00010CA8 [5603000000000000] 
 27621 00010CB0 B800000000              	mov rax, 0
 27622                                  	ENTER
 27622 00010CB5 C8000000            <1>  enter 0, 0
 27622 00010CB9 4883E4F0            <1>  and rsp, ~15
 27623 00010CBD E8(00000000)            	call fprintf
 27624                                  	LEAVE
 27624 00010CC2 C9                  <1>  leave
 27625 00010CC3 48C7C0F9FFFFFF          	mov rax, -7
 27626 00010CCA E8(00000000)            	call exit
 27627                                  
 27628                                  L_error_incorrect_arity_simple:
 27629 00010CCF 488B3C25[00000000]              mov rdi, qword [stderr]
 27630 00010CD7 48BE-                           mov rsi, fmt_incorrect_arity_simple
 27630 00010CD9 [9802000000000000] 
 27631 00010CE1 EB12                            jmp L_error_incorrect_arity_common
 27632                                  L_error_incorrect_arity_opt:
 27633 00010CE3 488B3C25[00000000]              mov rdi, qword [stderr]
 27634 00010CEB 48BE-                           mov rsi, fmt_incorrect_arity_opt
 27634 00010CED [C302000000000000] 
 27635                                  L_error_incorrect_arity_common:
 27636 00010CF5 5A                              pop rdx
 27637 00010CF6 59                              pop rcx
 27638 00010CF7 B800000000                      mov rax, 0
 27639                                  	ENTER
 27639 00010CFC C8000000            <1>  enter 0, 0
 27639 00010D00 4883E4F0            <1>  and rsp, ~15
 27640 00010D04 E8(00000000)                    call fprintf
 27641                                  	LEAVE
 27641 00010D09 C9                  <1>  leave
 27642 00010D0A 48C7C0FAFFFFFF                  mov rax, -6
 27643 00010D11 E8(00000000)                    call exit
 27644                                  
 27645                                  section .data
 27646                                  fmt_incorrect_arity_simple:
 27647 00000298 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 27647 000002A1 74656420256C642061-
 27647 000002AA 7267756D656E74732C-
 27647 000002B3 206275742067697665-
 27647 000002BC 6E20256C640A00     
 27648                                  fmt_incorrect_arity_opt:
 27649 000002C3 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 27649 000002CC 746564206174206C65-
 27649 000002D5 61737420256C642061-
 27649 000002DE 7267756D656E74732C-
 27649 000002E7 206275742067697665-
 27649 000002F0 6E20256C640A00     
 27650                                  fmt_memory_usage:
 27651 000002F7 0A0A21212120557365-             db `\n\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 27651 00000300 6420256C6420627974-
 27651 00000309 6573206F662064796E-
 27651 00000312 616D6963616C6C792D-
 27651 0000031B 616C6C6F6361746564-
 27651 00000324 206D656D6F72790A0A-
 27651 0000032D 00                 
 27652                                  fmt_non_closure:
 27653 0000032E 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 27653 00000337 7074696E6720746F20-
 27653 00000340 6170706C792061206E-
 27653 00000349 6F6E2D636C6F737572-
 27653 00000352 65210A00           
 27654                                  fmt_error_improper_list:
 27655 00000356 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 27655 0000035F 7267756D656E742069-
 27655 00000368 73206E6F7420612070-
 27655 00000371 726F706572206C6973-
 27655 0000037A 74210A00           
 27656                                  
 27657                                  section .bss
 27658                                  memory:
 27659 00000490 <res 40000000>          	resb gbytes(1)
 27660                                  
 27661                                  section .data
 27662                                  top_of_memory:
 27663 0000037E [9004000000000000]              dq memory
 27664                                  
 27665                                  section .text
 27666                                  malloc:
 27667 00010D16 488B0425[7E030000]              mov rax, qword [top_of_memory]
 27668 00010D1E 48013C25[7E030000]              add qword [top_of_memory], rdi
 27669 00010D26 C3                              ret
 27670                                          
 27671                                  print_sexpr_if_not_void:
 27672 00010D27 4881FF[00000000]        	cmp rdi, sob_void
 27673 00010D2E 7501                    	jne print_sexpr
 27674 00010D30 C3                      	ret
 27675                                  
 27676                                  section .data
 27677                                  fmt_void:
 27678 00000386 233C766F69643E00        	db `#<void>\0`
 27679                                  fmt_nil:
 27680 0000038E 282900                  	db `()\0`
 27681                                  fmt_boolean_false:
 27682 00000391 236600                  	db `#f\0`
 27683                                  fmt_boolean_true:
 27684 00000394 237400                  	db `#t\0`
 27685                                  fmt_char_backslash:
 27686 00000397 235C5C00                	db `#\\\\\0`
 27687                                  fmt_char_dquote:
 27688 0000039B 235C2200                	db `#\\"\0`
 27689                                  fmt_char_simple:
 27690 0000039F 235C256300              	db `#\\%c\0`
 27691                                  fmt_char_null:
 27692 000003A4 235C6E756C00            	db `#\\nul\0`
 27693                                  fmt_char_bell:
 27694 000003AA 235C62656C6C00          	db `#\\bell\0`
 27695                                  fmt_char_backspace:
 27696 000003B1 235C6261636B737061-     	db `#\\backspace\0`
 27696 000003BA 636500             
 27697                                  fmt_char_tab:
 27698 000003BD 235C74616200            	db `#\\tab\0`
 27699                                  fmt_char_newline:
 27700 000003C3 235C6E65776C696E65-     	db `#\\newline\0`
 27700 000003CC 00                 
 27701                                  fmt_char_formfeed:
 27702 000003CD 235C7061676500          	db `#\\page\0`
 27703                                  fmt_char_return:
 27704 000003D4 235C72657475726E00      	db `#\\return\0`
 27705                                  fmt_char_escape:
 27706 000003DD 235C65736300            	db `#\\esc\0`
 27707                                  fmt_char_space:
 27708 000003E3 235C737061636500        	db `#\\space\0`
 27709                                  fmt_char_hex:
 27710 000003EB 235C782530325800        	db `#\\x%02X\0`
 27711                                  fmt_closure:
 27712 000003F3 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 27712 000003FC 206174203078253038-
 27712 00000405 5820656E763D307825-
 27712 0000040E 30385820636F64653D-
 27712 00000417 3078253038583E00   
 27713                                  fmt_lparen:
 27714 0000041F 2800                    	db `(\0`
 27715                                  fmt_dotted_pair:
 27716 00000421 202E2000                	db ` . \0`
 27717                                  fmt_rparen:
 27718 00000425 2900                    	db `)\0`
 27719                                  fmt_space:
 27720 00000427 2000                    	db ` \0`
 27721                                  fmt_empty_vector:
 27722 00000429 23282900                	db `#()\0`
 27723                                  fmt_vector:
 27724 0000042D 232800                  	db `#(\0`
 27725                                  fmt_real:
 27726 00000430 256600                  	db `%f\0`
 27727                                  fmt_fraction:
 27728 00000433 256C642F256C6400        	db `%ld/%ld\0`
 27729                                  fmt_zero:
 27730 0000043B 3000                    	db `0\0`
 27731                                  fmt_int:
 27732 0000043D 256C6400                	db `%ld\0`
 27733                                  fmt_unknown_sexpr_error:
 27734 00000441 0A0A21212120457272-     	db `\n\n!!! Error: Unknown type of sexpr (0x%02X) `
 27734 0000044A 6F723A20556E6B6E6F-
 27734 00000453 776E2074797065206F-
 27734 0000045C 662073657870722028-
 27734 00000465 3078253032582920   
 27735 0000046D 617420616464726573-     	db `at address 0x%08X\n\n\0`
 27735 00000476 73203078253038580A-
 27735 0000047F 0A00               
 27736                                  fmt_dquote:
 27737 00000481 2200                    	db `\"\0`
 27738                                  fmt_string_char:
 27739 00000483 256300                          db `%c\0`
 27740                                  fmt_string_char_7:
 27741 00000486 5C6100                          db `\\a\0`
 27742                                  fmt_string_char_8:
 27743 00000489 5C6200                          db `\\b\0`
 27744                                  fmt_string_char_9:
 27745 0000048C 5C7400                          db `\\t\0`
 27746                                  fmt_string_char_10:
 27747 0000048F 5C6E00                          db `\\n\0`
 27748                                  fmt_string_char_11:
 27749 00000492 5C7600                          db `\\v\0`
 27750                                  fmt_string_char_12:
 27751 00000495 5C6600                          db `\\f\0`
 27752                                  fmt_string_char_13:
 27753 00000498 5C7200                          db `\\r\0`
 27754                                  fmt_string_char_34:
 27755 0000049B 5C2200                          db `\\"\0`
 27756                                  fmt_string_char_92:
 27757 0000049E 5C5C00                          db `\\\\\0`
 27758                                  fmt_string_char_hex:
 27759 000004A1 5C7825583B00                    db `\\x%X;\0`
 27760                                  
 27761                                  section .text
 27762                                  
 27763                                  print_sexpr:
 27764                                  	ENTER
 27764 00010D31 C8000000            <1>  enter 0, 0
 27764 00010D35 4883E4F0            <1>  and rsp, ~15
 27765 00010D39 8A07                    	mov al, byte [rdi]
 27766 00010D3B 3C00                    	cmp al, T_void
 27767 00010D3D 744D                    	je .Lvoid
 27768 00010D3F 3C01                    	cmp al, T_nil
 27769 00010D41 7458                    	je .Lnil
 27770 00010D43 3C09                    	cmp al, T_boolean_false
 27771 00010D45 7463                    	je .Lboolean_false
 27772 00010D47 3C0A                    	cmp al, T_boolean_true
 27773 00010D49 746E                    	je .Lboolean_true
 27774 00010D4B 3C02                    	cmp al, T_char
 27775 00010D4D 7479                    	je .Lchar
 27776 00010D4F 3C04                    	cmp al, T_symbol
 27777 00010D51 0F84BB010000            	je .Lsymbol
 27778 00010D57 3C21                    	cmp al, T_pair
 27779 00010D59 0F84D6010000            	je .Lpair
 27780 00010D5F 3C22                    	cmp al, T_vector
 27781 00010D61 0F849F020000            	je .Lvector
 27782 00010D67 3C05                    	cmp al, T_closure
 27783 00010D69 0F8489010000            	je .Lclosure
 27784 00010D6F 3C12                    	cmp al, T_real
 27785 00010D71 0F8430030000            	je .Lreal
 27786 00010D77 3C11                    	cmp al, T_rational
 27787 00010D79 0F8456030000            	je .Lrational
 27788 00010D7F 3C03                    	cmp al, T_string
 27789 00010D81 0F848F030000            	je .Lstring
 27790                                  
 27791 00010D87 E9C7040000              	jmp .Lunknown_sexpr_type
 27792                                  
 27793                                  .Lvoid:
 27794 00010D8C 48BF-                   	mov rdi, fmt_void
 27794 00010D8E [8603000000000000] 
 27795 00010D96 E9F5040000              	jmp .Lemit
 27796                                  
 27797                                  .Lnil:
 27798 00010D9B 48BF-                   	mov rdi, fmt_nil
 27798 00010D9D [8E03000000000000] 
 27799 00010DA5 E9E6040000              	jmp .Lemit
 27800                                  
 27801                                  .Lboolean_false:
 27802 00010DAA 48BF-                   	mov rdi, fmt_boolean_false
 27802 00010DAC [9103000000000000] 
 27803 00010DB4 E9D7040000              	jmp .Lemit
 27804                                  
 27805                                  .Lboolean_true:
 27806 00010DB9 48BF-                   	mov rdi, fmt_boolean_true
 27806 00010DBB [9403000000000000] 
 27807 00010DC3 E9C8040000              	jmp .Lemit
 27808                                  
 27809                                  .Lchar:
 27810 00010DC8 8A4701                  	mov al, byte [rdi + 1]
 27811 00010DCB 3C20                    	cmp al, ' '
 27812 00010DCD 7E28                    	jle .Lchar_whitespace
 27813 00010DCF 3C5C                    	cmp al, 92 		; backslash
 27814 00010DD1 0F847C000000            	je .Lchar_backslash
 27815 00010DD7 3C22                    	cmp al, '"'
 27816 00010DD9 0F8483000000            	je .Lchar_dquote
 27817 00010DDF 4825FF000000            	and rax, 255
 27818 00010DE5 48BF-                   	mov rdi, fmt_char_simple
 27818 00010DE7 [9F03000000000000] 
 27819 00010DEF 4889C6                  	mov rsi, rax
 27820 00010DF2 E999040000              	jmp .Lemit
 27821                                  
 27822                                  .Lchar_whitespace:
 27823 00010DF7 3C00                    	cmp al, 0
 27824 00010DF9 7476                    	je .Lchar_null
 27825 00010DFB 3C07                    	cmp al, 7
 27826 00010DFD 0F847D000000            	je .Lchar_bell
 27827 00010E03 3C08                    	cmp al, 8
 27828 00010E05 0F8484000000            	je .Lchar_backspace
 27829 00010E0B 3C09                    	cmp al, 9
 27830 00010E0D 0F848B000000            	je .Lchar_tab
 27831 00010E13 3C0A                    	cmp al, 10
 27832 00010E15 0F8492000000            	je .Lchar_newline
 27833 00010E1B 3C0C                    	cmp al, 12
 27834 00010E1D 0F8499000000            	je .Lchar_formfeed
 27835 00010E23 3C0D                    	cmp al, 13
 27836 00010E25 0F84A0000000            	je .Lchar_return
 27837 00010E2B 3C1B                    	cmp al, 27
 27838 00010E2D 0F84A7000000            	je .Lchar_escape
 27839 00010E33 4825FF000000            	and rax, 255
 27840 00010E39 3C20                    	cmp al, ' '
 27841 00010E3B 0F84A8000000            	je .Lchar_space
 27842 00010E41 48BF-                   	mov rdi, fmt_char_hex
 27842 00010E43 [EB03000000000000] 
 27843 00010E4B 4889C6                  	mov rsi, rax
 27844 00010E4E E93D040000              	jmp .Lemit	
 27845                                  
 27846                                  .Lchar_backslash:
 27847 00010E53 48BF-                   	mov rdi, fmt_char_backslash
 27847 00010E55 [9703000000000000] 
 27848 00010E5D E92E040000              	jmp .Lemit
 27849                                  
 27850                                  .Lchar_dquote:
 27851 00010E62 48BF-                   	mov rdi, fmt_char_dquote
 27851 00010E64 [9B03000000000000] 
 27852 00010E6C E91F040000              	jmp .Lemit
 27853                                  
 27854                                  .Lchar_null:
 27855 00010E71 48BF-                   	mov rdi, fmt_char_null
 27855 00010E73 [A403000000000000] 
 27856 00010E7B E910040000              	jmp .Lemit
 27857                                  
 27858                                  .Lchar_bell:
 27859 00010E80 48BF-                   	mov rdi, fmt_char_bell
 27859 00010E82 [AA03000000000000] 
 27860 00010E8A E901040000              	jmp .Lemit
 27861                                  
 27862                                  .Lchar_backspace:
 27863 00010E8F 48BF-                   	mov rdi, fmt_char_backspace
 27863 00010E91 [B103000000000000] 
 27864 00010E99 E9F2030000              	jmp .Lemit
 27865                                  
 27866                                  .Lchar_tab:
 27867 00010E9E 48BF-                   	mov rdi, fmt_char_tab
 27867 00010EA0 [BD03000000000000] 
 27868 00010EA8 E9E3030000              	jmp .Lemit
 27869                                  
 27870                                  .Lchar_newline:
 27871 00010EAD 48BF-                   	mov rdi, fmt_char_newline
 27871 00010EAF [C303000000000000] 
 27872 00010EB7 E9D4030000              	jmp .Lemit
 27873                                  
 27874                                  .Lchar_formfeed:
 27875 00010EBC 48BF-                   	mov rdi, fmt_char_formfeed
 27875 00010EBE [CD03000000000000] 
 27876 00010EC6 E9C5030000              	jmp .Lemit
 27877                                  
 27878                                  .Lchar_return:
 27879 00010ECB 48BF-                   	mov rdi, fmt_char_return
 27879 00010ECD [D403000000000000] 
 27880 00010ED5 E9B6030000              	jmp .Lemit
 27881                                  
 27882                                  .Lchar_escape:
 27883 00010EDA 48BF-                   	mov rdi, fmt_char_escape
 27883 00010EDC [DD03000000000000] 
 27884 00010EE4 E9A7030000              	jmp .Lemit
 27885                                  
 27886                                  .Lchar_space:
 27887 00010EE9 48BF-                   	mov rdi, fmt_char_space
 27887 00010EEB [E303000000000000] 
 27888 00010EF3 E998030000              	jmp .Lemit
 27889                                  
 27890                                  .Lclosure:
 27891 00010EF8 4889FE                  	mov rsi, qword rdi
 27892 00010EFB 48BF-                   	mov rdi, fmt_closure
 27892 00010EFD [F303000000000000] 
 27893 00010F05 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 27894 00010F09 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 27895 00010F0D E97E030000              	jmp .Lemit
 27896                                  
 27897                                  .Lsymbol:
 27898 00010F12 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 27899 00010F16 BE01000000              	mov rsi, 1		 ; size = 1 byte
 27900 00010F1B 488B5701                	mov rdx, qword [rdi + 1] ; length
 27901 00010F1F 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 27902 00010F23 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 27903 00010F2B E8(00000000)            	call fwrite
 27904 00010F30 E970030000              	jmp .Lend
 27905                                  	
 27906                                  .Lpair:
 27907 00010F35 57                      	push rdi
 27908 00010F36 48BF-                   	mov rdi, fmt_lparen
 27908 00010F38 [1F04000000000000] 
 27909 00010F40 B800000000              	mov rax, 0
 27910                                          ENTER
 27910 00010F45 C8000000            <1>  enter 0, 0
 27910 00010F49 4883E4F0            <1>  and rsp, ~15
 27911 00010F4D E8(00000000)            	call printf
 27912                                          LEAVE
 27912 00010F52 C9                  <1>  leave
 27913 00010F53 488B3C24                	mov rdi, qword [rsp] 	; pair
 27914 00010F57 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 27915 00010F5B E8D1FDFFFF              	call print_sexpr
 27916 00010F60 5F                      	pop rdi 		; pair
 27917 00010F61 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 27918                                  .Lcdr:
 27919 00010F65 8A07                    	mov al, byte [rdi]
 27920 00010F67 3C01                    	cmp al, T_nil
 27921 00010F69 7447                    	je .Lcdr_nil
 27922 00010F6B 3C21                    	cmp al, T_pair
 27923 00010F6D 7462                    	je .Lcdr_pair
 27924 00010F6F 57                      	push rdi
 27925 00010F70 48BF-                   	mov rdi, fmt_dotted_pair
 27925 00010F72 [2104000000000000] 
 27926 00010F7A B800000000              	mov rax, 0
 27927                                  	ENTER
 27927 00010F7F C8000000            <1>  enter 0, 0
 27927 00010F83 4883E4F0            <1>  and rsp, ~15
 27928 00010F87 E8(00000000)            	call printf
 27929                                  	LEAVE
 27929 00010F8C C9                  <1>  leave
 27930 00010F8D 5F                      	pop rdi
 27931 00010F8E E89EFDFFFF              	call print_sexpr
 27932 00010F93 48BF-                   	mov rdi, fmt_rparen
 27932 00010F95 [2504000000000000] 
 27933 00010F9D B800000000              	mov rax, 0
 27934                                  	ENTER
 27934 00010FA2 C8000000            <1>  enter 0, 0
 27934 00010FA6 4883E4F0            <1>  and rsp, ~15
 27935 00010FAA E8(00000000)            	call printf
 27936                                  	LEAVE
 27936 00010FAF C9                  <1>  leave
 27937                                  	LEAVE
 27937 00010FB0 C9                  <1>  leave
 27938 00010FB1 C3                      	ret
 27939                                  
 27940                                  .Lcdr_nil:
 27941 00010FB2 48BF-                   	mov rdi, fmt_rparen
 27941 00010FB4 [2504000000000000] 
 27942 00010FBC B800000000              	mov rax, 0
 27943                                  	ENTER
 27943 00010FC1 C8000000            <1>  enter 0, 0
 27943 00010FC5 4883E4F0            <1>  and rsp, ~15
 27944 00010FC9 E8(00000000)            	call printf
 27945                                  	LEAVE
 27945 00010FCE C9                  <1>  leave
 27946                                  	LEAVE
 27946 00010FCF C9                  <1>  leave
 27947 00010FD0 C3                      	ret
 27948                                  
 27949                                  .Lcdr_pair:
 27950 00010FD1 57                      	push rdi
 27951 00010FD2 48BF-                   	mov rdi, fmt_space
 27951 00010FD4 [2704000000000000] 
 27952 00010FDC B800000000              	mov rax, 0
 27953                                  	ENTER
 27953 00010FE1 C8000000            <1>  enter 0, 0
 27953 00010FE5 4883E4F0            <1>  and rsp, ~15
 27954 00010FE9 E8(00000000)            	call printf
 27955                                  	LEAVE
 27955 00010FEE C9                  <1>  leave
 27956 00010FEF 488B3C24                	mov rdi, qword [rsp]
 27957 00010FF3 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 27958 00010FF7 E835FDFFFF              	call print_sexpr
 27959 00010FFC 5F                      	pop rdi
 27960 00010FFD 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 27961 00011001 E95FFFFFFF              	jmp .Lcdr
 27962                                  
 27963                                  .Lvector:
 27964 00011006 488B4701                	mov rax, qword [rdi + 1] ; length
 27965 0001100A 4883F800                	cmp rax, 0
 27966 0001100E 0F8484000000            	je .Lvector_empty
 27967 00011014 57                      	push rdi
 27968 00011015 48BF-                   	mov rdi, fmt_vector
 27968 00011017 [2D04000000000000] 
 27969 0001101F B800000000              	mov rax, 0
 27970                                  	ENTER
 27970 00011024 C8000000            <1>  enter 0, 0
 27970 00011028 4883E4F0            <1>  and rsp, ~15
 27971 0001102C E8(00000000)            	call printf
 27972                                  	LEAVE
 27972 00011031 C9                  <1>  leave
 27973 00011032 488B3C24                	mov rdi, qword [rsp]
 27974 00011036 FF7701                  	push qword [rdi + 1]
 27975 00011039 6A01                    	push 1
 27976 0001103B 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 27977 0001103F E8EDFCFFFF              	call print_sexpr
 27978                                  .Lvector_loop:
 27979                                  	; [rsp] index
 27980                                  	; [rsp + 8*1] limit
 27981                                  	; [rsp + 8*2] vector
 27982 00011044 488B0424                	mov rax, qword [rsp]
 27983 00011048 483B442408              	cmp rax, qword [rsp + 8*1]
 27984 0001104D 7436                    	je .Lvector_end
 27985 0001104F 48BF-                   	mov rdi, fmt_space
 27985 00011051 [2704000000000000] 
 27986 00011059 B800000000              	mov rax, 0
 27987                                  	ENTER
 27987 0001105E C8000000            <1>  enter 0, 0
 27987 00011062 4883E4F0            <1>  and rsp, ~15
 27988 00011066 E8(00000000)            	call printf
 27989                                  	LEAVE
 27989 0001106B C9                  <1>  leave
 27990 0001106C 488B0424                	mov rax, qword [rsp]
 27991 00011070 488B5C2410              	mov rbx, qword [rsp + 8*2]
 27992 00011075 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 27993 0001107A E8B2FCFFFF              	call print_sexpr
 27994 0001107F 48FF0424                	inc qword [rsp]
 27995 00011083 EBBF                    	jmp .Lvector_loop
 27996                                  
 27997                                  .Lvector_end:
 27998 00011085 4883C418                	add rsp, 8*3
 27999 00011089 48BF-                   	mov rdi, fmt_rparen
 27999 0001108B [2504000000000000] 
 28000 00011093 E9F8010000              	jmp .Lemit	
 28001                                  
 28002                                  .Lvector_empty:
 28003 00011098 48BF-                   	mov rdi, fmt_empty_vector
 28003 0001109A [2904000000000000] 
 28004 000110A2 E9E9010000              	jmp .Lemit
 28005                                  
 28006                                  .Lreal:
 28007 000110A7 FF7701                  	push qword [rdi + 1]
 28008 000110AA F20F100424              	movsd xmm0, qword [rsp]
 28009 000110AF 4883C408                	add rsp, 8*1
 28010 000110B3 48BF-                   	mov rdi, fmt_real
 28010 000110B5 [3004000000000000] 
 28011 000110BD B801000000              	mov rax, 1
 28012                                  	ENTER
 28012 000110C2 C8000000            <1>  enter 0, 0
 28012 000110C6 4883E4F0            <1>  and rsp, ~15
 28013 000110CA E8(00000000)            	call printf
 28014                                  	LEAVE
 28014 000110CF C9                  <1>  leave
 28015 000110D0 E9D0010000              	jmp .Lend
 28016                                  
 28017                                  .Lrational:
 28018 000110D5 488B7701                	mov rsi, qword [rdi + 1]
 28019 000110D9 488B5709                	mov rdx, qword [rdi + 1 + 8]
 28020 000110DD 4883FE00                	cmp rsi, 0
 28021 000110E1 7415                    	je .Lrat_zero
 28022 000110E3 4883FA01                	cmp rdx, 1
 28023 000110E7 741E                    	je .Lrat_int
 28024 000110E9 48BF-                   	mov rdi, fmt_fraction
 28024 000110EB [3304000000000000] 
 28025 000110F3 E998010000              	jmp .Lemit
 28026                                  
 28027                                  .Lrat_zero:
 28028 000110F8 48BF-                   	mov rdi, fmt_zero
 28028 000110FA [3B04000000000000] 
 28029 00011102 E989010000              	jmp .Lemit
 28030                                  
 28031                                  .Lrat_int:
 28032 00011107 48BF-                   	mov rdi, fmt_int
 28032 00011109 [3D04000000000000] 
 28033 00011111 E97A010000              	jmp .Lemit
 28034                                  
 28035                                  .Lstring:
 28036 00011116 488D4709                	lea rax, [rdi + 1 + 8]
 28037 0001111A 50                      	push rax
 28038 0001111B FF7701                  	push qword [rdi + 1]
 28039 0001111E 48BF-                   	mov rdi, fmt_dquote
 28039 00011120 [8104000000000000] 
 28040 00011128 B800000000              	mov rax, 0
 28041                                  	ENTER
 28041 0001112D C8000000            <1>  enter 0, 0
 28041 00011131 4883E4F0            <1>  and rsp, ~15
 28042 00011135 E8(00000000)            	call printf
 28043                                  	LEAVE
 28043 0001113A C9                  <1>  leave
 28044                                  .Lstring_loop:
 28045                                  	; qword [rsp]: limit
 28046                                  	; qword [rsp + 8*1]: char *
 28047 0001113B 48833C2400              	cmp qword [rsp], 0
 28048 00011140 0F84FD000000            	je .Lstring_end
 28049 00011146 488B442408              	mov rax, qword [rsp + 8*1]
 28050 0001114B 8A00                    	mov al, byte [rax]
 28051 0001114D 4825FF000000            	and rax, 255
 28052 00011153 3C07                    	cmp al, 7
 28053 00011155 7468                            je .Lstring_char_7
 28054 00011157 3C08                            cmp al, 8
 28055 00011159 7470                            je .Lstring_char_8
 28056 0001115B 3C09                            cmp al, 9
 28057 0001115D 7478                            je .Lstring_char_9
 28058 0001115F 3C0A                            cmp al, 10
 28059 00011161 0F847C000000                    je .Lstring_char_10
 28060 00011167 3C0B                            cmp al, 11
 28061 00011169 0F8480000000                    je .Lstring_char_11
 28062 0001116F 3C0C                            cmp al, 12
 28063 00011171 0F8484000000                    je .Lstring_char_12
 28064 00011177 3C0D                            cmp al, 13
 28065 00011179 0F8488000000                    je .Lstring_char_13
 28066 0001117F 3C22                            cmp al, 34
 28067 00011181 0F848C000000                    je .Lstring_char_34
 28069 00011187 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 28070 00011189 3C20                            cmp al, ' '
 28071 0001118B 0F8CA0000000                    jl .Lstring_char_hex
 28072 00011191 48BF-                           mov rdi, fmt_string_char
 28072 00011193 [8304000000000000] 
 28073 0001119B 4889C6                          mov rsi, rax
 28074                                  .Lstring_char_emit:
 28075 0001119E B800000000                      mov rax, 0
 28076                                          ENTER
 28076 000111A3 C8000000            <1>  enter 0, 0
 28076 000111A7 4883E4F0            <1>  and rsp, ~15
 28077 000111AB E8(00000000)                    call printf
 28078                                          LEAVE
 28078 000111B0 C9                  <1>  leave
 28079 000111B1 48FF0C24                        dec qword [rsp]
 28080 000111B5 48FF442408                      inc qword [rsp + 8*1]
 28081 000111BA E97CFFFFFF                      jmp .Lstring_loop
 28082                                  
 28083                                  .Lstring_char_7:
 28084 000111BF 48BF-                           mov rdi, fmt_string_char_7
 28084 000111C1 [8604000000000000] 
 28085 000111C9 EBD3                            jmp .Lstring_char_emit
 28086                                  
 28087                                  .Lstring_char_8:
 28088 000111CB 48BF-                           mov rdi, fmt_string_char_8
 28088 000111CD [8904000000000000] 
 28089 000111D5 EBC7                            jmp .Lstring_char_emit
 28090                                          
 28091                                  .Lstring_char_9:
 28092 000111D7 48BF-                           mov rdi, fmt_string_char_9
 28092 000111D9 [8C04000000000000] 
 28093 000111E1 EBBB                            jmp .Lstring_char_emit
 28094                                  
 28095                                  .Lstring_char_10:
 28096 000111E3 48BF-                           mov rdi, fmt_string_char_10
 28096 000111E5 [8F04000000000000] 
 28097 000111ED EBAF                            jmp .Lstring_char_emit
 28098                                  
 28099                                  .Lstring_char_11:
 28100 000111EF 48BF-                           mov rdi, fmt_string_char_11
 28100 000111F1 [9204000000000000] 
 28101 000111F9 EBA3                            jmp .Lstring_char_emit
 28102                                  
 28103                                  .Lstring_char_12:
 28104 000111FB 48BF-                           mov rdi, fmt_string_char_12
 28104 000111FD [9504000000000000] 
 28105 00011205 EB97                            jmp .Lstring_char_emit
 28106                                  
 28107                                  .Lstring_char_13:
 28108 00011207 48BF-                           mov rdi, fmt_string_char_13
 28108 00011209 [9804000000000000] 
 28109 00011211 EB8B                            jmp .Lstring_char_emit
 28110                                  
 28111                                  .Lstring_char_34:
 28112 00011213 48BF-                           mov rdi, fmt_string_char_34
 28112 00011215 [9B04000000000000] 
 28113 0001121D E97CFFFFFF                      jmp .Lstring_char_emit
 28114                                  
 28115                                  .Lstring_char_92:
 28116 00011222 48BF-                           mov rdi, fmt_string_char_92
 28116 00011224 [9E04000000000000] 
 28117 0001122C E96DFFFFFF                      jmp .Lstring_char_emit
 28118                                  
 28119                                  .Lstring_char_hex:
 28120 00011231 48BF-                           mov rdi, fmt_string_char_hex
 28120 00011233 [A104000000000000] 
 28121 0001123B 4889C6                          mov rsi, rax
 28122 0001123E E95BFFFFFF                      jmp .Lstring_char_emit        
 28123                                  
 28124                                  .Lstring_end:
 28125 00011243 4883C410                	add rsp, 8 * 2
 28126 00011247 48BF-                   	mov rdi, fmt_dquote
 28126 00011249 [8104000000000000] 
 28127 00011251 EB3D                    	jmp .Lemit
 28128                                  
 28129                                  .Lunknown_sexpr_type:
 28130 00011253 48BE-                   	mov rsi, fmt_unknown_sexpr_error
 28130 00011255 [4104000000000000] 
 28131 0001125D 4825FF000000            	and rax, 255
 28132 00011263 4889C2                  	mov rdx, rax
 28133 00011266 4889F9                  	mov rcx, rdi
 28134 00011269 488B3C25[00000000]      	mov rdi, qword [stderr]
 28135 00011271 B800000000              	mov rax, 0
 28136                                  	ENTER
 28136 00011276 C8000000            <1>  enter 0, 0
 28136 0001127A 4883E4F0            <1>  and rsp, ~15
 28137 0001127E E8(00000000)            	call fprintf
 28138                                  	LEAVE
 28138 00011283 C9                  <1>  leave
 28139 00011284 48C7C0FFFFFFFF          	mov rax, -1
 28140 0001128B E8(00000000)            	call exit
 28141                                  
 28142                                  .Lemit:
 28143 00011290 B800000000              	mov rax, 0
 28144                                  	ENTER
 28144 00011295 C8000000            <1>  enter 0, 0
 28144 00011299 4883E4F0            <1>  and rsp, ~15
 28145 0001129D E8(00000000)            	call printf
 28146                                  	LEAVE
 28146 000112A2 C9                  <1>  leave
 28147 000112A3 EB00                    	jmp .Lend
 28148                                  
 28149                                  .Lend:
 28150                                  	LEAVE
 28150 000112A5 C9                  <1>  leave
 28151 000112A6 C3                      	ret
 28152                                  
 28153                                  ;;; rdi: address of free variable
 28154                                  ;;; rsi: address of code-pointer
 28155                                  bind_primitive:
 28156                                          ENTER
 28156 000112A7 C8000000            <1>  enter 0, 0
 28156 000112AB 4883E4F0            <1>  and rsp, ~15
 28157 000112AF 57                              push rdi
 28158 000112B0 BF11000000                      mov rdi, (1 + 8 + 8)
 28159 000112B5 E85CFAFFFF                      call malloc
 28160 000112BA 5F                              pop rdi
 28161 000112BB C60005                          mov byte [rax], T_closure
 28162 000112BE 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 28163 000112C6 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 28164 000112CA 488907                          mov qword [rdi], rax
 28165                                          LEAVE
 28165 000112CD C9                  <1>  leave
 28166 000112CE C3                              ret
 28167                                  
 28168                                  ;;; PLEASE IMPLEMENT THIS PROCEDURE
 28169                                  ; (* current version!*)
 28170                                  L_code_ptr_bin_apply:
 28171                                          
 28172                                          
 28173 000112CF 4C8B442410                      mov r8, [rsp +  2 * 8]                          ; r8 <- num_of_args
 28174 000112D4 4983F802                        cmp r8, 2       
 28175 000112D8 0F8560110000                    jne L_error_arg_count_2                         ; check right number of parameters.           
 28176                                  
 28177 000112DE 4C8B442420                      mov r8, qword [rsp + 4 * 8]                     ; r8 <- list_of_args
 28178                                          assert_pair(r8)
 28178 000112E3 41803821            <1>  cmp byte [%1], %2
 28178 000112E7 0F85F0110000        <1>  jne L_error_incorrect_type
 28179                                  
 28180 000112ED 41803801                        cmp byte [r8], T_nil 
 28181 000112F1 0F84DD100000                    je L_error_arg_count_0                       ; list.length == 0 ?
 28182                                  
 28183 000112F7 41BB00000000                    mov r11, 0                                      ; list_asrgs_counter init
 28184                                  
 28185 000112FD 4C8B642418                      mov r12, qword [rsp + 3 * 8]                    ; r12 <- proc
 28186 00011302 803805                          cmp byte [rax], T_closure
 28187 00011305 0F8562F9FFFF                    jne L_error_non_closure
 28188                                  
 28189 0001130B 4C8B3424                        mov r14, qword [rsp]                            ; r14 <- ret address
 28190 0001130F 4883C428                        add rsp, 5 * 8                                  ; set rsp to override the last args
 28191                                                                                          ; similliar to 4 pops.
 28192                                  
 28193                                  .L_list_of_args_not_empty_yet:
 28194                                  
 28195                                          assert_pair(r8)
 28195 00011313 41803821            <1>  cmp byte [%1], %2
 28195 00011317 0F85C0110000        <1>  jne L_error_incorrect_type
 28196 0001131D 4D8B4801                        mov r9, qword SOB_PAIR_CAR(r8)                  ; r9 <- car(list)
 28197 00011321 4151                            push r9                                         ; * push arg *
 28198                                          
 28199 00011323 4983C301                        add r11, 1                                      ; args_counter ++
 28200                                  
 28201 00011327 4D8B5009                        mov r10, qword SOB_PAIR_CDR(r8)                 
 28202 0001132B 4D89D0                          mov r8, qword r10                               ; r8 <- cdr(list)
 28203                                  
 28204                                          assert_pair(r8) 
 28204 0001132E 41803821            <1>  cmp byte [%1], %2
 28204 00011332 0F85A5110000        <1>  jne L_error_incorrect_type
 28205 00011338 41803801                        cmp byte [r8], T_nil                            ; rest of the list is empty?
 28206 0001133C 75D5                            jne .L_list_of_args_not_empty_yet               
 28207                                  
 28208                                  .L_list_of_args_totally_pushed:
 28209                                  
 28210 0001133E 4153                            push r11                                        ; * push args_counter *
 28211                                  
 28212 00011340 4D8B6C2401                      mov r13, SOB_CLOSURE_ENV(r12)                   ; r13 <- proc.env
 28213 00011345 4155                            push r13                                        ; * push proc env *
 28214                                  
 28215 00011347 4156                            push r14                                        ; * push return address *
 28216                                  
 28217                                  
 28218                                  ; .L_flip_args_order:
 28219                                  
 28220                                  .L_all_args_are_flipped:
 28221                                  
 28222 00011349 4D8B6C2409                      mov r13, SOB_CLOSURE_CODE(r12)
 28223 0001134E 41FFE5                          jmp r13
 28224                                  
 28225                                  
 28226                                  
 28227                                  
 28228                                  	
 28229                                  L_code_ptr_is_null:
 28230                                          ENTER
 28230 00011351 C8000000            <1>  enter 0, 0
 28230 00011355 4883E4F0            <1>  and rsp, ~15
 28231 00011359 48837D1801                      cmp COUNT, 1
 28232 0001135E 0F85A5100000                    jne L_error_arg_count_1
 28233 00011364 488B4520                        mov rax, PARAM(0)
 28234 00011368 803801                          cmp byte [rax], T_nil
 28235 0001136B 750C                            jne .L_false
 28236 0001136D 48B8-                           mov rax, sob_boolean_true
 28236 0001136F [0300000000000000] 
 28237 00011377 EB0A                            jmp .L_end
 28238                                  .L_false:
 28239 00011379 48B8-                           mov rax, sob_boolean_false
 28239 0001137B [0200000000000000] 
 28240                                  .L_end:
 28241                                          LEAVE
 28241 00011383 C9                  <1>  leave
 28242 00011384 C21800                          ret AND_KILL_FRAME(1)
 28243                                  
 28244                                  L_code_ptr_is_pair:
 28245                                          ENTER
 28245 00011387 C8000000            <1>  enter 0, 0
 28245 0001138B 4883E4F0            <1>  and rsp, ~15
 28246 0001138F 48837D1801                      cmp COUNT, 1
 28247 00011394 0F856F100000                    jne L_error_arg_count_1
 28248 0001139A 488B4520                        mov rax, PARAM(0)
 28249 0001139E 803821                          cmp byte [rax], T_pair
 28250 000113A1 750C                            jne .L_false
 28251 000113A3 48B8-                           mov rax, sob_boolean_true
 28251 000113A5 [0300000000000000] 
 28252 000113AD EB0A                            jmp .L_end
 28253                                  .L_false:
 28254 000113AF 48B8-                           mov rax, sob_boolean_false
 28254 000113B1 [0200000000000000] 
 28255                                  .L_end:
 28256                                          LEAVE
 28256 000113B9 C9                  <1>  leave
 28257 000113BA C21800                          ret AND_KILL_FRAME(1)
 28258                                          
 28259                                  L_code_ptr_is_void:
 28260                                          ENTER
 28260 000113BD C8000000            <1>  enter 0, 0
 28260 000113C1 4883E4F0            <1>  and rsp, ~15
 28261 000113C5 48837D1801                      cmp COUNT, 1
 28262 000113CA 0F8539100000                    jne L_error_arg_count_1
 28263 000113D0 488B4520                        mov rax, PARAM(0)
 28264 000113D4 803800                          cmp byte [rax], T_void
 28265 000113D7 750C                            jne .L_false
 28266 000113D9 48B8-                           mov rax, sob_boolean_true
 28266 000113DB [0300000000000000] 
 28267 000113E3 EB0A                            jmp .L_end
 28268                                  .L_false:
 28269 000113E5 48B8-                           mov rax, sob_boolean_false
 28269 000113E7 [0200000000000000] 
 28270                                  .L_end:
 28271                                          LEAVE
 28271 000113EF C9                  <1>  leave
 28272 000113F0 C21800                          ret AND_KILL_FRAME(1)
 28273                                  
 28274                                  L_code_ptr_is_char:
 28275                                          ENTER
 28275 000113F3 C8000000            <1>  enter 0, 0
 28275 000113F7 4883E4F0            <1>  and rsp, ~15
 28276 000113FB 48837D1801                      cmp COUNT, 1
 28277 00011400 0F8503100000                    jne L_error_arg_count_1
 28278 00011406 488B4520                        mov rax, PARAM(0)
 28279 0001140A 803802                          cmp byte [rax], T_char
 28280 0001140D 750C                            jne .L_false
 28281 0001140F 48B8-                           mov rax, sob_boolean_true
 28281 00011411 [0300000000000000] 
 28282 00011419 EB0A                            jmp .L_end
 28283                                  .L_false:
 28284 0001141B 48B8-                           mov rax, sob_boolean_false
 28284 0001141D [0200000000000000] 
 28285                                  .L_end:
 28286                                          LEAVE
 28286 00011425 C9                  <1>  leave
 28287 00011426 C21800                          ret AND_KILL_FRAME(1)
 28288                                  
 28289                                  L_code_ptr_is_string:
 28290                                          ENTER
 28290 00011429 C8000000            <1>  enter 0, 0
 28290 0001142D 4883E4F0            <1>  and rsp, ~15
 28291 00011431 48837D1801                      cmp COUNT, 1
 28292 00011436 0F85CD0F0000                    jne L_error_arg_count_1
 28293 0001143C 488B4520                        mov rax, PARAM(0)
 28294 00011440 803803                          cmp byte [rax], T_string
 28295 00011443 750C                            jne .L_false
 28296 00011445 48B8-                           mov rax, sob_boolean_true
 28296 00011447 [0300000000000000] 
 28297 0001144F EB0A                            jmp .L_end
 28298                                  .L_false:
 28299 00011451 48B8-                           mov rax, sob_boolean_false
 28299 00011453 [0200000000000000] 
 28300                                  .L_end:
 28301                                          LEAVE
 28301 0001145B C9                  <1>  leave
 28302 0001145C C21800                          ret AND_KILL_FRAME(1)
 28303                                  
 28304                                  L_code_ptr_is_symbol:
 28305                                          ENTER
 28305 0001145F C8000000            <1>  enter 0, 0
 28305 00011463 4883E4F0            <1>  and rsp, ~15
 28306 00011467 48837D1801                      cmp COUNT, 1
 28307 0001146C 0F85970F0000                    jne L_error_arg_count_1
 28308 00011472 488B4520                        mov rax, PARAM(0)
 28309 00011476 803804                          cmp byte [rax], T_symbol
 28310 00011479 750C                            jne .L_false
 28311 0001147B 48B8-                           mov rax, sob_boolean_true
 28311 0001147D [0300000000000000] 
 28312 00011485 EB0A                            jmp .L_end
 28313                                  .L_false:
 28314 00011487 48B8-                           mov rax, sob_boolean_false
 28314 00011489 [0200000000000000] 
 28315                                  .L_end:
 28316                                          LEAVE
 28316 00011491 C9                  <1>  leave
 28317 00011492 C21800                          ret AND_KILL_FRAME(1)
 28318                                  
 28319                                  L_code_ptr_is_vector:
 28320                                          ENTER
 28320 00011495 C8000000            <1>  enter 0, 0
 28320 00011499 4883E4F0            <1>  and rsp, ~15
 28321 0001149D 48837D1801                      cmp COUNT, 1
 28322 000114A2 0F85610F0000                    jne L_error_arg_count_1
 28323 000114A8 488B4520                        mov rax, PARAM(0)
 28324 000114AC 803822                          cmp byte [rax], T_vector
 28325 000114AF 750C                            jne .L_false
 28326 000114B1 48B8-                           mov rax, sob_boolean_true
 28326 000114B3 [0300000000000000] 
 28327 000114BB EB0A                            jmp .L_end
 28328                                  .L_false:
 28329 000114BD 48B8-                           mov rax, sob_boolean_false
 28329 000114BF [0200000000000000] 
 28330                                  .L_end:
 28331                                          LEAVE
 28331 000114C7 C9                  <1>  leave
 28332 000114C8 C21800                          ret AND_KILL_FRAME(1)
 28333                                  
 28334                                  L_code_ptr_is_closure:
 28335                                          ENTER
 28335 000114CB C8000000            <1>  enter 0, 0
 28335 000114CF 4883E4F0            <1>  and rsp, ~15
 28336 000114D3 48837D1801                      cmp COUNT, 1
 28337 000114D8 0F852B0F0000                    jne L_error_arg_count_1
 28338 000114DE 488B4520                        mov rax, PARAM(0)
 28339 000114E2 803805                          cmp byte [rax], T_closure
 28340 000114E5 750C                            jne .L_false
 28341 000114E7 48B8-                           mov rax, sob_boolean_true
 28341 000114E9 [0300000000000000] 
 28342 000114F1 EB0A                            jmp .L_end
 28343                                  .L_false:
 28344 000114F3 48B8-                           mov rax, sob_boolean_false
 28344 000114F5 [0200000000000000] 
 28345                                  .L_end:
 28346                                          LEAVE
 28346 000114FD C9                  <1>  leave
 28347 000114FE C21800                          ret AND_KILL_FRAME(1)
 28348                                  
 28349                                  L_code_ptr_is_real:
 28350                                          ENTER
 28350 00011501 C8000000            <1>  enter 0, 0
 28350 00011505 4883E4F0            <1>  and rsp, ~15
 28351 00011509 48837D1801                      cmp COUNT, 1
 28352 0001150E 0F85F50E0000                    jne L_error_arg_count_1
 28353 00011514 488B4520                        mov rax, PARAM(0)
 28354 00011518 803812                          cmp byte [rax], T_real
 28355 0001151B 750C                            jne .L_false
 28356 0001151D 48B8-                           mov rax, sob_boolean_true
 28356 0001151F [0300000000000000] 
 28357 00011527 EB0A                            jmp .L_end
 28358                                  .L_false:
 28359 00011529 48B8-                           mov rax, sob_boolean_false
 28359 0001152B [0200000000000000] 
 28360                                  .L_end:
 28361                                          LEAVE
 28361 00011533 C9                  <1>  leave
 28362 00011534 C21800                          ret AND_KILL_FRAME(1)
 28363                                  
 28364                                  L_code_ptr_is_rational:
 28365                                          ENTER
 28365 00011537 C8000000            <1>  enter 0, 0
 28365 0001153B 4883E4F0            <1>  and rsp, ~15
 28366 0001153F 48837D1801                      cmp COUNT, 1
 28367 00011544 0F85BF0E0000                    jne L_error_arg_count_1
 28368 0001154A 488B4520                        mov rax, PARAM(0)
 28369 0001154E 803811                          cmp byte [rax], T_rational
 28370 00011551 750C                            jne .L_false
 28371 00011553 48B8-                           mov rax, sob_boolean_true
 28371 00011555 [0300000000000000] 
 28372 0001155D EB0A                            jmp .L_end
 28373                                  .L_false:
 28374 0001155F 48B8-                           mov rax, sob_boolean_false
 28374 00011561 [0200000000000000] 
 28375                                  .L_end:
 28376                                          LEAVE
 28376 00011569 C9                  <1>  leave
 28377 0001156A C21800                          ret AND_KILL_FRAME(1)
 28378                                  
 28379                                  L_code_ptr_is_boolean:
 28380                                          ENTER
 28380 0001156D C8000000            <1>  enter 0, 0
 28380 00011571 4883E4F0            <1>  and rsp, ~15
 28381 00011575 48837D1801                      cmp COUNT, 1
 28382 0001157A 0F85890E0000                    jne L_error_arg_count_1
 28383 00011580 488B4520                        mov rax, PARAM(0)
 28384 00011584 8A18                            mov bl, byte [rax]
 28385 00011586 80E308                          and bl, T_boolean
 28386 00011589 740C                            je .L_false
 28387 0001158B 48B8-                           mov rax, sob_boolean_true
 28387 0001158D [0300000000000000] 
 28388 00011595 EB0A                            jmp .L_end
 28389                                  .L_false:
 28390 00011597 48B8-                           mov rax, sob_boolean_false
 28390 00011599 [0200000000000000] 
 28391                                  .L_end:
 28392                                          LEAVE
 28392 000115A1 C9                  <1>  leave
 28393 000115A2 C21800                          ret AND_KILL_FRAME(1)
 28394                                          
 28395                                  L_code_ptr_is_number:
 28396                                          ENTER
 28396 000115A5 C8000000            <1>  enter 0, 0
 28396 000115A9 4883E4F0            <1>  and rsp, ~15
 28397 000115AD 48837D1801                      cmp COUNT, 1
 28398 000115B2 0F85510E0000                    jne L_error_arg_count_1
 28399 000115B8 488B4520                        mov rax, PARAM(0)
 28400 000115BC 8A18                            mov bl, byte [rax]
 28401 000115BE 80E310                          and bl, T_number
 28402 000115C1 740C                            je .L_false
 28403 000115C3 48B8-                           mov rax, sob_boolean_true
 28403 000115C5 [0300000000000000] 
 28404 000115CD EB0A                            jmp .L_end
 28405                                  .L_false:
 28406 000115CF 48B8-                           mov rax, sob_boolean_false
 28406 000115D1 [0200000000000000] 
 28407                                  .L_end:
 28408                                          LEAVE
 28408 000115D9 C9                  <1>  leave
 28409 000115DA C21800                          ret AND_KILL_FRAME(1)
 28410                                          
 28411                                  L_code_ptr_is_collection:
 28412                                          ENTER
 28412 000115DD C8000000            <1>  enter 0, 0
 28412 000115E1 4883E4F0            <1>  and rsp, ~15
 28413 000115E5 48837D1801                      cmp COUNT, 1
 28414 000115EA 0F85190E0000                    jne L_error_arg_count_1
 28415 000115F0 488B4520                        mov rax, PARAM(0)
 28416 000115F4 8A18                            mov bl, byte [rax]
 28417 000115F6 80E320                          and bl, T_collection
 28418 000115F9 740C                            je .L_false
 28419 000115FB 48B8-                           mov rax, sob_boolean_true
 28419 000115FD [0300000000000000] 
 28420 00011605 EB0A                            jmp .L_end
 28421                                  .L_false:
 28422 00011607 48B8-                           mov rax, sob_boolean_false
 28422 00011609 [0200000000000000] 
 28423                                  .L_end:
 28424                                          LEAVE
 28424 00011611 C9                  <1>  leave
 28425 00011612 C21800                          ret AND_KILL_FRAME(1)
 28426                                  
 28427                                  L_code_ptr_cons:
 28428                                          ENTER
 28428 00011615 C8000000            <1>  enter 0, 0
 28428 00011619 4883E4F0            <1>  and rsp, ~15
 28429 0001161D 48837D1802                      cmp COUNT, 2
 28430 00011622 0F85160E0000                    jne L_error_arg_count_2
 28431 00011628 BF11000000                      mov rdi, (1 + 8 + 8)
 28432 0001162D E8E4F6FFFF                      call malloc
 28433 00011632 C60021                          mov byte [rax], T_pair
 28434 00011635 488B5D20                        mov rbx, PARAM(0)
 28435 00011639 48895801                        mov SOB_PAIR_CAR(rax), rbx
 28436 0001163D 488B5D28                        mov rbx, PARAM(1)
 28437 00011641 48895809                        mov SOB_PAIR_CDR(rax), rbx
 28438                                          LEAVE
 28438 00011645 C9                  <1>  leave
 28439 00011646 C22000                          ret AND_KILL_FRAME(2)
 28440                                  
 28441                                  L_code_ptr_display_sexpr:
 28442                                          ENTER
 28442 00011649 C8000000            <1>  enter 0, 0
 28442 0001164D 4883E4F0            <1>  and rsp, ~15
 28443 00011651 48837D1801                      cmp COUNT, 1
 28444 00011656 0F85AD0D0000                    jne L_error_arg_count_1
 28445 0001165C 488B7D20                        mov rdi, PARAM(0)
 28446 00011660 E8CCF6FFFF                      call print_sexpr
 28447 00011665 48B8-                           mov rax, sob_void
 28447 00011667 [0000000000000000] 
 28448                                          LEAVE
 28448 0001166F C9                  <1>  leave
 28449 00011670 C21800                          ret AND_KILL_FRAME(1)
 28450                                  
 28451                                  L_code_ptr_write_char:
 28452                                          ENTER
 28452 00011673 C8000000            <1>  enter 0, 0
 28452 00011677 4883E4F0            <1>  and rsp, ~15
 28453 0001167B 48837D1801                      cmp COUNT, 1
 28454 00011680 0F85830D0000                    jne L_error_arg_count_1
 28455 00011686 488B4520                        mov rax, PARAM(0)
 28456                                          assert_char(rax)
 28456 0001168A 803802              <1>  cmp byte [%1], %2
 28456 0001168D 0F854A0E0000        <1>  jne L_error_incorrect_type
 28457 00011693 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 28458 00011696 4825FF000000                    and rax, 255
 28459 0001169C 48BF-                           mov rdi, fmt_char
 28459 0001169E [A704000000000000] 
 28460 000116A6 4889C6                          mov rsi, rax
 28461 000116A9 B800000000                      mov rax, 0
 28462                                  	ENTER
 28462 000116AE C8000000            <1>  enter 0, 0
 28462 000116B2 4883E4F0            <1>  and rsp, ~15
 28463 000116B6 E8(00000000)                    call printf
 28464                                  	LEAVE
 28464 000116BB C9                  <1>  leave
 28465 000116BC 48B8-                           mov rax, sob_void
 28465 000116BE [0000000000000000] 
 28466                                          LEAVE
 28466 000116C6 C9                  <1>  leave
 28467 000116C7 C21800                          ret AND_KILL_FRAME(1)
 28468                                  
 28469                                  L_code_ptr_car:
 28470                                          ENTER
 28470 000116CA C8000000            <1>  enter 0, 0
 28470 000116CE 4883E4F0            <1>  and rsp, ~15
 28471 000116D2 48837D1801                      cmp COUNT, 1
 28472 000116D7 0F852C0D0000                    jne L_error_arg_count_1
 28473 000116DD 488B4520                        mov rax, PARAM(0)
 28474                                          assert_pair(rax)
 28474 000116E1 803821              <1>  cmp byte [%1], %2
 28474 000116E4 0F85F30D0000        <1>  jne L_error_incorrect_type
 28475 000116EA 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 28476                                          LEAVE
 28476 000116EE C9                  <1>  leave
 28477 000116EF C21800                          ret AND_KILL_FRAME(1)
 28478                                          
 28479                                  L_code_ptr_cdr:
 28480                                          ENTER
 28480 000116F2 C8000000            <1>  enter 0, 0
 28480 000116F6 4883E4F0            <1>  and rsp, ~15
 28481 000116FA 48837D1801                      cmp COUNT, 1
 28482 000116FF 0F85040D0000                    jne L_error_arg_count_1
 28483 00011705 488B4520                        mov rax, PARAM(0)
 28484                                          assert_pair(rax)
 28484 00011709 803821              <1>  cmp byte [%1], %2
 28484 0001170C 0F85CB0D0000        <1>  jne L_error_incorrect_type
 28485 00011712 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 28486                                          LEAVE
 28486 00011716 C9                  <1>  leave
 28487 00011717 C21800                          ret AND_KILL_FRAME(1)
 28488                                          
 28489                                  L_code_ptr_string_length:
 28490                                          ENTER
 28490 0001171A C8000000            <1>  enter 0, 0
 28490 0001171E 4883E4F0            <1>  and rsp, ~15
 28491 00011722 48837D1801                      cmp COUNT, 1
 28492 00011727 0F85DC0C0000                    jne L_error_arg_count_1
 28493 0001172D 488B4520                        mov rax, PARAM(0)
 28494                                          assert_string(rax)
 28494 00011731 803803              <1>  cmp byte [%1], %2
 28494 00011734 0F85A30D0000        <1>  jne L_error_incorrect_type
 28495 0001173A 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 28496 0001173E E83A0C0000                      call make_integer
 28497                                          LEAVE
 28497 00011743 C9                  <1>  leave
 28498 00011744 C21800                          ret AND_KILL_FRAME(1)
 28499                                  
 28500                                  L_code_ptr_vector_length:
 28501                                          ENTER
 28501 00011747 C8000000            <1>  enter 0, 0
 28501 0001174B 4883E4F0            <1>  and rsp, ~15
 28502 0001174F 48837D1801                      cmp COUNT, 1
 28503 00011754 0F85AF0C0000                    jne L_error_arg_count_1
 28504 0001175A 488B4520                        mov rax, PARAM(0)
 28505                                          assert_vector(rax)
 28505 0001175E 803822              <1>  cmp byte [%1], %2
 28505 00011761 0F85760D0000        <1>  jne L_error_incorrect_type
 28506 00011767 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 28507 0001176B E80D0C0000                      call make_integer
 28508                                          LEAVE
 28508 00011770 C9                  <1>  leave
 28509 00011771 C21800                          ret AND_KILL_FRAME(1)
 28510                                  
 28511                                  L_code_ptr_real_to_integer:
 28512                                          ENTER
 28512 00011774 C8000000            <1>  enter 0, 0
 28512 00011778 4883E4F0            <1>  and rsp, ~15
 28513 0001177C 48837D1801                      cmp COUNT, 1
 28514 00011781 0F85820C0000                    jne L_error_arg_count_1
 28515 00011787 488B5D20                        mov rbx, PARAM(0)
 28516                                          assert_real(rbx)
 28516 0001178B 803B12              <1>  cmp byte [%1], %2
 28516 0001178E 0F85490D0000        <1>  jne L_error_incorrect_type
 28517 00011794 F20F104301                      movsd xmm0, qword [rbx + 1]
 28518 00011799 F2480F2CF8                      cvttsd2si rdi, xmm0
 28519 0001179E E8DA0B0000                      call make_integer
 28520                                          LEAVE
 28520 000117A3 C9                  <1>  leave
 28521 000117A4 C21800                          ret AND_KILL_FRAME(1)
 28522                                  
 28523                                  L_code_ptr_exit:
 28524                                          ENTER
 28524 000117A7 C8000000            <1>  enter 0, 0
 28524 000117AB 4883E4F0            <1>  and rsp, ~15
 28525 000117AF 48837D1800                      cmp COUNT, 0
 28526 000117B4 0F851A0C0000                    jne L_error_arg_count_0
 28527 000117BA B800000000                      mov rax, 0
 28528 000117BF E8(00000000)                    call exit
 28529                                  
 28530                                  L_code_ptr_integer_to_real:
 28531                                          ENTER
 28531 000117C4 C8000000            <1>  enter 0, 0
 28531 000117C8 4883E4F0            <1>  and rsp, ~15
 28532 000117CC 48837D1801                      cmp COUNT, 1
 28533 000117D1 0F85320C0000                    jne L_error_arg_count_1
 28534 000117D7 488B4520                        mov rax, PARAM(0)
 28535                                          assert_integer(rax)
 28535                              <1>  assert_rational(%1)
 28535 000117DB 803811              <2>  cmp byte [%1], %2
 28535 000117DE 0F85F90C0000        <2>  jne L_error_incorrect_type
 28535 000117E4 4883780901          <1>  cmp qword [%1 + 1 + 8], 1
 28535 000117E9 0F85EE0C0000        <1>  jne L_error_incorrect_type
 28536 000117EF FF7001                          push qword [rax + 1]
 28537 000117F2 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 28538 000117F8 E8640B0000                      call make_real
 28539                                          LEAVE
 28539 000117FD C9                  <1>  leave
 28540 000117FE C21800                          ret AND_KILL_FRAME(1)
 28541                                  
 28542                                  L_code_ptr_rational_to_real:
 28543                                          ENTER
 28543 00011801 C8000000            <1>  enter 0, 0
 28543 00011805 4883E4F0            <1>  and rsp, ~15
 28544 00011809 48837D1801                      cmp COUNT, 1
 28545 0001180E 0F85F50B0000                    jne L_error_arg_count_1
 28546 00011814 488B4520                        mov rax, PARAM(0)
 28547                                          assert_rational(rax)
 28547 00011818 803811              <1>  cmp byte [%1], %2
 28547 0001181B 0F85BC0C0000        <1>  jne L_error_incorrect_type
 28548 00011821 FF7001                          push qword [rax + 1]
 28549 00011824 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 28550 0001182A FF7009                          push qword [rax + 1 + 8]
 28551 0001182D F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 28552 00011833 F20F5EC1                        divsd xmm0, xmm1
 28553 00011837 E8250B0000                      call make_real
 28554                                          LEAVE
 28554 0001183C C9                  <1>  leave
 28555 0001183D C21800                          ret AND_KILL_FRAME(1)
 28556                                  
 28557                                  L_code_ptr_char_to_integer:
 28558                                          ENTER
 28558 00011840 C8000000            <1>  enter 0, 0
 28558 00011844 4883E4F0            <1>  and rsp, ~15
 28559 00011848 48837D1801                      cmp COUNT, 1
 28560 0001184D 0F85B60B0000                    jne L_error_arg_count_1
 28561 00011853 488B4520                        mov rax, PARAM(0)
 28562                                          assert_char(rax)
 28562 00011857 803802              <1>  cmp byte [%1], %2
 28562 0001185A 0F857D0C0000        <1>  jne L_error_incorrect_type
 28563 00011860 8A4001                          mov al, byte [rax + 1]
 28564 00011863 4825FF000000                    and rax, 255
 28565 00011869 4889C7                          mov rdi, rax
 28566 0001186C E80C0B0000                      call make_integer
 28567                                          LEAVE
 28567 00011871 C9                  <1>  leave
 28568 00011872 C21800                          ret AND_KILL_FRAME(1)
 28569                                  
 28570                                  L_code_ptr_integer_to_char:
 28571                                          ENTER
 28571 00011875 C8000000            <1>  enter 0, 0
 28571 00011879 4883E4F0            <1>  and rsp, ~15
 28572 0001187D 48837D1801                      cmp COUNT, 1
 28573 00011882 0F85810B0000                    jne L_error_arg_count_1
 28574 00011888 488B4520                        mov rax, PARAM(0)
 28575                                          assert_integer(rax)
 28575                              <1>  assert_rational(%1)
 28575 0001188C 803811              <2>  cmp byte [%1], %2
 28575 0001188F 0F85480C0000        <2>  jne L_error_incorrect_type
 28575 00011895 4883780901          <1>  cmp qword [%1 + 1 + 8], 1
 28575 0001189A 0F853D0C0000        <1>  jne L_error_incorrect_type
 28576 000118A0 488B5801                        mov rbx, qword [rax + 1]
 28577 000118A4 4883FB00                        cmp rbx, 0
 28578 000118A8 0F8EF50A0000                    jle L_error_integer_range
 28579 000118AE 4881FB00010000                  cmp rbx, 256
 28580 000118B5 0F8DE80A0000                    jge L_error_integer_range
 28581 000118BB BF02000000                      mov rdi, (1 + 1)
 28582 000118C0 E851F4FFFF                      call malloc
 28583 000118C5 C60002                          mov byte [rax], T_char
 28584 000118C8 885801                          mov byte [rax + 1], bl
 28585                                          LEAVE
 28585 000118CB C9                  <1>  leave
 28586 000118CC C21800                          ret AND_KILL_FRAME(1)
 28587                                  
 28588                                  L_code_ptr_trng:
 28589                                          ENTER
 28589 000118CF C8000000            <1>  enter 0, 0
 28589 000118D3 4883E4F0            <1>  and rsp, ~15
 28590 000118D7 48837D1800                      cmp COUNT, 0
 28591 000118DC 0F85F20A0000                    jne L_error_arg_count_0
 28592 000118E2 480FC7F7                        rdrand rdi
 28593 000118E6 48D1EF                          shr rdi, 1
 28594 000118E9 E88F0A0000                      call make_integer
 28595                                          LEAVE
 28595 000118EE C9                  <1>  leave
 28596 000118EF C21000                          ret AND_KILL_FRAME(0)
 28597                                  
 28598                                  L_code_ptr_is_zero:
 28599                                          ENTER
 28599 000118F2 C8000000            <1>  enter 0, 0
 28599 000118F6 4883E4F0            <1>  and rsp, ~15
 28600 000118FA 48837D1801                      cmp COUNT, 1
 28601 000118FF 0F85040B0000                    jne L_error_arg_count_1
 28602 00011905 488B4520                        mov rax, PARAM(0)
 28603 00011909 803811                          cmp byte [rax], T_rational
 28604 0001190C 740A                            je .L_rational
 28605 0001190E 803812                          cmp byte [rax], T_real
 28606 00011911 740E                            je .L_real
 28607 00011913 E9C50B0000                      jmp L_error_incorrect_type
 28608                                  .L_rational:
 28609 00011918 4883780100                      cmp qword [rax + 1], 0
 28610 0001191D 7420                            je .L_zero
 28611 0001191F EB12                            jmp .L_not_zero
 28612                                  .L_real:
 28613 00011921 660FEFC0                        pxor xmm0, xmm0
 28614 00011925 FF7001                          push qword [rax + 1]
 28615 00011928 F20F100C24                      movsd xmm1, qword [rsp]
 28616 0001192D 660F2EC1                        ucomisd xmm0, xmm1
 28617 00011931 740C                            je .L_zero
 28618                                  .L_not_zero:
 28619 00011933 48B8-                           mov rax, sob_boolean_false
 28619 00011935 [0200000000000000] 
 28620 0001193D EB0A                            jmp .L_end
 28621                                  .L_zero:
 28622 0001193F 48B8-                           mov rax, sob_boolean_true
 28622 00011941 [0300000000000000] 
 28623                                  .L_end:
 28624                                          LEAVE
 28624 00011949 C9                  <1>  leave
 28625 0001194A C21800                          ret AND_KILL_FRAME(1)
 28626                                  
 28627                                  L_code_ptr_is_integer:
 28628                                          ENTER
 28628 0001194D C8000000            <1>  enter 0, 0
 28628 00011951 4883E4F0            <1>  and rsp, ~15
 28629 00011955 48837D1801                      cmp COUNT, 1
 28630 0001195A 0F85A90A0000                    jne L_error_arg_count_1
 28631 00011960 488B4520                        mov rax, PARAM(0)
 28632 00011964 803811                          cmp byte [rax], T_rational
 28633 00011967 7513                            jne .L_false
 28634 00011969 4883780901                      cmp qword [rax + 1 + 8], 1
 28635 0001196E 750C                            jne .L_false
 28636 00011970 48B8-                           mov rax, sob_boolean_true
 28636 00011972 [0300000000000000] 
 28637 0001197A EB0A                            jmp .L_exit
 28638                                  .L_false:
 28639 0001197C 48B8-                           mov rax, sob_boolean_false
 28639 0001197E [0200000000000000] 
 28640                                  .L_exit:
 28641                                          LEAVE
 28641 00011986 C9                  <1>  leave
 28642 00011987 C21800                          ret AND_KILL_FRAME(1)
 28643                                  
 28644                                  L_code_ptr_raw_bin_add_rr:
 28645                                          ENTER
 28645 0001198A C8000000            <1>  enter 0, 0
 28645 0001198E 4883E4F0            <1>  and rsp, ~15
 28646 00011992 48837D1802                      cmp COUNT, 2
 28647 00011997 0F85A10A0000                    jne L_error_arg_count_2
 28648 0001199D 488B5D20                        mov rbx, PARAM(0)
 28649                                          assert_real(rbx)
 28649 000119A1 803B12              <1>  cmp byte [%1], %2
 28649 000119A4 0F85330B0000        <1>  jne L_error_incorrect_type
 28650 000119AA 488B4D28                        mov rcx, PARAM(1)
 28651                                          assert_real(rcx)
 28651 000119AE 803912              <1>  cmp byte [%1], %2
 28651 000119B1 0F85260B0000        <1>  jne L_error_incorrect_type
 28652 000119B7 F20F104301                      movsd xmm0, qword [rbx + 1]
 28653 000119BC F20F104901                      movsd xmm1, qword [rcx + 1]
 28654 000119C1 F20F58C1                        addsd xmm0, xmm1
 28655 000119C5 E897090000                      call make_real
 28656                                          LEAVE
 28656 000119CA C9                  <1>  leave
 28657 000119CB C22000                          ret AND_KILL_FRAME(2)
 28658                                  
 28659                                  L_code_ptr_raw_bin_sub_rr:
 28660                                          ENTER
 28660 000119CE C8000000            <1>  enter 0, 0
 28660 000119D2 4883E4F0            <1>  and rsp, ~15
 28661 000119D6 48837D1802                      cmp COUNT, 2
 28662 000119DB 0F855D0A0000                    jne L_error_arg_count_2
 28663 000119E1 488B5D20                        mov rbx, PARAM(0)
 28664                                          assert_real(rbx)
 28664 000119E5 803B12              <1>  cmp byte [%1], %2
 28664 000119E8 0F85EF0A0000        <1>  jne L_error_incorrect_type
 28665 000119EE 488B4D28                        mov rcx, PARAM(1)
 28666                                          assert_real(rcx)
 28666 000119F2 803912              <1>  cmp byte [%1], %2
 28666 000119F5 0F85E20A0000        <1>  jne L_error_incorrect_type
 28667 000119FB F20F104301                      movsd xmm0, qword [rbx + 1]
 28668 00011A00 F20F104901                      movsd xmm1, qword [rcx + 1]
 28669 00011A05 F20F5CC1                        subsd xmm0, xmm1
 28670 00011A09 E853090000                      call make_real
 28671                                          LEAVE
 28671 00011A0E C9                  <1>  leave
 28672 00011A0F C22000                          ret AND_KILL_FRAME(2)
 28673                                  
 28674                                  L_code_ptr_raw_bin_mul_rr:
 28675                                          ENTER
 28675 00011A12 C8000000            <1>  enter 0, 0
 28675 00011A16 4883E4F0            <1>  and rsp, ~15
 28676 00011A1A 48837D1802                      cmp COUNT, 2
 28677 00011A1F 0F85190A0000                    jne L_error_arg_count_2
 28678 00011A25 488B5D20                        mov rbx, PARAM(0)
 28679                                          assert_real(rbx)
 28679 00011A29 803B12              <1>  cmp byte [%1], %2
 28679 00011A2C 0F85AB0A0000        <1>  jne L_error_incorrect_type
 28680 00011A32 488B4D28                        mov rcx, PARAM(1)
 28681                                          assert_real(rcx)
 28681 00011A36 803912              <1>  cmp byte [%1], %2
 28681 00011A39 0F859E0A0000        <1>  jne L_error_incorrect_type
 28682 00011A3F F20F104301                      movsd xmm0, qword [rbx + 1]
 28683 00011A44 F20F104901                      movsd xmm1, qword [rcx + 1]
 28684 00011A49 F20F59C1                        mulsd xmm0, xmm1
 28685 00011A4D E80F090000                      call make_real
 28686                                          LEAVE
 28686 00011A52 C9                  <1>  leave
 28687 00011A53 C22000                          ret AND_KILL_FRAME(2)
 28688                                  
 28689                                  L_code_ptr_raw_bin_div_rr:
 28690                                          ENTER
 28690 00011A56 C8000000            <1>  enter 0, 0
 28690 00011A5A 4883E4F0            <1>  and rsp, ~15
 28691 00011A5E 48837D1802                      cmp COUNT, 2
 28692 00011A63 0F85D5090000                    jne L_error_arg_count_2
 28693 00011A69 488B5D20                        mov rbx, PARAM(0)
 28694                                          assert_real(rbx)
 28694 00011A6D 803B12              <1>  cmp byte [%1], %2
 28694 00011A70 0F85670A0000        <1>  jne L_error_incorrect_type
 28695 00011A76 488B4D28                        mov rcx, PARAM(1)
 28696                                          assert_real(rcx)
 28696 00011A7A 803912              <1>  cmp byte [%1], %2
 28696 00011A7D 0F855A0A0000        <1>  jne L_error_incorrect_type
 28697 00011A83 F20F104301                      movsd xmm0, qword [rbx + 1]
 28698 00011A88 F20F104901                      movsd xmm1, qword [rcx + 1]
 28699 00011A8D 660FEFD2                        pxor xmm2, xmm2
 28700 00011A91 660F2ECA                        ucomisd xmm1, xmm2
 28701 00011A95 0F84730A0000                    je L_error_division_by_zero
 28702 00011A9B F20F5EC1                        divsd xmm0, xmm1
 28703 00011A9F E8BD080000                      call make_real
 28704                                          LEAVE
 28704 00011AA4 C9                  <1>  leave
 28705 00011AA5 C22000                          ret AND_KILL_FRAME(2)
 28706                                  
 28707                                  L_code_ptr_raw_bin_add_qq:
 28708                                          ENTER
 28708 00011AA8 C8000000            <1>  enter 0, 0
 28708 00011AAC 4883E4F0            <1>  and rsp, ~15
 28709 00011AB0 48837D1802                      cmp COUNT, 2
 28710 00011AB5 0F8583090000                    jne L_error_arg_count_2
 28711 00011ABB 4C8B4520                        mov r8, PARAM(0)
 28712                                          assert_rational(r8)
 28712 00011ABF 41803811            <1>  cmp byte [%1], %2
 28712 00011AC3 0F85140A0000        <1>  jne L_error_incorrect_type
 28713 00011AC9 4C8B4D28                        mov r9, PARAM(1)
 28714                                          assert_rational(r9)
 28714 00011ACD 41803911            <1>  cmp byte [%1], %2
 28714 00011AD1 0F85060A0000        <1>  jne L_error_incorrect_type
 28715 00011AD7 498B4001                        mov rax, qword [r8 + 1] ; num1
 28716 00011ADB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 28717 00011ADF 4899                            cqo
 28718 00011AE1 48F7EB                          imul rbx
 28719 00011AE4 4889C6                          mov rsi, rax
 28720 00011AE7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 28721 00011AEB 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 28722 00011AEF 4899                            cqo
 28723 00011AF1 48F7EB                          imul rbx
 28724 00011AF4 4801C6                          add rsi, rax
 28725 00011AF7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 28726 00011AFB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 28727 00011AFF 4899                            cqo
 28728 00011B01 48F7EB                          imul rbx
 28729 00011B04 4889C7                          mov rdi, rax
 28730 00011B07 E827010000                      call normalize_rational
 28731                                          LEAVE
 28731 00011B0C C9                  <1>  leave
 28732 00011B0D C22000                          ret AND_KILL_FRAME(2)
 28733                                  
 28734                                  L_code_ptr_raw_bin_sub_qq:
 28735                                          ENTER
 28735 00011B10 C8000000            <1>  enter 0, 0
 28735 00011B14 4883E4F0            <1>  and rsp, ~15
 28736 00011B18 48837D1802                      cmp COUNT, 2
 28737 00011B1D 0F851B090000                    jne L_error_arg_count_2
 28738 00011B23 4C8B4520                        mov r8, PARAM(0)
 28739                                          assert_rational(r8)
 28739 00011B27 41803811            <1>  cmp byte [%1], %2
 28739 00011B2B 0F85AC090000        <1>  jne L_error_incorrect_type
 28740 00011B31 4C8B4D28                        mov r9, PARAM(1)
 28741                                          assert_rational(r9)
 28741 00011B35 41803911            <1>  cmp byte [%1], %2
 28741 00011B39 0F859E090000        <1>  jne L_error_incorrect_type
 28742 00011B3F 498B4001                        mov rax, qword [r8 + 1] ; num1
 28743 00011B43 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 28744 00011B47 4899                            cqo
 28745 00011B49 48F7EB                          imul rbx
 28746 00011B4C 4889C6                          mov rsi, rax
 28747 00011B4F 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 28748 00011B53 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 28749 00011B57 4899                            cqo
 28750 00011B59 48F7EB                          imul rbx
 28751 00011B5C 4829C6                          sub rsi, rax
 28752 00011B5F 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 28753 00011B63 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 28754 00011B67 4899                            cqo
 28755 00011B69 48F7EB                          imul rbx
 28756 00011B6C 4889C7                          mov rdi, rax
 28757 00011B6F E8BF000000                      call normalize_rational
 28758                                          LEAVE
 28758 00011B74 C9                  <1>  leave
 28759 00011B75 C22000                          ret AND_KILL_FRAME(2)
 28760                                  
 28761                                  L_code_ptr_raw_bin_mul_qq:
 28762                                          ENTER
 28762 00011B78 C8000000            <1>  enter 0, 0
 28762 00011B7C 4883E4F0            <1>  and rsp, ~15
 28763 00011B80 48837D1802                      cmp COUNT, 2
 28764 00011B85 0F85B3080000                    jne L_error_arg_count_2
 28765 00011B8B 4C8B4520                        mov r8, PARAM(0)
 28766                                          assert_rational(r8)
 28766 00011B8F 41803811            <1>  cmp byte [%1], %2
 28766 00011B93 0F8544090000        <1>  jne L_error_incorrect_type
 28767 00011B99 4C8B4D28                        mov r9, PARAM(1)
 28768                                          assert_rational(r9)
 28768 00011B9D 41803911            <1>  cmp byte [%1], %2
 28768 00011BA1 0F8536090000        <1>  jne L_error_incorrect_type
 28769 00011BA7 498B4001                        mov rax, qword [r8 + 1] ; num1
 28770 00011BAB 498B5901                        mov rbx, qword [r9 + 1] ; num2
 28771 00011BAF 4899                            cqo
 28772 00011BB1 48F7EB                          imul rbx
 28773 00011BB4 4889C6                          mov rsi, rax
 28774 00011BB7 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 28775 00011BBB 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 28776 00011BBF 4899                            cqo
 28777 00011BC1 48F7EB                          imul rbx
 28778 00011BC4 4889C7                          mov rdi, rax
 28779 00011BC7 E867000000                      call normalize_rational
 28780                                          LEAVE
 28780 00011BCC C9                  <1>  leave
 28781 00011BCD C22000                          ret AND_KILL_FRAME(2)
 28782                                          
 28783                                  L_code_ptr_raw_bin_div_qq:
 28784                                          ENTER
 28784 00011BD0 C8000000            <1>  enter 0, 0
 28784 00011BD4 4883E4F0            <1>  and rsp, ~15
 28785 00011BD8 48837D1802                      cmp COUNT, 2
 28786 00011BDD 0F855B080000                    jne L_error_arg_count_2
 28787 00011BE3 4C8B4520                        mov r8, PARAM(0)
 28788                                          assert_rational(r8)
 28788 00011BE7 41803811            <1>  cmp byte [%1], %2
 28788 00011BEB 0F85EC080000        <1>  jne L_error_incorrect_type
 28789 00011BF1 4C8B4D28                        mov r9, PARAM(1)
 28790                                          assert_rational(r9)
 28790 00011BF5 41803911            <1>  cmp byte [%1], %2
 28790 00011BF9 0F85DE080000        <1>  jne L_error_incorrect_type
 28791 00011BFF 4983790100                      cmp qword [r9 + 1], 0
 28792 00011C04 0F8404090000                    je L_error_division_by_zero
 28793 00011C0A 498B4001                        mov rax, qword [r8 + 1] ; num1
 28794 00011C0E 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 28795 00011C12 4899                            cqo
 28796 00011C14 48F7EB                          imul rbx
 28797 00011C17 4889C6                          mov rsi, rax
 28798 00011C1A 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 28799 00011C1E 498B5901                        mov rbx, qword [r9 + 1] ; num2
 28800 00011C22 4899                            cqo
 28801 00011C24 48F7EB                          imul rbx
 28802 00011C27 4889C7                          mov rdi, rax
 28803 00011C2A E804000000                      call normalize_rational
 28804                                          LEAVE
 28804 00011C2F C9                  <1>  leave
 28805 00011C30 C22000                          ret AND_KILL_FRAME(2)
 28806                                          
 28807                                  normalize_rational:
 28808 00011C33 56                              push rsi
 28809 00011C34 57                              push rdi
 28810 00011C35 E839000000                      call gcd
 28811 00011C3A 4889C3                          mov rbx, rax
 28812 00011C3D 58                              pop rax
 28813 00011C3E 4899                            cqo
 28814 00011C40 48F7FB                          idiv rbx
 28815 00011C43 4989C0                          mov r8, rax
 28816 00011C46 58                              pop rax
 28817 00011C47 4899                            cqo
 28818 00011C49 48F7FB                          idiv rbx
 28819 00011C4C 4989C1                          mov r9, rax
 28820 00011C4F BF11000000                      mov rdi, (1 + 8 + 8)
 28821 00011C54 E8BDF0FFFF                      call malloc
 28822 00011C59 C60011                          mov byte [rax], T_rational
 28823 00011C5C 4C894801                        mov qword [rax + 1], r9
 28824 00011C60 4C894009                        mov qword [rax + 1 + 8], r8
 28825 00011C64 C3                              ret
 28826                                  
 28827                                  iabs:
 28828 00011C65 4889F8                          mov rax, rdi
 28829 00011C68 4883F800                        cmp rax, 0
 28830 00011C6C 7C01                            jl .Lneg
 28831 00011C6E C3                              ret
 28832                                  .Lneg:
 28833 00011C6F 48F7D8                          neg rax
 28834 00011C72 C3                              ret
 28835                                  
 28836                                  gcd:
 28837 00011C73 E8EDFFFFFF                      call iabs
 28838 00011C78 4889C3                          mov rbx, rax
 28839 00011C7B 4889F7                          mov rdi, rsi
 28840 00011C7E E8E2FFFFFF                      call iabs
 28841 00011C83 4883F800                        cmp rax, 0
 28842 00011C87 7502                            jne .L0
 28843 00011C89 4893                            xchg rax, rbx
 28844                                  .L0:
 28845 00011C8B 4883FB00                        cmp rbx, 0
 28846 00011C8F 740C                            je .L1
 28847 00011C91 4899                            cqo
 28848 00011C93 48F7F3                          div rbx
 28849 00011C96 4889D0                          mov rax, rdx
 28850 00011C99 4893                            xchg rax, rbx
 28851 00011C9B EBEE                            jmp .L0
 28852                                  .L1:
 28853 00011C9D C3                              ret
 28854                                  
 28855                                  L_code_ptr_error:
 28856                                          ENTER
 28856 00011C9E C8000000            <1>  enter 0, 0
 28856 00011CA2 4883E4F0            <1>  and rsp, ~15
 28857 00011CA6 48837D1802                      cmp COUNT, 2
 28858 00011CAB 0F858D070000                    jne L_error_arg_count_2
 28859 00011CB1 488B7520                        mov rsi, PARAM(0)
 28860                                          assert_symbol(rsi)
 28860 00011CB5 803E04              <1>  cmp byte [%1], %2
 28860 00011CB8 0F851F080000        <1>  jne L_error_incorrect_type
 28861 00011CBE 488B7528                        mov rsi, PARAM(1)
 28862                                          assert_string(rsi)
 28862 00011CC2 803E03              <1>  cmp byte [%1], %2
 28862 00011CC5 0F8512080000        <1>  jne L_error_incorrect_type
 28863 00011CCB 48BF-                           mov rdi, fmt_scheme_error_part_1
 28863 00011CCD [DF05000000000000] 
 28864 00011CD5 B800000000                      mov rax, 0
 28865                                  	ENTER
 28865 00011CDA C8000000            <1>  enter 0, 0
 28865 00011CDE 4883E4F0            <1>  and rsp, ~15
 28866 00011CE2 E8(00000000)                    call printf
 28867                                  	LEAVE
 28867 00011CE7 C9                  <1>  leave
 28868 00011CE8 488B7D20                        mov rdi, PARAM(0)
 28869 00011CEC E840F0FFFF                      call print_sexpr
 28870 00011CF1 48BF-                           mov rdi, fmt_scheme_error_part_2
 28870 00011CF3 [F305000000000000] 
 28871 00011CFB B800000000                      mov rax, 0
 28872                                  	ENTER
 28872 00011D00 C8000000            <1>  enter 0, 0
 28872 00011D04 4883E4F0            <1>  and rsp, ~15
 28873 00011D08 E8(00000000)                    call printf
 28874                                  	LEAVE
 28874 00011D0D C9                  <1>  leave
 28875 00011D0E 488B4528                        mov rax, PARAM(1)       ; sob_string
 28876 00011D12 BE01000000                      mov rsi, 1              ; size = 1 byte
 28877 00011D17 488B5001                        mov rdx, qword [rax + 1] ; length
 28878 00011D1B 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 28879 00011D1F 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 28880 00011D27 E8(00000000)                    call fwrite
 28881 00011D2C 48BF-                           mov rdi, fmt_scheme_error_part_3
 28881 00011D2E [3506000000000000] 
 28882 00011D36 B800000000                      mov rax, 0
 28883                                  	ENTER
 28883 00011D3B C8000000            <1>  enter 0, 0
 28883 00011D3F 4883E4F0            <1>  and rsp, ~15
 28884 00011D43 E8(00000000)                    call printf
 28885                                  	LEAVE
 28885 00011D48 C9                  <1>  leave
 28886 00011D49 48C7C0F7FFFFFF                  mov rax, -9
 28887 00011D50 E8(00000000)                    call exit
 28888                                  
 28889                                  L_code_ptr_raw_less_than_rr:
 28890                                          ENTER
 28890 00011D55 C8000000            <1>  enter 0, 0
 28890 00011D59 4883E4F0            <1>  and rsp, ~15
 28891 00011D5D 48837D1802                      cmp COUNT, 2
 28892 00011D62 0F85D6060000                    jne L_error_arg_count_2
 28893 00011D68 488B7520                        mov rsi, PARAM(0)
 28894                                          assert_real(rsi)
 28894 00011D6C 803E12              <1>  cmp byte [%1], %2
 28894 00011D6F 0F8568070000        <1>  jne L_error_incorrect_type
 28895 00011D75 488B7D28                        mov rdi, PARAM(1)
 28896                                          assert_real(rdi)
 28896 00011D79 803F12              <1>  cmp byte [%1], %2
 28896 00011D7C 0F855B070000        <1>  jne L_error_incorrect_type
 28897 00011D82 F20F104601                      movsd xmm0, qword [rsi + 1]
 28898 00011D87 F20F104F01                      movsd xmm1, qword [rdi + 1]
 28899 00011D8C 660F2FC1                        comisd xmm0, xmm1
 28900 00011D90 730C                            jae .L_false
 28901 00011D92 48B8-                           mov rax, sob_boolean_true
 28901 00011D94 [0300000000000000] 
 28902 00011D9C EB0A                            jmp .L_exit
 28903                                  .L_false:
 28904 00011D9E 48B8-                           mov rax, sob_boolean_false
 28904 00011DA0 [0200000000000000] 
 28905                                  .L_exit:
 28906                                          LEAVE
 28906 00011DA8 C9                  <1>  leave
 28907 00011DA9 C22000                          ret AND_KILL_FRAME(2)
 28908                                          
 28909                                  L_code_ptr_raw_less_than_qq:
 28910                                          ENTER
 28910 00011DAC C8000000            <1>  enter 0, 0
 28910 00011DB0 4883E4F0            <1>  and rsp, ~15
 28911 00011DB4 48837D1802                      cmp COUNT, 2
 28912 00011DB9 0F857F060000                    jne L_error_arg_count_2
 28913 00011DBF 488B7520                        mov rsi, PARAM(0)
 28914                                          assert_rational(rsi)
 28914 00011DC3 803E11              <1>  cmp byte [%1], %2
 28914 00011DC6 0F8511070000        <1>  jne L_error_incorrect_type
 28915 00011DCC 488B7D28                        mov rdi, PARAM(1)
 28916                                          assert_rational(rdi)
 28916 00011DD0 803F11              <1>  cmp byte [%1], %2
 28916 00011DD3 0F8504070000        <1>  jne L_error_incorrect_type
 28917 00011DD9 488B4601                        mov rax, qword [rsi + 1] ; num1
 28918 00011DDD 4899                            cqo
 28919 00011DDF 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 28920 00011DE3 4889C1                          mov rcx, rax
 28921 00011DE6 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 28922 00011DEA 4899                            cqo
 28923 00011DEC 48F76F01                        imul qword [rdi + 1]          ; num2
 28924 00011DF0 4829C1                          sub rcx, rax
 28925 00011DF3 7D0C                            jge .L_false
 28926 00011DF5 48B8-                           mov rax, sob_boolean_true
 28926 00011DF7 [0300000000000000] 
 28927 00011DFF EB0A                            jmp .L_exit
 28928                                  .L_false:
 28929 00011E01 48B8-                           mov rax, sob_boolean_false
 28929 00011E03 [0200000000000000] 
 28930                                  .L_exit:
 28931                                          LEAVE
 28931 00011E0B C9                  <1>  leave
 28932 00011E0C C22000                          ret AND_KILL_FRAME(2)
 28933                                  
 28934                                  L_code_ptr_raw_equal_rr:
 28935                                          ENTER
 28935 00011E0F C8000000            <1>  enter 0, 0
 28935 00011E13 4883E4F0            <1>  and rsp, ~15
 28936 00011E17 48837D1802                      cmp COUNT, 2
 28937 00011E1C 0F851C060000                    jne L_error_arg_count_2
 28938 00011E22 488B7520                        mov rsi, PARAM(0)
 28939                                          assert_real(rsi)
 28939 00011E26 803E12              <1>  cmp byte [%1], %2
 28939 00011E29 0F85AE060000        <1>  jne L_error_incorrect_type
 28940 00011E2F 488B7D28                        mov rdi, PARAM(1)
 28941                                          assert_real(rdi)
 28941 00011E33 803F12              <1>  cmp byte [%1], %2
 28941 00011E36 0F85A1060000        <1>  jne L_error_incorrect_type
 28942 00011E3C F20F104601                      movsd xmm0, qword [rsi + 1]
 28943 00011E41 F20F104F01                      movsd xmm1, qword [rdi + 1]
 28944 00011E46 660F2FC1                        comisd xmm0, xmm1
 28945 00011E4A 750C                            jne .L_false
 28946 00011E4C 48B8-                           mov rax, sob_boolean_true
 28946 00011E4E [0300000000000000] 
 28947 00011E56 EB0A                            jmp .L_exit
 28948                                  .L_false:
 28949 00011E58 48B8-                           mov rax, sob_boolean_false
 28949 00011E5A [0200000000000000] 
 28950                                  .L_exit:
 28951                                          LEAVE
 28951 00011E62 C9                  <1>  leave
 28952 00011E63 C22000                          ret AND_KILL_FRAME(2)
 28953                                          
 28954                                  L_code_ptr_raw_equal_qq:
 28955                                          ENTER
 28955 00011E66 C8000000            <1>  enter 0, 0
 28955 00011E6A 4883E4F0            <1>  and rsp, ~15
 28956 00011E6E 48837D1802                      cmp COUNT, 2
 28957 00011E73 0F85C5050000                    jne L_error_arg_count_2
 28958 00011E79 488B7520                        mov rsi, PARAM(0)
 28959                                          assert_rational(rsi)
 28959 00011E7D 803E11              <1>  cmp byte [%1], %2
 28959 00011E80 0F8557060000        <1>  jne L_error_incorrect_type
 28960 00011E86 488B7D28                        mov rdi, PARAM(1)
 28961                                          assert_rational(rdi)
 28961 00011E8A 803F11              <1>  cmp byte [%1], %2
 28961 00011E8D 0F854A060000        <1>  jne L_error_incorrect_type
 28962 00011E93 488B4601                        mov rax, qword [rsi + 1] ; num1
 28963 00011E97 4899                            cqo
 28964 00011E99 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 28965 00011E9D 4889C1                          mov rcx, rax
 28966 00011EA0 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 28967 00011EA4 4899                            cqo
 28968 00011EA6 48F76F01                        imul qword [rdi + 1]          ; num2
 28969 00011EAA 4829C1                          sub rcx, rax
 28970 00011EAD 750C                            jne .L_false
 28971 00011EAF 48B8-                           mov rax, sob_boolean_true
 28971 00011EB1 [0300000000000000] 
 28972 00011EB9 EB0A                            jmp .L_exit
 28973                                  .L_false:
 28974 00011EBB 48B8-                           mov rax, sob_boolean_false
 28974 00011EBD [0200000000000000] 
 28975                                  .L_exit:
 28976                                          LEAVE
 28976 00011EC5 C9                  <1>  leave
 28977 00011EC6 C22000                          ret AND_KILL_FRAME(2)
 28978                                  
 28979                                  L_code_ptr_quotient:
 28980                                          ENTER
 28980 00011EC9 C8000000            <1>  enter 0, 0
 28980 00011ECD 4883E4F0            <1>  and rsp, ~15
 28981 00011ED1 48837D1802                      cmp COUNT, 2
 28982 00011ED6 0F8562050000                    jne L_error_arg_count_2
 28983 00011EDC 488B7520                        mov rsi, PARAM(0)
 28984                                          assert_integer(rsi)
 28984                              <1>  assert_rational(%1)
 28984 00011EE0 803E11              <2>  cmp byte [%1], %2
 28984 00011EE3 0F85F4050000        <2>  jne L_error_incorrect_type
 28984 00011EE9 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 28984 00011EEE 0F85E9050000        <1>  jne L_error_incorrect_type
 28985 00011EF4 488B7D28                        mov rdi, PARAM(1)
 28986                                          assert_integer(rdi)
 28986                              <1>  assert_rational(%1)
 28986 00011EF8 803F11              <2>  cmp byte [%1], %2
 28986 00011EFB 0F85DC050000        <2>  jne L_error_incorrect_type
 28986 00011F01 48837F0901          <1>  cmp qword [%1 + 1 + 8], 1
 28986 00011F06 0F85D1050000        <1>  jne L_error_incorrect_type
 28987 00011F0C 488B4601                        mov rax, qword [rsi + 1]
 28988 00011F10 488B5F01                        mov rbx, qword [rdi + 1]
 28989 00011F14 4883FB00                        cmp rbx, 0
 28990 00011F18 0F84F0050000                    je L_error_division_by_zero
 28991 00011F1E 4899                            cqo
 28992 00011F20 48F7FB                          idiv rbx
 28993 00011F23 4889C7                          mov rdi, rax
 28994 00011F26 E852040000                      call make_integer
 28995                                          LEAVE
 28995 00011F2B C9                  <1>  leave
 28996 00011F2C C22000                          ret AND_KILL_FRAME(2)
 28997                                          
 28998                                  L_code_ptr_remainder:
 28999                                          ENTER
 28999 00011F2F C8000000            <1>  enter 0, 0
 28999 00011F33 4883E4F0            <1>  and rsp, ~15
 29000 00011F37 48837D1802                      cmp COUNT, 2
 29001 00011F3C 0F85FC040000                    jne L_error_arg_count_2
 29002 00011F42 488B7520                        mov rsi, PARAM(0)
 29003                                          assert_integer(rsi)
 29003                              <1>  assert_rational(%1)
 29003 00011F46 803E11              <2>  cmp byte [%1], %2
 29003 00011F49 0F858E050000        <2>  jne L_error_incorrect_type
 29003 00011F4F 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 29003 00011F54 0F8583050000        <1>  jne L_error_incorrect_type
 29004 00011F5A 488B7D28                        mov rdi, PARAM(1)
 29005                                          assert_integer(rdi)
 29005                              <1>  assert_rational(%1)
 29005 00011F5E 803F11              <2>  cmp byte [%1], %2
 29005 00011F61 0F8576050000        <2>  jne L_error_incorrect_type
 29005 00011F67 48837F0901          <1>  cmp qword [%1 + 1 + 8], 1
 29005 00011F6C 0F856B050000        <1>  jne L_error_incorrect_type
 29006 00011F72 488B4601                        mov rax, qword [rsi + 1]
 29007 00011F76 488B5F01                        mov rbx, qword [rdi + 1]
 29008 00011F7A 4883FB00                        cmp rbx, 0
 29009 00011F7E 0F848A050000                    je L_error_division_by_zero
 29010 00011F84 4899                            cqo
 29011 00011F86 48F7FB                          idiv rbx
 29012 00011F89 4889D7                          mov rdi, rdx
 29013 00011F8C E8EC030000                      call make_integer
 29014                                          LEAVE
 29014 00011F91 C9                  <1>  leave
 29015 00011F92 C22000                          ret AND_KILL_FRAME(2)
 29016                                  
 29017                                  L_code_ptr_set_car:
 29018                                          ENTER
 29018 00011F95 C8000000            <1>  enter 0, 0
 29018 00011F99 4883E4F0            <1>  and rsp, ~15
 29019 00011F9D 48837D1802                      cmp COUNT, 2
 29020 00011FA2 0F8596040000                    jne L_error_arg_count_2
 29021 00011FA8 488B4520                        mov rax, PARAM(0)
 29022                                          assert_pair(rax)
 29022 00011FAC 803821              <1>  cmp byte [%1], %2
 29022 00011FAF 0F8528050000        <1>  jne L_error_incorrect_type
 29023 00011FB5 488B5D28                        mov rbx, PARAM(1)
 29024 00011FB9 48895801                        mov SOB_PAIR_CAR(rax), rbx
 29025 00011FBD 48B8-                           mov rax, sob_void
 29025 00011FBF [0000000000000000] 
 29026                                          LEAVE
 29026 00011FC7 C9                  <1>  leave
 29027 00011FC8 C22000                          ret AND_KILL_FRAME(2)
 29028                                  
 29029                                  L_code_ptr_set_cdr:
 29030                                          ENTER
 29030 00011FCB C8000000            <1>  enter 0, 0
 29030 00011FCF 4883E4F0            <1>  and rsp, ~15
 29031 00011FD3 48837D1802                      cmp COUNT, 2
 29032 00011FD8 0F8560040000                    jne L_error_arg_count_2
 29033 00011FDE 488B4520                        mov rax, PARAM(0)
 29034                                          assert_pair(rax)
 29034 00011FE2 803821              <1>  cmp byte [%1], %2
 29034 00011FE5 0F85F2040000        <1>  jne L_error_incorrect_type
 29035 00011FEB 488B5D28                        mov rbx, PARAM(1)
 29036 00011FEF 48895809                        mov SOB_PAIR_CDR(rax), rbx
 29037 00011FF3 48B8-                           mov rax, sob_void
 29037 00011FF5 [0000000000000000] 
 29038                                          LEAVE
 29038 00011FFD C9                  <1>  leave
 29039 00011FFE C22000                          ret AND_KILL_FRAME(2)
 29040                                  
 29041                                  L_code_ptr_string_ref:
 29042                                          ENTER
 29042 00012001 C8000000            <1>  enter 0, 0
 29042 00012005 4883E4F0            <1>  and rsp, ~15
 29043 00012009 48837D1802                      cmp COUNT, 2
 29044 0001200E 0F852A040000                    jne L_error_arg_count_2
 29045 00012014 488B7D20                        mov rdi, PARAM(0)
 29046                                          assert_string(rdi)
 29046 00012018 803F03              <1>  cmp byte [%1], %2
 29046 0001201B 0F85BC040000        <1>  jne L_error_incorrect_type
 29047 00012021 488B7528                        mov rsi, PARAM(1)
 29048                                          assert_integer(rsi)
 29048                              <1>  assert_rational(%1)
 29048 00012025 803E11              <2>  cmp byte [%1], %2
 29048 00012028 0F85AF040000        <2>  jne L_error_incorrect_type
 29048 0001202E 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 29048 00012033 0F85A4040000        <1>  jne L_error_incorrect_type
 29049 00012039 488B5701                        mov rdx, qword [rdi + 1]
 29050 0001203D 488B4E01                        mov rcx, qword [rsi + 1]
 29051 00012041 4839D1                          cmp rcx, rdx
 29052 00012044 0F8D59030000                    jge L_error_integer_range
 29053 0001204A 4883F900                        cmp rcx, 0
 29054 0001204E 0F8C4F030000                    jl L_error_integer_range
 29055 00012054 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 29056 00012058 BF02000000                      mov rdi, 2
 29057 0001205D E8B4ECFFFF                      call malloc
 29058 00012062 C60002                          mov byte [rax], T_char
 29059 00012065 885801                          mov byte [rax + 1], bl
 29060                                          LEAVE
 29060 00012068 C9                  <1>  leave
 29061 00012069 C22000                          ret AND_KILL_FRAME(2)
 29062                                  
 29063                                  L_code_ptr_vector_ref:
 29064                                          ENTER
 29064 0001206C C8000000            <1>  enter 0, 0
 29064 00012070 4883E4F0            <1>  and rsp, ~15
 29065 00012074 48837D1802                      cmp COUNT, 2
 29066 00012079 0F85BF030000                    jne L_error_arg_count_2
 29067 0001207F 488B7D20                        mov rdi, PARAM(0)
 29068                                          assert_vector(rdi)
 29068 00012083 803F22              <1>  cmp byte [%1], %2
 29068 00012086 0F8551040000        <1>  jne L_error_incorrect_type
 29069 0001208C 488B7528                        mov rsi, PARAM(1)
 29070                                          assert_integer(rsi)
 29070                              <1>  assert_rational(%1)
 29070 00012090 803E11              <2>  cmp byte [%1], %2
 29070 00012093 0F8544040000        <2>  jne L_error_incorrect_type
 29070 00012099 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 29070 0001209E 0F8539040000        <1>  jne L_error_incorrect_type
 29071 000120A4 488B5701                        mov rdx, qword [rdi + 1]
 29072 000120A8 488B4E01                        mov rcx, qword [rsi + 1]
 29073 000120AC 4839D1                          cmp rcx, rdx
 29074 000120AF 0F8DEE020000                    jge L_error_integer_range
 29075 000120B5 4883F900                        cmp rcx, 0
 29076 000120B9 0F8CE4020000                    jl L_error_integer_range
 29077 000120BF 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 29078                                          LEAVE
 29078 000120C4 C9                  <1>  leave
 29079 000120C5 C22000                          ret AND_KILL_FRAME(2)
 29080                                  
 29081                                  L_code_ptr_vector_set:
 29082                                          ENTER
 29082 000120C8 C8000000            <1>  enter 0, 0
 29082 000120CC 4883E4F0            <1>  and rsp, ~15
 29083 000120D0 48837D1803                      cmp COUNT, 3
 29084 000120D5 0F85CD030000                    jne L_error_arg_count_3
 29085 000120DB 488B7D20                        mov rdi, PARAM(0)
 29086                                          assert_vector(rdi)
 29086 000120DF 803F22              <1>  cmp byte [%1], %2
 29086 000120E2 0F85F5030000        <1>  jne L_error_incorrect_type
 29087 000120E8 488B7528                        mov rsi, PARAM(1)
 29088                                          assert_integer(rsi)
 29088                              <1>  assert_rational(%1)
 29088 000120EC 803E11              <2>  cmp byte [%1], %2
 29088 000120EF 0F85E8030000        <2>  jne L_error_incorrect_type
 29088 000120F5 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 29088 000120FA 0F85DD030000        <1>  jne L_error_incorrect_type
 29089 00012100 488B5701                        mov rdx, qword [rdi + 1]
 29090 00012104 488B4E01                        mov rcx, qword [rsi + 1]
 29091 00012108 4839D1                          cmp rcx, rdx
 29092 0001210B 0F8D92020000                    jge L_error_integer_range
 29093 00012111 4883F900                        cmp rcx, 0
 29094 00012115 0F8C88020000                    jl L_error_integer_range
 29095 0001211B 488B4530                        mov rax, PARAM(2)
 29096 0001211F 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 29097 00012124 48B8-                           mov rax, sob_void
 29097 00012126 [0000000000000000] 
 29098                                          LEAVE
 29098 0001212E C9                  <1>  leave
 29099 0001212F C22800                          ret AND_KILL_FRAME(3)
 29100                                  
 29101                                  L_code_ptr_string_set:
 29102                                          ENTER
 29102 00012132 C8000000            <1>  enter 0, 0
 29102 00012136 4883E4F0            <1>  and rsp, ~15
 29103 0001213A 48837D1803                      cmp COUNT, 3
 29104 0001213F 0F8563030000                    jne L_error_arg_count_3
 29105 00012145 488B7D20                        mov rdi, PARAM(0)
 29106                                          assert_string(rdi)
 29106 00012149 803F03              <1>  cmp byte [%1], %2
 29106 0001214C 0F858B030000        <1>  jne L_error_incorrect_type
 29107 00012152 488B7528                        mov rsi, PARAM(1)
 29108                                          assert_integer(rsi)
 29108                              <1>  assert_rational(%1)
 29108 00012156 803E11              <2>  cmp byte [%1], %2
 29108 00012159 0F857E030000        <2>  jne L_error_incorrect_type
 29108 0001215F 48837E0901          <1>  cmp qword [%1 + 1 + 8], 1
 29108 00012164 0F8573030000        <1>  jne L_error_incorrect_type
 29109 0001216A 488B5701                        mov rdx, qword [rdi + 1]
 29110 0001216E 488B4E01                        mov rcx, qword [rsi + 1]
 29111 00012172 4839D1                          cmp rcx, rdx
 29112 00012175 0F8D28020000                    jge L_error_integer_range
 29113 0001217B 4883F900                        cmp rcx, 0
 29114 0001217F 0F8C1E020000                    jl L_error_integer_range
 29115 00012185 488B4530                        mov rax, PARAM(2)
 29116                                          assert_char(rax)
 29116 00012189 803802              <1>  cmp byte [%1], %2
 29116 0001218C 0F854B030000        <1>  jne L_error_incorrect_type
 29117 00012192 8A4001                          mov al, byte [rax + 1]
 29118 00012195 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 29119 00012199 48B8-                           mov rax, sob_void
 29119 0001219B [0000000000000000] 
 29120                                          LEAVE
 29120 000121A3 C9                  <1>  leave
 29121 000121A4 C22800                          ret AND_KILL_FRAME(3)
 29122                                  
 29123                                  L_code_ptr_make_vector:
 29124                                          ENTER
 29124 000121A7 C8000000            <1>  enter 0, 0
 29124 000121AB 4883E4F0            <1>  and rsp, ~15
 29125 000121AF 48837D1802                      cmp COUNT, 2
 29126 000121B4 0F8584020000                    jne L_error_arg_count_2
 29127 000121BA 488B4D20                        mov rcx, PARAM(0)
 29128                                          assert_integer(rcx)
 29128                              <1>  assert_rational(%1)
 29128 000121BE 803911              <2>  cmp byte [%1], %2
 29128 000121C1 0F8516030000        <2>  jne L_error_incorrect_type
 29128 000121C7 4883790901          <1>  cmp qword [%1 + 1 + 8], 1
 29128 000121CC 0F850B030000        <1>  jne L_error_incorrect_type
 29129 000121D2 488B4901                        mov rcx, qword [rcx + 1]
 29130 000121D6 4883F900                        cmp rcx, 0
 29131 000121DA 0F8CC3010000                    jl L_error_integer_range
 29132 000121E0 488B5528                        mov rdx, PARAM(1)
 29133 000121E4 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 29134 000121EC E825EBFFFF                      call malloc
 29135 000121F1 C60022                          mov byte [rax], T_vector
 29136 000121F4 48894801                        mov qword [rax + 1], rcx
 29137 000121F8 41B800000000                    mov r8, 0
 29138                                  .L0:
 29139 000121FE 4939C8                          cmp r8, rcx
 29140 00012201 740A                            je .L1
 29141 00012203 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 29142 00012208 49FFC0                          inc r8
 29143 0001220B EBF1                            jmp .L0
 29144                                  .L1:
 29145                                          LEAVE
 29145 0001220D C9                  <1>  leave
 29146 0001220E C22000                          ret AND_KILL_FRAME(2)
 29147                                          
 29148                                  L_code_ptr_make_string:
 29149                                          ENTER
 29149 00012211 C8000000            <1>  enter 0, 0
 29149 00012215 4883E4F0            <1>  and rsp, ~15
 29150 00012219 48837D1802                      cmp COUNT, 2
 29151 0001221E 0F851A020000                    jne L_error_arg_count_2
 29152 00012224 488B4D20                        mov rcx, PARAM(0)
 29153                                          assert_integer(rcx)
 29153                              <1>  assert_rational(%1)
 29153 00012228 803911              <2>  cmp byte [%1], %2
 29153 0001222B 0F85AC020000        <2>  jne L_error_incorrect_type
 29153 00012231 4883790901          <1>  cmp qword [%1 + 1 + 8], 1
 29153 00012236 0F85A1020000        <1>  jne L_error_incorrect_type
 29154 0001223C 488B4901                        mov rcx, qword [rcx + 1]
 29155 00012240 4883F900                        cmp rcx, 0
 29156 00012244 0F8C59010000                    jl L_error_integer_range
 29157 0001224A 488B5528                        mov rdx, PARAM(1)
 29158                                          assert_char(rdx)
 29158 0001224E 803A02              <1>  cmp byte [%1], %2
 29158 00012251 0F8586020000        <1>  jne L_error_incorrect_type
 29159 00012257 8A5201                          mov dl, byte [rdx + 1]
 29160 0001225A 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 29161 0001225E E8B3EAFFFF                      call malloc
 29162 00012263 C60003                          mov byte [rax], T_string
 29163 00012266 48894801                        mov qword [rax + 1], rcx
 29164 0001226A 41B800000000                    mov r8, 0
 29165                                  .L0:
 29166 00012270 4939C8                          cmp r8, rcx
 29167 00012273 740A                            je .L1
 29168 00012275 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 29169 0001227A 49FFC0                          inc r8
 29170 0001227D EBF1                            jmp .L0
 29171                                  .L1:
 29172                                          LEAVE
 29172 0001227F C9                  <1>  leave
 29173 00012280 C22000                          ret AND_KILL_FRAME(2)
 29174                                  
 29175                                  L_code_ptr_numerator:
 29176                                          ENTER
 29176 00012283 C8000000            <1>  enter 0, 0
 29176 00012287 4883E4F0            <1>  and rsp, ~15
 29177 0001228B 48837D1801                      cmp COUNT, 1
 29178 00012290 0F8573010000                    jne L_error_arg_count_1
 29179 00012296 488B4520                        mov rax, PARAM(0)
 29180                                          assert_rational(rax)
 29180 0001229A 803811              <1>  cmp byte [%1], %2
 29180 0001229D 0F853A020000        <1>  jne L_error_incorrect_type
 29181 000122A3 488B7801                        mov rdi, qword [rax + 1]
 29182 000122A7 E8D1000000                      call make_integer
 29183                                          LEAVE
 29183 000122AC C9                  <1>  leave
 29184 000122AD C21800                          ret AND_KILL_FRAME(1)
 29185                                          
 29186                                  L_code_ptr_denominator:
 29187                                          ENTER
 29187 000122B0 C8000000            <1>  enter 0, 0
 29187 000122B4 4883E4F0            <1>  and rsp, ~15
 29188 000122B8 48837D1801                      cmp COUNT, 1
 29189 000122BD 0F8546010000                    jne L_error_arg_count_1
 29190 000122C3 488B4520                        mov rax, PARAM(0)
 29191                                          assert_rational(rax)
 29191 000122C7 803811              <1>  cmp byte [%1], %2
 29191 000122CA 0F850D020000        <1>  jne L_error_incorrect_type
 29192 000122D0 488B7809                        mov rdi, qword [rax + 1 + 8]
 29193 000122D4 E8A4000000                      call make_integer
 29194                                          LEAVE
 29194 000122D9 C9                  <1>  leave
 29195 000122DA C21800                          ret AND_KILL_FRAME(1)
 29196                                  
 29197                                  L_code_ptr_eq:
 29198                                  	ENTER
 29198 000122DD C8000000            <1>  enter 0, 0
 29198 000122E1 4883E4F0            <1>  and rsp, ~15
 29199 000122E5 48837D1802              	cmp COUNT, 2
 29200 000122EA 0F854E010000            	jne L_error_arg_count_2
 29201 000122F0 488B7D20                	mov rdi, PARAM(0)
 29202 000122F4 488B7528                	mov rsi, PARAM(1)
 29203 000122F8 4839F7                  	cmp rdi, rsi
 29204 000122FB 744A                    	je .L_eq_true
 29205 000122FD 8A17                    	mov dl, byte [rdi]
 29206 000122FF 3A16                    	cmp dl, byte [rsi]
 29207 00012301 7550                    	jne .L_eq_false
 29208 00012303 80FA02                  	cmp dl, T_char
 29209 00012306 7437                    	je .L_char
 29210 00012308 80FA04                  	cmp dl, T_symbol
 29211 0001230B 742A                    	je .L_symbol
 29212 0001230D 80FA12                  	cmp dl, T_real
 29213 00012310 741D                    	je .L_real
 29214 00012312 80FA11                  	cmp dl, T_rational
 29215 00012315 7402                    	je .L_rational
 29216 00012317 EB3A                    	jmp .L_eq_false
 29217                                  .L_rational:
 29218 00012319 488B4601                	mov rax, qword [rsi + 1]
 29219 0001231D 483B4701                	cmp rax, qword [rdi + 1]
 29220 00012321 7530                    	jne .L_eq_false
 29221 00012323 488B4609                	mov rax, qword [rsi + 1 + 8]
 29222 00012327 483B4709                	cmp rax, qword [rdi + 1 + 8]
 29223 0001232B 7526                    	jne .L_eq_false
 29224 0001232D EB18                    	jmp .L_eq_true
 29225                                  .L_real:
 29226 0001232F 488B4601                	mov rax, qword [rsi + 1]
 29227 00012333 483B4701                	cmp rax, qword [rdi + 1]
 29228                                  .L_symbol:
 29229                                  	; never reached, because symbols are static!
 29230                                  	; but I'm keeping it in case, I'll ever change
 29231                                  	; the implementation
 29232 00012337 488B4601                	mov rax, qword [rsi + 1]
 29233 0001233B 483B4701                	cmp rax, qword [rdi + 1]
 29234                                  .L_char:
 29235 0001233F 8A5E01                  	mov bl, byte [rsi + 1]
 29236 00012342 3A5F01                  	cmp bl, byte [rdi + 1]
 29237 00012345 750C                    	jne .L_eq_false
 29238                                  .L_eq_true:
 29239 00012347 48B8-                   	mov rax, sob_boolean_true
 29239 00012349 [0300000000000000] 
 29240 00012351 EB0A                    	jmp .L_eq_exit
 29241                                  .L_eq_false:
 29242 00012353 48B8-                   	mov rax, sob_boolean_false
 29242 00012355 [0200000000000000] 
 29243                                  .L_eq_exit:
 29244                                  	LEAVE
 29244 0001235D C9                  <1>  leave
 29245 0001235E C22000                  	ret AND_KILL_FRAME(2)
 29246                                  
 29247                                  make_real:
 29248                                          ENTER
 29248 00012361 C8000000            <1>  enter 0, 0
 29248 00012365 4883E4F0            <1>  and rsp, ~15
 29249 00012369 BF09000000                      mov rdi, (1 + 8)
 29250 0001236E E8A3E9FFFF                      call malloc
 29251 00012373 C60012                          mov byte [rax], T_real
 29252 00012376 F20F114001                      movsd qword [rax + 1], xmm0
 29253                                          LEAVE
 29253 0001237B C9                  <1>  leave
 29254 0001237C C3                              ret
 29255                                          
 29256                                  make_integer:
 29257                                          ENTER
 29257 0001237D C8000000            <1>  enter 0, 0
 29257 00012381 4883E4F0            <1>  and rsp, ~15
 29258 00012385 4889FE                          mov rsi, rdi
 29259 00012388 BF11000000                      mov rdi, (1 + 8 + 8)
 29260 0001238D E884E9FFFF                      call malloc
 29261 00012392 C60011                          mov byte [rax], T_rational
 29262 00012395 48897001                        mov qword [rax + 1], rsi
 29263 00012399 48C7400901000000                mov qword [rax + 1 + 8], 1
 29264                                          LEAVE
 29264 000123A1 C9                  <1>  leave
 29265 000123A2 C3                              ret
 29266                                          
 29267                                  L_error_integer_range:
 29268 000123A3 488B3C25[00000000]              mov rdi, qword [stderr]
 29269 000123AB 48BE-                           mov rsi, fmt_integer_range
 29269 000123AD [AC05000000000000] 
 29270 000123B5 B800000000                      mov rax, 0
 29271                                  	ENTER
 29271 000123BA C8000000            <1>  enter 0, 0
 29271 000123BE 4883E4F0            <1>  and rsp, ~15
 29272 000123C2 E8(00000000)                    call fprintf
 29273                                  	LEAVE
 29273 000123C7 C9                  <1>  leave
 29274 000123C8 48C7C0FBFFFFFF                  mov rax, -5
 29275 000123CF E8(00000000)                    call exit
 29276                                  
 29277                                  L_error_arg_count_0:
 29278 000123D4 488B3C25[00000000]              mov rdi, qword [stderr]
 29279 000123DC 48BE-                           mov rsi, fmt_arg_count_0
 29279 000123DE [AA04000000000000] 
 29280 000123E6 488B5518                        mov rdx, COUNT
 29281 000123EA B800000000                      mov rax, 0
 29282                                  	ENTER
 29282 000123EF C8000000            <1>  enter 0, 0
 29282 000123F3 4883E4F0            <1>  and rsp, ~15
 29283 000123F7 E8(00000000)                    call fprintf
 29284                                  	LEAVE
 29284 000123FC C9                  <1>  leave
 29285 000123FD 48C7C0FDFFFFFF                  mov rax, -3
 29286 00012404 E8(00000000)                    call exit
 29287                                  
 29288                                  L_error_arg_count_1:
 29289 00012409 488B3C25[00000000]              mov rdi, qword [stderr]
 29290 00012411 48BE-                           mov rsi, fmt_arg_count_1
 29290 00012413 [D204000000000000] 
 29291 0001241B 488B5518                        mov rdx, COUNT
 29292 0001241F B800000000                      mov rax, 0
 29293                                  	ENTER
 29293 00012424 C8000000            <1>  enter 0, 0
 29293 00012428 4883E4F0            <1>  and rsp, ~15
 29294 0001242C E8(00000000)                    call fprintf
 29295                                  	LEAVE
 29295 00012431 C9                  <1>  leave
 29296 00012432 48C7C0FDFFFFFF                  mov rax, -3
 29297 00012439 E8(00000000)                    call exit
 29298                                  
 29299                                  L_error_arg_count_2:
 29300 0001243E 488B3C25[00000000]              mov rdi, qword [stderr]
 29301 00012446 48BE-                           mov rsi, fmt_arg_count_2
 29301 00012448 [3805000000000000] 
 29302 00012450 488B5518                        mov rdx, COUNT
 29303 00012454 B800000000                      mov rax, 0
 29304                                  	ENTER
 29304 00012459 C8000000            <1>  enter 0, 0
 29304 0001245D 4883E4F0            <1>  and rsp, ~15
 29305 00012461 E8(00000000)                    call fprintf
 29306                                  	LEAVE
 29306 00012466 C9                  <1>  leave
 29307 00012467 48C7C0FDFFFFFF                  mov rax, -3
 29308 0001246E E8(00000000)                    call exit
 29309                                  
 29310                                  L_error_arg_count_12:
 29311 00012473 488B3C25[00000000]              mov rdi, qword [stderr]
 29312 0001247B 48BE-                           mov rsi, fmt_arg_count_12
 29312 0001247D [F804000000000000] 
 29313 00012485 488B5518                        mov rdx, COUNT
 29314 00012489 B800000000                      mov rax, 0
 29315                                  	ENTER
 29315 0001248E C8000000            <1>  enter 0, 0
 29315 00012492 4883E4F0            <1>  and rsp, ~15
 29316 00012496 E8(00000000)                    call fprintf
 29317                                  	LEAVE
 29317 0001249B C9                  <1>  leave
 29318 0001249C 48C7C0FDFFFFFF                  mov rax, -3
 29319 000124A3 E8(00000000)                    call exit
 29320                                  
 29321                                  L_error_arg_count_3:
 29322 000124A8 488B3C25[00000000]              mov rdi, qword [stderr]
 29323 000124B0 48BE-                           mov rsi, fmt_arg_count_3
 29323 000124B2 [5F05000000000000] 
 29324 000124BA 488B5518                        mov rdx, COUNT
 29325 000124BE B800000000                      mov rax, 0
 29326                                  	ENTER
 29326 000124C3 C8000000            <1>  enter 0, 0
 29326 000124C7 4883E4F0            <1>  and rsp, ~15
 29327 000124CB E8(00000000)                    call fprintf
 29328                                  	LEAVE
 29328 000124D0 C9                  <1>  leave
 29329 000124D1 48C7C0FDFFFFFF                  mov rax, -3
 29330 000124D8 E8(00000000)                    call exit
 29331                                          
 29332                                  L_error_incorrect_type:
 29333 000124DD 488B3C25[00000000]              mov rdi, qword [stderr]
 29334 000124E5 48BE-                           mov rsi, fmt_type
 29334 000124E7 [8805000000000000] 
 29335 000124EF B800000000                      mov rax, 0
 29336                                  	ENTER
 29336 000124F4 C8000000            <1>  enter 0, 0
 29336 000124F8 4883E4F0            <1>  and rsp, ~15
 29337 000124FC E8(00000000)                    call fprintf
 29338                                  	LEAVE
 29338 00012501 C9                  <1>  leave
 29339 00012502 48C7C0FCFFFFFF                  mov rax, -4
 29340 00012509 E8(00000000)                    call exit
 29341                                  
 29342                                  L_error_division_by_zero:
 29343 0001250E 488B3C25[00000000]              mov rdi, qword [stderr]
 29344 00012516 48BE-                           mov rsi, fmt_division_by_zero
 29344 00012518 [C905000000000000] 
 29345 00012520 B800000000                      mov rax, 0
 29346                                  	ENTER
 29346 00012525 C8000000            <1>  enter 0, 0
 29346 00012529 4883E4F0            <1>  and rsp, ~15
 29347 0001252D E8(00000000)                    call fprintf
 29348                                  	LEAVE
 29348 00012532 C9                  <1>  leave
 29349 00012533 48C7C0F8FFFFFF                  mov rax, -8
 29350 0001253A E8(00000000)                    call exit
 29351                                  
 29352                                  section .data
 29353                                  fmt_char:
 29354 000004A7 256300                          db `%c\0`
 29355                                  fmt_arg_count_0:
 29356 000004AA 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 29356 000004B3 74696E67207A65726F-
 29356 000004BC 20617267756D656E74-
 29356 000004C5 732E20466F756E6420-
 29356 000004CE 25640A00           
 29357                                  fmt_arg_count_1:
 29358 000004D2 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 29358 000004DB 74696E67206F6E6520-
 29358 000004E4 617267756D656E742E-
 29358 000004ED 20466F756E64202564-
 29358 000004F6 0A00               
 29359                                  fmt_arg_count_12:
 29360 000004F8 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 29360 00000501 74696E67206F6E6520-
 29360 0000050A 726571756972656420-
 29360 00000513 616E64206F6E65206F-
 29360 0000051C 7074696F6E616C2061-
 29360 00000525 7267756D656E742E20-
 29360 0000052E 466F756E642025640A-
 29360 00000537 00                 
 29361                                  fmt_arg_count_2:
 29362 00000538 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 29362 00000541 74696E672074776F20-
 29362 0000054A 617267756D656E7473-
 29362 00000553 2E20466F756E642025-
 29362 0000055C 640A00             
 29363                                  fmt_arg_count_3:
 29364 0000055F 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 29364 00000568 74696E672074687265-
 29364 00000571 6520617267756D656E-
 29364 0000057A 74732E20466F756E64-
 29364 00000583 2025640A00         
 29365                                  fmt_type:
 29366 00000588 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 29366 00000591 696F6E207061737365-
 29366 0000059A 6420696E636F727265-
 29366 000005A3 637420747970650A00 
 29367                                  fmt_integer_range:
 29368 000005AC 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 29368 000005B5 7265637420696E7465-
 29368 000005BE 6765722072616E6765-
 29368 000005C7 0A00               
 29369                                  fmt_division_by_zero:
 29370 000005C9 212121204469766973-             db `!!! Division by zero\n\0`
 29370 000005D2 696F6E206279207A65-
 29370 000005DB 726F0A00           
 29371                                  fmt_scheme_error_part_1:
 29372 000005DF 0A2121212054686520-             db `\n!!! The procedure \0`
 29372 000005E8 70726F636564757265-
 29372 000005F1 2000               
 29373                                  fmt_scheme_error_part_2:
 29374 000005F3 2061736B656420746F-             db ` asked to terminate the program\n`
 29374 000005FC 207465726D696E6174-
 29374 00000605 65207468652070726F-
 29374 0000060E 6772616D0A         
 29375 00000613 202020207769746820-             db `    with the following message:\n\n\0`
 29375 0000061C 74686520666F6C6C6F-
 29375 00000625 77696E67206D657373-
 29375 0000062E 6167653A0A0A00     
 29376                                  fmt_scheme_error_part_3:
 29377 00000635 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 29377 0000063E 210A0A00           
